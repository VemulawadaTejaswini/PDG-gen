Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) [ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_3 $$ if (increasePkBy < 1)[ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_3 $$ if (increasePkBy < 1)[ FD ]
Line_3 $$ if (increasePkBy < 1)-->Line_3 $$ increasePkBy = 1[ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_3 $$ increasePkBy = 1[ FD ]
Line_3 $$ increasePkBy = 1-->Line_3 $$ increasePkBy = 1[ FD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_4 $$ String where = "where eoentity_name = '" + entityName + "'"[ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_5 $$ if (false) [ CD ]
Line_5 $$ if (false) -->Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()[ CD ]
Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()-->Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()[ CD ]
Line_5 $$ if (false) -->Line_7 $$ ec.lock()[ CD ]
Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()-->Line_7 $$ ec.lock()[ FD ]
Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)-->Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)[ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)[ FD ]
Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()-->Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)[ FD ]
Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)-->Line_10 $$ dbc.lock()[ FD ]
Line_12 $$ EOEntity entity = ERXEOAccessUtilities.entityNamed(ec, entityName)-->Line_12 $$ EOEntity entity = ERXEOAccessUtilities.entityNamed(ec, entityName)[ CD ]
Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()-->Line_12 $$ EOEntity entity = ERXEOAccessUtilities.entityNamed(ec, entityName)[ FD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_12 $$ EOEntity entity = ERXEOAccessUtilities.entityNamed(ec, entityName)[ FD ]
Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)-->Line_13 $$ EOAdaptorChannel channel = (EOAdaptorChannel) dbc.adaptorContext().channels().lastObject()[ FD ]
Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)-->Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)[ CD ]
Line_13 $$ EOAdaptorChannel channel = (EOAdaptorChannel) dbc.adaptorContext().channels().lastObject()-->Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)[ FD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)[ FD ]
Line_3 $$ increasePkBy = 1-->Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)[ FD ]
Line_12 $$ EOEntity entity = ERXEOAccessUtilities.entityNamed(ec, entityName)-->Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)[ FD ]
Line_14 $$ NSArray result = channel.primaryKeysForNewRowsWithEntity(increasePkBy, entity)-->Line_15 $$ return (Long) ((NSDictionary) result.lastObject()).allValues().lastObject()[ FD ]
Line_9 $$ EODatabaseContext dbc = ERXEOAccessUtilities.databaseContextForEntityNamed((EOObjectStoreCoordinator) ec.rootObjectStore(), entityName)-->Line_17 $$ dbc.unlock()[ FD ]
Line_6 $$ EOEditingContext ec = ERXEC.newEditingContext()-->Line_20 $$ ec.unlock()[ FD ]
Line_5 $$ if (false) -->Line_23 $$ ERXJDBCConnectionBroker broker = ERXJDBCConnectionBroker.connectionBrokerForEntityNamed(entityName)[ CD ]
Line_23 $$ ERXJDBCConnectionBroker broker = ERXJDBCConnectionBroker.connectionBrokerForEntityNamed(entityName)-->Line_23 $$ ERXJDBCConnectionBroker broker = ERXJDBCConnectionBroker.connectionBrokerForEntityNamed(entityName)[ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_23 $$ ERXJDBCConnectionBroker broker = ERXJDBCConnectionBroker.connectionBrokerForEntityNamed(entityName)[ FD ]
Line_5 $$ if (false) -->Line_24 $$ Connection con = broker.getConnection()[ CD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_24 $$ Connection con = broker.getConnection()[ CD ]
Line_23 $$ ERXJDBCConnectionBroker broker = ERXJDBCConnectionBroker.connectionBrokerForEntityNamed(entityName)-->Line_24 $$ Connection con = broker.getConnection()[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_27 $$ con.setAutoCommit(false)[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_28 $$ con.setReadOnly(false)[ FD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ FD ]
Line_32 $$ for (int tries = 0; tries < count; tries++) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ CD ]
Line_32 $$ for (int tries = 0; tries < count; tries++) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ CD ]
Line_32 $$ for (int tries = 0; tries < count; tries++) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ FD ]
Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)-->Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)[ CD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_35 $$ con.commit()[ FD ]
Line_36 $$ boolean hasNext = resultSet.next()-->Line_36 $$ boolean hasNext = resultSet.next()[ CD ]
Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)-->Line_36 $$ boolean hasNext = resultSet.next()[ FD ]
Line_38 $$ if (hasNext) -->Line_39 $$ pk = resultSet.getLong("pk_value")[ CD ]
Line_37 $$ long pk = 1-->Line_39 $$ pk = resultSet.getLong("pk_value")[ FD ]
Line_39 $$ pk = resultSet.getLong("pk_value")-->Line_39 $$ pk = resultSet.getLong("pk_value")[ FD ]
Line_39 $$ pk = resultSet.getLong("pk_value")-->Line_39 $$ pk = resultSet.getLong("pk_value")[ CD ]
Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)-->Line_39 $$ pk = resultSet.getLong("pk_value")[ FD ]
Line_38 $$ if (hasNext) -->Line_40 $$ con.createStatement().executeUpdate("update pk_table set pk_value = " + (pk + increasePkBy) + " " + where)[ CD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_40 $$ con.createStatement().executeUpdate("update pk_table set pk_value = " + (pk + increasePkBy) + " " + where)[ FD ]
Line_38 $$ if (hasNext) -->Line_42 $$ pk = maxIdFromTable(entityName)[ CD ]
Line_37 $$ long pk = 1-->Line_42 $$ pk = maxIdFromTable(entityName)[ FD ]
Line_39 $$ pk = resultSet.getLong("pk_value")-->Line_42 $$ pk = maxIdFromTable(entityName)[ FD ]
Line_42 $$ pk = maxIdFromTable(entityName)-->Line_42 $$ pk = maxIdFromTable(entityName)[ FD ]
Line_42 $$ pk = maxIdFromTable(entityName)-->Line_42 $$ pk = maxIdFromTable(entityName)[ CD ]
Line_2 $$ private Long getNextPkValueForEntityIncreaseBy(String entityName, int count, int increasePkBy) -->Line_42 $$ pk = maxIdFromTable(entityName)[ FD ]
Line_38 $$ if (hasNext) -->Line_43 $$ con.createStatement().executeUpdate("insert into pk_table (eoentity_name, pk_value) values ('" + entityName + "', " + (pk + increasePkBy) + ")")[ CD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_43 $$ con.createStatement().executeUpdate("insert into pk_table (eoentity_name, pk_value) values ('" + entityName + "', " + (pk + increasePkBy) + ")")[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_45 $$ con.commit()[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_48 $$ String s = ex.getMessage().toLowerCase()[ CD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_49 $$ boolean creationError = (s.indexOf("error code 116") != -1)[ FD ]
Line_49 $$ boolean creationError = (s.indexOf("error code 116") != -1)-->Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)[ FD ]
Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)-->Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)[ FD ]
Line_49 $$ boolean creationError = (s.indexOf("error code 116") != -1)-->Line_51 $$ creationError |= s.indexOf("ora-00942") != -1[ FD ]
Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)-->Line_51 $$ creationError |= s.indexOf("ora-00942") != -1[ FD ]
Line_51 $$ creationError |= s.indexOf("ora-00942") != -1-->Line_51 $$ creationError |= s.indexOf("ora-00942") != -1[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_51 $$ creationError |= s.indexOf("ora-00942") != -1[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_54 $$ con.rollback()[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_56 $$ con.createStatement().executeUpdate("create table pk_table (eoentity_name varchar(100) not null, pk_value integer)")[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_57 $$ con.createStatement().executeUpdate("alter table pk_table add primary key (eoentity_name)")[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_58 $$ con.commit()[ FD ]
Line_23 $$ ERXJDBCConnectionBroker broker = ERXJDBCConnectionBroker.connectionBrokerForEntityNamed(entityName)-->Line_68 $$ broker.freeConnection(con)[ FD ]
Line_24 $$ Connection con = broker.getConnection()-->Line_68 $$ broker.freeConnection(con)[ FD ]
Line_32 $$ for (int tries = 0; tries < count; tries++) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ FD ]
Line_32 $$ for (int tries = 0; tries < count; tries++) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ FD ]
Line_32 $$ for (int tries = 0; tries < count; tries++) -->Line_32 $$ for (int tries = 0; tries < count; tries++) [ FD ]
Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)-->Line_36 $$ boolean hasNext = resultSet.next()[ FD ]
Line_34 $$ ResultSet resultSet = con.createStatement().executeQuery("select pk_value from pk_table " + where)-->Line_39 $$ pk = resultSet.getLong("pk_value")[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_49 $$ boolean creationError = (s.indexOf("error code 116") != -1)[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_50 $$ creationError |= (s.indexOf("pk_table") != -1 && s.indexOf("does not exist") != -1)[ FD ]
Line_48 $$ String s = ex.getMessage().toLowerCase()-->Line_51 $$ creationError |= s.indexOf("ora-00942") != -1[ FD ]
