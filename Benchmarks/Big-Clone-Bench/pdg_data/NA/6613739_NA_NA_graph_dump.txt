Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static MappedObject sendHttpRequestToUrl(URL url, String method) throws Exception [ CD ]
Line_2 $$ private static MappedObject sendHttpRequestToUrl(URL url, String method) throws Exception -->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_5 $$ connection.setRequestMethod(method)[ FD ]
Line_2 $$ private static MappedObject sendHttpRequestToUrl(URL url, String method) throws Exception -->Line_5 $$ connection.setRequestMethod(method)[ FD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_6 $$ connection.connect()[ FD ]
Line_7 $$ InputStream is = connection.getInputStream()-->Line_7 $$ InputStream is = connection.getInputStream()[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_7 $$ InputStream is = connection.getInputStream()[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_10 $$ String line = null-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_8 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(is))-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ buffer.append(line)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder()-->Line_12 $$ buffer.append(line)[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ buffer.append(line)[ FD ]
Line_10 $$ String line = null-->Line_12 $$ buffer.append(line)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder()-->Line_14 $$ System.out.println("Read: " + buffer.toString())[ FD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_15 $$ connection.disconnect()[ FD ]
Line_16 $$ JAXBContext context = JAXBContext.newInstance(MappedObject.class)-->Line_16 $$ JAXBContext context = JAXBContext.newInstance(MappedObject.class)[ CD ]
Line_17 $$ Unmarshaller unmarshaller = context.createUnmarshaller()-->Line_17 $$ Unmarshaller unmarshaller = context.createUnmarshaller()[ CD ]
Line_16 $$ JAXBContext context = JAXBContext.newInstance(MappedObject.class)-->Line_17 $$ Unmarshaller unmarshaller = context.createUnmarshaller()[ FD ]
Line_17 $$ Unmarshaller unmarshaller = context.createUnmarshaller()-->Line_18 $$ MappedObject mapped = (MappedObject) unmarshaller.unmarshal(new StringReader(buffer.toString()))[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder()-->Line_18 $$ MappedObject mapped = (MappedObject) unmarshaller.unmarshal(new StringReader(buffer.toString()))[ FD ]
Line_2 $$ private static MappedObject sendHttpRequestToUrl(URL url, String method) throws Exception -->Line_23 $$ throw new Exception("Could not establish connection to " + url.toExternalForm())[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ buffer.append(line)[ FD ]
