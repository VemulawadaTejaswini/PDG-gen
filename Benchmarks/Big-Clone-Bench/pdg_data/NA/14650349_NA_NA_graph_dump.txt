Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private ArrayList<XSPFTrackInfo> getPlaylist() [ CD ]
Line_6 $$ if (mAlternateConn) -->Line_7 $$ urlString += "&api_key=9d1bbaef3b443eb97973d44181d04e4b"[ CD ]
Line_5 $$ String urlString = "http://" + mBaseURL + "/xspf.php?sk=" + mSession + "&discovery=0&desktop=1.4.1.57486"-->Line_7 $$ urlString += "&api_key=9d1bbaef3b443eb97973d44181d04e4b"[ FD ]
Line_7 $$ urlString += "&api_key=9d1bbaef3b443eb97973d44181d04e4b"-->Line_7 $$ urlString += "&api_key=9d1bbaef3b443eb97973d44181d04e4b"[ FD ]
Line_6 $$ if (mAlternateConn) -->Line_8 $$ Log.d(TAG, "Using alternate connection method")[ CD ]
Line_10 $$ URL url = new URL(urlString)-->Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.connect()[ FD ]
Line_13 $$ InputStream is = conn.getInputStream()-->Line_13 $$ InputStream is = conn.getInputStream()[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ InputStream is = conn.getInputStream()[ FD ]
Line_14 $$ DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance()-->Line_14 $$ DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance()[ CD ]
Line_15 $$ DocumentBuilder db = dbFac.newDocumentBuilder()-->Line_15 $$ DocumentBuilder db = dbFac.newDocumentBuilder()[ CD ]
Line_14 $$ DocumentBuilderFactory dbFac = DocumentBuilderFactory.newInstance()-->Line_15 $$ DocumentBuilder db = dbFac.newDocumentBuilder()[ FD ]
Line_16 $$ Document doc = db.parse(is)-->Line_16 $$ Document doc = db.parse(is)[ CD ]
Line_15 $$ DocumentBuilder db = dbFac.newDocumentBuilder()-->Line_16 $$ Document doc = db.parse(is)[ FD ]
Line_13 $$ InputStream is = conn.getInputStream()-->Line_16 $$ Document doc = db.parse(is)[ FD ]
Line_17 $$ Element root = doc.getDocumentElement()-->Line_17 $$ Element root = doc.getDocumentElement()[ CD ]
Line_16 $$ Document doc = db.parse(is)-->Line_17 $$ Element root = doc.getDocumentElement()[ FD ]
Line_18 $$ NodeList titleNs = root.getElementsByTagName("title")-->Line_18 $$ NodeList titleNs = root.getElementsByTagName("title")[ CD ]
Line_17 $$ Element root = doc.getDocumentElement()-->Line_18 $$ NodeList titleNs = root.getElementsByTagName("title")[ FD ]
Line_18 $$ NodeList titleNs = root.getElementsByTagName("title")-->Line_20 $$ if (titleNs.getLength() > 0) [ FD ]
Line_20 $$ if (titleNs.getLength() > 0) -->Line_21 $$ Element titleElement = (Element) titleNs.item(0)[ CD ]
Line_18 $$ NodeList titleNs = root.getElementsByTagName("title")-->Line_21 $$ Element titleElement = (Element) titleNs.item(0)[ FD ]
Line_20 $$ if (titleNs.getLength() > 0) -->Line_22 $$ String res = ""[ CD ]
Line_20 $$ if (titleNs.getLength() > 0) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ CD ]
Line_20 $$ if (titleNs.getLength() > 0) -->Line_20 $$ if (titleNs.getLength() > 0) [ CD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ CD ]
Line_21 $$ Element titleElement = (Element) titleNs.item(0)-->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ CD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ CD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_24 $$ Node item = titleElement.getChildNodes().item(i)[ CD ]
Line_24 $$ Node item = titleElement.getChildNodes().item(i)-->Line_24 $$ Node item = titleElement.getChildNodes().item(i)[ CD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_24 $$ Node item = titleElement.getChildNodes().item(i)[ FD ]
Line_21 $$ Element titleElement = (Element) titleNs.item(0)-->Line_24 $$ Node item = titleElement.getChildNodes().item(i)[ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_25 $$ if (item.getNodeType() == Node.TEXT_NODE)[ CD ]
Line_24 $$ Node item = titleElement.getChildNodes().item(i)-->Line_25 $$ if (item.getNodeType() == Node.TEXT_NODE)[ FD ]
Line_25 $$ if (item.getNodeType() == Node.TEXT_NODE)-->Line_25 $$ res += item.getNodeValue()[ CD ]
Line_25 $$ res += item.getNodeValue()-->Line_25 $$ res += item.getNodeValue()[ FD ]
Line_22 $$ String res = ""-->Line_25 $$ res += item.getNodeValue()[ FD ]
Line_25 $$ res += item.getNodeValue()-->Line_25 $$ res += item.getNodeValue()[ CD ]
Line_24 $$ Node item = titleElement.getChildNodes().item(i)-->Line_25 $$ res += item.getNodeValue()[ FD ]
Line_20 $$ if (titleNs.getLength() > 0) -->Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")[ CD ]
Line_19 $$ String stationName = "<unknown station>"-->Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")[ FD ]
Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")-->Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")[ FD ]
Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")-->Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")[ CD ]
Line_25 $$ res += item.getNodeValue()-->Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")[ FD ]
Line_22 $$ String res = ""-->Line_27 $$ stationName = URLDecoder.decode(res, "UTF-8")[ FD ]
Line_29 $$ NodeList tracks = doc.getElementsByTagName("track")-->Line_29 $$ NodeList tracks = doc.getElementsByTagName("track")[ CD ]
Line_16 $$ Document doc = db.parse(is)-->Line_29 $$ NodeList tracks = doc.getElementsByTagName("track")[ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_29 $$ NodeList tracks = doc.getElementsByTagName("track")-->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ CD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ CD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_30 $$ ArrayList<XSPFTrackInfo> result = new ArrayList<XSPFTrackInfo>()-->Line_32 $$ result.add(new XSPFTrackInfo(stationName, (Element) tracks.item(i)))[ FD ]
Line_29 $$ NodeList tracks = doc.getElementsByTagName("track")-->Line_32 $$ result.add(new XSPFTrackInfo(stationName, (Element) tracks.item(i)))[ FD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_32 $$ result.add(new XSPFTrackInfo(stationName, (Element) tracks.item(i)))[ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_32 $$ result.add(new XSPFTrackInfo(stationName, (Element) tracks.item(i)))[ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) [ FD ]
Line_23 $$ for (int i = 0; i < titleElement.getChildNodes().getLength(); i++) -->Line_24 $$ Node item = titleElement.getChildNodes().item(i)[ FD ]
Line_24 $$ Node item = titleElement.getChildNodes().item(i)-->Line_25 $$ if (item.getNodeType() == Node.TEXT_NODE)[ FD ]
Line_24 $$ Node item = titleElement.getChildNodes().item(i)-->Line_25 $$ res += item.getNodeValue()[ FD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try [ FD ]
Line_31 $$ for (int i = 0; i < tracks.getLength(); i++) try -->Line_32 $$ result.add(new XSPFTrackInfo(stationName, (Element) tracks.item(i)))[ FD ]
