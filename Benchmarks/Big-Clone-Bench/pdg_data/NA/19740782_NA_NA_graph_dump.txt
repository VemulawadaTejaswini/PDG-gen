Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException [ CD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_3 $$ ARP parser = new ARP()[ CD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_4 $$ parser.getHandlers().setStatementHandler(handler)[ CD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_4 $$ parser.getHandlers().setStatementHandler(handler)[ FD ]
Line_3 $$ ARP parser = new ARP()-->Line_4 $$ parser.getHandlers().setStatementHandler(handler)[ FD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_5 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_5 $$ URLConnection conn = new URL(url).openConnection()-->Line_5 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_6 $$ String encoding = conn.getContentEncoding()[ CD ]
Line_6 $$ String encoding = conn.getContentEncoding()-->Line_6 $$ String encoding = conn.getContentEncoding()[ CD ]
Line_5 $$ URLConnection conn = new URL(url).openConnection()-->Line_6 $$ String encoding = conn.getContentEncoding()[ FD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_7 $$ InputStream in = null[ CD ]
Line_7 $$ InputStream in = null-->Line_9 $$ in = conn.getInputStream()[ FD ]
Line_9 $$ in = conn.getInputStream()-->Line_9 $$ in = conn.getInputStream()[ FD ]
Line_9 $$ in = conn.getInputStream()-->Line_9 $$ in = conn.getInputStream()[ CD ]
Line_5 $$ URLConnection conn = new URL(url).openConnection()-->Line_9 $$ in = conn.getInputStream()[ FD ]
Line_6 $$ String encoding = conn.getContentEncoding()-->Line_10 $$ if (encoding == null)[ FD ]
Line_10 $$ if (encoding == null)-->Line_10 $$ parser.load(in, url)[ CD ]
Line_3 $$ ARP parser = new ARP()-->Line_10 $$ parser.load(in, url)[ FD ]
Line_7 $$ InputStream in = null-->Line_10 $$ parser.load(in, url)[ FD ]
Line_9 $$ in = conn.getInputStream()-->Line_10 $$ parser.load(in, url)[ FD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_10 $$ parser.load(in, url)[ FD ]
Line_10 $$ if (encoding == null)-->Line_10 $$ parser.load(new InputStreamReader(in, encoding), url)[ CD ]
Line_3 $$ ARP parser = new ARP()-->Line_10 $$ parser.load(new InputStreamReader(in, encoding), url)[ FD ]
Line_2 $$ public static void parseRDFXML(String url, StatementHandler handler) throws IOException -->Line_10 $$ parser.load(new InputStreamReader(in, encoding), url)[ FD ]
Line_7 $$ InputStream in = null-->Line_11 $$ in.close()[ FD ]
Line_9 $$ in = conn.getInputStream()-->Line_11 $$ in.close()[ FD ]
Line_7 $$ InputStream in = null-->Line_15 $$ if (in != null)[ FD ]
Line_9 $$ in = conn.getInputStream()-->Line_15 $$ if (in != null)[ FD ]
Line_15 $$ if (in != null)-->Line_15 $$ in.close()[ CD ]
Line_7 $$ InputStream in = null-->Line_15 $$ in.close()[ FD ]
Line_9 $$ in = conn.getInputStream()-->Line_15 $$ in.close()[ FD ]
