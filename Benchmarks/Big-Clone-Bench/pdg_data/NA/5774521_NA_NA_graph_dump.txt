Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static URL lookForDefaultThemeFile(String aFilename) [ CD ]
Line_4 $$ XPathFactory fabrique = XPathFactory.newInstance()-->Line_4 $$ XPathFactory fabrique = XPathFactory.newInstance()[ CD ]
Line_5 $$ XPath environnement = fabrique.newXPath()-->Line_5 $$ XPath environnement = fabrique.newXPath()[ CD ]
Line_4 $$ XPathFactory fabrique = XPathFactory.newInstance()-->Line_5 $$ XPath environnement = fabrique.newXPath()[ FD ]
Line_6 $$ URL url = new URL("file:" + aFilename)-->Line_7 $$ InputSource source = new InputSource(url.openStream())[ FD ]
Line_8 $$ XPathExpression expression-->Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")[ FD ]
Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")-->Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")[ FD ]
Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")-->Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")[ CD ]
Line_5 $$ XPath environnement = fabrique.newXPath()-->Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")[ FD ]
Line_10 $$ String resultat = expression.evaluate(source)-->Line_10 $$ String resultat = expression.evaluate(source)[ CD ]
Line_8 $$ XPathExpression expression-->Line_10 $$ String resultat = expression.evaluate(source)[ FD ]
Line_9 $$ expression = environnement.compile("/alloy/instance/@filename")-->Line_10 $$ String resultat = expression.evaluate(source)[ FD ]
Line_7 $$ InputSource source = new InputSource(url.openStream())-->Line_10 $$ String resultat = expression.evaluate(source)[ FD ]
Line_13 $$ IPath themePath = path.removeFileExtension().addFileExtension("thm")-->Line_13 $$ IPath themePath = path.removeFileExtension().addFileExtension("thm")[ CD ]
Line_12 $$ IPath path = new Path(resultat)-->Line_13 $$ IPath themePath = path.removeFileExtension().addFileExtension("thm")[ FD ]
Line_14 $$ File themeFile = themePath.toFile()-->Line_14 $$ File themeFile = themePath.toFile()[ CD ]
Line_13 $$ IPath themePath = path.removeFileExtension().addFileExtension("thm")-->Line_14 $$ File themeFile = themePath.toFile()[ FD ]
Line_14 $$ File themeFile = themePath.toFile()-->Line_15 $$ if (themeFile.exists()) [ FD ]
Line_15 $$ if (themeFile.exists()) -->Line_15 $$ if (themeFile.exists()) [ CD ]
Line_14 $$ File themeFile = themePath.toFile()-->Line_15 $$ if (themeFile.exists()) [ FD ]
Line_15 $$ if (themeFile.exists()) -->Line_16 $$ AlloyPlugin.getDefault().logInfo("Found default theme " + themeFile)[ CD ]
Line_15 $$ if (themeFile.exists()) -->Line_17 $$ return themeFile.toURI().toURL()[ CD ]
Line_17 $$ return themeFile.toURI().toURL()-->Line_17 $$ return themeFile.toURI().toURL()[ CD ]
Line_14 $$ File themeFile = themePath.toFile()-->Line_17 $$ return themeFile.toURI().toURL()[ FD ]
Line_2 $$ private static URL lookForDefaultThemeFile(String aFilename) -->Line_26 $$ return null[ CD ]
