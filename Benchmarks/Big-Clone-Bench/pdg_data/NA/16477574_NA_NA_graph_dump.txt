Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static ArrayList search(String query) throws Exception [ CD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_3 $$ ArrayList list = new ArrayList()[ CD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_4 $$ String url = "http://hypem.com/playlist/search/" + query + "/xml/1/list.xspf"[ CD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection()[ CD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_6 $$ conn.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection()-->Line_6 $$ conn.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)")[ FD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_7 $$ XmlNode node = XmlLoader.load(conn.getInputStream())[ CD ]
Line_7 $$ XmlNode node = XmlLoader.load(conn.getInputStream())-->Line_7 $$ XmlNode node = XmlLoader.load(conn.getInputStream())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) (new URL(url)).openConnection()-->Line_7 $$ XmlNode node = XmlLoader.load(conn.getInputStream())[ FD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_8 $$ XmlNode tracks[] = node.getFirstChild("trackList").getChild("track")[ CD ]
Line_8 $$ XmlNode tracks[] = node.getFirstChild("trackList").getChild("track")-->Line_8 $$ XmlNode tracks[] = node.getFirstChild("trackList").getChild("track")[ CD ]
Line_7 $$ XmlNode node = XmlLoader.load(conn.getInputStream())-->Line_8 $$ XmlNode tracks[] = node.getFirstChild("trackList").getChild("track")[ FD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ CD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_2 $$ public static ArrayList search(String query) throws Exception [ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())[ CD ]
Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())-->Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())[ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_11 $$ String annotation = tracks[i].getFirstChild("annotation").getText().replaceAll("[\r\n]", "")[ CD ]
Line_11 $$ String annotation = tracks[i].getFirstChild("annotation").getText().replaceAll("[\r\n]", "")-->Line_11 $$ String annotation = tracks[i].getFirstChild("annotation").getText().replaceAll("[\r\n]", "")[ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_12 $$ list.add(location)[ CD ]
Line_3 $$ ArrayList list = new ArrayList()-->Line_12 $$ list.add(location)[ FD ]
Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())-->Line_12 $$ list.add(location)[ FD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_13 $$ System.out.print("found in Hypem: ")[ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_14 $$ System.out.print(annotation)[ CD ]
Line_11 $$ String annotation = tracks[i].getFirstChild("annotation").getText().replaceAll("[\r\n]", "")-->Line_14 $$ System.out.print(annotation)[ FD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_15 $$ System.out.print(", ")[ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_16 $$ System.out.println(location)[ CD ]
Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())-->Line_16 $$ System.out.println(location)[ FD ]
Line_2 $$ public static ArrayList search(String query) throws Exception -->Line_18 $$ return list[ CD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < tracks.length; i++) -->Line_9 $$ for (int i = 0; i < tracks.length; i++) [ FD ]
Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())-->Line_12 $$ list.add(location)[ FD ]
Line_11 $$ String annotation = tracks[i].getFirstChild("annotation").getText().replaceAll("[\r\n]", "")-->Line_14 $$ System.out.print(annotation)[ FD ]
Line_10 $$ String location = decrypt(tracks[i].getFirstChild("location").getText())-->Line_16 $$ System.out.println(location)[ FD ]
