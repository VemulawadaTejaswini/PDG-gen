Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception [ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))[ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))[ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_5 $$ int line = 0[ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_6 $$ int column = 0[ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_7 $$ Stack parseStateStack = new Stack()[ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_8 $$ parseStateStack.push(new ParseState(mNamespace))[ CD ]
Line_7 $$ Stack parseStateStack = new Stack()-->Line_8 $$ parseStateStack.push(new ParseState(mNamespace))[ FD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()[ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()[ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_11 $$ while (line < cp.getStartLine()) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_5 $$ int line = 0-->Line_11 $$ while (line < cp.getStartLine()) [ FD ]
Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()-->Line_11 $$ while (line < cp.getStartLine()) [ FD ]
Line_11 $$ while (line < cp.getStartLine()) -->Line_12 $$ line++[ CD ]
Line_5 $$ int line = 0-->Line_12 $$ line++[ FD ]
Line_11 $$ while (line < cp.getStartLine()) -->Line_13 $$ column = 0[ CD ]
Line_13 $$ column = 0-->Line_13 $$ column = 0[ FD ]
Line_6 $$ int column = 0-->Line_13 $$ column = 0[ FD ]
Line_11 $$ while (line < cp.getStartLine()) -->Line_14 $$ writer.write(reader.readLine())[ CD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_14 $$ writer.write(reader.readLine())[ FD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))-->Line_14 $$ writer.write(reader.readLine())[ FD ]
Line_11 $$ while (line < cp.getStartLine()) -->Line_15 $$ writer.newLine()[ CD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_15 $$ writer.newLine()[ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_17 $$ while (column < cp.getStartPosition()) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_13 $$ column = 0-->Line_17 $$ while (column < cp.getStartPosition()) [ FD ]
Line_6 $$ int column = 0-->Line_17 $$ while (column < cp.getStartPosition()) [ FD ]
Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()-->Line_17 $$ while (column < cp.getStartPosition()) [ FD ]
Line_17 $$ while (column < cp.getStartPosition()) -->Line_18 $$ writer.write(reader.read())[ CD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_18 $$ writer.write(reader.read())[ FD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))-->Line_18 $$ writer.write(reader.read())[ FD ]
Line_17 $$ while (column < cp.getStartPosition()) -->Line_19 $$ column++[ CD ]
Line_13 $$ column = 0-->Line_19 $$ column++[ FD ]
Line_6 $$ int column = 0-->Line_19 $$ column++[ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_21 $$ cp.write(writer, parseStateStack, column)[ CD ]
Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()-->Line_21 $$ cp.write(writer, parseStateStack, column)[ FD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_21 $$ cp.write(writer, parseStateStack, column)[ FD ]
Line_7 $$ Stack parseStateStack = new Stack()-->Line_21 $$ cp.write(writer, parseStateStack, column)[ FD ]
Line_13 $$ column = 0-->Line_21 $$ cp.write(writer, parseStateStack, column)[ FD ]
Line_6 $$ int column = 0-->Line_21 $$ cp.write(writer, parseStateStack, column)[ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_22 $$ while (line < cp.getEndLine()) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_5 $$ int line = 0-->Line_22 $$ while (line < cp.getEndLine()) [ FD ]
Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()-->Line_22 $$ while (line < cp.getEndLine()) [ FD ]
Line_22 $$ while (line < cp.getEndLine()) -->Line_23 $$ line++[ CD ]
Line_5 $$ int line = 0-->Line_23 $$ line++[ FD ]
Line_22 $$ while (line < cp.getEndLine()) -->Line_24 $$ column = 0[ CD ]
Line_24 $$ column = 0-->Line_24 $$ column = 0[ FD ]
Line_13 $$ column = 0-->Line_24 $$ column = 0[ FD ]
Line_6 $$ int column = 0-->Line_24 $$ column = 0[ FD ]
Line_22 $$ while (line < cp.getEndLine()) -->Line_25 $$ reader.readLine()[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))-->Line_25 $$ reader.readLine()[ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_27 $$ while (column < cp.getEndPosition()) [ CD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ CD ]
Line_24 $$ column = 0-->Line_27 $$ while (column < cp.getEndPosition()) [ FD ]
Line_13 $$ column = 0-->Line_27 $$ while (column < cp.getEndPosition()) [ FD ]
Line_6 $$ int column = 0-->Line_27 $$ while (column < cp.getEndPosition()) [ FD ]
Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()-->Line_27 $$ while (column < cp.getEndPosition()) [ FD ]
Line_27 $$ while (column < cp.getEndPosition()) -->Line_28 $$ column++[ CD ]
Line_24 $$ column = 0-->Line_28 $$ column++[ FD ]
Line_13 $$ column = 0-->Line_28 $$ column++[ FD ]
Line_6 $$ int column = 0-->Line_28 $$ column++[ FD ]
Line_27 $$ while (column < cp.getEndPosition()) -->Line_29 $$ reader.read()[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))-->Line_29 $$ reader.read()[ FD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_32 $$ String data[ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_33 $$ while ((data = reader.readLine()) != null) [ CD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception [ CD ]
Line_33 $$ while ((data = reader.readLine()) != null) -->Line_33 $$ while ((data = reader.readLine()) != null) [ FD ]
Line_32 $$ String data-->Line_33 $$ while ((data = reader.readLine()) != null) [ FD ]
Line_33 $$ while ((data = reader.readLine()) != null) -->Line_33 $$ while ((data = reader.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))-->Line_33 $$ while ((data = reader.readLine()) != null) [ FD ]
Line_33 $$ while ((data = reader.readLine()) != null) -->Line_34 $$ writer.write(data)[ CD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_34 $$ writer.write(data)[ FD ]
Line_33 $$ while ((data = reader.readLine()) != null) -->Line_34 $$ writer.write(data)[ FD ]
Line_32 $$ String data-->Line_34 $$ writer.write(data)[ FD ]
Line_33 $$ while ((data = reader.readLine()) != null) -->Line_35 $$ writer.newLine()[ CD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_35 $$ writer.newLine()[ FD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_37 $$ reader.close()[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new FileReader(source))-->Line_37 $$ reader.close()[ FD ]
Line_2 $$ public void filter(File source, File destination, MNamespace mNamespace) throws Exception -->Line_38 $$ writer.close()[ CD ]
Line_4 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(destination))-->Line_38 $$ writer.close()[ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator i = codePieces.iterator(); i.hasNext(); ) -->Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()[ FD ]
Line_10 $$ NamedCodePiece cp = (NamedCodePiece) i.next()-->Line_21 $$ cp.write(writer, parseStateStack, column)[ FD ]
Line_33 $$ while ((data = reader.readLine()) != null) -->Line_34 $$ writer.write(data)[ FD ]
