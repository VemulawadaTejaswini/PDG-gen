Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ HttpSession reqSession = request.getSession()[ CD ]
Line_3 $$ HttpSession reqSession = request.getSession()-->Line_3 $$ HttpSession reqSession = request.getSession()[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ HttpSession reqSession = request.getSession()[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_5 $$ LOG.info("UploadServlet Upload request received")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) [ FD ]
Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) [ FD ]
Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_7 $$ LOG.debug("UploadServlet Received a multipart request.")[ CD ]
Line_6 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_9 $$ LOG.debug("UploadServlet Received a non-multipart request.")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_11 $$ String tempDirName = UUID.randomUUID().toString()[ CD ]
Line_11 $$ String tempDirName = UUID.randomUUID().toString()-->Line_11 $$ String tempDirName = UUID.randomUUID().toString()[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_13 $$ tempUploadDir.getParentFile().mkdir()[ CD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_13 $$ tempUploadDir.getParentFile().mkdir()[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_14 $$ while (tempUploadDir.exists()) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_14 $$ while (tempUploadDir.exists()) -->Line_14 $$ while (tempUploadDir.exists()) [ CD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_14 $$ while (tempUploadDir.exists()) [ FD ]
Line_14 $$ while (tempUploadDir.exists()) -->Line_15 $$ tempDirName = UUID.randomUUID().toString()[ CD ]
Line_15 $$ tempDirName = UUID.randomUUID().toString()-->Line_15 $$ tempDirName = UUID.randomUUID().toString()[ FD ]
Line_11 $$ String tempDirName = UUID.randomUUID().toString()-->Line_15 $$ tempDirName = UUID.randomUUID().toString()[ FD ]
Line_15 $$ tempDirName = UUID.randomUUID().toString()-->Line_15 $$ tempDirName = UUID.randomUUID().toString()[ CD ]
Line_14 $$ while (tempUploadDir.exists()) -->Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)[ CD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_18 $$ tempUploadDir.mkdir()[ CD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_18 $$ tempUploadDir.mkdir()[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_18 $$ tempUploadDir.mkdir()[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_19 $$ File attachmentDir = (File) (reqSession.getAttribute("up2p:attachdir"))[ CD ]
Line_3 $$ HttpSession reqSession = request.getSession()-->Line_19 $$ File attachmentDir = (File) (reqSession.getAttribute("up2p:attachdir"))[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_20 $$ if (attachmentDir != null) [ CD ]
Line_19 $$ File attachmentDir = (File) (reqSession.getAttribute("up2p:attachdir"))-->Line_20 $$ if (attachmentDir != null) [ FD ]
Line_20 $$ if (attachmentDir != null) -->Line_21 $$ LOG.info("UploadServlet: Copying provided attachment to upload dir from: " + attachmentDir.getAbsolutePath())[ CD ]
Line_19 $$ File attachmentDir = (File) (reqSession.getAttribute("up2p:attachdir"))-->Line_21 $$ LOG.info("UploadServlet: Copying provided attachment to upload dir from: " + attachmentDir.getAbsolutePath())[ FD ]
Line_20 $$ if (attachmentDir != null) -->Line_22 $$ tempUploadDir.delete()[ CD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_22 $$ tempUploadDir.delete()[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_22 $$ tempUploadDir.delete()[ FD ]
Line_20 $$ if (attachmentDir != null) -->Line_23 $$ attachmentDir.renameTo(tempUploadDir)[ CD ]
Line_19 $$ File attachmentDir = (File) (reqSession.getAttribute("up2p:attachdir"))-->Line_23 $$ attachmentDir.renameTo(tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_23 $$ attachmentDir.renameTo(tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_23 $$ attachmentDir.renameTo(tempUploadDir)[ FD ]
Line_20 $$ if (attachmentDir != null) -->Line_24 $$ reqSession.removeAttribute("up2p:attachdir")[ CD ]
Line_3 $$ HttpSession reqSession = request.getSession()-->Line_24 $$ reqSession.removeAttribute("up2p:attachdir")[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_26 $$ LOG.info("UploadServlet: Using temporary directory: " + tempUploadDir.getPath())[ CD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_26 $$ LOG.info("UploadServlet: Using temporary directory: " + tempUploadDir.getPath())[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_26 $$ LOG.info("UploadServlet: Using temporary directory: " + tempUploadDir.getPath())[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_27 $$ PairList paramMap = null[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) [ FD ]
Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) [ FD ]
Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ CD ]
Line_27 $$ PairList paramMap = null-->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())[ FD ]
Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_30 $$ if (paramMap.size() == 0) [ CD ]
Line_27 $$ PairList paramMap = null-->Line_30 $$ if (paramMap.size() == 0) [ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_30 $$ if (paramMap.size() == 0) [ FD ]
Line_30 $$ if (paramMap.size() == 0) -->Line_31 $$ LOG.debug("UploadServlet Parsed multipart request and " + "found no parameters. Parsing as regular" + " request instead.")[ CD ]
Line_30 $$ if (paramMap.size() == 0) -->Line_32 $$ paramMap = copyParameters(request)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_32 $$ paramMap = copyParameters(request)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_32 $$ paramMap = copyParameters(request)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_32 $$ paramMap = copyParameters(request)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_32 $$ paramMap = copyParameters(request)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_32 $$ paramMap = copyParameters(request)[ FD ]
Line_30 $$ if (paramMap.size() == 0) -->Line_33 $$ LOG.debug("UploadServlet Parsed as regular request and found " + paramMap.size() + " parameters.")[ CD ]
Line_27 $$ PairList paramMap = null-->Line_33 $$ LOG.debug("UploadServlet Parsed as regular request and found " + paramMap.size() + " parameters.")[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_33 $$ LOG.debug("UploadServlet Parsed as regular request and found " + paramMap.size() + " parameters.")[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_33 $$ LOG.debug("UploadServlet Parsed as regular request and found " + paramMap.size() + " parameters.")[ FD ]
Line_28 $$ if (ServletFileUpload.isMultipartContent(request)) -->Line_36 $$ paramMap = copyParameters(request)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_36 $$ paramMap = copyParameters(request)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_36 $$ paramMap = copyParameters(request)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_36 $$ paramMap = copyParameters(request)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_36 $$ paramMap = copyParameters(request)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_36 $$ paramMap = copyParameters(request)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_36 $$ paramMap = copyParameters(request)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())[ CD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)[ CD ]
Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)-->Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_40 $$ LOG.debug("UploadServlet: Got active community: " + newcommunity)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_41 $$ if (newcommunity != null) [ CD ]
Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)-->Line_41 $$ if (newcommunity != null) [ FD ]
Line_41 $$ if (newcommunity != null) -->Line_42 $$ communityId = newcommunity[ CD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_42 $$ communityId = newcommunity[ FD ]
Line_42 $$ communityId = newcommunity-->Line_42 $$ communityId = newcommunity[ FD ]
Line_39 $$ String newcommunity = paramMap.getValue(HttpParams.UP2P_COMMUNITY)-->Line_42 $$ communityId = newcommunity[ FD ]
Line_41 $$ if (newcommunity != null) -->Line_43 $$ LOG.debug("switching to community" + communityId)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_45 $$ if (communityId == null || communityId.length() == 0) [ CD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_45 $$ if (communityId == null || communityId.length() == 0) [ FD ]
Line_42 $$ communityId = newcommunity-->Line_45 $$ if (communityId == null || communityId.length() == 0) [ FD ]
Line_45 $$ if (communityId == null || communityId.length() == 0) -->Line_46 $$ LOG.warn("UploadServlet Current community ID is missing from" + "the user session.")[ CD ]
Line_45 $$ if (communityId == null || communityId.length() == 0) -->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_47 $$ writeError(request, response, "The current community is unknown." + " Please select a community before performing " + "any actions.", paramMap)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_48 $$ for (File f : tempUploadDir.listFiles()) [ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_48 $$ for (File f : tempUploadDir.listFiles()) [ FD ]
Line_48 $$ for (File f : tempUploadDir.listFiles()) -->Line_49 $$ f.delete()[ FD ]
Line_45 $$ if (communityId == null || communityId.length() == 0) -->Line_51 $$ tempUploadDir.delete()[ CD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_51 $$ tempUploadDir.delete()[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_51 $$ tempUploadDir.delete()[ FD ]
Line_45 $$ if (communityId == null || communityId.length() == 0) -->Line_52 $$ return[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_54 $$ LOG.info("UploadServlet Uploading to community " + communityId + ".")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_55 $$ uploadFiles.clear()[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_55 $$ uploadFiles.clear()[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)[ CD ]
Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)-->Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_57 $$ String filename = ""[ CD ]
Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)-->Line_59 $$ if (uploadedFileIter.hasNext()) [ FD ]
Line_59 $$ if (uploadedFileIter.hasNext()) -->Line_59 $$ if (uploadedFileIter.hasNext()) [ CD ]
Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)-->Line_59 $$ if (uploadedFileIter.hasNext()) [ FD ]
Line_59 $$ if (uploadedFileIter.hasNext()) -->Line_60 $$ filename = uploadedFileIter.next()[ CD ]
Line_57 $$ String filename = ""-->Line_60 $$ filename = uploadedFileIter.next()[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_60 $$ filename = uploadedFileIter.next()[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_60 $$ filename = uploadedFileIter.next()[ CD ]
Line_56 $$ Iterator<String> uploadedFileIter = paramMap.getValues(HttpParams.UP2P_FILENAME)-->Line_60 $$ filename = uploadedFileIter.next()[ FD ]
Line_57 $$ String filename = ""-->Line_64 $$ if (filename.startsWith("file:"))[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_64 $$ if (filename.startsWith("file:"))[ FD ]
Line_64 $$ if (filename.startsWith("file:"))-->Line_64 $$ if (filename.startsWith("file:"))[ CD ]
Line_57 $$ String filename = ""-->Line_64 $$ if (filename.startsWith("file:"))[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_64 $$ if (filename.startsWith("file:"))[ FD ]
Line_64 $$ if (filename.startsWith("file:"))-->Line_64 $$ filename = filename.substring(5)[ CD ]
Line_57 $$ String filename = ""-->Line_64 $$ filename = filename.substring(5)[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_64 $$ filename = filename.substring(5)[ FD ]
Line_64 $$ filename = filename.substring(5)-->Line_64 $$ filename = filename.substring(5)[ FD ]
Line_64 $$ filename = filename.substring(5)-->Line_64 $$ filename = filename.substring(5)[ CD ]
Line_57 $$ String filename = ""-->Line_64 $$ filename = filename.substring(5)[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_64 $$ filename = filename.substring(5)[ FD ]
Line_64 $$ filename = filename.substring(5)-->Line_64 $$ filename = filename.substring(5)[ FD ]
Line_57 $$ String filename = ""-->Line_65 $$ if (filename.length() == 0) [ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_65 $$ if (filename.length() == 0) [ FD ]
Line_64 $$ filename = filename.substring(5)-->Line_65 $$ if (filename.length() == 0) [ FD ]
Line_68 $$ File resourceFile = null-->Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)[ FD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)[ FD ]
Line_42 $$ communityId = newcommunity-->Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)[ FD ]
Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) -->Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) [ CD ]
Line_70 $$ File tempResFile = new File(tempUploadDir, filename)-->Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) [ FD ]
Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) -->Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) [ CD ]
Line_68 $$ File resourceFile = null-->Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) [ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_71 $$ if (!tempResFile.exists() && !resourceFile.exists()) [ FD ]
Line_70 $$ File tempResFile = new File(tempUploadDir, filename)-->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ FD ]
Line_68 $$ File resourceFile = null-->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ FD ]
Line_70 $$ File tempResFile = new File(tempUploadDir, filename)-->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ FD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ CD ]
Line_68 $$ File resourceFile = null-->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) [ FD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ CD ]
Line_68 $$ File resourceFile = null-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ CD ]
Line_68 $$ File resourceFile = null-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)[ FD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_76 $$ LOG.info("UploadServlet: Direct upload, copying resource file.\n\tOriginal: " + tempResFile.getPath() + "\n\tNew: " + resourceFile.getPath())[ CD ]
Line_70 $$ File tempResFile = new File(tempUploadDir, filename)-->Line_76 $$ LOG.info("UploadServlet: Direct upload, copying resource file.\n\tOriginal: " + tempResFile.getPath() + "\n\tNew: " + resourceFile.getPath())[ FD ]
Line_68 $$ File resourceFile = null-->Line_76 $$ LOG.info("UploadServlet: Direct upload, copying resource file.\n\tOriginal: " + tempResFile.getPath() + "\n\tNew: " + resourceFile.getPath())[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_76 $$ LOG.info("UploadServlet: Direct upload, copying resource file.\n\tOriginal: " + tempResFile.getPath() + "\n\tNew: " + resourceFile.getPath())[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_76 $$ LOG.info("UploadServlet: Direct upload, copying resource file.\n\tOriginal: " + tempResFile.getPath() + "\n\tNew: " + resourceFile.getPath())[ FD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_77 $$ resourceFile.getParentFile().mkdir()[ CD ]
Line_68 $$ File resourceFile = null-->Line_77 $$ resourceFile.getParentFile().mkdir()[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_77 $$ resourceFile.getParentFile().mkdir()[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_77 $$ resourceFile.getParentFile().mkdir()[ FD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_78 $$ FileOutputStream resourceCopyStream = new FileOutputStream(resourceFile)[ CD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_79 $$ FileUtil.writeFileToStream(resourceCopyStream, tempResFile, true)[ CD ]
Line_78 $$ FileOutputStream resourceCopyStream = new FileOutputStream(resourceFile)-->Line_79 $$ FileUtil.writeFileToStream(resourceCopyStream, tempResFile, true)[ FD ]
Line_70 $$ File tempResFile = new File(tempUploadDir, filename)-->Line_79 $$ FileUtil.writeFileToStream(resourceCopyStream, tempResFile, true)[ FD ]
Line_74 $$ if ((tempResFile.exists() && resourceFile.exists()) || (tempResFile.exists() && !resourceFile.exists())) -->Line_80 $$ filename = resourceFile.getName()[ CD ]
Line_57 $$ String filename = ""-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_60 $$ filename = uploadedFileIter.next()-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_64 $$ filename = filename.substring(5)-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_80 $$ filename = resourceFile.getName()-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_80 $$ filename = resourceFile.getName()-->Line_80 $$ filename = resourceFile.getName()[ CD ]
Line_68 $$ File resourceFile = null-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_80 $$ filename = resourceFile.getName()[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_83 $$ uploadFiles.add(resourceFile)[ FD ]
Line_68 $$ File resourceFile = null-->Line_83 $$ uploadFiles.add(resourceFile)[ FD ]
Line_69 $$ resourceFile = new File(adapter.getStorageDirectory(communityId), filename)-->Line_83 $$ uploadFiles.add(resourceFile)[ FD ]
Line_75 $$ resourceFile = FileUtil.createUniqueFile(resourceFile)-->Line_83 $$ uploadFiles.add(resourceFile)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_86 $$ writeError(request, response, e.getMessage(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_86 $$ writeError(request, response, e.getMessage(), paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_86 $$ writeError(request, response, e.getMessage(), paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_86 $$ writeError(request, response, e.getMessage(), paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_86 $$ writeError(request, response, e.getMessage(), paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_86 $$ writeError(request, response, e.getMessage(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)[ CD ]
Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)-->Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_90 $$ if (editResourceId != null && editResourceId.length() > 0) [ CD ]
Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)-->Line_90 $$ if (editResourceId != null && editResourceId.length() > 0) [ FD ]
Line_90 $$ if (editResourceId != null && editResourceId.length() > 0) -->Line_91 $$ LOG.debug("UploadServlet: Got edit resource: " + editResourceId)[ CD ]
Line_90 $$ if (editResourceId != null && editResourceId.length() > 0) -->Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))[ CD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))[ FD ]
Line_42 $$ communityId = newcommunity-->Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))[ FD ]
Line_89 $$ String editResourceId = paramMap.getValue(HttpParams.UP2P_EDIT_RESOURCE)-->Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))[ FD ]
Line_90 $$ if (editResourceId != null && editResourceId.length() > 0) -->Line_93 $$ if (editAttach.exists() && editAttach.isDirectory()) [ CD ]
Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))-->Line_93 $$ if (editAttach.exists() && editAttach.isDirectory()) [ FD ]
Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))-->Line_93 $$ if (editAttach.exists() && editAttach.isDirectory()) [ FD ]
Line_93 $$ if (editAttach.exists() && editAttach.isDirectory()) -->Line_94 $$ LOG.debug("UploadServlet: Copying additional attachments from: " + editAttach.getAbsolutePath())[ CD ]
Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))-->Line_94 $$ LOG.debug("UploadServlet: Copying additional attachments from: " + editAttach.getAbsolutePath())[ FD ]
Line_92 $$ File editAttach = new File(adapter.getAttachmentStorageDirectory(communityId, editResourceId))-->Line_95 $$ for (File oldFile : editAttach.listFiles()) [ FD ]
Line_95 $$ for (File oldFile : editAttach.listFiles()) -->Line_96 $$ File newFile = new File(tempUploadDir, oldFile.getName())[ FD ]
Line_97 $$ if (!newFile.exists()) -->Line_97 $$ if (!newFile.exists()) [ CD ]
Line_97 $$ if (!newFile.exists()) -->Line_97 $$ if (!newFile.exists()) [ CD ]
Line_96 $$ File newFile = new File(tempUploadDir, oldFile.getName())-->Line_97 $$ if (!newFile.exists()) [ FD ]
Line_97 $$ if (!newFile.exists()) -->Line_98 $$ LOG.debug("UploadServlet: Copying attachment: " + oldFile.getAbsolutePath() + " to " + newFile.getAbsolutePath())[ CD ]
Line_95 $$ for (File oldFile : editAttach.listFiles()) -->Line_98 $$ LOG.debug("UploadServlet: Copying attachment: " + oldFile.getAbsolutePath() + " to " + newFile.getAbsolutePath())[ FD ]
Line_96 $$ File newFile = new File(tempUploadDir, oldFile.getName())-->Line_98 $$ LOG.debug("UploadServlet: Copying attachment: " + oldFile.getAbsolutePath() + " to " + newFile.getAbsolutePath())[ FD ]
Line_97 $$ if (!newFile.exists()) -->Line_99 $$ FileOutputStream attachCopyStream = new FileOutputStream(newFile)[ CD ]
Line_97 $$ if (!newFile.exists()) -->Line_100 $$ FileUtil.writeFileToStream(attachCopyStream, oldFile, true)[ CD ]
Line_99 $$ FileOutputStream attachCopyStream = new FileOutputStream(newFile)-->Line_100 $$ FileUtil.writeFileToStream(attachCopyStream, oldFile, true)[ FD ]
Line_95 $$ for (File oldFile : editAttach.listFiles()) -->Line_100 $$ FileUtil.writeFileToStream(attachCopyStream, oldFile, true)[ FD ]
Line_97 $$ if (!newFile.exists()) -->Line_102 $$ LOG.debug("UploadServlet: Attachment " + newFile.getName() + " explicitly replaced in new upload.")[ CD ]
Line_96 $$ File newFile = new File(tempUploadDir, oldFile.getName())-->Line_102 $$ LOG.debug("UploadServlet: Attachment " + newFile.getName() + " explicitly replaced in new upload.")[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)[ CD ]
Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)-->Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_108 $$ boolean batchUpload = batchUploadString != null && batchUploadString.length() > 0[ CD ]
Line_107 $$ String batchUploadString = paramMap.getValue(HttpParams.UP2P_BATCH)-->Line_108 $$ boolean batchUpload = batchUploadString != null && batchUploadString.length() > 0[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_109 $$ if (batchUpload) [ CD ]
Line_109 $$ if (batchUpload) -->Line_110 $$ LOG.info("UploadSerlvet Recieved batch upload request.")[ CD ]
Line_109 $$ if (batchUpload) -->Line_111 $$ File batchFile = new File(adapter.getStorageDirectory(communityId), uploadFiles.get(0).getName())[ CD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_111 $$ File batchFile = new File(adapter.getStorageDirectory(communityId), uploadFiles.get(0).getName())[ FD ]
Line_42 $$ communityId = newcommunity-->Line_111 $$ File batchFile = new File(adapter.getStorageDirectory(communityId), uploadFiles.get(0).getName())[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_111 $$ File batchFile = new File(adapter.getStorageDirectory(communityId), uploadFiles.get(0).getName())[ FD ]
Line_109 $$ if (batchUpload) -->Line_112 $$ uploadFiles.clear()[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_112 $$ uploadFiles.clear()[ FD ]
Line_109 $$ if (batchUpload) -->Line_113 $$ LOG.debug("UploadServlet resource file stored at: " + batchFile.getPath())[ CD ]
Line_111 $$ File batchFile = new File(adapter.getStorageDirectory(communityId), uploadFiles.get(0).getName())-->Line_113 $$ LOG.debug("UploadServlet resource file stored at: " + batchFile.getPath())[ FD ]
Line_109 $$ if (batchUpload) -->Line_114 $$ XMLReader reader = TransformerHelper.getXMLReader()[ CD ]
Line_114 $$ XMLReader reader = TransformerHelper.getXMLReader()-->Line_114 $$ XMLReader reader = TransformerHelper.getXMLReader()[ CD ]
Line_109 $$ if (batchUpload) -->Line_115 $$ reader.setContentHandler(new BatchCopyHandler(communityId, uploadFiles))[ CD ]
Line_114 $$ XMLReader reader = TransformerHelper.getXMLReader()-->Line_115 $$ reader.setContentHandler(new BatchCopyHandler(communityId, uploadFiles))[ FD ]
Line_114 $$ XMLReader reader = TransformerHelper.getXMLReader()-->Line_118 $$ reader.parse(new InputSource(batchInput))[ FD ]
Line_117 $$ FileInputStream batchInput = new FileInputStream(batchFile)-->Line_119 $$ batchInput.close()[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_123 $$ writeError(request, response, "Uploaded content was not a valid batch resource file.", paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_123 $$ writeError(request, response, "Uploaded content was not a valid batch resource file.", paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_123 $$ writeError(request, response, "Uploaded content was not a valid batch resource file.", paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_123 $$ writeError(request, response, "Uploaded content was not a valid batch resource file.", paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_123 $$ writeError(request, response, "Uploaded content was not a valid batch resource file.", paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_123 $$ writeError(request, response, "Uploaded content was not a valid batch resource file.", paramMap)[ FD ]
Line_109 $$ if (batchUpload) -->Line_126 $$ batchFile.delete()[ CD ]
Line_111 $$ File batchFile = new File(adapter.getStorageDirectory(communityId), uploadFiles.get(0).getName())-->Line_126 $$ batchFile.delete()[ FD ]
Line_109 $$ if (batchUpload) -->Line_127 $$ adapter.addNotification("Batch file succesfully processed into " + uploadFiles.size() + " resources.")[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_127 $$ adapter.addNotification("Batch file succesfully processed into " + uploadFiles.size() + " resources.")[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ CD ]
Line_27 $$ PairList paramMap = null-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_27 $$ PairList paramMap = null-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_130 $$ String id = ""[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_131 $$ boolean duplicateResource = false[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_132 $$ int uploadCount = 0[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ CD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ CD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_134 $$ LOG.info("UploadServlet Publishing resource to WebAdapter: " + uploadFiles.get(i).getName())[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_134 $$ LOG.info("UploadServlet Publishing resource to WebAdapter: " + uploadFiles.get(i).getName())[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_134 $$ LOG.info("UploadServlet Publishing resource to WebAdapter: " + uploadFiles.get(i).getName())[ FD ]
Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_130 $$ String id = ""-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ CD ]
Line_38 $$ String communityId = getCurrentCommunityId(request.getSession())-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_42 $$ communityId = newcommunity-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_137 $$ uploadFiles.remove(i)[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_137 $$ uploadFiles.remove(i)[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_138 $$ i--[ FD ]
Line_132 $$ int uploadCount = 0-->Line_139 $$ uploadCount++[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_143 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_143 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_143 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_144 $$ writeError(request, response, "An error occured in reading the uploaded file: " + e.getMessage(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_144 $$ writeError(request, response, "An error occured in reading the uploaded file: " + e.getMessage(), paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_144 $$ writeError(request, response, "An error occured in reading the uploaded file: " + e.getMessage(), paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_144 $$ writeError(request, response, "An error occured in reading the uploaded file: " + e.getMessage(), paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_144 $$ writeError(request, response, "An error occured in reading the uploaded file: " + e.getMessage(), paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_144 $$ writeError(request, response, "An error occured in reading the uploaded file: " + e.getMessage(), paramMap)[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_149 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_149 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_149 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()-->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_154 $$ String errMsg = "Invalid XML in uploaded resource<br/><i>" + e.getMessage() + "</i><br/>" + "File location: " + uploadFiles.get(i).getAbsolutePath()[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_154 $$ String errMsg = "Invalid XML in uploaded resource<br/><i>" + e.getMessage() + "</i><br/>" + "File location: " + uploadFiles.get(i).getAbsolutePath()[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_155 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_155 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_155 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()-->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_160 $$ if (batchUpload) -->Line_161 $$ if (!duplicateResource) [ CD ]
Line_131 $$ boolean duplicateResource = false-->Line_161 $$ if (!duplicateResource) [ FD ]
Line_161 $$ if (!duplicateResource) -->Line_161 $$ if (!duplicateResource) [ CD ]
Line_131 $$ boolean duplicateResource = false-->Line_161 $$ if (!duplicateResource) [ FD ]
Line_161 $$ if (!duplicateResource) -->Line_162 $$ adapter.addNotification("Warning: Batch upload contained previously published " + " resources which have been discarded.")[ CD ]
Line_161 $$ if (!duplicateResource) -->Line_163 $$ duplicateResource = true[ CD ]
Line_163 $$ duplicateResource = true-->Line_163 $$ duplicateResource = true[ FD ]
Line_131 $$ boolean duplicateResource = false-->Line_163 $$ duplicateResource = true[ FD ]
Line_160 $$ if (batchUpload) -->Line_166 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_166 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_166 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_166 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_160 $$ if (batchUpload) -->Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ CD ]
Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)-->Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_160 $$ if (batchUpload) -->Line_168 $$ if (respondWithXml != null && respondWithXml.length() > 0) [ CD ]
Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)-->Line_168 $$ if (respondWithXml != null && respondWithXml.length() > 0) [ FD ]
Line_168 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_169 $$ writeError(request, response, "This resource is already shared with resource " + " id: " + e.getResourceId(), paramMap)[ FD ]
Line_168 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_170 $$ return[ CD ]
Line_160 $$ if (batchUpload) -->Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())[ CD ]
Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())-->Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())[ FD ]
Line_160 $$ if (batchUpload) -->Line_173 $$ LOG.info("UploadServlet Redirecting to " + redirect)[ CD ]
Line_160 $$ if (batchUpload) -->Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ CD ]
Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())-->Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_160 $$ if (batchUpload) -->Line_175 $$ rd.forward(request, response)[ CD ]
Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_175 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_175 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_175 $$ rd.forward(request, response)[ FD ]
Line_160 $$ if (batchUpload) -->Line_176 $$ return[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_180 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_180 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_180 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_181 $$ writeError(request, response, "Error in the Network Adapter for this community. <br/>" + e.getMessage(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_181 $$ writeError(request, response, "Error in the Network Adapter for this community. <br/>" + e.getMessage(), paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_181 $$ writeError(request, response, "Error in the Network Adapter for this community. <br/>" + e.getMessage(), paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_181 $$ writeError(request, response, "Error in the Network Adapter for this community. <br/>" + e.getMessage(), paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_181 $$ writeError(request, response, "Error in the Network Adapter for this community. <br/>" + e.getMessage(), paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_181 $$ writeError(request, response, "Error in the Network Adapter for this community. <br/>" + e.getMessage(), paramMap)[ FD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_185 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_185 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_185 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_186 $$ writeError(request, response, "Error : <br/>" + e.getMessage(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_186 $$ writeError(request, response, "Error : <br/>" + e.getMessage(), paramMap)[ FD ]
Line_27 $$ PairList paramMap = null-->Line_186 $$ writeError(request, response, "Error : <br/>" + e.getMessage(), paramMap)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_186 $$ writeError(request, response, "Error : <br/>" + e.getMessage(), paramMap)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_186 $$ writeError(request, response, "Error : <br/>" + e.getMessage(), paramMap)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_186 $$ writeError(request, response, "Error : <br/>" + e.getMessage(), paramMap)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_190 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ CD ]
Line_4 $$ ArrayList<File> uploadFiles = new ArrayList<File>()-->Line_190 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_190 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_12 $$ File tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_190 $$ uploadFilesCleanup(uploadFiles, tempUploadDir)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)[ CD ]
Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)-->Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ CD ]
Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)-->Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ CD ]
Line_27 $$ PairList paramMap = null-->Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_29 $$ paramMap = getMultipartParameters(request, uploadHandler, LOG, tempUploadDir.getPath())-->Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_32 $$ paramMap = copyParameters(request)-->Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_36 $$ paramMap = copyParameters(request)-->Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) [ CD ]
Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)-->Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) [ FD ]
Line_192 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)-->Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) [ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_194 $$ response.setContentType("text/xml")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_194 $$ response.setContentType("text/xml")[ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_195 $$ PrintWriter out = response.getWriter()[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_195 $$ PrintWriter out = response.getWriter()[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_195 $$ PrintWriter out = response.getWriter()[ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_196 $$ out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_196 $$ out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")[ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_197 $$ out.println("<upload success=\"true\" >")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_197 $$ out.println("<upload success=\"true\" >")[ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_198 $$ out.println("<resid>" + id + "</resid>")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_198 $$ out.println("<resid>" + id + "</resid>")[ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_199 $$ out.println("</upload>")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_199 $$ out.println("</upload>")[ FD ]
Line_193 $$ if (respondWithXml != null && respondWithXml.length() > 0) -->Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) [ CD ]
Line_108 $$ boolean batchUpload = batchUploadString != null && batchUploadString.length() > 0-->Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) [ FD ]
Line_191 $$ String ajaxRequest = paramMap.getValue(HttpParams.UP2P_XMLHTTP)-->Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) [ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_201 $$ LOG.debug("UploadServlet Recieved xmlHttp request, responding with XML")[ CD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_202 $$ response.setContentType("text/xml")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_202 $$ response.setContentType("text/xml")[ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_203 $$ PrintWriter out = response.getWriter()[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_203 $$ PrintWriter out = response.getWriter()[ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_204 $$ out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_204 $$ out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")[ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_205 $$ out.print("<resource id=\"" + request.getParameter(HttpParams.UP2P_RESOURCE) + "\" ")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_205 $$ out.print("<resource id=\"" + request.getParameter(HttpParams.UP2P_RESOURCE) + "\" ")[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_205 $$ out.print("<resource id=\"" + request.getParameter(HttpParams.UP2P_RESOURCE) + "\" ")[ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_206 $$ if (request.getParameter(HttpParams.UP2P_PEERID) != null) [ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_206 $$ if (request.getParameter(HttpParams.UP2P_PEERID) != null) [ FD ]
Line_206 $$ if (request.getParameter(HttpParams.UP2P_PEERID) != null) -->Line_207 $$ out.print("peerid=\"" + request.getParameter(HttpParams.UP2P_PEERID) + "\" ")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_207 $$ out.print("peerid=\"" + request.getParameter(HttpParams.UP2P_PEERID) + "\" ")[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_207 $$ out.print("peerid=\"" + request.getParameter(HttpParams.UP2P_PEERID) + "\" ")[ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_209 $$ out.println("/>")[ CD ]
Line_195 $$ PrintWriter out = response.getWriter()-->Line_209 $$ out.println("/>")[ FD ]
Line_200 $$ if (ajaxRequest != null && ajaxRequest.length() > 0) -->Line_210 $$ if (batchUpload) [ CD ]
Line_210 $$ if (batchUpload) -->Line_211 $$ adapter.addNotification(uploadCount + " resources were succesfully published.")[ CD ]
Line_210 $$ if (batchUpload) -->Line_212 $$ request.setAttribute("up2p.display.mode", "view")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_212 $$ request.setAttribute("up2p.display.mode", "view")[ FD ]
Line_210 $$ if (batchUpload) -->Line_213 $$ String redirect = response.encodeURL("/view.jsp?up2p:community=" + communityId)[ CD ]
Line_213 $$ String redirect = response.encodeURL("/view.jsp?up2p:community=" + communityId)-->Line_213 $$ String redirect = response.encodeURL("/view.jsp?up2p:community=" + communityId)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_213 $$ String redirect = response.encodeURL("/view.jsp?up2p:community=" + communityId)[ FD ]
Line_210 $$ if (batchUpload) -->Line_214 $$ LOG.info("UploadServlet Redirecting to " + redirect)[ CD ]
Line_210 $$ if (batchUpload) -->Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ CD ]
Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())-->Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_213 $$ String redirect = response.encodeURL("/view.jsp?up2p:community=" + communityId)-->Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_210 $$ if (batchUpload) -->Line_216 $$ rd.forward(request, response)[ CD ]
Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_216 $$ rd.forward(request, response)[ FD ]
Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_216 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_216 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_216 $$ rd.forward(request, response)[ FD ]
Line_210 $$ if (batchUpload) -->Line_217 $$ if (!pushUpload) [ CD ]
Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0-->Line_217 $$ if (!pushUpload) [ FD ]
Line_217 $$ if (!pushUpload) -->Line_217 $$ if (!pushUpload) [ CD ]
Line_129 $$ boolean pushUpload = paramMap.getValue(HttpParams.UP2P_PUSH) != null && paramMap.getValue(HttpParams.UP2P_PUSH).length() > 0-->Line_217 $$ if (!pushUpload) [ FD ]
Line_217 $$ if (!pushUpload) -->Line_218 $$ request.setAttribute("up2p.display.mode", "view")[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_218 $$ request.setAttribute("up2p.display.mode", "view")[ FD ]
Line_217 $$ if (!pushUpload) -->Line_219 $$ String redirect = response.encodeURL("/view.jsp?up2p:resource=" + id)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_219 $$ String redirect = response.encodeURL("/view.jsp?up2p:resource=" + id)[ FD ]
Line_217 $$ if (!pushUpload) -->Line_220 $$ LOG.info("UploadServlet Redirecting to " + redirect)[ CD ]
Line_217 $$ if (!pushUpload) -->Line_221 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ CD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_221 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())-->Line_221 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_213 $$ String redirect = response.encodeURL("/view.jsp?up2p:community=" + communityId)-->Line_221 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_217 $$ if (!pushUpload) -->Line_222 $$ rd.forward(request, response)[ CD ]
Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_222 $$ rd.forward(request, response)[ FD ]
Line_215 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_222 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_222 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_222 $$ rd.forward(request, response)[ FD ]
Line_2 $$ protected void doUpload(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_224 $$ return[ CD ]
Line_16 $$ tempUploadDir = new File(adapter.getRootPath() + File.separator + "temp" + File.separator + tempDirName)-->Line_14 $$ while (tempUploadDir.exists()) [ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) [ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_134 $$ LOG.info("UploadServlet Publishing resource to WebAdapter: " + uploadFiles.get(i).getName())[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_136 $$ id = adapter.publish(communityId, new File(uploadFiles.get(i).getName()), tempUploadDir)[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_137 $$ uploadFiles.remove(i)[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_138 $$ i--[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()[ FD ]
Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()-->Line_150 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_133 $$ for (int i = 0; i < uploadFiles.size(); i++) -->Line_154 $$ String errMsg = "Invalid XML in uploaded resource<br/><i>" + e.getMessage() + "</i><br/>" + "File location: " + uploadFiles.get(i).getAbsolutePath()[ FD ]
Line_148 $$ String errMsg = "Invalid XML in the uploaded resource.<br/>" + e.getMessage() + "<br/><br/>File location: " + uploadFiles.get(i).getAbsolutePath() + "<br/>Line: " + e.getLineNumber() + " Column: " + e.getColumnNumber()-->Line_156 $$ writeError(request, response, errMsg, paramMap)[ FD ]
Line_163 $$ duplicateResource = true-->Line_161 $$ if (!duplicateResource) [ FD ]
Line_163 $$ duplicateResource = true-->Line_161 $$ if (!duplicateResource) [ FD ]
Line_167 $$ String respondWithXml = paramMap.getValue(HttpParams.UP2P_FETCH_XML)-->Line_168 $$ if (respondWithXml != null && respondWithXml.length() > 0) [ FD ]
Line_172 $$ String redirect = response.encodeURL("/overwrite.jsp?up2p:community=" + e.getCommunityId() + "&up2p:resource=" + e.getResourceId())-->Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)[ FD ]
Line_174 $$ RequestDispatcher rd = request.getRequestDispatcher(redirect)-->Line_175 $$ rd.forward(request, response)[ FD ]
