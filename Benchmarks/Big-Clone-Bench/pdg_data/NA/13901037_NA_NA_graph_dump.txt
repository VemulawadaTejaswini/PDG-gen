Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String generateGuid(boolean secure) [ CD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_3 $$ MessageDigest md5 = null[ CD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_4 $$ String valueBeforeMD5 = null[ CD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_5 $$ String valueAfterMD5 = null[ CD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()[ CD ]
Line_3 $$ MessageDigest md5 = null-->Line_8 $$ md5 = MessageDigest.getInstance("MD5")[ FD ]
Line_8 $$ md5 = MessageDigest.getInstance("MD5")-->Line_8 $$ md5 = MessageDigest.getInstance("MD5")[ FD ]
Line_8 $$ md5 = MessageDigest.getInstance("MD5")-->Line_8 $$ md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_13 $$ long time = System.currentTimeMillis()-->Line_13 $$ long time = System.currentTimeMillis()[ CD ]
Line_15 $$ if (secure)-->Line_15 $$ rand = mySecureRand.nextLong()[ CD ]
Line_14 $$ long rand = 0L-->Line_15 $$ rand = mySecureRand.nextLong()[ FD ]
Line_15 $$ rand = mySecureRand.nextLong()-->Line_15 $$ rand = mySecureRand.nextLong()[ FD ]
Line_15 $$ rand = mySecureRand.nextLong()-->Line_15 $$ rand = mySecureRand.nextLong()[ CD ]
Line_15 $$ if (secure)-->Line_15 $$ rand = myRand.nextLong()[ CD ]
Line_14 $$ long rand = 0L-->Line_15 $$ rand = myRand.nextLong()[ FD ]
Line_15 $$ rand = mySecureRand.nextLong()-->Line_15 $$ rand = myRand.nextLong()[ FD ]
Line_15 $$ rand = myRand.nextLong()-->Line_15 $$ rand = myRand.nextLong()[ FD ]
Line_15 $$ rand = myRand.nextLong()-->Line_15 $$ rand = myRand.nextLong()[ CD ]
Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_16 $$ sbValueBeforeMD5.append(s_id)[ FD ]
Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_17 $$ sbValueBeforeMD5.append(":")[ FD ]
Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_18 $$ sbValueBeforeMD5.append(Long.toString(time))[ FD ]
Line_13 $$ long time = System.currentTimeMillis()-->Line_18 $$ sbValueBeforeMD5.append(Long.toString(time))[ FD ]
Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_19 $$ sbValueBeforeMD5.append(":")[ FD ]
Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_20 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_14 $$ long rand = 0L-->Line_20 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_15 $$ rand = mySecureRand.nextLong()-->Line_20 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_15 $$ rand = myRand.nextLong()-->Line_20 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_4 $$ String valueBeforeMD5 = null-->Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()[ FD ]
Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()-->Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()[ FD ]
Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()-->Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()[ CD ]
Line_6 $$ StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()[ FD ]
Line_3 $$ MessageDigest md5 = null-->Line_22 $$ md5.update(valueBeforeMD5.getBytes())[ FD ]
Line_8 $$ md5 = MessageDigest.getInstance("MD5")-->Line_22 $$ md5.update(valueBeforeMD5.getBytes())[ FD ]
Line_4 $$ String valueBeforeMD5 = null-->Line_22 $$ md5.update(valueBeforeMD5.getBytes())[ FD ]
Line_21 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()-->Line_22 $$ md5.update(valueBeforeMD5.getBytes())[ FD ]
Line_23 $$ byte array[] = md5.digest()-->Line_23 $$ byte array[] = md5.digest()[ CD ]
Line_3 $$ MessageDigest md5 = null-->Line_23 $$ byte array[] = md5.digest()[ FD ]
Line_8 $$ md5 = MessageDigest.getInstance("MD5")-->Line_23 $$ byte array[] = md5.digest()[ FD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_25 $$ for (int j = 0; j < array.length; j++) [ CD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_25 $$ for (int j = 0; j < array.length; j++) [ CD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_25 $$ for (int j = 0; j < array.length; j++) [ FD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_26 $$ int b = array[j] & 0xff[ CD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_27 $$ if (b < 16)[ CD ]
Line_26 $$ int b = array[j] & 0xff-->Line_27 $$ if (b < 16)[ FD ]
Line_27 $$ if (b < 16)-->Line_27 $$ sb.append('0')[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_27 $$ sb.append('0')[ FD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_28 $$ sb.append(Integer.toHexString(b))[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_28 $$ sb.append(Integer.toHexString(b))[ FD ]
Line_26 $$ int b = array[j] & 0xff-->Line_28 $$ sb.append(Integer.toHexString(b))[ FD ]
Line_5 $$ String valueAfterMD5 = null-->Line_30 $$ valueAfterMD5 = sb.toString()[ FD ]
Line_30 $$ valueAfterMD5 = sb.toString()-->Line_30 $$ valueAfterMD5 = sb.toString()[ FD ]
Line_30 $$ valueAfterMD5 = sb.toString()-->Line_30 $$ valueAfterMD5 = sb.toString()[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_30 $$ valueAfterMD5 = sb.toString()[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_34 $$ String raw = valueAfterMD5.toUpperCase()[ CD ]
Line_34 $$ String raw = valueAfterMD5.toUpperCase()-->Line_34 $$ String raw = valueAfterMD5.toUpperCase()[ CD ]
Line_5 $$ String valueAfterMD5 = null-->Line_34 $$ String raw = valueAfterMD5.toUpperCase()[ FD ]
Line_30 $$ valueAfterMD5 = sb.toString()-->Line_34 $$ String raw = valueAfterMD5.toUpperCase()[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_36 $$ sb.append(raw.substring(0, 8))[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_36 $$ sb.append(raw.substring(0, 8))[ FD ]
Line_34 $$ String raw = valueAfterMD5.toUpperCase()-->Line_36 $$ sb.append(raw.substring(0, 8))[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_37 $$ sb.append("-")[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_37 $$ sb.append("-")[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_38 $$ sb.append(raw.substring(8, 12))[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_38 $$ sb.append(raw.substring(8, 12))[ FD ]
Line_34 $$ String raw = valueAfterMD5.toUpperCase()-->Line_38 $$ sb.append(raw.substring(8, 12))[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_39 $$ sb.append("-")[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_39 $$ sb.append("-")[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_40 $$ sb.append(raw.substring(12, 16))[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_40 $$ sb.append(raw.substring(12, 16))[ FD ]
Line_34 $$ String raw = valueAfterMD5.toUpperCase()-->Line_40 $$ sb.append(raw.substring(12, 16))[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_41 $$ sb.append("-")[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_41 $$ sb.append("-")[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_42 $$ sb.append(raw.substring(16, 20))[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_42 $$ sb.append(raw.substring(16, 20))[ FD ]
Line_34 $$ String raw = valueAfterMD5.toUpperCase()-->Line_42 $$ sb.append(raw.substring(16, 20))[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_43 $$ sb.append("-")[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_43 $$ sb.append("-")[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_44 $$ sb.append(raw.substring(20))[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_44 $$ sb.append(raw.substring(20))[ FD ]
Line_34 $$ String raw = valueAfterMD5.toUpperCase()-->Line_44 $$ sb.append(raw.substring(20))[ FD ]
Line_2 $$ public static String generateGuid(boolean secure) -->Line_45 $$ return sb.toString()[ CD ]
Line_45 $$ return sb.toString()-->Line_45 $$ return sb.toString()[ CD ]
Line_24 $$ StringBuffer sb = new StringBuffer()-->Line_45 $$ return sb.toString()[ FD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_25 $$ for (int j = 0; j < array.length; j++) [ FD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_25 $$ for (int j = 0; j < array.length; j++) [ FD ]
Line_25 $$ for (int j = 0; j < array.length; j++) -->Line_25 $$ for (int j = 0; j < array.length; j++) [ FD ]
Line_26 $$ int b = array[j] & 0xff-->Line_27 $$ if (b < 16)[ FD ]
Line_26 $$ int b = array[j] & 0xff-->Line_28 $$ sb.append(Integer.toHexString(b))[ FD ]
