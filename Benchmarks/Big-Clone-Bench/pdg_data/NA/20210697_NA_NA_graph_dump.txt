Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public RTUser getUserInfo(final String username) [ CD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_3 $$ getSession()[ CD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_4 $$ Map<String, String> attributes = Collections.emptyMap()[ CD ]
Line_4 $$ Map<String, String> attributes = Collections.emptyMap()-->Line_4 $$ Map<String, String> attributes = Collections.emptyMap()[ CD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_5 $$ final HttpGet get = new HttpGet(m_baseURL + "/REST/1.0/user/" + username)[ CD ]
Line_7 $$ final HttpResponse response = getClient().execute(get)-->Line_7 $$ final HttpResponse response = getClient().execute(get)[ CD ]
Line_5 $$ final HttpGet get = new HttpGet(m_baseURL + "/REST/1.0/user/" + username)-->Line_7 $$ final HttpResponse response = getClient().execute(get)[ FD ]
Line_8 $$ int responseCode = response.getStatusLine().getStatusCode()-->Line_8 $$ int responseCode = response.getStatusLine().getStatusCode()[ CD ]
Line_7 $$ final HttpResponse response = getClient().execute(get)-->Line_8 $$ int responseCode = response.getStatusLine().getStatusCode()[ FD ]
Line_8 $$ int responseCode = response.getStatusLine().getStatusCode()-->Line_9 $$ if (responseCode != HttpStatus.SC_OK) [ FD ]
Line_9 $$ if (responseCode != HttpStatus.SC_OK) -->Line_12 $$ if (response.getEntity() != null) [ CD ]
Line_7 $$ final HttpResponse response = getClient().execute(get)-->Line_12 $$ if (response.getEntity() != null) [ FD ]
Line_12 $$ if (response.getEntity() != null) -->Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())[ CD ]
Line_4 $$ Map<String, String> attributes = Collections.emptyMap()-->Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())[ FD ]
Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())-->Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())[ FD ]
Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())-->Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())[ CD ]
Line_7 $$ final HttpResponse response = getClient().execute(get)-->Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())[ FD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_20 $$ final String id = attributes.get("id")[ CD ]
Line_20 $$ final String id = attributes.get("id")-->Line_20 $$ final String id = attributes.get("id")[ CD ]
Line_4 $$ Map<String, String> attributes = Collections.emptyMap()-->Line_20 $$ final String id = attributes.get("id")[ FD ]
Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())-->Line_20 $$ final String id = attributes.get("id")[ FD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_21 $$ final String realname = attributes.get("realname")[ CD ]
Line_21 $$ final String realname = attributes.get("realname")-->Line_21 $$ final String realname = attributes.get("realname")[ CD ]
Line_4 $$ Map<String, String> attributes = Collections.emptyMap()-->Line_21 $$ final String realname = attributes.get("realname")[ FD ]
Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())-->Line_21 $$ final String realname = attributes.get("realname")[ FD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_22 $$ final String email = attributes.get("emailaddress")[ CD ]
Line_22 $$ final String email = attributes.get("emailaddress")-->Line_22 $$ final String email = attributes.get("emailaddress")[ CD ]
Line_4 $$ Map<String, String> attributes = Collections.emptyMap()-->Line_22 $$ final String email = attributes.get("emailaddress")[ FD ]
Line_13 $$ attributes = parseResponseStream(response.getEntity().getContent())-->Line_22 $$ final String email = attributes.get("emailaddress")[ FD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_23 $$ if (id == null || "".equals(id)) [ CD ]
Line_20 $$ final String id = attributes.get("id")-->Line_23 $$ if (id == null || "".equals(id)) [ FD ]
Line_23 $$ if (id == null || "".equals(id)) -->Line_24 $$ LogUtils.errorf(this, "Unable to retrieve ID from user info.")[ CD ]
Line_23 $$ if (id == null || "".equals(id)) -->Line_25 $$ return null[ CD ]
Line_2 $$ public RTUser getUserInfo(final String username) -->Line_27 $$ return new RTUser(Long.parseLong(id.replace("user/", "")), username, realname, email)[ CD ]
Line_20 $$ final String id = attributes.get("id")-->Line_27 $$ return new RTUser(Long.parseLong(id.replace("user/", "")), username, realname, email)[ FD ]
