Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception [ CD ]
Line_2 $$ public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception -->Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()[ CD ]
Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()-->Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()[ CD ]
Line_2 $$ public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception -->Line_4 $$ spf.setValidating(false)[ CD ]
Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()-->Line_4 $$ spf.setValidating(false)[ FD ]
Line_2 $$ public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception -->Line_5 $$ spf.setNamespaceAware(true)[ CD ]
Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()-->Line_5 $$ spf.setNamespaceAware(true)[ FD ]
Line_7 $$ SchemaFactory schemaFactory = SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema")-->Line_7 $$ SchemaFactory schemaFactory = SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema")[ CD ]
Line_9 $$ InputStream urlStream = null-->Line_11 $$ urlStream = schemaURL.openStream()[ FD ]
Line_11 $$ urlStream = schemaURL.openStream()-->Line_11 $$ urlStream = schemaURL.openStream()[ FD ]
Line_11 $$ urlStream = schemaURL.openStream()-->Line_11 $$ urlStream = schemaURL.openStream()[ CD ]
Line_8 $$ URL schemaURL = new URL(schemeUrl)-->Line_11 $$ urlStream = schemaURL.openStream()[ FD ]
Line_13 $$ if (defaultUrl != null) -->Line_14 $$ schemaURL = new URL(defaultUrl)[ CD ]
Line_8 $$ URL schemaURL = new URL(schemeUrl)-->Line_14 $$ schemaURL = new URL(defaultUrl)[ FD ]
Line_14 $$ schemaURL = new URL(defaultUrl)-->Line_14 $$ schemaURL = new URL(defaultUrl)[ FD ]
Line_13 $$ if (defaultUrl != null) -->Line_15 $$ urlStream = schemaURL.openStream()[ CD ]
Line_9 $$ InputStream urlStream = null-->Line_15 $$ urlStream = schemaURL.openStream()[ FD ]
Line_11 $$ urlStream = schemaURL.openStream()-->Line_15 $$ urlStream = schemaURL.openStream()[ FD ]
Line_15 $$ urlStream = schemaURL.openStream()-->Line_15 $$ urlStream = schemaURL.openStream()[ FD ]
Line_15 $$ urlStream = schemaURL.openStream()-->Line_15 $$ urlStream = schemaURL.openStream()[ CD ]
Line_8 $$ URL schemaURL = new URL(schemeUrl)-->Line_15 $$ urlStream = schemaURL.openStream()[ FD ]
Line_14 $$ schemaURL = new URL(defaultUrl)-->Line_15 $$ urlStream = schemaURL.openStream()[ FD ]
Line_22 $$ Schema schema = schemaFactory.newSchema(sss)-->Line_22 $$ Schema schema = schemaFactory.newSchema(sss)[ CD ]
Line_7 $$ SchemaFactory schemaFactory = SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema")-->Line_22 $$ Schema schema = schemaFactory.newSchema(sss)[ FD ]
Line_21 $$ StreamSource sss = new StreamSource(urlStream)-->Line_22 $$ Schema schema = schemaFactory.newSchema(sss)[ FD ]
Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()-->Line_23 $$ spf.setSchema(schema)[ FD ]
Line_22 $$ Schema schema = schemaFactory.newSchema(sss)-->Line_23 $$ spf.setSchema(schema)[ FD ]
Line_24 $$ SAXParser parser = spf.newSAXParser()-->Line_24 $$ SAXParser parser = spf.newSAXParser()[ CD ]
Line_3 $$ SAXParserFactory spf = SAXParserFactory.newInstance()-->Line_24 $$ SAXParser parser = spf.newSAXParser()[ FD ]
Line_25 $$ XMLReader reader = parser.getXMLReader()-->Line_25 $$ XMLReader reader = parser.getXMLReader()[ CD ]
Line_24 $$ SAXParser parser = spf.newSAXParser()-->Line_25 $$ XMLReader reader = parser.getXMLReader()[ FD ]
Line_25 $$ XMLReader reader = parser.getXMLReader()-->Line_26 $$ reader.setErrorHandler(errorHandler)[ FD ]
Line_2 $$ public void validateXml(InputStream inputData, ErrorHandler errorHandler) throws SAXException, IOException, Exception -->Line_26 $$ reader.setErrorHandler(errorHandler)[ FD ]
Line_25 $$ XMLReader reader = parser.getXMLReader()-->Line_27 $$ reader.parse(new InputSource(inputData))[ FD ]
