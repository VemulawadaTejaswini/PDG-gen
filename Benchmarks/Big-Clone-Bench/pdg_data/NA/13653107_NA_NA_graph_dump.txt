Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) [ CD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_3 $$ Config.defaultDevice = defaultDevice[ CD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_3 $$ Config.defaultDevice = defaultDevice[ FD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_4 $$ Config.emulatorContext = emulatorContext[ CD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_4 $$ Config.emulatorContext = emulatorContext[ FD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_5 $$ File configFile = new File(getConfigPath(), "config2.xml")[ CD ]
Line_5 $$ File configFile = new File(getConfigPath(), "config2.xml")-->Line_7 $$ if (configFile.exists()) [ FD ]
Line_7 $$ if (configFile.exists()) -->Line_7 $$ if (configFile.exists()) [ CD ]
Line_5 $$ File configFile = new File(getConfigPath(), "config2.xml")-->Line_7 $$ if (configFile.exists()) [ FD ]
Line_7 $$ if (configFile.exists()) -->Line_8 $$ loadConfigFile("config2.xml")[ CD ]
Line_7 $$ if (configFile.exists()) -->Line_10 $$ configFile = new File(getConfigPath(), "config.xml")[ CD ]
Line_5 $$ File configFile = new File(getConfigPath(), "config2.xml")-->Line_10 $$ configFile = new File(getConfigPath(), "config.xml")[ FD ]
Line_10 $$ configFile = new File(getConfigPath(), "config.xml")-->Line_10 $$ configFile = new File(getConfigPath(), "config.xml")[ FD ]
Line_7 $$ if (configFile.exists()) -->Line_11 $$ if (configFile.exists()) [ CD ]
Line_5 $$ File configFile = new File(getConfigPath(), "config2.xml")-->Line_11 $$ if (configFile.exists()) [ FD ]
Line_10 $$ configFile = new File(getConfigPath(), "config.xml")-->Line_11 $$ if (configFile.exists()) [ FD ]
Line_11 $$ if (configFile.exists()) -->Line_11 $$ if (configFile.exists()) [ CD ]
Line_5 $$ File configFile = new File(getConfigPath(), "config2.xml")-->Line_11 $$ if (configFile.exists()) [ FD ]
Line_10 $$ configFile = new File(getConfigPath(), "config.xml")-->Line_11 $$ if (configFile.exists()) [ FD ]
Line_11 $$ if (configFile.exists()) -->Line_12 $$ loadConfigFile("config.xml")[ CD ]
Line_11 $$ if (configFile.exists()) -->Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) [ CD ]
Line_11 $$ if (configFile.exists()) -->Line_11 $$ if (configFile.exists()) [ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) [ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) [ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) [ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()[ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()[ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_15 $$ if (!entry.canRemove()) [ CD ]
Line_15 $$ if (!entry.canRemove()) -->Line_15 $$ if (!entry.canRemove()) [ CD ]
Line_15 $$ if (!entry.canRemove()) -->Line_15 $$ if (!entry.canRemove()) [ CD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_15 $$ if (!entry.canRemove()) [ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_18 $$ removeDeviceEntry(entry)[ CD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_18 $$ removeDeviceEntry(entry)[ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_19 $$ File src = new File(getConfigPath(), entry.getFileName())[ CD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_19 $$ File src = new File(getConfigPath(), entry.getFileName())[ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())[ CD ]
Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())-->Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())[ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_21 $$ IOUtils.copyFile(src, dst)[ CD ]
Line_19 $$ File src = new File(getConfigPath(), entry.getFileName())-->Line_21 $$ IOUtils.copyFile(src, dst)[ FD ]
Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())-->Line_21 $$ IOUtils.copyFile(src, dst)[ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_22 $$ entry.setFileName(dst.getName())[ CD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_22 $$ entry.setFileName(dst.getName())[ FD ]
Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())-->Line_22 $$ entry.setFileName(dst.getName())[ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_23 $$ addDeviceEntry(entry)[ CD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_23 $$ addDeviceEntry(entry)[ FD ]
Line_11 $$ if (configFile.exists()) -->Line_26 $$ createDefaultConfigXml()[ CD ]
Line_7 $$ if (configFile.exists()) -->Line_28 $$ saveConfig()[ CD ]
Line_34 $$ if (configXml == null) -->Line_35 $$ createDefaultConfigXml()[ CD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_38 $$ urlsMRU.read(configXml.getChildOrNew("files").getChildOrNew("recent"))[ CD ]
Line_2 $$ public static void loadConfig(DeviceEntry defaultDevice, EmulatorContext emulatorContext) -->Line_39 $$ initSystemProperties()[ CD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) [ FD ]
Line_13 $$ for (Enumeration e = getDeviceEntries().elements(); e.hasMoreElements(); ) -->Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()[ FD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_15 $$ if (!entry.canRemove()) [ FD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_18 $$ removeDeviceEntry(entry)[ FD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_19 $$ File src = new File(getConfigPath(), entry.getFileName())[ FD ]
Line_19 $$ File src = new File(getConfigPath(), entry.getFileName())-->Line_21 $$ IOUtils.copyFile(src, dst)[ FD ]
Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())-->Line_21 $$ IOUtils.copyFile(src, dst)[ FD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_22 $$ entry.setFileName(dst.getName())[ FD ]
Line_20 $$ File dst = File.createTempFile("dev", ".jar", getConfigPath())-->Line_22 $$ entry.setFileName(dst.getName())[ FD ]
Line_14 $$ DeviceEntry entry = (DeviceEntry) e.nextElement()-->Line_23 $$ addDeviceEntry(entry)[ FD ]
