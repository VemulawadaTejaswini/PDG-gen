Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception [ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_3 $$ String result = ""[ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_4 $$ HttpPost request = new HttpPost(baseUrl)[ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_5 $$ HttpEntity entity = null[ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_6 $$ if (params != null && !params.isEmpty()) [ CD ]
Line_6 $$ if (params != null && !params.isEmpty()) -->Line_6 $$ if (params != null && !params.isEmpty()) [ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_6 $$ if (params != null && !params.isEmpty()) [ FD ]
Line_6 $$ if (params != null && !params.isEmpty()) -->Line_7 $$ List<NameValuePair> postParams = new ArrayList<NameValuePair>()[ CD ]
Line_6 $$ if (params != null && !params.isEmpty()) -->Line_8 $$ List<String> keys = new ArrayList<String>(params.keySet())[ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_8 $$ List<String> keys = new ArrayList<String>(params.keySet())[ FD ]
Line_7 $$ List<NameValuePair> postParams = new ArrayList<NameValuePair>()-->Line_10 $$ postParams.add(new BasicNameValuePair(key, params.get(key)))[ FD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_10 $$ postParams.add(new BasicNameValuePair(key, params.get(key)))[ FD ]
Line_9 $$ for (String key : keys) -->Line_10 $$ postParams.add(new BasicNameValuePair(key, params.get(key)))[ FD ]
Line_6 $$ if (params != null && !params.isEmpty()) -->Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")[ CD ]
Line_5 $$ HttpEntity entity = null-->Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")[ FD ]
Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")-->Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")[ FD ]
Line_6 $$ if (params != null && !params.isEmpty()) -->Line_13 $$ request.setEntity(entity)[ CD ]
Line_4 $$ HttpPost request = new HttpPost(baseUrl)-->Line_13 $$ request.setEntity(entity)[ FD ]
Line_5 $$ HttpEntity entity = null-->Line_13 $$ request.setEntity(entity)[ FD ]
Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")-->Line_13 $$ request.setEntity(entity)[ FD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_15 $$ HttpResponse res = client.execute(request)[ CD ]
Line_15 $$ HttpResponse res = client.execute(request)-->Line_15 $$ HttpResponse res = client.execute(request)[ CD ]
Line_4 $$ HttpPost request = new HttpPost(baseUrl)-->Line_15 $$ HttpResponse res = client.execute(request)[ FD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) [ CD ]
Line_15 $$ HttpResponse res = client.execute(request)-->Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) [ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_17 $$ entity = res.getEntity()[ CD ]
Line_5 $$ HttpEntity entity = null-->Line_17 $$ entity = res.getEntity()[ FD ]
Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")-->Line_17 $$ entity = res.getEntity()[ FD ]
Line_17 $$ entity = res.getEntity()-->Line_17 $$ entity = res.getEntity()[ FD ]
Line_17 $$ entity = res.getEntity()-->Line_17 $$ entity = res.getEntity()[ CD ]
Line_15 $$ HttpResponse res = client.execute(request)-->Line_17 $$ entity = res.getEntity()[ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(entity.getContent()))[ CD ]
Line_5 $$ HttpEntity entity = null-->Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(entity.getContent()))[ FD ]
Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")-->Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(entity.getContent()))[ FD ]
Line_17 $$ entity = res.getEntity()-->Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(entity.getContent()))[ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_19 $$ StringBuffer content = new StringBuffer()[ CD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_20 $$ String read = ""[ CD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_21 $$ while ((read = in.readLine()) != null) [ CD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) [ CD ]
Line_21 $$ while ((read = in.readLine()) != null) -->Line_21 $$ while ((read = in.readLine()) != null) [ FD ]
Line_20 $$ String read = ""-->Line_21 $$ while ((read = in.readLine()) != null) [ FD ]
Line_21 $$ while ((read = in.readLine()) != null) -->Line_21 $$ while ((read = in.readLine()) != null) [ CD ]
Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(entity.getContent()))-->Line_21 $$ while ((read = in.readLine()) != null) [ FD ]
Line_21 $$ while ((read = in.readLine()) != null) -->Line_22 $$ content.append(read)[ CD ]
Line_19 $$ StringBuffer content = new StringBuffer()-->Line_22 $$ content.append(read)[ FD ]
Line_21 $$ while ((read = in.readLine()) != null) -->Line_22 $$ content.append(read)[ FD ]
Line_20 $$ String read = ""-->Line_22 $$ content.append(read)[ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_24 $$ in.close()[ CD ]
Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(entity.getContent()))-->Line_24 $$ in.close()[ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_25 $$ JSONObject rObj = new JSONObject(content.toString())[ CD ]
Line_19 $$ StringBuffer content = new StringBuffer()-->Line_25 $$ JSONObject rObj = new JSONObject(content.toString())[ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_26 $$ result = rObj.getString("msg")[ CD ]
Line_3 $$ String result = ""-->Line_26 $$ result = rObj.getString("msg")[ FD ]
Line_26 $$ result = rObj.getString("msg")-->Line_26 $$ result = rObj.getString("msg")[ FD ]
Line_26 $$ result = rObj.getString("msg")-->Line_26 $$ result = rObj.getString("msg")[ CD ]
Line_25 $$ JSONObject rObj = new JSONObject(content.toString())-->Line_26 $$ result = rObj.getString("msg")[ FD ]
Line_16 $$ if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_27 $$ result = "请求失败了"[ CD ]
Line_3 $$ String result = ""-->Line_27 $$ result = "请求失败了"[ FD ]
Line_26 $$ result = rObj.getString("msg")-->Line_27 $$ result = "请求失败了"[ FD ]
Line_27 $$ result = "请求失败了"-->Line_27 $$ result = "请求失败了"[ FD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_28 $$ entity.consumeContent()[ CD ]
Line_5 $$ HttpEntity entity = null-->Line_28 $$ entity.consumeContent()[ FD ]
Line_12 $$ entity = new UrlEncodedFormEntity(postParams, "utf-8")-->Line_28 $$ entity.consumeContent()[ FD ]
Line_17 $$ entity = res.getEntity()-->Line_28 $$ entity.consumeContent()[ FD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_29 $$ client.getConnectionManager().shutdown()[ CD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_30 $$ request = null[ CD ]
Line_4 $$ HttpPost request = new HttpPost(baseUrl)-->Line_30 $$ request = null[ FD ]
Line_30 $$ request = null-->Line_30 $$ request = null[ FD ]
Line_2 $$ public String requestPOST(String baseUrl, Map<String, String> params) throws Exception -->Line_31 $$ return result[ CD ]
Line_21 $$ while ((read = in.readLine()) != null) -->Line_22 $$ content.append(read)[ FD ]
