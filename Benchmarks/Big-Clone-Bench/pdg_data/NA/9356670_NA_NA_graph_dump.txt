Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private FTPClient loginToSharedWorkspace() throws SocketException, IOException [ CD ]
Line_2 $$ private FTPClient loginToSharedWorkspace() throws SocketException, IOException -->Line_3 $$ FTPClient ftp = new FTPClient()[ CD ]
Line_2 $$ private FTPClient loginToSharedWorkspace() throws SocketException, IOException -->Line_4 $$ ftp.connect(mSwarm.getHost(), mSharedWorkspacePort)[ CD ]
Line_3 $$ FTPClient ftp = new FTPClient()-->Line_4 $$ ftp.connect(mSwarm.getHost(), mSharedWorkspacePort)[ FD ]
Line_2 $$ private FTPClient loginToSharedWorkspace() throws SocketException, IOException -->Line_5 $$ if (!ftp.login(SHARED_WORKSPACE_LOGIN_NAME, mWorkspacePassword)) [ CD ]
Line_5 $$ if (!ftp.login(SHARED_WORKSPACE_LOGIN_NAME, mWorkspacePassword)) -->Line_5 $$ if (!ftp.login(SHARED_WORKSPACE_LOGIN_NAME, mWorkspacePassword)) [ CD ]
Line_5 $$ if (!ftp.login(SHARED_WORKSPACE_LOGIN_NAME, mWorkspacePassword)) -->Line_5 $$ if (!ftp.login(SHARED_WORKSPACE_LOGIN_NAME, mWorkspacePassword)) [ CD ]
Line_3 $$ FTPClient ftp = new FTPClient()-->Line_5 $$ if (!ftp.login(SHARED_WORKSPACE_LOGIN_NAME, mWorkspacePassword)) [ FD ]
Line_2 $$ private FTPClient loginToSharedWorkspace() throws SocketException, IOException -->Line_8 $$ ftp.setFileType(FTPClient.BINARY_FILE_TYPE)[ CD ]
Line_3 $$ FTPClient ftp = new FTPClient()-->Line_8 $$ ftp.setFileType(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_2 $$ private FTPClient loginToSharedWorkspace() throws SocketException, IOException -->Line_9 $$ return ftp[ CD ]
