Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException [ CD ]
Line_7 $$ if ((condition == ConditionalOperatorTable.CONTAINS_LINK) || (condition == ConditionalOperatorTable.NOT_CONTAINS_LINK)) -->Line_8 $$ ObjectTable ot = new ObjectTable()[ CD ]
Line_7 $$ if ((condition == ConditionalOperatorTable.CONTAINS_LINK) || (condition == ConditionalOperatorTable.NOT_CONTAINS_LINK)) -->Line_9 $$ if (ot.contains(objectId) == false)[ CD ]
Line_8 $$ ObjectTable ot = new ObjectTable()-->Line_9 $$ if (ot.contains(objectId) == false)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_9 $$ if (ot.contains(objectId) == false)[ FD ]
Line_4 $$ Connection conn = null-->Line_11 $$ conn = fido.util.FidoDataSource.getConnection()[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_11 $$ conn = fido.util.FidoDataSource.getConnection()[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_11 $$ conn = fido.util.FidoDataSource.getConnection()[ CD ]
Line_4 $$ Connection conn = null-->Line_12 $$ conn.setAutoCommit(false)[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_12 $$ conn.setAutoCommit(false)[ FD ]
Line_5 $$ Statement stmt = null-->Line_13 $$ stmt = conn.createStatement()[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_13 $$ stmt = conn.createStatement()[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_13 $$ stmt = conn.createStatement()[ CD ]
Line_4 $$ Connection conn = null-->Line_13 $$ stmt = conn.createStatement()[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_13 $$ stmt = conn.createStatement()[ FD ]
Line_5 $$ Statement stmt = null-->Line_14 $$ if (contains(stmt, positive) == false)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_14 $$ if (contains(stmt, positive) == false)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_14 $$ if (contains(stmt, positive) == false)[ FD ]
Line_5 $$ Statement stmt = null-->Line_15 $$ if (contains(stmt, negative) == false)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_15 $$ if (contains(stmt, negative) == false)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_15 $$ if (contains(stmt, negative) == false)[ FD ]
Line_5 $$ Statement stmt = null-->Line_17 $$ stmt.executeUpdate(sql)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_17 $$ stmt.executeUpdate(sql)[ FD ]
Line_16 $$ String sql = "insert into Instructions (Type, Operator, FrameSlot, LinkName, ObjectId, AttributeName) " + "values (2, " + condition + ", '" + frameSlot + "', '" + linkName + "', " + objectId + ", '" + attribute + "')"-->Line_17 $$ stmt.executeUpdate(sql)[ FD ]
Line_18 $$ int id = getCurrentId(stmt)-->Line_18 $$ int id = getCurrentId(stmt)[ CD ]
Line_5 $$ Statement stmt = null-->Line_18 $$ int id = getCurrentId(stmt)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_18 $$ int id = getCurrentId(stmt)[ FD ]
Line_19 $$ InstructionGroupTable groupTable = new InstructionGroupTable()-->Line_20 $$ groupTable.deleteInstruction(stmt, id)[ FD ]
Line_5 $$ Statement stmt = null-->Line_20 $$ groupTable.deleteInstruction(stmt, id)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_20 $$ groupTable.deleteInstruction(stmt, id)[ FD ]
Line_18 $$ int id = getCurrentId(stmt)-->Line_20 $$ groupTable.deleteInstruction(stmt, id)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_21 $$ if (positive != -1)[ FD ]
Line_21 $$ if (positive != -1)-->Line_21 $$ groupTable.addInstructionAt(stmt, id, 1, positive)[ CD ]
Line_19 $$ InstructionGroupTable groupTable = new InstructionGroupTable()-->Line_21 $$ groupTable.addInstructionAt(stmt, id, 1, positive)[ FD ]
Line_5 $$ Statement stmt = null-->Line_21 $$ groupTable.addInstructionAt(stmt, id, 1, positive)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_21 $$ groupTable.addInstructionAt(stmt, id, 1, positive)[ FD ]
Line_18 $$ int id = getCurrentId(stmt)-->Line_21 $$ groupTable.addInstructionAt(stmt, id, 1, positive)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_21 $$ groupTable.addInstructionAt(stmt, id, 1, positive)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_22 $$ if (negative != -1)[ FD ]
Line_22 $$ if (negative != -1)-->Line_22 $$ groupTable.addInstructionAt(stmt, id, 2, negative)[ CD ]
Line_19 $$ InstructionGroupTable groupTable = new InstructionGroupTable()-->Line_22 $$ groupTable.addInstructionAt(stmt, id, 2, negative)[ FD ]
Line_5 $$ Statement stmt = null-->Line_22 $$ groupTable.addInstructionAt(stmt, id, 2, negative)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_22 $$ groupTable.addInstructionAt(stmt, id, 2, negative)[ FD ]
Line_18 $$ int id = getCurrentId(stmt)-->Line_22 $$ groupTable.addInstructionAt(stmt, id, 2, negative)[ FD ]
Line_2 $$ public int addDecisionInstruction(int condition, String frameSlot, String linkName, int objectId, String attribute, int positive, int negative) throws FidoDatabaseException, ObjectNotFoundException, InstructionNotFoundException -->Line_22 $$ groupTable.addInstructionAt(stmt, id, 2, negative)[ FD ]
Line_4 $$ Connection conn = null-->Line_23 $$ conn.commit()[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_23 $$ conn.commit()[ FD ]
Line_4 $$ Connection conn = null-->Line_26 $$ if (conn != null)[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_26 $$ if (conn != null)[ FD ]
Line_26 $$ if (conn != null)-->Line_26 $$ conn.rollback()[ CD ]
Line_4 $$ Connection conn = null-->Line_26 $$ conn.rollback()[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_26 $$ conn.rollback()[ FD ]
Line_5 $$ Statement stmt = null-->Line_29 $$ if (stmt != null)[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_29 $$ if (stmt != null)[ FD ]
Line_29 $$ if (stmt != null)-->Line_29 $$ stmt.close()[ CD ]
Line_5 $$ Statement stmt = null-->Line_29 $$ stmt.close()[ FD ]
Line_13 $$ stmt = conn.createStatement()-->Line_29 $$ stmt.close()[ FD ]
Line_4 $$ Connection conn = null-->Line_30 $$ if (conn != null)[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_30 $$ if (conn != null)[ FD ]
Line_30 $$ if (conn != null)-->Line_30 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = null-->Line_30 $$ conn.close()[ FD ]
Line_11 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_30 $$ conn.close()[ FD ]
