Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String getMD5(String host) [ CD ]
Line_2 $$ public String getMD5(String host) -->Line_3 $$ String res = ""[ CD ]
Line_2 $$ public String getMD5(String host) -->Line_4 $$ Double randNumber = Math.random() + System.currentTimeMillis()[ CD ]
Line_6 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5")-->Line_6 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5")[ CD ]
Line_6 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5")-->Line_7 $$ algorithm.reset()[ FD ]
Line_6 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5")-->Line_8 $$ algorithm.update(randNumber.toString().getBytes())[ FD ]
Line_4 $$ Double randNumber = Math.random() + System.currentTimeMillis()-->Line_8 $$ algorithm.update(randNumber.toString().getBytes())[ FD ]
Line_9 $$ byte[] md5 = algorithm.digest()-->Line_9 $$ byte[] md5 = algorithm.digest()[ CD ]
Line_6 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5")-->Line_9 $$ byte[] md5 = algorithm.digest()[ FD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_11 $$ for (int i = 0; i < md5.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_11 $$ for (int i = 0; i < md5.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_11 $$ for (int i = 0; i < md5.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))[ CD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))[ FD ]
Line_10 $$ String tmp = ""-->Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))[ FD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_13 $$ if (tmp.length() == 1) [ CD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_13 $$ if (tmp.length() == 1) [ FD ]
Line_10 $$ String tmp = ""-->Line_13 $$ if (tmp.length() == 1) [ FD ]
Line_13 $$ if (tmp.length() == 1) -->Line_14 $$ res += "0" + tmp[ CD ]
Line_14 $$ res += "0" + tmp-->Line_14 $$ res += "0" + tmp[ FD ]
Line_3 $$ String res = ""-->Line_14 $$ res += "0" + tmp[ FD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_14 $$ res += "0" + tmp[ FD ]
Line_10 $$ String tmp = ""-->Line_14 $$ res += "0" + tmp[ FD ]
Line_13 $$ if (tmp.length() == 1) -->Line_16 $$ res += tmp[ CD ]
Line_14 $$ res += "0" + tmp-->Line_16 $$ res += tmp[ FD ]
Line_16 $$ res += tmp-->Line_16 $$ res += tmp[ FD ]
Line_3 $$ String res = ""-->Line_16 $$ res += tmp[ FD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_16 $$ res += tmp[ FD ]
Line_10 $$ String tmp = ""-->Line_16 $$ res += tmp[ FD ]
Line_2 $$ public String getMD5(String host) -->Line_21 $$ return res[ CD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_11 $$ for (int i = 0; i < md5.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_11 $$ for (int i = 0; i < md5.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < md5.length; i++) -->Line_11 $$ for (int i = 0; i < md5.length; i++) [ FD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_13 $$ if (tmp.length() == 1) [ FD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_14 $$ res += "0" + tmp[ FD ]
Line_12 $$ tmp = (Integer.toHexString(0xFF & md5[i]))-->Line_16 $$ res += tmp[ FD ]
