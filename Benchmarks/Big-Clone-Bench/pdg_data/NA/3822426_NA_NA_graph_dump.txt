Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int addPermissionsForUserAndAgenda(Integer userId, Integer agendaId, String permissions) throws TechnicalException [ CD ]
Line_2 $$ public int addPermissionsForUserAndAgenda(Integer userId, Integer agendaId, String permissions) throws TechnicalException -->Line_3 $$ if (permissions == null) [ CD ]
Line_2 $$ public int addPermissionsForUserAndAgenda(Integer userId, Integer agendaId, String permissions) throws TechnicalException -->Line_3 $$ if (permissions == null) [ FD ]
Line_2 $$ public int addPermissionsForUserAndAgenda(Integer userId, Integer agendaId, String permissions) throws TechnicalException -->Line_6 $$ Session session = null[ CD ]
Line_2 $$ public int addPermissionsForUserAndAgenda(Integer userId, Integer agendaId, String permissions) throws TechnicalException -->Line_7 $$ Transaction transaction = null[ CD ]
Line_6 $$ Session session = null-->Line_9 $$ session = HibernateUtil.getCurrentSession()[ FD ]
Line_9 $$ session = HibernateUtil.getCurrentSession()-->Line_9 $$ session = HibernateUtil.getCurrentSession()[ FD ]
Line_9 $$ session = HibernateUtil.getCurrentSession()-->Line_9 $$ session = HibernateUtil.getCurrentSession()[ CD ]
Line_7 $$ Transaction transaction = null-->Line_10 $$ transaction = session.beginTransaction()[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_10 $$ transaction = session.beginTransaction()[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_10 $$ transaction = session.beginTransaction()[ CD ]
Line_6 $$ Session session = null-->Line_10 $$ transaction = session.beginTransaction()[ FD ]
Line_9 $$ session = HibernateUtil.getCurrentSession()-->Line_10 $$ transaction = session.beginTransaction()[ FD ]
Line_12 $$ Statement statement = session.connection().createStatement()-->Line_12 $$ Statement statement = session.connection().createStatement()[ CD ]
Line_6 $$ Session session = null-->Line_12 $$ Statement statement = session.connection().createStatement()[ FD ]
Line_9 $$ session = HibernateUtil.getCurrentSession()-->Line_12 $$ Statement statement = session.connection().createStatement()[ FD ]
Line_13 $$ int rowsUpdated = statement.executeUpdate(query)-->Line_13 $$ int rowsUpdated = statement.executeUpdate(query)[ CD ]
Line_12 $$ Statement statement = session.connection().createStatement()-->Line_13 $$ int rowsUpdated = statement.executeUpdate(query)[ FD ]
Line_11 $$ String query = "INSERT INTO j_user_agenda (userId, agendaId, permissions) VALUES(" + userId + "," + agendaId + ",\"" + permissions + "\")"-->Line_13 $$ int rowsUpdated = statement.executeUpdate(query)[ FD ]
Line_7 $$ Transaction transaction = null-->Line_14 $$ transaction.commit()[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_14 $$ transaction.commit()[ FD ]
Line_7 $$ Transaction transaction = null-->Line_17 $$ if (transaction != null)[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_17 $$ if (transaction != null)[ FD ]
Line_17 $$ if (transaction != null)-->Line_17 $$ transaction.rollback()[ CD ]
Line_7 $$ Transaction transaction = null-->Line_17 $$ transaction.rollback()[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_17 $$ transaction.rollback()[ FD ]
Line_7 $$ Transaction transaction = null-->Line_20 $$ if (transaction != null)[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_20 $$ if (transaction != null)[ FD ]
Line_20 $$ if (transaction != null)-->Line_20 $$ transaction.rollback()[ CD ]
Line_7 $$ Transaction transaction = null-->Line_20 $$ transaction.rollback()[ FD ]
Line_10 $$ transaction = session.beginTransaction()-->Line_20 $$ transaction.rollback()[ FD ]
