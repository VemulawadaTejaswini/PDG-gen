Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception [ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_7 $$ sLoginLabel = getLoginLabel(sSideURL)[ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_8 $$ String sParams = getLoginParams()[ CD ]
Line_8 $$ String sParams = getLoginParams()-->Line_8 $$ String sParams = getLoginParams()[ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_9 $$ CookieHandler.setDefault(new ListCookieHandler())[ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_10 $$ URL url = new URL(sSideURL + sLoginURL)[ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_11 $$ URLConnection conn = url.openConnection()[ CD ]
Line_11 $$ URLConnection conn = url.openConnection()-->Line_11 $$ URLConnection conn = url.openConnection()[ CD ]
Line_10 $$ URL url = new URL(sSideURL + sLoginURL)-->Line_11 $$ URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_12 $$ setRequestProperties(conn)[ CD ]
Line_11 $$ URLConnection conn = url.openConnection()-->Line_12 $$ setRequestProperties(conn)[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_13 $$ conn.setDoInput(true)[ CD ]
Line_11 $$ URLConnection conn = url.openConnection()-->Line_13 $$ conn.setDoInput(true)[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_14 $$ conn.setDoOutput(true)[ CD ]
Line_11 $$ URLConnection conn = url.openConnection()-->Line_14 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ CD ]
Line_11 $$ URLConnection conn = url.openConnection()-->Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_16 $$ wr.write(sParams)[ CD ]
Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_16 $$ wr.write(sParams)[ FD ]
Line_8 $$ String sParams = getLoginParams()-->Line_16 $$ wr.write(sParams)[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_17 $$ wr.flush()[ CD ]
Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_17 $$ wr.flush()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_11 $$ URLConnection conn = url.openConnection()-->Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_19 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_20 $$ String line = rd.readLine()[ CD ]
Line_20 $$ String line = rd.readLine()-->Line_20 $$ String line = rd.readLine()[ CD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_20 $$ String line = rd.readLine()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_21 $$ while (line != null) [ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception [ CD ]
Line_20 $$ String line = rd.readLine()-->Line_21 $$ while (line != null) [ FD ]
Line_21 $$ while (line != null) -->Line_22 $$ sb.append(line + "\n")[ CD ]
Line_19 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append(line + "\n")[ FD ]
Line_21 $$ while (line != null) -->Line_23 $$ line = rd.readLine()[ CD ]
Line_23 $$ line = rd.readLine()-->Line_23 $$ line = rd.readLine()[ FD ]
Line_20 $$ String line = rd.readLine()-->Line_23 $$ line = rd.readLine()[ FD ]
Line_23 $$ line = rd.readLine()-->Line_23 $$ line = rd.readLine()[ CD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_23 $$ line = rd.readLine()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_25 $$ wr.close()[ CD ]
Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_25 $$ wr.close()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_26 $$ rd.close()[ CD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_26 $$ rd.close()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_27 $$ String sPage = sb.toString()[ CD ]
Line_27 $$ String sPage = sb.toString()-->Line_27 $$ String sPage = sb.toString()[ CD ]
Line_19 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ String sPage = sb.toString()[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_28 $$ Pattern p = Pattern.compile(">Dein Penner<")[ CD ]
Line_28 $$ Pattern p = Pattern.compile(">Dein Penner<")-->Line_28 $$ Pattern p = Pattern.compile(">Dein Penner<")[ CD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_29 $$ Matcher matcher = p.matcher(sPage)[ CD ]
Line_29 $$ Matcher matcher = p.matcher(sPage)-->Line_29 $$ Matcher matcher = p.matcher(sPage)[ CD ]
Line_28 $$ Pattern p = Pattern.compile(">Dein Penner<")-->Line_29 $$ Matcher matcher = p.matcher(sPage)[ FD ]
Line_27 $$ String sPage = sb.toString()-->Line_29 $$ Matcher matcher = p.matcher(sPage)[ FD ]
Line_2 $$ public void login(String UID, String PWD, int CTY) throws Exception -->Line_30 $$ LogedIn = matcher.find()[ CD ]
Line_29 $$ Matcher matcher = p.matcher(sPage)-->Line_30 $$ LogedIn = matcher.find()[ FD ]
Line_23 $$ line = rd.readLine()-->Line_21 $$ while (line != null) [ FD ]
Line_23 $$ line = rd.readLine()-->Line_21 $$ while (line != null) [ FD ]
