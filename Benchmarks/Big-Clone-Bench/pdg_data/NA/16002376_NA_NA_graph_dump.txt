Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException [ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_3 $$ HttpURLConnection http = h[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_4 $$ boolean done = false[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_5 $$ GregorianCalendar sendTime = new GregorianCalendar()[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_6 $$ GregorianCalendar testTime = new GregorianCalendar()[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_7 $$ GregorianCalendar retryTime = null[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_8 $$ String retryAfter[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_9 $$ int retryCount = 0[ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_10 $$ do [ CD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException [ CD ]
Line_3 $$ HttpURLConnection http = h-->Line_12 $$ http.setRequestProperty("User-Agent", strUserAgent)[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_13 $$ http.setRequestProperty("From", strFrom)[ FD ]
Line_14 $$ if (strUser != null && strUser.length() > 0) -->Line_15 $$ byte[] encodedPassword = (strUser + ":" + strPassword).getBytes()[ CD ]
Line_15 $$ byte[] encodedPassword = (strUser + ":" + strPassword).getBytes()-->Line_15 $$ byte[] encodedPassword = (strUser + ":" + strPassword).getBytes()[ CD ]
Line_14 $$ if (strUser != null && strUser.length() > 0) -->Line_16 $$ BASE64Encoder encoder = new BASE64Encoder()[ CD ]
Line_14 $$ if (strUser != null && strUser.length() > 0) -->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ CD ]
Line_3 $$ HttpURLConnection http = h-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_16 $$ BASE64Encoder encoder = new BASE64Encoder()-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_15 $$ byte[] encodedPassword = (strUser + ":" + strPassword).getBytes()-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_5 $$ GregorianCalendar sendTime = new GregorianCalendar()-->Line_19 $$ sendTime.setTime(new Date())[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_20 $$ http.connect()[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_21 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_OK) [ FD ]
Line_21 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_22 $$ done = true[ CD ]
Line_22 $$ done = true-->Line_22 $$ done = true[ FD ]
Line_4 $$ boolean done = false-->Line_22 $$ done = true[ FD ]
Line_21 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) [ CD ]
Line_3 $$ HttpURLConnection http = h-->Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) [ FD ]
Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) -->Line_24 $$ retryCount++[ CD ]
Line_9 $$ int retryCount = 0-->Line_24 $$ retryCount++[ FD ]
Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) -->Line_25 $$ if (retryCount > iRetryLimit) [ CD ]
Line_9 $$ int retryCount = 0-->Line_25 $$ if (retryCount > iRetryLimit) [ FD ]
Line_25 $$ if (retryCount > iRetryLimit) -->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ CD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ FD ]
Line_8 $$ String retryAfter-->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ FD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ CD ]
Line_3 $$ HttpURLConnection http = h-->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ FD ]
Line_25 $$ if (retryCount > iRetryLimit) -->Line_29 $$ if (retryAfter == null) [ CD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_29 $$ if (retryAfter == null) [ FD ]
Line_8 $$ String retryAfter-->Line_29 $$ if (retryAfter == null) [ FD ]
Line_33 $$ int sec = Integer.parseInt(retryAfter)-->Line_33 $$ int sec = Integer.parseInt(retryAfter)[ CD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_33 $$ int sec = Integer.parseInt(retryAfter)[ FD ]
Line_8 $$ String retryAfter-->Line_33 $$ int sec = Integer.parseInt(retryAfter)[ FD ]
Line_5 $$ GregorianCalendar sendTime = new GregorianCalendar()-->Line_34 $$ sendTime.add(Calendar.SECOND, sec)[ FD ]
Line_33 $$ int sec = Integer.parseInt(retryAfter)-->Line_34 $$ sendTime.add(Calendar.SECOND, sec)[ FD ]
Line_35 $$ retryTime = sendTime-->Line_35 $$ retryTime = sendTime[ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_35 $$ retryTime = sendTime[ FD ]
Line_5 $$ GregorianCalendar sendTime = new GregorianCalendar()-->Line_35 $$ retryTime = sendTime[ FD ]
Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)-->Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)[ CD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)[ FD ]
Line_8 $$ String retryAfter-->Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)[ FD ]
Line_35 $$ retryTime = sendTime-->Line_39 $$ retryTime = new GregorianCalendar()[ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_39 $$ retryTime = new GregorianCalendar()[ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_39 $$ retryTime = new GregorianCalendar()[ FD ]
Line_35 $$ retryTime = sendTime-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_29 $$ if (retryAfter == null) -->Line_45 $$ if (retryTime != null) [ CD ]
Line_35 $$ retryTime = sendTime-->Line_45 $$ if (retryTime != null) [ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_45 $$ if (retryTime != null) [ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_45 $$ if (retryTime != null) [ FD ]
Line_45 $$ if (retryTime != null) -->Line_46 $$ testTime.setTime(new Date())[ CD ]
Line_6 $$ GregorianCalendar testTime = new GregorianCalendar()-->Line_46 $$ testTime.setTime(new Date())[ FD ]
Line_45 $$ if (retryTime != null) -->Line_47 $$ testTime.add(Calendar.MINUTE, iMaxRetryMinutes)[ CD ]
Line_6 $$ GregorianCalendar testTime = new GregorianCalendar()-->Line_47 $$ testTime.add(Calendar.MINUTE, iMaxRetryMinutes)[ FD ]
Line_45 $$ if (retryTime != null) -->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ CD ]
Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) -->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ CD ]
Line_35 $$ retryTime = sendTime-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_6 $$ GregorianCalendar testTime = new GregorianCalendar()-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_50 $$ while (retryTime.getTime().after(new Date())) -->Line_50 $$ while (retryTime.getTime().after(new Date())) [ CD ]
Line_35 $$ retryTime = sendTime-->Line_50 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_50 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_50 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_50 $$ while (retryTime.getTime().after(new Date())) -->Line_51 $$ Thread.sleep(60000)[ CD ]
Line_3 $$ HttpURLConnection http = h-->Line_53 $$ URL url = http.getURL()[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_54 $$ http.disconnect()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_55 $$ http = (HttpURLConnection) url.openConnection()[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_55 $$ http = (HttpURLConnection) url.openConnection()[ FD ]
Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) -->Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) [ CD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) [ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) [ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_68 $$ throw new OAIException(OAIException.CRITICAL_ERR, http.getResponseMessage())[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_68 $$ throw new OAIException(OAIException.CRITICAL_ERR, http.getResponseMessage())[ FD ]
Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) -->Line_70 $$ retryCount++[ CD ]
Line_9 $$ int retryCount = 0-->Line_70 $$ retryCount++[ FD ]
Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) -->Line_71 $$ if (retryCount > iRetryLimit) [ CD ]
Line_9 $$ int retryCount = 0-->Line_71 $$ if (retryCount > iRetryLimit) [ FD ]
Line_9 $$ int retryCount = 0-->Line_74 $$ int sec = 10 * ((int) Math.exp(retryCount))[ FD ]
Line_71 $$ if (retryCount > iRetryLimit) -->Line_75 $$ sendTime.add(Calendar.SECOND, sec)[ CD ]
Line_5 $$ GregorianCalendar sendTime = new GregorianCalendar()-->Line_75 $$ sendTime.add(Calendar.SECOND, sec)[ FD ]
Line_33 $$ int sec = Integer.parseInt(retryAfter)-->Line_75 $$ sendTime.add(Calendar.SECOND, sec)[ FD ]
Line_71 $$ if (retryCount > iRetryLimit) -->Line_76 $$ retryTime = sendTime[ CD ]
Line_35 $$ retryTime = sendTime-->Line_76 $$ retryTime = sendTime[ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_76 $$ retryTime = sendTime[ FD ]
Line_76 $$ retryTime = sendTime-->Line_76 $$ retryTime = sendTime[ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_76 $$ retryTime = sendTime[ FD ]
Line_5 $$ GregorianCalendar sendTime = new GregorianCalendar()-->Line_76 $$ retryTime = sendTime[ FD ]
Line_78 $$ while (retryTime.getTime().after(new Date())) -->Line_78 $$ while (retryTime.getTime().after(new Date())) [ CD ]
Line_35 $$ retryTime = sendTime-->Line_78 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_78 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_76 $$ retryTime = sendTime-->Line_78 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_7 $$ GregorianCalendar retryTime = null-->Line_78 $$ while (retryTime.getTime().after(new Date())) [ FD ]
Line_78 $$ while (retryTime.getTime().after(new Date())) -->Line_79 $$ Thread.sleep(sec * 1000)[ CD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_81 $$ URL url = http.getURL()[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_81 $$ URL url = http.getURL()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_82 $$ http.disconnect()[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_82 $$ http.disconnect()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_83 $$ http = (HttpURLConnection) url.openConnection()[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_83 $$ http = (HttpURLConnection) url.openConnection()[ FD ]
Line_3 $$ HttpURLConnection http = h-->Line_83 $$ http = (HttpURLConnection) url.openConnection()[ FD ]
Line_10 $$ do -->Line_10 $$ do [ CD ]
Line_22 $$ done = true-->Line_10 $$ do [ FD ]
Line_4 $$ boolean done = false-->Line_10 $$ do [ FD ]
Line_2 $$ protected HttpURLConnection frndTrySend(HttpURLConnection h) throws OAIException -->Line_93 $$ return http[ CD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_12 $$ http.setRequestProperty("User-Agent", strUserAgent)[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_12 $$ http.setRequestProperty("User-Agent", strUserAgent)[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_13 $$ http.setRequestProperty("From", strFrom)[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_13 $$ http.setRequestProperty("From", strFrom)[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_16 $$ BASE64Encoder encoder = new BASE64Encoder()-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_15 $$ byte[] encodedPassword = (strUser + ":" + strPassword).getBytes()-->Line_17 $$ http.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_20 $$ http.connect()[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_20 $$ http.connect()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_21 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_OK) [ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_21 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_OK) [ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) [ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_23 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_UNAVAILABLE) [ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_28 $$ retryAfter = http.getHeaderField("Retry-After")[ FD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_29 $$ if (retryAfter == null) [ FD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_33 $$ int sec = Integer.parseInt(retryAfter)[ FD ]
Line_33 $$ int sec = Integer.parseInt(retryAfter)-->Line_34 $$ sendTime.add(Calendar.SECOND, sec)[ FD ]
Line_28 $$ retryAfter = http.getHeaderField("Retry-After")-->Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)[ FD ]
Line_35 $$ retryTime = sendTime-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_76 $$ retryTime = sendTime-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_38 $$ Date retryDate = DateFormat.getDateInstance().parse(retryAfter)-->Line_40 $$ retryTime.setTime(retryDate)[ FD ]
Line_35 $$ retryTime = sendTime-->Line_45 $$ if (retryTime != null) [ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_45 $$ if (retryTime != null) [ FD ]
Line_76 $$ retryTime = sendTime-->Line_45 $$ if (retryTime != null) [ FD ]
Line_35 $$ retryTime = sendTime-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_39 $$ retryTime = new GregorianCalendar()-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_76 $$ retryTime = sendTime-->Line_48 $$ if (retryTime.getTime().before(testTime.getTime())) [ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_53 $$ URL url = http.getURL()[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_53 $$ URL url = http.getURL()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_54 $$ http.disconnect()[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_54 $$ http.disconnect()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) [ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_67 $$ if (http.getResponseCode() == HttpURLConnection.HTTP_FORBIDDEN) [ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_68 $$ throw new OAIException(OAIException.CRITICAL_ERR, http.getResponseMessage())[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_68 $$ throw new OAIException(OAIException.CRITICAL_ERR, http.getResponseMessage())[ FD ]
Line_33 $$ int sec = Integer.parseInt(retryAfter)-->Line_75 $$ sendTime.add(Calendar.SECOND, sec)[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_81 $$ URL url = http.getURL()[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_81 $$ URL url = http.getURL()[ FD ]
Line_55 $$ http = (HttpURLConnection) url.openConnection()-->Line_82 $$ http.disconnect()[ FD ]
Line_83 $$ http = (HttpURLConnection) url.openConnection()-->Line_82 $$ http.disconnect()[ FD ]
Line_22 $$ done = true-->Line_10 $$ do [ FD ]
