Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception [ CD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(fromEar))[ CD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_4 $$ FileOutputStream fos = new FileOutputStream(toEar)[ CD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(fos)[ CD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_6 $$ ZipEntry next = earFile.getNextEntry()[ CD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_6 $$ ZipEntry next = earFile.getNextEntry()[ CD ]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(fromEar))-->Line_6 $$ ZipEntry next = earFile.getNextEntry()[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_7 $$ while (next != null) [ CD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception [ CD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_7 $$ while (next != null) [ FD ]
Line_7 $$ while (next != null) -->Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()[ CD ]
Line_7 $$ while (next != null) -->Line_9 $$ byte[] data = new byte[30000][ CD ]
Line_7 $$ while (next != null) -->Line_10 $$ int numberread[ CD ]
Line_7 $$ while (next != null) -->Line_11 $$ while ((numberread = earFile.read(data)) != -1) [ CD ]
Line_7 $$ while (next != null) -->Line_7 $$ while (next != null) [ CD ]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) -->Line_11 $$ while ((numberread = earFile.read(data)) != -1) [ FD ]
Line_10 $$ int numberread-->Line_11 $$ while ((numberread = earFile.read(data)) != -1) [ FD ]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) -->Line_11 $$ while ((numberread = earFile.read(data)) != -1) [ CD ]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(fromEar))-->Line_11 $$ while ((numberread = earFile.read(data)) != -1) [ FD ]
Line_9 $$ byte[] data = new byte[30000]-->Line_11 $$ while ((numberread = earFile.read(data)) != -1) [ FD ]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) -->Line_12 $$ content.write(data, 0, numberread)[ CD ]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()-->Line_12 $$ content.write(data, 0, numberread)[ FD ]
Line_9 $$ byte[] data = new byte[30000]-->Line_12 $$ content.write(data, 0, numberread)[ FD ]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) -->Line_12 $$ content.write(data, 0, numberread)[ FD ]
Line_10 $$ int numberread-->Line_12 $$ content.write(data, 0, numberread)[ FD ]
Line_7 $$ while (next != null) -->Line_14 $$ if (next.getName().equals("META-INF/application.xml")) [ CD ]
Line_14 $$ if (next.getName().equals("META-INF/application.xml")) -->Line_14 $$ if (next.getName().equals("META-INF/application.xml")) [ CD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_14 $$ if (next.getName().equals("META-INF/application.xml")) [ FD ]
Line_14 $$ if (next.getName().equals("META-INF/application.xml")) -->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ CD ]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ CD ]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(fromEar))-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_14 $$ if (next.getName().equals("META-INF/application.xml")) -->Line_16 $$ next = new ZipEntry("META-INF/application.xml")[ CD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_16 $$ next = new ZipEntry("META-INF/application.xml")[ FD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_16 $$ next = new ZipEntry("META-INF/application.xml")[ FD ]
Line_7 $$ while (next != null) -->Line_18 $$ tempZip.putNextEntry(next)[ CD ]
Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(fos)-->Line_18 $$ tempZip.putNextEntry(next)[ FD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_18 $$ tempZip.putNextEntry(next)[ FD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_18 $$ tempZip.putNextEntry(next)[ FD ]
Line_7 $$ while (next != null) -->Line_19 $$ tempZip.write(content.toByteArray())[ CD ]
Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(fos)-->Line_19 $$ tempZip.write(content.toByteArray())[ FD ]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()-->Line_19 $$ tempZip.write(content.toByteArray())[ FD ]
Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)-->Line_19 $$ tempZip.write(content.toByteArray())[ FD ]
Line_7 $$ while (next != null) -->Line_20 $$ next = earFile.getNextEntry()[ CD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_20 $$ next = earFile.getNextEntry()[ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_20 $$ next = earFile.getNextEntry()[ FD ]
Line_6 $$ ZipEntry next = earFile.getNextEntry()-->Line_20 $$ next = earFile.getNextEntry()[ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_20 $$ next = earFile.getNextEntry()[ CD ]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(fromEar))-->Line_20 $$ next = earFile.getNextEntry()[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_22 $$ earFile.close()[ CD ]
Line_3 $$ ZipInputStream earFile = new ZipInputStream(new FileInputStream(fromEar))-->Line_22 $$ earFile.close()[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_23 $$ tempZip.close()[ CD ]
Line_5 $$ ZipOutputStream tempZip = new ZipOutputStream(fos)-->Line_23 $$ tempZip.close()[ FD ]
Line_2 $$ private static void insertModuleInEar(File fromEar, File toEar, String moduleType, String moduleName, String contextRoot) throws Exception -->Line_24 $$ fos.close()[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(toEar)-->Line_24 $$ fos.close()[ FD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_7 $$ while (next != null) [ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_7 $$ while (next != null) [ FD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_7 $$ while (next != null) [ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_7 $$ while (next != null) [ FD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_14 $$ if (next.getName().equals("META-INF/application.xml")) [ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_14 $$ if (next.getName().equals("META-INF/application.xml")) [ FD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)-->Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)[ FD ]
Line_16 $$ next = new ZipEntry("META-INF/application.xml")-->Line_18 $$ tempZip.putNextEntry(next)[ FD ]
Line_20 $$ next = earFile.getNextEntry()-->Line_18 $$ tempZip.putNextEntry(next)[ FD ]
Line_8 $$ ByteArrayOutputStream content = new ByteArrayOutputStream()-->Line_19 $$ tempZip.write(content.toByteArray())[ FD ]
Line_15 $$ content = insertModule(earFile, next, content, moduleType, moduleName, contextRoot)-->Line_19 $$ tempZip.write(content.toByteArray())[ FD ]
Line_11 $$ while ((numberread = earFile.read(data)) != -1) -->Line_12 $$ content.write(data, 0, numberread)[ FD ]
