Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) [ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_3 $$ page.setPropertyValue("tomcat.jdbc.driver", c_drivers.getText())[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_3 $$ page.setPropertyValue("tomcat.jdbc.driver", c_drivers.getText())[ FD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_4 $$ page.setPropertyValue("tomcat.jdbc.url", url.getText())[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_4 $$ page.setPropertyValue("tomcat.jdbc.url", url.getText())[ FD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_5 $$ page.setPropertyValue("tomcat.jdbc.user", username.getText())[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_5 $$ page.setPropertyValue("tomcat.jdbc.user", username.getText())[ FD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_6 $$ page.setPropertyValue("tomcat.jdbc.password", password.getText())[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_6 $$ page.setPropertyValue("tomcat.jdbc.password", password.getText())[ FD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_7 $$ File lib = new File(page.tomcatHome.getText(), "lib")[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_8 $$ if (!lib.exists()) [ CD ]
Line_8 $$ if (!lib.exists()) -->Line_8 $$ if (!lib.exists()) [ CD ]
Line_8 $$ if (!lib.exists()) -->Line_8 $$ if (!lib.exists()) [ CD ]
Line_7 $$ File lib = new File(page.tomcatHome.getText(), "lib")-->Line_8 $$ if (!lib.exists()) [ FD ]
Line_8 $$ if (!lib.exists()) -->Line_9 $$ lib = new File(new File(page.tomcatHome.getText(), "common"), "lib")[ CD ]
Line_7 $$ File lib = new File(page.tomcatHome.getText(), "lib")-->Line_9 $$ lib = new File(new File(page.tomcatHome.getText(), "common"), "lib")[ FD ]
Line_9 $$ lib = new File(new File(page.tomcatHome.getText(), "common"), "lib")-->Line_9 $$ lib = new File(new File(page.tomcatHome.getText(), "common"), "lib")[ FD ]
Line_8 $$ if (!lib.exists()) -->Line_10 $$ if (!lib.exists()) [ CD ]
Line_10 $$ if (!lib.exists()) -->Line_10 $$ if (!lib.exists()) [ CD ]
Line_10 $$ if (!lib.exists()) -->Line_10 $$ if (!lib.exists()) [ CD ]
Line_7 $$ File lib = new File(page.tomcatHome.getText(), "lib")-->Line_10 $$ if (!lib.exists()) [ FD ]
Line_9 $$ lib = new File(new File(page.tomcatHome.getText(), "common"), "lib")-->Line_10 $$ if (!lib.exists()) [ FD ]
Line_10 $$ if (!lib.exists()) -->Line_11 $$ Logger.log(Logger.ERROR, "Not properly location of Tomcat Home at :: " + lib)[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_15 $$ final File conf = new File(page.tomcatHome.getText(), "conf/Catalina/localhost")[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_16 $$ if (!conf.exists()) [ CD ]
Line_16 $$ if (!conf.exists()) -->Line_16 $$ if (!conf.exists()) [ CD ]
Line_16 $$ if (!conf.exists()) -->Line_16 $$ if (!conf.exists()) [ CD ]
Line_15 $$ final File conf = new File(page.tomcatHome.getText(), "conf/Catalina/localhost")-->Line_16 $$ if (!conf.exists()) [ FD ]
Line_16 $$ if (!conf.exists()) -->Line_17 $$ final boolean create = NexOpenUIActivator.getDefault().getTomcatConfProperty()[ CD ]
Line_17 $$ final boolean create = NexOpenUIActivator.getDefault().getTomcatConfProperty()-->Line_17 $$ final boolean create = NexOpenUIActivator.getDefault().getTomcatConfProperty()[ CD ]
Line_16 $$ if (!conf.exists()) -->Line_18 $$ if (create) [ CD ]
Line_18 $$ if (create) -->Line_19 $$ if (Logger.getLog().isDebugEnabled()) [ CD ]
Line_19 $$ if (Logger.getLog().isDebugEnabled()) -->Line_19 $$ if (Logger.getLog().isDebugEnabled()) [ CD ]
Line_19 $$ if (Logger.getLog().isDebugEnabled()) -->Line_20 $$ Logger.getLog().debug("Create directory " + conf)[ CD ]
Line_15 $$ final File conf = new File(page.tomcatHome.getText(), "conf/Catalina/localhost")-->Line_23 $$ conf.mkdirs()[ FD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_30 $$ String str_driverLibrary = LIBRARIES.get(c_drivers.getText())[ CD ]
Line_30 $$ String str_driverLibrary = LIBRARIES.get(c_drivers.getText())-->Line_30 $$ String str_driverLibrary = LIBRARIES.get(c_drivers.getText())[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_31 $$ if ("<mysql_driver>".equals(str_driverLibrary)) [ CD ]
Line_30 $$ String str_driverLibrary = LIBRARIES.get(c_drivers.getText())-->Line_31 $$ if ("<mysql_driver>".equals(str_driverLibrary)) [ FD ]
Line_31 $$ if ("<mysql_driver>".equals(str_driverLibrary)) -->Line_31 $$ if ("<mysql_driver>".equals(str_driverLibrary)) [ CD ]
Line_30 $$ String str_driverLibrary = LIBRARIES.get(c_drivers.getText())-->Line_31 $$ if ("<mysql_driver>".equals(str_driverLibrary)) [ FD ]
Line_31 $$ if ("<mysql_driver>".equals(str_driverLibrary)) -->Line_32 $$ str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver()[ CD ]
Line_30 $$ String str_driverLibrary = LIBRARIES.get(c_drivers.getText())-->Line_32 $$ str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver()[ FD ]
Line_32 $$ str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver()-->Line_32 $$ str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver()[ FD ]
Line_32 $$ str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver()-->Line_32 $$ str_driverLibrary = NexOpenUIActivator.getDefault().getMySQLDriver()[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_34 $$ final File driverLibrary = new File(lib, str_driverLibrary)[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_35 $$ if (!driverLibrary.exists()) [ CD ]
Line_35 $$ if (!driverLibrary.exists()) -->Line_35 $$ if (!driverLibrary.exists()) [ CD ]
Line_35 $$ if (!driverLibrary.exists()) -->Line_35 $$ if (!driverLibrary.exists()) [ CD ]
Line_34 $$ final File driverLibrary = new File(lib, str_driverLibrary)-->Line_35 $$ if (!driverLibrary.exists()) [ FD ]
Line_35 $$ if (!driverLibrary.exists()) -->Line_36 $$ InputStream driver = null[ CD ]
Line_35 $$ if (!driverLibrary.exists()) -->Line_37 $$ FileOutputStream fos = null[ CD ]
Line_36 $$ InputStream driver = null-->Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))[ FD ]
Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))-->Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))[ FD ]
Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))-->Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))[ CD ]
Line_37 $$ FileOutputStream fos = null-->Line_40 $$ fos = new FileOutputStream(driverLibrary)[ FD ]
Line_40 $$ fos = new FileOutputStream(driverLibrary)-->Line_40 $$ fos = new FileOutputStream(driverLibrary)[ FD ]
Line_36 $$ InputStream driver = null-->Line_41 $$ IOUtils.copy(driver, fos)[ FD ]
Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))-->Line_41 $$ IOUtils.copy(driver, fos)[ FD ]
Line_37 $$ FileOutputStream fos = null-->Line_41 $$ IOUtils.copy(driver, fos)[ FD ]
Line_40 $$ fos = new FileOutputStream(driverLibrary)-->Line_41 $$ IOUtils.copy(driver, fos)[ FD ]
Line_36 $$ InputStream driver = null-->Line_46 $$ if (driver != null) [ FD ]
Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))-->Line_46 $$ if (driver != null) [ FD ]
Line_46 $$ if (driver != null) -->Line_47 $$ driver.close()[ CD ]
Line_36 $$ InputStream driver = null-->Line_47 $$ driver.close()[ FD ]
Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))-->Line_47 $$ driver.close()[ FD ]
Line_46 $$ if (driver != null) -->Line_48 $$ driver = null[ CD ]
Line_36 $$ InputStream driver = null-->Line_48 $$ driver = null[ FD ]
Line_39 $$ driver = AppServerPropertyPage.toInputStream(new Path("jdbc/" + str_driverLibrary))-->Line_48 $$ driver = null[ FD ]
Line_48 $$ driver = null-->Line_48 $$ driver = null[ FD ]
Line_37 $$ FileOutputStream fos = null-->Line_50 $$ if (fos != null) [ FD ]
Line_40 $$ fos = new FileOutputStream(driverLibrary)-->Line_50 $$ if (fos != null) [ FD ]
Line_50 $$ if (fos != null) -->Line_51 $$ fos.flush()[ CD ]
Line_37 $$ FileOutputStream fos = null-->Line_51 $$ fos.flush()[ FD ]
Line_40 $$ fos = new FileOutputStream(driverLibrary)-->Line_51 $$ fos.flush()[ FD ]
Line_50 $$ if (fos != null) -->Line_52 $$ fos.close()[ CD ]
Line_37 $$ FileOutputStream fos = null-->Line_52 $$ fos.close()[ FD ]
Line_40 $$ fos = new FileOutputStream(driverLibrary)-->Line_52 $$ fos.close()[ FD ]
Line_50 $$ if (fos != null) -->Line_53 $$ fos = null[ CD ]
Line_37 $$ FileOutputStream fos = null-->Line_53 $$ fos = null[ FD ]
Line_40 $$ fos = new FileOutputStream(driverLibrary)-->Line_53 $$ fos = null[ FD ]
Line_53 $$ fos = null-->Line_53 $$ fos = null[ FD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_59 $$ page.processTomcatCfg(c_drivers.getText(), url.getText(), username.getText(), password.getText())[ CD ]
Line_2 $$ public void performOk(final IProject project, final TomcatPropertyPage page) -->Line_59 $$ page.processTomcatCfg(c_drivers.getText(), url.getText(), username.getText(), password.getText())[ FD ]
