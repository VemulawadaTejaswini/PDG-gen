Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void connect(String username, String passwordMd5) [ CD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_3 $$ this.username = username[ CD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_3 $$ this.username = username[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_4 $$ this.passwordMd5 = passwordMd5[ CD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_4 $$ this.passwordMd5 = passwordMd5[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()[ CD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_6 $$ handshakeUrl.append("http://ws.audioscrobbler.com/radio/handshake.php?version=")[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_6 $$ handshakeUrl.append("http://ws.audioscrobbler.com/radio/handshake.php?version=")[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_7 $$ handshakeUrl.append(LastFM.VERSION)[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_7 $$ handshakeUrl.append(LastFM.VERSION)[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_8 $$ handshakeUrl.append("&platform=linux&username=")[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_8 $$ handshakeUrl.append("&platform=linux&username=")[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_9 $$ handshakeUrl.append(this.username)[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_9 $$ handshakeUrl.append(this.username)[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_10 $$ handshakeUrl.append("&passwordmd5=")[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_10 $$ handshakeUrl.append("&passwordmd5=")[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_11 $$ handshakeUrl.append(this.passwordMd5)[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_11 $$ handshakeUrl.append(this.passwordMd5)[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_12 $$ handshakeUrl.append("&language=en&player=aTunes")[ CD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_12 $$ handshakeUrl.append("&language=en&player=aTunes")[ FD ]
Line_2 $$ public void connect(String username, String passwordMd5) -->Line_13 $$ URL url[ CD ]
Line_13 $$ URL url-->Line_15 $$ url = new URL(handshakeUrl.toString())[ FD ]
Line_15 $$ url = new URL(handshakeUrl.toString())-->Line_15 $$ url = new URL(handshakeUrl.toString())[ FD ]
Line_5 $$ StringBuffer handshakeUrl = new StringBuffer()-->Line_15 $$ url = new URL(handshakeUrl.toString())[ FD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_16 $$ URLConnection connection = url.openConnection()[ CD ]
Line_13 $$ URL url-->Line_16 $$ URLConnection connection = url.openConnection()[ FD ]
Line_15 $$ url = new URL(handshakeUrl.toString())-->Line_16 $$ URLConnection connection = url.openConnection()[ FD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_17 $$ InputStream inputStream = new BufferedInputStream(connection.getInputStream())[ FD ]
Line_21 $$ while ((read = inputStream.read(buffer)) > -1) -->Line_21 $$ while ((read = inputStream.read(buffer)) > -1) [ FD ]
Line_19 $$ int read = 0-->Line_21 $$ while ((read = inputStream.read(buffer)) > -1) [ FD ]
Line_21 $$ while ((read = inputStream.read(buffer)) > -1) -->Line_21 $$ while ((read = inputStream.read(buffer)) > -1) [ CD ]
Line_17 $$ InputStream inputStream = new BufferedInputStream(connection.getInputStream())-->Line_21 $$ while ((read = inputStream.read(buffer)) > -1) [ FD ]
Line_18 $$ byte[] buffer = new byte[4069]-->Line_21 $$ while ((read = inputStream.read(buffer)) > -1) [ FD ]
Line_21 $$ while ((read = inputStream.read(buffer)) > -1) -->Line_22 $$ result.append((new String(buffer, 0, read)))[ CD ]
Line_20 $$ StringBuffer result = new StringBuffer()-->Line_22 $$ result.append((new String(buffer, 0, read)))[ FD ]
Line_24 $$ String[] rows = result.toString().split("\n")-->Line_24 $$ String[] rows = result.toString().split("\n")[ CD ]
Line_20 $$ StringBuffer result = new StringBuffer()-->Line_24 $$ String[] rows = result.toString().split("\n")[ FD ]
Line_26 $$ for (String row : rows) -->Line_27 $$ row = row.trim()[ FD ]
Line_27 $$ row = row.trim()-->Line_27 $$ row = row.trim()[ FD ]
Line_27 $$ row = row.trim()-->Line_27 $$ row = row.trim()[ CD ]
Line_26 $$ for (String row : rows) -->Line_27 $$ row = row.trim()[ FD ]
Line_27 $$ row = row.trim()-->Line_27 $$ row = row.trim()[ FD ]
Line_28 $$ int firstEquals = row.indexOf("=")-->Line_28 $$ int firstEquals = row.indexOf("=")[ CD ]
Line_26 $$ for (String row : rows) -->Line_28 $$ int firstEquals = row.indexOf("=")[ FD ]
Line_27 $$ row = row.trim()-->Line_28 $$ int firstEquals = row.indexOf("=")[ FD ]
Line_26 $$ for (String row : rows) -->Line_29 $$ data.put(row.substring(0, firstEquals), row.substring(firstEquals + 1))[ FD ]
Line_27 $$ row = row.trim()-->Line_29 $$ data.put(row.substring(0, firstEquals), row.substring(firstEquals + 1))[ FD ]
Line_28 $$ int firstEquals = row.indexOf("=")-->Line_29 $$ data.put(row.substring(0, firstEquals), row.substring(firstEquals + 1))[ FD ]
Line_26 $$ for (String row : rows) -->Line_29 $$ data.put(row.substring(0, firstEquals), row.substring(firstEquals + 1))[ FD ]
Line_27 $$ row = row.trim()-->Line_29 $$ data.put(row.substring(0, firstEquals), row.substring(firstEquals + 1))[ FD ]
Line_31 $$ String streamingUrl = data.get("stream_url")-->Line_31 $$ String streamingUrl = data.get("stream_url")[ CD ]
Line_31 $$ String streamingUrl = data.get("stream_url")-->Line_32 $$ streamingUrl = streamingUrl.substring(7)[ FD ]
Line_32 $$ streamingUrl = streamingUrl.substring(7)-->Line_32 $$ streamingUrl = streamingUrl.substring(7)[ FD ]
Line_32 $$ streamingUrl = streamingUrl.substring(7)-->Line_32 $$ streamingUrl = streamingUrl.substring(7)[ CD ]
Line_31 $$ String streamingUrl = data.get("stream_url")-->Line_32 $$ streamingUrl = streamingUrl.substring(7)[ FD ]
Line_32 $$ streamingUrl = streamingUrl.substring(7)-->Line_32 $$ streamingUrl = streamingUrl.substring(7)[ FD ]
Line_33 $$ int delimiter = streamingUrl.indexOf("/")-->Line_33 $$ int delimiter = streamingUrl.indexOf("/")[ CD ]
Line_31 $$ String streamingUrl = data.get("stream_url")-->Line_33 $$ int delimiter = streamingUrl.indexOf("/")[ FD ]
Line_32 $$ streamingUrl = streamingUrl.substring(7)-->Line_33 $$ int delimiter = streamingUrl.indexOf("/")[ FD ]
Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)-->Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)[ CD ]
Line_31 $$ String streamingUrl = data.get("stream_url")-->Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)[ FD ]
Line_32 $$ streamingUrl = streamingUrl.substring(7)-->Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)[ FD ]
Line_33 $$ int delimiter = streamingUrl.indexOf("/")-->Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)[ FD ]
Line_35 $$ String path = streamingUrl.substring(delimiter + 1)-->Line_35 $$ String path = streamingUrl.substring(delimiter + 1)[ CD ]
Line_31 $$ String streamingUrl = data.get("stream_url")-->Line_35 $$ String path = streamingUrl.substring(delimiter + 1)[ FD ]
Line_32 $$ streamingUrl = streamingUrl.substring(7)-->Line_35 $$ String path = streamingUrl.substring(delimiter + 1)[ FD ]
Line_36 $$ String[] tokens = hostname.split(":")-->Line_36 $$ String[] tokens = hostname.split(":")[ CD ]
Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)-->Line_36 $$ String[] tokens = hostname.split(":")[ FD ]
Line_34 $$ String hostname = streamingUrl.substring(0, delimiter)-->Line_37 $$ hostname = tokens[0][ FD ]
Line_37 $$ hostname = tokens[0]-->Line_37 $$ hostname = tokens[0][ FD ]
Line_38 $$ int port = Integer.parseInt(tokens[1])-->Line_38 $$ int port = Integer.parseInt(tokens[1])[ CD ]
Line_40 $$ OutputStreamWriter osw = new OutputStreamWriter(this.lastFmSocket.getOutputStream())-->Line_41 $$ osw.write("GET /" + path + " HTTP/1.0\r\n")[ FD ]
Line_40 $$ OutputStreamWriter osw = new OutputStreamWriter(this.lastFmSocket.getOutputStream())-->Line_42 $$ osw.write("Host: " + hostname + "\r\n")[ FD ]
Line_40 $$ OutputStreamWriter osw = new OutputStreamWriter(this.lastFmSocket.getOutputStream())-->Line_43 $$ osw.write("\r\n")[ FD ]
Line_40 $$ OutputStreamWriter osw = new OutputStreamWriter(this.lastFmSocket.getOutputStream())-->Line_44 $$ osw.flush()[ FD ]
Line_45 $$ this.lastFmInputStream = this.lastFmSocket.getInputStream()-->Line_45 $$ this.lastFmInputStream = this.lastFmSocket.getInputStream()[ CD ]
Line_20 $$ StringBuffer result = new StringBuffer()-->Line_46 $$ result = new StringBuffer()[ FD ]
Line_46 $$ result = new StringBuffer()-->Line_46 $$ result = new StringBuffer()[ FD ]
Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) -->Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) [ FD ]
Line_21 $$ while ((read = inputStream.read(buffer)) > -1) -->Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) [ FD ]
Line_19 $$ int read = 0-->Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) [ FD ]
Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) -->Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) [ CD ]
Line_18 $$ byte[] buffer = new byte[4069]-->Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) [ FD ]
Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) -->Line_48 $$ String line = new String(buffer, 0, read)[ CD ]
Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) -->Line_49 $$ result.append(line)[ CD ]
Line_20 $$ StringBuffer result = new StringBuffer()-->Line_49 $$ result.append(line)[ FD ]
Line_46 $$ result = new StringBuffer()-->Line_49 $$ result.append(line)[ FD ]
Line_48 $$ String line = new String(buffer, 0, read)-->Line_49 $$ result.append(line)[ FD ]
Line_47 $$ while ((read = this.lastFmInputStream.read(buffer)) > -1) -->Line_50 $$ if (line.contains("\r\n\r\n"))[ CD ]
Line_48 $$ String line = new String(buffer, 0, read)-->Line_50 $$ if (line.contains("\r\n\r\n"))[ FD ]
Line_50 $$ if (line.contains("\r\n\r\n"))-->Line_50 $$ if (line.contains("\r\n\r\n"))[ CD ]
Line_48 $$ String line = new String(buffer, 0, read)-->Line_50 $$ if (line.contains("\r\n\r\n"))[ FD ]
Line_52 $$ String response = result.toString()-->Line_52 $$ String response = result.toString()[ CD ]
Line_20 $$ StringBuffer result = new StringBuffer()-->Line_52 $$ String response = result.toString()[ FD ]
Line_46 $$ result = new StringBuffer()-->Line_52 $$ String response = result.toString()[ FD ]
Line_54 $$ if (!response.startsWith("HTTP/1.0 200 OK")) -->Line_54 $$ if (!response.startsWith("HTTP/1.0 200 OK")) [ CD ]
Line_54 $$ if (!response.startsWith("HTTP/1.0 200 OK")) -->Line_54 $$ if (!response.startsWith("HTTP/1.0 200 OK")) [ CD ]
Line_52 $$ String response = result.toString()-->Line_54 $$ if (!response.startsWith("HTTP/1.0 200 OK")) [ FD ]
Line_54 $$ if (!response.startsWith("HTTP/1.0 200 OK")) -->Line_55 $$ this.lastFmSocket.close()[ CD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_59 $$ sb.append("http://")[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_60 $$ sb.append(this.data.get("base_url"))[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_61 $$ sb.append(this.data.get("base_path"))[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_62 $$ sb.append("/xspf.php?sk=")[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_63 $$ sb.append(this.data.get("session"))[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_64 $$ sb.append("&discovery=1&desktop=")[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_65 $$ sb.append(LastFM.VERSION)[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_66 $$ logger.info(sb.toString())[ FD ]
Line_58 $$ StringBuffer sb = new StringBuffer()-->Line_67 $$ this.playlistUrl = new URL(sb.toString())[ FD ]
Line_68 $$ this.playlist = this.playlistParser.fetchPlaylist(this.playlistUrl.toString())-->Line_68 $$ this.playlist = this.playlistParser.fetchPlaylist(this.playlistUrl.toString())[ CD ]
Line_69 $$ Iterator<LastFmTrack> it = this.playlist.iterator()-->Line_69 $$ Iterator<LastFmTrack> it = this.playlist.iterator()[ CD ]
Line_70 $$ while (it.hasNext()) -->Line_70 $$ while (it.hasNext()) [ CD ]
Line_69 $$ Iterator<LastFmTrack> it = this.playlist.iterator()-->Line_70 $$ while (it.hasNext()) [ FD ]
Line_70 $$ while (it.hasNext()) -->Line_71 $$ System.out.println(it.next().getCreator())[ CD ]
Line_69 $$ Iterator<LastFmTrack> it = this.playlist.iterator()-->Line_71 $$ System.out.println(it.next().getCreator())[ FD ]
Line_48 $$ String line = new String(buffer, 0, read)-->Line_49 $$ result.append(line)[ FD ]
Line_48 $$ String line = new String(buffer, 0, read)-->Line_50 $$ if (line.contains("\r\n\r\n"))[ FD ]
Line_48 $$ String line = new String(buffer, 0, read)-->Line_50 $$ if (line.contains("\r\n\r\n"))[ FD ]
