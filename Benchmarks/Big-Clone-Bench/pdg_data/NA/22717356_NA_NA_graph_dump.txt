Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException [ CD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")[ CD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")[ FD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_4 $$ if (con == null) [ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_4 $$ if (con == null) [ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_8 $$ con.setAutoCommit(false)[ FD ]
Line_9 $$ int id = getId(dn, con)-->Line_9 $$ int id = getId(dn, con)[ CD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_9 $$ int id = getId(dn, con)[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_9 $$ int id = getId(dn, con)[ FD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_10 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_12 $$ ps.setInt(1, id)[ FD ]
Line_9 $$ int id = getId(dn, con)-->Line_12 $$ ps.setInt(1, id)[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_13 $$ ps.executeUpdate()[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ FD ]
Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")-->Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ FD ]
Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")-->Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_15 $$ ps.setInt(1, id)[ FD ]
Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")-->Line_15 $$ ps.setInt(1, id)[ FD ]
Line_9 $$ int id = getId(dn, con)-->Line_15 $$ ps.setInt(1, id)[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_16 $$ ps.executeUpdate()[ FD ]
Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")-->Line_16 $$ ps.executeUpdate()[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM users WHERE id=?")-->Line_17 $$ ps.close()[ FD ]
Line_14 $$ ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")-->Line_17 $$ ps.close()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_18 $$ con.commit()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_21 $$ con.rollback()[ FD ]
