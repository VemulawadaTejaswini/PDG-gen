Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ String key = getKey()[ CD ]
Line_3 $$ String key = getKey()-->Line_3 $$ String key = getKey()[ CD ]
Line_3 $$ String key = getKey()-->Line_5 $$ if (this.lauchedHTTPRequests.contains(key))[ FD ]
Line_5 $$ if (this.lauchedHTTPRequests.contains(key))-->Line_5 $$ if (this.lauchedHTTPRequests.contains(key))[ CD ]
Line_3 $$ String key = getKey()-->Line_5 $$ if (this.lauchedHTTPRequests.contains(key))[ FD ]
Line_5 $$ if (this.lauchedHTTPRequests.contains(key))-->Line_5 $$ return[ CD ]
Line_3 $$ String key = getKey()-->Line_6 $$ this.lauchedHTTPRequests.add(key)[ FD ]
Line_2 $$ public void run() -->Line_8 $$ String st = this.dataSource.getTileURL(this.x, this.y, this.z)[ CD ]
Line_8 $$ String st = this.dataSource.getTileURL(this.x, this.y, this.z)-->Line_8 $$ String st = this.dataSource.getTileURL(this.x, this.y, this.z)[ CD ]
Line_2 $$ public void run() -->Line_9 $$ URL url[ CD ]
Line_9 $$ URL url-->Line_11 $$ url = new URL(st)[ FD ]
Line_11 $$ url = new URL(st)-->Line_11 $$ url = new URL(st)[ FD ]
Line_2 $$ public void run() -->Line_16 $$ String geoJSON = ""[ CD ]
Line_19 $$ if ("file".equals(url.getProtocol()))-->Line_19 $$ if ("file".equals(url.getProtocol()))[ CD ]
Line_9 $$ URL url-->Line_19 $$ if ("file".equals(url.getProtocol()))[ FD ]
Line_11 $$ url = new URL(st)-->Line_19 $$ if ("file".equals(url.getProtocol()))[ FD ]
Line_19 $$ if ("file".equals(url.getProtocol()))-->Line_19 $$ is = new FileInputStream(url.getFile())[ CD ]
Line_18 $$ InputStream is-->Line_19 $$ is = new FileInputStream(url.getFile())[ FD ]
Line_19 $$ is = new FileInputStream(url.getFile())-->Line_19 $$ is = new FileInputStream(url.getFile())[ FD ]
Line_9 $$ URL url-->Line_19 $$ is = new FileInputStream(url.getFile())[ FD ]
Line_11 $$ url = new URL(st)-->Line_19 $$ is = new FileInputStream(url.getFile())[ FD ]
Line_19 $$ if ("file".equals(url.getProtocol()))-->Line_19 $$ if ("http".equals(url.getProtocol()))[ CD ]
Line_19 $$ if ("http".equals(url.getProtocol()))-->Line_19 $$ if ("http".equals(url.getProtocol()))[ CD ]
Line_9 $$ URL url-->Line_19 $$ if ("http".equals(url.getProtocol()))[ FD ]
Line_11 $$ url = new URL(st)-->Line_19 $$ if ("http".equals(url.getProtocol()))[ FD ]
Line_19 $$ if ("http".equals(url.getProtocol()))-->Line_19 $$ is = url.openStream()[ CD ]
Line_18 $$ InputStream is-->Line_19 $$ is = url.openStream()[ FD ]
Line_19 $$ is = new FileInputStream(url.getFile())-->Line_19 $$ is = url.openStream()[ FD ]
Line_19 $$ is = url.openStream()-->Line_19 $$ is = url.openStream()[ FD ]
Line_19 $$ is = url.openStream()-->Line_19 $$ is = url.openStream()[ CD ]
Line_9 $$ URL url-->Line_19 $$ is = url.openStream()[ FD ]
Line_11 $$ url = new URL(st)-->Line_19 $$ is = url.openStream()[ FD ]
Line_19 $$ if ("http".equals(url.getProtocol()))-->Line_20 $$ logger.warning("Impossible to load settings from " + url + ". Unsupported protocol " + url.getProtocol())[ CD ]
Line_9 $$ URL url-->Line_20 $$ logger.warning("Impossible to load settings from " + url + ". Unsupported protocol " + url.getProtocol())[ FD ]
Line_11 $$ url = new URL(st)-->Line_20 $$ logger.warning("Impossible to load settings from " + url + ". Unsupported protocol " + url.getProtocol())[ FD ]
Line_19 $$ if ("http".equals(url.getProtocol()))-->Line_21 $$ return[ CD ]
Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line-->Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line[ FD ]
Line_24 $$ String line-->Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line[ FD ]
Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line-->Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line[ CD ]
Line_23 $$ BufferedReader in = new BufferedReader(new InputStreamReader(is))-->Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line[ FD ]
Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line-->Line_25 $$ geoJSON += line[ CD ]
Line_25 $$ geoJSON += line-->Line_25 $$ geoJSON += line[ FD ]
Line_16 $$ String geoJSON = ""-->Line_25 $$ geoJSON += line[ FD ]
Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line-->Line_25 $$ geoJSON += line[ FD ]
Line_24 $$ String line-->Line_25 $$ geoJSON += line[ FD ]
Line_23 $$ BufferedReader in = new BufferedReader(new InputStreamReader(is))-->Line_26 $$ in.close()[ FD ]
Line_2 $$ public void run() -->Line_33 $$ VectorTile tile = new VectorTile(geoJSON, x, y, z)[ CD ]
Line_2 $$ public void run() -->Line_34 $$ Geometry[] geoms = new Geometry[tile.getPieces().size()][ CD ]
Line_33 $$ VectorTile tile = new VectorTile(geoJSON, x, y, z)-->Line_34 $$ Geometry[] geoms = new Geometry[tile.getPieces().size()][ FD ]
Line_2 $$ public void run() -->Line_35 $$ int i = 0[ CD ]
Line_33 $$ VectorTile tile = new VectorTile(geoJSON, x, y, z)-->Line_36 $$ for (MfGeo geo : tile.getPieces()) [ FD ]
Line_36 $$ for (MfGeo geo : tile.getPieces()) -->Line_37 $$ if (geo.getGeoType() == GeoType.GEOMETRY) [ FD ]
Line_37 $$ if (geo.getGeoType() == GeoType.GEOMETRY) -->Line_38 $$ geoms[i++] = ((MfGeometry) geo).getInternalGeometry()[ CD ]
Line_35 $$ int i = 0-->Line_38 $$ geoms[i++] = ((MfGeometry) geo).getInternalGeometry()[ FD ]
Line_38 $$ geoms[i++] = ((MfGeometry) geo).getInternalGeometry()-->Line_38 $$ geoms[i++] = ((MfGeometry) geo).getInternalGeometry()[ CD ]
Line_37 $$ if (geo.getGeoType() == GeoType.GEOMETRY) -->Line_39 $$ if (geo.getGeoType() == GeoType.FEATURE) [ CD ]
Line_36 $$ for (MfGeo geo : tile.getPieces()) -->Line_39 $$ if (geo.getGeoType() == GeoType.FEATURE) [ FD ]
Line_39 $$ if (geo.getGeoType() == GeoType.FEATURE) -->Line_40 $$ MfFeature mf = (MfFeature) geo[ CD ]
Line_39 $$ if (geo.getGeoType() == GeoType.FEATURE) -->Line_41 $$ geoms[i++] = mf.getMfGeometry().getInternalGeometry()[ CD ]
Line_35 $$ int i = 0-->Line_41 $$ geoms[i++] = mf.getMfGeometry().getInternalGeometry()[ FD ]
Line_41 $$ geoms[i++] = mf.getMfGeometry().getInternalGeometry()-->Line_41 $$ geoms[i++] = mf.getMfGeometry().getInternalGeometry()[ CD ]
Line_40 $$ MfFeature mf = (MfFeature) geo-->Line_41 $$ geoms[i++] = mf.getMfGeometry().getInternalGeometry()[ FD ]
Line_2 $$ public void run() -->Line_44 $$ GeometryCollection gc = new GeometryFactory().createGeometryCollection(geoms)[ CD ]
Line_44 $$ GeometryCollection gc = new GeometryFactory().createGeometryCollection(geoms)-->Line_44 $$ GeometryCollection gc = new GeometryFactory().createGeometryCollection(geoms)[ CD ]
Line_34 $$ Geometry[] geoms = new Geometry[tile.getPieces().size()]-->Line_44 $$ GeometryCollection gc = new GeometryFactory().createGeometryCollection(geoms)[ FD ]
Line_2 $$ public void run() -->Line_45 $$ this.dataSource.getDataLoader().add(new OpenCartoFeature(this.dataSource.getLayer(), new Rep(gc), this.z))[ CD ]
Line_2 $$ public void run() -->Line_46 $$ this.dataSource.getLayer().getDisplayCacheLoader().coin()[ CD ]
Line_3 $$ String key = getKey()-->Line_48 $$ this.lauchedHTTPRequests.remove(key)[ FD ]
Line_25 $$ while ((line = in.readLine()) != null) geoJSON += line-->Line_25 $$ geoJSON += line[ FD ]
