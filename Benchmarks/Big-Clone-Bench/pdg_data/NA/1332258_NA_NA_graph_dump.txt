Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void writeTo(OutputStream out) throws IOException [ CD ]
Line_2 $$ public void writeTo(OutputStream out) throws IOException -->Line_3 $$ if (!closed) [ CD ]
Line_2 $$ public void writeTo(OutputStream out) throws IOException -->Line_6 $$ if (isInMemory()) [ CD ]
Line_6 $$ if (isInMemory()) -->Line_6 $$ if (isInMemory()) [ CD ]
Line_6 $$ if (isInMemory()) -->Line_7 $$ memoryOutputStream.writeTo(out)[ CD ]
Line_2 $$ public void writeTo(OutputStream out) throws IOException -->Line_7 $$ memoryOutputStream.writeTo(out)[ FD ]
Line_6 $$ if (isInMemory()) -->Line_9 $$ FileInputStream fis = new FileInputStream(outputFile)[ CD ]
Line_9 $$ FileInputStream fis = new FileInputStream(outputFile)-->Line_11 $$ IOUtils.copy(fis, out)[ FD ]
Line_2 $$ public void writeTo(OutputStream out) throws IOException -->Line_11 $$ IOUtils.copy(fis, out)[ FD ]
Line_9 $$ FileInputStream fis = new FileInputStream(outputFile)-->Line_13 $$ IOUtils.close(fis)[ FD ]
