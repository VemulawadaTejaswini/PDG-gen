Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException [ CD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_4 $$ Argo.log.info("=======================================")[ CD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_5 $$ Argo.log.info("== READING MODEL " + url)[ CD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_8 $$ InputSource source = new InputSource(url.openStream())[ FD ]
Line_8 $$ InputSource source = new InputSource(url.openStream())-->Line_9 $$ source.setSystemId(url.toString())[ FD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_9 $$ source.setSystemId(url.toString())[ FD ]
Line_7 $$ XMIReader reader = new XMIReader()-->Line_10 $$ _curModel = reader.parse(source)[ FD ]
Line_8 $$ InputSource source = new InputSource(url.openStream())-->Line_10 $$ _curModel = reader.parse(source)[ FD ]
Line_7 $$ XMIReader reader = new XMIReader()-->Line_11 $$ if (reader.getErrors()) [ FD ]
Line_11 $$ if (reader.getErrors()) -->Line_11 $$ if (reader.getErrors()) [ CD ]
Line_7 $$ XMIReader reader = new XMIReader()-->Line_11 $$ if (reader.getErrors()) [ FD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_12 $$ throw new IOException("XMI file " + url.toString() + " could not be parsed.")[ FD ]
Line_7 $$ XMIReader reader = new XMIReader()-->Line_14 $$ _UUIDRefs = new HashMap(reader.getXMIUUIDToObjectMap())[ FD ]
Line_16 $$ Exception ex = saxEx.getException()-->Line_16 $$ Exception ex = saxEx.getException()[ CD ]
Line_16 $$ Exception ex = saxEx.getException()-->Line_17 $$ if (ex == null) [ FD ]
Line_17 $$ if (ex == null) -->Line_18 $$ saxEx.printStackTrace()[ CD ]
Line_17 $$ if (ex == null) -->Line_20 $$ ex.printStackTrace()[ CD ]
Line_16 $$ Exception ex = saxEx.getException()-->Line_20 $$ ex.printStackTrace()[ FD ]
Line_16 $$ Exception ex = saxEx.getException()-->Line_23 $$ ex.printStackTrace()[ FD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_25 $$ Argo.log.info("=======================================")[ CD ]
Line_16 $$ Exception ex = saxEx.getException()-->Line_30 $$ ex.printStackTrace()[ FD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_32 $$ Collection ownedElements = _curModel.getOwnedElements()[ CD ]
Line_32 $$ Collection ownedElements = _curModel.getOwnedElements()-->Line_32 $$ Collection ownedElements = _curModel.getOwnedElements()[ CD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_33 $$ Iterator oeIterator = ownedElements.iterator()[ CD ]
Line_33 $$ Iterator oeIterator = ownedElements.iterator()-->Line_33 $$ Iterator oeIterator = ownedElements.iterator()[ CD ]
Line_32 $$ Collection ownedElements = _curModel.getOwnedElements()-->Line_33 $$ Iterator oeIterator = ownedElements.iterator()[ FD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_34 $$ while (oeIterator.hasNext()) [ CD ]
Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException -->Line_2 $$ public synchronized void readModels(Project p, URL url) throws IOException [ CD ]
Line_34 $$ while (oeIterator.hasNext()) -->Line_34 $$ while (oeIterator.hasNext()) [ CD ]
Line_33 $$ Iterator oeIterator = ownedElements.iterator()-->Line_34 $$ while (oeIterator.hasNext()) [ FD ]
Line_34 $$ while (oeIterator.hasNext()) -->Line_35 $$ MModelElement me = (MModelElement) oeIterator.next()[ CD ]
Line_33 $$ Iterator oeIterator = ownedElements.iterator()-->Line_35 $$ MModelElement me = (MModelElement) oeIterator.next()[ FD ]
Line_34 $$ while (oeIterator.hasNext()) -->Line_36 $$ if (me instanceof MClass) [ CD ]
Line_35 $$ MModelElement me = (MModelElement) oeIterator.next()-->Line_36 $$ if (me instanceof MClass) [ FD ]
Line_36 $$ if (me instanceof MClass) -->Line_37 $$ _proj.defineType((MClass) me)[ CD ]
Line_36 $$ if (me instanceof MClass) -->Line_38 $$ if (me instanceof MDataType) [ CD ]
Line_35 $$ MModelElement me = (MModelElement) oeIterator.next()-->Line_38 $$ if (me instanceof MDataType) [ FD ]
Line_38 $$ if (me instanceof MDataType) -->Line_39 $$ _proj.defineType((MDataType) me)[ CD ]
Line_35 $$ MModelElement me = (MModelElement) oeIterator.next()-->Line_36 $$ if (me instanceof MClass) [ FD ]
Line_35 $$ MModelElement me = (MModelElement) oeIterator.next()-->Line_38 $$ if (me instanceof MDataType) [ FD ]
