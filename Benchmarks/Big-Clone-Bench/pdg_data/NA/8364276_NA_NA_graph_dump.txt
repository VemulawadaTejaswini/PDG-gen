Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException [ CD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_3 $$ logger.debug(searchParms.getGeocodeAddress())[ CD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_3 $$ logger.debug(searchParms.getGeocodeAddress())[ FD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_4 $$ URL url = new URL(geocoder.encode(searchParms.getGeocodeAddress()))[ CD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_4 $$ URL url = new URL(geocoder.encode(searchParms.getGeocodeAddress()))[ FD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_5 $$ URLConnection connection = url.openConnection()[ CD ]
Line_5 $$ URLConnection connection = url.openConnection()-->Line_5 $$ URLConnection connection = url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(geocoder.encode(searchParms.getGeocodeAddress()))-->Line_5 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_6 $$ String content = Streams.readString(connection.getInputStream())[ CD ]
Line_6 $$ String content = Streams.readString(connection.getInputStream())-->Line_6 $$ String content = Streams.readString(connection.getInputStream())[ CD ]
Line_5 $$ URLConnection connection = url.openConnection()-->Line_6 $$ String content = Streams.readString(connection.getInputStream())[ FD ]
Line_2 $$ public GLatLng geoCodeAddress(SearchParms searchParms) throws IOException -->Line_7 $$ return geocoder.decode(content)[ CD ]
Line_7 $$ return geocoder.decode(content)-->Line_7 $$ return geocoder.decode(content)[ CD ]
Line_6 $$ String content = Streams.readString(connection.getInputStream())-->Line_7 $$ return geocoder.decode(content)[ FD ]
