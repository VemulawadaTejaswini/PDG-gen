Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run(Preprocessor pp) throws SijappException [ CD ]
Line_2 $$ public void run(Preprocessor pp) throws SijappException -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ CD ]
Line_2 $$ public void run(Preprocessor pp) throws SijappException -->Line_2 $$ public void run(Preprocessor pp) throws SijappException [ CD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ CD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ CD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ FD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_4 $$ File srcFile = new File(this.srcDir, this.filenames[i])[ CD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_5 $$ BufferedReader reader[ CD ]
Line_5 $$ BufferedReader reader-->Line_8 $$ reader = new BufferedReader(isr)[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_8 $$ reader = new BufferedReader(isr)[ FD ]
Line_4 $$ File srcFile = new File(this.srcDir, this.filenames[i])-->Line_10 $$ throw (new SijappException("File " + srcFile.getPath() + " could not be read"))[ FD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])[ CD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_13 $$ BufferedWriter writer[ CD ]
Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])-->Line_15 $$ (new File(destFile.getParent())).mkdirs()[ FD ]
Line_13 $$ BufferedWriter writer-->Line_17 $$ writer = new BufferedWriter(osw)[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_17 $$ writer = new BufferedWriter(osw)[ FD ]
Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])-->Line_19 $$ throw (new SijappException("File " + destFile.getPath() + " could not be written"))[ FD ]
Line_2 $$ public void run(Preprocessor pp) throws SijappException -->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_5 $$ BufferedReader reader-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_13 $$ BufferedWriter writer-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_5 $$ BufferedReader reader-->Line_25 $$ reader.close()[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_25 $$ reader.close()[ FD ]
Line_13 $$ BufferedWriter writer-->Line_29 $$ writer.close()[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_29 $$ writer.close()[ FD ]
Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])-->Line_33 $$ destFile.delete()[ FD ]
Line_4 $$ File srcFile = new File(this.srcDir, this.filenames[i])-->Line_36 $$ throw (new SijappException(srcFile.getPath() + ":" + e.getMessage()))[ FD ]
Line_5 $$ BufferedReader reader-->Line_39 $$ reader.close()[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_39 $$ reader.close()[ FD ]
Line_13 $$ BufferedWriter writer-->Line_43 $$ writer.close()[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_43 $$ writer.close()[ FD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ FD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ FD ]
Line_3 $$ for (int i = 0; i < this.filenames.length; i++) -->Line_3 $$ for (int i = 0; i < this.filenames.length; i++) [ FD ]
Line_4 $$ File srcFile = new File(this.srcDir, this.filenames[i])-->Line_10 $$ throw (new SijappException("File " + srcFile.getPath() + " could not be read"))[ FD ]
Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])-->Line_15 $$ (new File(destFile.getParent())).mkdirs()[ FD ]
Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])-->Line_19 $$ throw (new SijappException("File " + destFile.getPath() + " could not be written"))[ FD ]
Line_5 $$ BufferedReader reader-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_13 $$ BufferedWriter writer-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_22 $$ pp.run(reader, writer)[ FD ]
Line_5 $$ BufferedReader reader-->Line_25 $$ reader.close()[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_25 $$ reader.close()[ FD ]
Line_13 $$ BufferedWriter writer-->Line_29 $$ writer.close()[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_29 $$ writer.close()[ FD ]
Line_12 $$ File destFile = new File(this.destDir, this.filenames[i])-->Line_33 $$ destFile.delete()[ FD ]
Line_4 $$ File srcFile = new File(this.srcDir, this.filenames[i])-->Line_36 $$ throw (new SijappException(srcFile.getPath() + ":" + e.getMessage()))[ FD ]
Line_5 $$ BufferedReader reader-->Line_39 $$ reader.close()[ FD ]
Line_8 $$ reader = new BufferedReader(isr)-->Line_39 $$ reader.close()[ FD ]
Line_13 $$ BufferedWriter writer-->Line_43 $$ writer.close()[ FD ]
Line_17 $$ writer = new BufferedWriter(osw)-->Line_43 $$ writer.close()[ FD ]
