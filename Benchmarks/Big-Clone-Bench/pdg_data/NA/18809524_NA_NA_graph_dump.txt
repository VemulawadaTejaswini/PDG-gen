Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void send(String payload, TransportReceiver receiver) [ CD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_3 $$ HttpClient client = new DefaultHttpClient()[ CD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_4 $$ HttpPost post = new HttpPost()[ CD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_5 $$ post.setHeader("Content-Type", "application/json;charset=UTF-8")[ CD ]
Line_4 $$ HttpPost post = new HttpPost()-->Line_5 $$ post.setHeader("Content-Type", "application/json;charset=UTF-8")[ FD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_6 $$ post.setHeader("Cookie", cookie)[ CD ]
Line_4 $$ HttpPost post = new HttpPost()-->Line_6 $$ post.setHeader("Cookie", cookie)[ FD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_7 $$ post.setURI(uri)[ CD ]
Line_4 $$ HttpPost post = new HttpPost()-->Line_7 $$ post.setURI(uri)[ FD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_8 $$ Throwable ex[ CD ]
Line_4 $$ HttpPost post = new HttpPost()-->Line_10 $$ post.setEntity(new StringEntity(payload, "UTF-8"))[ FD ]
Line_11 $$ HttpResponse response = client.execute(post)-->Line_11 $$ HttpResponse response = client.execute(post)[ CD ]
Line_3 $$ HttpClient client = new DefaultHttpClient()-->Line_11 $$ HttpResponse response = client.execute(post)[ FD ]
Line_4 $$ HttpPost post = new HttpPost()-->Line_11 $$ HttpResponse response = client.execute(post)[ FD ]
Line_11 $$ HttpResponse response = client.execute(post)-->Line_12 $$ if (200 == response.getStatusLine().getStatusCode()) [ FD ]
Line_12 $$ if (200 == response.getStatusLine().getStatusCode()) -->Line_13 $$ String contents = readStreamAsString(response.getEntity().getContent())[ CD ]
Line_13 $$ String contents = readStreamAsString(response.getEntity().getContent())-->Line_13 $$ String contents = readStreamAsString(response.getEntity().getContent())[ CD ]
Line_11 $$ HttpResponse response = client.execute(post)-->Line_13 $$ String contents = readStreamAsString(response.getEntity().getContent())[ FD ]
Line_12 $$ if (200 == response.getStatusLine().getStatusCode()) -->Line_14 $$ receiver.onTransportSuccess(contents)[ CD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_14 $$ receiver.onTransportSuccess(contents)[ FD ]
Line_13 $$ String contents = readStreamAsString(response.getEntity().getContent())-->Line_14 $$ receiver.onTransportSuccess(contents)[ FD ]
Line_12 $$ if (200 == response.getStatusLine().getStatusCode()) -->Line_16 $$ receiver.onTransportFailure(new ServerFailure(response.getStatusLine().getReasonPhrase()))[ CD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_16 $$ receiver.onTransportFailure(new ServerFailure(response.getStatusLine().getReasonPhrase()))[ FD ]
Line_11 $$ HttpResponse response = client.execute(post)-->Line_16 $$ receiver.onTransportFailure(new ServerFailure(response.getStatusLine().getReasonPhrase()))[ FD ]
Line_8 $$ Throwable ex-->Line_20 $$ ex = e[ FD ]
Line_20 $$ ex = e-->Line_20 $$ ex = e[ FD ]
Line_8 $$ Throwable ex-->Line_22 $$ ex = e[ FD ]
Line_20 $$ ex = e-->Line_22 $$ ex = e[ FD ]
Line_22 $$ ex = e-->Line_22 $$ ex = e[ FD ]
Line_8 $$ Throwable ex-->Line_24 $$ ex = e[ FD ]
Line_20 $$ ex = e-->Line_24 $$ ex = e[ FD ]
Line_22 $$ ex = e-->Line_24 $$ ex = e[ FD ]
Line_24 $$ ex = e-->Line_24 $$ ex = e[ FD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_26 $$ receiver.onTransportFailure(new ServerFailure(ex.getMessage()))[ CD ]
Line_2 $$ public void send(String payload, TransportReceiver receiver) -->Line_26 $$ receiver.onTransportFailure(new ServerFailure(ex.getMessage()))[ FD ]
Line_8 $$ Throwable ex-->Line_26 $$ receiver.onTransportFailure(new ServerFailure(ex.getMessage()))[ FD ]
Line_20 $$ ex = e-->Line_26 $$ receiver.onTransportFailure(new ServerFailure(ex.getMessage()))[ FD ]
Line_22 $$ ex = e-->Line_26 $$ receiver.onTransportFailure(new ServerFailure(ex.getMessage()))[ FD ]
Line_24 $$ ex = e-->Line_26 $$ receiver.onTransportFailure(new ServerFailure(ex.getMessage()))[ FD ]
