Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void download(String urlString) throws IOException [ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_3 $$ URL url = new URL(urlString)[ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_4 $$ url = handleRedirectUrl(url)[ CD ]
Line_3 $$ URL url = new URL(urlString)-->Line_4 $$ url = handleRedirectUrl(url)[ FD ]
Line_4 $$ url = handleRedirectUrl(url)-->Line_4 $$ url = handleRedirectUrl(url)[ FD ]
Line_4 $$ url = handleRedirectUrl(url)-->Line_4 $$ url = handleRedirectUrl(url)[ CD ]
Line_3 $$ URL url = new URL(urlString)-->Line_4 $$ url = handleRedirectUrl(url)[ FD ]
Line_4 $$ url = handleRedirectUrl(url)-->Line_4 $$ url = handleRedirectUrl(url)[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_5 $$ URLConnection cn = url.openConnection()[ CD ]
Line_5 $$ URLConnection cn = url.openConnection()-->Line_5 $$ URLConnection cn = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(urlString)-->Line_5 $$ URLConnection cn = url.openConnection()[ FD ]
Line_4 $$ url = handleRedirectUrl(url)-->Line_5 $$ URLConnection cn = url.openConnection()[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_6 $$ Utils.setHeader(cn)[ CD ]
Line_5 $$ URLConnection cn = url.openConnection()-->Line_6 $$ Utils.setHeader(cn)[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_7 $$ long fileLength = cn.getContentLength()[ CD ]
Line_7 $$ long fileLength = cn.getContentLength()-->Line_7 $$ long fileLength = cn.getContentLength()[ CD ]
Line_5 $$ URLConnection cn = url.openConnection()-->Line_7 $$ long fileLength = cn.getContentLength()[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_8 $$ Statics.getInstance().setFileLength(fileLength)[ CD ]
Line_7 $$ long fileLength = cn.getContentLength()-->Line_8 $$ Statics.getInstance().setFileLength(fileLength)[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_9 $$ long packageLength = fileLength / THREAD_COUNT[ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_10 $$ long leftLength = fileLength % THREAD_COUNT[ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_11 $$ String fileName = Utils.decodeURLFileName(url)[ CD ]
Line_11 $$ String fileName = Utils.decodeURLFileName(url)-->Line_11 $$ String fileName = Utils.decodeURLFileName(url)[ CD ]
Line_3 $$ URL url = new URL(urlString)-->Line_11 $$ String fileName = Utils.decodeURLFileName(url)[ FD ]
Line_4 $$ url = handleRedirectUrl(url)-->Line_11 $$ String fileName = Utils.decodeURLFileName(url)[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_12 $$ RandomAccessFile file = new RandomAccessFile(fileName, "rw")[ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_13 $$ System.out.println("File: " + fileName + ", Size: " + Utils.calSize(fileLength))[ CD ]
Line_7 $$ long fileLength = cn.getContentLength()-->Line_13 $$ System.out.println("File: " + fileName + ", Size: " + Utils.calSize(fileLength))[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_14 $$ CountDownLatch latch = new CountDownLatch(THREAD_COUNT + 1)[ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_15 $$ long pos = 0[ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ CD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_2 $$ private static void download(String urlString) throws IOException [ CD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ CD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ CD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ FD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_17 $$ long endPos = pos + packageLength[ CD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_18 $$ if (leftLength > 0) [ CD ]
Line_10 $$ long leftLength = fileLength % THREAD_COUNT-->Line_18 $$ if (leftLength > 0) [ FD ]
Line_18 $$ if (leftLength > 0) -->Line_19 $$ endPos++[ CD ]
Line_17 $$ long endPos = pos + packageLength-->Line_19 $$ endPos++[ FD ]
Line_18 $$ if (leftLength > 0) -->Line_20 $$ leftLength--[ CD ]
Line_10 $$ long leftLength = fileLength % THREAD_COUNT-->Line_20 $$ leftLength--[ FD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_22 $$ new Thread(new DownloadThread(latch, url, file, pos, endPos)).start()[ CD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_23 $$ pos = endPos[ CD ]
Line_23 $$ pos = endPos-->Line_23 $$ pos = endPos[ FD ]
Line_15 $$ long pos = 0-->Line_23 $$ pos = endPos[ FD ]
Line_17 $$ long endPos = pos + packageLength-->Line_23 $$ pos = endPos[ FD ]
Line_2 $$ private static void download(String urlString) throws IOException -->Line_25 $$ new Thread(new MoniterThread(latch)).start()[ CD ]
Line_14 $$ CountDownLatch latch = new CountDownLatch(THREAD_COUNT + 1)-->Line_27 $$ latch.await()[ FD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ FD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ FD ]
Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) -->Line_16 $$ for (int i = 0; i < THREAD_COUNT; i++) [ FD ]
Line_17 $$ long endPos = pos + packageLength-->Line_19 $$ endPos++[ FD ]
Line_17 $$ long endPos = pos + packageLength-->Line_23 $$ pos = endPos[ FD ]
