Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException [ CD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_3 $$ if (m_obj.getAuditRecords().size() == 0) [ CD ]
Line_3 $$ if (m_obj.getAuditRecords().size() == 0) -->Line_4 $$ return[ CD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_6 $$ String dsId = m_pid.toURI() + "/AUDIT"[ CD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_7 $$ String dsvId = dsId + "/" + DateUtility.convertDateToString(m_obj.getCreateDate())[ CD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_8 $$ Entry dsEntry = m_feed.addEntry()[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_8 $$ Entry dsEntry = m_feed.addEntry()[ CD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_9 $$ dsEntry.setId(dsId)[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_9 $$ dsEntry.setId(dsId)[ FD ]
Line_6 $$ String dsId = m_pid.toURI() + "/AUDIT"-->Line_9 $$ dsEntry.setId(dsId)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_10 $$ dsEntry.setTitle("AUDIT")[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_10 $$ dsEntry.setTitle("AUDIT")[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_11 $$ dsEntry.setUpdated(m_obj.getCreateDate())[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_11 $$ dsEntry.setUpdated(m_obj.getCreateDate())[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_12 $$ dsEntry.addCategory(MODEL.STATE.uri, "A", null)[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_12 $$ dsEntry.addCategory(MODEL.STATE.uri, "A", null)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_13 $$ dsEntry.addCategory(MODEL.CONTROL_GROUP.uri, "X", null)[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_13 $$ dsEntry.addCategory(MODEL.CONTROL_GROUP.uri, "X", null)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_14 $$ dsEntry.addCategory(MODEL.VERSIONABLE.uri, "false", null)[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_14 $$ dsEntry.addCategory(MODEL.VERSIONABLE.uri, "false", null)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_15 $$ dsEntry.addLink(dsvId, Link.REL_ALTERNATE)[ CD ]
Line_8 $$ Entry dsEntry = m_feed.addEntry()-->Line_15 $$ dsEntry.addLink(dsvId, Link.REL_ALTERNATE)[ FD ]
Line_7 $$ String dsvId = dsId + "/" + DateUtility.convertDateToString(m_obj.getCreateDate())-->Line_15 $$ dsEntry.addLink(dsvId, Link.REL_ALTERNATE)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_16 $$ Entry dsvEntry = m_feed.addEntry()[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_16 $$ Entry dsvEntry = m_feed.addEntry()[ CD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_17 $$ dsvEntry.setId(dsvId)[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_17 $$ dsvEntry.setId(dsvId)[ FD ]
Line_7 $$ String dsvId = dsId + "/" + DateUtility.convertDateToString(m_obj.getCreateDate())-->Line_17 $$ dsvEntry.setId(dsvId)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_18 $$ dsvEntry.setTitle("AUDIT.0")[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_18 $$ dsvEntry.setTitle("AUDIT.0")[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_19 $$ dsvEntry.setUpdated(m_obj.getCreateDate())[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_19 $$ dsvEntry.setUpdated(m_obj.getCreateDate())[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_20 $$ ThreadHelper.addInReplyTo(dsvEntry, m_pid.toURI() + "/AUDIT")[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_20 $$ ThreadHelper.addInReplyTo(dsvEntry, m_pid.toURI() + "/AUDIT")[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_21 $$ dsvEntry.addCategory(MODEL.FORMAT_URI.uri, AUDIT1_0.uri, null)[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_21 $$ dsvEntry.addCategory(MODEL.FORMAT_URI.uri, AUDIT1_0.uri, null)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_22 $$ dsvEntry.addCategory(MODEL.LABEL.uri, "Audit Trail for this object", null)[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_22 $$ dsvEntry.addCategory(MODEL.LABEL.uri, "Audit Trail for this object", null)[ FD ]
Line_2 $$ private void addAuditDatastream() throws ObjectIntegrityException, StreamIOException -->Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) [ CD ]
Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) -->Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) [ CD ]
Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) -->Line_24 $$ String name = "AUDIT.0.xml"[ CD ]
Line_27 $$ Reader r = new StringReader(DOTranslationUtility.getAuditTrail(m_obj))-->Line_28 $$ IOUtils.copy(r, m_zout, m_encoding)[ FD ]
Line_27 $$ Reader r = new StringReader(DOTranslationUtility.getAuditTrail(m_obj))-->Line_30 $$ r.close()[ FD ]
Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) -->Line_34 $$ IRI iri = new IRI(name)[ CD ]
Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) -->Line_35 $$ dsvEntry.setSummary("AUDIT.0")[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_35 $$ dsvEntry.setSummary("AUDIT.0")[ FD ]
Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) -->Line_36 $$ dsvEntry.setContent(iri, "text/xml")[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_36 $$ dsvEntry.setContent(iri, "text/xml")[ FD ]
Line_34 $$ IRI iri = new IRI(name)-->Line_36 $$ dsvEntry.setContent(iri, "text/xml")[ FD ]
Line_23 $$ if (m_format.equals(ATOM_ZIP1_1)) -->Line_38 $$ dsvEntry.setContent(DOTranslationUtility.getAuditTrail(m_obj), "text/xml")[ CD ]
Line_16 $$ Entry dsvEntry = m_feed.addEntry()-->Line_38 $$ dsvEntry.setContent(DOTranslationUtility.getAuditTrail(m_obj), "text/xml")[ FD ]
