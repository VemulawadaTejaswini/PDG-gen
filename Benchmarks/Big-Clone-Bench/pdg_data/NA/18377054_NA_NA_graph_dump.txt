Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception [ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_3 $$ URL url = new URL(zer.getUri())[ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_3 $$ URL url = new URL(zer.getUri())[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_4 $$ URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_4 $$ URLConnection conn = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(zer.getUri())-->Line_4 $$ URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_5 $$ String fcopyName = reportDir + File.separator + zer.getFilenameFromHttpHeader(conn.getHeaderFields())[ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_5 $$ String fcopyName = reportDir + File.separator + zer.getFilenameFromHttpHeader(conn.getHeaderFields())[ FD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_5 $$ String fcopyName = reportDir + File.separator + zer.getFilenameFromHttpHeader(conn.getHeaderFields())[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_6 $$ logger.debug("download " + zer.getUri() + " in " + fcopyName)[ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_6 $$ logger.debug("download " + zer.getUri() + " in " + fcopyName)[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_7 $$ BufferedOutputStream bw[ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_8 $$ bw = new BufferedOutputStream(new FileOutputStream(fcopyName))[ CD ]
Line_7 $$ BufferedOutputStream bw-->Line_8 $$ bw = new BufferedOutputStream(new FileOutputStream(fcopyName))[ FD ]
Line_8 $$ bw = new BufferedOutputStream(new FileOutputStream(fcopyName))-->Line_8 $$ bw = new BufferedOutputStream(new FileOutputStream(fcopyName))[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_9 $$ BufferedInputStream reader = new BufferedInputStream(conn.getInputStream())[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_9 $$ BufferedInputStream reader = new BufferedInputStream(conn.getInputStream())[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_10 $$ byte[] inputLine = new byte[100000][ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_12 $$ while (reader.read(inputLine) > 0) [ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception [ CD ]
Line_9 $$ BufferedInputStream reader = new BufferedInputStream(conn.getInputStream())-->Line_12 $$ while (reader.read(inputLine) > 0) [ FD ]
Line_10 $$ byte[] inputLine = new byte[100000]-->Line_12 $$ while (reader.read(inputLine) > 0) [ FD ]
Line_12 $$ while (reader.read(inputLine) > 0) -->Line_13 $$ bw.write(inputLine)[ CD ]
Line_7 $$ BufferedOutputStream bw-->Line_13 $$ bw.write(inputLine)[ FD ]
Line_8 $$ bw = new BufferedOutputStream(new FileOutputStream(fcopyName))-->Line_13 $$ bw.write(inputLine)[ FD ]
Line_10 $$ byte[] inputLine = new byte[100000]-->Line_13 $$ bw.write(inputLine)[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_15 $$ bw.close()[ CD ]
Line_7 $$ BufferedOutputStream bw-->Line_15 $$ bw.close()[ FD ]
Line_8 $$ bw = new BufferedOutputStream(new FileOutputStream(fcopyName))-->Line_15 $$ bw.close()[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_16 $$ reader.close()[ CD ]
Line_9 $$ BufferedInputStream reader = new BufferedInputStream(conn.getInputStream())-->Line_16 $$ reader.close()[ FD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_17 $$ zer.setUri(fcopyName)[ CD ]
Line_2 $$ private void prepareUrlFile(ZipEntryRef zer, String nodeDir, String reportDir) throws Exception -->Line_17 $$ zer.setUri(fcopyName)[ FD ]
Line_5 $$ String fcopyName = reportDir + File.separator + zer.getFilenameFromHttpHeader(conn.getHeaderFields())-->Line_17 $$ zer.setUri(fcopyName)[ FD ]
