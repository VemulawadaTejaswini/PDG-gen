Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected File extractArchive(File archive) [ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_3 $$ byte buf[] = new byte[BUF_SIZE][ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_4 $$ ZipInputStream zis = null[ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_5 $$ File archiveDirectory = null[ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_6 $$ FileOutputStream fos[ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_7 $$ ZipEntry entry[ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_8 $$ File curEntry[ CD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_9 $$ int n[ CD ]
Line_4 $$ ZipInputStream zis = null-->Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))[ FD ]
Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))-->Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_12 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_7 $$ ZipEntry entry-->Line_12 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_12 $$ while ((entry = zis.getNextEntry()) != null) [ CD ]
Line_4 $$ ZipInputStream zis = null-->Line_12 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))-->Line_12 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_13 $$ curEntry = new File(workingDir, entry.getName())[ CD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_13 $$ curEntry = new File(workingDir, entry.getName())[ FD ]
Line_8 $$ File curEntry-->Line_13 $$ curEntry = new File(workingDir, entry.getName())[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_13 $$ curEntry = new File(workingDir, entry.getName())[ FD ]
Line_7 $$ ZipEntry entry-->Line_13 $$ curEntry = new File(workingDir, entry.getName())[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_14 $$ if (entry.isDirectory()) [ CD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_14 $$ if (entry.isDirectory()) [ FD ]
Line_7 $$ ZipEntry entry-->Line_14 $$ if (entry.isDirectory()) [ FD ]
Line_14 $$ if (entry.isDirectory()) -->Line_14 $$ if (entry.isDirectory()) [ CD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_14 $$ if (entry.isDirectory()) [ FD ]
Line_7 $$ ZipEntry entry-->Line_14 $$ if (entry.isDirectory()) [ FD ]
Line_14 $$ if (entry.isDirectory()) -->Line_15 $$ getLogger().info("skip directory: " + entry.getName())[ CD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_15 $$ getLogger().info("skip directory: " + entry.getName())[ FD ]
Line_7 $$ ZipEntry entry-->Line_15 $$ getLogger().info("skip directory: " + entry.getName())[ FD ]
Line_14 $$ if (entry.isDirectory()) -->Line_16 $$ if (archiveDirectory == null)[ CD ]
Line_5 $$ File archiveDirectory = null-->Line_16 $$ if (archiveDirectory == null)[ FD ]
Line_16 $$ if (archiveDirectory == null)-->Line_16 $$ archiveDirectory = curEntry[ CD ]
Line_16 $$ archiveDirectory = curEntry-->Line_16 $$ archiveDirectory = curEntry[ FD ]
Line_5 $$ File archiveDirectory = null-->Line_16 $$ archiveDirectory = curEntry[ FD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_16 $$ archiveDirectory = curEntry[ FD ]
Line_8 $$ File curEntry-->Line_16 $$ archiveDirectory = curEntry[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ CD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ FD ]
Line_7 $$ ZipEntry entry-->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ FD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ FD ]
Line_8 $$ File curEntry-->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_20 $$ if (!curEntry.getParentFile().exists())[ CD ]
Line_20 $$ if (!curEntry.getParentFile().exists())-->Line_20 $$ if (!curEntry.getParentFile().exists())[ CD ]
Line_20 $$ if (!curEntry.getParentFile().exists())-->Line_20 $$ if (!curEntry.getParentFile().exists())[ CD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_20 $$ if (!curEntry.getParentFile().exists())[ FD ]
Line_8 $$ File curEntry-->Line_20 $$ if (!curEntry.getParentFile().exists())[ FD ]
Line_20 $$ if (!curEntry.getParentFile().exists())-->Line_20 $$ curEntry.getParentFile().mkdirs()[ CD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_20 $$ curEntry.getParentFile().mkdirs()[ FD ]
Line_8 $$ File curEntry-->Line_20 $$ curEntry.getParentFile().mkdirs()[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_21 $$ fos = new FileOutputStream(curEntry)[ CD ]
Line_21 $$ fos = new FileOutputStream(curEntry)-->Line_21 $$ fos = new FileOutputStream(curEntry)[ FD ]
Line_6 $$ FileOutputStream fos-->Line_21 $$ fos = new FileOutputStream(curEntry)[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)[ CD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_12 $$ while ((entry = zis.getNextEntry()) != null) [ CD ]
Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)-->Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)[ FD ]
Line_9 $$ int n-->Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)[ FD ]
Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)-->Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)[ CD ]
Line_4 $$ ZipInputStream zis = null-->Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)[ FD ]
Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))-->Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)[ FD ]
Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)-->Line_22 $$ fos.write(buf, 0, n)[ CD ]
Line_21 $$ fos = new FileOutputStream(curEntry)-->Line_22 $$ fos.write(buf, 0, n)[ FD ]
Line_6 $$ FileOutputStream fos-->Line_22 $$ fos.write(buf, 0, n)[ FD ]
Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)-->Line_22 $$ fos.write(buf, 0, n)[ FD ]
Line_9 $$ int n-->Line_22 $$ fos.write(buf, 0, n)[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_23 $$ fos.close()[ CD ]
Line_21 $$ fos = new FileOutputStream(curEntry)-->Line_23 $$ fos.close()[ FD ]
Line_6 $$ FileOutputStream fos-->Line_23 $$ fos.close()[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_24 $$ zis.closeEntry()[ CD ]
Line_4 $$ ZipInputStream zis = null-->Line_24 $$ zis.closeEntry()[ FD ]
Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))-->Line_24 $$ zis.closeEntry()[ FD ]
Line_4 $$ ZipInputStream zis = null-->Line_30 $$ if (zis != null)[ FD ]
Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))-->Line_30 $$ if (zis != null)[ FD ]
Line_30 $$ if (zis != null)-->Line_30 $$ zis.close()[ CD ]
Line_4 $$ ZipInputStream zis = null-->Line_30 $$ zis.close()[ FD ]
Line_11 $$ zis = new ZipInputStream(new FileInputStream(archive))-->Line_30 $$ zis.close()[ FD ]
Line_2 $$ protected File extractArchive(File archive) -->Line_34 $$ return archiveDirectory[ CD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_13 $$ curEntry = new File(workingDir, entry.getName())[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_14 $$ if (entry.isDirectory()) [ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_14 $$ if (entry.isDirectory()) [ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_15 $$ getLogger().info("skip directory: " + entry.getName())[ FD ]
Line_16 $$ archiveDirectory = curEntry-->Line_16 $$ if (archiveDirectory == null)[ FD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_16 $$ archiveDirectory = curEntry[ FD ]
Line_12 $$ while ((entry = zis.getNextEntry()) != null) -->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ FD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_19 $$ getLogger().info("zip-entry (file): " + entry.getName() + " ==> real path: " + curEntry.getAbsolutePath())[ FD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_20 $$ if (!curEntry.getParentFile().exists())[ FD ]
Line_13 $$ curEntry = new File(workingDir, entry.getName())-->Line_20 $$ curEntry.getParentFile().mkdirs()[ FD ]
Line_21 $$ fos = new FileOutputStream(curEntry)-->Line_23 $$ fos.close()[ FD ]
Line_22 $$ while ((n = zis.read(buf, 0, buf.length)) > -1) fos.write(buf, 0, n)-->Line_22 $$ fos.write(buf, 0, n)[ FD ]
