Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void xInitGUI() [ CD ]
Line_2 $$ protected void xInitGUI() -->Line_3 $$ this.jlHead.setText(formater.getText("select_marc21_title"))[ CD ]
Line_2 $$ protected void xInitGUI() -->Line_4 $$ this.jlResId.setText(formater.getText("select_marc21_label_text"))[ CD ]
Line_2 $$ protected void xInitGUI() -->Line_5 $$ this.jlResId.setToolTipText(formater.getText("select_marc21_label_description"))[ CD ]
Line_2 $$ protected void xInitGUI() -->Line_6 $$ ElvisListModel model = new ElvisListModel()[ CD ]
Line_2 $$ protected void xInitGUI() -->Line_7 $$ this.jlResourceList.setModel(model)[ CD ]
Line_6 $$ ElvisListModel model = new ElvisListModel()-->Line_7 $$ this.jlResourceList.setModel(model)[ FD ]
Line_10 $$ InputStream streamResources = urlListResources.openStream()-->Line_10 $$ InputStream streamResources = urlListResources.openStream()[ CD ]
Line_9 $$ URL urlListResources = new URL(ElvisRegistry.getInstance().getProperty("elvis.server") + "/servlet/listResources?xpath=document()//Book")-->Line_10 $$ InputStream streamResources = urlListResources.openStream()[ FD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()[ CD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_12 $$ xpp.setInput(new InputStreamReader(streamResources))[ FD ]
Line_13 $$ int type = xpp.getEventType()-->Line_13 $$ int type = xpp.getEventType()[ CD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_13 $$ int type = xpp.getEventType()[ FD ]
Line_13 $$ int type = xpp.getEventType()-->Line_14 $$ while (type != XmlPullParser.END_DOCUMENT) [ FD ]
Line_14 $$ while (type != XmlPullParser.END_DOCUMENT) -->Line_15 $$ if (type == XmlPullParser.START_TAG && "Resource".equals(xpp.getName())) [ CD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_15 $$ if (type == XmlPullParser.START_TAG && "Resource".equals(xpp.getName())) [ FD ]
Line_15 $$ if (type == XmlPullParser.START_TAG && "Resource".equals(xpp.getName())) -->Line_16 $$ model.add(xpp.getAttributeValue("", "resId"), xpp.getAttributeValue("", "author"), xpp.getAttributeValue("", "title"))[ CD ]
Line_6 $$ ElvisListModel model = new ElvisListModel()-->Line_16 $$ model.add(xpp.getAttributeValue("", "resId"), xpp.getAttributeValue("", "author"), xpp.getAttributeValue("", "title"))[ FD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_16 $$ model.add(xpp.getAttributeValue("", "resId"), xpp.getAttributeValue("", "author"), xpp.getAttributeValue("", "title"))[ FD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_16 $$ model.add(xpp.getAttributeValue("", "resId"), xpp.getAttributeValue("", "author"), xpp.getAttributeValue("", "title"))[ FD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_16 $$ model.add(xpp.getAttributeValue("", "resId"), xpp.getAttributeValue("", "author"), xpp.getAttributeValue("", "title"))[ FD ]
Line_14 $$ while (type != XmlPullParser.END_DOCUMENT) -->Line_18 $$ type = xpp.next()[ CD ]
Line_18 $$ type = xpp.next()-->Line_18 $$ type = xpp.next()[ FD ]
Line_13 $$ int type = xpp.getEventType()-->Line_18 $$ type = xpp.next()[ FD ]
Line_18 $$ type = xpp.next()-->Line_18 $$ type = xpp.next()[ CD ]
Line_11 $$ XmlPullParser xpp = XmlPullParserFactory.newInstance().newPullParser()-->Line_18 $$ type = xpp.next()[ FD ]
Line_10 $$ InputStream streamResources = urlListResources.openStream()-->Line_20 $$ streamResources.close()[ FD ]
Line_2 $$ protected void xInitGUI() -->Line_28 $$ ListSelectionModel selectionModel = this.jlResourceList.getSelectionModel()[ CD ]
Line_28 $$ ListSelectionModel selectionModel = this.jlResourceList.getSelectionModel()-->Line_28 $$ ListSelectionModel selectionModel = this.jlResourceList.getSelectionModel()[ CD ]
Line_2 $$ protected void xInitGUI() -->Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_28 $$ ListSelectionModel selectionModel = this.jlResourceList.getSelectionModel()-->Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() -->Line_35 $$ int index = e.getFirstIndex()[ CD ]
Line_35 $$ int index = e.getFirstIndex()-->Line_35 $$ int index = e.getFirstIndex()[ CD ]
Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() -->Line_35 $$ int index = e.getFirstIndex()[ FD ]
Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() -->Line_36 $$ boolean isAdjusting = e.getValueIsAdjusting()[ CD ]
Line_36 $$ boolean isAdjusting = e.getValueIsAdjusting()-->Line_36 $$ boolean isAdjusting = e.getValueIsAdjusting()[ CD ]
Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() -->Line_36 $$ boolean isAdjusting = e.getValueIsAdjusting()[ FD ]
Line_29 $$ selectionModel.addListSelectionListener(new ListSelectionListener() -->Line_37 $$ if (!isAdjusting) [ CD ]
Line_36 $$ boolean isAdjusting = e.getValueIsAdjusting()-->Line_37 $$ if (!isAdjusting) [ FD ]
Line_37 $$ if (!isAdjusting) -->Line_37 $$ if (!isAdjusting) [ CD ]
Line_36 $$ boolean isAdjusting = e.getValueIsAdjusting()-->Line_37 $$ if (!isAdjusting) [ FD ]
Line_37 $$ if (!isAdjusting) -->Line_38 $$ ElvisListModel _model = (ElvisListModel) jlResourceList.getModel()[ CD ]
Line_37 $$ if (!isAdjusting) -->Line_39 $$ jtfResId.setText(_model.get(index).getId())[ CD ]
Line_38 $$ ElvisListModel _model = (ElvisListModel) jlResourceList.getModel()-->Line_39 $$ jtfResId.setText(_model.get(index).getId())[ FD ]
Line_35 $$ int index = e.getFirstIndex()-->Line_39 $$ jtfResId.setText(_model.get(index).getId())[ FD ]
Line_18 $$ type = xpp.next()-->Line_14 $$ while (type != XmlPullParser.END_DOCUMENT) [ FD ]
Line_18 $$ type = xpp.next()-->Line_14 $$ while (type != XmlPullParser.END_DOCUMENT) [ FD ]
