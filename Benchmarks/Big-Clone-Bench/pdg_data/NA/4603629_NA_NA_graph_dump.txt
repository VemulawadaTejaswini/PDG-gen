Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean copy(File from, File to) [ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_3 $$ if (from.isDirectory()) [ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_3 $$ if (from.isDirectory()) [ FD ]
Line_3 $$ if (from.isDirectory()) -->Line_3 $$ if (from.isDirectory()) [ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_3 $$ if (from.isDirectory()) [ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_4 $$ for (String name : Arrays.asList(from.list())) [ FD ]
Line_5 $$ if (!copy(from, to, name)) -->Line_5 $$ if (!copy(from, to, name)) [ CD ]
Line_5 $$ if (!copy(from, to, name)) -->Line_5 $$ if (!copy(from, to, name)) [ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_5 $$ if (!copy(from, to, name)) [ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_5 $$ if (!copy(from, to, name)) [ FD ]
Line_4 $$ for (String name : Arrays.asList(from.list())) -->Line_5 $$ if (!copy(from, to, name)) [ FD ]
Line_5 $$ if (!copy(from, to, name)) -->Line_6 $$ LogUtils.info("Failed to copy " + name + " from " + from + " to " + to, null)[ CD ]
Line_5 $$ if (!copy(from, to, name)) -->Line_7 $$ return false[ CD ]
Line_13 $$ FileChannel ifc = is.getChannel()-->Line_13 $$ FileChannel ifc = is.getChannel()[ CD ]
Line_12 $$ FileInputStream is = new FileInputStream(from)-->Line_13 $$ FileChannel ifc = is.getChannel()[ FD ]
Line_14 $$ FileOutputStream os = makeFile(to)-->Line_14 $$ FileOutputStream os = makeFile(to)[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_14 $$ FileOutputStream os = makeFile(to)[ FD ]
Line_15 $$ if (USE_NIO) -->Line_16 $$ FileChannel ofc = os.getChannel()[ CD ]
Line_16 $$ FileChannel ofc = os.getChannel()-->Line_16 $$ FileChannel ofc = os.getChannel()[ CD ]
Line_14 $$ FileOutputStream os = makeFile(to)-->Line_16 $$ FileChannel ofc = os.getChannel()[ FD ]
Line_15 $$ if (USE_NIO) -->Line_17 $$ ofc.transferFrom(ifc, 0, from.length())[ CD ]
Line_16 $$ FileChannel ofc = os.getChannel()-->Line_17 $$ ofc.transferFrom(ifc, 0, from.length())[ FD ]
Line_13 $$ FileChannel ifc = is.getChannel()-->Line_17 $$ ofc.transferFrom(ifc, 0, from.length())[ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_17 $$ ofc.transferFrom(ifc, 0, from.length())[ FD ]
Line_15 $$ if (USE_NIO) -->Line_19 $$ pipe(is, os, false)[ CD ]
Line_12 $$ FileInputStream is = new FileInputStream(from)-->Line_19 $$ pipe(is, os, false)[ FD ]
Line_14 $$ FileOutputStream os = makeFile(to)-->Line_19 $$ pipe(is, os, false)[ FD ]
Line_12 $$ FileInputStream is = new FileInputStream(from)-->Line_21 $$ is.close()[ FD ]
Line_14 $$ FileOutputStream os = makeFile(to)-->Line_22 $$ os.close()[ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_28 $$ long time = from.lastModified()[ CD ]
Line_28 $$ long time = from.lastModified()-->Line_28 $$ long time = from.lastModified()[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_28 $$ long time = from.lastModified()[ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_29 $$ setLastModified(to, time)[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_29 $$ setLastModified(to, time)[ FD ]
Line_28 $$ long time = from.lastModified()-->Line_29 $$ setLastModified(to, time)[ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_30 $$ long newtime = to.lastModified()[ CD ]
Line_30 $$ long newtime = to.lastModified()-->Line_30 $$ long newtime = to.lastModified()[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_30 $$ long newtime = to.lastModified()[ FD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_31 $$ if (newtime != time) [ CD ]
Line_30 $$ long newtime = to.lastModified()-->Line_31 $$ if (newtime != time) [ FD ]
Line_28 $$ long time = from.lastModified()-->Line_31 $$ if (newtime != time) [ FD ]
Line_31 $$ if (newtime != time) -->Line_32 $$ LogUtils.info("Failed to set timestamp for file " + to + ": tried " + new Date(time) + ", have " + new Date(newtime), null)[ CD ]
Line_31 $$ if (newtime != time) -->Line_33 $$ to.setLastModified(time)[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_33 $$ to.setLastModified(time)[ FD ]
Line_28 $$ long time = from.lastModified()-->Line_33 $$ to.setLastModified(time)[ FD ]
Line_31 $$ if (newtime != time) -->Line_34 $$ long morenewtime = to.lastModified()[ CD ]
Line_34 $$ long morenewtime = to.lastModified()-->Line_34 $$ long morenewtime = to.lastModified()[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_34 $$ long morenewtime = to.lastModified()[ FD ]
Line_31 $$ if (newtime != time) -->Line_35 $$ return false[ CD ]
Line_2 $$ public static boolean copy(File from, File to) -->Line_37 $$ return time == newtime[ CD ]
