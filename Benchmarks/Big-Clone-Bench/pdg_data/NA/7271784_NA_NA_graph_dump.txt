Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean copy(File source, File target, boolean owrite) [ CD ]
Line_2 $$ public static boolean copy(File source, File target, boolean owrite) -->Line_3 $$ if (!source.exists()) [ CD ]
Line_3 $$ if (!source.exists()) -->Line_3 $$ if (!source.exists()) [ CD ]
Line_3 $$ if (!source.exists()) -->Line_3 $$ if (!source.exists()) [ CD ]
Line_2 $$ public static boolean copy(File source, File target, boolean owrite) -->Line_3 $$ if (!source.exists()) [ FD ]
Line_3 $$ if (!source.exists()) -->Line_4 $$ log.error("Invalid input to copy: source " + source + "doesn't exist")[ CD ]
Line_3 $$ if (!source.exists()) -->Line_5 $$ return false[ CD ]
Line_3 $$ if (!source.exists()) -->Line_6 $$ if (!source.isFile()) [ CD ]
Line_6 $$ if (!source.isFile()) -->Line_6 $$ if (!source.isFile()) [ CD ]
Line_6 $$ if (!source.isFile()) -->Line_6 $$ if (!source.isFile()) [ CD ]
Line_2 $$ public static boolean copy(File source, File target, boolean owrite) -->Line_6 $$ if (!source.isFile()) [ FD ]
Line_6 $$ if (!source.isFile()) -->Line_7 $$ log.error("Invalid input to copy: source " + source + "isn't a file.")[ CD ]
Line_6 $$ if (!source.isFile()) -->Line_8 $$ return false[ CD ]
Line_6 $$ if (!source.isFile()) -->Line_9 $$ if (target.exists() && !owrite) [ CD ]
Line_2 $$ public static boolean copy(File source, File target, boolean owrite) -->Line_9 $$ if (target.exists() && !owrite) [ FD ]
Line_2 $$ public static boolean copy(File source, File target, boolean owrite) -->Line_9 $$ if (target.exists() && !owrite) [ FD ]
Line_9 $$ if (target.exists() && !owrite) -->Line_10 $$ log.error("Invalid input to copy: target " + target + " exists.")[ CD ]
Line_9 $$ if (target.exists() && !owrite) -->Line_11 $$ return false[ CD ]
Line_17 $$ int read = -1-->Line_17 $$ int read = -1[ CD ]
Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)-->Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)[ FD ]
Line_17 $$ int read = -1-->Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)[ FD ]
Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)-->Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)[ CD ]
Line_14 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(source))-->Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)[ FD ]
Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)-->Line_18 $$ out.write(buffer, 0, read)[ CD ]
Line_15 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(target))-->Line_18 $$ out.write(buffer, 0, read)[ FD ]
Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)-->Line_18 $$ out.write(buffer, 0, read)[ FD ]
Line_17 $$ int read = -1-->Line_18 $$ out.write(buffer, 0, read)[ FD ]
Line_15 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(target))-->Line_19 $$ out.flush()[ FD ]
Line_15 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(target))-->Line_20 $$ out.close()[ FD ]
Line_14 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(source))-->Line_21 $$ in.close()[ FD ]
Line_18 $$ while ((read = in.read(buffer, 0, 1024)) != -1) out.write(buffer, 0, read)-->Line_18 $$ out.write(buffer, 0, read)[ FD ]
