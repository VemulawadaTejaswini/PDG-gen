Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) [ CD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_3 $$ if (location == null) [ CD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_3 $$ if (location == null) [ FD ]
Line_3 $$ if (location == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() [ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_8 $$ if (params == null || params.length == 0 || params[0] == null) [ CD ]
Line_8 $$ if (params == null || params.length == 0 || params[0] == null) -->Line_9 $$ return null[ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_11 $$ Location location = params[0][ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_12 $$ String address = ""[ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())[ CD ]
Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())-->Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())[ CD ]
Line_11 $$ Location location = params[0]-->Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())[ FD ]
Line_11 $$ Location location = params[0]-->Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())[ FD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) [ CD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) [ CD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) [ CD ]
Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())-->Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) [ FD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_15 $$ address = cachedAddress[ CD ]
Line_12 $$ String address = ""-->Line_15 $$ address = cachedAddress[ FD ]
Line_15 $$ address = cachedAddress-->Line_15 $$ address = cachedAddress[ FD ]
Line_13 $$ String cachedAddress = DataService.GetInstance(mContext).getAddressFormLocationCache(location.getLatitude(), location.getLongitude())-->Line_15 $$ address = cachedAddress[ FD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_17 $$ StringBuilder jsonText = new StringBuilder()[ CD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_18 $$ HttpClient client = new DefaultHttpClient()[ CD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())[ CD ]
Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())-->Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())[ CD ]
Line_11 $$ Location location = params[0]-->Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())[ FD ]
Line_11 $$ Location location = params[0]-->Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_19 $$ String url = String.format(GoogleMapAPITemplate, location.getLatitude(), location.getLongitude())[ FD ]
Line_14 $$ if (!TextUtils.isEmpty(cachedAddress)) -->Line_20 $$ HttpGet httpGet = new HttpGet(url)[ CD ]
Line_22 $$ HttpResponse response = client.execute(httpGet)-->Line_22 $$ HttpResponse response = client.execute(httpGet)[ CD ]
Line_18 $$ HttpClient client = new DefaultHttpClient()-->Line_22 $$ HttpResponse response = client.execute(httpGet)[ FD ]
Line_20 $$ HttpGet httpGet = new HttpGet(url)-->Line_22 $$ HttpResponse response = client.execute(httpGet)[ FD ]
Line_23 $$ StatusLine statusLine = response.getStatusLine()-->Line_23 $$ StatusLine statusLine = response.getStatusLine()[ CD ]
Line_22 $$ HttpResponse response = client.execute(httpGet)-->Line_23 $$ StatusLine statusLine = response.getStatusLine()[ FD ]
Line_24 $$ int statusCode = statusLine.getStatusCode()-->Line_24 $$ int statusCode = statusLine.getStatusCode()[ CD ]
Line_23 $$ StatusLine statusLine = response.getStatusLine()-->Line_24 $$ int statusCode = statusLine.getStatusCode()[ FD ]
Line_24 $$ int statusCode = statusLine.getStatusCode()-->Line_25 $$ if (statusCode == 200) [ FD ]
Line_25 $$ if (statusCode == 200) -->Line_26 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_26 $$ HttpEntity entity = response.getEntity()-->Line_26 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_22 $$ HttpResponse response = client.execute(httpGet)-->Line_26 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_25 $$ if (statusCode == 200) -->Line_27 $$ InputStream content = entity.getContent()[ CD ]
Line_27 $$ InputStream content = entity.getContent()-->Line_27 $$ InputStream content = entity.getContent()[ CD ]
Line_26 $$ HttpEntity entity = response.getEntity()-->Line_27 $$ InputStream content = entity.getContent()[ FD ]
Line_25 $$ if (statusCode == 200) -->Line_28 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(content))[ CD ]
Line_25 $$ if (statusCode == 200) -->Line_29 $$ String line[ CD ]
Line_25 $$ if (statusCode == 200) -->Line_30 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_25 $$ if (statusCode == 200) -->Line_25 $$ if (statusCode == 200) [ CD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_30 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_29 $$ String line-->Line_30 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_30 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_28 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(content))-->Line_30 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_31 $$ jsonText.append(line)[ CD ]
Line_17 $$ StringBuilder jsonText = new StringBuilder()-->Line_31 $$ jsonText.append(line)[ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_31 $$ jsonText.append(line)[ FD ]
Line_29 $$ String line-->Line_31 $$ jsonText.append(line)[ FD ]
Line_25 $$ if (statusCode == 200) -->Line_33 $$ JSONObject result = new JSONObject(jsonText.toString())[ CD ]
Line_17 $$ StringBuilder jsonText = new StringBuilder()-->Line_33 $$ JSONObject result = new JSONObject(jsonText.toString())[ FD ]
Line_25 $$ if (statusCode == 200) -->Line_34 $$ String status = result.getString(GoogleMapStatusSchema.status)[ CD ]
Line_34 $$ String status = result.getString(GoogleMapStatusSchema.status)-->Line_34 $$ String status = result.getString(GoogleMapStatusSchema.status)[ CD ]
Line_33 $$ JSONObject result = new JSONObject(jsonText.toString())-->Line_34 $$ String status = result.getString(GoogleMapStatusSchema.status)[ FD ]
Line_25 $$ if (statusCode == 200) -->Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) [ CD ]
Line_34 $$ String status = result.getString(GoogleMapStatusSchema.status)-->Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) [ FD ]
Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) -->Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) [ CD ]
Line_34 $$ String status = result.getString(GoogleMapStatusSchema.status)-->Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) [ FD ]
Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) -->Line_36 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results)[ CD ]
Line_36 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results)-->Line_36 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results)[ CD ]
Line_33 $$ JSONObject result = new JSONObject(jsonText.toString())-->Line_36 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results)[ FD ]
Line_35 $$ if (GoogleMapStatusCodes.OK.equals(status)) -->Line_37 $$ if (addresses.length() > 0) [ CD ]
Line_36 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results)-->Line_37 $$ if (addresses.length() > 0) [ FD ]
Line_37 $$ if (addresses.length() > 0) -->Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)[ CD ]
Line_12 $$ String address = ""-->Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)[ FD ]
Line_15 $$ address = cachedAddress-->Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)[ FD ]
Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)-->Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)[ FD ]
Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)-->Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)[ CD ]
Line_36 $$ JSONArray addresses = result.getJSONArray(GoogleMapStatusSchema.results)-->Line_38 $$ address = addresses.getJSONObject(0).getString(GoogleMapStatusSchema.formatted_address)[ FD ]
Line_37 $$ if (addresses.length() > 0) -->Line_39 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) [ CD ]
Line_39 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) -->Line_39 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) [ CD ]
Line_39 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) -->Line_39 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) [ CD ]
Line_39 $$ if (!TextUtils.isEmpty(currentBestLocationAddress)) -->Line_40 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress)[ CD ]
Line_11 $$ Location location = params[0]-->Line_40 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress)[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_40 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress)[ FD ]
Line_11 $$ Location location = params[0]-->Line_40 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress)[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_40 $$ DataService.GetInstance(mContext).updateAddressToLocationCache(location.getLatitude(), location.getLongitude(), currentBestLocationAddress)[ FD ]
Line_25 $$ if (statusCode == 200) -->Line_45 $$ Log.e("Error", "Failed to get address via google map API.")[ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_56 $$ return address[ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_59 $$ setCurrentBestLocationAddress(currentBestLocation, result)[ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_59 $$ setCurrentBestLocationAddress(currentBestLocation, result)[ FD ]
Line_33 $$ JSONObject result = new JSONObject(jsonText.toString())-->Line_59 $$ setCurrentBestLocationAddress(currentBestLocation, result)[ FD ]
Line_2 $$ private void getLocationAddressByGoogleMapAsync(Location location) -->Line_62 $$ task.execute(currentBestLocation)[ CD ]
Line_6 $$ AsyncTask<Location, Void, String> task = new AsyncTask<Location, Void, String>() -->Line_62 $$ task.execute(currentBestLocation)[ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_31 $$ jsonText.append(line)[ FD ]
