Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException [ CD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_3 $$ MultiStatus status = new MultiStatus(GraphVizActivator.ID, 0, "Errors occurred while running Graphviz", null)[ CD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()[ CD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()[ CD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()[ FD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_5 $$ ByteArrayOutputStream dotContents = new ByteArrayOutputStream()[ CD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)[ FD ]
Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)-->Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)[ FD ]
Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)-->Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)[ CD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_10 $$ IOUtils.copy(input, dotContents)[ FD ]
Line_5 $$ ByteArrayOutputStream dotContents = new ByteArrayOutputStream()-->Line_10 $$ IOUtils.copy(input, dotContents)[ FD ]
Line_8 $$ FileOutputStream tmpDotOutputStream = null-->Line_11 $$ tmpDotOutputStream = new FileOutputStream(dotInput)[ FD ]
Line_11 $$ tmpDotOutputStream = new FileOutputStream(dotInput)-->Line_11 $$ tmpDotOutputStream = new FileOutputStream(dotInput)[ FD ]
Line_8 $$ FileOutputStream tmpDotOutputStream = null-->Line_12 $$ IOUtils.copy(new ByteArrayInputStream(dotContents.toByteArray()), tmpDotOutputStream)[ FD ]
Line_11 $$ tmpDotOutputStream = new FileOutputStream(dotInput)-->Line_12 $$ IOUtils.copy(new ByteArrayInputStream(dotContents.toByteArray()), tmpDotOutputStream)[ FD ]
Line_5 $$ ByteArrayOutputStream dotContents = new ByteArrayOutputStream()-->Line_12 $$ IOUtils.copy(new ByteArrayInputStream(dotContents.toByteArray()), tmpDotOutputStream)[ FD ]
Line_8 $$ FileOutputStream tmpDotOutputStream = null-->Line_14 $$ IOUtils.closeQuietly(tmpDotOutputStream)[ FD ]
Line_11 $$ tmpDotOutputStream = new FileOutputStream(dotInput)-->Line_14 $$ IOUtils.closeQuietly(tmpDotOutputStream)[ FD ]
Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)-->Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)[ CD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)[ FD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)[ FD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)[ FD ]
Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)-->Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)[ FD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)[ FD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_17 $$ if (dotOutput.isFile()) [ FD ]
Line_17 $$ if (dotOutput.isFile()) -->Line_17 $$ if (dotOutput.isFile()) [ CD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_17 $$ if (dotOutput.isFile()) [ FD ]
Line_17 $$ if (dotOutput.isFile()) -->Line_18 $$ if (!result.isOK() && Platform.inDebugMode())[ CD ]
Line_18 $$ if (!result.isOK() && Platform.inDebugMode())-->Line_18 $$ if (!result.isOK() && Platform.inDebugMode())[ CD ]
Line_16 $$ IStatus result = runDot(format, dimension, dotInput, dotOutput)-->Line_18 $$ if (!result.isOK() && Platform.inDebugMode())[ FD ]
Line_18 $$ if (!result.isOK() && Platform.inDebugMode())-->Line_18 $$ LogUtils.log(status)[ CD ]
Line_3 $$ MultiStatus status = new MultiStatus(GraphVizActivator.ID, 0, "Errors occurred while running Graphviz", null)-->Line_18 $$ LogUtils.log(status)[ FD ]
Line_17 $$ if (dotOutput.isFile()) -->Line_19 $$ return[ CD ]
Line_3 $$ MultiStatus status = new MultiStatus(GraphVizActivator.ID, 0, "Errors occurred while running Graphviz", null)-->Line_22 $$ status.add(new Status(IStatus.ERROR, GraphVizActivator.ID, "", e))[ FD ]
Line_4 $$ File dotInput = null, dotOutput = outputLocation.toFile()-->Line_24 $$ dotInput.delete()[ FD ]
Line_7 $$ dotInput = File.createTempFile(TMP_FILE_PREFIX, DOT_EXTENSION)-->Line_24 $$ dotInput.delete()[ FD ]
Line_2 $$ public static void generate(final InputStream input, String format, Point dimension, IPath outputLocation) throws CoreException -->Line_25 $$ IOUtils.closeQuietly(input)[ FD ]
