Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void LoadLoginInfo() [ CD ]
Line_2 $$ private void LoadLoginInfo() -->Line_3 $$ m_PwdList.removeAllElements()[ CD ]
Line_2 $$ private void LoadLoginInfo() -->Line_4 $$ String szTemp = null[ CD ]
Line_2 $$ private void LoadLoginInfo() -->Line_5 $$ int iIndex = 0[ CD ]
Line_2 $$ private void LoadLoginInfo() -->Line_6 $$ int iSize = m_UsrList.size()[ CD ]
Line_6 $$ int iSize = m_UsrList.size()-->Line_6 $$ int iSize = m_UsrList.size()[ CD ]
Line_2 $$ private void LoadLoginInfo() -->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ CD ]
Line_2 $$ private void LoadLoginInfo() -->Line_2 $$ private void LoadLoginInfo() [ CD ]
Line_6 $$ int iSize = m_UsrList.size()-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ FD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ CD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ CD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ FD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ m_PwdList.add("")[ CD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_10 $$ char[] MD5PWD = new char[80][ CD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_11 $$ java.util.Arrays.fill(MD5PWD, (char) 0)[ CD ]
Line_10 $$ char[] MD5PWD = new char[80]-->Line_11 $$ java.util.Arrays.fill(MD5PWD, (char) 0)[ FD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_12 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1")[ CD ]
Line_12 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1")-->Line_12 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1")[ CD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_13 $$ String szPath = System.getProperty("user.home")[ CD ]
Line_13 $$ String szPath = System.getProperty("user.home")-->Line_13 $$ String szPath = System.getProperty("user.home")[ CD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_14 $$ szPath += System.getProperty("file.separator") + "MochaJournal" + System.getProperty("file.separator") + "user.dat"[ CD ]
Line_13 $$ String szPath = System.getProperty("user.home")-->Line_14 $$ szPath += System.getProperty("file.separator") + "MochaJournal" + System.getProperty("file.separator") + "user.dat"[ FD ]
Line_14 $$ szPath += System.getProperty("file.separator") + "MochaJournal" + System.getProperty("file.separator") + "user.dat"-->Line_14 $$ szPath += System.getProperty("file.separator") + "MochaJournal" + System.getProperty("file.separator") + "user.dat"[ FD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_15 $$ java.io.File file = new java.io.File(szPath)[ CD ]
Line_9 $$ if ((m_UsrList.size() > 0) && m_bSavePwd) -->Line_16 $$ if (file.exists()) [ CD ]
Line_15 $$ java.io.File file = new java.io.File(szPath)-->Line_16 $$ if (file.exists()) [ FD ]
Line_16 $$ if (file.exists()) -->Line_16 $$ if (file.exists()) [ CD ]
Line_15 $$ java.io.File file = new java.io.File(szPath)-->Line_16 $$ if (file.exists()) [ FD ]
Line_16 $$ if (file.exists()) -->Line_17 $$ java.io.FileInputStream br = new java.io.FileInputStream(file)[ CD ]
Line_16 $$ if (file.exists()) -->Line_18 $$ byte[] szEncryptPwd = null[ CD ]
Line_16 $$ if (file.exists()) -->Line_19 $$ int iLine = 0[ CD ]
Line_16 $$ if (file.exists()) -->Line_20 $$ while (br.available() > 0) [ CD ]
Line_16 $$ if (file.exists()) -->Line_16 $$ if (file.exists()) [ CD ]
Line_17 $$ java.io.FileInputStream br = new java.io.FileInputStream(file)-->Line_20 $$ while (br.available() > 0) [ FD ]
Line_20 $$ while (br.available() > 0) -->Line_21 $$ md.reset()[ CD ]
Line_12 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1")-->Line_21 $$ md.reset()[ FD ]
Line_20 $$ while (br.available() > 0) -->Line_22 $$ md.update(((String) m_UsrList.get(iLine)).getBytes())[ CD ]
Line_12 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1")-->Line_22 $$ md.update(((String) m_UsrList.get(iLine)).getBytes())[ FD ]
Line_19 $$ int iLine = 0-->Line_22 $$ md.update(((String) m_UsrList.get(iLine)).getBytes())[ FD ]
Line_20 $$ while (br.available() > 0) -->Line_23 $$ byte[] DESUSR = md.digest()[ CD ]
Line_23 $$ byte[] DESUSR = md.digest()-->Line_23 $$ byte[] DESUSR = md.digest()[ CD ]
Line_12 $$ java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-1")-->Line_23 $$ byte[] DESUSR = md.digest()[ FD ]
Line_20 $$ while (br.available() > 0) -->Line_24 $$ byte alpha = 0[ CD ]
Line_20 $$ while (br.available() > 0) -->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ CD ]
Line_20 $$ while (br.available() > 0) -->Line_20 $$ while (br.available() > 0) [ CD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ CD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ CD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ FD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ alpha += DESUSR[i2][ CD ]
Line_25 $$ alpha += DESUSR[i2]-->Line_25 $$ alpha += DESUSR[i2][ FD ]
Line_24 $$ byte alpha = 0-->Line_25 $$ alpha += DESUSR[i2][ FD ]
Line_20 $$ while (br.available() > 0) -->Line_26 $$ iSize = br.read()[ CD ]
Line_26 $$ iSize = br.read()-->Line_26 $$ iSize = br.read()[ FD ]
Line_6 $$ int iSize = m_UsrList.size()-->Line_26 $$ iSize = br.read()[ FD ]
Line_26 $$ iSize = br.read()-->Line_26 $$ iSize = br.read()[ CD ]
Line_17 $$ java.io.FileInputStream br = new java.io.FileInputStream(file)-->Line_26 $$ iSize = br.read()[ FD ]
Line_20 $$ while (br.available() > 0) -->Line_27 $$ if (iSize > 0) [ CD ]
Line_26 $$ iSize = br.read()-->Line_27 $$ if (iSize > 0) [ FD ]
Line_6 $$ int iSize = m_UsrList.size()-->Line_27 $$ if (iSize > 0) [ FD ]
Line_27 $$ if (iSize > 0) -->Line_28 $$ szEncryptPwd = new byte[iSize][ CD ]
Line_28 $$ szEncryptPwd = new byte[iSize]-->Line_28 $$ szEncryptPwd = new byte[iSize][ FD ]
Line_18 $$ byte[] szEncryptPwd = null-->Line_28 $$ szEncryptPwd = new byte[iSize][ FD ]
Line_27 $$ if (iSize > 0) -->Line_29 $$ br.read(szEncryptPwd)[ CD ]
Line_17 $$ java.io.FileInputStream br = new java.io.FileInputStream(file)-->Line_29 $$ br.read(szEncryptPwd)[ FD ]
Line_28 $$ szEncryptPwd = new byte[iSize]-->Line_29 $$ br.read(szEncryptPwd)[ FD ]
Line_18 $$ byte[] szEncryptPwd = null-->Line_29 $$ br.read(szEncryptPwd)[ FD ]
Line_27 $$ if (iSize > 0) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ CD ]
Line_27 $$ if (iSize > 0) -->Line_27 $$ if (iSize > 0) [ CD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_26 $$ iSize = br.read()-->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_6 $$ int iSize = m_UsrList.size()-->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ CD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ CD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_32 $$ int iChar = (int) szEncryptPwd[i] - (int) alpha[ CD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_33 $$ if (iChar < 0)[ CD ]
Line_32 $$ int iChar = (int) szEncryptPwd[i] - (int) alpha-->Line_33 $$ if (iChar < 0)[ FD ]
Line_33 $$ if (iChar < 0)-->Line_33 $$ iChar += 256[ CD ]
Line_32 $$ int iChar = (int) szEncryptPwd[i] - (int) alpha-->Line_33 $$ iChar += 256[ FD ]
Line_33 $$ iChar += 256-->Line_33 $$ iChar += 256[ FD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_34 $$ cPwd[i] = (char) iChar[ CD ]
Line_27 $$ if (iSize > 0) -->Line_36 $$ m_PwdList.setElementAt(new String(cPwd), iLine)[ CD ]
Line_19 $$ int iLine = 0-->Line_36 $$ m_PwdList.setElementAt(new String(cPwd), iLine)[ FD ]
Line_20 $$ while (br.available() > 0) -->Line_38 $$ iLine++[ CD ]
Line_19 $$ int iLine = 0-->Line_38 $$ iLine++[ FD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ FD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ FD ]
Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")-->Line_7 $$ for (int i = 0; i < iSize; i++) m_PwdList.add("")[ FD ]
Line_26 $$ iSize = br.read()-->Line_27 $$ if (iSize > 0) [ FD ]
Line_28 $$ szEncryptPwd = new byte[iSize]-->Line_29 $$ br.read(szEncryptPwd)[ FD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ FD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ FD ]
Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2]-->Line_25 $$ for (int i2 = 0; i2 < DESUSR.length; i2++) alpha += DESUSR[i2][ FD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_31 $$ for (int i = 0; i < iSize; i++) -->Line_31 $$ for (int i = 0; i < iSize; i++) [ FD ]
Line_32 $$ int iChar = (int) szEncryptPwd[i] - (int) alpha-->Line_33 $$ if (iChar < 0)[ FD ]
Line_33 $$ iChar += 256-->Line_33 $$ if (iChar < 0)[ FD ]
