Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException [ CD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_3 $$ res.setContentType(contentType)[ CD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_3 $$ res.setContentType(contentType)[ FD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_4 $$ final Object r[ CD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) [ CD ]
Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) -->Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) [ CD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) [ FD ]
Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) -->Line_6 $$ HttpRpcServer.HttpRpcOutput output = (HttpRpcServer.HttpRpcOutput) bean[ CD ]
Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) -->Line_7 $$ r = output.getResult()[ CD ]
Line_4 $$ final Object r-->Line_7 $$ r = output.getResult()[ FD ]
Line_7 $$ r = output.getResult()-->Line_7 $$ r = output.getResult()[ FD ]
Line_7 $$ r = output.getResult()-->Line_7 $$ r = output.getResult()[ CD ]
Line_6 $$ HttpRpcServer.HttpRpcOutput output = (HttpRpcServer.HttpRpcOutput) bean-->Line_7 $$ r = output.getResult()[ FD ]
Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) -->Line_8 $$ r = bean[ CD ]
Line_4 $$ final Object r-->Line_8 $$ r = bean[ FD ]
Line_7 $$ r = output.getResult()-->Line_8 $$ r = bean[ FD ]
Line_8 $$ r = bean-->Line_8 $$ r = bean[ FD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_8 $$ r = bean[ FD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_9 $$ if (r != null) [ CD ]
Line_4 $$ final Object r-->Line_9 $$ if (r != null) [ FD ]
Line_7 $$ r = output.getResult()-->Line_9 $$ if (r != null) [ FD ]
Line_8 $$ r = bean-->Line_9 $$ if (r != null) [ FD ]
Line_9 $$ if (r != null) -->Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) [ CD ]
Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) -->Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) [ CD ]
Line_4 $$ final Object r-->Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) [ FD ]
Line_7 $$ r = output.getResult()-->Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) [ FD ]
Line_8 $$ r = bean-->Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) [ FD ]
Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) -->Line_11 $$ File file = (File) r[ CD ]
Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) -->Line_12 $$ InputStream in = null[ CD ]
Line_12 $$ InputStream in = null-->Line_14 $$ in = new FileInputStream(file)[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_14 $$ in = new FileInputStream(file)[ FD ]
Line_12 $$ InputStream in = null-->Line_15 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_15 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_15 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_12 $$ InputStream in = null-->Line_17 $$ if (in != null)[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_17 $$ if (in != null)[ FD ]
Line_17 $$ if (in != null)-->Line_17 $$ in.close()[ CD ]
Line_12 $$ InputStream in = null-->Line_17 $$ in.close()[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_17 $$ in.close()[ FD ]
Line_10 $$ if (File.class.isAssignableFrom(r.getClass())) -->Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [ CD ]
Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) -->Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [ CD ]
Line_4 $$ final Object r-->Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [ FD ]
Line_7 $$ r = output.getResult()-->Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [ FD ]
Line_8 $$ r = bean-->Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [ FD ]
Line_12 $$ InputStream in = null-->Line_22 $$ in = (InputStream) r[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_22 $$ in = (InputStream) r[ FD ]
Line_22 $$ in = (InputStream) r-->Line_22 $$ in = (InputStream) r[ FD ]
Line_12 $$ InputStream in = null-->Line_23 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_23 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_22 $$ in = (InputStream) r-->Line_23 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_23 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_12 $$ InputStream in = null-->Line_25 $$ if (in != null)[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_25 $$ if (in != null)[ FD ]
Line_22 $$ in = (InputStream) r-->Line_25 $$ if (in != null)[ FD ]
Line_25 $$ if (in != null)-->Line_25 $$ in.close()[ CD ]
Line_12 $$ InputStream in = null-->Line_25 $$ in.close()[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_25 $$ in.close()[ FD ]
Line_22 $$ in = (InputStream) r-->Line_25 $$ in.close()[ FD ]
Line_19 $$ if (InputStream.class.isAssignableFrom(r.getClass())) -->Line_27 $$ if (XFile.class.isAssignableFrom(r.getClass())) [ CD ]
Line_27 $$ if (XFile.class.isAssignableFrom(r.getClass())) -->Line_27 $$ if (XFile.class.isAssignableFrom(r.getClass())) [ CD ]
Line_4 $$ final Object r-->Line_27 $$ if (XFile.class.isAssignableFrom(r.getClass())) [ FD ]
Line_7 $$ r = output.getResult()-->Line_27 $$ if (XFile.class.isAssignableFrom(r.getClass())) [ FD ]
Line_8 $$ r = bean-->Line_27 $$ if (XFile.class.isAssignableFrom(r.getClass())) [ FD ]
Line_12 $$ InputStream in = null-->Line_31 $$ in = new XFileInputStream(file)[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_31 $$ in = new XFileInputStream(file)[ FD ]
Line_22 $$ in = (InputStream) r-->Line_31 $$ in = new XFileInputStream(file)[ FD ]
Line_31 $$ in = new XFileInputStream(file)-->Line_31 $$ in = new XFileInputStream(file)[ FD ]
Line_12 $$ InputStream in = null-->Line_32 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_32 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_22 $$ in = (InputStream) r-->Line_32 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_31 $$ in = new XFileInputStream(file)-->Line_32 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_32 $$ IOUtils.copy(in, res.getOutputStream())[ FD ]
Line_12 $$ InputStream in = null-->Line_34 $$ if (in != null)[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_34 $$ if (in != null)[ FD ]
Line_22 $$ in = (InputStream) r-->Line_34 $$ if (in != null)[ FD ]
Line_31 $$ in = new XFileInputStream(file)-->Line_34 $$ if (in != null)[ FD ]
Line_34 $$ if (in != null)-->Line_34 $$ in.close()[ CD ]
Line_12 $$ InputStream in = null-->Line_34 $$ in.close()[ FD ]
Line_14 $$ in = new FileInputStream(file)-->Line_34 $$ in.close()[ FD ]
Line_22 $$ in = (InputStream) r-->Line_34 $$ in.close()[ FD ]
Line_31 $$ in = new XFileInputStream(file)-->Line_34 $$ in.close()[ FD ]
Line_9 $$ if (r != null) -->Line_37 $$ res.getOutputStream().flush()[ CD ]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException -->Line_37 $$ res.getOutputStream().flush()[ FD ]
