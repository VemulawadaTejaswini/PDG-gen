Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyNIO(File in, File out) throws IOException [ CD ]
Line_2 $$ public void copyNIO(File in, File out) throws IOException -->Line_3 $$ FileInputStream inStream = null[ CD ]
Line_2 $$ public void copyNIO(File in, File out) throws IOException -->Line_4 $$ FileOutputStream outStream = null[ CD ]
Line_2 $$ public void copyNIO(File in, File out) throws IOException -->Line_5 $$ FileChannel sourceChannel = null[ CD ]
Line_2 $$ public void copyNIO(File in, File out) throws IOException -->Line_6 $$ FileChannel destinationChannel = null[ CD ]
Line_3 $$ FileInputStream inStream = null-->Line_8 $$ inStream = new FileInputStream(in)[ FD ]
Line_8 $$ inStream = new FileInputStream(in)-->Line_8 $$ inStream = new FileInputStream(in)[ FD ]
Line_4 $$ FileOutputStream outStream = null-->Line_9 $$ outStream = new FileOutputStream(out)[ FD ]
Line_9 $$ outStream = new FileOutputStream(out)-->Line_9 $$ outStream = new FileOutputStream(out)[ FD ]
Line_5 $$ FileChannel sourceChannel = null-->Line_10 $$ sourceChannel = inStream.getChannel()[ FD ]
Line_10 $$ sourceChannel = inStream.getChannel()-->Line_10 $$ sourceChannel = inStream.getChannel()[ FD ]
Line_10 $$ sourceChannel = inStream.getChannel()-->Line_10 $$ sourceChannel = inStream.getChannel()[ CD ]
Line_3 $$ FileInputStream inStream = null-->Line_10 $$ sourceChannel = inStream.getChannel()[ FD ]
Line_8 $$ inStream = new FileInputStream(in)-->Line_10 $$ sourceChannel = inStream.getChannel()[ FD ]
Line_6 $$ FileChannel destinationChannel = null-->Line_11 $$ destinationChannel = outStream.getChannel()[ FD ]
Line_11 $$ destinationChannel = outStream.getChannel()-->Line_11 $$ destinationChannel = outStream.getChannel()[ FD ]
Line_11 $$ destinationChannel = outStream.getChannel()-->Line_11 $$ destinationChannel = outStream.getChannel()[ CD ]
Line_4 $$ FileOutputStream outStream = null-->Line_11 $$ destinationChannel = outStream.getChannel()[ FD ]
Line_9 $$ outStream = new FileOutputStream(out)-->Line_11 $$ destinationChannel = outStream.getChannel()[ FD ]
Line_6 $$ FileChannel destinationChannel = null-->Line_12 $$ destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size())[ FD ]
Line_11 $$ destinationChannel = outStream.getChannel()-->Line_12 $$ destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size())[ FD ]
Line_5 $$ FileChannel sourceChannel = null-->Line_12 $$ destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size())[ FD ]
Line_10 $$ sourceChannel = inStream.getChannel()-->Line_12 $$ destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size())[ FD ]
Line_5 $$ FileChannel sourceChannel = null-->Line_12 $$ destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size())[ FD ]
Line_10 $$ sourceChannel = inStream.getChannel()-->Line_12 $$ destinationChannel.transferFrom(sourceChannel, 0, sourceChannel.size())[ FD ]
Line_5 $$ FileChannel sourceChannel = null-->Line_14 $$ if (sourceChannel != null)[ FD ]
Line_10 $$ sourceChannel = inStream.getChannel()-->Line_14 $$ if (sourceChannel != null)[ FD ]
Line_14 $$ if (sourceChannel != null)-->Line_14 $$ sourceChannel.close()[ CD ]
Line_5 $$ FileChannel sourceChannel = null-->Line_14 $$ sourceChannel.close()[ FD ]
Line_10 $$ sourceChannel = inStream.getChannel()-->Line_14 $$ sourceChannel.close()[ FD ]
Line_6 $$ FileChannel destinationChannel = null-->Line_15 $$ if (destinationChannel != null)[ FD ]
Line_11 $$ destinationChannel = outStream.getChannel()-->Line_15 $$ if (destinationChannel != null)[ FD ]
Line_15 $$ if (destinationChannel != null)-->Line_15 $$ destinationChannel.close()[ CD ]
Line_6 $$ FileChannel destinationChannel = null-->Line_15 $$ destinationChannel.close()[ FD ]
Line_11 $$ destinationChannel = outStream.getChannel()-->Line_15 $$ destinationChannel.close()[ FD ]
Line_3 $$ FileInputStream inStream = null-->Line_16 $$ if (inStream != null)[ FD ]
Line_8 $$ inStream = new FileInputStream(in)-->Line_16 $$ if (inStream != null)[ FD ]
Line_16 $$ if (inStream != null)-->Line_16 $$ inStream.close()[ CD ]
Line_3 $$ FileInputStream inStream = null-->Line_16 $$ inStream.close()[ FD ]
Line_8 $$ inStream = new FileInputStream(in)-->Line_16 $$ inStream.close()[ FD ]
Line_4 $$ FileOutputStream outStream = null-->Line_17 $$ if (outStream != null)[ FD ]
Line_9 $$ outStream = new FileOutputStream(out)-->Line_17 $$ if (outStream != null)[ FD ]
Line_17 $$ if (outStream != null)-->Line_17 $$ outStream.close()[ CD ]
Line_4 $$ FileOutputStream outStream = null-->Line_17 $$ outStream.close()[ FD ]
Line_9 $$ outStream = new FileOutputStream(out)-->Line_17 $$ outStream.close()[ FD ]
