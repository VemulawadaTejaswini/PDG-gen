Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute() throws MojoExecutionException, MojoFailureException [ CD ]
Line_6 $$ if (!destination.exists()) -->Line_6 $$ if (!destination.exists()) [ CD ]
Line_6 $$ if (!destination.exists()) -->Line_6 $$ if (!destination.exists()) [ CD ]
Line_5 $$ File destination = new File(this.getBuildDir(), "web.xml")-->Line_6 $$ if (!destination.exists()) [ FD ]
Line_6 $$ if (!destination.exists()) -->Line_7 $$ destination.getParentFile().mkdirs()[ CD ]
Line_5 $$ File destination = new File(this.getBuildDir(), "web.xml")-->Line_7 $$ destination.getParentFile().mkdirs()[ FD ]
Line_6 $$ if (!destination.exists()) -->Line_8 $$ destination.createNewFile()[ CD ]
Line_5 $$ File destination = new File(this.getBuildDir(), "web.xml")-->Line_8 $$ destination.createNewFile()[ FD ]
Line_5 $$ File destination = new File(this.getBuildDir(), "web.xml")-->Line_10 $$ FileIOUtils.copyFile(this.getWebXml(), destination)[ FD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_12 $$ File moduleFile = null[ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) [ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ CD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) [ CD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) [ CD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")[ CD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")[ FD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_15 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ CD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_15 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ FD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_16 $$ if (check.exists()) [ CD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_16 $$ if (check.exists()) [ FD ]
Line_16 $$ if (check.exists()) -->Line_16 $$ if (check.exists()) [ CD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_16 $$ if (check.exists()) [ FD ]
Line_16 $$ if (check.exists()) -->Line_17 $$ moduleFile = check[ CD ]
Line_17 $$ moduleFile = check-->Line_17 $$ moduleFile = check[ FD ]
Line_12 $$ File moduleFile = null-->Line_17 $$ moduleFile = check[ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_17 $$ moduleFile = check[ FD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) [ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ CD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) [ CD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) [ FD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) [ CD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) [ CD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_21 $$ Resource r = (Resource) it.next()[ CD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_21 $$ Resource r = (Resource) it.next()[ FD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_21 $$ Resource r = (Resource) it.next()[ FD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")[ CD ]
Line_21 $$ Resource r = (Resource) it.next()-->Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")[ FD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_23 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ CD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_23 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_23 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ FD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_24 $$ if (check.exists()) [ CD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_24 $$ if (check.exists()) [ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_24 $$ if (check.exists()) [ FD ]
Line_24 $$ if (check.exists()) -->Line_24 $$ if (check.exists()) [ CD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_24 $$ if (check.exists()) [ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_24 $$ if (check.exists()) [ FD ]
Line_24 $$ if (check.exists()) -->Line_25 $$ moduleFile = check[ CD ]
Line_25 $$ moduleFile = check-->Line_25 $$ moduleFile = check[ FD ]
Line_17 $$ moduleFile = check-->Line_25 $$ moduleFile = check[ FD ]
Line_12 $$ File moduleFile = null-->Line_25 $$ moduleFile = check[ FD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_25 $$ moduleFile = check[ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_25 $$ moduleFile = check[ FD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_28 $$ ClassLoader loader = this.fixThreadClasspath()[ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_29 $$ if (moduleFile == null) [ CD ]
Line_25 $$ moduleFile = check-->Line_29 $$ if (moduleFile == null) [ FD ]
Line_17 $$ moduleFile = check-->Line_29 $$ if (moduleFile == null) [ FD ]
Line_12 $$ File moduleFile = null-->Line_29 $$ if (moduleFile == null) [ FD ]
Line_34 $$ if (is != null) -->Line_37 $$ FileIOUtils.copyStream(is, fos)[ CD ]
Line_34 $$ if (is != null) -->Line_38 $$ moduleFile = temp[ CD ]
Line_25 $$ moduleFile = check-->Line_38 $$ moduleFile = temp[ FD ]
Line_17 $$ moduleFile = check-->Line_38 $$ moduleFile = temp[ FD ]
Line_12 $$ File moduleFile = null-->Line_38 $$ moduleFile = temp[ FD ]
Line_38 $$ moduleFile = temp-->Line_38 $$ moduleFile = temp[ FD ]
Line_25 $$ moduleFile = check-->Line_46 $$ if (moduleFile != null) [ FD ]
Line_17 $$ moduleFile = check-->Line_46 $$ if (moduleFile != null) [ FD ]
Line_12 $$ File moduleFile = null-->Line_46 $$ if (moduleFile != null) [ FD ]
Line_38 $$ moduleFile = temp-->Line_46 $$ if (moduleFile != null) [ FD ]
Line_46 $$ if (moduleFile != null) -->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ CD ]
Line_25 $$ moduleFile = check-->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ FD ]
Line_17 $$ moduleFile = check-->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ FD ]
Line_12 $$ File moduleFile = null-->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ FD ]
Line_38 $$ moduleFile = temp-->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ FD ]
Line_5 $$ File destination = new File(this.getBuildDir(), "web.xml")-->Line_48 $$ processor = new GwtWebInfProcessor(this.getCompileTarget()[i], moduleFile, destination.getAbsolutePath(), destination.getAbsolutePath(), this.isWebXmlServletPathAsIs())[ FD ]
Line_5 $$ File destination = new File(this.getBuildDir(), "web.xml")-->Line_48 $$ processor = new GwtWebInfProcessor(this.getCompileTarget()[i], moduleFile, destination.getAbsolutePath(), destination.getAbsolutePath(), this.isWebXmlServletPathAsIs())[ FD ]
Line_46 $$ if (moduleFile != null) -->Line_49 $$ processor.process()[ CD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) -->Line_11 $$ for (int i = 0; i < this.getCompileTarget().length; i++) [ FD ]
Line_12 $$ File moduleFile = null-->Line_29 $$ if (moduleFile == null) [ FD ]
Line_38 $$ moduleFile = temp-->Line_29 $$ if (moduleFile == null) [ FD ]
Line_12 $$ File moduleFile = null-->Line_46 $$ if (moduleFile != null) [ FD ]
Line_38 $$ moduleFile = temp-->Line_46 $$ if (moduleFile != null) [ FD ]
Line_12 $$ File moduleFile = null-->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ FD ]
Line_38 $$ moduleFile = temp-->Line_47 $$ getLog().info("Module file: " + moduleFile.getAbsolutePath())[ FD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) [ FD ]
Line_13 $$ for (Iterator it = this.getProject().getCompileSourceRoots().iterator(); it.hasNext() && moduleFile == null; ) -->Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")[ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_15 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_16 $$ if (check.exists()) [ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_16 $$ if (check.exists()) [ FD ]
Line_14 $$ File check = new File(it.next().toString() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_17 $$ moduleFile = check[ FD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) [ FD ]
Line_20 $$ for (Iterator it = this.getProject().getResources().iterator(); it.hasNext(); ) -->Line_21 $$ Resource r = (Resource) it.next()[ FD ]
Line_21 $$ Resource r = (Resource) it.next()-->Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")[ FD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_23 $$ getLog().debug("Looking for file: " + check.getAbsolutePath())[ FD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_24 $$ if (check.exists()) [ FD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_24 $$ if (check.exists()) [ FD ]
Line_22 $$ File check = new File(r.getDirectory() + "/" + this.getCompileTarget()[i].replace('.', '/') + ".gwt.xml")-->Line_25 $$ moduleFile = check[ FD ]
