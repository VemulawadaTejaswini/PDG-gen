Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public File nextEntry() [ CD ]
Line_4 $$ while (hasNext()) -->Line_4 $$ while (hasNext()) [ CD ]
Line_4 $$ while (hasNext()) -->Line_5 $$ String name = waitingArchEntry.getName()[ CD ]
Line_5 $$ String name = waitingArchEntry.getName()-->Line_5 $$ String name = waitingArchEntry.getName()[ CD ]
Line_4 $$ while (hasNext()) -->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ CD ]
Line_5 $$ String name = waitingArchEntry.getName()-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_6 $$ name = name.substring(name.indexOf("/") + 1)-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_6 $$ name = name.substring(name.indexOf("/") + 1)-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ CD ]
Line_5 $$ String name = waitingArchEntry.getName()-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_6 $$ name = name.substring(name.indexOf("/") + 1)-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_5 $$ String name = waitingArchEntry.getName()-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_6 $$ name = name.substring(name.indexOf("/") + 1)-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_4 $$ while (hasNext()) -->Line_7 $$ File file = new File(targetDir.getAbsolutePath() + "/" + name)[ CD ]
Line_4 $$ while (hasNext()) -->Line_8 $$ if (waitingArchEntry.isDirectory()) [ CD ]
Line_8 $$ if (waitingArchEntry.isDirectory()) -->Line_8 $$ if (waitingArchEntry.isDirectory()) [ CD ]
Line_8 $$ if (waitingArchEntry.isDirectory()) -->Line_9 $$ file.mkdirs()[ CD ]
Line_7 $$ File file = new File(targetDir.getAbsolutePath() + "/" + name)-->Line_9 $$ file.mkdirs()[ FD ]
Line_8 $$ if (waitingArchEntry.isDirectory()) -->Line_10 $$ waitingArchEntry = ais.getNextEntry()[ CD ]
Line_8 $$ if (waitingArchEntry.isDirectory()) -->Line_12 $$ OutputStream os = new FileOutputStream(file)[ CD ]
Line_12 $$ OutputStream os = new FileOutputStream(file)-->Line_14 $$ IOUtils.copy(ais, os)[ FD ]
Line_12 $$ OutputStream os = new FileOutputStream(file)-->Line_16 $$ IOUtils.closeQuietly(os)[ FD ]
Line_8 $$ if (waitingArchEntry.isDirectory()) -->Line_18 $$ return file[ CD ]
Line_2 $$ public File nextEntry() -->Line_24 $$ return null[ CD ]
Line_5 $$ String name = waitingArchEntry.getName()-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_6 $$ name = name.substring(name.indexOf("/") + 1)-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_5 $$ String name = waitingArchEntry.getName()-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_6 $$ name = name.substring(name.indexOf("/") + 1)-->Line_6 $$ name = name.substring(name.indexOf("/") + 1)[ FD ]
Line_7 $$ File file = new File(targetDir.getAbsolutePath() + "/" + name)-->Line_9 $$ file.mkdirs()[ FD ]
Line_12 $$ OutputStream os = new FileOutputStream(file)-->Line_14 $$ IOUtils.copy(ais, os)[ FD ]
Line_12 $$ OutputStream os = new FileOutputStream(file)-->Line_16 $$ IOUtils.closeQuietly(os)[ FD ]
