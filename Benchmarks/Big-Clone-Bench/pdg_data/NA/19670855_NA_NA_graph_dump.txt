Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private synchronized void configure() [ CD ]
Line_2 $$ private synchronized void configure() -->Line_3 $$ final Map res = new HashMap()[ CD ]
Line_5 $$ final Enumeration resources = getConfigResources()-->Line_5 $$ final Enumeration resources = getConfigResources()[ CD ]
Line_6 $$ SAXParser saxParser = SAXParserFactory.newInstance().newSAXParser()-->Line_6 $$ SAXParser saxParser = SAXParserFactory.newInstance().newSAXParser()[ CD ]
Line_7 $$ while (resources.hasMoreElements()) -->Line_7 $$ while (resources.hasMoreElements()) [ CD ]
Line_5 $$ final Enumeration resources = getConfigResources()-->Line_7 $$ while (resources.hasMoreElements()) [ FD ]
Line_7 $$ while (resources.hasMoreElements()) -->Line_8 $$ final URL url = (URL) resources.nextElement()[ CD ]
Line_5 $$ final Enumeration resources = getConfigResources()-->Line_8 $$ final URL url = (URL) resources.nextElement()[ FD ]
Line_7 $$ while (resources.hasMoreElements()) -->Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() [ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_13 $$ if ("group".equals(qName)) [ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_13 $$ if ("group".equals(qName)) [ FD ]
Line_13 $$ if ("group".equals(qName)) -->Line_13 $$ if ("group".equals(qName)) [ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_13 $$ if ("group".equals(qName)) [ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_14 $$ group = new Group(attributes.getValue("name"))[ FD ]
Line_13 $$ if ("group".equals(qName)) -->Line_15 $$ String minimizeJs = attributes.getValue("minimize")[ CD ]
Line_15 $$ String minimizeJs = attributes.getValue("minimize")-->Line_15 $$ String minimizeJs = attributes.getValue("minimize")[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_15 $$ String minimizeJs = attributes.getValue("minimize")[ FD ]
Line_13 $$ if ("group".equals(qName)) -->Line_16 $$ String minimizeCss = attributes.getValue("minimizeCss")[ CD ]
Line_16 $$ String minimizeCss = attributes.getValue("minimizeCss")-->Line_16 $$ String minimizeCss = attributes.getValue("minimizeCss")[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_16 $$ String minimizeCss = attributes.getValue("minimizeCss")[ FD ]
Line_13 $$ if ("group".equals(qName)) -->Line_17 $$ group.setMinimize(!"false".equals(minimizeJs))[ CD ]
Line_17 $$ group.setMinimize(!"false".equals(minimizeJs))-->Line_17 $$ group.setMinimize(!"false".equals(minimizeJs))[ CD ]
Line_15 $$ String minimizeJs = attributes.getValue("minimize")-->Line_17 $$ group.setMinimize(!"false".equals(minimizeJs))[ FD ]
Line_13 $$ if ("group".equals(qName)) -->Line_18 $$ group.setMinimizeCss("true".equals(minimizeCss))[ CD ]
Line_16 $$ String minimizeCss = attributes.getValue("minimizeCss")-->Line_18 $$ group.setMinimizeCss("true".equals(minimizeCss))[ FD ]
Line_13 $$ if ("group".equals(qName)) -->Line_19 $$ if ("js".equals(qName) || "css".equals(qName) || "group-ref".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_19 $$ if ("js".equals(qName) || "css".equals(qName) || "group-ref".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_19 $$ if ("js".equals(qName) || "css".equals(qName) || "group-ref".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_19 $$ if ("js".equals(qName) || "css".equals(qName) || "group-ref".equals(qName))[ FD ]
Line_19 $$ if ("js".equals(qName) || "css".equals(qName) || "group-ref".equals(qName))-->Line_19 $$ tagContent.setLength(0)[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_22 $$ tagContent.append(ch, start, length)[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_22 $$ tagContent.append(ch, start, length)[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_22 $$ tagContent.append(ch, start, length)[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group".equals(qName))[ FD ]
Line_25 $$ if ("group".equals(qName))-->Line_25 $$ if ("group".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group".equals(qName))[ FD ]
Line_25 $$ if ("group".equals(qName))-->Line_25 $$ res.put(group.getName(), group)[ CD ]
Line_3 $$ final Map res = new HashMap()-->Line_25 $$ res.put(group.getName(), group)[ FD ]
Line_25 $$ if ("group".equals(qName))-->Line_25 $$ if ("js".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("js".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("js".equals(qName))[ FD ]
Line_25 $$ if ("js".equals(qName))-->Line_25 $$ if ("js".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("js".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("js".equals(qName))[ FD ]
Line_25 $$ if ("js".equals(qName))-->Line_25 $$ group.getJsNames().add(tagContent.toString())[ CD ]
Line_25 $$ if ("js".equals(qName))-->Line_25 $$ if ("css".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("css".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("css".equals(qName))[ FD ]
Line_25 $$ if ("css".equals(qName))-->Line_25 $$ if ("css".equals(qName))[ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("css".equals(qName))[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("css".equals(qName))[ FD ]
Line_25 $$ if ("css".equals(qName))-->Line_25 $$ group.getCssNames().add(tagContent.toString())[ CD ]
Line_25 $$ if ("css".equals(qName))-->Line_25 $$ if ("group-ref".equals(qName)) [ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group-ref".equals(qName)) [ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group-ref".equals(qName)) [ FD ]
Line_25 $$ if ("group-ref".equals(qName)) -->Line_25 $$ if ("group-ref".equals(qName)) [ CD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group-ref".equals(qName)) [ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_25 $$ if ("group-ref".equals(qName)) [ FD ]
Line_25 $$ if ("group-ref".equals(qName)) -->Line_26 $$ String name = tagContent.toString()[ CD ]
Line_26 $$ String name = tagContent.toString()-->Line_26 $$ String name = tagContent.toString()[ CD ]
Line_25 $$ if ("group-ref".equals(qName)) -->Line_27 $$ Group subGroup = (Group) res.get(name)[ CD ]
Line_3 $$ final Map res = new HashMap()-->Line_27 $$ Group subGroup = (Group) res.get(name)[ FD ]
Line_26 $$ String name = tagContent.toString()-->Line_27 $$ Group subGroup = (Group) res.get(name)[ FD ]
Line_25 $$ if ("group-ref".equals(qName)) -->Line_28 $$ if (subGroup == null)[ CD ]
Line_27 $$ Group subGroup = (Group) res.get(name)-->Line_28 $$ if (subGroup == null)[ FD ]
Line_8 $$ final URL url = (URL) resources.nextElement()-->Line_28 $$ throw new RuntimeException("Error parsing " + url.toString() + " <group-ref>" + name + "</group-ref> unknown")[ FD ]
Line_25 $$ if ("group-ref".equals(qName)) -->Line_29 $$ group.getSubgroups().add(subGroup)[ CD ]
Line_27 $$ Group subGroup = (Group) res.get(name)-->Line_29 $$ group.getSubgroups().add(subGroup)[ FD ]
Line_6 $$ SAXParser saxParser = SAXParserFactory.newInstance().newSAXParser()-->Line_34 $$ saxParser.parse(url.openStream(), saxHandler)[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_34 $$ saxParser.parse(url.openStream(), saxHandler)[ FD ]
Line_8 $$ final URL url = (URL) resources.nextElement()-->Line_34 $$ saxParser.parse(url.openStream(), saxHandler)[ FD ]
Line_9 $$ DefaultHandler saxHandler = new DefaultHandler() -->Line_34 $$ saxParser.parse(url.openStream(), saxHandler)[ FD ]
Line_8 $$ final URL url = (URL) resources.nextElement()-->Line_34 $$ saxParser.parse(url.openStream(), saxHandler)[ FD ]
