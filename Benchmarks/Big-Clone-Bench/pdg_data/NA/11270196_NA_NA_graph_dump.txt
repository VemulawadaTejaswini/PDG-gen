Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encipherAMessage(String message) [ CD ]
Line_4 $$ MessageDigest sha1 = MessageDigest.getInstance(java.util.ResourceBundle.getBundle("com/jjcp/resources/Strings").getString("SHA1"))-->Line_4 $$ MessageDigest sha1 = MessageDigest.getInstance(java.util.ResourceBundle.getBundle("com/jjcp/resources/Strings").getString("SHA1"))[ CD ]
Line_4 $$ MessageDigest sha1 = MessageDigest.getInstance(java.util.ResourceBundle.getBundle("com/jjcp/resources/Strings").getString("SHA1"))-->Line_5 $$ sha1.update(message.getBytes(java.util.ResourceBundle.getBundle("com/jjcp/resources/Strings").getString("UTF-16LE")))[ FD ]
Line_2 $$ public static String encipherAMessage(String message) -->Line_5 $$ sha1.update(message.getBytes(java.util.ResourceBundle.getBundle("com/jjcp/resources/Strings").getString("UTF-16LE")))[ FD ]
Line_6 $$ byte[] digest = sha1.digest()-->Line_6 $$ byte[] digest = sha1.digest()[ CD ]
Line_4 $$ MessageDigest sha1 = MessageDigest.getInstance(java.util.ResourceBundle.getBundle("com/jjcp/resources/Strings").getString("SHA1"))-->Line_6 $$ byte[] digest = sha1.digest()[ FD ]
Line_8 $$ String cipherTextB64 = base64encoder.encode(digest)-->Line_8 $$ String cipherTextB64 = base64encoder.encode(digest)[ CD ]
Line_7 $$ BASE64Encoder base64encoder = new BASE64Encoder()-->Line_8 $$ String cipherTextB64 = base64encoder.encode(digest)[ FD ]
Line_6 $$ byte[] digest = sha1.digest()-->Line_8 $$ String cipherTextB64 = base64encoder.encode(digest)[ FD ]
Line_2 $$ public static String encipherAMessage(String message) -->Line_15 $$ return ""[ CD ]
