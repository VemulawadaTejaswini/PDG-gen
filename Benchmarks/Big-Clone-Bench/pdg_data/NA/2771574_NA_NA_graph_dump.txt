Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected IStatus run(IProgressMonitor monitor) [ CD ]
Line_8 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) -->Line_8 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) [ CD ]
Line_8 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) -->Line_22 $$ readXML()[ CD ]
Line_8 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) -->Line_23 $$ if (htmlMessage.contains("error")) [ CD ]
Line_23 $$ if (htmlMessage.contains("error")) -->Line_23 $$ if (htmlMessage.contains("error")) [ CD ]
Line_25 $$ PrintWriter pw = new PrintWriter(getAppPath() + "/register.ini")-->Line_26 $$ pw.write("")[ FD ]
Line_25 $$ PrintWriter pw = new PrintWriter(getAppPath() + "/register.ini")-->Line_27 $$ pw.close()[ FD ]
Line_23 $$ if (htmlMessage.contains("error")) -->Line_31 $$ setProperty(IProgressConstants.ICON_PROPERTY, IconImg.liveUpIco)[ CD ]
Line_23 $$ if (htmlMessage.contains("error")) -->Line_32 $$ if (isModal(this)) [ CD ]
Line_32 $$ if (isModal(this)) -->Line_32 $$ if (isModal(this)) [ CD ]
Line_32 $$ if (isModal(this)) -->Line_33 $$ showResults2()[ CD ]
Line_32 $$ if (isModal(this)) -->Line_35 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_32 $$ if (isModal(this)) -->Line_36 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction2())[ CD ]
Line_23 $$ if (htmlMessage.contains("error")) -->Line_39 $$ if (!getDBVersion().equals(latestVersion)) [ CD ]
Line_39 $$ if (!getDBVersion().equals(latestVersion)) -->Line_39 $$ if (!getDBVersion().equals(latestVersion)) [ CD ]
Line_39 $$ if (!getDBVersion().equals(latestVersion)) -->Line_39 $$ if (!getDBVersion().equals(latestVersion)) [ CD ]
Line_46 $$ URL url = new URL(fileLoc)-->Line_47 $$ String outFile = getAppPath() + "/temp/" + getFileName(url)[ FD ]
Line_48 $$ File oFile = new File(outFile)-->Line_49 $$ oFile.delete()[ FD ]
Line_41 $$ OutputStream out = null-->Line_50 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))[ FD ]
Line_50 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_50 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_51 $$ monitor.beginTask("Connecting to NWD Server", 100)[ FD ]
Line_42 $$ HttpURLConnection conn = null-->Line_52 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_52 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_46 $$ URL url = new URL(fileLoc)-->Line_52 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_42 $$ HttpURLConnection conn = null-->Line_53 $$ conn.setConnectTimeout(20000)[ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_53 $$ conn.setConnectTimeout(20000)[ FD ]
Line_42 $$ HttpURLConnection conn = null-->Line_54 $$ conn.connect()[ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_54 $$ conn.connect()[ FD ]
Line_42 $$ HttpURLConnection conn = null-->Line_55 $$ if (conn.getResponseCode() / 100 != 2) [ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_55 $$ if (conn.getResponseCode() / 100 != 2) [ FD ]
Line_55 $$ if (conn.getResponseCode() / 100 != 2) -->Line_56 $$ System.out.println("Error: " + conn.getResponseCode())[ CD ]
Line_42 $$ HttpURLConnection conn = null-->Line_56 $$ System.out.println("Error: " + conn.getResponseCode())[ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_56 $$ System.out.println("Error: " + conn.getResponseCode())[ FD ]
Line_55 $$ if (conn.getResponseCode() / 100 != 2) -->Line_57 $$ return null[ CD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_59 $$ monitor.worked(100)[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_60 $$ monitor.done()[ FD ]
Line_44 $$ int size-->Line_61 $$ size = conn.getContentLength()[ FD ]
Line_61 $$ size = conn.getContentLength()-->Line_61 $$ size = conn.getContentLength()[ FD ]
Line_61 $$ size = conn.getContentLength()-->Line_61 $$ size = conn.getContentLength()[ CD ]
Line_42 $$ HttpURLConnection conn = null-->Line_61 $$ size = conn.getContentLength()[ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_61 $$ size = conn.getContentLength()[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_62 $$ monitor.beginTask("Download Worm Definition", size)[ FD ]
Line_44 $$ int size-->Line_62 $$ monitor.beginTask("Download Worm Definition", size)[ FD ]
Line_61 $$ size = conn.getContentLength()-->Line_62 $$ monitor.beginTask("Download Worm Definition", size)[ FD ]
Line_43 $$ InputStream in = null-->Line_63 $$ in = conn.getInputStream()[ FD ]
Line_63 $$ in = conn.getInputStream()-->Line_63 $$ in = conn.getInputStream()[ FD ]
Line_63 $$ in = conn.getInputStream()-->Line_63 $$ in = conn.getInputStream()[ CD ]
Line_42 $$ HttpURLConnection conn = null-->Line_63 $$ in = conn.getInputStream()[ FD ]
Line_52 $$ conn = (HttpURLConnection) url.openConnection()-->Line_63 $$ in = conn.getInputStream()[ FD ]
Line_68 $$ while (status) -->Line_69 $$ if (size - numWritten > 1024) [ CD ]
Line_69 $$ if (size - numWritten > 1024) -->Line_70 $$ buffer = new byte[1024][ CD ]
Line_70 $$ buffer = new byte[1024]-->Line_70 $$ buffer = new byte[1024][ FD ]
Line_64 $$ byte[] buffer-->Line_70 $$ buffer = new byte[1024][ FD ]
Line_69 $$ if (size - numWritten > 1024) -->Line_72 $$ buffer = new byte[(int) (size - numWritten)][ CD ]
Line_70 $$ buffer = new byte[1024]-->Line_72 $$ buffer = new byte[(int) (size - numWritten)][ FD ]
Line_72 $$ buffer = new byte[(int) (size - numWritten)]-->Line_72 $$ buffer = new byte[(int) (size - numWritten)][ FD ]
Line_64 $$ byte[] buffer-->Line_72 $$ buffer = new byte[(int) (size - numWritten)][ FD ]
Line_68 $$ while (status) -->Line_74 $$ int read = in.read(buffer)[ CD ]
Line_74 $$ int read = in.read(buffer)-->Line_74 $$ int read = in.read(buffer)[ CD ]
Line_43 $$ InputStream in = null-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_63 $$ in = conn.getInputStream()-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_70 $$ buffer = new byte[1024]-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_72 $$ buffer = new byte[(int) (size - numWritten)]-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_64 $$ byte[] buffer-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_68 $$ while (status) -->Line_75 $$ if (read == -1) [ CD ]
Line_74 $$ int read = in.read(buffer)-->Line_75 $$ if (read == -1) [ FD ]
Line_68 $$ while (status) -->Line_78 $$ out.write(buffer, 0, read)[ CD ]
Line_41 $$ OutputStream out = null-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_50 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_70 $$ buffer = new byte[1024]-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_72 $$ buffer = new byte[(int) (size - numWritten)]-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_64 $$ byte[] buffer-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_68 $$ while (status) -->Line_79 $$ numWritten += read[ CD ]
Line_79 $$ numWritten += read-->Line_79 $$ numWritten += read[ FD ]
Line_66 $$ long numWritten = 0-->Line_79 $$ numWritten += read[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_79 $$ numWritten += read[ FD ]
Line_68 $$ while (status) -->Line_80 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"[ CD ]
Line_80 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"-->Line_80 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"[ FD ]
Line_65 $$ String downloadedSize-->Line_80 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"[ FD ]
Line_68 $$ while (status) -->Line_81 $$ monitor.worked(read)[ CD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_81 $$ monitor.worked(read)[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_81 $$ monitor.worked(read)[ FD ]
Line_68 $$ while (status) -->Line_82 $$ monitor.subTask(downloadedSize + " of " + Integer.toString(size / 1024) + " KB")[ CD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_82 $$ monitor.subTask(downloadedSize + " of " + Integer.toString(size / 1024) + " KB")[ FD ]
Line_68 $$ while (status) -->Line_83 $$ if (size == numWritten) [ CD ]
Line_44 $$ int size-->Line_83 $$ if (size == numWritten) [ FD ]
Line_61 $$ size = conn.getContentLength()-->Line_83 $$ if (size == numWritten) [ FD ]
Line_79 $$ numWritten += read-->Line_83 $$ if (size == numWritten) [ FD ]
Line_66 $$ long numWritten = 0-->Line_83 $$ if (size == numWritten) [ FD ]
Line_83 $$ if (size == numWritten) -->Line_84 $$ status = false[ CD ]
Line_84 $$ status = false-->Line_84 $$ status = false[ FD ]
Line_67 $$ boolean status = true-->Line_84 $$ status = false[ FD ]
Line_68 $$ while (status) -->Line_86 $$ if (monitor.isCanceled())[ CD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_86 $$ if (monitor.isCanceled())[ FD ]
Line_86 $$ if (monitor.isCanceled())-->Line_86 $$ if (monitor.isCanceled())[ CD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_86 $$ if (monitor.isCanceled())[ FD ]
Line_86 $$ if (monitor.isCanceled())-->Line_86 $$ return Status.CANCEL_STATUS[ CD ]
Line_43 $$ InputStream in = null-->Line_88 $$ if (in != null) [ FD ]
Line_63 $$ in = conn.getInputStream()-->Line_88 $$ if (in != null) [ FD ]
Line_88 $$ if (in != null) -->Line_89 $$ in.close()[ CD ]
Line_43 $$ InputStream in = null-->Line_89 $$ in.close()[ FD ]
Line_63 $$ in = conn.getInputStream()-->Line_89 $$ in.close()[ FD ]
Line_41 $$ OutputStream out = null-->Line_91 $$ if (out != null) [ FD ]
Line_50 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_91 $$ if (out != null) [ FD ]
Line_91 $$ if (out != null) -->Line_92 $$ out.close()[ CD ]
Line_41 $$ OutputStream out = null-->Line_92 $$ out.close()[ FD ]
Line_50 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_92 $$ out.close()[ FD ]
Line_96 $$ Enumeration all = zFile.entries()-->Line_96 $$ Enumeration all = zFile.entries()[ CD ]
Line_95 $$ ZipFile zFile = new ZipFile(outFile)-->Line_96 $$ Enumeration all = zFile.entries()[ FD ]
Line_97 $$ while (all.hasMoreElements()) -->Line_97 $$ while (all.hasMoreElements()) [ CD ]
Line_96 $$ Enumeration all = zFile.entries()-->Line_97 $$ while (all.hasMoreElements()) [ FD ]
Line_97 $$ while (all.hasMoreElements()) -->Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()[ CD ]
Line_96 $$ Enumeration all = zFile.entries()-->Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()[ FD ]
Line_97 $$ while (all.hasMoreElements()) -->Line_99 $$ long zSize = zEntry.getSize()[ CD ]
Line_99 $$ long zSize = zEntry.getSize()-->Line_99 $$ long zSize = zEntry.getSize()[ CD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_99 $$ long zSize = zEntry.getSize()[ FD ]
Line_97 $$ while (all.hasMoreElements()) -->Line_100 $$ if (zSize > 0) [ CD ]
Line_99 $$ long zSize = zEntry.getSize()-->Line_100 $$ if (zSize > 0) [ FD ]
Line_100 $$ if (zSize > 0) -->Line_101 $$ if (zEntry.getName().endsWith("script")) [ CD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_101 $$ if (zEntry.getName().endsWith("script")) [ CD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_101 $$ if (zEntry.getName().endsWith("script")) [ FD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)[ CD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)[ CD ]
Line_95 $$ ZipFile zFile = new ZipFile(outFile)-->Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])[ CD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_104 $$ int ch[ CD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_105 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_101 $$ if (zEntry.getName().endsWith("script")) [ CD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_105 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_104 $$ int ch-->Line_105 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_105 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_105 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_106 $$ fos.write(ch)[ CD ]
Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_106 $$ fos.write(ch)[ FD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_106 $$ fos.write(ch)[ FD ]
Line_104 $$ int ch-->Line_106 $$ fos.write(ch)[ FD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_108 $$ instream.close()[ CD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_108 $$ instream.close()[ FD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_109 $$ fos.close()[ CD ]
Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_109 $$ fos.close()[ FD ]
Line_101 $$ if (zEntry.getName().endsWith("script")) -->Line_110 $$ if (zEntry.getName().endsWith("data")) [ CD ]
Line_110 $$ if (zEntry.getName().endsWith("data")) -->Line_110 $$ if (zEntry.getName().endsWith("data")) [ CD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_110 $$ if (zEntry.getName().endsWith("data")) [ FD ]
Line_110 $$ if (zEntry.getName().endsWith("data")) -->Line_111 $$ InputStream instream = zFile.getInputStream(zEntry)[ CD ]
Line_95 $$ ZipFile zFile = new ZipFile(outFile)-->Line_111 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_111 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_110 $$ if (zEntry.getName().endsWith("data")) -->Line_114 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_110 $$ if (zEntry.getName().endsWith("data")) -->Line_110 $$ if (zEntry.getName().endsWith("data")) [ CD ]
Line_114 $$ while ((ch = instream.read()) != -1) -->Line_114 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_114 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_104 $$ int ch-->Line_114 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_114 $$ while ((ch = instream.read()) != -1) -->Line_114 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_114 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_114 $$ while ((ch = instream.read()) != -1) -->Line_115 $$ fos.write(ch)[ CD ]
Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_115 $$ fos.write(ch)[ FD ]
Line_114 $$ while ((ch = instream.read()) != -1) -->Line_115 $$ fos.write(ch)[ FD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_115 $$ fos.write(ch)[ FD ]
Line_104 $$ int ch-->Line_115 $$ fos.write(ch)[ FD ]
Line_110 $$ if (zEntry.getName().endsWith("data")) -->Line_117 $$ instream.close()[ CD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_117 $$ instream.close()[ FD ]
Line_110 $$ if (zEntry.getName().endsWith("data")) -->Line_118 $$ fos.close()[ CD ]
Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_118 $$ fos.close()[ FD ]
Line_122 $$ File xFile = new File(outFile)-->Line_123 $$ xFile.deleteOnExit()[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_128 $$ monitor.done()[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_129 $$ monitor.beginTask("Install Worm Definition", 10000)[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_130 $$ monitor.worked(2500)[ FD ]
Line_133 $$ if (!wormDB.getConn().isClosed()) -->Line_133 $$ if (!wormDB.getConn().isClosed()) [ CD ]
Line_133 $$ if (!wormDB.getConn().isClosed()) -->Line_133 $$ if (!wormDB.getConn().isClosed()) [ CD ]
Line_133 $$ if (!wormDB.getConn().isClosed()) -->Line_134 $$ shutdownDB()[ CD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_137 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_137 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_137 $$ for (int i = 0; i < 2; i++) [ FD ]
Line_139 $$ Process pid = Runtime.getRuntime().exec("cmd /c copy \"" + oldLoc[i].replace("/", "\\") + "\" \"" + newLoc[i].replace("/", "\\") + "\"/y")-->Line_139 $$ Process pid = Runtime.getRuntime().exec("cmd /c copy \"" + oldLoc[i].replace("/", "\\") + "\" \"" + newLoc[i].replace("/", "\\") + "\"/y")[ CD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_143 $$ new File(oldLoc[i]).deleteOnExit()[ CD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_145 $$ monitor.worked(2500)[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_149 $$ monitor.worked(2500)[ FD ]
Line_2 $$ protected IStatus run(IProgressMonitor monitor) -->Line_150 $$ monitor.done()[ FD ]
Line_152 $$ if (isModal(this)) -->Line_152 $$ if (isModal(this)) [ CD ]
Line_152 $$ if (isModal(this)) -->Line_153 $$ showResults()[ CD ]
Line_152 $$ if (isModal(this)) -->Line_155 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_152 $$ if (isModal(this)) -->Line_156 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction())[ CD ]
Line_160 $$ if (isModal(this)) -->Line_160 $$ if (isModal(this)) [ CD ]
Line_160 $$ if (isModal(this)) -->Line_161 $$ showResults2()[ CD ]
Line_160 $$ if (isModal(this)) -->Line_163 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_160 $$ if (isModal(this)) -->Line_164 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction2())[ CD ]
Line_174 $$ if (isModal(this)) -->Line_174 $$ if (isModal(this)) [ CD ]
Line_174 $$ if (isModal(this)) -->Line_175 $$ showResults2()[ CD ]
Line_174 $$ if (isModal(this)) -->Line_177 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_174 $$ if (isModal(this)) -->Line_178 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction2())[ CD ]
Line_39 $$ if (!getDBVersion().equals(latestVersion)) -->Line_183 $$ cancel()[ CD ]
Line_39 $$ if (!getDBVersion().equals(latestVersion)) -->Line_184 $$ setProperty(IProgressConstants.ICON_PROPERTY, IconImg.liveUpIco)[ CD ]
Line_39 $$ if (!getDBVersion().equals(latestVersion)) -->Line_185 $$ if (isModal(this)) [ CD ]
Line_185 $$ if (isModal(this)) -->Line_185 $$ if (isModal(this)) [ CD ]
Line_185 $$ if (isModal(this)) -->Line_186 $$ showResults1()[ CD ]
Line_185 $$ if (isModal(this)) -->Line_188 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_185 $$ if (isModal(this)) -->Line_189 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction1())[ CD ]
Line_201 $$ if (getValue("AUTO_UPDATE"))-->Line_201 $$ if (getValue("AUTO_UPDATE"))[ CD ]
Line_201 $$ if (getValue("AUTO_UPDATE"))-->Line_201 $$ schedule(10800000)[ CD ]
Line_70 $$ buffer = new byte[1024]-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_72 $$ buffer = new byte[(int) (size - numWritten)]-->Line_74 $$ int read = in.read(buffer)[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_75 $$ if (read == -1) [ FD ]
Line_70 $$ buffer = new byte[1024]-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_72 $$ buffer = new byte[(int) (size - numWritten)]-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_78 $$ out.write(buffer, 0, read)[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_79 $$ numWritten += read[ FD ]
Line_74 $$ int read = in.read(buffer)-->Line_81 $$ monitor.worked(read)[ FD ]
Line_79 $$ numWritten += read-->Line_83 $$ if (size == numWritten) [ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_99 $$ long zSize = zEntry.getSize()[ FD ]
Line_99 $$ long zSize = zEntry.getSize()-->Line_100 $$ if (zSize > 0) [ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_101 $$ if (zEntry.getName().endsWith("script")) [ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_108 $$ instream.close()[ FD ]
Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_109 $$ fos.close()[ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_110 $$ if (zEntry.getName().endsWith("data")) [ FD ]
Line_98 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_111 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_102 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_117 $$ instream.close()[ FD ]
Line_103 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_118 $$ fos.close()[ FD ]
Line_105 $$ while ((ch = instream.read()) != -1) -->Line_106 $$ fos.write(ch)[ FD ]
Line_114 $$ while ((ch = instream.read()) != -1) -->Line_115 $$ fos.write(ch)[ FD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_137 $$ for (int i = 0; i < 2; i++) [ FD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_137 $$ for (int i = 0; i < 2; i++) [ FD ]
Line_137 $$ for (int i = 0; i < 2; i++) -->Line_137 $$ for (int i = 0; i < 2; i++) [ FD ]
