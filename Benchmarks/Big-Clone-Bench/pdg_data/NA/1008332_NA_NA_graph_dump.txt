Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception [ CD ]
Line_2 $$ public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception -->Line_3 $$ BufferedInputStream in = null[ CD ]
Line_2 $$ public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception -->Line_4 $$ BufferedOutputStream out = null[ CD ]
Line_2 $$ public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception -->Line_5 $$ byte dataBuff[] = new byte[bufferSize][ CD ]
Line_2 $$ public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception -->Line_6 $$ File file1 = new File(sourcePath)[ CD ]
Line_2 $$ public void copyFileToFileWithPaths(String sourcePath, String destinPath) throws Exception -->Line_7 $$ if (file1.exists() && (file1.isFile())) [ CD ]
Line_6 $$ File file1 = new File(sourcePath)-->Line_7 $$ if (file1.exists() && (file1.isFile())) [ FD ]
Line_6 $$ File file1 = new File(sourcePath)-->Line_7 $$ if (file1.exists() && (file1.isFile())) [ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_8 $$ File file2 = new File(destinPath)[ CD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_9 $$ if (file2.exists()) [ CD ]
Line_8 $$ File file2 = new File(destinPath)-->Line_9 $$ if (file2.exists()) [ FD ]
Line_9 $$ if (file2.exists()) -->Line_9 $$ if (file2.exists()) [ CD ]
Line_8 $$ File file2 = new File(destinPath)-->Line_9 $$ if (file2.exists()) [ FD ]
Line_9 $$ if (file2.exists()) -->Line_10 $$ file2.delete()[ CD ]
Line_8 $$ File file2 = new File(destinPath)-->Line_10 $$ file2.delete()[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_12 $$ FileUtils.getInstance().createDirectory(file2.getParent())[ CD ]
Line_8 $$ File file2 = new File(destinPath)-->Line_12 $$ FileUtils.getInstance().createDirectory(file2.getParent())[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_13 $$ in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize)[ CD ]
Line_3 $$ BufferedInputStream in = null-->Line_13 $$ in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize)[ FD ]
Line_13 $$ in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize)-->Line_13 $$ in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize)[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)[ CD ]
Line_4 $$ BufferedOutputStream out = null-->Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)[ FD ]
Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)-->Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_15 $$ int readLen[ CD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) [ CD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_7 $$ if (file1.exists() && (file1.isFile())) [ CD ]
Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_15 $$ int readLen-->Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) [ CD ]
Line_3 $$ BufferedInputStream in = null-->Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_13 $$ in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize)-->Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_17 $$ out.write(dataBuff, 0, readLen)[ CD ]
Line_4 $$ BufferedOutputStream out = null-->Line_17 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)-->Line_17 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_17 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_15 $$ int readLen-->Line_17 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_19 $$ out.flush()[ CD ]
Line_4 $$ BufferedOutputStream out = null-->Line_19 $$ out.flush()[ FD ]
Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)-->Line_19 $$ out.flush()[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_20 $$ in.close()[ CD ]
Line_3 $$ BufferedInputStream in = null-->Line_20 $$ in.close()[ FD ]
Line_13 $$ in = new BufferedInputStream(new FileInputStream(sourcePath), bufferSize)-->Line_20 $$ in.close()[ FD ]
Line_7 $$ if (file1.exists() && (file1.isFile())) -->Line_21 $$ out.close()[ CD ]
Line_4 $$ BufferedOutputStream out = null-->Line_21 $$ out.close()[ FD ]
Line_14 $$ out = new BufferedOutputStream(new FileOutputStream(destinPath), bufferSize)-->Line_21 $$ out.close()[ FD ]
Line_16 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_17 $$ out.write(dataBuff, 0, readLen)[ FD ]
