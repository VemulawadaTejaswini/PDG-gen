Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Boolean decompress(File source, File destination) [ CD ]
Line_2 $$ public static Boolean decompress(File source, File destination) -->Line_3 $$ FileOutputStream outputStream[ CD ]
Line_2 $$ public static Boolean decompress(File source, File destination) -->Line_4 $$ ZipInputStream inputStream[ CD ]
Line_3 $$ FileOutputStream outputStream-->Line_6 $$ outputStream = null[ FD ]
Line_6 $$ outputStream = null-->Line_6 $$ outputStream = null[ FD ]
Line_4 $$ ZipInputStream inputStream-->Line_7 $$ inputStream = new ZipInputStream(new FileInputStream(source))[ FD ]
Line_7 $$ inputStream = new ZipInputStream(new FileInputStream(source))-->Line_7 $$ inputStream = new ZipInputStream(new FileInputStream(source))[ FD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) [ FD ]
Line_10 $$ ZipEntry zipEntry-->Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) [ FD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) [ CD ]
Line_4 $$ ZipInputStream inputStream-->Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) [ FD ]
Line_7 $$ inputStream = new ZipInputStream(new FileInputStream(source))-->Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) [ FD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ if (zipEntry.isDirectory())[ CD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ if (zipEntry.isDirectory())[ FD ]
Line_10 $$ ZipEntry zipEntry-->Line_12 $$ if (zipEntry.isDirectory())[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_12 $$ if (zipEntry.isDirectory())[ CD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ if (zipEntry.isDirectory())[ FD ]
Line_10 $$ ZipEntry zipEntry-->Line_12 $$ if (zipEntry.isDirectory())[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_12 $$ new File(destination, zipEntry.getName()).mkdirs()[ CD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ new File(destination, zipEntry.getName()).mkdirs()[ FD ]
Line_10 $$ ZipEntry zipEntry-->Line_12 $$ new File(destination, zipEntry.getName()).mkdirs()[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_13 $$ File fileEntry = new File(destination, zipEntry.getName())[ CD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_13 $$ File fileEntry = new File(destination, zipEntry.getName())[ FD ]
Line_10 $$ ZipEntry zipEntry-->Line_13 $$ File fileEntry = new File(destination, zipEntry.getName())[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_14 $$ fileEntry.getParentFile().mkdirs()[ CD ]
Line_13 $$ File fileEntry = new File(destination, zipEntry.getName())-->Line_14 $$ fileEntry.getParentFile().mkdirs()[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_15 $$ outputStream = new FileOutputStream(fileEntry)[ CD ]
Line_15 $$ outputStream = new FileOutputStream(fileEntry)-->Line_15 $$ outputStream = new FileOutputStream(fileEntry)[ FD ]
Line_3 $$ FileOutputStream outputStream-->Line_15 $$ outputStream = new FileOutputStream(fileEntry)[ FD ]
Line_6 $$ outputStream = null-->Line_15 $$ outputStream = new FileOutputStream(fileEntry)[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) [ CD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_12 $$ if (zipEntry.isDirectory())[ CD ]
Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_8 $$ int read-->Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) [ CD ]
Line_4 $$ ZipInputStream inputStream-->Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_7 $$ inputStream = new ZipInputStream(new FileInputStream(source))-->Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_17 $$ outputStream.write(buffer, 0, read)[ CD ]
Line_15 $$ outputStream = new FileOutputStream(fileEntry)-->Line_17 $$ outputStream.write(buffer, 0, read)[ FD ]
Line_3 $$ FileOutputStream outputStream-->Line_17 $$ outputStream.write(buffer, 0, read)[ FD ]
Line_6 $$ outputStream = null-->Line_17 $$ outputStream.write(buffer, 0, read)[ FD ]
Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_17 $$ outputStream.write(buffer, 0, read)[ FD ]
Line_8 $$ int read-->Line_17 $$ outputStream.write(buffer, 0, read)[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_19 $$ outputStream.flush()[ CD ]
Line_15 $$ outputStream = new FileOutputStream(fileEntry)-->Line_19 $$ outputStream.flush()[ FD ]
Line_3 $$ FileOutputStream outputStream-->Line_19 $$ outputStream.flush()[ FD ]
Line_6 $$ outputStream = null-->Line_19 $$ outputStream.flush()[ FD ]
Line_12 $$ if (zipEntry.isDirectory())-->Line_20 $$ outputStream.close()[ CD ]
Line_15 $$ outputStream = new FileOutputStream(fileEntry)-->Line_20 $$ outputStream.close()[ FD ]
Line_3 $$ FileOutputStream outputStream-->Line_20 $$ outputStream.close()[ FD ]
Line_6 $$ outputStream = null-->Line_20 $$ outputStream.close()[ FD ]
Line_4 $$ ZipInputStream inputStream-->Line_23 $$ inputStream.close()[ FD ]
Line_7 $$ inputStream = new ZipInputStream(new FileInputStream(source))-->Line_23 $$ inputStream.close()[ FD ]
Line_2 $$ public static Boolean decompress(File source, File destination) -->Line_27 $$ return true[ CD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ if (zipEntry.isDirectory())[ FD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ if (zipEntry.isDirectory())[ FD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_12 $$ new File(destination, zipEntry.getName()).mkdirs()[ FD ]
Line_11 $$ while ((zipEntry = inputStream.getNextEntry()) != null) -->Line_13 $$ File fileEntry = new File(destination, zipEntry.getName())[ FD ]
Line_13 $$ File fileEntry = new File(destination, zipEntry.getName())-->Line_14 $$ fileEntry.getParentFile().mkdirs()[ FD ]
Line_15 $$ outputStream = new FileOutputStream(fileEntry)-->Line_19 $$ outputStream.flush()[ FD ]
Line_15 $$ outputStream = new FileOutputStream(fileEntry)-->Line_20 $$ outputStream.close()[ FD ]
Line_16 $$ while ((read = inputStream.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_17 $$ outputStream.write(buffer, 0, read)[ FD ]
