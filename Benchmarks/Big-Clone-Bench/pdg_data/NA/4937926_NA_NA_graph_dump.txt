Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException [ CD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_3 $$ final RServiceRequest data = (RServiceRequest) inData[ CD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_4 $$ final RServiceResponse retval = new RServiceResponse()[ CD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")[ CD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_6 $$ RSession session[ CD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_7 $$ RConnection connection = null[ CD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_9 $$ result.append("Session Attachment: \n")[ FD ]
Line_10 $$ final byte[] sessionBytes = data.getSession()-->Line_10 $$ final byte[] sessionBytes = data.getSession()[ CD ]
Line_3 $$ final RServiceRequest data = (RServiceRequest) inData-->Line_10 $$ final byte[] sessionBytes = data.getSession()[ FD ]
Line_11 $$ if (sessionBytes != null && sessionBytes.length > 0) -->Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)[ CD ]
Line_6 $$ RSession session-->Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)[ FD ]
Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)-->Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)[ FD ]
Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)-->Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)[ CD ]
Line_10 $$ final byte[] sessionBytes = data.getSession()-->Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)[ FD ]
Line_11 $$ if (sessionBytes != null && sessionBytes.length > 0) -->Line_13 $$ result.append("  attaching to " + session + "\n")[ CD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_13 $$ result.append("  attaching to " + session + "\n")[ FD ]
Line_11 $$ if (sessionBytes != null && sessionBytes.length > 0) -->Line_14 $$ connection = session.attach()[ CD ]
Line_7 $$ RConnection connection = null-->Line_14 $$ connection = session.attach()[ FD ]
Line_14 $$ connection = session.attach()-->Line_14 $$ connection = session.attach()[ FD ]
Line_14 $$ connection = session.attach()-->Line_14 $$ connection = session.attach()[ CD ]
Line_6 $$ RSession session-->Line_14 $$ connection = session.attach()[ FD ]
Line_12 $$ session = RUtils.getInstance().bytesToSession(sessionBytes)-->Line_14 $$ connection = session.attach()[ FD ]
Line_11 $$ if (sessionBytes != null && sessionBytes.length > 0) -->Line_16 $$ result.append("  creating new session\n")[ CD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_16 $$ result.append("  creating new session\n")[ FD ]
Line_11 $$ if (sessionBytes != null && sessionBytes.length > 0) -->Line_17 $$ connection = new RConnection(data.getServerAddress())[ CD ]
Line_7 $$ RConnection connection = null-->Line_17 $$ connection = new RConnection(data.getServerAddress())[ FD ]
Line_14 $$ connection = session.attach()-->Line_17 $$ connection = new RConnection(data.getServerAddress())[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_17 $$ connection = new RConnection(data.getServerAddress())[ FD ]
Line_3 $$ final RServiceRequest data = (RServiceRequest) inData-->Line_17 $$ connection = new RConnection(data.getServerAddress())[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_19 $$ result.append("Input Parameters: \n")[ FD ]
Line_3 $$ final RServiceRequest data = (RServiceRequest) inData-->Line_20 $$ for (String attributeName : data.getInputVariables().keySet()) [ FD ]
Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)-->Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)[ CD ]
Line_20 $$ for (String attributeName : data.getInputVariables().keySet()) -->Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)[ FD ]
Line_3 $$ final RServiceRequest data = (RServiceRequest) inData-->Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)[ FD ]
Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)-->Line_22 $$ if (parameter instanceof URI) [ FD ]
Line_22 $$ if (parameter instanceof URI) -->Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())[ CD ]
Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())-->Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())[ CD ]
Line_22 $$ if (parameter instanceof URI) -->Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())[ CD ]
Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())-->Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())[ CD ]
Line_7 $$ RConnection connection = null-->Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())[ FD ]
Line_14 $$ connection = session.attach()-->Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())[ FD ]
Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())-->Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())[ FD ]
Line_22 $$ if (parameter instanceof URI) -->Line_25 $$ IOUtils.copy(file.getContent().getInputStream(), ros)[ CD ]
Line_24 $$ final RFileOutputStream ros = connection.createFile(file.getName().getBaseName())-->Line_25 $$ IOUtils.copy(file.getContent().getInputStream(), ros)[ FD ]
Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())-->Line_25 $$ IOUtils.copy(file.getContent().getInputStream(), ros)[ FD ]
Line_22 $$ if (parameter instanceof URI) -->Line_26 $$ connection.assign(attributeName, file.getName().getBaseName())[ CD ]
Line_7 $$ RConnection connection = null-->Line_26 $$ connection.assign(attributeName, file.getName().getBaseName())[ FD ]
Line_14 $$ connection = session.attach()-->Line_26 $$ connection.assign(attributeName, file.getName().getBaseName())[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_26 $$ connection.assign(attributeName, file.getName().getBaseName())[ FD ]
Line_20 $$ for (String attributeName : data.getInputVariables().keySet()) -->Line_26 $$ connection.assign(attributeName, file.getName().getBaseName())[ FD ]
Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())-->Line_26 $$ connection.assign(attributeName, file.getName().getBaseName())[ FD ]
Line_22 $$ if (parameter instanceof URI) -->Line_28 $$ connection.assign(attributeName, RUtils.getInstance().convertToREXP(parameter))[ CD ]
Line_7 $$ RConnection connection = null-->Line_28 $$ connection.assign(attributeName, RUtils.getInstance().convertToREXP(parameter))[ FD ]
Line_14 $$ connection = session.attach()-->Line_28 $$ connection.assign(attributeName, RUtils.getInstance().convertToREXP(parameter))[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_28 $$ connection.assign(attributeName, RUtils.getInstance().convertToREXP(parameter))[ FD ]
Line_20 $$ for (String attributeName : data.getInputVariables().keySet()) -->Line_28 $$ connection.assign(attributeName, RUtils.getInstance().convertToREXP(parameter))[ FD ]
Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)-->Line_28 $$ connection.assign(attributeName, RUtils.getInstance().convertToREXP(parameter))[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_30 $$ result.append("  " + parameter.getClass().getSimpleName() + " " + attributeName + "=" + parameter + "\n")[ FD ]
Line_21 $$ final Object parameter = data.getInputVariables().get(attributeName)-->Line_30 $$ result.append("  " + parameter.getClass().getSimpleName() + " " + attributeName + "=" + parameter + "\n")[ FD ]
Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))-->Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))[ CD ]
Line_7 $$ RConnection connection = null-->Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))[ FD ]
Line_14 $$ connection = session.attach()-->Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))[ FD ]
Line_3 $$ final RServiceRequest data = (RServiceRequest) inData-->Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_33 $$ result.append("Execution results:\n" + rExpression.asString() + "\n")[ FD ]
Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))-->Line_33 $$ result.append("Execution results:\n" + rExpression.asString() + "\n")[ FD ]
Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))-->Line_34 $$ if (rExpression.isNull() || rExpression.asString().startsWith("Error")) [ FD ]
Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))-->Line_34 $$ if (rExpression.isNull() || rExpression.asString().startsWith("Error")) [ FD ]
Line_34 $$ if (rExpression.isNull() || rExpression.asString().startsWith("Error")) -->Line_35 $$ retval.setErr(rExpression.asString())[ CD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_35 $$ retval.setErr(rExpression.asString())[ FD ]
Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))-->Line_35 $$ retval.setErr(rExpression.asString())[ FD ]
Line_32 $$ final REXP rExpression = connection.eval(RUtils.getInstance().wrapCode(data.getCode().replace('\r', '\n')))-->Line_36 $$ throw new NexusServiceException("R error: " + rExpression.asString())[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_38 $$ result.append("Output Parameters:\n")[ FD ]
Line_39 $$ final String[] rVariables = connection.eval("ls();").asStrings()-->Line_39 $$ final String[] rVariables = connection.eval("ls();").asStrings()[ CD ]
Line_7 $$ RConnection connection = null-->Line_39 $$ final String[] rVariables = connection.eval("ls();").asStrings()[ FD ]
Line_14 $$ connection = session.attach()-->Line_39 $$ final String[] rVariables = connection.eval("ls();").asStrings()[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_39 $$ final String[] rVariables = connection.eval("ls();").asStrings()[ FD ]
Line_41 $$ final String[] rVariable = connection.eval("class(" + varname + ")").asStrings()-->Line_41 $$ final String[] rVariable = connection.eval("class(" + varname + ")").asStrings()[ CD ]
Line_7 $$ RConnection connection = null-->Line_41 $$ final String[] rVariable = connection.eval("class(" + varname + ")").asStrings()[ FD ]
Line_14 $$ connection = session.attach()-->Line_41 $$ final String[] rVariable = connection.eval("class(" + varname + ")").asStrings()[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_41 $$ final String[] rVariable = connection.eval("class(" + varname + ")").asStrings()[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()[ CD ]
Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()-->Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()[ CD ]
Line_7 $$ RConnection connection = null-->Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()[ FD ]
Line_14 $$ connection = session.attach()-->Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_44 $$ result.append("  R File ").append(varname).append('=').append(rFileName).append('\n')[ CD ]
Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()-->Line_44 $$ result.append("  R File ").append(varname).append('=').append(rFileName).append('\n')[ FD ]
Line_40 $$ for (String varname : rVariables) -->Line_44 $$ result.append("  R File ").append(varname).append('=').append(rFileName).append('\n')[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_44 $$ result.append("  R File ").append(varname).append('=').append(rFileName).append('\n')[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)[ CD ]
Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)-->Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)[ CD ]
Line_7 $$ RConnection connection = null-->Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)[ FD ]
Line_14 $$ connection = session.attach()-->Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)[ FD ]
Line_43 $$ final String rFileName = connection.eval("showConnections(TRUE)[" + varname + "]").asString()-->Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_46 $$ final File file = File.createTempFile("nexus-" + data.getRequestId(), ".dat")[ CD ]
Line_3 $$ final RServiceRequest data = (RServiceRequest) inData-->Line_46 $$ final File file = File.createTempFile("nexus-" + data.getRequestId(), ".dat")[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_47 $$ IOUtils.copy(rInputStream, new FileOutputStream(file))[ CD ]
Line_45 $$ final RFileInputStream rInputStream = connection.openFile(rFileName)-->Line_47 $$ IOUtils.copy(rInputStream, new FileOutputStream(file))[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_48 $$ retval.getOutputVariables().put(varname, file.getCanonicalFile().toURI())[ CD ]
Line_40 $$ for (String varname : rVariables) -->Line_48 $$ retval.getOutputVariables().put(varname, file.getCanonicalFile().toURI())[ FD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_48 $$ retval.getOutputVariables().put(varname, file.getCanonicalFile().toURI())[ FD ]
Line_23 $$ final FileObject file = VFS.getManager().resolveFile(((URI) parameter).toString())-->Line_48 $$ retval.getOutputVariables().put(varname, file.getCanonicalFile().toURI())[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))[ CD ]
Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))-->Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))[ CD ]
Line_7 $$ RConnection connection = null-->Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))[ FD ]
Line_14 $$ connection = session.attach()-->Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))[ FD ]
Line_40 $$ for (String varname : rVariables) -->Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_51 $$ retval.getOutputVariables().put(varname, varvalue)[ CD ]
Line_40 $$ for (String varname : rVariables) -->Line_51 $$ retval.getOutputVariables().put(varname, varvalue)[ FD ]
Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))-->Line_51 $$ retval.getOutputVariables().put(varname, varvalue)[ FD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_51 $$ retval.getOutputVariables().put(varname, varvalue)[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_52 $$ final String printValue = varvalue == null ? "null" : varvalue.getClass().isArray() ? Arrays.asList(varvalue).toString() : varvalue.toString()[ CD ]
Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))-->Line_52 $$ final String printValue = varvalue == null ? "null" : varvalue.getClass().isArray() ? Arrays.asList(varvalue).toString() : varvalue.toString()[ FD ]
Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))-->Line_52 $$ final String printValue = varvalue == null ? "null" : varvalue.getClass().isArray() ? Arrays.asList(varvalue).toString() : varvalue.toString()[ FD ]
Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))-->Line_52 $$ final String printValue = varvalue == null ? "null" : varvalue.getClass().isArray() ? Arrays.asList(varvalue).toString() : varvalue.toString()[ FD ]
Line_42 $$ if (rVariable.length == 2 && "file".equals(rVariable[0]) && "connection".equals(rVariable[1])) -->Line_53 $$ result.append("  ").append(varvalue == null ? "" : varvalue.getClass().getSimpleName()).append(' ').append(varname).append('=').append(printValue).append('\n')[ CD ]
Line_52 $$ final String printValue = varvalue == null ? "null" : varvalue.getClass().isArray() ? Arrays.asList(varvalue).toString() : varvalue.toString()-->Line_53 $$ result.append("  ").append(varvalue == null ? "" : varvalue.getClass().getSimpleName()).append(' ').append(varname).append('=').append(printValue).append('\n')[ FD ]
Line_40 $$ for (String varname : rVariables) -->Line_53 $$ result.append("  ").append(varvalue == null ? "" : varvalue.getClass().getSimpleName()).append(' ').append(varname).append('=').append(printValue).append('\n')[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_53 $$ result.append("  ").append(varvalue == null ? "" : varvalue.getClass().getSimpleName()).append(' ').append(varname).append('=').append(printValue).append('\n')[ FD ]
Line_50 $$ final Object varvalue = RUtils.getInstance().convertREXP(connection.eval(varname))-->Line_53 $$ result.append("  ").append(varvalue == null ? "" : varvalue.getClass().getSimpleName()).append(' ').append(varname).append('=').append(printValue).append('\n')[ FD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_57 $$ retval.setErr(cnfe.getMessage())[ FD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_60 $$ retval.setErr(rse.getMessage())[ FD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_63 $$ retval.setErr(rme.getMessage())[ FD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_66 $$ retval.setErr(rme.getMessage())[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_69 $$ result.append("Session Detachment:\n")[ FD ]
Line_7 $$ RConnection connection = null-->Line_70 $$ if (connection != null) [ FD ]
Line_14 $$ connection = session.attach()-->Line_70 $$ if (connection != null) [ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_70 $$ if (connection != null) [ FD ]
Line_70 $$ if (connection != null) -->Line_71 $$ RSession outSession[ CD ]
Line_70 $$ if (connection != null) -->Line_72 $$ if (retval.isKeepSession()) [ CD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_72 $$ if (retval.isKeepSession()) [ FD ]
Line_72 $$ if (retval.isKeepSession()) -->Line_72 $$ if (retval.isKeepSession()) [ CD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_72 $$ if (retval.isKeepSession()) [ FD ]
Line_71 $$ RSession outSession-->Line_74 $$ outSession = connection.detach()[ FD ]
Line_74 $$ outSession = connection.detach()-->Line_74 $$ outSession = connection.detach()[ FD ]
Line_74 $$ outSession = connection.detach()-->Line_74 $$ outSession = connection.detach()[ CD ]
Line_7 $$ RConnection connection = null-->Line_74 $$ outSession = connection.detach()[ FD ]
Line_14 $$ connection = session.attach()-->Line_74 $$ outSession = connection.detach()[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_74 $$ outSession = connection.detach()[ FD ]
Line_71 $$ RSession outSession-->Line_77 $$ outSession = null[ FD ]
Line_74 $$ outSession = connection.detach()-->Line_77 $$ outSession = null[ FD ]
Line_77 $$ outSession = null-->Line_77 $$ outSession = null[ FD ]
Line_72 $$ if (retval.isKeepSession()) -->Line_80 $$ outSession = null[ CD ]
Line_71 $$ RSession outSession-->Line_80 $$ outSession = null[ FD ]
Line_74 $$ outSession = connection.detach()-->Line_80 $$ outSession = null[ FD ]
Line_77 $$ outSession = null-->Line_80 $$ outSession = null[ FD ]
Line_80 $$ outSession = null-->Line_80 $$ outSession = null[ FD ]
Line_70 $$ if (connection != null) -->Line_82 $$ final boolean close = outSession == null[ CD ]
Line_70 $$ if (connection != null) -->Line_83 $$ if (!close) [ CD ]
Line_82 $$ final boolean close = outSession == null-->Line_83 $$ if (!close) [ FD ]
Line_83 $$ if (!close) -->Line_83 $$ if (!close) [ CD ]
Line_82 $$ final boolean close = outSession == null-->Line_83 $$ if (!close) [ FD ]
Line_83 $$ if (!close) -->Line_84 $$ retval.setSession(RUtils.getInstance().sessionToBytes(outSession))[ CD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_84 $$ retval.setSession(RUtils.getInstance().sessionToBytes(outSession))[ FD ]
Line_71 $$ RSession outSession-->Line_84 $$ retval.setSession(RUtils.getInstance().sessionToBytes(outSession))[ FD ]
Line_74 $$ outSession = connection.detach()-->Line_84 $$ retval.setSession(RUtils.getInstance().sessionToBytes(outSession))[ FD ]
Line_77 $$ outSession = null-->Line_84 $$ retval.setSession(RUtils.getInstance().sessionToBytes(outSession))[ FD ]
Line_80 $$ outSession = null-->Line_84 $$ retval.setSession(RUtils.getInstance().sessionToBytes(outSession))[ FD ]
Line_83 $$ if (!close) -->Line_85 $$ result.append("  suspended session for later use\n")[ CD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_85 $$ result.append("  suspended session for later use\n")[ FD ]
Line_70 $$ if (connection != null) -->Line_87 $$ connection.close()[ CD ]
Line_7 $$ RConnection connection = null-->Line_87 $$ connection.close()[ FD ]
Line_14 $$ connection = session.attach()-->Line_87 $$ connection.close()[ FD ]
Line_17 $$ connection = new RConnection(data.getServerAddress())-->Line_87 $$ connection.close()[ FD ]
Line_70 $$ if (connection != null) -->Line_88 $$ retval.setSession(null)[ CD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_88 $$ retval.setSession(null)[ FD ]
Line_70 $$ if (connection != null) -->Line_89 $$ result.append("  session closed.\n")[ CD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_89 $$ result.append("  session closed.\n")[ FD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_92 $$ retval.setOut(result.toString())[ CD ]
Line_4 $$ final RServiceResponse retval = new RServiceResponse()-->Line_92 $$ retval.setOut(result.toString())[ FD ]
Line_5 $$ final StringBuilder result = new StringBuilder("R service call results:\n")-->Line_92 $$ retval.setOut(result.toString())[ FD ]
Line_2 $$ public RServiceResponse execute(final NexusServiceRequest inData) throws NexusServiceException -->Line_93 $$ return retval[ CD ]
