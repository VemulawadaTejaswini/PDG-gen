Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean import_pieces(String filename) [ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_3 $$ int pieceId[ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_4 $$ int i[ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_5 $$ int n[ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_6 $$ int[] color[ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_7 $$ boolean byurl = true[ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_8 $$ e2piece temppiece[ CD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_9 $$ color = new int[4][ CD ]
Line_6 $$ int[] color-->Line_9 $$ color = new int[4][ FD ]
Line_9 $$ color = new int[4]-->Line_9 $$ color = new int[4][ FD ]
Line_2 $$ public boolean import_pieces(String filename) -->Line_10 $$ BufferedReader entree[ CD ]
Line_7 $$ boolean byurl = true-->Line_12 $$ if (byurl == true) [ FD ]
Line_12 $$ if (byurl == true) -->Line_13 $$ URL url = new URL(baseURL, filename)[ CD ]
Line_12 $$ if (byurl == true) -->Line_14 $$ InputStream in = url.openStream()[ CD ]
Line_14 $$ InputStream in = url.openStream()-->Line_14 $$ InputStream in = url.openStream()[ CD ]
Line_13 $$ URL url = new URL(baseURL, filename)-->Line_14 $$ InputStream in = url.openStream()[ FD ]
Line_12 $$ if (byurl == true) -->Line_15 $$ entree = new BufferedReader(new InputStreamReader(in))[ CD ]
Line_10 $$ BufferedReader entree-->Line_15 $$ entree = new BufferedReader(new InputStreamReader(in))[ FD ]
Line_15 $$ entree = new BufferedReader(new InputStreamReader(in))-->Line_15 $$ entree = new BufferedReader(new InputStreamReader(in))[ FD ]
Line_12 $$ if (byurl == true) -->Line_17 $$ entree = new BufferedReader(new FileReader(filename))[ CD ]
Line_10 $$ BufferedReader entree-->Line_17 $$ entree = new BufferedReader(new FileReader(filename))[ FD ]
Line_15 $$ entree = new BufferedReader(new InputStreamReader(in))-->Line_17 $$ entree = new BufferedReader(new FileReader(filename))[ FD ]
Line_17 $$ entree = new BufferedReader(new FileReader(filename))-->Line_17 $$ entree = new BufferedReader(new FileReader(filename))[ FD ]
Line_3 $$ int pieceId-->Line_19 $$ pieceId = 0[ FD ]
Line_19 $$ pieceId = 0-->Line_19 $$ pieceId = 0[ FD ]
Line_20 $$ while (true) -->Line_21 $$ String lineread = entree.readLine()[ CD ]
Line_21 $$ String lineread = entree.readLine()-->Line_21 $$ String lineread = entree.readLine()[ CD ]
Line_10 $$ BufferedReader entree-->Line_21 $$ String lineread = entree.readLine()[ FD ]
Line_15 $$ entree = new BufferedReader(new InputStreamReader(in))-->Line_21 $$ String lineread = entree.readLine()[ FD ]
Line_17 $$ entree = new BufferedReader(new FileReader(filename))-->Line_21 $$ String lineread = entree.readLine()[ FD ]
Line_20 $$ while (true) -->Line_22 $$ if (lineread == null) [ CD ]
Line_21 $$ String lineread = entree.readLine()-->Line_22 $$ if (lineread == null) [ FD ]
Line_20 $$ while (true) -->Line_25 $$ StringTokenizer tok = new StringTokenizer(lineread, " ")[ CD ]
Line_20 $$ while (true) -->Line_26 $$ n = tok.countTokens()[ CD ]
Line_26 $$ n = tok.countTokens()-->Line_26 $$ n = tok.countTokens()[ FD ]
Line_5 $$ int n-->Line_26 $$ n = tok.countTokens()[ FD ]
Line_26 $$ n = tok.countTokens()-->Line_26 $$ n = tok.countTokens()[ CD ]
Line_25 $$ StringTokenizer tok = new StringTokenizer(lineread, " ")-->Line_26 $$ n = tok.countTokens()[ FD ]
Line_20 $$ while (true) -->Line_27 $$ if (n == 2) [ CD ]
Line_26 $$ n = tok.countTokens()-->Line_27 $$ if (n == 2) [ FD ]
Line_5 $$ int n-->Line_27 $$ if (n == 2) [ FD ]
Line_27 $$ if (n == 2) -->Line_29 $$ for (i = 0; i < 4; i++) [ CD ]
Line_27 $$ if (n == 2) -->Line_27 $$ if (n == 2) [ CD ]
Line_4 $$ int i-->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ CD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_4 $$ int i-->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ CD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_4 $$ int i-->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_30 $$ color[i] = Integer.parseInt(tok.nextToken())[ CD ]
Line_30 $$ color[i] = Integer.parseInt(tok.nextToken())-->Line_30 $$ color[i] = Integer.parseInt(tok.nextToken())[ CD ]
Line_25 $$ StringTokenizer tok = new StringTokenizer(lineread, " ")-->Line_30 $$ color[i] = Integer.parseInt(tok.nextToken())[ FD ]
Line_27 $$ if (n == 2) -->Line_32 $$ pieceId++[ CD ]
Line_3 $$ int pieceId-->Line_32 $$ pieceId++[ FD ]
Line_19 $$ pieceId = 0-->Line_32 $$ pieceId++[ FD ]
Line_27 $$ if (n == 2) -->Line_33 $$ System.out.println("Read Piece : " + pieceId + ":" + color[0] + " " + color[1] + " " + color[2] + " " + color[3])[ CD ]
Line_27 $$ if (n == 2) -->Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)[ CD ]
Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)-->Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)[ FD ]
Line_8 $$ e2piece temppiece-->Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)[ FD ]
Line_27 $$ if (n == 2) -->Line_35 $$ allpieces.add_piece(temppiece)[ CD ]
Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)-->Line_35 $$ allpieces.add_piece(temppiece)[ FD ]
Line_8 $$ e2piece temppiece-->Line_35 $$ allpieces.add_piece(temppiece)[ FD ]
Line_27 $$ if (n == 2) -->Line_36 $$ unplacedpieces.add_piece(temppiece)[ CD ]
Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)-->Line_36 $$ unplacedpieces.add_piece(temppiece)[ FD ]
Line_8 $$ e2piece temppiece-->Line_36 $$ unplacedpieces.add_piece(temppiece)[ FD ]
Line_21 $$ String lineread = entree.readLine()-->Line_22 $$ if (lineread == null) [ FD ]
Line_25 $$ StringTokenizer tok = new StringTokenizer(lineread, " ")-->Line_26 $$ n = tok.countTokens()[ FD ]
Line_26 $$ n = tok.countTokens()-->Line_27 $$ if (n == 2) [ FD ]
Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)-->Line_35 $$ allpieces.add_piece(temppiece)[ FD ]
Line_34 $$ temppiece = new e2piece(pieceId, color[0] + 1, color[1] + 1, color[2] + 1, color[3] + 1)-->Line_36 $$ unplacedpieces.add_piece(temppiece)[ FD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
Line_29 $$ for (i = 0; i < 4; i++) -->Line_29 $$ for (i = 0; i < 4; i++) [ FD ]
