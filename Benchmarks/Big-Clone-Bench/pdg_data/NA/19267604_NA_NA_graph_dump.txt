Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) [ CD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_3 $$ File inputFile = null[ CD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_4 $$ File outputFile = null[ CD ]
Line_3 $$ File inputFile = null-->Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())[ FD ]
Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())-->Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())[ FD ]
Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())-->Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())[ CD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())[ FD ]
Line_7 $$ OutputStream inputFileStream = null-->Line_9 $$ inputFileStream = new FileOutputStream(inputFile)[ FD ]
Line_9 $$ inputFileStream = new FileOutputStream(inputFile)-->Line_9 $$ inputFileStream = new FileOutputStream(inputFile)[ FD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_10 $$ IOUtils.copy(inputStream, inputFileStream)[ FD ]
Line_7 $$ OutputStream inputFileStream = null-->Line_10 $$ IOUtils.copy(inputStream, inputFileStream)[ FD ]
Line_9 $$ inputFileStream = new FileOutputStream(inputFile)-->Line_10 $$ IOUtils.copy(inputStream, inputFileStream)[ FD ]
Line_7 $$ OutputStream inputFileStream = null-->Line_12 $$ IOUtils.closeQuietly(inputFileStream)[ FD ]
Line_9 $$ inputFileStream = new FileOutputStream(inputFile)-->Line_12 $$ IOUtils.closeQuietly(inputFileStream)[ FD ]
Line_4 $$ File outputFile = null-->Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())[ FD ]
Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())-->Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())[ FD ]
Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())-->Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())[ CD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())[ FD ]
Line_3 $$ File inputFile = null-->Line_15 $$ convert(inputFile, inputFormat, outputFile, outputFormat)[ FD ]
Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())-->Line_15 $$ convert(inputFile, inputFormat, outputFile, outputFormat)[ FD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_15 $$ convert(inputFile, inputFormat, outputFile, outputFormat)[ FD ]
Line_4 $$ File outputFile = null-->Line_15 $$ convert(inputFile, inputFormat, outputFile, outputFormat)[ FD ]
Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())-->Line_15 $$ convert(inputFile, inputFormat, outputFile, outputFormat)[ FD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_15 $$ convert(inputFile, inputFormat, outputFile, outputFormat)[ FD ]
Line_16 $$ InputStream outputFileStream = null-->Line_18 $$ outputFileStream = new FileInputStream(outputFile)[ FD ]
Line_18 $$ outputFileStream = new FileInputStream(outputFile)-->Line_18 $$ outputFileStream = new FileInputStream(outputFile)[ FD ]
Line_16 $$ InputStream outputFileStream = null-->Line_19 $$ IOUtils.copy(outputFileStream, outputStream)[ FD ]
Line_18 $$ outputFileStream = new FileInputStream(outputFile)-->Line_19 $$ IOUtils.copy(outputFileStream, outputStream)[ FD ]
Line_2 $$ protected void convertInternal(InputStream inputStream, DocumentFormat inputFormat, OutputStream outputStream, DocumentFormat outputFormat) -->Line_19 $$ IOUtils.copy(outputFileStream, outputStream)[ FD ]
Line_16 $$ InputStream outputFileStream = null-->Line_21 $$ IOUtils.closeQuietly(outputFileStream)[ FD ]
Line_18 $$ outputFileStream = new FileInputStream(outputFile)-->Line_21 $$ IOUtils.closeQuietly(outputFileStream)[ FD ]
Line_3 $$ File inputFile = null-->Line_26 $$ if (inputFile != null) [ FD ]
Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())-->Line_26 $$ if (inputFile != null) [ FD ]
Line_26 $$ if (inputFile != null) -->Line_27 $$ inputFile.delete()[ CD ]
Line_3 $$ File inputFile = null-->Line_27 $$ inputFile.delete()[ FD ]
Line_6 $$ inputFile = File.createTempFile("document", "." + inputFormat.getFileExtension())-->Line_27 $$ inputFile.delete()[ FD ]
Line_4 $$ File outputFile = null-->Line_29 $$ if (outputFile != null) [ FD ]
Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())-->Line_29 $$ if (outputFile != null) [ FD ]
Line_29 $$ if (outputFile != null) -->Line_30 $$ outputFile.delete()[ CD ]
Line_4 $$ File outputFile = null-->Line_30 $$ outputFile.delete()[ FD ]
Line_14 $$ outputFile = File.createTempFile("document", "." + outputFormat.getFileExtension())-->Line_30 $$ outputFile.delete()[ FD ]
