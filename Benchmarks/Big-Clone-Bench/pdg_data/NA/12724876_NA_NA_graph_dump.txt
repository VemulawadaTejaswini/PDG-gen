Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException [ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_3 $$ URLConnection connection = url.openConnection()[ CD ]
Line_3 $$ URLConnection connection = url.openConnection()-->Line_3 $$ URLConnection connection = url.openConnection()[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_3 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_4 $$ if (username != null && !username.equals("")) [ CD ]
Line_4 $$ if (username != null && !username.equals("")) -->Line_4 $$ if (username != null && !username.equals("")) [ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_4 $$ if (username != null && !username.equals("")) [ FD ]
Line_4 $$ if (username != null && !username.equals("")) -->Line_5 $$ if (password == null) [ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_5 $$ if (password == null) [ FD ]
Line_5 $$ if (password == null) -->Line_6 $$ password = ""[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_6 $$ password = ""[ FD ]
Line_6 $$ password = ""-->Line_6 $$ password = ""[ FD ]
Line_4 $$ if (username != null && !username.equals("")) -->Line_8 $$ String encoding = new sun.misc.BASE64Encoder().encode(new String(username + ":" + password).getBytes())[ CD ]
Line_8 $$ String encoding = new sun.misc.BASE64Encoder().encode(new String(username + ":" + password).getBytes())-->Line_8 $$ String encoding = new sun.misc.BASE64Encoder().encode(new String(username + ":" + password).getBytes())[ CD ]
Line_4 $$ if (username != null && !username.equals("")) -->Line_9 $$ connection.setRequestProperty("Authorization", "Basic " + encoding)[ CD ]
Line_3 $$ URLConnection connection = url.openConnection()-->Line_9 $$ connection.setRequestProperty("Authorization", "Basic " + encoding)[ FD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ CD ]
Line_3 $$ URLConnection connection = url.openConnection()-->Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_12 $$ String inputLine[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_13 $$ this.tmpVRMLFile = File.createTempFile("xnavi-", null, null)[ CD ]
Line_13 $$ this.tmpVRMLFile = File.createTempFile("xnavi-", null, null)-->Line_13 $$ this.tmpVRMLFile = File.createTempFile("xnavi-", null, null)[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_14 $$ System.out.println("Created tmp file: " + this.tmpVRMLFile.getAbsolutePath())[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_15 $$ FileWriter fw = new FileWriter(this.tmpVRMLFile)[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_16 $$ long bytesInFile = this.tmpVRMLFile.length()[ CD ]
Line_16 $$ long bytesInFile = this.tmpVRMLFile.length()-->Line_16 $$ long bytesInFile = this.tmpVRMLFile.length()[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_17 $$ double sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_18 $$ String response = ""[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_19 $$ while ((inputLine = in.readLine()) != null) [ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException [ CD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_19 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_12 $$ String inputLine-->Line_19 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_19 $$ while ((inputLine = in.readLine()) != null) [ CD ]
Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_19 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_20 $$ response = inputLine + "\n"[ CD ]
Line_20 $$ response = inputLine + "\n"-->Line_20 $$ response = inputLine + "\n"[ FD ]
Line_18 $$ String response = ""-->Line_20 $$ response = inputLine + "\n"[ FD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_20 $$ response = inputLine + "\n"[ FD ]
Line_12 $$ String inputLine-->Line_20 $$ response = inputLine + "\n"[ FD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_21 $$ fw.write(response)[ CD ]
Line_15 $$ FileWriter fw = new FileWriter(this.tmpVRMLFile)-->Line_21 $$ fw.write(response)[ FD ]
Line_20 $$ response = inputLine + "\n"-->Line_21 $$ fw.write(response)[ FD ]
Line_18 $$ String response = ""-->Line_21 $$ fw.write(response)[ FD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_22 $$ fw.flush()[ CD ]
Line_15 $$ FileWriter fw = new FileWriter(this.tmpVRMLFile)-->Line_22 $$ fw.flush()[ FD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_23 $$ if (statusDialogMBLabel != null) [ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_23 $$ if (statusDialogMBLabel != null) [ FD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_24 $$ bytesInFile = this.tmpVRMLFile.length()[ CD ]
Line_24 $$ bytesInFile = this.tmpVRMLFile.length()-->Line_24 $$ bytesInFile = this.tmpVRMLFile.length()[ FD ]
Line_16 $$ long bytesInFile = this.tmpVRMLFile.length()-->Line_24 $$ bytesInFile = this.tmpVRMLFile.length()[ FD ]
Line_24 $$ bytesInFile = this.tmpVRMLFile.length()-->Line_24 $$ bytesInFile = this.tmpVRMLFile.length()[ CD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)[ CD ]
Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)[ FD ]
Line_17 $$ double sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)[ FD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_26 $$ sizeInMB *= 100.0[ CD ]
Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_26 $$ sizeInMB *= 100.0[ FD ]
Line_26 $$ sizeInMB *= 100.0-->Line_26 $$ sizeInMB *= 100.0[ FD ]
Line_17 $$ double sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_26 $$ sizeInMB *= 100.0[ FD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_27 $$ sizeInMB = (double) ((int) sizeInMB)[ CD ]
Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_27 $$ sizeInMB = (double) ((int) sizeInMB)[ FD ]
Line_26 $$ sizeInMB *= 100.0-->Line_27 $$ sizeInMB = (double) ((int) sizeInMB)[ FD ]
Line_27 $$ sizeInMB = (double) ((int) sizeInMB)-->Line_27 $$ sizeInMB = (double) ((int) sizeInMB)[ FD ]
Line_17 $$ double sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_27 $$ sizeInMB = (double) ((int) sizeInMB)[ FD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_28 $$ sizeInMB /= 100.0[ CD ]
Line_25 $$ sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_28 $$ sizeInMB /= 100.0[ FD ]
Line_26 $$ sizeInMB *= 100.0-->Line_28 $$ sizeInMB /= 100.0[ FD ]
Line_27 $$ sizeInMB = (double) ((int) sizeInMB)-->Line_28 $$ sizeInMB /= 100.0[ FD ]
Line_28 $$ sizeInMB /= 100.0-->Line_28 $$ sizeInMB /= 100.0[ FD ]
Line_17 $$ double sizeInMB = ((double) bytesInFile) / (1024.0 * 1024.0)-->Line_28 $$ sizeInMB /= 100.0[ FD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_29 $$ statusDialogMBLabel.setText(sizeInMB + " MB")[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_29 $$ statusDialogMBLabel.setText(sizeInMB + " MB")[ FD ]
Line_23 $$ if (statusDialogMBLabel != null) -->Line_30 $$ statusDialogMBLabel.repaint()[ CD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_30 $$ statusDialogMBLabel.repaint()[ FD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_33 $$ fw.close()[ CD ]
Line_15 $$ FileWriter fw = new FileWriter(this.tmpVRMLFile)-->Line_33 $$ fw.close()[ FD ]
Line_2 $$ private void loadURL(URL url, String username, String password, JLabel statusDialogMBLabel) throws IOException -->Line_34 $$ System.out.println("Wrote file " + this.tmpVRMLFile.getAbsolutePath())[ CD ]
Line_19 $$ while ((inputLine = in.readLine()) != null) -->Line_20 $$ response = inputLine + "\n"[ FD ]
Line_20 $$ response = inputLine + "\n"-->Line_21 $$ fw.write(response)[ FD ]
