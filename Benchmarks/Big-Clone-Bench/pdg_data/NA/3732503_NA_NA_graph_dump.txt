Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException [ CD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_3 $$ KMLDoc kmlDoc[ CD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_4 $$ InputStream refStream = url.openStream()[ CD ]
Line_4 $$ InputStream refStream = url.openStream()-->Line_4 $$ InputStream refStream = url.openStream()[ CD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_4 $$ InputStream refStream = url.openStream()[ FD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))[ CD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))[ FD ]
Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))-->Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))[ CD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))[ FD ]
Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))-->Line_5 $$ kmlDoc = new KMZInputStream(refStream)[ CD ]
Line_3 $$ KMLDoc kmlDoc-->Line_5 $$ kmlDoc = new KMZInputStream(refStream)[ FD ]
Line_5 $$ kmlDoc = new KMZInputStream(refStream)-->Line_5 $$ kmlDoc = new KMZInputStream(refStream)[ FD ]
Line_5 $$ if (KMLConstants.KMZ_MIME_TYPE.equals(contentType))-->Line_5 $$ kmlDoc = new KMLInputStream(refStream, WWIO.makeURI(linkBase))[ CD ]
Line_3 $$ KMLDoc kmlDoc-->Line_5 $$ kmlDoc = new KMLInputStream(refStream, WWIO.makeURI(linkBase))[ FD ]
Line_5 $$ kmlDoc = new KMZInputStream(refStream)-->Line_5 $$ kmlDoc = new KMLInputStream(refStream, WWIO.makeURI(linkBase))[ FD ]
Line_5 $$ kmlDoc = new KMLInputStream(refStream, WWIO.makeURI(linkBase))-->Line_5 $$ kmlDoc = new KMLInputStream(refStream, WWIO.makeURI(linkBase))[ FD ]
Line_2 $$ protected KMLRoot parseCachedKMLFile(URL url, String linkBase, String contentType, boolean namespaceAware) throws IOException, XMLStreamException -->Line_5 $$ kmlDoc = new KMLInputStream(refStream, WWIO.makeURI(linkBase))[ FD ]
Line_7 $$ KMLRoot refRoot = new KMLRoot(kmlDoc, namespaceAware)-->Line_8 $$ refRoot.parse()[ FD ]
Line_4 $$ InputStream refStream = url.openStream()-->Line_11 $$ refStream.close()[ FD ]
