Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String machineInfo() [ CD ]
Line_2 $$ public static String machineInfo() -->Line_3 $$ StringBuilder machineInfo = new StringBuilder()[ CD ]
Line_5 $$ Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces()-->Line_5 $$ Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces()[ CD ]
Line_6 $$ while (networkInterfaces.hasMoreElements()) -->Line_6 $$ while (networkInterfaces.hasMoreElements()) [ CD ]
Line_5 $$ Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces()-->Line_6 $$ while (networkInterfaces.hasMoreElements()) [ FD ]
Line_6 $$ while (networkInterfaces.hasMoreElements()) -->Line_7 $$ NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement()[ CD ]
Line_5 $$ Enumeration networkInterfaces = NetworkInterface.getNetworkInterfaces()-->Line_7 $$ NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement()[ FD ]
Line_6 $$ while (networkInterfaces.hasMoreElements()) -->Line_8 $$ if ("eth0".equals(networkInterface.getDisplayName())) [ CD ]
Line_8 $$ if ("eth0".equals(networkInterface.getDisplayName())) -->Line_8 $$ if ("eth0".equals(networkInterface.getDisplayName())) [ CD ]
Line_7 $$ NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement()-->Line_8 $$ if ("eth0".equals(networkInterface.getDisplayName())) [ FD ]
Line_7 $$ NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement()-->Line_9 $$ for (byte b : networkInterface.getHardwareAddress()) [ FD ]
Line_3 $$ StringBuilder machineInfo = new StringBuilder()-->Line_10 $$ StringTools.appendWithDelimiter(machineInfo, String.format("%02x", b).toUpperCase(), ":")[ FD ]
Line_9 $$ for (byte b : networkInterface.getHardwareAddress()) -->Line_10 $$ StringTools.appendWithDelimiter(machineInfo, String.format("%02x", b).toUpperCase(), ":")[ FD ]
Line_8 $$ if ("eth0".equals(networkInterface.getDisplayName())) -->Line_12 $$ machineInfo.append("\n")[ CD ]
Line_3 $$ StringBuilder machineInfo = new StringBuilder()-->Line_12 $$ machineInfo.append("\n")[ FD ]
Line_2 $$ public static String machineInfo() -->Line_20 $$ if (machineInfo.length() == 0) [ CD ]
Line_3 $$ StringBuilder machineInfo = new StringBuilder()-->Line_20 $$ if (machineInfo.length() == 0) [ FD ]
Line_20 $$ if (machineInfo.length() == 0) -->Line_21 $$ return null[ CD ]
Line_2 $$ public static String machineInfo() -->Line_23 $$ String info = machineInfo.toString()[ CD ]
Line_23 $$ String info = machineInfo.toString()-->Line_23 $$ String info = machineInfo.toString()[ CD ]
Line_3 $$ StringBuilder machineInfo = new StringBuilder()-->Line_23 $$ String info = machineInfo.toString()[ FD ]
Line_25 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5", "SUN")-->Line_25 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5", "SUN")[ CD ]
Line_25 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5", "SUN")-->Line_26 $$ messageDigest.update(info.getBytes())[ FD ]
Line_23 $$ String info = machineInfo.toString()-->Line_26 $$ messageDigest.update(info.getBytes())[ FD ]
Line_27 $$ byte[] md5 = messageDigest.digest(info.getBytes())-->Line_27 $$ byte[] md5 = messageDigest.digest(info.getBytes())[ CD ]
Line_25 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5", "SUN")-->Line_27 $$ byte[] md5 = messageDigest.digest(info.getBytes())[ FD ]
Line_23 $$ String info = machineInfo.toString()-->Line_27 $$ byte[] md5 = messageDigest.digest(info.getBytes())[ FD ]
Line_27 $$ byte[] md5 = messageDigest.digest(info.getBytes())-->Line_28 $$ return new String(Base64.encodeBase64(md5))[ FD ]
Line_2 $$ public static String machineInfo() -->Line_33 $$ return null[ CD ]
Line_7 $$ NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement()-->Line_8 $$ if ("eth0".equals(networkInterface.getDisplayName())) [ FD ]
Line_7 $$ NetworkInterface networkInterface = (NetworkInterface) networkInterfaces.nextElement()-->Line_9 $$ for (byte b : networkInterface.getHardwareAddress()) [ FD ]
Line_9 $$ for (byte b : networkInterface.getHardwareAddress()) -->Line_10 $$ StringTools.appendWithDelimiter(machineInfo, String.format("%02x", b).toUpperCase(), ":")[ FD ]
