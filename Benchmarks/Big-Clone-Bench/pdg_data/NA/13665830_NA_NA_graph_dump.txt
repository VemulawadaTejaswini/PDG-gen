Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Usage u = new ccngetmeta()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ CD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ CD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ CD ]
Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) -->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ CD ]
Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) -->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ FD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ FD ]
Line_3 $$ Usage u = new ccngetmeta()-->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ FD ]
Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) -->Line_6 $$ u.usage()[ CD ]
Line_3 $$ Usage u = new ccngetmeta()-->Line_6 $$ u.usage()[ FD ]
Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) -->Line_7 $$ System.exit(1)[ CD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_9 $$ if (CommonParameters.startArg > i + 1)[ CD ]
Line_9 $$ if (CommonParameters.startArg > i + 1)-->Line_9 $$ i = CommonParameters.startArg - 1[ CD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_9 $$ i = CommonParameters.startArg - 1[ FD ]
Line_9 $$ i = CommonParameters.startArg - 1-->Line_9 $$ i = CommonParameters.startArg - 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ if (args.length != CommonParameters.startArg + 3) [ CD ]
Line_11 $$ if (args.length != CommonParameters.startArg + 3) -->Line_12 $$ u.usage()[ CD ]
Line_3 $$ Usage u = new ccngetmeta()-->Line_12 $$ u.usage()[ FD ]
Line_11 $$ if (args.length != CommonParameters.startArg + 3) -->Line_13 $$ System.exit(1)[ CD ]
Line_17 $$ CCNHandle handle = CCNHandle.open()-->Line_17 $$ CCNHandle handle = CCNHandle.open()[ CD ]
Line_19 $$ if (!metaArg.startsWith("/"))-->Line_19 $$ if (!metaArg.startsWith("/"))[ CD ]
Line_19 $$ if (!metaArg.startsWith("/"))-->Line_19 $$ if (!metaArg.startsWith("/"))[ CD ]
Line_18 $$ String metaArg = args[CommonParameters.startArg + 1]-->Line_19 $$ if (!metaArg.startsWith("/"))[ FD ]
Line_19 $$ if (!metaArg.startsWith("/"))-->Line_19 $$ metaArg = "/" + metaArg[ CD ]
Line_18 $$ String metaArg = args[CommonParameters.startArg + 1]-->Line_19 $$ metaArg = "/" + metaArg[ FD ]
Line_19 $$ metaArg = "/" + metaArg-->Line_19 $$ metaArg = "/" + metaArg[ FD ]
Line_18 $$ String metaArg = args[CommonParameters.startArg + 1]-->Line_19 $$ metaArg = "/" + metaArg[ FD ]
Line_19 $$ metaArg = "/" + metaArg-->Line_19 $$ metaArg = "/" + metaArg[ FD ]
Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)-->Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)[ CD ]
Line_17 $$ CCNHandle handle = CCNHandle.open()-->Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)[ FD ]
Line_18 $$ String metaArg = args[CommonParameters.startArg + 1]-->Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)[ FD ]
Line_19 $$ metaArg = "/" + metaArg-->Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)[ FD ]
Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)-->Line_21 $$ if (fileName == null) [ FD ]
Line_21 $$ if (fileName == null) -->Line_22 $$ System.out.println("File " + args[CommonParameters.startArg] + " does not exist")[ CD ]
Line_21 $$ if (fileName == null) -->Line_23 $$ System.exit(1)[ CD ]
Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)-->Line_25 $$ if (VersioningProfile.hasTerminalVersion(fileName)) [ FD ]
Line_25 $$ if (VersioningProfile.hasTerminalVersion(fileName)) -->Line_25 $$ if (VersioningProfile.hasTerminalVersion(fileName)) [ CD ]
Line_20 $$ ContentName fileName = MetadataProfile.getLatestVersion(ContentName.fromURI(args[CommonParameters.startArg]), ContentName.fromNative(metaArg), CommonParameters.timeout, handle)-->Line_25 $$ if (VersioningProfile.hasTerminalVersion(fileName)) [ FD ]
Line_25 $$ if (VersioningProfile.hasTerminalVersion(fileName)) -->Line_27 $$ System.out.println("File " + fileName + " does not exist...  exiting")[ CD ]
Line_25 $$ if (VersioningProfile.hasTerminalVersion(fileName)) -->Line_28 $$ System.exit(1)[ CD ]
Line_30 $$ File theFile = new File(args[CommonParameters.startArg + 2])-->Line_31 $$ if (theFile.exists()) [ FD ]
Line_31 $$ if (theFile.exists()) -->Line_31 $$ if (theFile.exists()) [ CD ]
Line_30 $$ File theFile = new File(args[CommonParameters.startArg + 2])-->Line_31 $$ if (theFile.exists()) [ FD ]
Line_31 $$ if (theFile.exists()) -->Line_32 $$ System.out.println("Overwriting file: " + args[CommonParameters.startArg + 1])[ CD ]
Line_35 $$ long starttime = System.currentTimeMillis()-->Line_35 $$ long starttime = System.currentTimeMillis()[ CD ]
Line_37 $$ if (CommonParameters.unversioned)-->Line_37 $$ input = new CCNInputStream(fileName, handle)[ CD ]
Line_36 $$ CCNInputStream input-->Line_37 $$ input = new CCNInputStream(fileName, handle)[ FD ]
Line_37 $$ input = new CCNInputStream(fileName, handle)-->Line_37 $$ input = new CCNInputStream(fileName, handle)[ FD ]
Line_37 $$ if (CommonParameters.unversioned)-->Line_37 $$ input = new CCNFileInputStream(fileName, handle)[ CD ]
Line_36 $$ CCNInputStream input-->Line_37 $$ input = new CCNFileInputStream(fileName, handle)[ FD ]
Line_37 $$ input = new CCNInputStream(fileName, handle)-->Line_37 $$ input = new CCNFileInputStream(fileName, handle)[ FD ]
Line_37 $$ input = new CCNFileInputStream(fileName, handle)-->Line_37 $$ input = new CCNFileInputStream(fileName, handle)[ FD ]
Line_38 $$ if (CommonParameters.timeout != null) -->Line_39 $$ input.setTimeout(CommonParameters.timeout)[ CD ]
Line_36 $$ CCNInputStream input-->Line_39 $$ input.setTimeout(CommonParameters.timeout)[ FD ]
Line_37 $$ input = new CCNInputStream(fileName, handle)-->Line_39 $$ input.setTimeout(CommonParameters.timeout)[ FD ]
Line_37 $$ input = new CCNFileInputStream(fileName, handle)-->Line_39 $$ input.setTimeout(CommonParameters.timeout)[ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ FD ]
Line_42 $$ int readcount = 0-->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ CD ]
Line_36 $$ CCNInputStream input-->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ FD ]
Line_37 $$ input = new CCNInputStream(fileName, handle)-->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ FD ]
Line_37 $$ input = new CCNFileInputStream(fileName, handle)-->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ FD ]
Line_41 $$ byte[] buffer = new byte[readsize]-->Line_44 $$ while ((readcount = input.read(buffer)) != -1) [ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_45 $$ readtotal += readcount[ CD ]
Line_45 $$ readtotal += readcount-->Line_45 $$ readtotal += readcount[ FD ]
Line_43 $$ long readtotal = 0-->Line_45 $$ readtotal += readcount[ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_45 $$ readtotal += readcount[ FD ]
Line_42 $$ int readcount = 0-->Line_45 $$ readtotal += readcount[ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_46 $$ output.write(buffer, 0, readcount)[ CD ]
Line_34 $$ FileOutputStream output = new FileOutputStream(theFile)-->Line_46 $$ output.write(buffer, 0, readcount)[ FD ]
Line_41 $$ byte[] buffer = new byte[readsize]-->Line_46 $$ output.write(buffer, 0, readcount)[ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_46 $$ output.write(buffer, 0, readcount)[ FD ]
Line_42 $$ int readcount = 0-->Line_46 $$ output.write(buffer, 0, readcount)[ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_47 $$ output.flush()[ CD ]
Line_34 $$ FileOutputStream output = new FileOutputStream(theFile)-->Line_47 $$ output.flush()[ FD ]
Line_49 $$ if (CommonParameters.verbose)-->Line_49 $$ System.out.println("ccngetfile took: " + (System.currentTimeMillis() - starttime) + "ms")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_62 $$ System.exit(1)[ CD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_9 $$ i = CommonParameters.startArg - 1-->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_9 $$ i = CommonParameters.startArg - 1-->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_9 $$ i = CommonParameters.startArg - 1-->Line_4 $$ for (int i = 0; i < args.length - 3; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length - 3; i++) -->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ FD ]
Line_9 $$ i = CommonParameters.startArg - 1-->Line_5 $$ if (!CommonArguments.parseArguments(args, i, u)) [ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_45 $$ readtotal += readcount[ FD ]
Line_44 $$ while ((readcount = input.read(buffer)) != -1) -->Line_46 $$ output.write(buffer, 0, readcount)[ FD ]
