Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException [ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_3 $$ if (id.isEmpty()) [ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_3 $$ if (id.isEmpty()) [ FD ]
Line_3 $$ if (id.isEmpty()) -->Line_3 $$ if (id.isEmpty()) [ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_3 $$ if (id.isEmpty()) [ FD ]
Line_3 $$ if (id.isEmpty()) -->Line_4 $$ return null[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_6 $$ URL url[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_7 $$ URLConnection conn[ CD ]
Line_6 $$ URL url-->Line_9 $$ url = new URL(importUrl)[ FD ]
Line_9 $$ url = new URL(importUrl)-->Line_9 $$ url = new URL(importUrl)[ FD ]
Line_7 $$ URLConnection conn-->Line_10 $$ conn = url.openConnection()[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_10 $$ conn = url.openConnection()[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_10 $$ conn = url.openConnection()[ CD ]
Line_6 $$ URL url-->Line_10 $$ conn = url.openConnection()[ FD ]
Line_9 $$ url = new URL(importUrl)-->Line_10 $$ conn = url.openConnection()[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_15 $$ conn.setDoInput(true)[ CD ]
Line_7 $$ URLConnection conn-->Line_15 $$ conn.setDoInput(true)[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_15 $$ conn.setDoInput(true)[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_16 $$ conn.setDoOutput(true)[ CD ]
Line_7 $$ URLConnection conn-->Line_16 $$ conn.setDoOutput(true)[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_16 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_17 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ CD ]
Line_7 $$ URLConnection conn-->Line_17 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_17 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_18 $$ conn.setRequestProperty("Referer", searchUrl)[ CD ]
Line_7 $$ URLConnection conn-->Line_18 $$ conn.setRequestProperty("Referer", searchUrl)[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_18 $$ conn.setRequestProperty("Referer", searchUrl)[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_19 $$ PrintWriter out = new PrintWriter(conn.getOutputStream())[ CD ]
Line_7 $$ URLConnection conn-->Line_19 $$ PrintWriter out = new PrintWriter(conn.getOutputStream())[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_19 $$ PrintWriter out = new PrintWriter(conn.getOutputStream())[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_20 $$ String recordIds = ""[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_21 $$ Iterator<String> iter = id.iterator()[ CD ]
Line_21 $$ Iterator<String> iter = id.iterator()-->Line_21 $$ Iterator<String> iter = id.iterator()[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_21 $$ Iterator<String> iter = id.iterator()[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_22 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException [ CD ]
Line_22 $$ while (iter.hasNext()) -->Line_22 $$ while (iter.hasNext()) [ CD ]
Line_21 $$ Iterator<String> iter = id.iterator()-->Line_22 $$ while (iter.hasNext()) [ FD ]
Line_22 $$ while (iter.hasNext()) -->Line_23 $$ recordIds += iter.next() + " "[ CD ]
Line_23 $$ recordIds += iter.next() + " "-->Line_23 $$ recordIds += iter.next() + " "[ FD ]
Line_20 $$ String recordIds = ""-->Line_23 $$ recordIds += iter.next() + " "[ FD ]
Line_21 $$ Iterator<String> iter = id.iterator()-->Line_23 $$ recordIds += iter.next() + " "[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_25 $$ recordIds = recordIds.trim()[ CD ]
Line_23 $$ recordIds += iter.next() + " "-->Line_25 $$ recordIds = recordIds.trim()[ FD ]
Line_20 $$ String recordIds = ""-->Line_25 $$ recordIds = recordIds.trim()[ FD ]
Line_25 $$ recordIds = recordIds.trim()-->Line_25 $$ recordIds = recordIds.trim()[ FD ]
Line_25 $$ recordIds = recordIds.trim()-->Line_25 $$ recordIds = recordIds.trim()[ CD ]
Line_23 $$ recordIds += iter.next() + " "-->Line_25 $$ recordIds = recordIds.trim()[ FD ]
Line_20 $$ String recordIds = ""-->Line_25 $$ recordIds = recordIds.trim()[ FD ]
Line_25 $$ recordIds = recordIds.trim()-->Line_25 $$ recordIds = recordIds.trim()[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_26 $$ String citation = abs ? "citation-abstract" : "citation-only"[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_27 $$ String content = "recordIds=" + recordIds.replaceAll(" ", "%20") + "&fromPageName=&citations-format=" + citation + "&download-format=download-bibtex"[ CD ]
Line_23 $$ recordIds += iter.next() + " "-->Line_27 $$ String content = "recordIds=" + recordIds.replaceAll(" ", "%20") + "&fromPageName=&citations-format=" + citation + "&download-format=download-bibtex"[ FD ]
Line_20 $$ String recordIds = ""-->Line_27 $$ String content = "recordIds=" + recordIds.replaceAll(" ", "%20") + "&fromPageName=&citations-format=" + citation + "&download-format=download-bibtex"[ FD ]
Line_25 $$ recordIds = recordIds.trim()-->Line_27 $$ String content = "recordIds=" + recordIds.replaceAll(" ", "%20") + "&fromPageName=&citations-format=" + citation + "&download-format=download-bibtex"[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_28 $$ System.out.println(content)[ CD ]
Line_27 $$ String content = "recordIds=" + recordIds.replaceAll(" ", "%20") + "&fromPageName=&citations-format=" + citation + "&download-format=download-bibtex"-->Line_28 $$ System.out.println(content)[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_29 $$ out.write(content)[ CD ]
Line_19 $$ PrintWriter out = new PrintWriter(conn.getOutputStream())-->Line_29 $$ out.write(content)[ FD ]
Line_27 $$ String content = "recordIds=" + recordIds.replaceAll(" ", "%20") + "&fromPageName=&citations-format=" + citation + "&download-format=download-bibtex"-->Line_29 $$ out.write(content)[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_30 $$ out.flush()[ CD ]
Line_19 $$ PrintWriter out = new PrintWriter(conn.getOutputStream())-->Line_30 $$ out.flush()[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_31 $$ out.close()[ CD ]
Line_19 $$ PrintWriter out = new PrintWriter(conn.getOutputStream())-->Line_31 $$ out.close()[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_32 $$ BufferedReader bufr = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_7 $$ URLConnection conn-->Line_32 $$ BufferedReader bufr = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_10 $$ conn = url.openConnection()-->Line_32 $$ BufferedReader bufr = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_33 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_34 $$ char[] buffer = new char[256][ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_35 $$ while (true) [ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException [ CD ]
Line_35 $$ while (true) -->Line_36 $$ int bytesRead = bufr.read(buffer)[ CD ]
Line_36 $$ int bytesRead = bufr.read(buffer)-->Line_36 $$ int bytesRead = bufr.read(buffer)[ CD ]
Line_32 $$ BufferedReader bufr = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_36 $$ int bytesRead = bufr.read(buffer)[ FD ]
Line_34 $$ char[] buffer = new char[256]-->Line_36 $$ int bytesRead = bufr.read(buffer)[ FD ]
Line_35 $$ while (true) -->Line_37 $$ if (bytesRead == -1) [ CD ]
Line_36 $$ int bytesRead = bufr.read(buffer)-->Line_37 $$ if (bytesRead == -1) [ FD ]
Line_35 $$ while (true) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ CD ]
Line_35 $$ while (true) -->Line_35 $$ while (true) [ CD ]
Line_36 $$ int bytesRead = bufr.read(buffer)-->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ FD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ CD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ CD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ FD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_41 $$ sb.append((char) buffer[i])[ CD ]
Line_33 $$ StringBuffer sb = new StringBuffer()-->Line_41 $$ sb.append((char) buffer[i])[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_44 $$ System.out.println(sb.toString())[ CD ]
Line_33 $$ StringBuffer sb = new StringBuffer()-->Line_44 $$ System.out.println(sb.toString())[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_45 $$ ParserResult results = new BibtexParser(bufr).parse()[ CD ]
Line_45 $$ ParserResult results = new BibtexParser(bufr).parse()-->Line_45 $$ ParserResult results = new BibtexParser(bufr).parse()[ CD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_46 $$ bufr.close()[ CD ]
Line_32 $$ BufferedReader bufr = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_46 $$ bufr.close()[ FD ]
Line_2 $$ private BibtexDatabase parseBibtexDatabase(List<String> id, boolean abs) throws IOException -->Line_47 $$ return results.getDatabase()[ CD ]
Line_47 $$ return results.getDatabase()-->Line_47 $$ return results.getDatabase()[ CD ]
Line_45 $$ ParserResult results = new BibtexParser(bufr).parse()-->Line_47 $$ return results.getDatabase()[ FD ]
Line_36 $$ int bytesRead = bufr.read(buffer)-->Line_37 $$ if (bytesRead == -1) [ FD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ FD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ FD ]
Line_40 $$ for (int i = 0; i < bytesRead; i++) -->Line_40 $$ for (int i = 0; i < bytesRead; i++) [ FD ]
