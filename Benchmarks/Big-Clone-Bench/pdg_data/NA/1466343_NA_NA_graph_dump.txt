Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean finish() [ CD ]
Line_2 $$ public boolean finish() -->Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_5 $$ project.create(null)[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_6 $$ project.open(null)[ FD ]
Line_7 $$ IProjectDescription desc = project.getDescription()-->Line_7 $$ IProjectDescription desc = project.getDescription()[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_7 $$ IProjectDescription desc = project.getDescription()[ FD ]
Line_7 $$ IProjectDescription desc = project.getDescription()-->Line_8 $$ desc.setNatureIds(new String[] [ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_9 $$ project.setDescription(desc, null)[ FD ]
Line_7 $$ IProjectDescription desc = project.getDescription()-->Line_9 $$ project.setDescription(desc, null)[ FD ]
Line_10 $$ IJavaProject javaProject = JavaCore.create(project)-->Line_10 $$ IJavaProject javaProject = JavaCore.create(project)[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_10 $$ IJavaProject javaProject = JavaCore.create(project)[ FD ]
Line_11 $$ IPath fitLib = project.getFullPath().append(FIT_LIBRARY)-->Line_11 $$ IPath fitLib = project.getFullPath().append(FIT_LIBRARY)[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_11 $$ IPath fitLib = project.getFullPath().append(FIT_LIBRARY)[ FD ]
Line_10 $$ IJavaProject javaProject = JavaCore.create(project)-->Line_12 $$ javaProject.setRawClasspath(createClassPathEntries(project, fitLib), null)[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_12 $$ javaProject.setRawClasspath(createClassPathEntries(project, fitLib), null)[ FD ]
Line_11 $$ IPath fitLib = project.getFullPath().append(FIT_LIBRARY)-->Line_12 $$ javaProject.setRawClasspath(createClassPathEntries(project, fitLib), null)[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_13 $$ copyLibrary(project)[ FD ]
Line_10 $$ IJavaProject javaProject = JavaCore.create(project)-->Line_14 $$ javaProject.setOutputLocation(createOutputFolder(project, DEFAULT_OUTPUT_FOLDER).getFullPath(), null)[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_14 $$ javaProject.setOutputLocation(createOutputFolder(project, DEFAULT_OUTPUT_FOLDER).getFullPath(), null)[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_15 $$ createOutputFolder(project, fitTests.getText())[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_16 $$ createOutputFolder(project, fitResults.getText())[ FD ]
Line_17 $$ if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) -->Line_17 $$ if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) [ CD ]
Line_17 $$ if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) -->Line_17 $$ if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) [ CD ]
Line_17 $$ if (!DEFAULT_OUTPUT_FOLDER.equals(fitResults.getText())) -->Line_18 $$ DefaultFolderProperties.setDefinedOutputLocation(project, fitResults.getText())[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_18 $$ DefaultFolderProperties.setDefinedOutputLocation(project, fitResults.getText())[ FD ]
Line_20 $$ if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) -->Line_20 $$ if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) [ CD ]
Line_20 $$ if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) -->Line_20 $$ if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) [ CD ]
Line_20 $$ if (!DEFAULT_SOURCE_FOLDER.equals(fitFixtures.getText())) -->Line_21 $$ DefaultFolderProperties.setDefinedSourceLocation(project, fitFixtures.getText())[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_21 $$ DefaultFolderProperties.setDefinedSourceLocation(project, fitFixtures.getText())[ FD ]
Line_23 $$ if (includeExamplesCheck.getSelection()) -->Line_23 $$ if (includeExamplesCheck.getSelection()) [ CD ]
Line_23 $$ if (includeExamplesCheck.getSelection()) -->Line_24 $$ copySamples(project)[ CD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_24 $$ copySamples(project)[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_27 $$ handleError(getContainer().getShell(), project, "Could not create project:" + e.getMessage())[ FD ]
Line_3 $$ IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName.getText())-->Line_30 $$ handleError(getContainer().getShell(), project, "Could not create project:" + e.getMessage())[ FD ]
Line_2 $$ public boolean finish() -->Line_33 $$ return true[ CD ]
