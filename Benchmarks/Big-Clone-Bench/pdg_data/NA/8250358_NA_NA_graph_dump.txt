Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static InputStream connect(String url) throws IOException [ CD ]
Line_2 $$ private static InputStream connect(String url) throws IOException -->Line_3 $$ int status = 0[ CD ]
Line_2 $$ private static InputStream connect(String url) throws IOException -->Line_4 $$ String currentlyActiveServer = getCurrentlyActiveServer()[ CD ]
Line_4 $$ String currentlyActiveServer = getCurrentlyActiveServer()-->Line_4 $$ String currentlyActiveServer = getCurrentlyActiveServer()[ CD ]
Line_6 $$ long begin = System.currentTimeMillis()-->Line_6 $$ long begin = System.currentTimeMillis()[ CD ]
Line_7 $$ HttpURLConnection httpConnection = (HttpURLConnection) new URL(currentlyActiveServer + url).openConnection()-->Line_8 $$ httpConnection.setConnectTimeout(connectTimeOut)[ FD ]
Line_7 $$ HttpURLConnection httpConnection = (HttpURLConnection) new URL(currentlyActiveServer + url).openConnection()-->Line_9 $$ httpConnection.setReadTimeout(readTimeOut)[ FD ]
Line_7 $$ HttpURLConnection httpConnection = (HttpURLConnection) new URL(currentlyActiveServer + url).openConnection()-->Line_10 $$ httpConnection.setRequestProperty("User-Agent", USER_AGENT)[ FD ]
Line_11 $$ InputStream in = httpConnection.getInputStream()-->Line_11 $$ InputStream in = httpConnection.getInputStream()[ CD ]
Line_7 $$ HttpURLConnection httpConnection = (HttpURLConnection) new URL(currentlyActiveServer + url).openConnection()-->Line_11 $$ InputStream in = httpConnection.getInputStream()[ FD ]
Line_3 $$ int status = 0-->Line_12 $$ status = httpConnection.getResponseCode()[ FD ]
Line_12 $$ status = httpConnection.getResponseCode()-->Line_12 $$ status = httpConnection.getResponseCode()[ FD ]
Line_12 $$ status = httpConnection.getResponseCode()-->Line_12 $$ status = httpConnection.getResponseCode()[ CD ]
Line_7 $$ HttpURLConnection httpConnection = (HttpURLConnection) new URL(currentlyActiveServer + url).openConnection()-->Line_12 $$ status = httpConnection.getResponseCode()[ FD ]
Line_3 $$ int status = 0-->Line_13 $$ if (status == 200) [ FD ]
Line_12 $$ status = httpConnection.getResponseCode()-->Line_13 $$ if (status == 200) [ FD ]
Line_13 $$ if (status == 200) -->Line_14 $$ long elapsedTime = System.currentTimeMillis() - begin[ CD ]
Line_13 $$ if (status == 200) -->Line_16 $$ if (geoNamesServerFailover != null && averageConnectTime > 5000 && !currentlyActiveServer.equals(geoNamesServerFailover)) [ CD ]
Line_16 $$ if (geoNamesServerFailover != null && averageConnectTime > 5000 && !currentlyActiveServer.equals(geoNamesServerFailover)) -->Line_16 $$ if (geoNamesServerFailover != null && averageConnectTime > 5000 && !currentlyActiveServer.equals(geoNamesServerFailover)) [ CD ]
Line_4 $$ String currentlyActiveServer = getCurrentlyActiveServer()-->Line_16 $$ if (geoNamesServerFailover != null && averageConnectTime > 5000 && !currentlyActiveServer.equals(geoNamesServerFailover)) [ FD ]
Line_16 $$ if (geoNamesServerFailover != null && averageConnectTime > 5000 && !currentlyActiveServer.equals(geoNamesServerFailover)) -->Line_17 $$ timeOfLastFailureMainServer = System.currentTimeMillis()[ CD ]
Line_13 $$ if (status == 200) -->Line_19 $$ return in[ CD ]
Line_22 $$ return tryFailoverServer(url, currentlyActiveServer, 0, e)-->Line_22 $$ return tryFailoverServer(url, currentlyActiveServer, 0, e)[ CD ]
Line_2 $$ private static InputStream connect(String url) throws IOException -->Line_22 $$ return tryFailoverServer(url, currentlyActiveServer, 0, e)[ FD ]
Line_4 $$ String currentlyActiveServer = getCurrentlyActiveServer()-->Line_22 $$ return tryFailoverServer(url, currentlyActiveServer, 0, e)[ FD ]
Line_2 $$ private static InputStream connect(String url) throws IOException -->Line_24 $$ IOException ioException = new IOException("status code " + status + " for " + url)[ CD ]
Line_2 $$ private static InputStream connect(String url) throws IOException -->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ CD ]
Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)-->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ CD ]
Line_2 $$ private static InputStream connect(String url) throws IOException -->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ FD ]
Line_4 $$ String currentlyActiveServer = getCurrentlyActiveServer()-->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ FD ]
Line_3 $$ int status = 0-->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ FD ]
Line_12 $$ status = httpConnection.getResponseCode()-->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ FD ]
Line_24 $$ IOException ioException = new IOException("status code " + status + " for " + url)-->Line_25 $$ return tryFailoverServer(url, currentlyActiveServer, status, ioException)[ FD ]
