Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) [ CD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)[ CD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_4 $$ if (eventID == -1 || nodeID == -1) [ CD ]
Line_4 $$ if (eventID == -1 || nodeID == -1) -->Line_5 $$ log.warn(EventConstants.NODE_DOWN_EVENT_UEI + " ignored - info incomplete - eventid/nodeid: " + eventID + "/" + nodeID)[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_5 $$ log.warn(EventConstants.NODE_DOWN_EVENT_UEI + " ignored - info incomplete - eventid/nodeid: " + eventID + "/" + nodeID)[ FD ]
Line_4 $$ if (eventID == -1 || nodeID == -1) -->Line_6 $$ return[ CD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_8 $$ Connection dbConn = null[ CD ]
Line_8 $$ Connection dbConn = null-->Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()[ CD ]
Line_8 $$ Connection dbConn = null-->Line_12 $$ dbConn.setAutoCommit(false)[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_12 $$ dbConn.setAutoCommit(false)[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_14 $$ log.error("Unable to change database AutoCommit to FALSE", sqle)[ FD ]
Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)-->Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)[ CD ]
Line_8 $$ Connection dbConn = null-->Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)[ FD ]
Line_18 $$ PreparedStatement openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD)-->Line_18 $$ PreparedStatement openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD)[ CD ]
Line_8 $$ Connection dbConn = null-->Line_18 $$ PreparedStatement openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD)[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_18 $$ PreparedStatement openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD)[ FD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ CD ]
Line_8 $$ Connection dbConn = null-->Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ FD ]
Line_20 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID())-->Line_20 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID())[ CD ]
Line_8 $$ Connection dbConn = null-->Line_20 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID())[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_20 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID())[ FD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ CD ]
Line_8 $$ Connection dbConn = null-->Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_22 $$ if (log.isDebugEnabled())[ FD ]
Line_22 $$ if (log.isDebugEnabled())-->Line_22 $$ if (log.isDebugEnabled())[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_22 $$ if (log.isDebugEnabled())[ FD ]
Line_22 $$ if (log.isDebugEnabled())-->Line_22 $$ log.debug("handleNodeDown: creating new outage entries...")[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_22 $$ log.debug("handleNodeDown: creating new outage entries...")[ FD ]
Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)-->Line_23 $$ activeSvcsStmt.setLong(1, nodeID)[ FD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_23 $$ activeSvcsStmt.setLong(1, nodeID)[ FD ]
Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()-->Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()[ CD ]
Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)-->Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()[ FD ]
Line_25 $$ while (activeSvcsRS.next()) -->Line_25 $$ while (activeSvcsRS.next()) [ CD ]
Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()-->Line_25 $$ while (activeSvcsRS.next()) [ FD ]
Line_25 $$ while (activeSvcsRS.next()) -->Line_26 $$ String ipAddr = activeSvcsRS.getString(1)[ CD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_26 $$ String ipAddr = activeSvcsRS.getString(1)[ CD ]
Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()-->Line_26 $$ String ipAddr = activeSvcsRS.getString(1)[ FD ]
Line_25 $$ while (activeSvcsRS.next()) -->Line_27 $$ long serviceID = activeSvcsRS.getLong(2)[ CD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_27 $$ long serviceID = activeSvcsRS.getLong(2)[ CD ]
Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()-->Line_27 $$ long serviceID = activeSvcsRS.getLong(2)[ FD ]
Line_25 $$ while (activeSvcsRS.next()) -->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ CD ]
Line_8 $$ Connection dbConn = null-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ CD ]
Line_8 $$ Connection dbConn = null-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_29 $$ if (log.isDebugEnabled())[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_29 $$ if (log.isDebugEnabled())[ FD ]
Line_29 $$ if (log.isDebugEnabled())-->Line_29 $$ if (log.isDebugEnabled())[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_29 $$ if (log.isDebugEnabled())[ FD ]
Line_29 $$ if (log.isDebugEnabled())-->Line_29 $$ log.debug("handleNodeDown: " + nodeID + "/" + ipAddr + "/" + serviceID + " already down")[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_29 $$ log.debug("handleNodeDown: " + nodeID + "/" + ipAddr + "/" + serviceID + " already down")[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_31 $$ long outageID = -1[ CD ]
Line_31 $$ long outageID = -1-->Line_31 $$ long outageID = -1[ CD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()[ CD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()[ CD ]
Line_20 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID())-->Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_33 $$ if (seqRS.next()) [ CD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_33 $$ if (seqRS.next()) [ FD ]
Line_33 $$ if (seqRS.next()) -->Line_33 $$ if (seqRS.next()) [ CD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_33 $$ if (seqRS.next()) [ FD ]
Line_33 $$ if (seqRS.next()) -->Line_34 $$ outageID = seqRS.getLong(1)[ CD ]
Line_31 $$ long outageID = -1-->Line_34 $$ outageID = seqRS.getLong(1)[ FD ]
Line_34 $$ outageID = seqRS.getLong(1)-->Line_34 $$ outageID = seqRS.getLong(1)[ FD ]
Line_34 $$ outageID = seqRS.getLong(1)-->Line_34 $$ outageID = seqRS.getLong(1)[ CD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_34 $$ outageID = seqRS.getLong(1)[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_36 $$ seqRS.close()[ CD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_36 $$ seqRS.close()[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_37 $$ newOutageWriter.setLong(1, outageID)[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_37 $$ newOutageWriter.setLong(1, outageID)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_37 $$ newOutageWriter.setLong(1, outageID)[ FD ]
Line_31 $$ long outageID = -1-->Line_37 $$ newOutageWriter.setLong(1, outageID)[ FD ]
Line_34 $$ outageID = seqRS.getLong(1)-->Line_37 $$ newOutageWriter.setLong(1, outageID)[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_38 $$ newOutageWriter.setLong(2, eventID)[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_38 $$ newOutageWriter.setLong(2, eventID)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_38 $$ newOutageWriter.setLong(2, eventID)[ FD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_38 $$ newOutageWriter.setLong(2, eventID)[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_39 $$ newOutageWriter.setLong(3, nodeID)[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_39 $$ newOutageWriter.setLong(3, nodeID)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_39 $$ newOutageWriter.setLong(3, nodeID)[ FD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_39 $$ newOutageWriter.setLong(3, nodeID)[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_40 $$ newOutageWriter.setString(4, ipAddr)[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_40 $$ newOutageWriter.setString(4, ipAddr)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_40 $$ newOutageWriter.setString(4, ipAddr)[ FD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_40 $$ newOutageWriter.setString(4, ipAddr)[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_41 $$ newOutageWriter.setLong(5, serviceID)[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_41 $$ newOutageWriter.setLong(5, serviceID)[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_41 $$ newOutageWriter.setLong(5, serviceID)[ FD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_41 $$ newOutageWriter.setLong(5, serviceID)[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_42 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime))[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_42 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime))[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_42 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime))[ FD ]
Line_2 $$ private void handleNodeDown(long eventID, long nodeID, String eventTime) -->Line_42 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime))[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_43 $$ newOutageWriter.executeUpdate()[ CD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_43 $$ newOutageWriter.executeUpdate()[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_43 $$ newOutageWriter.executeUpdate()[ FD ]
Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) -->Line_44 $$ if (log.isDebugEnabled())[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_44 $$ if (log.isDebugEnabled())[ FD ]
Line_44 $$ if (log.isDebugEnabled())-->Line_44 $$ if (log.isDebugEnabled())[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_44 $$ if (log.isDebugEnabled())[ FD ]
Line_44 $$ if (log.isDebugEnabled())-->Line_44 $$ log.debug("handleNodeDown: Recording outage for " + nodeID + "/" + ipAddr + "/" + serviceID)[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_44 $$ log.debug("handleNodeDown: Recording outage for " + nodeID + "/" + ipAddr + "/" + serviceID)[ FD ]
Line_24 $$ ResultSet activeSvcsRS = activeSvcsStmt.executeQuery()-->Line_47 $$ activeSvcsRS.close()[ FD ]
Line_8 $$ Connection dbConn = null-->Line_49 $$ dbConn.commit()[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_49 $$ dbConn.commit()[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_50 $$ if (log.isDebugEnabled())[ FD ]
Line_50 $$ if (log.isDebugEnabled())-->Line_50 $$ if (log.isDebugEnabled())[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_50 $$ if (log.isDebugEnabled())[ FD ]
Line_50 $$ if (log.isDebugEnabled())-->Line_50 $$ log.debug("Outage recorded for all active services for " + nodeID)[ CD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_50 $$ log.debug("Outage recorded for all active services for " + nodeID)[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_52 $$ log.warn("Rolling back transaction, nodeDown could not be recorded  for nodeId: " + nodeID, se)[ FD ]
Line_8 $$ Connection dbConn = null-->Line_54 $$ dbConn.rollback()[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_54 $$ dbConn.rollback()[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_56 $$ log.warn("SQL exception during rollback, reason", sqle)[ FD ]
Line_17 $$ PreparedStatement activeSvcsStmt = dbConn.prepareStatement(OutageConstants.DB_GET_ACTIVE_SERVICES_FOR_NODE)-->Line_59 $$ activeSvcsStmt.close()[ FD ]
Line_18 $$ PreparedStatement openStmt = dbConn.prepareStatement(OutageConstants.DB_OPEN_RECORD)-->Line_60 $$ openStmt.close()[ FD ]
Line_19 $$ PreparedStatement newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_61 $$ newOutageWriter.close()[ FD ]
Line_21 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE)-->Line_61 $$ newOutageWriter.close()[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_63 $$ log.warn("SQL exception while handling \'nodeDown\'", sqle)[ FD ]
Line_8 $$ Connection dbConn = null-->Line_66 $$ if (dbConn != null)[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_66 $$ if (dbConn != null)[ FD ]
Line_66 $$ if (dbConn != null)-->Line_66 $$ dbConn.close()[ CD ]
Line_8 $$ Connection dbConn = null-->Line_66 $$ dbConn.close()[ FD ]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection()-->Line_66 $$ dbConn.close()[ FD ]
Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class)-->Line_68 $$ log.warn("Exception closing JDBC connection", e)[ FD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_28 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [ FD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_33 $$ if (seqRS.next()) [ FD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_33 $$ if (seqRS.next()) [ FD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_34 $$ outageID = seqRS.getLong(1)[ FD ]
Line_32 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery()-->Line_36 $$ seqRS.close()[ FD ]
Line_31 $$ long outageID = -1-->Line_37 $$ newOutageWriter.setLong(1, outageID)[ FD ]
Line_34 $$ outageID = seqRS.getLong(1)-->Line_37 $$ newOutageWriter.setLong(1, outageID)[ FD ]
Line_26 $$ String ipAddr = activeSvcsRS.getString(1)-->Line_40 $$ newOutageWriter.setString(4, ipAddr)[ FD ]
Line_27 $$ long serviceID = activeSvcsRS.getLong(2)-->Line_41 $$ newOutageWriter.setLong(5, serviceID)[ FD ]
