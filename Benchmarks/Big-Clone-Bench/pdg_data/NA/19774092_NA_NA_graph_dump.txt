Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute() [ CD ]
Line_2 $$ public void execute() -->Line_3 $$ checkInput()[ CD ]
Line_11 $$ if (!client.login(username, password)) -->Line_11 $$ if (!client.login(username, password)) [ CD ]
Line_11 $$ if (!client.login(username, password)) -->Line_11 $$ if (!client.login(username, password)) [ CD ]
Line_11 $$ if (!client.login(username, password)) -->Line_12 $$ log("Login failed: " + client.getReplyString(), Project.MSG_ERR)[ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) [ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) [ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_22 $$ remoteFilePatterns = makePattern(remoteFileStrings[i])[ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_24 $$ log("Setting number of directories to: " + numDir, Project.MSG_VERBOSE)[ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)[ CD ]
Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)-->Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)[ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_26 $$ files = followSymLink(client, files)[ CD ]
Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)-->Line_26 $$ files = followSymLink(client, files)[ FD ]
Line_26 $$ files = followSymLink(client, files)-->Line_26 $$ files = followSymLink(client, files)[ FD ]
Line_26 $$ files = followSymLink(client, files)-->Line_26 $$ files = followSymLink(client, files)[ CD ]
Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)-->Line_26 $$ files = followSymLink(client, files)[ FD ]
Line_26 $$ files = followSymLink(client, files)-->Line_26 $$ files = followSymLink(client, files)[ FD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_27 $$ log("# of files in " + remoteDir + " is " + files.length, Project.MSG_VERBOSE)[ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_28 $$ scanDir(0, numDir, files, null)[ CD ]
Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)-->Line_28 $$ scanDir(0, numDir, files, null)[ FD ]
Line_26 $$ files = followSymLink(client, files)-->Line_28 $$ scanDir(0, numDir, files, null)[ FD ]
Line_33 $$ if (client.isConnected()) -->Line_33 $$ if (client.isConnected()) [ CD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) -->Line_21 $$ for (int i = 0; i < remoteFileStrings.length; i++) [ FD ]
Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)-->Line_26 $$ files = followSymLink(client, files)[ FD ]
Line_26 $$ files = followSymLink(client, files)-->Line_26 $$ files = followSymLink(client, files)[ FD ]
Line_25 $$ FTPFile[] files = client.listFiles(remoteDir)-->Line_28 $$ scanDir(0, numDir, files, null)[ FD ]
Line_26 $$ files = followSymLink(client, files)-->Line_28 $$ scanDir(0, numDir, files, null)[ FD ]
