Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) [ CD ]
Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) -->Line_5 $$ if (url == null)[ FD ]
Line_5 $$ if (url == null)-->Line_5 $$ return[ CD ]
Line_6 $$ InputStream in = url.openStream()-->Line_6 $$ InputStream in = url.openStream()[ CD ]
Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) -->Line_6 $$ InputStream in = url.openStream()[ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_9 $$ while ((strLine = br.readLine()) != null) [ FD ]
Line_8 $$ String strLine-->Line_9 $$ while ((strLine = br.readLine()) != null) [ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_9 $$ while ((strLine = br.readLine()) != null) [ CD ]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(in, "UTF8"))-->Line_9 $$ while ((strLine = br.readLine()) != null) [ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_10 $$ strLine = strLine.trim()[ CD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_8 $$ String strLine-->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_10 $$ strLine = strLine.trim()[ CD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_8 $$ String strLine-->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_12 $$ if (slm != null) [ CD ]
Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) -->Line_12 $$ if (slm != null) [ FD ]
Line_12 $$ if (slm != null) -->Line_13 $$ Display.getDefault().syncExec(new Runnable() [ CD ]
Line_13 $$ Display.getDefault().syncExec(new Runnable() -->Line_15 $$ slm.setMessage(_("Importing country code " + i))[ CD ]
Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) -->Line_15 $$ slm.setMessage(_("Importing country code " + i))[ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ CD ]
Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ CD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_8 $$ String strLine-->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ CD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_8 $$ String strLine-->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) -->Line_20 $$ String parts[] = strLine.split("=", 2)[ CD ]
Line_20 $$ String parts[] = strLine.split("=", 2)-->Line_20 $$ String parts[] = strLine.split("=", 2)[ CD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_20 $$ String parts[] = strLine.split("=", 2)[ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_20 $$ String parts[] = strLine.split("=", 2)[ FD ]
Line_8 $$ String strLine-->Line_20 $$ String parts[] = strLine.split("=", 2)[ FD ]
Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) -->Line_21 $$ if (parts.length == 2) [ CD ]
Line_21 $$ if (parts.length == 2) -->Line_22 $$ String key = parts[0].trim()[ CD ]
Line_22 $$ String key = parts[0].trim()-->Line_22 $$ String key = parts[0].trim()[ CD ]
Line_21 $$ if (parts.length == 2) -->Line_23 $$ String value = parts[1].trim()[ CD ]
Line_23 $$ String value = parts[1].trim()-->Line_23 $$ String value = parts[1].trim()[ CD ]
Line_21 $$ if (parts.length == 2) -->Line_24 $$ key = DataUtils.replaceAllAccentedChars(key).toUpperCase()[ CD ]
Line_22 $$ String key = parts[0].trim()-->Line_24 $$ key = DataUtils.replaceAllAccentedChars(key).toUpperCase()[ FD ]
Line_21 $$ if (parts.length == 2) -->Line_25 $$ DataSetList newListEntry = new DataSetList(category, key, value)[ CD ]
Line_21 $$ if (parts.length == 2) -->Line_26 $$ list.addNewDataSetIfNew(newListEntry)[ CD ]
Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) -->Line_26 $$ list.addNewDataSetIfNew(newListEntry)[ FD ]
Line_25 $$ DataSetList newListEntry = new DataSetList(category, key, value)-->Line_26 $$ list.addNewDataSetIfNew(newListEntry)[ FD ]
Line_6 $$ InputStream in = url.openStream()-->Line_30 $$ in.close()[ FD ]
Line_2 $$ private static void loadListFromRecouces(String category, URL url, DataSetArray<DataSetList> list, final StatusLineManager slm) -->Line_32 $$ Logger.logError(e, "Error loading " + url.getFile())[ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_10 $$ strLine = strLine.trim()[ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_19 $$ if (!strLine.isEmpty() && !strLine.startsWith("#")) [ FD ]
Line_9 $$ while ((strLine = br.readLine()) != null) -->Line_20 $$ String parts[] = strLine.split("=", 2)[ FD ]
Line_10 $$ strLine = strLine.trim()-->Line_20 $$ String parts[] = strLine.split("=", 2)[ FD ]
Line_22 $$ String key = parts[0].trim()-->Line_24 $$ key = DataUtils.replaceAllAccentedChars(key).toUpperCase()[ FD ]
Line_25 $$ DataSetList newListEntry = new DataSetList(category, key, value)-->Line_26 $$ list.addNewDataSetIfNew(newListEntry)[ FD ]
