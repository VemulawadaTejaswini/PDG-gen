Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException [ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_3 $$ Properties props = new Properties()[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_4 $$ Collection<Pod> pods = curnit.getReferencedPods()[ CD ]
Line_4 $$ Collection<Pod> pods = curnit.getReferencedPods()-->Line_4 $$ Collection<Pod> pods = curnit.getReferencedPods()[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_4 $$ Collection<Pod> pods = curnit.getReferencedPods()[ FD ]
Line_6 $$ PodUuid podId = pod.getPodId()-->Line_6 $$ PodUuid podId = pod.getPodId()[ CD ]
Line_5 $$ for (Pod pod : pods) -->Line_6 $$ PodUuid podId = pod.getPodId()[ FD ]
Line_7 $$ URL weburl = PodArchiveResolver.getSystemResolver().getUrl(podId)-->Line_7 $$ URL weburl = PodArchiveResolver.getSystemResolver().getUrl(podId)[ CD ]
Line_6 $$ PodUuid podId = pod.getPodId()-->Line_7 $$ URL weburl = PodArchiveResolver.getSystemResolver().getUrl(podId)[ FD ]
Line_7 $$ URL weburl = PodArchiveResolver.getSystemResolver().getUrl(podId)-->Line_9 $$ if (weburl != null) [ FD ]
Line_9 $$ if (weburl != null) -->Line_10 $$ String uriPath = weburl.getPath()[ CD ]
Line_10 $$ String uriPath = weburl.getPath()-->Line_10 $$ String uriPath = weburl.getPath()[ CD ]
Line_7 $$ URL weburl = PodArchiveResolver.getSystemResolver().getUrl(podId)-->Line_10 $$ String uriPath = weburl.getPath()[ FD ]
Line_9 $$ if (weburl != null) -->Line_11 $$ String zipPath = CurnitFile.WITHINCURNIT_BASEPATH + uriPath[ CD ]
Line_9 $$ if (weburl != null) -->Line_12 $$ jarout.putNextEntry(new JarEntry(zipPath))[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_12 $$ jarout.putNextEntry(new JarEntry(zipPath))[ FD ]
Line_9 $$ if (weburl != null) -->Line_13 $$ IOUtils.copy(weburl.openStream(), jarout)[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_13 $$ IOUtils.copy(weburl.openStream(), jarout)[ FD ]
Line_7 $$ URL weburl = PodArchiveResolver.getSystemResolver().getUrl(podId)-->Line_13 $$ IOUtils.copy(weburl.openStream(), jarout)[ FD ]
Line_9 $$ if (weburl != null) -->Line_14 $$ jarout.closeEntry()[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_14 $$ jarout.closeEntry()[ FD ]
Line_9 $$ if (weburl != null) -->Line_15 $$ urlString = CurnitFile.WITHINCURNIT_PROTOCOL + uriPath[ CD ]
Line_8 $$ String urlString = ""-->Line_15 $$ urlString = CurnitFile.WITHINCURNIT_PROTOCOL + uriPath[ FD ]
Line_15 $$ urlString = CurnitFile.WITHINCURNIT_PROTOCOL + uriPath-->Line_15 $$ urlString = CurnitFile.WITHINCURNIT_PROTOCOL + uriPath[ FD ]
Line_10 $$ String uriPath = weburl.getPath()-->Line_15 $$ urlString = CurnitFile.WITHINCURNIT_PROTOCOL + uriPath[ FD ]
Line_3 $$ Properties props = new Properties()-->Line_17 $$ props.put(podId.toString(), urlString)[ FD ]
Line_8 $$ String urlString = ""-->Line_17 $$ props.put(podId.toString(), urlString)[ FD ]
Line_15 $$ urlString = CurnitFile.WITHINCURNIT_PROTOCOL + uriPath-->Line_17 $$ props.put(podId.toString(), urlString)[ FD ]
Line_6 $$ PodUuid podId = pod.getPodId()-->Line_17 $$ props.put(podId.toString(), urlString)[ FD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_19 $$ jarout.putNextEntry(new JarEntry(CurnitFile.PODSREFERENCED_NAME))[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_19 $$ jarout.putNextEntry(new JarEntry(CurnitFile.PODSREFERENCED_NAME))[ FD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_20 $$ props.store(jarout, "pod dependencies")[ CD ]
Line_3 $$ Properties props = new Properties()-->Line_20 $$ props.store(jarout, "pod dependencies")[ FD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_20 $$ props.store(jarout, "pod dependencies")[ FD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_21 $$ jarout.closeEntry()[ CD ]
Line_2 $$ private static void includePodDependencies(Curnit curnit, JarOutputStream jarout) throws IOException -->Line_21 $$ jarout.closeEntry()[ FD ]
