Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable [ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()[ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_4 $$ con.setRequestMethod("GET")[ CD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_4 $$ con.setRequestMethod("GET")[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_5 $$ con.setDoInput(true)[ CD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_5 $$ con.setDoInput(true)[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_6 $$ if (username != null || password != null) [ CD ]
Line_6 $$ if (username != null || password != null) -->Line_7 $$ byte[] encodedPassword = (username + ":" + password).getBytes()[ CD ]
Line_7 $$ byte[] encodedPassword = (username + ":" + password).getBytes()-->Line_7 $$ byte[] encodedPassword = (username + ":" + password).getBytes()[ CD ]
Line_6 $$ if (username != null || password != null) -->Line_8 $$ BASE64Encoder encoder = new BASE64Encoder()[ CD ]
Line_6 $$ if (username != null || password != null) -->Line_9 $$ con.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ CD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_9 $$ con.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_8 $$ BASE64Encoder encoder = new BASE64Encoder()-->Line_9 $$ con.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_7 $$ byte[] encodedPassword = (username + ":" + password).getBytes()-->Line_9 $$ con.setRequestProperty("Authorization", "Basic " + encoder.encode(encodedPassword))[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_11 $$ if (headers != null) [ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_11 $$ if (headers != null) [ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_12 $$ for (Map.Entry<String, String> header : headers.entrySet()) [ FD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_13 $$ con.setRequestProperty(header.getKey(), header.getValue())[ FD ]
Line_12 $$ for (Map.Entry<String, String> header : headers.entrySet()) -->Line_13 $$ con.setRequestProperty(header.getKey(), header.getValue())[ FD ]
Line_12 $$ for (Map.Entry<String, String> header : headers.entrySet()) -->Line_13 $$ con.setRequestProperty(header.getKey(), header.getValue())[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_16 $$ con.setConnectTimeout(timeout)[ CD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_16 $$ con.setConnectTimeout(timeout)[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_16 $$ con.setConnectTimeout(timeout)[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_17 $$ InputStream is = con.getInputStream()[ CD ]
Line_17 $$ InputStream is = con.getInputStream()-->Line_17 $$ InputStream is = con.getInputStream()[ CD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_17 $$ InputStream is = con.getInputStream()[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is))[ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_19 $$ String line[ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_20 $$ StringBuffer response = new StringBuffer()[ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_21 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable [ CD ]
Line_21 $$ while ((line = rd.readLine()) != null) -->Line_21 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_19 $$ String line-->Line_21 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_21 $$ while ((line = rd.readLine()) != null) -->Line_21 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is))-->Line_21 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_21 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ response.append(line)[ CD ]
Line_20 $$ StringBuffer response = new StringBuffer()-->Line_22 $$ response.append(line)[ FD ]
Line_21 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ response.append(line)[ FD ]
Line_19 $$ String line-->Line_22 $$ response.append(line)[ FD ]
Line_21 $$ while ((line = rd.readLine()) != null) -->Line_23 $$ response.append('\n')[ CD ]
Line_20 $$ StringBuffer response = new StringBuffer()-->Line_23 $$ response.append('\n')[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_25 $$ rd.close()[ CD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is))-->Line_25 $$ rd.close()[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_26 $$ is.close()[ CD ]
Line_17 $$ InputStream is = con.getInputStream()-->Line_26 $$ is.close()[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_27 $$ con.disconnect()[ CD ]
Line_3 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_27 $$ con.disconnect()[ FD ]
Line_2 $$ public static String doGetWithBasicAuthentication(URL url, String username, String password, int timeout, Map<String, String> headers) throws Throwable -->Line_28 $$ return response.toString()[ CD ]
Line_28 $$ return response.toString()-->Line_28 $$ return response.toString()[ CD ]
Line_20 $$ StringBuffer response = new StringBuffer()-->Line_28 $$ return response.toString()[ FD ]
Line_21 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ response.append(line)[ FD ]
