Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) [ CD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_3 $$ SSLHttpClient client = new SSLHttpClient()[ CD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_4 $$ client.getCredentialsProvider().setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ CD ]
Line_3 $$ SSLHttpClient client = new SSLHttpClient()-->Line_4 $$ client.getCredentialsProvider().setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_4 $$ client.getCredentialsProvider().setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_4 $$ client.getCredentialsProvider().setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_5 $$ HttpGet get = new HttpGet(uri)[ CD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_6 $$ get.addHeader("Accept", "application/xml")[ CD ]
Line_5 $$ HttpGet get = new HttpGet(uri)-->Line_6 $$ get.addHeader("Accept", "application/xml")[ FD ]
Line_8 $$ HttpResponse response = client.execute(get)-->Line_8 $$ HttpResponse response = client.execute(get)[ CD ]
Line_3 $$ SSLHttpClient client = new SSLHttpClient()-->Line_8 $$ HttpResponse response = client.execute(get)[ FD ]
Line_5 $$ HttpGet get = new HttpGet(uri)-->Line_8 $$ HttpResponse response = client.execute(get)[ FD ]
Line_9 $$ int code = response.getStatusLine().getStatusCode()-->Line_9 $$ int code = response.getStatusLine().getStatusCode()[ CD ]
Line_8 $$ HttpResponse response = client.execute(get)-->Line_9 $$ int code = response.getStatusLine().getStatusCode()[ FD ]
Line_9 $$ int code = response.getStatusLine().getStatusCode()-->Line_10 $$ if (code == HttpStatus.SC_OK) [ FD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_11 $$ final InputStream is = response.getEntity().getContent()[ CD ]
Line_11 $$ final InputStream is = response.getEntity().getContent()-->Line_11 $$ final InputStream is = response.getEntity().getContent()[ CD ]
Line_8 $$ HttpResponse response = client.execute(get)-->Line_11 $$ final InputStream is = response.getEntity().getContent()[ FD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_12 $$ final XmlPullParserFactory factory = XmlPullParserFactory.newInstance()[ CD ]
Line_12 $$ final XmlPullParserFactory factory = XmlPullParserFactory.newInstance()-->Line_12 $$ final XmlPullParserFactory factory = XmlPullParserFactory.newInstance()[ CD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_13 $$ factory.setNamespaceAware(true)[ CD ]
Line_12 $$ final XmlPullParserFactory factory = XmlPullParserFactory.newInstance()-->Line_13 $$ factory.setNamespaceAware(true)[ FD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_14 $$ final XmlPullParser parser = factory.newPullParser()[ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_14 $$ final XmlPullParser parser = factory.newPullParser()[ CD ]
Line_12 $$ final XmlPullParserFactory factory = XmlPullParserFactory.newInstance()-->Line_14 $$ final XmlPullParser parser = factory.newPullParser()[ FD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_15 $$ parser.setInput(is, null)[ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_15 $$ parser.setInput(is, null)[ FD ]
Line_11 $$ final InputStream is = response.getEntity().getContent()-->Line_15 $$ parser.setInput(is, null)[ FD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_16 $$ while (parser.next() != XmlPullParser.END_DOCUMENT && !controller.stopped()) [ CD ]
Line_10 $$ if (code == HttpStatus.SC_OK) -->Line_10 $$ if (code == HttpStatus.SC_OK) [ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_16 $$ while (parser.next() != XmlPullParser.END_DOCUMENT && !controller.stopped()) [ FD ]
Line_16 $$ while (parser.next() != XmlPullParser.END_DOCUMENT && !controller.stopped()) -->Line_16 $$ while (parser.next() != XmlPullParser.END_DOCUMENT && !controller.stopped()) [ CD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_16 $$ while (parser.next() != XmlPullParser.END_DOCUMENT && !controller.stopped()) [ FD ]
Line_16 $$ while (parser.next() != XmlPullParser.END_DOCUMENT && !controller.stopped()) -->Line_17 $$ if (parser.getEventType() == XmlPullParser.START_TAG) [ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_17 $$ if (parser.getEventType() == XmlPullParser.START_TAG) [ FD ]
Line_17 $$ if (parser.getEventType() == XmlPullParser.START_TAG) -->Line_18 $$ String name = parser.getName()[ CD ]
Line_18 $$ String name = parser.getName()-->Line_18 $$ String name = parser.getName()[ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_18 $$ String name = parser.getName()[ FD ]
Line_17 $$ if (parser.getEventType() == XmlPullParser.START_TAG) -->Line_19 $$ if (mEntity.equals(name)) [ CD ]
Line_18 $$ String name = parser.getName()-->Line_19 $$ if (mEntity.equals(name)) [ FD ]
Line_19 $$ if (mEntity.equals(name)) -->Line_19 $$ if (mEntity.equals(name)) [ CD ]
Line_18 $$ String name = parser.getName()-->Line_19 $$ if (mEntity.equals(name)) [ FD ]
Line_19 $$ if (mEntity.equals(name)) -->Line_20 $$ String id = parser.getAttributeValue(null, "id")[ CD ]
Line_20 $$ String id = parser.getAttributeValue(null, "id")-->Line_20 $$ String id = parser.getAttributeValue(null, "id")[ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_20 $$ String id = parser.getAttributeValue(null, "id")[ FD ]
Line_19 $$ if (mEntity.equals(name)) -->Line_21 $$ if (id != null) [ CD ]
Line_20 $$ String id = parser.getAttributeValue(null, "id")-->Line_21 $$ if (id != null) [ FD ]
Line_21 $$ if (id != null) -->Line_22 $$ Item item = new Item(id, parser.nextText())[ CD ]
Line_14 $$ final XmlPullParser parser = factory.newPullParser()-->Line_22 $$ Item item = new Item(id, parser.nextText())[ FD ]
Line_21 $$ if (id != null) -->Line_23 $$ controller.receiveItem(item)[ CD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_23 $$ controller.receiveItem(item)[ FD ]
Line_22 $$ Item item = new Item(id, parser.nextText())-->Line_23 $$ controller.receiveItem(item)[ FD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_30 $$ controller.error()[ FD ]
Line_2 $$ private boolean request(URI uri, Controller controller, String login, String password) -->Line_33 $$ return true[ CD ]
Line_18 $$ String name = parser.getName()-->Line_19 $$ if (mEntity.equals(name)) [ FD ]
Line_18 $$ String name = parser.getName()-->Line_19 $$ if (mEntity.equals(name)) [ FD ]
Line_20 $$ String id = parser.getAttributeValue(null, "id")-->Line_21 $$ if (id != null) [ FD ]
Line_22 $$ Item item = new Item(id, parser.nextText())-->Line_23 $$ controller.receiveItem(item)[ FD ]
