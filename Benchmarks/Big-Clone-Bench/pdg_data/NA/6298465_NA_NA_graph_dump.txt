Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File in, File out) throws IOException [ CD ]
Line_2 $$ public static void copyFile(File in, File out) throws IOException -->Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()[ CD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()[ CD ]
Line_2 $$ public static void copyFile(File in, File out) throws IOException -->Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()[ CD ]
Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()[ CD ]
Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) -->Line_7 $$ int maxCount = (64 * 1024 * 1024) - (32 * 1024)[ CD ]
Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) -->Line_8 $$ long size = inChannel.size()[ CD ]
Line_8 $$ long size = inChannel.size()-->Line_8 $$ long size = inChannel.size()[ CD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_8 $$ long size = inChannel.size()[ FD ]
Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) -->Line_9 $$ long position = 0[ CD ]
Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) -->Line_10 $$ while (position < size) [ CD ]
Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) -->Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) [ CD ]
Line_9 $$ long position = 0-->Line_10 $$ while (position < size) [ FD ]
Line_8 $$ long size = inChannel.size()-->Line_10 $$ while (position < size) [ FD ]
Line_10 $$ while (position < size) -->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ CD ]
Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_9 $$ long position = 0-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ CD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_9 $$ long position = 0-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_7 $$ int maxCount = (64 * 1024 * 1024) - (32 * 1024)-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_6 $$ if (System.getProperty("os.name").toUpperCase().indexOf("WIN") != -1) -->Line_14 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ CD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_14 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_14 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_14 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_17 $$ if (inChannel != null)[ FD ]
Line_3 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_18 $$ inChannel.close()[ FD ]
Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_22 $$ if (outChannel != null)[ FD ]
Line_4 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_23 $$ outChannel.close()[ FD ]
Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_10 $$ while (position < size) [ FD ]
Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_10 $$ while (position < size) [ FD ]
Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_11 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
