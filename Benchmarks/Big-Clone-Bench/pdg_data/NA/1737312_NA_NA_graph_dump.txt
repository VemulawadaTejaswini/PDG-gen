Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void sendPOIGpxLocation() [ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_3 $$ this.myloc = new Position(45.56, 5.9)[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_4 $$ this.left = myloc.getY() - 0.025[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_5 $$ this.right = myloc.getY() + 0.025[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_6 $$ this.top = myloc.getX() + 0.03[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_7 $$ this.bottom = myloc.getX() - 0.03[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_8 $$ assertEquals("left test", left, (5.9 - 0.025))[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_9 $$ assertEquals("right test", right, (5.9 + 0.025))[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_10 $$ assertEquals("top test", top, (45.56 - 0.025))[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_11 $$ assertEquals("bottom test", left, (45.56 + 0.025))[ CD ]
Line_2 $$ public void sendPOIGpxLocation() -->Line_12 $$ this.poisCheck.add("amenity")[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_15 $$ model.setPointsOfInterest(new Items())[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_17 $$ this.url = new URL("http://www.informationfreeway.org/api/0.6/node[" + poisCheck.get(0) + "=*][bbox=" + left + "," + bottom + "," + right + "," + top + "]")[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_18 $$ assertEquals("url informationfreeway.org test", url, "http://www.informationfreeway.org/api/0.6/node[amenity=*]" + "[bbox=" + left + "," + bottom + "," + right + "," + top + "]")[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_19 $$ SAXParser pars = null[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_20 $$ ParsePoiGpx gpxHandler = new ParsePoiGpx(poisCheck, this.model.getContext())[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()[ CD ]
Line_19 $$ SAXParser pars = null-->Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()[ FD ]
Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()-->Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()[ FD ]
Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()-->Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_22 $$ pars.getXMLReader().setFeature("http://xml.org/sax/features/namespaces", true)[ CD ]
Line_19 $$ SAXParser pars = null-->Line_22 $$ pars.getXMLReader().setFeature("http://xml.org/sax/features/namespaces", true)[ FD ]
Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()-->Line_22 $$ pars.getXMLReader().setFeature("http://xml.org/sax/features/namespaces", true)[ FD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_23 $$ pars.parse(url.openStream(), gpxHandler)[ CD ]
Line_19 $$ SAXParser pars = null-->Line_23 $$ pars.parse(url.openStream(), gpxHandler)[ FD ]
Line_21 $$ pars = SAXParserFactory.newInstance().newSAXParser()-->Line_23 $$ pars.parse(url.openStream(), gpxHandler)[ FD ]
Line_20 $$ ParsePoiGpx gpxHandler = new ParsePoiGpx(poisCheck, this.model.getContext())-->Line_23 $$ pars.parse(url.openStream(), gpxHandler)[ FD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_24 $$ this.pois = gpxHandler.getPOIResultsItems()[ CD ]
Line_24 $$ this.pois = gpxHandler.getPOIResultsItems()-->Line_24 $$ this.pois = gpxHandler.getPOIResultsItems()[ CD ]
Line_20 $$ ParsePoiGpx gpxHandler = new ParsePoiGpx(poisCheck, this.model.getContext())-->Line_24 $$ this.pois = gpxHandler.getPOIResultsItems()[ FD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_25 $$ assertTrue("there is some pois", !this.pois.equals(0))[ CD ]
Line_25 $$ assertTrue("there is some pois", !this.pois.equals(0))-->Line_25 $$ assertTrue("there is some pois", !this.pois.equals(0))[ CD ]
Line_14 $$ if (this.poisCheck.get(0).compareTo("None") == 0) -->Line_26 $$ assertFalse("there is some pois", this.pois.equals(0))[ CD ]
Line_30 $$ assertFalse(!e.getCause().equals(null))-->Line_30 $$ assertFalse(!e.getCause().equals(null))[ CD ]
