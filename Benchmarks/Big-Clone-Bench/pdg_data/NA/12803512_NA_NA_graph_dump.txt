Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException [ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_3 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_3 $$ if (LOGGER.isDebugEnabled()) -->Line_3 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_3 $$ if (LOGGER.isDebugEnabled()) -->Line_4 $$ String serverName = null[ CD ]
Line_3 $$ if (LOGGER.isDebugEnabled()) -->Line_5 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) [ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_5 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) [ FD ]
Line_5 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) -->Line_6 $$ serverName = "fedora"[ CD ]
Line_4 $$ String serverName = null-->Line_6 $$ serverName = "fedora"[ FD ]
Line_6 $$ serverName = "fedora"-->Line_6 $$ serverName = "fedora"[ FD ]
Line_5 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) -->Line_7 $$ if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) [ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_7 $$ if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) [ FD ]
Line_7 $$ if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) -->Line_8 $$ serverName = "kramerius"[ CD ]
Line_4 $$ String serverName = null-->Line_8 $$ serverName = "kramerius"[ FD ]
Line_6 $$ serverName = "fedora"-->Line_8 $$ serverName = "kramerius"[ FD ]
Line_8 $$ serverName = "kramerius"-->Line_8 $$ serverName = "kramerius"[ FD ]
Line_3 $$ if (LOGGER.isDebugEnabled()) -->Line_10 $$ LOGGER.debug("Processing action: CheckAvailability: " + serverName)[ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_12 $$ ServerUtils.checkExpiredSession(httpSessionProvider)[ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_13 $$ boolean status = true[ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_14 $$ String url = null[ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_15 $$ String usr = ""[ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_16 $$ String pass = ""[ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_17 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) [ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_17 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) [ FD ]
Line_17 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) -->Line_18 $$ url = configuration.getFedoraHost()[ CD ]
Line_14 $$ String url = null-->Line_18 $$ url = configuration.getFedoraHost()[ FD ]
Line_18 $$ url = configuration.getFedoraHost()-->Line_18 $$ url = configuration.getFedoraHost()[ FD ]
Line_18 $$ url = configuration.getFedoraHost()-->Line_18 $$ url = configuration.getFedoraHost()[ CD ]
Line_17 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) -->Line_19 $$ usr = configuration.getFedoraLogin()[ CD ]
Line_15 $$ String usr = ""-->Line_19 $$ usr = configuration.getFedoraLogin()[ FD ]
Line_19 $$ usr = configuration.getFedoraLogin()-->Line_19 $$ usr = configuration.getFedoraLogin()[ FD ]
Line_19 $$ usr = configuration.getFedoraLogin()-->Line_19 $$ usr = configuration.getFedoraLogin()[ CD ]
Line_17 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) -->Line_20 $$ pass = configuration.getFedoraPassword()[ CD ]
Line_16 $$ String pass = ""-->Line_20 $$ pass = configuration.getFedoraPassword()[ FD ]
Line_20 $$ pass = configuration.getFedoraPassword()-->Line_20 $$ pass = configuration.getFedoraPassword()[ FD ]
Line_20 $$ pass = configuration.getFedoraPassword()-->Line_20 $$ pass = configuration.getFedoraPassword()[ CD ]
Line_17 $$ if (action.getServerId() == CheckAvailability.FEDORA_ID) -->Line_21 $$ if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) [ CD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_21 $$ if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) [ FD ]
Line_21 $$ if (action.getServerId() == CheckAvailability.KRAMERIUS_ID) -->Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE[ CD ]
Line_14 $$ String url = null-->Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE[ FD ]
Line_18 $$ url = configuration.getFedoraHost()-->Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE[ FD ]
Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE-->Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE[ FD ]
Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE-->Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE[ CD ]
Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ CD ]
Line_14 $$ String url = null-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_18 $$ url = configuration.getFedoraHost()-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_22 $$ url = configuration.getKrameriusHost() + SOME_STATIC_KRAMERIUS_PAGE-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_15 $$ String usr = ""-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_19 $$ usr = configuration.getFedoraLogin()-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_16 $$ String pass = ""-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_20 $$ pass = configuration.getFedoraPassword()-->Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)[ FD ]
Line_27 $$ URLConnection con = RESTHelper.openConnection(url, usr, pass, false)-->Line_28 $$ if (con instanceof HttpURLConnection) [ FD ]
Line_28 $$ if (con instanceof HttpURLConnection) -->Line_29 $$ HttpURLConnection httpConnection = (HttpURLConnection) con[ CD ]
Line_28 $$ if (con instanceof HttpURLConnection) -->Line_30 $$ int resp = httpConnection.getResponseCode()[ CD ]
Line_30 $$ int resp = httpConnection.getResponseCode()-->Line_30 $$ int resp = httpConnection.getResponseCode()[ CD ]
Line_29 $$ HttpURLConnection httpConnection = (HttpURLConnection) con-->Line_30 $$ int resp = httpConnection.getResponseCode()[ FD ]
Line_28 $$ if (con instanceof HttpURLConnection) -->Line_31 $$ if (resp < 200 || resp >= 308) [ CD ]
Line_31 $$ if (resp < 200 || resp >= 308) -->Line_32 $$ status = false[ CD ]
Line_13 $$ boolean status = true-->Line_32 $$ status = false[ FD ]
Line_32 $$ status = false-->Line_32 $$ status = false[ FD ]
Line_31 $$ if (resp < 200 || resp >= 308) -->Line_33 $$ LOGGER.info("Server " + url + " answered with HTTP code " + httpConnection.getResponseCode())[ CD ]
Line_29 $$ HttpURLConnection httpConnection = (HttpURLConnection) con-->Line_33 $$ LOGGER.info("Server " + url + " answered with HTTP code " + httpConnection.getResponseCode())[ FD ]
Line_28 $$ if (con instanceof HttpURLConnection) -->Line_36 $$ status = false[ CD ]
Line_13 $$ boolean status = true-->Line_36 $$ status = false[ FD ]
Line_32 $$ status = false-->Line_36 $$ status = false[ FD ]
Line_36 $$ status = false-->Line_36 $$ status = false[ FD ]
Line_13 $$ boolean status = true-->Line_39 $$ status = false[ FD ]
Line_32 $$ status = false-->Line_39 $$ status = false[ FD ]
Line_36 $$ status = false-->Line_39 $$ status = false[ FD ]
Line_39 $$ status = false-->Line_39 $$ status = false[ FD ]
Line_13 $$ boolean status = true-->Line_42 $$ status = false[ FD ]
Line_32 $$ status = false-->Line_42 $$ status = false[ FD ]
Line_36 $$ status = false-->Line_42 $$ status = false[ FD ]
Line_39 $$ status = false-->Line_42 $$ status = false[ FD ]
Line_42 $$ status = false-->Line_42 $$ status = false[ FD ]
Line_2 $$ public CheckAvailabilityResult execute(final CheckAvailabilityAction action, final ExecutionContext context) throws ActionException -->Line_45 $$ return new CheckAvailabilityResult(status, url)[ CD ]
