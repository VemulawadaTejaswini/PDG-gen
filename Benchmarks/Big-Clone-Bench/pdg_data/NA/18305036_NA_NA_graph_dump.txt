Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected Drawing construct() throws IOException [ CD ]
Line_2 $$ protected Drawing construct() throws IOException -->Line_3 $$ Drawing result[ CD ]
Line_2 $$ protected Drawing construct() throws IOException -->Line_4 $$ System.out.println("getParameter.datafile:" + getParameter("datafile"))[ CD ]
Line_2 $$ protected Drawing construct() throws IOException -->Line_5 $$ if (getParameter("data") != null) [ CD ]
Line_5 $$ if (getParameter("data") != null) -->Line_6 $$ NanoXMLDOMInput domi = new NanoXMLDOMInput(new NetFactory(), new StringReader(getParameter("data")))[ CD ]
Line_5 $$ if (getParameter("data") != null) -->Line_7 $$ result = (Drawing) domi.readObject(0)[ CD ]
Line_3 $$ Drawing result-->Line_7 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_7 $$ result = (Drawing) domi.readObject(0)-->Line_7 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_6 $$ NanoXMLDOMInput domi = new NanoXMLDOMInput(new NetFactory(), new StringReader(getParameter("data")))-->Line_7 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_5 $$ if (getParameter("data") != null) -->Line_8 $$ if (getParameter("datafile") != null) [ CD ]
Line_8 $$ if (getParameter("datafile") != null) -->Line_9 $$ URL url = new URL(getDocumentBase(), getParameter("datafile"))[ CD ]
Line_8 $$ if (getParameter("datafile") != null) -->Line_10 $$ InputStream in = url.openConnection().getInputStream()[ CD ]
Line_10 $$ InputStream in = url.openConnection().getInputStream()-->Line_10 $$ InputStream in = url.openConnection().getInputStream()[ CD ]
Line_9 $$ URL url = new URL(getDocumentBase(), getParameter("datafile"))-->Line_10 $$ InputStream in = url.openConnection().getInputStream()[ FD ]
Line_3 $$ Drawing result-->Line_13 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_7 $$ result = (Drawing) domi.readObject(0)-->Line_13 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_13 $$ result = (Drawing) domi.readObject(0)-->Line_13 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_6 $$ NanoXMLDOMInput domi = new NanoXMLDOMInput(new NetFactory(), new StringReader(getParameter("data")))-->Line_13 $$ result = (Drawing) domi.readObject(0)[ FD ]
Line_10 $$ InputStream in = url.openConnection().getInputStream()-->Line_15 $$ in.close()[ FD ]
Line_8 $$ if (getParameter("datafile") != null) -->Line_18 $$ result = null[ CD ]
Line_3 $$ Drawing result-->Line_18 $$ result = null[ FD ]
Line_7 $$ result = (Drawing) domi.readObject(0)-->Line_18 $$ result = null[ FD ]
Line_13 $$ result = (Drawing) domi.readObject(0)-->Line_18 $$ result = null[ FD ]
Line_18 $$ result = null-->Line_18 $$ result = null[ FD ]
Line_2 $$ protected Drawing construct() throws IOException -->Line_20 $$ return result[ CD ]
