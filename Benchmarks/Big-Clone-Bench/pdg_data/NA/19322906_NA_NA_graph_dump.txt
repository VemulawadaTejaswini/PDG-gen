Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception [ CD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_3 $$ URL url = new URL(baseUrl + "/baseMaterialsForTypeID/1234567890")[ CD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(baseUrl + "/baseMaterialsForTypeID/1234567890")-->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_5 $$ connection.setRequestMethod("GET")[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_5 $$ connection.setRequestMethod("GET")[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_6 $$ connection.setRequestProperty("Accept", "application/json")[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_6 $$ connection.setRequestProperty("Accept", "application/json")[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_7 $$ assertThat(connection.getResponseCode(), equalTo(400))[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_7 $$ assertThat(connection.getResponseCode(), equalTo(400))[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_3 $$ URL url = new URL(baseUrl + "/baseMaterialsForTypeID/1234567890")-->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_9 $$ connection.setRequestMethod("GET")[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.setRequestMethod("GET")[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.setRequestMethod("GET")[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_10 $$ connection.setRequestProperty("Accept", "application/xml")[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_10 $$ connection.setRequestProperty("Accept", "application/xml")[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_10 $$ connection.setRequestProperty("Accept", "application/xml")[ FD ]
Line_2 $$ public void test_baseMaterialsForTypeID_NonExistingID() throws Exception -->Line_11 $$ assertThat(connection.getResponseCode(), equalTo(400))[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_11 $$ assertThat(connection.getResponseCode(), equalTo(400))[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_11 $$ assertThat(connection.getResponseCode(), equalTo(400))[ FD ]
