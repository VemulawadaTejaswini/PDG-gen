Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException [ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_3 $$ StringBuilder outStringBuilder = new StringBuilder()[ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_4 $$ if (data != null) [ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_4 $$ if (data != null) [ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_5 $$ for (Entry<String, String> entry : data.entrySet()) [ FD ]
Line_3 $$ StringBuilder outStringBuilder = new StringBuilder()-->Line_6 $$ outStringBuilder.append(URLEncoder.encode(entry.getKey(), "UTF-8"))[ FD ]
Line_5 $$ for (Entry<String, String> entry : data.entrySet()) -->Line_6 $$ outStringBuilder.append(URLEncoder.encode(entry.getKey(), "UTF-8"))[ FD ]
Line_3 $$ StringBuilder outStringBuilder = new StringBuilder()-->Line_7 $$ outStringBuilder.append("=")[ FD ]
Line_3 $$ StringBuilder outStringBuilder = new StringBuilder()-->Line_8 $$ outStringBuilder.append(URLEncoder.encode(entry.getValue(), "UTF-8"))[ FD ]
Line_5 $$ for (Entry<String, String> entry : data.entrySet()) -->Line_8 $$ outStringBuilder.append(URLEncoder.encode(entry.getValue(), "UTF-8"))[ FD ]
Line_3 $$ StringBuilder outStringBuilder = new StringBuilder()-->Line_9 $$ outStringBuilder.append("&")[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_12 $$ URL innerURL = new URL(url.toString() + "?" + outStringBuilder.toString())[ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_12 $$ URL innerURL = new URL(url.toString() + "?" + outStringBuilder.toString())[ FD ]
Line_3 $$ StringBuilder outStringBuilder = new StringBuilder()-->Line_12 $$ URL innerURL = new URL(url.toString() + "?" + outStringBuilder.toString())[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_13 $$ System.out.println("URL: " + innerURL)[ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_14 $$ URLConnection urlConnection = innerURL.openConnection()[ CD ]
Line_14 $$ URLConnection urlConnection = innerURL.openConnection()-->Line_14 $$ URLConnection urlConnection = innerURL.openConnection()[ CD ]
Line_12 $$ URL innerURL = new URL(url.toString() + "?" + outStringBuilder.toString())-->Line_14 $$ URLConnection urlConnection = innerURL.openConnection()[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_15 $$ urlConnection.connect()[ CD ]
Line_14 $$ URLConnection urlConnection = innerURL.openConnection()-->Line_15 $$ urlConnection.connect()[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_16 $$ StringBuilder inStringBuilder = new StringBuilder()[ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_17 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ CD ]
Line_14 $$ URLConnection urlConnection = innerURL.openConnection()-->Line_17 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_18 $$ Scanner inputScanner = new Scanner(urlConnection.getInputStream())[ CD ]
Line_14 $$ URLConnection urlConnection = innerURL.openConnection()-->Line_18 $$ Scanner inputScanner = new Scanner(urlConnection.getInputStream())[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_19 $$ while (inputScanner.hasNext()) [ CD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException [ CD ]
Line_19 $$ while (inputScanner.hasNext()) -->Line_19 $$ while (inputScanner.hasNext()) [ CD ]
Line_18 $$ Scanner inputScanner = new Scanner(urlConnection.getInputStream())-->Line_19 $$ while (inputScanner.hasNext()) [ FD ]
Line_19 $$ while (inputScanner.hasNext()) -->Line_20 $$ inStringBuilder.append(inputScanner.next() + " ")[ CD ]
Line_16 $$ StringBuilder inStringBuilder = new StringBuilder()-->Line_20 $$ inStringBuilder.append(inputScanner.next() + " ")[ FD ]
Line_18 $$ Scanner inputScanner = new Scanner(urlConnection.getInputStream())-->Line_20 $$ inStringBuilder.append(inputScanner.next() + " ")[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_22 $$ inputScanner.close()[ CD ]
Line_18 $$ Scanner inputScanner = new Scanner(urlConnection.getInputStream())-->Line_22 $$ inputScanner.close()[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_23 $$ reader.close()[ CD ]
Line_17 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_23 $$ reader.close()[ FD ]
Line_2 $$ public static String sendGetData(URL url, Hashtable<String, String> data) throws IOException -->Line_24 $$ return inStringBuilder.toString()[ CD ]
Line_24 $$ return inStringBuilder.toString()-->Line_24 $$ return inStringBuilder.toString()[ CD ]
Line_16 $$ StringBuilder inStringBuilder = new StringBuilder()-->Line_24 $$ return inStringBuilder.toString()[ FD ]
