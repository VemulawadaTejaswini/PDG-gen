Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException [ CD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_3 $$ StringBuilder postDataBuilder = new StringBuilder()[ CD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_4 $$ postDataBuilder.append(PARAM_REGISTRATION_ID).append("=").append(registrationId)[ CD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_4 $$ postDataBuilder.append(PARAM_REGISTRATION_ID).append("=").append(registrationId)[ FD ]
Line_3 $$ StringBuilder postDataBuilder = new StringBuilder()-->Line_4 $$ postDataBuilder.append(PARAM_REGISTRATION_ID).append("=").append(registrationId)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_5 $$ postDataBuilder.append("&").append(PARAM_COLLAPSE_KEY).append("=").append("0")[ CD ]
Line_3 $$ StringBuilder postDataBuilder = new StringBuilder()-->Line_5 $$ postDataBuilder.append("&").append(PARAM_COLLAPSE_KEY).append("=").append("0")[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_6 $$ postDataBuilder.append("&").append("data.payload").append("=").append(URLEncoder.encode(message, UTF8))[ CD ]
Line_3 $$ StringBuilder postDataBuilder = new StringBuilder()-->Line_6 $$ postDataBuilder.append("&").append("data.payload").append("=").append(URLEncoder.encode(message, UTF8))[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_6 $$ postDataBuilder.append("&").append("data.payload").append("=").append(URLEncoder.encode(message, UTF8))[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_7 $$ byte[] postData = postDataBuilder.toString().getBytes(UTF8)[ CD ]
Line_7 $$ byte[] postData = postDataBuilder.toString().getBytes(UTF8)-->Line_7 $$ byte[] postData = postDataBuilder.toString().getBytes(UTF8)[ CD ]
Line_3 $$ StringBuilder postDataBuilder = new StringBuilder()-->Line_7 $$ byte[] postData = postDataBuilder.toString().getBytes(UTF8)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_8 $$ URL url = new URL(C2DM_SEND_ENDPOINT)[ CD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(C2DM_SEND_ENDPOINT)-->Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_10 $$ conn.setDoOutput(true)[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_11 $$ conn.setUseCaches(false)[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.setUseCaches(false)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_12 $$ conn.setRequestMethod("POST")[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.setRequestMethod("POST")[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_13 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8")[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8")[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_14 $$ conn.setRequestProperty("Content-Length", Integer.toString(postData.length))[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setRequestProperty("Content-Length", Integer.toString(postData.length))[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_15 $$ conn.setRequestProperty("Authorization", "GoogleLogin auth=" + auth_token)[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ conn.setRequestProperty("Authorization", "GoogleLogin auth=" + auth_token)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_16 $$ OutputStream out = conn.getOutputStream()[ CD ]
Line_16 $$ OutputStream out = conn.getOutputStream()-->Line_16 $$ OutputStream out = conn.getOutputStream()[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ OutputStream out = conn.getOutputStream()[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_17 $$ out.write(postData)[ CD ]
Line_16 $$ OutputStream out = conn.getOutputStream()-->Line_17 $$ out.write(postData)[ FD ]
Line_7 $$ byte[] postData = postDataBuilder.toString().getBytes(UTF8)-->Line_17 $$ out.write(postData)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_18 $$ out.close()[ CD ]
Line_16 $$ OutputStream out = conn.getOutputStream()-->Line_18 $$ out.close()[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_19 $$ int responseCode = conn.getResponseCode()[ CD ]
Line_19 $$ int responseCode = conn.getResponseCode()-->Line_19 $$ int responseCode = conn.getResponseCode()[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_19 $$ int responseCode = conn.getResponseCode()[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_20 $$ if (responseCode == HttpServletResponse.SC_UNAUTHORIZED || responseCode == HttpServletResponse.SC_FORBIDDEN) [ CD ]
Line_20 $$ if (responseCode == HttpServletResponse.SC_UNAUTHORIZED || responseCode == HttpServletResponse.SC_FORBIDDEN) -->Line_21 $$ AuthenticationUtil.getTokenFromServer(Util.USER, Util.PASSWORD)[ CD ]
Line_20 $$ if (responseCode == HttpServletResponse.SC_UNAUTHORIZED || responseCode == HttpServletResponse.SC_FORBIDDEN) -->Line_22 $$ sendMessage(auth_token, registrationId, message)[ CD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_22 $$ sendMessage(auth_token, registrationId, message)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_22 $$ sendMessage(auth_token, registrationId, message)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_22 $$ sendMessage(auth_token, registrationId, message)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_24 $$ String updatedAuthToken = conn.getHeaderField(UPDATE_CLIENT_AUTH)[ CD ]
Line_24 $$ String updatedAuthToken = conn.getHeaderField(UPDATE_CLIENT_AUTH)-->Line_24 $$ String updatedAuthToken = conn.getHeaderField(UPDATE_CLIENT_AUTH)[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_24 $$ String updatedAuthToken = conn.getHeaderField(UPDATE_CLIENT_AUTH)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_25 $$ if (updatedAuthToken != null && !auth_token.equals(updatedAuthToken)) [ CD ]
Line_25 $$ if (updatedAuthToken != null && !auth_token.equals(updatedAuthToken)) -->Line_25 $$ if (updatedAuthToken != null && !auth_token.equals(updatedAuthToken)) [ CD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_25 $$ if (updatedAuthToken != null && !auth_token.equals(updatedAuthToken)) [ FD ]
Line_24 $$ String updatedAuthToken = conn.getHeaderField(UPDATE_CLIENT_AUTH)-->Line_25 $$ if (updatedAuthToken != null && !auth_token.equals(updatedAuthToken)) [ FD ]
Line_25 $$ if (updatedAuthToken != null && !auth_token.equals(updatedAuthToken)) -->Line_26 $$ Util.updateToken(updatedAuthToken)[ CD ]
Line_24 $$ String updatedAuthToken = conn.getHeaderField(UPDATE_CLIENT_AUTH)-->Line_26 $$ Util.updateToken(updatedAuthToken)[ FD ]
Line_2 $$ public static int sendMessage(String auth_token, String registrationId, String message) throws IOException -->Line_28 $$ return responseCode[ CD ]
