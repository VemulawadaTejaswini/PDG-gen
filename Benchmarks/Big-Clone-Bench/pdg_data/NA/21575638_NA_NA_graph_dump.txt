Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) [ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_3 $$ if (array == null || array.length == 0) [ CD ]
Line_3 $$ if (array == null || array.length == 0) -->Line_4 $$ out.writeBoolean(false)[ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_4 $$ out.writeBoolean(false)[ FD ]
Line_3 $$ if (array == null || array.length == 0) -->Line_5 $$ writeBytes(array, out)[ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_5 $$ writeBytes(array, out)[ FD ]
Line_3 $$ if (array == null || array.length == 0) -->Line_6 $$ return[ CD ]
Line_11 $$ ByteArrayInputStream bais = new ByteArrayInputStream(array)-->Line_12 $$ IOUtils.copyTo(bais, gzout)[ FD ]
Line_10 $$ GZIPOutputStream gzout = new GZIPOutputStream(baos)-->Line_12 $$ IOUtils.copyTo(bais, gzout)[ FD ]
Line_10 $$ GZIPOutputStream gzout = new GZIPOutputStream(baos)-->Line_13 $$ gzout.finish()[ FD ]
Line_10 $$ GZIPOutputStream gzout = new GZIPOutputStream(baos)-->Line_14 $$ gzout.close()[ FD ]
Line_11 $$ ByteArrayInputStream bais = new ByteArrayInputStream(array)-->Line_15 $$ bais.close()[ FD ]
Line_16 $$ byte compressed[] = baos.toByteArray()-->Line_16 $$ byte compressed[] = baos.toByteArray()[ CD ]
Line_9 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(array.length)-->Line_16 $$ byte compressed[] = baos.toByteArray()[ FD ]
Line_17 $$ if (compressed.length < array.length) -->Line_18 $$ out.writeBoolean(true)[ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_18 $$ out.writeBoolean(true)[ FD ]
Line_17 $$ if (compressed.length < array.length) -->Line_19 $$ writeBytes(compressed, out)[ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_19 $$ writeBytes(compressed, out)[ FD ]
Line_17 $$ if (compressed.length < array.length) -->Line_21 $$ out.writeBoolean(false)[ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_21 $$ out.writeBoolean(false)[ FD ]
Line_17 $$ if (compressed.length < array.length) -->Line_22 $$ writeBytes(array, out)[ CD ]
Line_2 $$ protected void writeGZippedBytes(byte array[], TupleOutput out) -->Line_22 $$ writeBytes(array, out)[ FD ]
