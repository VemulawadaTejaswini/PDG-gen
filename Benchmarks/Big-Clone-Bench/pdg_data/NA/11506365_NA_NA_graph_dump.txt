Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean setupDatabaseSchema() [ CD ]
Line_2 $$ public boolean setupDatabaseSchema() -->Line_3 $$ Configuration cfg = Configuration.getInstance()[ CD ]
Line_3 $$ Configuration cfg = Configuration.getInstance()-->Line_3 $$ Configuration cfg = Configuration.getInstance()[ CD ]
Line_2 $$ public boolean setupDatabaseSchema() -->Line_4 $$ Connection con = getConnection()[ CD ]
Line_4 $$ Connection con = getConnection()-->Line_4 $$ Connection con = getConnection()[ CD ]
Line_2 $$ public boolean setupDatabaseSchema() -->Line_5 $$ if (null == con)[ CD ]
Line_4 $$ Connection con = getConnection()-->Line_5 $$ if (null == con)[ FD ]
Line_5 $$ if (null == con)-->Line_5 $$ return false[ CD ]
Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))-->Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))[ CD ]
Line_3 $$ Configuration cfg = Configuration.getInstance()-->Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))[ FD ]
Line_3 $$ Configuration cfg = Configuration.getInstance()-->Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))[ FD ]
Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))-->Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())[ FD ]
Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())-->Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())[ FD ]
Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())-->Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())[ CD ]
Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))-->Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())[ FD ]
Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())-->Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())[ FD ]
Line_4 $$ Connection con = getConnection()-->Line_9 $$ con.setAutoCommit(false)[ FD ]
Line_10 $$ Statement stmt = con.createStatement()-->Line_10 $$ Statement stmt = con.createStatement()[ CD ]
Line_4 $$ Connection con = getConnection()-->Line_10 $$ Statement stmt = con.createStatement()[ FD ]
Line_11 $$ String[] sqlParts = sql.split(";")-->Line_11 $$ String[] sqlParts = sql.split(";")[ CD ]
Line_7 $$ String sql = FileTool.readFile(cfg.getProperty("database.sql.rootdir") + System.getProperty("file.separator") + cfg.getProperty("database.sql.mysql.setupschema"))-->Line_11 $$ String[] sqlParts = sql.split(";")[ FD ]
Line_8 $$ sql = sql.replaceAll(MYSQL_SQL_SCHEMA_REPLACEMENT, StateSaver.getInstance().getDatabaseSettings().getSchema())-->Line_11 $$ String[] sqlParts = sql.split(";")[ FD ]
Line_12 $$ for (String sqlPart : sqlParts) -->Line_13 $$ if (sqlPart.trim().length() > 0)[ FD ]
Line_13 $$ if (sqlPart.trim().length() > 0)-->Line_13 $$ stmt.executeUpdate(sqlPart)[ CD ]
Line_10 $$ Statement stmt = con.createStatement()-->Line_13 $$ stmt.executeUpdate(sqlPart)[ FD ]
Line_12 $$ for (String sqlPart : sqlParts) -->Line_13 $$ stmt.executeUpdate(sqlPart)[ FD ]
Line_4 $$ Connection con = getConnection()-->Line_15 $$ con.commit()[ FD ]
Line_4 $$ Connection con = getConnection()-->Line_22 $$ if (con != null)[ FD ]
Line_22 $$ if (con != null)-->Line_22 $$ con.rollback()[ CD ]
Line_4 $$ Connection con = getConnection()-->Line_22 $$ con.rollback()[ FD ]
Line_2 $$ public boolean setupDatabaseSchema() -->Line_26 $$ JOptionPane.showMessageDialog(null, language.getProperty("database.messages.executionerror"), language.getProperty("dialog.error.title"), JOptionPane.ERROR_MESSAGE)[ CD ]
Line_2 $$ public boolean setupDatabaseSchema() -->Line_27 $$ return false[ CD ]
