Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_5 $$ File copiedInput = new File(this.randomFolder, this.inputFile.getName())-->Line_6 $$ IOUtils.copyFile(this.inputFile, copiedInput)[ FD ]
Line_5 $$ File copiedInput = new File(this.randomFolder, this.inputFile.getName())-->Line_7 $$ inputFiles[inputFiles.length - 1] = copiedInput[ FD ]
Line_8 $$ if (previousFiles != null) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ CD ]
Line_8 $$ if (previousFiles != null) -->Line_8 $$ if (previousFiles != null) [ CD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_10 $$ File prev = this.previousFiles[i][ CD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())[ CD ]
Line_10 $$ File prev = this.previousFiles[i]-->Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())[ FD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_12 $$ IOUtils.copyFile(prev, copiedPrev)[ CD ]
Line_10 $$ File prev = this.previousFiles[i]-->Line_12 $$ IOUtils.copyFile(prev, copiedPrev)[ FD ]
Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())-->Line_12 $$ IOUtils.copyFile(prev, copiedPrev)[ FD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_13 $$ inputFiles[i] = copiedPrev[ CD ]
Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())-->Line_13 $$ inputFiles[i] = copiedPrev[ FD ]
Line_16 $$ org.happycomp.radiog.Activator activator = org.happycomp.radiog.Activator.getDefault()-->Line_16 $$ org.happycomp.radiog.Activator activator = org.happycomp.radiog.Activator.getDefault()[ CD ]
Line_17 $$ if (this.exportedMP3File != null) -->Line_18 $$ EncodingUtils.encodeToWavAndThenMP3(inputFiles, this.exportedWavFile, this.exportedMP3File, this.deleteOnExit, this.randomFolder, activator.getCommandsMap())[ CD ]
Line_4 $$ File[] inputFiles = new File[this.previousFiles != null ? this.previousFiles.length + 1 : 1]-->Line_18 $$ EncodingUtils.encodeToWavAndThenMP3(inputFiles, this.exportedWavFile, this.exportedMP3File, this.deleteOnExit, this.randomFolder, activator.getCommandsMap())[ FD ]
Line_16 $$ org.happycomp.radiog.Activator activator = org.happycomp.radiog.Activator.getDefault()-->Line_18 $$ EncodingUtils.encodeToWavAndThenMP3(inputFiles, this.exportedWavFile, this.exportedMP3File, this.deleteOnExit, this.randomFolder, activator.getCommandsMap())[ FD ]
Line_17 $$ if (this.exportedMP3File != null) -->Line_20 $$ EncodingUtils.encodeToWav(inputFiles, this.exportedWavFile, randomFolder, activator.getCommandsMap())[ CD ]
Line_4 $$ File[] inputFiles = new File[this.previousFiles != null ? this.previousFiles.length + 1 : 1]-->Line_20 $$ EncodingUtils.encodeToWav(inputFiles, this.exportedWavFile, randomFolder, activator.getCommandsMap())[ FD ]
Line_16 $$ org.happycomp.radiog.Activator activator = org.happycomp.radiog.Activator.getDefault()-->Line_20 $$ EncodingUtils.encodeToWav(inputFiles, this.exportedWavFile, randomFolder, activator.getCommandsMap())[ FD ]
Line_22 $$ if (encodeMonitor != null) -->Line_23 $$ encodeMonitor.setEncodingFinished(true)[ CD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) -->Line_9 $$ for (int i = 0; i < this.previousFiles.length; i++) [ FD ]
Line_10 $$ File prev = this.previousFiles[i]-->Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())[ FD ]
Line_10 $$ File prev = this.previousFiles[i]-->Line_12 $$ IOUtils.copyFile(prev, copiedPrev)[ FD ]
Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())-->Line_12 $$ IOUtils.copyFile(prev, copiedPrev)[ FD ]
Line_11 $$ File copiedPrev = new File(this.randomFolder, prev.getName())-->Line_13 $$ inputFiles[i] = copiedPrev[ FD ]
