Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ LogFrame.getInstance()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_5 $$ String arg = args[i][ CD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) [ CD ]
Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) -->Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) [ FD ]
Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) -->Line_7 $$ properties.put(DEBUG_PARAMETER_NAME, arg.trim().substring(DEBUG_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_7 $$ properties.put(DEBUG_PARAMETER_NAME, arg.trim().substring(DEBUG_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) -->Line_8 $$ if (properties.getProperty(DEBUG_PARAMETER_NAME).toLowerCase().equals(DEBUG_TRUE)) [ CD ]
Line_8 $$ if (properties.getProperty(DEBUG_PARAMETER_NAME).toLowerCase().equals(DEBUG_TRUE)) -->Line_8 $$ if (properties.getProperty(DEBUG_PARAMETER_NAME).toLowerCase().equals(DEBUG_TRUE)) [ CD ]
Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) -->Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) [ CD ]
Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) -->Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) [ FD ]
Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) -->Line_12 $$ properties.put(MODE_PARAMETER_NAME, arg.trim().substring(MODE_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_12 $$ properties.put(MODE_PARAMETER_NAME, arg.trim().substring(MODE_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) -->Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) [ CD ]
Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) -->Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) [ FD ]
Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) -->Line_14 $$ properties.put(AUTOCONNECT_PARAMETER_NAME, arg.trim().substring(AUTOCONNECT_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_14 $$ properties.put(AUTOCONNECT_PARAMETER_NAME, arg.trim().substring(AUTOCONNECT_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) -->Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) [ CD ]
Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) -->Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) [ FD ]
Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) -->Line_16 $$ properties.put(SITE_CONFIG_URL_PARAMETER_NAME, arg.trim().substring(SITE_CONFIG_URL_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_16 $$ properties.put(SITE_CONFIG_URL_PARAMETER_NAME, arg.trim().substring(SITE_CONFIG_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) -->Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) [ CD ]
Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) -->Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) [ FD ]
Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) -->Line_18 $$ properties.put(LOAD_PLUGINS_PARAMETER_NAME, arg.trim().substring(LOAD_PLUGINS_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_18 $$ properties.put(LOAD_PLUGINS_PARAMETER_NAME, arg.trim().substring(LOAD_PLUGINS_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) -->Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) [ CD ]
Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) -->Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) [ FD ]
Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) -->Line_20 $$ properties.put(ONTOLOGY_URL_PARAMETER_NAME, arg.trim().substring(ONTOLOGY_URL_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_20 $$ properties.put(ONTOLOGY_URL_PARAMETER_NAME, arg.trim().substring(ONTOLOGY_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) -->Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) [ CD ]
Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) -->Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) [ FD ]
Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) -->Line_22 $$ properties.put(REPOSITORY_PARAMETER_NAME, arg.trim().substring(REPOSITORY_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_22 $$ properties.put(REPOSITORY_PARAMETER_NAME, arg.trim().substring(REPOSITORY_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) -->Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) [ CD ]
Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) -->Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) [ FD ]
Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) -->Line_24 $$ properties.put(ONTOLOGY_TYPE_PARAMETER_NAME, arg.trim().substring(ONTOLOGY_TYPE_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_24 $$ properties.put(ONTOLOGY_TYPE_PARAMETER_NAME, arg.trim().substring(ONTOLOGY_TYPE_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) -->Line_25 $$ if (!(properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_RDFXML) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_TURTLE) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_NTRIPPLES)))[ CD ]
Line_25 $$ if (!(properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_RDFXML) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_TURTLE) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_NTRIPPLES)))-->Line_25 $$ if (!(properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_RDFXML) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_TURTLE) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_NTRIPPLES)))[ CD ]
Line_25 $$ if (!(properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_RDFXML) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_TURTLE) || properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME).equals(ONTOLOGY_TYPE_NTRIPPLES)))-->Line_25 $$ System.out.println("WARNING! Unknown ontology type: '" + properties.getProperty(ONTOLOGY_TYPE_PARAMETER_NAME) + "' (Known types are: '" + ONTOLOGY_TYPE_RDFXML + "', '" + ONTOLOGY_TYPE_TURTLE + "', '" + ONTOLOGY_TYPE_NTRIPPLES + "')")[ CD ]
Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) -->Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) [ CD ]
Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) -->Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) [ FD ]
Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) -->Line_27 $$ properties.put(OWLIMSERVICE_URL_PARAMETER_NAME, arg.trim().substring(OWLIMSERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_27 $$ properties.put(OWLIMSERVICE_URL_PARAMETER_NAME, arg.trim().substring(OWLIMSERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) -->Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) [ CD ]
Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) -->Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) [ FD ]
Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) -->Line_29 $$ properties.put(DOCSERVICE_URL_PARAMETER_NAME, arg.trim().substring(DOCSERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_29 $$ properties.put(DOCSERVICE_URL_PARAMETER_NAME, arg.trim().substring(DOCSERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) -->Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) [ CD ]
Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) -->Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) [ FD ]
Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) -->Line_31 $$ properties.put(DOC_ID_PARAMETER_NAME, arg.trim().substring(DOC_ID_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_31 $$ properties.put(DOC_ID_PARAMETER_NAME, arg.trim().substring(DOC_ID_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) -->Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) [ CD ]
Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) -->Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) [ FD ]
Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) -->Line_33 $$ properties.put(ANNSET_NAME_PARAMETER_NAME, arg.trim().substring(ANNSET_NAME_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_33 $$ properties.put(ANNSET_NAME_PARAMETER_NAME, arg.trim().substring(ANNSET_NAME_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) -->Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) [ CD ]
Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) -->Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) [ FD ]
Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) -->Line_35 $$ properties.put(EXECUTIVE_SERVICE_URL_PARAMETER_NAME, arg.trim().substring(EXECUTIVE_SERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_35 $$ properties.put(EXECUTIVE_SERVICE_URL_PARAMETER_NAME, arg.trim().substring(EXECUTIVE_SERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) -->Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) [ CD ]
Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) -->Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) [ FD ]
Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) -->Line_37 $$ properties.put(USER_ID_PARAMETER_NAME, arg.trim().substring(USER_ID_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_37 $$ properties.put(USER_ID_PARAMETER_NAME, arg.trim().substring(USER_ID_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) -->Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) [ CD ]
Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) -->Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) [ FD ]
Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) -->Line_39 $$ properties.put(USER_PASSWORD_PARAMETER_NAME, arg.trim().substring(USER_PASSWORD_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_39 $$ properties.put(USER_PASSWORD_PARAMETER_NAME, arg.trim().substring(USER_PASSWORD_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) -->Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ CD ]
Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ FD ]
Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_41 $$ properties.put(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME, arg.trim().substring(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_41 $$ properties.put(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME, arg.trim().substring(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ CD ]
Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ FD ]
Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_43 $$ properties.put(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME, arg.trim().substring(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_43 $$ properties.put(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME, arg.trim().substring(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_44 $$ RichUIUtils.setDocServiceProxyFactoryClassname(properties.getProperty(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME))[ CD ]
Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) -->Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) [ CD ]
Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) -->Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) [ FD ]
Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) -->Line_46 $$ properties.put(LOAD_ANN_SCHEMAS_NAME, arg.trim().substring(LOAD_ANN_SCHEMAS_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_46 $$ properties.put(LOAD_ANN_SCHEMAS_NAME, arg.trim().substring(LOAD_ANN_SCHEMAS_NAME.length() + 1).trim())[ FD ]
Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) -->Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) [ CD ]
Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) -->Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) [ FD ]
Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) -->Line_48 $$ properties.put(SELECT_AS_PARAMETER_NAME, arg.trim().substring(SELECT_AS_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_48 $$ properties.put(SELECT_AS_PARAMETER_NAME, arg.trim().substring(SELECT_AS_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) -->Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) [ CD ]
Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) -->Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) [ FD ]
Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) -->Line_50 $$ properties.put(SELECT_ANN_TYPES_PARAMETER_NAME, arg.trim().substring(SELECT_ANN_TYPES_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_50 $$ properties.put(SELECT_ANN_TYPES_PARAMETER_NAME, arg.trim().substring(SELECT_ANN_TYPES_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) -->Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) [ CD ]
Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) -->Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) [ FD ]
Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) -->Line_52 $$ properties.put(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME, arg.trim().substring(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_52 $$ properties.put(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME, arg.trim().substring(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) -->Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) [ CD ]
Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) -->Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) [ FD ]
Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) -->Line_54 $$ properties.put(CLASSES_TO_HIDE_PARAMETER_NAME, arg.trim().substring(CLASSES_TO_HIDE_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_54 $$ properties.put(CLASSES_TO_HIDE_PARAMETER_NAME, arg.trim().substring(CLASSES_TO_HIDE_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) -->Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) [ CD ]
Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) -->Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) [ FD ]
Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) -->Line_56 $$ properties.put(CLASSES_TO_SHOW_PARAMETER_NAME, arg.trim().substring(CLASSES_TO_SHOW_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_56 $$ properties.put(CLASSES_TO_SHOW_PARAMETER_NAME, arg.trim().substring(CLASSES_TO_SHOW_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) -->Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) [ CD ]
Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) -->Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) [ CD ]
Line_5 $$ String arg = args[i]-->Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) [ FD ]
Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) -->Line_58 $$ properties.put(ENABLE_APPLICATION_LOG_PARAMETER_NAME, arg.trim().substring(ENABLE_APPLICATION_LOG_PARAMETER_NAME.length() + 1).trim())[ CD ]
Line_5 $$ String arg = args[i]-->Line_58 $$ properties.put(ENABLE_APPLICATION_LOG_PARAMETER_NAME, arg.trim().substring(ENABLE_APPLICATION_LOG_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) -->Line_60 $$ System.out.println("WARNING! Unknown or undefined parameter: '" + arg.trim() + "'")[ CD ]
Line_5 $$ String arg = args[i]-->Line_60 $$ System.out.println("WARNING! Unknown or undefined parameter: '" + arg.trim() + "'")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_63 $$ System.out.println(startupParamsToString())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_64 $$ if (properties.getProperty(MODE_PARAMETER_NAME) == null || (!(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(POOL_MODE)) && !(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)))) [ CD ]
Line_64 $$ if (properties.getProperty(MODE_PARAMETER_NAME) == null || (!(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(POOL_MODE)) && !(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)))) -->Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."[ CD ]
Line_64 $$ if (properties.getProperty(MODE_PARAMETER_NAME) == null || (!(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(POOL_MODE)) && !(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)))) -->Line_66 $$ System.out.println(err)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_66 $$ System.out.println(err)[ FD ]
Line_64 $$ if (properties.getProperty(MODE_PARAMETER_NAME) == null || (!(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(POOL_MODE)) && !(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)))) -->Line_67 $$ JOptionPane.showMessageDialog(new JFrame(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_67 $$ JOptionPane.showMessageDialog(new JFrame(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_64 $$ if (properties.getProperty(MODE_PARAMETER_NAME) == null || (!(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(POOL_MODE)) && !(properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)))) -->Line_68 $$ System.exit(-1)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_70 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) == null || properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() == 0) [ CD ]
Line_70 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) == null || properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() == 0) -->Line_72 $$ System.out.println(err)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_72 $$ System.out.println(err)[ FD ]
Line_70 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) == null || properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() == 0) -->Line_73 $$ JOptionPane.showMessageDialog(new JFrame(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_73 $$ JOptionPane.showMessageDialog(new JFrame(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_70 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) == null || properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() == 0) -->Line_74 $$ System.exit(-1)[ CD ]
Line_77 $$ String context = System.getProperty(CONTEXT)-->Line_77 $$ String context = System.getProperty(CONTEXT)[ CD ]
Line_77 $$ String context = System.getProperty(CONTEXT)-->Line_78 $$ if (context == null || "".equals(context)) [ FD ]
Line_78 $$ if (context == null || "".equals(context)) -->Line_79 $$ context = DEFAULT_CONTEXT[ CD ]
Line_77 $$ String context = System.getProperty(CONTEXT)-->Line_79 $$ context = DEFAULT_CONTEXT[ FD ]
Line_79 $$ context = DEFAULT_CONTEXT-->Line_79 $$ context = DEFAULT_CONTEXT[ FD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)[ CD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_82 $$ if (s == null || s.length() == 0) [ FD ]
Line_82 $$ if (s == null || s.length() == 0) -->Line_83 $$ File f = File.createTempFile("foo", "")[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_83 $$ File f = File.createTempFile("foo", "")[ CD ]
Line_82 $$ if (s == null || s.length() == 0) -->Line_84 $$ String gateHome = f.getParent().toString() + context[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_84 $$ String gateHome = f.getParent().toString() + context[ FD ]
Line_82 $$ if (s == null || s.length() == 0) -->Line_85 $$ f.delete()[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_85 $$ f.delete()[ FD ]
Line_82 $$ if (s == null || s.length() == 0) -->Line_86 $$ System.setProperty(GateConstants.GATE_HOME_PROPERTY_NAME, gateHome)[ CD ]
Line_84 $$ String gateHome = f.getParent().toString() + context-->Line_86 $$ System.setProperty(GateConstants.GATE_HOME_PROPERTY_NAME, gateHome)[ FD ]
Line_82 $$ if (s == null || s.length() == 0) -->Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))[ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))[ FD ]
Line_82 $$ if (s == null || s.length() == 0) -->Line_88 $$ if (!f.exists()) [ CD ]
Line_88 $$ if (!f.exists()) -->Line_88 $$ if (!f.exists()) [ CD ]
Line_88 $$ if (!f.exists()) -->Line_88 $$ if (!f.exists()) [ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_88 $$ if (!f.exists()) [ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_88 $$ if (!f.exists()) [ FD ]
Line_88 $$ if (!f.exists()) -->Line_89 $$ f.mkdirs()[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_89 $$ f.mkdirs()[ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_89 $$ f.mkdirs()[ FD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)[ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)[ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)[ CD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_93 $$ if (s == null || s.length() == 0) [ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_93 $$ if (s == null || s.length() == 0) [ FD ]
Line_93 $$ if (s == null || s.length() == 0) -->Line_94 $$ System.setProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME, System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME) + "/plugins")[ CD ]
Line_93 $$ if (s == null || s.length() == 0) -->Line_96 $$ if (!f.exists()) [ CD ]
Line_96 $$ if (!f.exists()) -->Line_96 $$ if (!f.exists()) [ CD ]
Line_96 $$ if (!f.exists()) -->Line_96 $$ if (!f.exists()) [ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_96 $$ if (!f.exists()) [ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_96 $$ if (!f.exists()) [ FD ]
Line_96 $$ if (!f.exists()) -->Line_97 $$ f.mkdirs()[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_97 $$ f.mkdirs()[ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_97 $$ f.mkdirs()[ FD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)[ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)[ FD ]
Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)-->Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)[ FD ]
Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)-->Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)[ CD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_101 $$ if (s == null || s.length() == 0) [ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_101 $$ if (s == null || s.length() == 0) [ FD ]
Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)-->Line_101 $$ if (s == null || s.length() == 0) [ FD ]
Line_101 $$ if (s == null || s.length() == 0) -->Line_102 $$ System.setProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME, System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME) + "/gate.xml")[ CD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_106 $$ if (f.exists()) [ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_106 $$ if (f.exists()) [ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_106 $$ if (f.exists()) [ FD ]
Line_106 $$ if (f.exists()) -->Line_106 $$ if (f.exists()) [ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_106 $$ if (f.exists()) [ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_106 $$ if (f.exists()) [ FD ]
Line_106 $$ if (f.exists()) -->Line_107 $$ f.delete()[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_107 $$ f.delete()[ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_107 $$ f.delete()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_109 $$ f.getParentFile().mkdirs()[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_109 $$ f.getParentFile().mkdirs()[ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_109 $$ f.getParentFile().mkdirs()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_110 $$ f.createNewFile()[ CD ]
Line_83 $$ File f = File.createTempFile("foo", "")-->Line_110 $$ f.createNewFile()[ FD ]
Line_87 $$ f = new File(System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME))-->Line_110 $$ f.createNewFile()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_111 $$ URL url = new URL(properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME))[ CD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_112 $$ InputStream is = url.openStream()[ CD ]
Line_112 $$ InputStream is = url.openStream()-->Line_112 $$ InputStream is = url.openStream()[ CD ]
Line_111 $$ URL url = new URL(properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME))-->Line_112 $$ InputStream is = url.openStream()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_113 $$ FileOutputStream fos = new FileOutputStream(f)[ CD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_114 $$ int i = is.read()[ CD ]
Line_114 $$ int i = is.read()-->Line_114 $$ int i = is.read()[ CD ]
Line_112 $$ InputStream is = url.openStream()-->Line_114 $$ int i = is.read()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_115 $$ while (i != -1) [ CD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) [ CD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_115 $$ while (i != -1) [ FD ]
Line_114 $$ int i = is.read()-->Line_115 $$ while (i != -1) [ FD ]
Line_115 $$ while (i != -1) -->Line_116 $$ fos.write(i)[ CD ]
Line_113 $$ FileOutputStream fos = new FileOutputStream(f)-->Line_116 $$ fos.write(i)[ FD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_116 $$ fos.write(i)[ FD ]
Line_114 $$ int i = is.read()-->Line_116 $$ fos.write(i)[ FD ]
Line_115 $$ while (i != -1) -->Line_117 $$ i = is.read()[ CD ]
Line_117 $$ i = is.read()-->Line_117 $$ i = is.read()[ FD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_117 $$ i = is.read()[ FD ]
Line_114 $$ int i = is.read()-->Line_117 $$ i = is.read()[ FD ]
Line_117 $$ i = is.read()-->Line_117 $$ i = is.read()[ CD ]
Line_112 $$ InputStream is = url.openStream()-->Line_117 $$ i = is.read()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_119 $$ fos.close()[ CD ]
Line_113 $$ FileOutputStream fos = new FileOutputStream(f)-->Line_119 $$ fos.close()[ FD ]
Line_104 $$ if (properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME) != null && properties.getProperty(SITE_CONFIG_URL_PARAMETER_NAME).length() > 0) -->Line_120 $$ is.close()[ CD ]
Line_112 $$ InputStream is = url.openStream()-->Line_120 $$ is.close()[ FD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_128 $$ s = BASE_PLUGIN_NAME + "," + properties.getProperty(LOAD_PLUGINS_PARAMETER_NAME)[ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_128 $$ s = BASE_PLUGIN_NAME + "," + properties.getProperty(LOAD_PLUGINS_PARAMETER_NAME)[ FD ]
Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)-->Line_128 $$ s = BASE_PLUGIN_NAME + "," + properties.getProperty(LOAD_PLUGINS_PARAMETER_NAME)[ FD ]
Line_128 $$ s = BASE_PLUGIN_NAME + "," + properties.getProperty(LOAD_PLUGINS_PARAMETER_NAME)-->Line_128 $$ s = BASE_PLUGIN_NAME + "," + properties.getProperty(LOAD_PLUGINS_PARAMETER_NAME)[ FD ]
Line_81 $$ String s = System.getProperty(GateConstants.GATE_HOME_PROPERTY_NAME)-->Line_130 $$ loadPlugins(s, true)[ FD ]
Line_92 $$ s = System.getProperty(GateConstants.PLUGINS_HOME_PROPERTY_NAME)-->Line_130 $$ loadPlugins(s, true)[ FD ]
Line_100 $$ s = System.getProperty(GateConstants.GATE_SITE_CONFIG_PROPERTY_NAME)-->Line_130 $$ loadPlugins(s, true)[ FD ]
Line_128 $$ s = BASE_PLUGIN_NAME + "," + properties.getProperty(LOAD_PLUGINS_PARAMETER_NAME)-->Line_130 $$ loadPlugins(s, true)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_135 $$ MainFrame.getInstance().setVisible(true)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_136 $$ MainFrame.getInstance().pack()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_137 $$ if (properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)) [ CD ]
Line_137 $$ if (properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)) -->Line_137 $$ if (properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)) [ CD ]
Line_137 $$ if (properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)) -->Line_138 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) [ CD ]
Line_138 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) -->Line_138 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) [ CD ]
Line_138 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) -->Line_139 $$ if (properties.getProperty(DOC_ID_PARAMETER_NAME) == null || properties.getProperty(DOC_ID_PARAMETER_NAME).length() == 0) [ CD ]
Line_139 $$ if (properties.getProperty(DOC_ID_PARAMETER_NAME) == null || properties.getProperty(DOC_ID_PARAMETER_NAME).length() == 0) -->Line_141 $$ System.out.println(err)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_141 $$ System.out.println(err)[ FD ]
Line_139 $$ if (properties.getProperty(DOC_ID_PARAMETER_NAME) == null || properties.getProperty(DOC_ID_PARAMETER_NAME).length() == 0) -->Line_142 $$ JOptionPane.showMessageDialog(MainFrame.getInstance(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_142 $$ JOptionPane.showMessageDialog(MainFrame.getInstance(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_139 $$ if (properties.getProperty(DOC_ID_PARAMETER_NAME) == null || properties.getProperty(DOC_ID_PARAMETER_NAME).length() == 0) -->Line_143 $$ ActionShowDocserviceConnectDialog.getInstance().actionPerformed(null)[ CD ]
Line_139 $$ if (properties.getProperty(DOC_ID_PARAMETER_NAME) == null || properties.getProperty(DOC_ID_PARAMETER_NAME).length() == 0) -->Line_145 $$ ActionConnectToDocservice.getInstance().actionPerformed(null)[ CD ]
Line_138 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) -->Line_148 $$ ActionShowDocserviceConnectDialog.getInstance().actionPerformed(null)[ CD ]
Line_137 $$ if (properties.getProperty(MODE_PARAMETER_NAME).toLowerCase().equals(DIRECT_MODE)) -->Line_151 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) [ CD ]
Line_151 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) -->Line_151 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) [ CD ]
Line_151 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) -->Line_152 $$ if (properties.getProperty(USER_ID_PARAMETER_NAME) == null || properties.getProperty(USER_ID_PARAMETER_NAME).length() == 0) [ CD ]
Line_152 $$ if (properties.getProperty(USER_ID_PARAMETER_NAME) == null || properties.getProperty(USER_ID_PARAMETER_NAME).length() == 0) -->Line_154 $$ System.out.println(err)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_154 $$ System.out.println(err)[ FD ]
Line_152 $$ if (properties.getProperty(USER_ID_PARAMETER_NAME) == null || properties.getProperty(USER_ID_PARAMETER_NAME).length() == 0) -->Line_155 $$ JOptionPane.showMessageDialog(MainFrame.getInstance(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_65 $$ String err = "Mandatory parameter '" + MODE_PARAMETER_NAME + "' must be defined and must have a value either '" + POOL_MODE + "' or '" + DIRECT_MODE + "'.\n\nApplication will exit."-->Line_155 $$ JOptionPane.showMessageDialog(MainFrame.getInstance(), err, "Error!", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_152 $$ if (properties.getProperty(USER_ID_PARAMETER_NAME) == null || properties.getProperty(USER_ID_PARAMETER_NAME).length() == 0) -->Line_156 $$ ActionShowExecutiveConnectDialog.getInstance().actionPerformed(null)[ CD ]
Line_152 $$ if (properties.getProperty(USER_ID_PARAMETER_NAME) == null || properties.getProperty(USER_ID_PARAMETER_NAME).length() == 0) -->Line_158 $$ ActionConnectToExecutive.getInstance().actionPerformed(null)[ CD ]
Line_151 $$ if (properties.getProperty(AUTOCONNECT_PARAMETER_NAME, "").toLowerCase().equals(AUTOCONNECT_TRUE)) -->Line_161 $$ ActionShowExecutiveConnectDialog.getInstance().actionPerformed(null)[ CD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < args.length; i++) -->Line_4 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_5 $$ String arg = args[i]-->Line_6 $$ if (arg.trim().startsWith(DEBUG_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_7 $$ properties.put(DEBUG_PARAMETER_NAME, arg.trim().substring(DEBUG_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_11 $$ if (arg.trim().startsWith(MODE_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_12 $$ properties.put(MODE_PARAMETER_NAME, arg.trim().substring(MODE_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_13 $$ if (arg.trim().startsWith(AUTOCONNECT_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_14 $$ properties.put(AUTOCONNECT_PARAMETER_NAME, arg.trim().substring(AUTOCONNECT_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_15 $$ if (arg.trim().startsWith(SITE_CONFIG_URL_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_16 $$ properties.put(SITE_CONFIG_URL_PARAMETER_NAME, arg.trim().substring(SITE_CONFIG_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_17 $$ if (arg.trim().startsWith(LOAD_PLUGINS_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_18 $$ properties.put(LOAD_PLUGINS_PARAMETER_NAME, arg.trim().substring(LOAD_PLUGINS_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_19 $$ if (arg.trim().startsWith(ONTOLOGY_URL_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_20 $$ properties.put(ONTOLOGY_URL_PARAMETER_NAME, arg.trim().substring(ONTOLOGY_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_21 $$ if (arg.trim().startsWith(REPOSITORY_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_22 $$ properties.put(REPOSITORY_PARAMETER_NAME, arg.trim().substring(REPOSITORY_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_23 $$ if (arg.trim().startsWith(ONTOLOGY_TYPE_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_24 $$ properties.put(ONTOLOGY_TYPE_PARAMETER_NAME, arg.trim().substring(ONTOLOGY_TYPE_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_26 $$ if (arg.trim().startsWith(OWLIMSERVICE_URL_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_27 $$ properties.put(OWLIMSERVICE_URL_PARAMETER_NAME, arg.trim().substring(OWLIMSERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_28 $$ if (arg.trim().startsWith(DOCSERVICE_URL_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_29 $$ properties.put(DOCSERVICE_URL_PARAMETER_NAME, arg.trim().substring(DOCSERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_30 $$ if (arg.trim().startsWith(DOC_ID_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_31 $$ properties.put(DOC_ID_PARAMETER_NAME, arg.trim().substring(DOC_ID_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_32 $$ if (arg.trim().startsWith(ANNSET_NAME_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_33 $$ properties.put(ANNSET_NAME_PARAMETER_NAME, arg.trim().substring(ANNSET_NAME_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_34 $$ if (arg.trim().startsWith(EXECUTIVE_SERVICE_URL_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_35 $$ properties.put(EXECUTIVE_SERVICE_URL_PARAMETER_NAME, arg.trim().substring(EXECUTIVE_SERVICE_URL_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_36 $$ if (arg.trim().startsWith(USER_ID_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_37 $$ properties.put(USER_ID_PARAMETER_NAME, arg.trim().substring(USER_ID_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_38 $$ if (arg.trim().startsWith(USER_PASSWORD_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_39 $$ properties.put(USER_PASSWORD_PARAMETER_NAME, arg.trim().substring(USER_PASSWORD_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_40 $$ if (arg.trim().startsWith(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_41 $$ properties.put(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME, arg.trim().substring(EXECUTIVE_PROXY_FACTORY_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_42 $$ if (arg.trim().startsWith(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_43 $$ properties.put(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME, arg.trim().substring(DOCSERVICE_PROXY_FACTORY_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_45 $$ if (arg.trim().startsWith(LOAD_ANN_SCHEMAS_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_46 $$ properties.put(LOAD_ANN_SCHEMAS_NAME, arg.trim().substring(LOAD_ANN_SCHEMAS_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_47 $$ if (arg.trim().startsWith(SELECT_AS_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_48 $$ properties.put(SELECT_AS_PARAMETER_NAME, arg.trim().substring(SELECT_AS_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_49 $$ if (arg.trim().startsWith(SELECT_ANN_TYPES_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_50 $$ properties.put(SELECT_ANN_TYPES_PARAMETER_NAME, arg.trim().substring(SELECT_ANN_TYPES_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_51 $$ if (arg.trim().startsWith(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_52 $$ properties.put(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME, arg.trim().substring(ENABLE_ONTOLOGY_EDITOR_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_53 $$ if (arg.trim().startsWith(CLASSES_TO_HIDE_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_54 $$ properties.put(CLASSES_TO_HIDE_PARAMETER_NAME, arg.trim().substring(CLASSES_TO_HIDE_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_55 $$ if (arg.trim().startsWith(CLASSES_TO_SHOW_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_56 $$ properties.put(CLASSES_TO_SHOW_PARAMETER_NAME, arg.trim().substring(CLASSES_TO_SHOW_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_57 $$ if (arg.trim().startsWith(ENABLE_APPLICATION_LOG_PARAMETER_NAME + "=")) [ FD ]
Line_5 $$ String arg = args[i]-->Line_58 $$ properties.put(ENABLE_APPLICATION_LOG_PARAMETER_NAME, arg.trim().substring(ENABLE_APPLICATION_LOG_PARAMETER_NAME.length() + 1).trim())[ FD ]
Line_5 $$ String arg = args[i]-->Line_60 $$ System.out.println("WARNING! Unknown or undefined parameter: '" + arg.trim() + "'")[ FD ]
Line_117 $$ i = is.read()-->Line_115 $$ while (i != -1) [ FD ]
Line_117 $$ i = is.read()-->Line_115 $$ while (i != -1) [ FD ]
Line_117 $$ i = is.read()-->Line_116 $$ fos.write(i)[ FD ]
