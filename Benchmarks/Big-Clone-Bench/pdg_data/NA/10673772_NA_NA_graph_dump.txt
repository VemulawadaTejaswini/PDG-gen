Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private File extractResource(String resourceName, File destDir) [ CD ]
Line_2 $$ private File extractResource(String resourceName, File destDir) -->Line_3 $$ File file = new File(destDir, resourceName)[ CD ]
Line_2 $$ private File extractResource(String resourceName, File destDir) -->Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)[ CD ]
Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)-->Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)[ CD ]
Line_2 $$ private File extractResource(String resourceName, File destDir) -->Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)[ FD ]
Line_6 $$ FileOutputStream out = FileUtils.openOutputStream(file)-->Line_6 $$ FileOutputStream out = FileUtils.openOutputStream(file)[ CD ]
Line_3 $$ File file = new File(destDir, resourceName)-->Line_6 $$ FileOutputStream out = FileUtils.openOutputStream(file)[ FD ]
Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)-->Line_8 $$ IOUtils.copy(in, out)[ FD ]
Line_6 $$ FileOutputStream out = FileUtils.openOutputStream(file)-->Line_8 $$ IOUtils.copy(in, out)[ FD ]
Line_6 $$ FileOutputStream out = FileUtils.openOutputStream(file)-->Line_10 $$ if (out != null) [ FD ]
Line_10 $$ if (out != null) -->Line_11 $$ out.close()[ CD ]
Line_6 $$ FileOutputStream out = FileUtils.openOutputStream(file)-->Line_11 $$ out.close()[ FD ]
Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)-->Line_15 $$ if (in != null) [ FD ]
Line_15 $$ if (in != null) -->Line_16 $$ in.close()[ CD ]
Line_4 $$ InputStream in = getClass().getResourceAsStream(resourceName)-->Line_16 $$ in.close()[ FD ]
Line_2 $$ private File extractResource(String resourceName, File destDir) -->Line_19 $$ return file[ CD ]
