Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File in, File out) throws FileNotFoundException, IOException [ CD ]
Line_2 $$ public static void copyFile(File in, File out) throws FileNotFoundException, IOException -->Line_3 $$ FileChannel sourceChannel = null[ CD ]
Line_2 $$ public static void copyFile(File in, File out) throws FileNotFoundException, IOException -->Line_4 $$ FileChannel destinationChannel = null[ CD ]
Line_3 $$ FileChannel sourceChannel = null-->Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()[ FD ]
Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()-->Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()[ FD ]
Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()-->Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()[ CD ]
Line_4 $$ FileChannel destinationChannel = null-->Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()[ FD ]
Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()-->Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()[ FD ]
Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()-->Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()[ CD ]
Line_3 $$ FileChannel sourceChannel = null-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_4 $$ FileChannel destinationChannel = null-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_3 $$ FileChannel sourceChannel = null-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_3 $$ FileChannel sourceChannel = null-->Line_11 $$ sourceChannel.close()[ FD ]
Line_6 $$ sourceChannel = new FileInputStream(in).getChannel()-->Line_11 $$ sourceChannel.close()[ FD ]
Line_4 $$ FileChannel destinationChannel = null-->Line_15 $$ destinationChannel.close()[ FD ]
Line_7 $$ destinationChannel = new FileOutputStream(out).getChannel()-->Line_15 $$ destinationChannel.close()[ FD ]
