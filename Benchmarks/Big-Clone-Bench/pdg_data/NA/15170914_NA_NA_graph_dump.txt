Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int download() [ CD ]
Line_2 $$ public int download() -->Line_3 $$ FTPClient client = null[ CD ]
Line_2 $$ public int download() -->Line_4 $$ URL url = null[ CD ]
Line_3 $$ FTPClient client = null-->Line_6 $$ client = new FTPClient()[ FD ]
Line_6 $$ client = new FTPClient()-->Line_6 $$ client = new FTPClient()[ FD ]
Line_4 $$ URL url = null-->Line_7 $$ url = new URL(ratingsUrl)[ FD ]
Line_7 $$ url = new URL(ratingsUrl)-->Line_7 $$ url = new URL(ratingsUrl)[ FD ]
Line_8 $$ if (log.isDebugEnabled())-->Line_8 $$ if (log.isDebugEnabled())[ CD ]
Line_8 $$ if (log.isDebugEnabled())-->Line_8 $$ log.debug("Downloading " + url)[ CD ]
Line_3 $$ FTPClient client = null-->Line_9 $$ client.connect(url.getHost())[ FD ]
Line_6 $$ client = new FTPClient()-->Line_9 $$ client.connect(url.getHost())[ FD ]
Line_4 $$ URL url = null-->Line_9 $$ client.connect(url.getHost())[ FD ]
Line_7 $$ url = new URL(ratingsUrl)-->Line_9 $$ client.connect(url.getHost())[ FD ]
Line_10 $$ int reply = client.getReplyCode()-->Line_10 $$ int reply = client.getReplyCode()[ CD ]
Line_3 $$ FTPClient client = null-->Line_10 $$ int reply = client.getReplyCode()[ FD ]
Line_6 $$ client = new FTPClient()-->Line_10 $$ int reply = client.getReplyCode()[ FD ]
Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_10 $$ int reply = client.getReplyCode()-->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_12 $$ if (log.isErrorEnabled())[ CD ]
Line_12 $$ if (log.isErrorEnabled())-->Line_12 $$ if (log.isErrorEnabled())[ CD ]
Line_12 $$ if (log.isErrorEnabled())-->Line_12 $$ log.error("Connection to " + url + " refused")[ CD ]
Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_13 $$ return RESULT_CONNECTION_REFUSED[ CD ]
Line_15 $$ if (log.isDebugEnabled())-->Line_15 $$ if (log.isDebugEnabled())[ CD ]
Line_15 $$ if (log.isDebugEnabled())-->Line_15 $$ log.debug("Logging in  l:" + getUserName() + " p:" + getPassword())[ CD ]
Line_3 $$ FTPClient client = null-->Line_16 $$ client.login(getUserName(), getPassword())[ FD ]
Line_6 $$ client = new FTPClient()-->Line_16 $$ client.login(getUserName(), getPassword())[ FD ]
Line_3 $$ FTPClient client = null-->Line_17 $$ client.changeWorkingDirectory(url.getPath())[ FD ]
Line_6 $$ client = new FTPClient()-->Line_17 $$ client.changeWorkingDirectory(url.getPath())[ FD ]
Line_4 $$ URL url = null-->Line_17 $$ client.changeWorkingDirectory(url.getPath())[ FD ]
Line_7 $$ url = new URL(ratingsUrl)-->Line_17 $$ client.changeWorkingDirectory(url.getPath())[ FD ]
Line_18 $$ FTPFile[] files = client.listFiles(url.getPath())-->Line_18 $$ FTPFile[] files = client.listFiles(url.getPath())[ CD ]
Line_3 $$ FTPClient client = null-->Line_18 $$ FTPFile[] files = client.listFiles(url.getPath())[ FD ]
Line_6 $$ client = new FTPClient()-->Line_18 $$ FTPFile[] files = client.listFiles(url.getPath())[ FD ]
Line_4 $$ URL url = null-->Line_18 $$ FTPFile[] files = client.listFiles(url.getPath())[ FD ]
Line_7 $$ url = new URL(ratingsUrl)-->Line_18 $$ FTPFile[] files = client.listFiles(url.getPath())[ FD ]
Line_21 $$ if (log.isDebugEnabled())-->Line_21 $$ if (log.isDebugEnabled())[ CD ]
Line_21 $$ if (log.isDebugEnabled())-->Line_21 $$ log.debug("Remote file data: " + remote)[ CD ]
Line_22 $$ File local = new File(getOutputFile())-->Line_23 $$ if (local.exists()) [ FD ]
Line_23 $$ if (local.exists()) -->Line_23 $$ if (local.exists()) [ CD ]
Line_22 $$ File local = new File(getOutputFile())-->Line_23 $$ if (local.exists()) [ FD ]
Line_23 $$ if (local.exists()) -->Line_24 $$ if ((local.lastModified() == remote.getTimestamp().getTimeInMillis())) [ CD ]
Line_22 $$ File local = new File(getOutputFile())-->Line_24 $$ if ((local.lastModified() == remote.getTimestamp().getTimeInMillis())) [ FD ]
Line_20 $$ FTPFile remote = files[0]-->Line_24 $$ if ((local.lastModified() == remote.getTimestamp().getTimeInMillis())) [ FD ]
Line_24 $$ if ((local.lastModified() == remote.getTimestamp().getTimeInMillis())) -->Line_25 $$ if (log.isDebugEnabled())[ CD ]
Line_25 $$ if (log.isDebugEnabled())-->Line_25 $$ if (log.isDebugEnabled())[ CD ]
Line_25 $$ if (log.isDebugEnabled())-->Line_25 $$ log.debug("File " + local.getAbsolutePath() + " is not changed on the server")[ CD ]
Line_22 $$ File local = new File(getOutputFile())-->Line_25 $$ log.debug("File " + local.getAbsolutePath() + " is not changed on the server")[ FD ]
Line_24 $$ if ((local.lastModified() == remote.getTimestamp().getTimeInMillis())) -->Line_26 $$ return RESULT_NO_NEW_FILE[ CD ]
Line_29 $$ if (log.isDebugEnabled())-->Line_29 $$ if (log.isDebugEnabled())[ CD ]
Line_29 $$ if (log.isDebugEnabled())-->Line_29 $$ log.debug("Setting binary transfer modes")[ CD ]
Line_3 $$ FTPClient client = null-->Line_30 $$ client.mode(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_6 $$ client = new FTPClient()-->Line_30 $$ client.mode(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_3 $$ FTPClient client = null-->Line_31 $$ client.setFileType(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_6 $$ client = new FTPClient()-->Line_31 $$ client.setFileType(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)-->Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)[ CD ]
Line_3 $$ FTPClient client = null-->Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)[ FD ]
Line_6 $$ client = new FTPClient()-->Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)[ FD ]
Line_32 $$ OutputStream fos = new FileOutputStream(local)-->Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)[ FD ]
Line_4 $$ URL url = null-->Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)[ FD ]
Line_7 $$ url = new URL(ratingsUrl)-->Line_33 $$ boolean result = client.retrieveFile(url.getPath(), fos)[ FD ]
Line_34 $$ if (log.isDebugEnabled())-->Line_34 $$ if (log.isDebugEnabled())[ CD ]
Line_34 $$ if (log.isDebugEnabled())-->Line_34 $$ log.debug("The transfer result is :" + result)[ CD ]
Line_32 $$ OutputStream fos = new FileOutputStream(local)-->Line_35 $$ fos.flush()[ FD ]
Line_32 $$ OutputStream fos = new FileOutputStream(local)-->Line_36 $$ fos.close()[ FD ]
Line_22 $$ File local = new File(getOutputFile())-->Line_37 $$ local.setLastModified(remote.getTimestamp().getTimeInMillis())[ FD ]
Line_20 $$ FTPFile remote = files[0]-->Line_37 $$ local.setLastModified(remote.getTimestamp().getTimeInMillis())[ FD ]
Line_38 $$ if (result)-->Line_38 $$ uncompress()[ CD ]
Line_39 $$ if (result)-->Line_39 $$ return RESULT_OK[ CD ]
Line_39 $$ if (result)-->Line_39 $$ return RESULT_TRANSFER_ERROR[ CD ]
Line_3 $$ FTPClient client = null-->Line_49 $$ if (client != null) [ FD ]
Line_6 $$ client = new FTPClient()-->Line_49 $$ if (client != null) [ FD ]
Line_51 $$ if (log.isDebugEnabled())-->Line_51 $$ if (log.isDebugEnabled())[ CD ]
Line_51 $$ if (log.isDebugEnabled())-->Line_51 $$ log.debug("Logging out")[ CD ]
Line_3 $$ FTPClient client = null-->Line_52 $$ client.logout()[ FD ]
Line_6 $$ client = new FTPClient()-->Line_52 $$ client.logout()[ FD ]
Line_56 $$ if (log.isDebugEnabled())-->Line_56 $$ if (log.isDebugEnabled())[ CD ]
Line_56 $$ if (log.isDebugEnabled())-->Line_56 $$ log.debug("Disconnecting")[ CD ]
Line_3 $$ FTPClient client = null-->Line_57 $$ client.disconnect()[ FD ]
Line_6 $$ client = new FTPClient()-->Line_57 $$ client.disconnect()[ FD ]
