Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_3 $$ if (key == null || key.length == 0) [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_6 $$ if (salt == null || salt.length == 0) [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_10 $$ _md.update(key)[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_10 $$ _md.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_10 $$ _md.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_11 $$ _md.update(MAGIC.getBytes())[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_11 $$ _md.update(MAGIC.getBytes())[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_12 $$ _md.update(salt)[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_12 $$ _md.update(salt)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_12 $$ _md.update(salt)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")[ CD ]
Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")-->Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_14 $$ md2.update(key)[ CD ]
Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")-->Line_14 $$ md2.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_14 $$ md2.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_15 $$ md2.update(salt)[ CD ]
Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")-->Line_15 $$ md2.update(salt)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_15 $$ md2.update(salt)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_16 $$ md2.update(key)[ CD ]
Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")-->Line_16 $$ md2.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_16 $$ md2.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_17 $$ byte[] abyFinal = md2.digest()[ CD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_17 $$ byte[] abyFinal = md2.digest()[ CD ]
Line_13 $$ final MessageDigest md2 = MessageDigest.getInstance("MD5")-->Line_17 $$ byte[] abyFinal = md2.digest()[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException [ CD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ CD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ CD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_19 $$ _md.update(abyFinal, 0, n > 16 ? 16 : n)[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_19 $$ _md.update(abyFinal, 0, n > 16 ? 16 : n)[ FD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_19 $$ _md.update(abyFinal, 0, n > 16 ? 16 : n)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_21 $$ abyFinal = new byte[] [ CD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_21 $$ abyFinal = new byte[] [ FD ]
Line_21 $$ abyFinal = new byte[] -->Line_21 $$ abyFinal = new byte[] [ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException [ CD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ CD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ CD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_23 $$ if ((i & 1) == 1)[ CD ]
Line_23 $$ if ((i & 1) == 1)-->Line_23 $$ _md.update(abyFinal, j, 1)[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_23 $$ _md.update(abyFinal, j, 1)[ FD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_23 $$ _md.update(abyFinal, j, 1)[ FD ]
Line_21 $$ abyFinal = new byte[] -->Line_23 $$ _md.update(abyFinal, j, 1)[ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_23 $$ _md.update(abyFinal, j, 1)[ FD ]
Line_23 $$ if ((i & 1) == 1)-->Line_23 $$ _md.update(key, j, 1)[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_23 $$ _md.update(key, j, 1)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_23 $$ _md.update(key, j, 1)[ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_23 $$ _md.update(key, j, 1)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()[ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_26 $$ sbPasswd.append(MAGIC)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_26 $$ sbPasswd.append(MAGIC)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_27 $$ sbPasswd.append(new String(salt))[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_27 $$ sbPasswd.append(new String(salt))[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_28 $$ sbPasswd.append('$')[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_28 $$ sbPasswd.append('$')[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_29 $$ abyFinal = _md.digest()[ CD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_29 $$ abyFinal = _md.digest()[ FD ]
Line_21 $$ abyFinal = new byte[] -->Line_29 $$ abyFinal = _md.digest()[ FD ]
Line_29 $$ abyFinal = _md.digest()-->Line_29 $$ abyFinal = _md.digest()[ FD ]
Line_29 $$ abyFinal = _md.digest()-->Line_29 $$ abyFinal = _md.digest()[ CD ]
Line_9 $$ final MessageDigest _md = MessageDigest.getInstance("MD5")-->Line_29 $$ abyFinal = _md.digest()[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_30 $$ for (int n = 0; n < 1000; n++) [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException [ CD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ CD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ CD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")[ CD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_32 $$ if ((n & 1) != 0) [ CD ]
Line_32 $$ if ((n & 1) != 0) -->Line_33 $$ md3.update(key)[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_33 $$ md3.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_33 $$ md3.update(key)[ FD ]
Line_32 $$ if ((n & 1) != 0) -->Line_35 $$ md3.update(abyFinal)[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_35 $$ md3.update(abyFinal)[ FD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_35 $$ md3.update(abyFinal)[ FD ]
Line_21 $$ abyFinal = new byte[] -->Line_35 $$ md3.update(abyFinal)[ FD ]
Line_29 $$ abyFinal = _md.digest()-->Line_35 $$ md3.update(abyFinal)[ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_37 $$ if ((n % 3) != 0) [ CD ]
Line_37 $$ if ((n % 3) != 0) -->Line_38 $$ md3.update(salt)[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_38 $$ md3.update(salt)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_38 $$ md3.update(salt)[ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_40 $$ if ((n % 7) != 0) [ CD ]
Line_40 $$ if ((n % 7) != 0) -->Line_41 $$ md3.update(key)[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_41 $$ md3.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_41 $$ md3.update(key)[ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_43 $$ if ((n & 1) != 0) [ CD ]
Line_43 $$ if ((n & 1) != 0) -->Line_44 $$ md3.update(abyFinal)[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_44 $$ md3.update(abyFinal)[ FD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_44 $$ md3.update(abyFinal)[ FD ]
Line_21 $$ abyFinal = new byte[] -->Line_44 $$ md3.update(abyFinal)[ FD ]
Line_29 $$ abyFinal = _md.digest()-->Line_44 $$ md3.update(abyFinal)[ FD ]
Line_43 $$ if ((n & 1) != 0) -->Line_46 $$ md3.update(key)[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_46 $$ md3.update(key)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_46 $$ md3.update(key)[ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_48 $$ abyFinal = md3.digest()[ CD ]
Line_48 $$ abyFinal = md3.digest()-->Line_48 $$ abyFinal = md3.digest()[ FD ]
Line_17 $$ byte[] abyFinal = md2.digest()-->Line_48 $$ abyFinal = md3.digest()[ FD ]
Line_21 $$ abyFinal = new byte[] -->Line_48 $$ abyFinal = md3.digest()[ FD ]
Line_29 $$ abyFinal = _md.digest()-->Line_48 $$ abyFinal = md3.digest()[ FD ]
Line_48 $$ abyFinal = md3.digest()-->Line_48 $$ abyFinal = md3.digest()[ CD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_48 $$ abyFinal = md3.digest()[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_50 $$ int[] anFinal = new int[] [ CD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_51 $$ to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_51 $$ to64(sbPasswd, anFinal[0] << 16 | anFinal[6] << 8 | anFinal[12], 4)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_52 $$ to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_52 $$ to64(sbPasswd, anFinal[1] << 16 | anFinal[7] << 8 | anFinal[13], 4)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_53 $$ to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_53 $$ to64(sbPasswd, anFinal[2] << 16 | anFinal[8] << 8 | anFinal[14], 4)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_54 $$ to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_54 $$ to64(sbPasswd, anFinal[3] << 16 | anFinal[9] << 8 | anFinal[15], 4)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_55 $$ to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_55 $$ to64(sbPasswd, anFinal[4] << 16 | anFinal[10] << 8 | anFinal[5], 4)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_56 $$ to64(sbPasswd, anFinal[11], 2)[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_56 $$ to64(sbPasswd, anFinal[11], 2)[ FD ]
Line_2 $$ public static String md5Crypt(final byte[] key, final byte[] salt) throws NoSuchAlgorithmException -->Line_57 $$ return sbPasswd.toString()[ CD ]
Line_57 $$ return sbPasswd.toString()-->Line_57 $$ return sbPasswd.toString()[ CD ]
Line_25 $$ final StringBuilder sbPasswd = new StringBuilder()-->Line_57 $$ return sbPasswd.toString()[ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ FD ]
Line_18 $$ for (int n = key.length; n > 0; n -= 16) -->Line_18 $$ for (int n = key.length; n > 0; n -= 16) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) [ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_23 $$ _md.update(abyFinal, j, 1)[ FD ]
Line_22 $$ for (int j = 0, i = key.length; i != 0; i >>>= 1) -->Line_23 $$ _md.update(key, j, 1)[ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_30 $$ for (int n = 0; n < 1000; n++) -->Line_30 $$ for (int n = 0; n < 1000; n++) [ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_33 $$ md3.update(key)[ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_35 $$ md3.update(abyFinal)[ FD ]
Line_48 $$ abyFinal = md3.digest()-->Line_35 $$ md3.update(abyFinal)[ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_38 $$ md3.update(salt)[ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_41 $$ md3.update(key)[ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_44 $$ md3.update(abyFinal)[ FD ]
Line_48 $$ abyFinal = md3.digest()-->Line_44 $$ md3.update(abyFinal)[ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_46 $$ md3.update(key)[ FD ]
Line_31 $$ final MessageDigest md3 = MessageDigest.getInstance("MD5")-->Line_48 $$ abyFinal = md3.digest()[ FD ]
