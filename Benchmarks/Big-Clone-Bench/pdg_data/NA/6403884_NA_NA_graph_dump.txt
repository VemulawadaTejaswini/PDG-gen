Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException [ CD ]
Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException -->Line_3 $$ byte[] buf[ CD ]
Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException -->Line_4 $$ File oldClass = new File(lastVerPath.getAbsolutePath() + File.separator + installClassName_ + ".class")[ CD ]
Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException -->Line_4 $$ File oldClass = new File(lastVerPath.getAbsolutePath() + File.separator + installClassName_ + ".class")[ FD ]
Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException -->Line_5 $$ if (oldClass.exists()) [ CD ]
Line_4 $$ File oldClass = new File(lastVerPath.getAbsolutePath() + File.separator + installClassName_ + ".class")-->Line_5 $$ if (oldClass.exists()) [ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_5 $$ if (oldClass.exists()) [ CD ]
Line_4 $$ File oldClass = new File(lastVerPath.getAbsolutePath() + File.separator + installClassName_ + ".class")-->Line_5 $$ if (oldClass.exists()) [ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_6 $$ FileOutputStream out = new FileOutputStream(destPath.getAbsolutePath() + File.separator + installClassName_ + ".class")[ CD ]
Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException -->Line_6 $$ FileOutputStream out = new FileOutputStream(destPath.getAbsolutePath() + File.separator + installClassName_ + ".class")[ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_7 $$ FileInputStream in = new FileInputStream(oldClass)[ CD ]
Line_5 $$ if (oldClass.exists()) -->Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()][ CD ]
Line_3 $$ byte[] buf-->Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()][ FD ]
Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()]-->Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()][ FD ]
Line_4 $$ File oldClass = new File(lastVerPath.getAbsolutePath() + File.separator + installClassName_ + ".class")-->Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()][ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_9 $$ int read = in.read(buf, 0, buf.length)[ CD ]
Line_9 $$ int read = in.read(buf, 0, buf.length)-->Line_9 $$ int read = in.read(buf, 0, buf.length)[ CD ]
Line_7 $$ FileInputStream in = new FileInputStream(oldClass)-->Line_9 $$ int read = in.read(buf, 0, buf.length)[ FD ]
Line_3 $$ byte[] buf-->Line_9 $$ int read = in.read(buf, 0, buf.length)[ FD ]
Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()]-->Line_9 $$ int read = in.read(buf, 0, buf.length)[ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_10 $$ out.write(buf, 0, read)[ CD ]
Line_6 $$ FileOutputStream out = new FileOutputStream(destPath.getAbsolutePath() + File.separator + installClassName_ + ".class")-->Line_10 $$ out.write(buf, 0, read)[ FD ]
Line_3 $$ byte[] buf-->Line_10 $$ out.write(buf, 0, read)[ FD ]
Line_8 $$ buf = new byte[(new Long(oldClass.length())).intValue()]-->Line_10 $$ out.write(buf, 0, read)[ FD ]
Line_9 $$ int read = in.read(buf, 0, buf.length)-->Line_10 $$ out.write(buf, 0, read)[ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_11 $$ out.close()[ CD ]
Line_6 $$ FileOutputStream out = new FileOutputStream(destPath.getAbsolutePath() + File.separator + installClassName_ + ".class")-->Line_11 $$ out.close()[ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_12 $$ in.close()[ CD ]
Line_7 $$ FileInputStream in = new FileInputStream(oldClass)-->Line_12 $$ in.close()[ FD ]
Line_5 $$ if (oldClass.exists()) -->Line_13 $$ return true[ CD ]
Line_2 $$ private boolean copyOldSetupClass(File lastVerPath, File destPath) throws java.io.FileNotFoundException, IOException -->Line_15 $$ return false[ CD ]
