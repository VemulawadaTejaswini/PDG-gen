Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException [ CD ]
Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException -->Line_3 $$ Map<String, String> result = new LinkedHashMap()[ CD ]
Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException -->Line_4 $$ while (urls.hasNext()) [ CD ]
Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException -->Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException [ CD ]
Line_4 $$ while (urls.hasNext()) -->Line_4 $$ while (urls.hasNext()) [ CD ]
Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException -->Line_4 $$ while (urls.hasNext()) [ FD ]
Line_4 $$ while (urls.hasNext()) -->Line_5 $$ URL url = urls.next()[ CD ]
Line_5 $$ URL url = urls.next()-->Line_5 $$ URL url = urls.next()[ CD ]
Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException -->Line_5 $$ URL url = urls.next()[ FD ]
Line_4 $$ while (urls.hasNext()) -->Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_5 $$ URL url = urls.next()-->Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_4 $$ while (urls.hasNext()) -->Line_7 $$ String s = reader.readLine()[ CD ]
Line_7 $$ String s = reader.readLine()-->Line_7 $$ String s = reader.readLine()[ CD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_7 $$ String s = reader.readLine()[ FD ]
Line_4 $$ while (urls.hasNext()) -->Line_8 $$ while (s != null) [ CD ]
Line_4 $$ while (urls.hasNext()) -->Line_4 $$ while (urls.hasNext()) [ CD ]
Line_7 $$ String s = reader.readLine()-->Line_8 $$ while (s != null) [ FD ]
Line_8 $$ while (s != null) -->Line_9 $$ s = s.trim()[ CD ]
Line_9 $$ s = s.trim()-->Line_9 $$ s = s.trim()[ FD ]
Line_7 $$ String s = reader.readLine()-->Line_9 $$ s = s.trim()[ FD ]
Line_9 $$ s = s.trim()-->Line_9 $$ s = s.trim()[ CD ]
Line_9 $$ s = s.trim()-->Line_9 $$ s = s.trim()[ FD ]
Line_7 $$ String s = reader.readLine()-->Line_9 $$ s = s.trim()[ FD ]
Line_8 $$ while (s != null) -->Line_10 $$ if (s.length() > 0) [ CD ]
Line_9 $$ s = s.trim()-->Line_10 $$ if (s.length() > 0) [ FD ]
Line_7 $$ String s = reader.readLine()-->Line_10 $$ if (s.length() > 0) [ FD ]
Line_10 $$ if (s.length() > 0) -->Line_11 $$ String[] ss = s.split("\\s")[ CD ]
Line_11 $$ String[] ss = s.split("\\s")-->Line_11 $$ String[] ss = s.split("\\s")[ CD ]
Line_9 $$ s = s.trim()-->Line_11 $$ String[] ss = s.split("\\s")[ FD ]
Line_7 $$ String s = reader.readLine()-->Line_11 $$ String[] ss = s.split("\\s")[ FD ]
Line_10 $$ if (s.length() > 0) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ CD ]
Line_10 $$ if (s.length() > 0) -->Line_10 $$ if (s.length() > 0) [ CD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ CD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ CD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_13 $$ result.put(ss[i], ss[0])[ CD ]
Line_3 $$ Map<String, String> result = new LinkedHashMap()-->Line_13 $$ result.put(ss[i], ss[0])[ FD ]
Line_8 $$ while (s != null) -->Line_16 $$ s = reader.readLine()[ CD ]
Line_9 $$ s = s.trim()-->Line_16 $$ s = reader.readLine()[ FD ]
Line_16 $$ s = reader.readLine()-->Line_16 $$ s = reader.readLine()[ FD ]
Line_7 $$ String s = reader.readLine()-->Line_16 $$ s = reader.readLine()[ FD ]
Line_16 $$ s = reader.readLine()-->Line_16 $$ s = reader.readLine()[ CD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_16 $$ s = reader.readLine()[ FD ]
Line_4 $$ while (urls.hasNext()) -->Line_18 $$ reader.close()[ CD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_18 $$ reader.close()[ FD ]
Line_2 $$ private Map<String, String> readStuff(Iterator<URL> urls) throws IOException -->Line_20 $$ return result[ CD ]
Line_5 $$ URL url = urls.next()-->Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_7 $$ String s = reader.readLine()[ FD ]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_18 $$ reader.close()[ FD ]
Line_9 $$ s = s.trim()-->Line_8 $$ while (s != null) [ FD ]
Line_16 $$ s = reader.readLine()-->Line_8 $$ while (s != null) [ FD ]
Line_9 $$ s = s.trim()-->Line_8 $$ while (s != null) [ FD ]
Line_16 $$ s = reader.readLine()-->Line_8 $$ while (s != null) [ FD ]
Line_9 $$ s = s.trim()-->Line_9 $$ s = s.trim()[ FD ]
Line_16 $$ s = reader.readLine()-->Line_9 $$ s = s.trim()[ FD ]
Line_9 $$ s = s.trim()-->Line_10 $$ if (s.length() > 0) [ FD ]
Line_16 $$ s = reader.readLine()-->Line_10 $$ if (s.length() > 0) [ FD ]
Line_9 $$ s = s.trim()-->Line_11 $$ String[] ss = s.split("\\s")[ FD ]
Line_16 $$ s = reader.readLine()-->Line_11 $$ String[] ss = s.split("\\s")[ FD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i < ss.length; i++) -->Line_12 $$ for (int i = 1; i < ss.length; i++) [ FD ]
