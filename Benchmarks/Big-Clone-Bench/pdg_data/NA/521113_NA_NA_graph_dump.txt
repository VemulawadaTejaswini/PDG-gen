Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ int[] slowSort() [ CD ]
Line_2 $$ int[] slowSort() -->Line_3 $$ int[] values = getValues()[ CD ]
Line_3 $$ int[] values = getValues()-->Line_3 $$ int[] values = getValues()[ CD ]
Line_2 $$ int[] slowSort() -->Line_4 $$ int n = values.length[ CD ]
Line_2 $$ int[] slowSort() -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ CD ]
Line_2 $$ int[] slowSort() -->Line_2 $$ int[] slowSort() [ CD ]
Line_4 $$ int n = values.length-->Line_5 $$ for (int pass = 1; pass < n; pass++) [ FD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ CD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ CD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ FD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ CD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ CD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_7 $$ if (values[i] > values[i + 1]) [ CD ]
Line_7 $$ if (values[i] > values[i + 1]) -->Line_8 $$ int temp = values[i][ CD ]
Line_7 $$ if (values[i] > values[i + 1]) -->Line_9 $$ values[i] = values[i + 1][ CD ]
Line_7 $$ if (values[i] > values[i + 1]) -->Line_10 $$ values[i + 1] = temp[ CD ]
Line_8 $$ int temp = values[i]-->Line_10 $$ values[i + 1] = temp[ FD ]
Line_2 $$ int[] slowSort() -->Line_14 $$ return values[ CD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ FD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ FD ]
Line_5 $$ for (int pass = 1; pass < n; pass++) -->Line_5 $$ for (int pass = 1; pass < n; pass++) [ FD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n - pass; i++) -->Line_6 $$ for (int i = 0; i < n - pass; i++) [ FD ]
Line_8 $$ int temp = values[i]-->Line_10 $$ values[i + 1] = temp[ FD ]
