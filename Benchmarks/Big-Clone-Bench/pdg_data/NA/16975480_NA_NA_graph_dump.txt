Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ String baseUrl[ CD ]
Line_2 $$ public void run() -->Line_4 $$ if (_rdoSRTM3FtpUrl.getSelection()) [ CD ]
Line_4 $$ if (_rdoSRTM3FtpUrl.getSelection()) -->Line_4 $$ if (_rdoSRTM3FtpUrl.getSelection()) [ CD ]
Line_4 $$ if (_rdoSRTM3FtpUrl.getSelection()) -->Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()[ CD ]
Line_3 $$ String baseUrl-->Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()[ FD ]
Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()-->Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()[ FD ]
Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()-->Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()[ CD ]
Line_8 $$ final URL url = new URL(baseUrl)-->Line_9 $$ final HttpURLConnection urlConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_9 $$ final HttpURLConnection urlConn = (HttpURLConnection) url.openConnection()-->Line_10 $$ urlConn.connect()[ FD ]
Line_11 $$ final int response = urlConn.getResponseCode()-->Line_11 $$ final int response = urlConn.getResponseCode()[ CD ]
Line_9 $$ final HttpURLConnection urlConn = (HttpURLConnection) url.openConnection()-->Line_11 $$ final int response = urlConn.getResponseCode()[ FD ]
Line_12 $$ final String responseMessage = urlConn.getResponseMessage()-->Line_12 $$ final String responseMessage = urlConn.getResponseMessage()[ CD ]
Line_9 $$ final HttpURLConnection urlConn = (HttpURLConnection) url.openConnection()-->Line_12 $$ final String responseMessage = urlConn.getResponseMessage()[ FD ]
Line_3 $$ String baseUrl-->Line_13 $$ final String message = response == HttpURLConnection.HTTP_OK ? NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionOK_message, baseUrl) : NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionFAILED_message, new Object[] [ FD ]
Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()-->Line_13 $$ final String message = response == HttpURLConnection.HTTP_OK ? NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionOK_message, baseUrl) : NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionFAILED_message, new Object[] [ FD ]
Line_11 $$ final int response = urlConn.getResponseCode()-->Line_13 $$ final String message = response == HttpURLConnection.HTTP_OK ? NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionOK_message, baseUrl) : NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionFAILED_message, new Object[] [ FD ]
Line_13 $$ final String message = response == HttpURLConnection.HTTP_OK ? NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionOK_message, baseUrl) : NLS.bind(Messages.prefPage_srtm_checkHTTPConnectionFAILED_message, new Object[] -->Line_14 $$ MessageDialog.openInformation(Display.getCurrent().getActiveShell(), Messages.prefPage_srtm_checkHTTPConnection_title, message)[ FD ]
Line_3 $$ String baseUrl-->Line_16 $$ MessageDialog.openInformation(Display.getCurrent().getActiveShell(), Messages.prefPage_srtm_checkHTTPConnection_title, NLS.bind(Messages.prefPage_srtm_checkHTTPConnection_message, baseUrl))[ FD ]
Line_6 $$ baseUrl = _txtSRTM3HttpUrl.getText().trim()-->Line_16 $$ MessageDialog.openInformation(Display.getCurrent().getActiveShell(), Messages.prefPage_srtm_checkHTTPConnection_title, NLS.bind(Messages.prefPage_srtm_checkHTTPConnection_message, baseUrl))[ FD ]
