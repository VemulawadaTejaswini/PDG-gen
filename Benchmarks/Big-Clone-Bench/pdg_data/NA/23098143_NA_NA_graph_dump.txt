Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void process() [ CD ]
Line_7 $$ String zipDir = P.DIR.getPKBDataPath()-->Line_7 $$ String zipDir = P.DIR.getPKBDataPath()[ CD ]
Line_9 $$ List<String> fileList = getFilesToZip(zipDir)-->Line_9 $$ List<String> fileList = getFilesToZip(zipDir)[ CD ]
Line_7 $$ String zipDir = P.DIR.getPKBDataPath()-->Line_9 $$ List<String> fileList = getFilesToZip(zipDir)[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_9 $$ List<String> fileList = getFilesToZip(zipDir)-->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_15 $$ String filePath = fileList.get(i)[ CD ]
Line_15 $$ String filePath = fileList.get(i)-->Line_15 $$ String filePath = fileList.get(i)[ CD ]
Line_9 $$ List<String> fileList = getFilesToZip(zipDir)-->Line_15 $$ String filePath = fileList.get(i)[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_15 $$ String filePath = fileList.get(i)[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_16 $$ File f = new File(filePath)[ CD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_17 $$ FileInputStream fis = new FileInputStream(f)[ CD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_18 $$ String zipEntryName = f.getPath().substring(zipDir.length() + 1)[ CD ]
Line_18 $$ String zipEntryName = f.getPath().substring(zipDir.length() + 1)-->Line_18 $$ String zipEntryName = f.getPath().substring(zipDir.length() + 1)[ CD ]
Line_16 $$ File f = new File(filePath)-->Line_18 $$ String zipEntryName = f.getPath().substring(zipDir.length() + 1)[ FD ]
Line_7 $$ String zipDir = P.DIR.getPKBDataPath()-->Line_18 $$ String zipEntryName = f.getPath().substring(zipDir.length() + 1)[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_19 $$ ZipEntry anEntry = new ZipEntry(zipEntryName)[ CD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_20 $$ zout.putNextEntry(anEntry)[ CD ]
Line_11 $$ ZipOutputStream zout = new ZipOutputStream(new FileOutputStream(file))-->Line_20 $$ zout.putNextEntry(anEntry)[ FD ]
Line_19 $$ ZipEntry anEntry = new ZipEntry(zipEntryName)-->Line_20 $$ zout.putNextEntry(anEntry)[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) [ CD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) -->Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) [ FD ]
Line_13 $$ int bytesIn = 0-->Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) [ FD ]
Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) -->Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) [ CD ]
Line_17 $$ FileInputStream fis = new FileInputStream(f)-->Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) [ FD ]
Line_12 $$ byte[] readBuffer = new byte[2156]-->Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) [ FD ]
Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) -->Line_22 $$ zout.write(readBuffer, 0, bytesIn)[ CD ]
Line_11 $$ ZipOutputStream zout = new ZipOutputStream(new FileOutputStream(file))-->Line_22 $$ zout.write(readBuffer, 0, bytesIn)[ FD ]
Line_12 $$ byte[] readBuffer = new byte[2156]-->Line_22 $$ zout.write(readBuffer, 0, bytesIn)[ FD ]
Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) -->Line_22 $$ zout.write(readBuffer, 0, bytesIn)[ FD ]
Line_13 $$ int bytesIn = 0-->Line_22 $$ zout.write(readBuffer, 0, bytesIn)[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_24 $$ fis.close()[ CD ]
Line_17 $$ FileInputStream fis = new FileInputStream(f)-->Line_24 $$ fis.close()[ FD ]
Line_9 $$ List<String> fileList = getFilesToZip(zipDir)-->Line_25 $$ int percentage = (int) Math.round((i + 1) * 80.0 / fileList.size())[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_26 $$ update("Backup in progress ...", 10 + percentage)[ CD ]
Line_11 $$ ZipOutputStream zout = new ZipOutputStream(new FileOutputStream(file))-->Line_28 $$ zout.close()[ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < fileList.size(); i++) -->Line_15 $$ String filePath = fileList.get(i)[ FD ]
Line_16 $$ File f = new File(filePath)-->Line_18 $$ String zipEntryName = f.getPath().substring(zipDir.length() + 1)[ FD ]
Line_19 $$ ZipEntry anEntry = new ZipEntry(zipEntryName)-->Line_20 $$ zout.putNextEntry(anEntry)[ FD ]
Line_17 $$ FileInputStream fis = new FileInputStream(f)-->Line_24 $$ fis.close()[ FD ]
Line_21 $$ while ((bytesIn = fis.read(readBuffer)) != -1) -->Line_22 $$ zout.write(readBuffer, 0, bytesIn)[ FD ]
