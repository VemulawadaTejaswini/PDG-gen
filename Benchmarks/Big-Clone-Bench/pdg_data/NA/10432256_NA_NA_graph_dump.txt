Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void copyImage(ProjectElement e) throws Exception [ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_3 $$ String fn = e.getName()[ CD ]
Line_3 $$ String fn = e.getName()-->Line_3 $$ String fn = e.getName()[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_3 $$ String fn = e.getName()[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) [ CD ]
Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) -->Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) [ CD ]
Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) -->Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) [ CD ]
Line_3 $$ String fn = e.getName()-->Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) [ FD ]
Line_4 $$ if (!fn.toLowerCase().endsWith(".png")) -->Line_5 $$ if (fn.contains(".")) [ CD ]
Line_3 $$ String fn = e.getName()-->Line_5 $$ if (fn.contains(".")) [ FD ]
Line_5 $$ if (fn.contains(".")) -->Line_5 $$ if (fn.contains(".")) [ CD ]
Line_3 $$ String fn = e.getName()-->Line_5 $$ if (fn.contains(".")) [ FD ]
Line_5 $$ if (fn.contains(".")) -->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ CD ]
Line_3 $$ String fn = e.getName()-->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ FD ]
Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"-->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ FD ]
Line_3 $$ String fn = e.getName()-->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ FD ]
Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"-->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ FD ]
Line_3 $$ String fn = e.getName()-->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ FD ]
Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"-->Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"[ FD ]
Line_5 $$ if (fn.contains(".")) -->Line_8 $$ fn += ".png"[ CD ]
Line_3 $$ String fn = e.getName()-->Line_8 $$ fn += ".png"[ FD ]
Line_6 $$ fn = fn.substring(0, fn.lastIndexOf('.')) + ".png"-->Line_8 $$ fn += ".png"[ FD ]
Line_8 $$ fn += ".png"-->Line_8 $$ fn += ".png"[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_11 $$ File img = new File(resFolder, fn)[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_12 $$ File imgz = new File(resoutFolder.getAbsolutePath(), fn + ".zlib")[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_13 $$ boolean copy = true[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_14 $$ if (img.exists() && config.containsKey(img.getName())) [ CD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_14 $$ if (img.exists() && config.containsKey(img.getName())) [ FD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_14 $$ if (img.exists() && config.containsKey(img.getName())) [ FD ]
Line_14 $$ if (img.exists() && config.containsKey(img.getName())) -->Line_15 $$ long modified = Long.parseLong(config.get(img.getName()))[ CD ]
Line_15 $$ long modified = Long.parseLong(config.get(img.getName()))-->Line_15 $$ long modified = Long.parseLong(config.get(img.getName()))[ CD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_15 $$ long modified = Long.parseLong(config.get(img.getName()))[ FD ]
Line_14 $$ if (img.exists() && config.containsKey(img.getName())) -->Line_16 $$ if (modified >= img.lastModified()) [ CD ]
Line_15 $$ long modified = Long.parseLong(config.get(img.getName()))-->Line_16 $$ if (modified >= img.lastModified()) [ FD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_16 $$ if (modified >= img.lastModified()) [ FD ]
Line_16 $$ if (modified >= img.lastModified()) -->Line_17 $$ copy = false[ CD ]
Line_13 $$ boolean copy = true-->Line_17 $$ copy = false[ FD ]
Line_17 $$ copy = false-->Line_17 $$ copy = false[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_20 $$ if (copy) [ CD ]
Line_20 $$ if (copy) -->Line_21 $$ convertImage(e.getFile(), img)[ CD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_21 $$ convertImage(e.getFile(), img)[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_21 $$ convertImage(e.getFile(), img)[ FD ]
Line_20 $$ if (copy) -->Line_22 $$ config.put(img.getName(), String.valueOf(img.lastModified()))[ CD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_22 $$ config.put(img.getName(), String.valueOf(img.lastModified()))[ FD ]
Line_11 $$ File img = new File(resFolder, fn)-->Line_22 $$ config.put(img.getName(), String.valueOf(img.lastModified()))[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_24 $$ DeflaterOutputStream out = new DeflaterOutputStream(new BufferedOutputStream(new FileOutputStream(imgz)))[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_25 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(img))[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_26 $$ int read[ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_27 $$ while ((read = in.read()) != -1) [ CD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_2 $$ private void copyImage(ProjectElement e) throws Exception [ CD ]
Line_27 $$ while ((read = in.read()) != -1) -->Line_27 $$ while ((read = in.read()) != -1) [ FD ]
Line_26 $$ int read-->Line_27 $$ while ((read = in.read()) != -1) [ FD ]
Line_27 $$ while ((read = in.read()) != -1) -->Line_27 $$ while ((read = in.read()) != -1) [ CD ]
Line_25 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(img))-->Line_27 $$ while ((read = in.read()) != -1) [ FD ]
Line_27 $$ while ((read = in.read()) != -1) -->Line_28 $$ out.write(read)[ CD ]
Line_24 $$ DeflaterOutputStream out = new DeflaterOutputStream(new BufferedOutputStream(new FileOutputStream(imgz)))-->Line_28 $$ out.write(read)[ FD ]
Line_27 $$ while ((read = in.read()) != -1) -->Line_28 $$ out.write(read)[ FD ]
Line_26 $$ int read-->Line_28 $$ out.write(read)[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_30 $$ out.close()[ CD ]
Line_24 $$ DeflaterOutputStream out = new DeflaterOutputStream(new BufferedOutputStream(new FileOutputStream(imgz)))-->Line_30 $$ out.close()[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_31 $$ in.close()[ CD ]
Line_25 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(img))-->Line_31 $$ in.close()[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_32 $$ imageFiles.add(imgz)[ CD ]
Line_12 $$ File imgz = new File(resoutFolder.getAbsolutePath(), fn + ".zlib")-->Line_32 $$ imageFiles.add(imgz)[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_33 $$ imageNames.put(imgz, e.getName())[ CD ]
Line_12 $$ File imgz = new File(resoutFolder.getAbsolutePath(), fn + ".zlib")-->Line_33 $$ imageNames.put(imgz, e.getName())[ FD ]
Line_2 $$ private void copyImage(ProjectElement e) throws Exception -->Line_33 $$ imageNames.put(imgz, e.getName())[ FD ]
Line_27 $$ while ((read = in.read()) != -1) -->Line_28 $$ out.write(read)[ FD ]
