Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException [ CD ]
Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException -->Line_3 $$ log("Copying file " + sourceFilename + " to " + destDirname)[ CD ]
Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException -->Line_4 $$ File destFile = getDestFile(sourceFilename, destDirname)[ CD ]
Line_4 $$ File destFile = getDestFile(sourceFilename, destDirname)-->Line_4 $$ File destFile = getDestFile(sourceFilename, destDirname)[ CD ]
Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException -->Line_4 $$ File destFile = getDestFile(sourceFilename, destDirname)[ FD ]
Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException -->Line_4 $$ File destFile = getDestFile(sourceFilename, destDirname)[ FD ]
Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException -->Line_5 $$ InputStream inStream = null[ CD ]
Line_2 $$ private void copyFile(String sourceFilename, String destDirname) throws BuildException -->Line_6 $$ OutputStream outStream = null[ CD ]
Line_5 $$ InputStream inStream = null-->Line_8 $$ inStream = new BufferedInputStream(new FileInputStream(sourceFilename))[ FD ]
Line_8 $$ inStream = new BufferedInputStream(new FileInputStream(sourceFilename))-->Line_8 $$ inStream = new BufferedInputStream(new FileInputStream(sourceFilename))[ FD ]
Line_6 $$ OutputStream outStream = null-->Line_9 $$ outStream = new BufferedOutputStream(new FileOutputStream(destFile))[ FD ]
Line_9 $$ outStream = new BufferedOutputStream(new FileOutputStream(destFile))-->Line_9 $$ outStream = new BufferedOutputStream(new FileOutputStream(destFile))[ FD ]
Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)-->Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)[ FD ]
Line_11 $$ int n = 0-->Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)[ FD ]
Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)-->Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)[ CD ]
Line_5 $$ InputStream inStream = null-->Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)[ FD ]
Line_8 $$ inStream = new BufferedInputStream(new FileInputStream(sourceFilename))-->Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)[ FD ]
Line_10 $$ byte[] buffer = new byte[1024]-->Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)[ FD ]
Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)-->Line_12 $$ outStream.write(buffer, 0, n)[ CD ]
Line_6 $$ OutputStream outStream = null-->Line_12 $$ outStream.write(buffer, 0, n)[ FD ]
Line_9 $$ outStream = new BufferedOutputStream(new FileOutputStream(destFile))-->Line_12 $$ outStream.write(buffer, 0, n)[ FD ]
Line_10 $$ byte[] buffer = new byte[1024]-->Line_12 $$ outStream.write(buffer, 0, n)[ FD ]
Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)-->Line_12 $$ outStream.write(buffer, 0, n)[ FD ]
Line_11 $$ int n = 0-->Line_12 $$ outStream.write(buffer, 0, n)[ FD ]
Line_5 $$ InputStream inStream = null-->Line_17 $$ if (inStream != null)[ FD ]
Line_8 $$ inStream = new BufferedInputStream(new FileInputStream(sourceFilename))-->Line_17 $$ if (inStream != null)[ FD ]
Line_17 $$ if (inStream != null)-->Line_17 $$ inStream.close()[ CD ]
Line_5 $$ InputStream inStream = null-->Line_17 $$ inStream.close()[ FD ]
Line_8 $$ inStream = new BufferedInputStream(new FileInputStream(sourceFilename))-->Line_17 $$ inStream.close()[ FD ]
Line_6 $$ OutputStream outStream = null-->Line_21 $$ if (outStream != null)[ FD ]
Line_9 $$ outStream = new BufferedOutputStream(new FileOutputStream(destFile))-->Line_21 $$ if (outStream != null)[ FD ]
Line_21 $$ if (outStream != null)-->Line_21 $$ outStream.close()[ CD ]
Line_6 $$ OutputStream outStream = null-->Line_21 $$ outStream.close()[ FD ]
Line_9 $$ outStream = new BufferedOutputStream(new FileOutputStream(destFile))-->Line_21 $$ outStream.close()[ FD ]
Line_12 $$ while ((n = inStream.read(buffer)) != -1) outStream.write(buffer, 0, n)-->Line_12 $$ outStream.write(buffer, 0, n)[ FD ]
