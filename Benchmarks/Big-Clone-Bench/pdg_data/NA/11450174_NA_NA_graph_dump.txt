Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException [ CD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_3 $$ if (debug) [ CD ]
Line_3 $$ if (debug) -->Line_4 $$ System.out.println("      publishing page: " + path)[ CD ]
Line_3 $$ if (debug) -->Line_5 $$ System.out.println("        url == " + url)[ CD ]
Line_3 $$ if (debug) -->Line_6 $$ System.out.println("        file == " + outputFile)[ CD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_8 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_10 $$ InputStream is = url.openStream()-->Line_10 $$ InputStream is = url.openStream()[ CD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_10 $$ InputStream is = url.openStream()[ FD ]
Line_14 $$ String line-->Line_15 $$ do [ FD ]
Line_15 $$ do -->Line_16 $$ line = br.readLine()[ CD ]
Line_16 $$ line = br.readLine()-->Line_16 $$ line = br.readLine()[ FD ]
Line_14 $$ String line-->Line_16 $$ line = br.readLine()[ FD ]
Line_16 $$ line = br.readLine()-->Line_16 $$ line = br.readLine()[ CD ]
Line_12 $$ BufferedReader br = new BufferedReader(isr)-->Line_16 $$ line = br.readLine()[ FD ]
Line_15 $$ do -->Line_17 $$ if (line != null) [ CD ]
Line_16 $$ line = br.readLine()-->Line_17 $$ if (line != null) [ FD ]
Line_14 $$ String line-->Line_17 $$ if (line != null) [ FD ]
Line_17 $$ if (line != null) -->Line_18 $$ if (!firstLine)[ CD ]
Line_13 $$ boolean firstLine = true-->Line_18 $$ if (!firstLine)[ FD ]
Line_18 $$ if (!firstLine)-->Line_18 $$ if (!firstLine)[ CD ]
Line_13 $$ boolean firstLine = true-->Line_18 $$ if (!firstLine)[ FD ]
Line_18 $$ if (!firstLine)-->Line_18 $$ sb.append("\n")[ CD ]
Line_8 $$ StringBuffer sb = new StringBuffer()-->Line_18 $$ sb.append("\n")[ FD ]
Line_18 $$ if (!firstLine)-->Line_18 $$ firstLine = false[ CD ]
Line_18 $$ firstLine = false-->Line_18 $$ firstLine = false[ FD ]
Line_13 $$ boolean firstLine = true-->Line_18 $$ firstLine = false[ FD ]
Line_17 $$ if (line != null) -->Line_19 $$ sb.append(line)[ CD ]
Line_8 $$ StringBuffer sb = new StringBuffer()-->Line_19 $$ sb.append(line)[ FD ]
Line_16 $$ line = br.readLine()-->Line_19 $$ sb.append(line)[ FD ]
Line_14 $$ String line-->Line_19 $$ sb.append(line)[ FD ]
Line_12 $$ BufferedReader br = new BufferedReader(isr)-->Line_22 $$ br.close()[ FD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_24 $$ String mess = outputFile.toString() + ": " + e.getMessage()[ FD ]
Line_24 $$ String mess = outputFile.toString() + ": " + e.getMessage()-->Line_25 $$ errors.add(mess)[ FD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_27 $$ FileOutputStream fos = new FileOutputStream(outputFile)[ CD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_28 $$ OutputStreamWriter sw = new OutputStreamWriter(fos)[ CD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_29 $$ sw.write(sb.toString())[ CD ]
Line_28 $$ OutputStreamWriter sw = new OutputStreamWriter(fos)-->Line_29 $$ sw.write(sb.toString())[ FD ]
Line_8 $$ StringBuffer sb = new StringBuffer()-->Line_29 $$ sw.write(sb.toString())[ FD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_30 $$ sw.close()[ CD ]
Line_28 $$ OutputStreamWriter sw = new OutputStreamWriter(fos)-->Line_30 $$ sw.close()[ FD ]
Line_2 $$ private void publishPage(URL url, String path, File outputFile) throws IOException -->Line_31 $$ if (prepareArchive)[ CD ]
Line_31 $$ if (prepareArchive)-->Line_31 $$ archiveFiles.add(new ArchiveFile(path, outputFile))[ CD ]
Line_16 $$ line = br.readLine()-->Line_15 $$ do [ FD ]
Line_16 $$ line = br.readLine()-->Line_15 $$ do [ FD ]
Line_16 $$ line = br.readLine()-->Line_17 $$ if (line != null) [ FD ]
Line_18 $$ firstLine = false-->Line_18 $$ if (!firstLine)[ FD ]
Line_18 $$ firstLine = false-->Line_18 $$ if (!firstLine)[ FD ]
Line_16 $$ line = br.readLine()-->Line_19 $$ sb.append(line)[ FD ]
