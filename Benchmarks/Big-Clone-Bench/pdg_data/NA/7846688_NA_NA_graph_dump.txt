Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception [ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_3 $$ if ((protocol == null) || (protocol.equals(""))) [ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_3 $$ if ((protocol == null) || (protocol.equals(""))) [ FD ]
Line_3 $$ if ((protocol == null) || (protocol.equals(""))) -->Line_4 $$ protocol = DEFAULT_PROTOCOL[ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_4 $$ protocol = DEFAULT_PROTOCOL[ FD ]
Line_4 $$ protocol = DEFAULT_PROTOCOL-->Line_4 $$ protocol = DEFAULT_PROTOCOL[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_6 $$ if ((host == null) || (host.equals(""))) [ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_6 $$ if ((host == null) || (host.equals(""))) [ FD ]
Line_6 $$ if ((host == null) || (host.equals(""))) -->Line_7 $$ host = DEFAULT_HOST[ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_7 $$ host = DEFAULT_HOST[ FD ]
Line_7 $$ host = DEFAULT_HOST-->Line_7 $$ host = DEFAULT_HOST[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_9 $$ if (form == null) [ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_9 $$ if (form == null) [ FD ]
Line_9 $$ if (form == null) -->Line_10 $$ form = DEFAULT_FORM[ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_10 $$ form = DEFAULT_FORM[ FD ]
Line_10 $$ form = DEFAULT_FORM-->Line_10 $$ form = DEFAULT_FORM[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_12 $$ if (data == null) [ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_12 $$ if (data == null) [ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_15 $$ URL url = new URL(protocol, host, form)[ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_16 $$ URLConnection con = url.openConnection()[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_16 $$ URLConnection con = url.openConnection()[ CD ]
Line_15 $$ URL url = new URL(protocol, host, form)-->Line_16 $$ URLConnection con = url.openConnection()[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_17 $$ con.setDoOutput(true)[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_17 $$ con.setDoOutput(true)[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_18 $$ con.setDoInput(true)[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_18 $$ con.setDoInput(true)[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_19 $$ con.setUseCaches(false)[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_19 $$ con.setUseCaches(false)[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_20 $$ con.setRequestProperty("Content-type", "application/x-www-form-urlencoded")[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_20 $$ con.setRequestProperty("Content-type", "application/x-www-form-urlencoded")[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_21 $$ con.setRequestProperty("Content-length", String.valueOf(data.length()))[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_21 $$ con.setRequestProperty("Content-length", String.valueOf(data.length()))[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_21 $$ con.setRequestProperty("Content-length", String.valueOf(data.length()))[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_22 $$ PrintStream out = new PrintStream(con.getOutputStream(), true)[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_22 $$ PrintStream out = new PrintStream(con.getOutputStream(), true)[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_23 $$ out.print(data)[ CD ]
Line_22 $$ PrintStream out = new PrintStream(con.getOutputStream(), true)-->Line_23 $$ out.print(data)[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_23 $$ out.print(data)[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_24 $$ out.close()[ CD ]
Line_22 $$ PrintStream out = new PrintStream(con.getOutputStream(), true)-->Line_24 $$ out.close()[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ CD ]
Line_16 $$ URLConnection con = url.openConnection()-->Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_26 $$ while (in.readLine() != null) [ CD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception [ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_26 $$ while (in.readLine() != null) [ FD ]
Line_2 $$ public void postData(String protocol, String host, String form, String data) throws Exception -->Line_28 $$ in.close()[ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_28 $$ in.close()[ FD ]
