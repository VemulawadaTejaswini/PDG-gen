Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void loadPackage1(String ycCode) [ CD ]
Line_2 $$ public static void loadPackage1(String ycCode) -->Line_3 $$ InputStream input = null[ CD ]
Line_6 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_6 $$ SSLContext sc = SSLContext.getInstance("SSL")[ CD ]
Line_6 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_7 $$ sc.init(null, trustAllCerts, new java.security.SecureRandom())[ FD ]
Line_5 $$ TrustManager[] trustAllCerts = new TrustManager[] -->Line_7 $$ sc.init(null, trustAllCerts, new java.security.SecureRandom())[ FD ]
Line_8 $$ URL url = Retriever.getPackage1Url(String.valueOf(YouthClub.getMiniModel().getBasics().getTeamId()), ycCode)-->Line_8 $$ URL url = Retriever.getPackage1Url(String.valueOf(YouthClub.getMiniModel().getBasics().getTeamId()), ycCode)[ CD ]
Line_2 $$ public static void loadPackage1(String ycCode) -->Line_8 $$ URL url = Retriever.getPackage1Url(String.valueOf(YouthClub.getMiniModel().getBasics().getTeamId()), ycCode)[ FD ]
Line_6 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_9 $$ HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory())[ FD ]
Line_8 $$ URL url = Retriever.getPackage1Url(String.valueOf(YouthClub.getMiniModel().getBasics().getTeamId()), ycCode)-->Line_10 $$ HttpsURLConnection uc = (HttpsURLConnection) url.openConnection()[ FD ]
Line_10 $$ HttpsURLConnection uc = (HttpsURLConnection) url.openConnection()-->Line_11 $$ uc.setHostnameVerifier(new FakeHostnameVerifier())[ FD ]
Line_10 $$ HttpsURLConnection uc = (HttpsURLConnection) url.openConnection()-->Line_12 $$ uc.setConnectTimeout(CONNECTION_TIMEOUT)[ FD ]
Line_10 $$ HttpsURLConnection uc = (HttpsURLConnection) url.openConnection()-->Line_13 $$ uc.setReadTimeout(CONNECTION_TIMEOUT)[ FD ]
Line_3 $$ InputStream input = null-->Line_14 $$ input = uc.getInputStream()[ FD ]
Line_14 $$ input = uc.getInputStream()-->Line_14 $$ input = uc.getInputStream()[ FD ]
Line_14 $$ input = uc.getInputStream()-->Line_14 $$ input = uc.getInputStream()[ CD ]
Line_10 $$ HttpsURLConnection uc = (HttpsURLConnection) url.openConnection()-->Line_14 $$ input = uc.getInputStream()[ FD ]
Line_17 $$ while ((c = input.read()) != -1) -->Line_17 $$ while ((c = input.read()) != -1) [ FD ]
Line_16 $$ int c-->Line_17 $$ while ((c = input.read()) != -1) [ FD ]
Line_17 $$ while ((c = input.read()) != -1) -->Line_17 $$ while ((c = input.read()) != -1) [ CD ]
Line_3 $$ InputStream input = null-->Line_17 $$ while ((c = input.read()) != -1) [ FD ]
Line_14 $$ input = uc.getInputStream()-->Line_17 $$ while ((c = input.read()) != -1) [ FD ]
Line_17 $$ while ((c = input.read()) != -1) -->Line_18 $$ sb.append((char) c)[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append((char) c)[ FD ]
Line_20 $$ Document doc = YouthClub.getMiniModel().getXMLParser().parseString(sb.toString())-->Line_20 $$ Document doc = YouthClub.getMiniModel().getXMLParser().parseString(sb.toString())[ CD ]
Line_15 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ Document doc = YouthClub.getMiniModel().getXMLParser().parseString(sb.toString())[ FD ]
Line_20 $$ Document doc = YouthClub.getMiniModel().getXMLParser().parseString(sb.toString())-->Line_22 $$ YouthClub.getMiniModel().getXMLParser().writeXML(doc, target)[ FD ]
Line_21 $$ String target = System.getProperty("user.home") + System.getProperty("file.separator") + "youthclub_" + new SimpleDateFormat("yyyyMMdd_HHmm").format(new Date()) + ".xml"-->Line_22 $$ YouthClub.getMiniModel().getXMLParser().writeXML(doc, target)[ FD ]
Line_3 $$ InputStream input = null-->Line_27 $$ if (input != null) [ FD ]
Line_14 $$ input = uc.getInputStream()-->Line_27 $$ if (input != null) [ FD ]
Line_3 $$ InputStream input = null-->Line_29 $$ input.close()[ FD ]
Line_14 $$ input = uc.getInputStream()-->Line_29 $$ input.close()[ FD ]
