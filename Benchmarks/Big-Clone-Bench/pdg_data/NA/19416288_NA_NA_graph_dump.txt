Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void zip(String object, TupleOutput output) [ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_3 $$ byte array[] = object.getBytes()[ CD ]
Line_3 $$ byte array[] = object.getBytes()-->Line_3 $$ byte array[] = object.getBytes()[ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_3 $$ byte array[] = object.getBytes()[ FD ]
Line_7 $$ ByteArrayInputStream in = new ByteArrayInputStream(array)-->Line_8 $$ IOUtils.copyTo(in, out)[ FD ]
Line_6 $$ GZIPOutputStream out = new GZIPOutputStream(baos)-->Line_8 $$ IOUtils.copyTo(in, out)[ FD ]
Line_7 $$ ByteArrayInputStream in = new ByteArrayInputStream(array)-->Line_9 $$ in.close()[ FD ]
Line_6 $$ GZIPOutputStream out = new GZIPOutputStream(baos)-->Line_10 $$ out.close()[ FD ]
Line_11 $$ byte array2[] = baos.toByteArray()-->Line_11 $$ byte array2[] = baos.toByteArray()[ CD ]
Line_5 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_11 $$ byte array2[] = baos.toByteArray()[ FD ]
Line_12 $$ if (array2.length + 4 < array.length) -->Line_13 $$ output.writeBoolean(true)[ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_13 $$ output.writeBoolean(true)[ FD ]
Line_12 $$ if (array2.length + 4 < array.length) -->Line_14 $$ output.writeInt(array2.length)[ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_14 $$ output.writeInt(array2.length)[ FD ]
Line_12 $$ if (array2.length + 4 < array.length) -->Line_15 $$ output.write(array2)[ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_15 $$ output.write(array2)[ FD ]
Line_12 $$ if (array2.length + 4 < array.length) -->Line_17 $$ output.writeBoolean(false)[ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_17 $$ output.writeBoolean(false)[ FD ]
Line_12 $$ if (array2.length + 4 < array.length) -->Line_18 $$ output.writeString(object)[ CD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_18 $$ output.writeString(object)[ FD ]
Line_2 $$ private void zip(String object, TupleOutput output) -->Line_18 $$ output.writeString(object)[ FD ]
