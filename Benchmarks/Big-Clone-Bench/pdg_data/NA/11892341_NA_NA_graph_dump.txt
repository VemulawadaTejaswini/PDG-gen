Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) [ CD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_3 $$ String timeStamp = Calendar.getInstance().getTime().toString()[ CD ]
Line_3 $$ String timeStamp = Calendar.getInstance().getTime().toString()-->Line_3 $$ String timeStamp = Calendar.getInstance().getTime().toString()[ CD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_4 $$ MessageDigest sha1[ CD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_5 $$ byte[] digest = [ CD ]
Line_4 $$ MessageDigest sha1-->Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")[ FD ]
Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")-->Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")[ FD ]
Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")-->Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")[ CD ]
Line_4 $$ MessageDigest sha1-->Line_8 $$ sha1.update(descriptor.getContactName().getBytes())[ FD ]
Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")-->Line_8 $$ sha1.update(descriptor.getContactName().getBytes())[ FD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_8 $$ sha1.update(descriptor.getContactName().getBytes())[ FD ]
Line_4 $$ MessageDigest sha1-->Line_9 $$ sha1.update(descriptor.getAlgorithmName().getBytes())[ FD ]
Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")-->Line_9 $$ sha1.update(descriptor.getAlgorithmName().getBytes())[ FD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_9 $$ sha1.update(descriptor.getAlgorithmName().getBytes())[ FD ]
Line_4 $$ MessageDigest sha1-->Line_10 $$ sha1.update(descriptor.getProvider().getBytes())[ FD ]
Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")-->Line_10 $$ sha1.update(descriptor.getProvider().getBytes())[ FD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_10 $$ sha1.update(descriptor.getProvider().getBytes())[ FD ]
Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())-->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ CD ]
Line_5 $$ byte[] digest = -->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ FD ]
Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())-->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ FD ]
Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())-->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ CD ]
Line_4 $$ MessageDigest sha1-->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ FD ]
Line_7 $$ sha1 = MessageDigest.getInstance("SHA-1")-->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ FD ]
Line_3 $$ String timeStamp = Calendar.getInstance().getTime().toString()-->Line_11 $$ return digest = sha1.digest(timeStamp.getBytes())[ FD ]
Line_2 $$ private static byte[] getHashValue(INewEntryDescriptor descriptor) -->Line_15 $$ return digest[ CD ]
