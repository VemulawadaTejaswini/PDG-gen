Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void copyFile(File s, File d) throws IOException [ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_3 $$ d.getParentFile().mkdirs()[ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_3 $$ d.getParentFile().mkdirs()[ FD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_4 $$ FileChannel inChannel = new FileInputStream(s).getChannel()[ CD ]
Line_4 $$ FileChannel inChannel = new FileInputStream(s).getChannel()-->Line_4 $$ FileChannel inChannel = new FileInputStream(s).getChannel()[ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_5 $$ FileChannel outChannel = new FileOutputStream(d).getChannel()[ CD ]
Line_5 $$ FileChannel outChannel = new FileOutputStream(d).getChannel()-->Line_5 $$ FileChannel outChannel = new FileOutputStream(d).getChannel()[ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_6 $$ int maxCount = (64 * 1024 * 1024) - (32 * 1024)[ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_7 $$ long size = inChannel.size()[ CD ]
Line_7 $$ long size = inChannel.size()-->Line_7 $$ long size = inChannel.size()[ CD ]
Line_4 $$ FileChannel inChannel = new FileInputStream(s).getChannel()-->Line_7 $$ long size = inChannel.size()[ FD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_8 $$ long position = 0[ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_9 $$ while (position < size) [ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_2 $$ private void copyFile(File s, File d) throws IOException [ CD ]
Line_8 $$ long position = 0-->Line_9 $$ while (position < size) [ FD ]
Line_7 $$ long size = inChannel.size()-->Line_9 $$ while (position < size) [ FD ]
Line_9 $$ while (position < size) -->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ CD ]
Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_8 $$ long position = 0-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ CD ]
Line_4 $$ FileChannel inChannel = new FileInputStream(s).getChannel()-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_8 $$ long position = 0-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_6 $$ int maxCount = (64 * 1024 * 1024) - (32 * 1024)-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_5 $$ FileChannel outChannel = new FileOutputStream(d).getChannel()-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_12 $$ inChannel.close()[ CD ]
Line_4 $$ FileChannel inChannel = new FileInputStream(s).getChannel()-->Line_12 $$ inChannel.close()[ FD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_13 $$ outChannel.close()[ CD ]
Line_5 $$ FileChannel outChannel = new FileOutputStream(d).getChannel()-->Line_13 $$ outChannel.close()[ FD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_14 $$ d.setLastModified(s.lastModified())[ CD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_14 $$ d.setLastModified(s.lastModified())[ FD ]
Line_2 $$ private void copyFile(File s, File d) throws IOException -->Line_14 $$ d.setLastModified(s.lastModified())[ FD ]
Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_9 $$ while (position < size) [ FD ]
Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_9 $$ while (position < size) [ FD ]
Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)-->Line_10 $$ position += inChannel.transferTo(position, maxCount, outChannel)[ FD ]
