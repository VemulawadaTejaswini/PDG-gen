Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static URL searchForBundle(String name, String parent) throws MalformedURLException [ CD ]
Line_2 $$ private static URL searchForBundle(String name, String parent) throws MalformedURLException -->Line_3 $$ URL url = null[ CD ]
Line_2 $$ private static URL searchForBundle(String name, String parent) throws MalformedURLException -->Line_4 $$ File fileLocation = null[ CD ]
Line_2 $$ private static URL searchForBundle(String name, String parent) throws MalformedURLException -->Line_5 $$ boolean reference = false[ CD ]
Line_3 $$ URL url = null-->Line_8 $$ url = new URL(new File(parent).toURL(), name)[ FD ]
Line_8 $$ url = new URL(new File(parent).toURL(), name)-->Line_8 $$ url = new URL(new File(parent).toURL(), name)[ FD ]
Line_4 $$ File fileLocation = null-->Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)[ FD ]
Line_7 $$ URL child = new URL(name)-->Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)[ FD ]
Line_3 $$ URL url = null-->Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())[ FD ]
Line_8 $$ url = new URL(new File(parent).toURL(), name)-->Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())[ FD ]
Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())-->Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())[ FD ]
Line_4 $$ File fileLocation = null-->Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())[ FD ]
Line_5 $$ boolean reference = false-->Line_13 $$ reference = true[ FD ]
Line_13 $$ reference = true-->Line_13 $$ reference = true[ FD ]
Line_2 $$ private static URL searchForBundle(String name, String parent) throws MalformedURLException -->Line_15 $$ if (!reference) [ CD ]
Line_5 $$ boolean reference = false-->Line_15 $$ if (!reference) [ FD ]
Line_13 $$ reference = true-->Line_15 $$ if (!reference) [ FD ]
Line_15 $$ if (!reference) -->Line_15 $$ if (!reference) [ CD ]
Line_5 $$ boolean reference = false-->Line_15 $$ if (!reference) [ FD ]
Line_13 $$ reference = true-->Line_15 $$ if (!reference) [ FD ]
Line_15 $$ if (!reference) -->Line_16 $$ URL baseURL = url[ CD ]
Line_15 $$ if (!reference) -->Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) [ CD ]
Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) -->Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) [ CD ]
Line_3 $$ URL url = null-->Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) [ FD ]
Line_8 $$ url = new URL(new File(parent).toURL(), name)-->Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) [ FD ]
Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())-->Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) [ FD ]
Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) -->Line_18 $$ reference = true[ CD ]
Line_5 $$ boolean reference = false-->Line_18 $$ reference = true[ FD ]
Line_13 $$ reference = true-->Line_18 $$ reference = true[ FD ]
Line_18 $$ reference = true-->Line_18 $$ reference = true[ FD ]
Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) -->Line_19 $$ String baseSpec = url.getFile()[ CD ]
Line_19 $$ String baseSpec = url.getFile()-->Line_19 $$ String baseSpec = url.getFile()[ CD ]
Line_3 $$ URL url = null-->Line_19 $$ String baseSpec = url.getFile()[ FD ]
Line_8 $$ url = new URL(new File(parent).toURL(), name)-->Line_19 $$ String baseSpec = url.getFile()[ FD ]
Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())-->Line_19 $$ String baseSpec = url.getFile()[ FD ]
Line_17 $$ if (url.getProtocol().equals(REFERENCE_PROTOCOL)) -->Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) [ CD ]
Line_19 $$ String baseSpec = url.getFile()-->Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) [ FD ]
Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) -->Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) [ CD ]
Line_19 $$ String baseSpec = url.getFile()-->Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) [ FD ]
Line_19 $$ String baseSpec = url.getFile()-->Line_21 $$ File child = new File(baseSpec.substring(5))[ FD ]
Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) -->Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()[ CD ]
Line_16 $$ URL baseURL = url-->Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()[ FD ]
Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()-->Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()[ FD ]
Line_7 $$ URL child = new URL(name)-->Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()[ FD ]
Line_7 $$ URL child = new URL(name)-->Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()[ FD ]
Line_7 $$ URL child = new URL(name)-->Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()[ FD ]
Line_20 $$ if (baseSpec.startsWith(FILE_SCHEME)) -->Line_23 $$ baseURL = new URL(baseSpec)[ CD ]
Line_16 $$ URL baseURL = url-->Line_23 $$ baseURL = new URL(baseSpec)[ FD ]
Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()-->Line_23 $$ baseURL = new URL(baseSpec)[ FD ]
Line_23 $$ baseURL = new URL(baseSpec)-->Line_23 $$ baseURL = new URL(baseSpec)[ FD ]
Line_15 $$ if (!reference) -->Line_25 $$ fileLocation = new File(baseURL.getFile())[ CD ]
Line_4 $$ File fileLocation = null-->Line_25 $$ fileLocation = new File(baseURL.getFile())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_25 $$ fileLocation = new File(baseURL.getFile())[ FD ]
Line_25 $$ fileLocation = new File(baseURL.getFile())-->Line_25 $$ fileLocation = new File(baseURL.getFile())[ FD ]
Line_16 $$ URL baseURL = url-->Line_25 $$ fileLocation = new File(baseURL.getFile())[ FD ]
Line_22 $$ baseURL = child.isAbsolute() ? child.toURL() : new File(parent, child.getPath()).toURL()-->Line_25 $$ fileLocation = new File(baseURL.getFile())[ FD ]
Line_23 $$ baseURL = new URL(baseSpec)-->Line_25 $$ fileLocation = new File(baseURL.getFile())[ FD ]
Line_15 $$ if (!reference) -->Line_26 $$ if (!fileLocation.isAbsolute())[ CD ]
Line_26 $$ if (!fileLocation.isAbsolute())-->Line_26 $$ if (!fileLocation.isAbsolute())[ CD ]
Line_26 $$ if (!fileLocation.isAbsolute())-->Line_26 $$ if (!fileLocation.isAbsolute())[ CD ]
Line_4 $$ File fileLocation = null-->Line_26 $$ if (!fileLocation.isAbsolute())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_26 $$ if (!fileLocation.isAbsolute())[ FD ]
Line_25 $$ fileLocation = new File(baseURL.getFile())-->Line_26 $$ if (!fileLocation.isAbsolute())[ FD ]
Line_26 $$ if (!fileLocation.isAbsolute())-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ CD ]
Line_4 $$ File fileLocation = null-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_25 $$ fileLocation = new File(baseURL.getFile())-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_26 $$ fileLocation = new File(parent, fileLocation.toString())-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_4 $$ File fileLocation = null-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_25 $$ fileLocation = new File(baseURL.getFile())-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_26 $$ fileLocation = new File(parent, fileLocation.toString())-->Line_26 $$ fileLocation = new File(parent, fileLocation.toString())[ FD ]
Line_2 $$ private static URL searchForBundle(String name, String parent) throws MalformedURLException -->Line_28 $$ if (reference) [ CD ]
Line_28 $$ if (reference) -->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ CD ]
Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ CD ]
Line_4 $$ File fileLocation = null-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_25 $$ fileLocation = new File(baseURL.getFile())-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_26 $$ fileLocation = new File(parent, fileLocation.toString())-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_4 $$ File fileLocation = null-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_11 $$ fileLocation = child.isAbsolute() ? child : new File(parent, name)-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_25 $$ fileLocation = new File(baseURL.getFile())-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_26 $$ fileLocation = new File(parent, fileLocation.toString())-->Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())[ FD ]
Line_28 $$ if (reference) -->Line_30 $$ if (result != null)[ CD ]
Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())-->Line_30 $$ if (result != null)[ FD ]
Line_30 $$ if (result != null)-->Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)[ CD ]
Line_3 $$ URL url = null-->Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)[ FD ]
Line_8 $$ url = new URL(new File(parent).toURL(), name)-->Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)[ FD ]
Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())-->Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)[ FD ]
Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)-->Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)[ FD ]
Line_30 $$ if (result != null)-->Line_30 $$ return null[ CD ]
Line_3 $$ URL url = null-->Line_33 $$ URLConnection result = url.openConnection()[ FD ]
Line_8 $$ url = new URL(new File(parent).toURL(), name)-->Line_33 $$ URLConnection result = url.openConnection()[ FD ]
Line_12 $$ url = new URL(REFERENCE_PROTOCOL, null, fileLocation.toURL().toExternalForm())-->Line_33 $$ URLConnection result = url.openConnection()[ FD ]
Line_30 $$ url = new URL(REFERENCE_PROTOCOL, null, FILE_SCHEME + result)-->Line_33 $$ URLConnection result = url.openConnection()[ FD ]
Line_29 $$ String result = searchFor(fileLocation.getName(), new File(fileLocation.getParent()).getAbsolutePath())-->Line_34 $$ result.connect()[ FD ]
