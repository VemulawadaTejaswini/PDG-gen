Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File src, File dst) throws ResourceNotFoundException, ParseErrorException, Exception [ CD ]
Line_2 $$ public static void copyFile(File src, File dst) throws ResourceNotFoundException, ParseErrorException, Exception -->Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) [ CD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) [ CD ]
Line_2 $$ public static void copyFile(File src, File dst) throws ResourceNotFoundException, ParseErrorException, Exception -->Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) [ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_4 $$ copyVMFile(src, dst.getAbsolutePath().substring(0, dst.getAbsolutePath().lastIndexOf(".vm")))[ CD ]
Line_2 $$ public static void copyFile(File src, File dst) throws ResourceNotFoundException, ParseErrorException, Exception -->Line_4 $$ copyVMFile(src, dst.getAbsolutePath().substring(0, dst.getAbsolutePath().lastIndexOf(".vm")))[ FD ]
Line_2 $$ public static void copyFile(File src, File dst) throws ResourceNotFoundException, ParseErrorException, Exception -->Line_4 $$ copyVMFile(src, dst.getAbsolutePath().substring(0, dst.getAbsolutePath().lastIndexOf(".vm")))[ FD ]
Line_2 $$ public static void copyFile(File src, File dst) throws ResourceNotFoundException, ParseErrorException, Exception -->Line_4 $$ copyVMFile(src, dst.getAbsolutePath().substring(0, dst.getAbsolutePath().lastIndexOf(".vm")))[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_6 $$ FileInputStream fIn[ CD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_7 $$ FileOutputStream fOut[ CD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_8 $$ FileChannel fIChan, fOChan[ CD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_9 $$ long fSize[ CD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_10 $$ MappedByteBuffer mBuf[ CD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_11 $$ fIn = new FileInputStream(src)[ CD ]
Line_6 $$ FileInputStream fIn-->Line_11 $$ fIn = new FileInputStream(src)[ FD ]
Line_11 $$ fIn = new FileInputStream(src)-->Line_11 $$ fIn = new FileInputStream(src)[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_12 $$ fOut = new FileOutputStream(dst)[ CD ]
Line_7 $$ FileOutputStream fOut-->Line_12 $$ fOut = new FileOutputStream(dst)[ FD ]
Line_12 $$ fOut = new FileOutputStream(dst)-->Line_12 $$ fOut = new FileOutputStream(dst)[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_13 $$ fIChan = fIn.getChannel()[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_13 $$ fIChan = fIn.getChannel()[ FD ]
Line_13 $$ fIChan = fIn.getChannel()-->Line_13 $$ fIChan = fIn.getChannel()[ FD ]
Line_13 $$ fIChan = fIn.getChannel()-->Line_13 $$ fIChan = fIn.getChannel()[ CD ]
Line_6 $$ FileInputStream fIn-->Line_13 $$ fIChan = fIn.getChannel()[ FD ]
Line_11 $$ fIn = new FileInputStream(src)-->Line_13 $$ fIChan = fIn.getChannel()[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_14 $$ fOChan = fOut.getChannel()[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_14 $$ fOChan = fOut.getChannel()[ FD ]
Line_14 $$ fOChan = fOut.getChannel()-->Line_14 $$ fOChan = fOut.getChannel()[ FD ]
Line_14 $$ fOChan = fOut.getChannel()-->Line_14 $$ fOChan = fOut.getChannel()[ CD ]
Line_7 $$ FileOutputStream fOut-->Line_14 $$ fOChan = fOut.getChannel()[ FD ]
Line_12 $$ fOut = new FileOutputStream(dst)-->Line_14 $$ fOChan = fOut.getChannel()[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_15 $$ fSize = fIChan.size()[ CD ]
Line_9 $$ long fSize-->Line_15 $$ fSize = fIChan.size()[ FD ]
Line_15 $$ fSize = fIChan.size()-->Line_15 $$ fSize = fIChan.size()[ FD ]
Line_15 $$ fSize = fIChan.size()-->Line_15 $$ fSize = fIChan.size()[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_15 $$ fSize = fIChan.size()[ FD ]
Line_13 $$ fIChan = fIn.getChannel()-->Line_15 $$ fSize = fIChan.size()[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ CD ]
Line_10 $$ MappedByteBuffer mBuf-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ FD ]
Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ FD ]
Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ FD ]
Line_13 $$ fIChan = fIn.getChannel()-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ FD ]
Line_9 $$ long fSize-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ FD ]
Line_15 $$ fSize = fIChan.size()-->Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_17 $$ fOChan.write(mBuf)[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_17 $$ fOChan.write(mBuf)[ FD ]
Line_14 $$ fOChan = fOut.getChannel()-->Line_17 $$ fOChan.write(mBuf)[ FD ]
Line_10 $$ MappedByteBuffer mBuf-->Line_17 $$ fOChan.write(mBuf)[ FD ]
Line_16 $$ mBuf = fIChan.map(FileChannel.MapMode.READ_ONLY, 0, fSize)-->Line_17 $$ fOChan.write(mBuf)[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_18 $$ fIChan.close()[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_18 $$ fIChan.close()[ FD ]
Line_13 $$ fIChan = fIn.getChannel()-->Line_18 $$ fIChan.close()[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_19 $$ fIn.close()[ CD ]
Line_6 $$ FileInputStream fIn-->Line_19 $$ fIn.close()[ FD ]
Line_11 $$ fIn = new FileInputStream(src)-->Line_19 $$ fIn.close()[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_20 $$ fOChan.close()[ CD ]
Line_8 $$ FileChannel fIChan, fOChan-->Line_20 $$ fOChan.close()[ FD ]
Line_14 $$ fOChan = fOut.getChannel()-->Line_20 $$ fOChan.close()[ FD ]
Line_3 $$ if (src.getAbsolutePath().endsWith(".vm")) -->Line_21 $$ fOut.close()[ CD ]
Line_7 $$ FileOutputStream fOut-->Line_21 $$ fOut.close()[ FD ]
Line_12 $$ fOut = new FileOutputStream(dst)-->Line_21 $$ fOut.close()[ FD ]
