Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void parseUrl() [ CD ]
Line_2 $$ private void parseUrl() -->Line_3 $$ URLLexer lexer[ CD ]
Line_2 $$ private void parseUrl() -->Line_4 $$ URLParser parser[ CD ]
Line_2 $$ private void parseUrl() -->Line_5 $$ if (this.parent != null) [ CD ]
Line_5 $$ if (this.parent != null) -->Line_6 $$ this.hops = ((HTTPFile) this.parent).hops - 1[ CD ]
Line_2 $$ private void parseUrl() -->Line_8 $$ if (this.searchFilter.accept(this.url.getPath())) [ CD ]
Line_8 $$ if (this.searchFilter.accept(this.url.getPath())) -->Line_8 $$ if (this.searchFilter.accept(this.url.getPath())) [ CD ]
Line_8 $$ if (this.searchFilter.accept(this.url.getPath())) -->Line_9 $$ if (!visited.contains(this.url.toExternalForm())) [ CD ]
Line_9 $$ if (!visited.contains(this.url.toExternalForm())) -->Line_9 $$ if (!visited.contains(this.url.toExternalForm())) [ CD ]
Line_9 $$ if (!visited.contains(this.url.toExternalForm())) -->Line_9 $$ if (!visited.contains(this.url.toExternalForm())) [ CD ]
Line_9 $$ if (!visited.contains(this.url.toExternalForm())) -->Line_10 $$ if (this.hops > 0) [ CD ]
Line_13 $$ InputStream in = this.url.openStream()-->Line_13 $$ InputStream in = this.url.openStream()[ CD ]
Line_3 $$ URLLexer lexer-->Line_14 $$ lexer = new URLLexer(this.url.openStream())[ FD ]
Line_14 $$ lexer = new URLLexer(this.url.openStream())-->Line_14 $$ lexer = new URLLexer(this.url.openStream())[ FD ]
Line_4 $$ URLParser parser-->Line_15 $$ parser = new URLParser(lexer)[ FD ]
Line_15 $$ parser = new URLParser(lexer)-->Line_15 $$ parser = new URLParser(lexer)[ FD ]
Line_16 $$ URL[] urls = parser.htmlDocument(this.url)-->Line_16 $$ URL[] urls = parser.htmlDocument(this.url)[ CD ]
Line_4 $$ URLParser parser-->Line_16 $$ URL[] urls = parser.htmlDocument(this.url)[ FD ]
Line_15 $$ parser = new URLParser(lexer)-->Line_16 $$ URL[] urls = parser.htmlDocument(this.url)[ FD ]
Line_17 $$ if (Debug.debug) -->Line_18 $$ Debug.getInstance().info(this.getClass().getName() + ".parseUrl(): Found the following URLs in " + this.url.toExternalForm() + " : " + StringUtil.ArrayToString(urls, 10))[ CD ]
Line_16 $$ URL[] urls = parser.htmlDocument(this.url)-->Line_18 $$ Debug.getInstance().info(this.getClass().getName() + ".parseUrl(): Found the following URLs in " + this.url.toExternalForm() + " : " + StringUtil.ArrayToString(urls, 10))[ FD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_20 $$ for (int i = 0; i < urls.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_20 $$ for (int i = 0; i < urls.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_20 $$ for (int i = 0; i < urls.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_21 $$ this.addInternal(urls[i])[ CD ]
Line_24 $$ if (Debug.debug) -->Line_25 $$ Debug.getInstance().error(e.getMessage())[ CD ]
Line_28 $$ if (Debug.debug) -->Line_29 $$ Debug.getInstance().error("Problems while lexing " + this.url.toExternalForm() + " : " + e.getMessage(), e)[ CD ]
Line_32 $$ if (Debug.debug) -->Line_33 $$ Debug.getInstance().error("Problems while parsing " + this.url.toExternalForm() + " : " + e.getMessage(), e)[ CD ]
Line_9 $$ if (!visited.contains(this.url.toExternalForm())) -->Line_38 $$ if (Debug.debug) [ CD ]
Line_38 $$ if (Debug.debug) -->Line_39 $$ Debug.getInstance().info(this.getClass().getName() + ".parseUrl(): Skipping URL " + this.url.toExternalForm() + " : Maximum depth reached.")[ CD ]
Line_8 $$ if (this.searchFilter.accept(this.url.getPath())) -->Line_43 $$ if (Debug.debug) [ CD ]
Line_43 $$ if (Debug.debug) -->Line_44 $$ Debug.getInstance().info(this.getClass().getName() + ".parseUrl(): Skipping URL " + this.url.toExternalForm() + " : Already parsed.")[ CD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_20 $$ for (int i = 0; i < urls.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_20 $$ for (int i = 0; i < urls.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < urls.length; i++) -->Line_20 $$ for (int i = 0; i < urls.length; i++) [ FD ]
