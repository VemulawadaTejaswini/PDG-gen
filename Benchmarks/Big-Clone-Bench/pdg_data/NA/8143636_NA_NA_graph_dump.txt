Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean validatePassword(UserType nameMatch, String password) [ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_4 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)[ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_5 $$ md.reset()[ FD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_6 $$ md.update(nameMatch.getSalt().getBytes("UTF-8"))[ FD ]
Line_2 $$ public boolean validatePassword(UserType nameMatch, String password) -->Line_6 $$ md.update(nameMatch.getSalt().getBytes("UTF-8"))[ FD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_7 $$ md.update(password.getBytes("UTF-8"))[ FD ]
Line_2 $$ public boolean validatePassword(UserType nameMatch, String password) -->Line_7 $$ md.update(password.getBytes("UTF-8"))[ FD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_8 $$ String encodedString = new String(Base64.encode(md.digest()))[ FD ]
Line_9 $$ return encodedString.equals(nameMatch.getPassword())-->Line_9 $$ return encodedString.equals(nameMatch.getPassword())[ CD ]
Line_8 $$ String encodedString = new String(Base64.encode(md.digest()))-->Line_9 $$ return encodedString.equals(nameMatch.getPassword())[ FD ]
Line_2 $$ public boolean validatePassword(UserType nameMatch, String password) -->Line_9 $$ return encodedString.equals(nameMatch.getPassword())[ FD ]
Line_17 $$ String errorMessage = "Could not use algorithm " + HASH_ALGORITHM-->Line_19 $$ logger.fatal(errorMessage)[ FD ]
