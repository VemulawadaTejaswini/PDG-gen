Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) [ CD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_3 $$ File dFile = new File(localPath)[ CD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_4 $$ if (!dFile.exists()) [ CD ]
Line_4 $$ if (!dFile.exists()) -->Line_4 $$ if (!dFile.exists()) [ CD ]
Line_4 $$ if (!dFile.exists()) -->Line_4 $$ if (!dFile.exists()) [ CD ]
Line_3 $$ File dFile = new File(localPath)-->Line_4 $$ if (!dFile.exists()) [ FD ]
Line_4 $$ if (!dFile.exists()) -->Line_5 $$ dFile.mkdir()[ CD ]
Line_3 $$ File dFile = new File(localPath)-->Line_5 $$ dFile.mkdir()[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_7 $$ boolean success = false[ CD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_8 $$ FTPClient ftp = new FTPClient()[ CD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_9 $$ ftp.setConnectTimeout(connectTimeout)[ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_9 $$ ftp.setConnectTimeout(connectTimeout)[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_10 $$ System.out.println("FTP begin!!")[ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_13 $$ ftp.connect(url)[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_13 $$ ftp.connect(url)[ FD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_14 $$ ftp.login(username, password)[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_14 $$ ftp.login(username, password)[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_14 $$ ftp.login(username, password)[ FD ]
Line_12 $$ int reply-->Line_15 $$ reply = ftp.getReplyCode()[ FD ]
Line_15 $$ reply = ftp.getReplyCode()-->Line_15 $$ reply = ftp.getReplyCode()[ FD ]
Line_15 $$ reply = ftp.getReplyCode()-->Line_15 $$ reply = ftp.getReplyCode()[ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_15 $$ reply = ftp.getReplyCode()[ FD ]
Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_12 $$ int reply-->Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_15 $$ reply = ftp.getReplyCode()-->Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_17 $$ ftp.disconnect()[ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_17 $$ ftp.disconnect()[ FD ]
Line_16 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_18 $$ return success[ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_20 $$ ftp.changeWorkingDirectory(remotePath)[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_20 $$ ftp.changeWorkingDirectory(remotePath)[ FD ]
Line_21 $$ String[] filesName = ftp.listNames()-->Line_21 $$ String[] filesName = ftp.listNames()[ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_21 $$ String[] filesName = ftp.listNames()[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_22 $$ if (DBLastestDate == null) [ FD ]
Line_22 $$ if (DBLastestDate == null) -->Line_23 $$ System.out.println(" 初次下载，全部下载 ")[ CD ]
Line_25 $$ if (!string.matches("[0-9]-->Line_25 $$ if (!string.matches("[0-9][ CD ]
Line_25 $$ if (!string.matches("[0-9]-->Line_25 $$ if (!string.matches("[0-9][ CD ]
Line_24 $$ for (String string : filesName) -->Line_25 $$ if (!string.matches("[0-9][ FD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_30 $$ ftp.retrieveFile(string, is)[ FD ]
Line_24 $$ for (String string : filesName) -->Line_30 $$ ftp.retrieveFile(string, is)[ FD ]
Line_29 $$ OutputStream is = new FileOutputStream(localFile)-->Line_30 $$ ftp.retrieveFile(string, is)[ FD ]
Line_29 $$ OutputStream is = new FileOutputStream(localFile)-->Line_31 $$ is.close()[ FD ]
Line_22 $$ if (DBLastestDate == null) -->Line_34 $$ System.out.println(" 加一下载 ")[ CD ]
Line_22 $$ if (DBLastestDate == null) -->Line_35 $$ Date date = DBLastestDate[ CD ]
Line_22 $$ if (DBLastestDate == null) -->Line_36 $$ long ldate = date.getTime()[ CD ]
Line_36 $$ long ldate = date.getTime()-->Line_36 $$ long ldate = date.getTime()[ CD ]
Line_35 $$ Date date = DBLastestDate-->Line_36 $$ long ldate = date.getTime()[ FD ]
Line_22 $$ if (DBLastestDate == null) -->Line_37 $$ Date nowDate = new Date()[ CD ]
Line_22 $$ if (DBLastestDate == null) -->Line_38 $$ String nowDateStr = Constants.DatetoString(nowDate, Constants.Time_template_LONG)[ CD ]
Line_38 $$ String nowDateStr = Constants.DatetoString(nowDate, Constants.Time_template_LONG)-->Line_38 $$ String nowDateStr = Constants.DatetoString(nowDate, Constants.Time_template_LONG)[ CD ]
Line_37 $$ Date nowDate = new Date()-->Line_38 $$ String nowDateStr = Constants.DatetoString(nowDate, Constants.Time_template_LONG)[ FD ]
Line_22 $$ if (DBLastestDate == null) -->Line_39 $$ String fileName[ CD ]
Line_22 $$ if (DBLastestDate == null) -->Line_40 $$ do [ CD ]
Line_22 $$ if (DBLastestDate == null) -->Line_22 $$ if (DBLastestDate == null) [ CD ]
Line_40 $$ do -->Line_41 $$ ldate += 60 * 1000[ CD ]
Line_41 $$ ldate += 60 * 1000-->Line_41 $$ ldate += 60 * 1000[ FD ]
Line_36 $$ long ldate = date.getTime()-->Line_41 $$ ldate += 60 * 1000[ FD ]
Line_40 $$ do -->Line_42 $$ Date converterDate = new Date(ldate)[ CD ]
Line_40 $$ do -->Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)[ CD ]
Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)-->Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)[ FD ]
Line_39 $$ String fileName-->Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)[ FD ]
Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)-->Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)[ CD ]
Line_42 $$ Date converterDate = new Date(ldate)-->Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)[ FD ]
Line_40 $$ do -->Line_44 $$ File localFile = new File(localPath + "/" + fileName)[ CD ]
Line_40 $$ do -->Line_45 $$ OutputStream is = new FileOutputStream(localFile)[ CD ]
Line_40 $$ do -->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ CD ]
Line_46 $$ if (!ftp.retrieveFile(fileName, is)) -->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ CD ]
Line_46 $$ if (!ftp.retrieveFile(fileName, is)) -->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_39 $$ String fileName-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_45 $$ OutputStream is = new FileOutputStream(localFile)-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_29 $$ OutputStream is = new FileOutputStream(localFile)-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_46 $$ if (!ftp.retrieveFile(fileName, is)) -->Line_47 $$ localFile.delete()[ CD ]
Line_44 $$ File localFile = new File(localPath + "/" + fileName)-->Line_47 $$ localFile.delete()[ FD ]
Line_28 $$ File localFile = new File(localPath + "/" + string)-->Line_47 $$ localFile.delete()[ FD ]
Line_40 $$ do -->Line_49 $$ is.close()[ CD ]
Line_45 $$ OutputStream is = new FileOutputStream(localFile)-->Line_49 $$ is.close()[ FD ]
Line_29 $$ OutputStream is = new FileOutputStream(localFile)-->Line_49 $$ is.close()[ FD ]
Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)-->Line_40 $$ do [ FD ]
Line_39 $$ String fileName-->Line_40 $$ do [ FD ]
Line_38 $$ String nowDateStr = Constants.DatetoString(nowDate, Constants.Time_template_LONG)-->Line_40 $$ do [ FD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_52 $$ ftp.logout()[ FD ]
Line_7 $$ boolean success = false-->Line_53 $$ success = true[ FD ]
Line_53 $$ success = true-->Line_53 $$ success = true[ FD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_58 $$ if (ftp.isConnected()) [ FD ]
Line_58 $$ if (ftp.isConnected()) -->Line_58 $$ if (ftp.isConnected()) [ CD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_58 $$ if (ftp.isConnected()) [ FD ]
Line_8 $$ FTPClient ftp = new FTPClient()-->Line_60 $$ ftp.disconnect()[ FD ]
Line_2 $$ public static boolean downFile(String url, String username, String password, String remotePath, Date DBLastestDate, String localPath) -->Line_65 $$ return success[ CD ]
Line_42 $$ Date converterDate = new Date(ldate)-->Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)[ FD ]
Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_45 $$ OutputStream is = new FileOutputStream(localFile)-->Line_46 $$ if (!ftp.retrieveFile(fileName, is)) [ FD ]
Line_44 $$ File localFile = new File(localPath + "/" + fileName)-->Line_47 $$ localFile.delete()[ FD ]
Line_45 $$ OutputStream is = new FileOutputStream(localFile)-->Line_49 $$ is.close()[ FD ]
Line_43 $$ fileName = Constants.DatetoString(converterDate, Constants.Time_template_LONG)-->Line_40 $$ do [ FD ]
