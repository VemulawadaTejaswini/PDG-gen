Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void harvest() throws IOException, XMLStreamException [ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_3 $$ String api_url = "http://search.twitter.com/search.atom?q=+%23" + hashtag + "+to%3A" + account[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_4 $$ System.err.println(api_url)[ CD ]
Line_3 $$ String api_url = "http://search.twitter.com/search.atom?q=+%23" + hashtag + "+to%3A" + account-->Line_4 $$ System.err.println(api_url)[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_5 $$ URL url = new URL(api_url)[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_6 $$ URLConnection con = url.openConnection()[ CD ]
Line_6 $$ URLConnection con = url.openConnection()-->Line_6 $$ URLConnection con = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(api_url)-->Line_6 $$ URLConnection con = url.openConnection()[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_7 $$ String basic = this.login + ":" + new String(this.password)[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_8 $$ con.setRequestProperty("Authorization", "Basic " + Base64.encode(basic))[ CD ]
Line_6 $$ URLConnection con = url.openConnection()-->Line_8 $$ con.setRequestProperty("Authorization", "Basic " + Base64.encode(basic))[ FD ]
Line_7 $$ String basic = this.login + ":" + new String(this.password)-->Line_8 $$ con.setRequestProperty("Authorization", "Basic " + Base64.encode(basic))[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()[ CD ]
Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()-->Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_10 $$ factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, true)[ CD ]
Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()-->Line_10 $$ factory.setProperty(XMLInputFactory.IS_NAMESPACE_AWARE, true)[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_11 $$ factory.setProperty(XMLInputFactory.IS_VALIDATING, false)[ CD ]
Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()-->Line_11 $$ factory.setProperty(XMLInputFactory.IS_VALIDATING, false)[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_12 $$ factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)[ CD ]
Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()-->Line_12 $$ factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false)[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())[ CD ]
Line_9 $$ XMLInputFactory factory = XMLInputFactory.newInstance()-->Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())[ FD ]
Line_6 $$ URLConnection con = url.openConnection()-->Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_14 $$ boolean inEntry = false[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_15 $$ boolean inAuthor = false[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_16 $$ String published = null[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_17 $$ String title = null[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_18 $$ String foafName = null[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_19 $$ String foafURI = null[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_20 $$ String link = null[ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_21 $$ while (reader.hasNext()) [ CD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_2 $$ private void harvest() throws IOException, XMLStreamException [ CD ]
Line_21 $$ while (reader.hasNext()) -->Line_21 $$ while (reader.hasNext()) [ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_21 $$ while (reader.hasNext()) [ FD ]
Line_21 $$ while (reader.hasNext()) -->Line_22 $$ XMLEvent evt = reader.nextEvent()[ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_22 $$ XMLEvent evt = reader.nextEvent()[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_22 $$ XMLEvent evt = reader.nextEvent()[ FD ]
Line_21 $$ while (reader.hasNext()) -->Line_23 $$ if (evt.isStartElement()) [ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_23 $$ if (evt.isStartElement()) [ FD ]
Line_23 $$ if (evt.isStartElement()) -->Line_23 $$ if (evt.isStartElement()) [ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_23 $$ if (evt.isStartElement()) [ FD ]
Line_23 $$ if (evt.isStartElement()) -->Line_24 $$ StartElement e = evt.asStartElement()[ CD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_24 $$ StartElement e = evt.asStartElement()[ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_24 $$ StartElement e = evt.asStartElement()[ FD ]
Line_23 $$ if (evt.isStartElement()) -->Line_25 $$ QName qName = e.getName()[ CD ]
Line_25 $$ QName qName = e.getName()-->Line_25 $$ QName qName = e.getName()[ CD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_25 $$ QName qName = e.getName()[ FD ]
Line_23 $$ if (evt.isStartElement()) -->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ CD ]
Line_14 $$ boolean inEntry = false-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_14 $$ boolean inEntry = false-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) -->Line_27 $$ inEntry = true[ CD ]
Line_27 $$ inEntry = true-->Line_27 $$ inEntry = true[ FD ]
Line_14 $$ boolean inEntry = false-->Line_27 $$ inEntry = true[ FD ]
Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) -->Line_28 $$ if (inEntry) [ CD ]
Line_28 $$ if (inEntry) -->Line_29 $$ String local = qName.getLocalPart()[ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_29 $$ String local = qName.getLocalPart()[ CD ]
Line_25 $$ QName qName = e.getName()-->Line_29 $$ String local = qName.getLocalPart()[ FD ]
Line_28 $$ if (inEntry) -->Line_30 $$ if (local.equals("published")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_30 $$ if (local.equals("published")) [ FD ]
Line_30 $$ if (local.equals("published")) -->Line_30 $$ if (local.equals("published")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_30 $$ if (local.equals("published")) [ FD ]
Line_30 $$ if (local.equals("published")) -->Line_31 $$ published = reader.getElementText()[ CD ]
Line_31 $$ published = reader.getElementText()-->Line_31 $$ published = reader.getElementText()[ FD ]
Line_16 $$ String published = null-->Line_31 $$ published = reader.getElementText()[ FD ]
Line_31 $$ published = reader.getElementText()-->Line_31 $$ published = reader.getElementText()[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_31 $$ published = reader.getElementText()[ FD ]
Line_30 $$ if (local.equals("published")) -->Line_32 $$ if (local.equals("title")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_32 $$ if (local.equals("title")) [ FD ]
Line_32 $$ if (local.equals("title")) -->Line_32 $$ if (local.equals("title")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_32 $$ if (local.equals("title")) [ FD ]
Line_32 $$ if (local.equals("title")) -->Line_33 $$ title = reader.getElementText()[ CD ]
Line_33 $$ title = reader.getElementText()-->Line_33 $$ title = reader.getElementText()[ FD ]
Line_17 $$ String title = null-->Line_33 $$ title = reader.getElementText()[ FD ]
Line_33 $$ title = reader.getElementText()-->Line_33 $$ title = reader.getElementText()[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_33 $$ title = reader.getElementText()[ FD ]
Line_32 $$ if (local.equals("title")) -->Line_34 $$ if (link == null && local.equals("link")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_34 $$ if (link == null && local.equals("link")) [ FD ]
Line_34 $$ if (link == null && local.equals("link")) -->Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))[ CD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))[ CD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))[ FD ]
Line_34 $$ if (link == null && local.equals("link")) -->Line_36 $$ if (att != null && att.getValue().equals("text/html")) [ CD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_36 $$ if (att != null && att.getValue().equals("text/html")) [ FD ]
Line_36 $$ if (att != null && att.getValue().equals("text/html")) -->Line_37 $$ att = e.getAttributeByName(new QName("href"))[ CD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_37 $$ att = e.getAttributeByName(new QName("href"))[ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_37 $$ att = e.getAttributeByName(new QName("href"))[ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_37 $$ att = e.getAttributeByName(new QName("href"))[ CD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_37 $$ att = e.getAttributeByName(new QName("href"))[ FD ]
Line_36 $$ if (att != null && att.getValue().equals("text/html")) -->Line_38 $$ if (att != null) [ CD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_38 $$ if (att != null) [ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_38 $$ if (att != null) [ FD ]
Line_38 $$ if (att != null) -->Line_39 $$ link = att.getValue()[ CD ]
Line_39 $$ link = att.getValue()-->Line_39 $$ link = att.getValue()[ FD ]
Line_20 $$ String link = null-->Line_39 $$ link = att.getValue()[ FD ]
Line_39 $$ link = att.getValue()-->Line_39 $$ link = att.getValue()[ CD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_39 $$ link = att.getValue()[ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_39 $$ link = att.getValue()[ FD ]
Line_34 $$ if (link == null && local.equals("link")) -->Line_42 $$ if (local.equals("author")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_42 $$ if (local.equals("author")) [ FD ]
Line_42 $$ if (local.equals("author")) -->Line_42 $$ if (local.equals("author")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_42 $$ if (local.equals("author")) [ FD ]
Line_42 $$ if (local.equals("author")) -->Line_43 $$ inAuthor = true[ CD ]
Line_43 $$ inAuthor = true-->Line_43 $$ inAuthor = true[ FD ]
Line_15 $$ boolean inAuthor = false-->Line_43 $$ inAuthor = true[ FD ]
Line_42 $$ if (local.equals("author")) -->Line_44 $$ if (inAuthor && local.equals("name")) [ CD ]
Line_43 $$ inAuthor = true-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_15 $$ boolean inAuthor = false-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_44 $$ if (inAuthor && local.equals("name")) -->Line_45 $$ foafName = reader.getElementText()[ CD ]
Line_45 $$ foafName = reader.getElementText()-->Line_45 $$ foafName = reader.getElementText()[ FD ]
Line_18 $$ String foafName = null-->Line_45 $$ foafName = reader.getElementText()[ FD ]
Line_45 $$ foafName = reader.getElementText()-->Line_45 $$ foafName = reader.getElementText()[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_45 $$ foafName = reader.getElementText()[ FD ]
Line_44 $$ if (inAuthor && local.equals("name")) -->Line_46 $$ if (inAuthor && local.equals("uri")) [ CD ]
Line_43 $$ inAuthor = true-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_15 $$ boolean inAuthor = false-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_46 $$ if (inAuthor && local.equals("uri")) -->Line_47 $$ foafURI = reader.getElementText()[ CD ]
Line_47 $$ foafURI = reader.getElementText()-->Line_47 $$ foafURI = reader.getElementText()[ FD ]
Line_19 $$ String foafURI = null-->Line_47 $$ foafURI = reader.getElementText()[ FD ]
Line_47 $$ foafURI = reader.getElementText()-->Line_47 $$ foafURI = reader.getElementText()[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_47 $$ foafURI = reader.getElementText()[ FD ]
Line_23 $$ if (evt.isStartElement()) -->Line_50 $$ if (evt.isEndElement()) [ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_50 $$ if (evt.isEndElement()) [ FD ]
Line_50 $$ if (evt.isEndElement()) -->Line_50 $$ if (evt.isEndElement()) [ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_50 $$ if (evt.isEndElement()) [ FD ]
Line_50 $$ if (evt.isEndElement()) -->Line_51 $$ EndElement e = evt.asEndElement()[ CD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_51 $$ EndElement e = evt.asEndElement()[ FD ]
Line_50 $$ if (evt.isEndElement()) -->Line_52 $$ QName qName = e.getName()[ CD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_52 $$ QName qName = e.getName()[ FD ]
Line_50 $$ if (evt.isEndElement()) -->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ CD ]
Line_27 $$ inEntry = true-->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ FD ]
Line_14 $$ boolean inEntry = false-->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ FD ]
Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) -->Line_54 $$ String local = qName.getLocalPart()[ CD ]
Line_25 $$ QName qName = e.getName()-->Line_54 $$ String local = qName.getLocalPart()[ FD ]
Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) -->Line_55 $$ if (local.equals("entry")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_55 $$ if (local.equals("entry")) [ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_55 $$ if (local.equals("entry")) [ CD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_55 $$ if (local.equals("entry")) [ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_56 $$ Protein p1 = null[ CD ]
Line_55 $$ if (local.equals("entry")) -->Line_57 $$ Protein p2 = null[ CD ]
Line_55 $$ if (local.equals("entry")) -->Line_58 $$ PubmedEntry pubmed = null[ CD ]
Line_55 $$ if (local.equals("entry")) -->Line_59 $$ boolean valid = title != null && published != null[ CD ]
Line_55 $$ if (local.equals("entry")) -->Line_60 $$ String tokens[] = title == null ? new String[0] : title.trim().split("[ \t\n\r]+")[ CD ]
Line_33 $$ title = reader.getElementText()-->Line_60 $$ String tokens[] = title == null ? new String[0] : title.trim().split("[ \t\n\r]+")[ FD ]
Line_17 $$ String title = null-->Line_60 $$ String tokens[] = title == null ? new String[0] : title.trim().split("[ \t\n\r]+")[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_61 $$ if (valid && tokens.length != 5) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_61 $$ if (valid && tokens.length != 5) -->Line_62 $$ System.err.println("Ignoring " + title)[ CD ]
Line_61 $$ if (valid && tokens.length != 5) -->Line_63 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_63 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_63 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_63 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_65 $$ if (valid && !tokens[0].equals("@" + account)) -->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ CD ]
Line_65 $$ if (valid && !tokens[0].equals("@" + account)) -->Line_66 $$ System.err.println("Ignoring " + title + " doesn't start with @" + account)[ CD ]
Line_65 $$ if (valid && !tokens[0].equals("@" + account)) -->Line_67 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_67 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_67 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_67 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_63 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_67 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) -->Line_70 $$ System.err.println("Ignoring " + title + " not a gi:###")[ CD ]
Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) -->Line_71 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_71 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_71 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_71 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_71 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_63 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_67 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_71 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_56 $$ Protein p1 = null-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) -->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) -->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ CD ]
Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) -->Line_74 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_74 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_74 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_74 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_74 $$ valid = false[ FD ]
Line_74 $$ valid = false-->Line_74 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_63 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_67 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_71 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_74 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) -->Line_77 $$ System.err.println("Ignoring " + title + " not a gi:###")[ CD ]
Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) -->Line_78 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_78 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_78 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_78 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_78 $$ valid = false[ FD ]
Line_74 $$ valid = false-->Line_78 $$ valid = false[ FD ]
Line_78 $$ valid = false-->Line_78 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_63 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_67 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_71 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_74 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_78 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_57 $$ Protein p2 = null-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) -->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) -->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ CD ]
Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) -->Line_81 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_81 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_81 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_81 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_81 $$ valid = false[ FD ]
Line_74 $$ valid = false-->Line_81 $$ valid = false[ FD ]
Line_78 $$ valid = false-->Line_81 $$ valid = false[ FD ]
Line_81 $$ valid = false-->Line_81 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_63 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_67 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_71 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_74 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_78 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_81 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) -->Line_84 $$ System.err.println("Ignoring " + title + " not a pmid:###")[ CD ]
Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) -->Line_85 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_85 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_74 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_78 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_81 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_85 $$ valid = false-->Line_85 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_63 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_67 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_71 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_74 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_78 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_81 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_85 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_58 $$ PubmedEntry pubmed = null-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) -->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) -->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ CD ]
Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) -->Line_88 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_88 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_74 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_78 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_81 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_85 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_88 $$ valid = false-->Line_88 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_63 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_67 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_71 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_74 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_78 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_81 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_85 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_88 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) -->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ CD ]
Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) -->Line_91 $$ System.err.println("Ignoring " + title + " doesn't end with #" + hashtag)[ CD ]
Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) -->Line_92 $$ valid = false[ CD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_92 $$ valid = false[ FD ]
Line_63 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_67 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_71 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_74 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_78 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_81 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_85 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_88 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_92 $$ valid = false-->Line_92 $$ valid = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) [ CD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_95 $$ exportFoaf(foafName, foafURI)[ CD ]
Line_45 $$ foafName = reader.getElementText()-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_18 $$ String foafName = null-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_47 $$ foafURI = reader.getElementText()-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_19 $$ String foafURI = null-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_96 $$ exportGi(p1)[ CD ]
Line_56 $$ Protein p1 = null-->Line_96 $$ exportGi(p1)[ FD ]
Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) -->Line_96 $$ exportGi(p1)[ FD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_97 $$ exportGi(p2)[ CD ]
Line_57 $$ Protein p2 = null-->Line_97 $$ exportGi(p2)[ FD ]
Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) -->Line_97 $$ exportGi(p2)[ FD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_98 $$ exportPubmed(pubmed)[ CD ]
Line_58 $$ PubmedEntry pubmed = null-->Line_98 $$ exportPubmed(pubmed)[ FD ]
Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) -->Line_98 $$ exportPubmed(pubmed)[ FD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_99 $$ System.out.println("<Interaction rdf:about=\"" + link + "\">")[ CD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_100 $$ System.out.println(" <interactor rdf:resource=\"lsid:ncbi.nlm.nih.gov:protein:" + p1.gi + "\"/>")[ CD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_101 $$ System.out.println(" <interactor rdf:resource=\"lsid:ncbi.nlm.nih.gov:protein:" + p2.gi + "\"/>")[ CD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_102 $$ System.out.println(" <reference rdf:resource=\"http://www.ncbi.nlm.nih.gov/pubmed/" + pubmed.pmid + "\"/>")[ CD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_103 $$ System.out.println(" <dc:creator rdf:resource=\"" + foafURI + "\"/>")[ CD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_104 $$ System.out.println(" <dc:date>" + escape(published) + "</dc:date>")[ CD ]
Line_31 $$ published = reader.getElementText()-->Line_104 $$ System.out.println(" <dc:date>" + escape(published) + "</dc:date>")[ FD ]
Line_16 $$ String published = null-->Line_104 $$ System.out.println(" <dc:date>" + escape(published) + "</dc:date>")[ FD ]
Line_94 $$ if (valid && p1 != null && p2 != null && pubmed != null && foafName != null && foafURI != null) -->Line_105 $$ System.out.println("</Interaction>")[ CD ]
Line_55 $$ if (local.equals("entry")) -->Line_107 $$ inEntry = false[ CD ]
Line_27 $$ inEntry = true-->Line_107 $$ inEntry = false[ FD ]
Line_107 $$ inEntry = false-->Line_107 $$ inEntry = false[ FD ]
Line_14 $$ boolean inEntry = false-->Line_107 $$ inEntry = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_108 $$ title = null[ CD ]
Line_33 $$ title = reader.getElementText()-->Line_108 $$ title = null[ FD ]
Line_108 $$ title = null-->Line_108 $$ title = null[ FD ]
Line_17 $$ String title = null-->Line_108 $$ title = null[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_109 $$ foafName = null[ CD ]
Line_45 $$ foafName = reader.getElementText()-->Line_109 $$ foafName = null[ FD ]
Line_109 $$ foafName = null-->Line_109 $$ foafName = null[ FD ]
Line_18 $$ String foafName = null-->Line_109 $$ foafName = null[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_110 $$ foafURI = null[ CD ]
Line_47 $$ foafURI = reader.getElementText()-->Line_110 $$ foafURI = null[ FD ]
Line_110 $$ foafURI = null-->Line_110 $$ foafURI = null[ FD ]
Line_19 $$ String foafURI = null-->Line_110 $$ foafURI = null[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_111 $$ inAuthor = false[ CD ]
Line_43 $$ inAuthor = true-->Line_111 $$ inAuthor = false[ FD ]
Line_111 $$ inAuthor = false-->Line_111 $$ inAuthor = false[ FD ]
Line_15 $$ boolean inAuthor = false-->Line_111 $$ inAuthor = false[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_112 $$ published = null[ CD ]
Line_31 $$ published = reader.getElementText()-->Line_112 $$ published = null[ FD ]
Line_112 $$ published = null-->Line_112 $$ published = null[ FD ]
Line_16 $$ String published = null-->Line_112 $$ published = null[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_113 $$ link = null[ CD ]
Line_39 $$ link = att.getValue()-->Line_113 $$ link = null[ FD ]
Line_113 $$ link = null-->Line_113 $$ link = null[ FD ]
Line_20 $$ String link = null-->Line_113 $$ link = null[ FD ]
Line_55 $$ if (local.equals("entry")) -->Line_114 $$ if (inAuthor && local.equals("author")) [ CD ]
Line_43 $$ inAuthor = true-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_111 $$ inAuthor = false-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_15 $$ boolean inAuthor = false-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_114 $$ if (inAuthor && local.equals("author")) -->Line_115 $$ inAuthor = false[ CD ]
Line_43 $$ inAuthor = true-->Line_115 $$ inAuthor = false[ FD ]
Line_111 $$ inAuthor = false-->Line_115 $$ inAuthor = false[ FD ]
Line_115 $$ inAuthor = false-->Line_115 $$ inAuthor = false[ FD ]
Line_15 $$ boolean inAuthor = false-->Line_115 $$ inAuthor = false[ FD ]
Line_2 $$ private void harvest() throws IOException, XMLStreamException -->Line_120 $$ reader.close()[ CD ]
Line_13 $$ XMLEventReader reader = factory.createXMLEventReader(con.getInputStream())-->Line_120 $$ reader.close()[ FD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_23 $$ if (evt.isStartElement()) [ FD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_23 $$ if (evt.isStartElement()) [ FD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_24 $$ StartElement e = evt.asStartElement()[ FD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_25 $$ QName qName = e.getName()[ FD ]
Line_27 $$ inEntry = true-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_107 $$ inEntry = false-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_27 $$ inEntry = true-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_107 $$ inEntry = false-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_26 $$ if (!inEntry && Atom.NS.equals(qName.getNamespaceURI()) && qName.getLocalPart().equals("entry")) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_29 $$ String local = qName.getLocalPart()[ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_30 $$ if (local.equals("published")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_30 $$ if (local.equals("published")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_32 $$ if (local.equals("title")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_32 $$ if (local.equals("title")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_34 $$ if (link == null && local.equals("link")) [ FD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))[ FD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_36 $$ if (att != null && att.getValue().equals("text/html")) [ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_36 $$ if (att != null && att.getValue().equals("text/html")) [ FD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_37 $$ att = e.getAttributeByName(new QName("href"))[ FD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_38 $$ if (att != null) [ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_38 $$ if (att != null) [ FD ]
Line_35 $$ Attribute att = e.getAttributeByName(new QName("type"))-->Line_39 $$ link = att.getValue()[ FD ]
Line_37 $$ att = e.getAttributeByName(new QName("href"))-->Line_39 $$ link = att.getValue()[ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_42 $$ if (local.equals("author")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_42 $$ if (local.equals("author")) [ FD ]
Line_43 $$ inAuthor = true-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_111 $$ inAuthor = false-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_115 $$ inAuthor = false-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_44 $$ if (inAuthor && local.equals("name")) [ FD ]
Line_43 $$ inAuthor = true-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_111 $$ inAuthor = false-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_115 $$ inAuthor = false-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_46 $$ if (inAuthor && local.equals("uri")) [ FD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_50 $$ if (evt.isEndElement()) [ FD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_50 $$ if (evt.isEndElement()) [ FD ]
Line_22 $$ XMLEvent evt = reader.nextEvent()-->Line_51 $$ EndElement e = evt.asEndElement()[ FD ]
Line_24 $$ StartElement e = evt.asStartElement()-->Line_52 $$ QName qName = e.getName()[ FD ]
Line_27 $$ inEntry = true-->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ FD ]
Line_107 $$ inEntry = false-->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_53 $$ if (inEntry && Atom.NS.equals(qName.getNamespaceURI())) [ FD ]
Line_25 $$ QName qName = e.getName()-->Line_54 $$ String local = qName.getLocalPart()[ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_55 $$ if (local.equals("entry")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_55 $$ if (local.equals("entry")) [ FD ]
Line_33 $$ title = reader.getElementText()-->Line_60 $$ String tokens[] = title == null ? new String[0] : title.trim().split("[ \t\n\r]+")[ FD ]
Line_108 $$ title = null-->Line_60 $$ String tokens[] = title == null ? new String[0] : title.trim().split("[ \t\n\r]+")[ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_63 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_67 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_71 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_74 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_78 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_81 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_85 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_88 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_92 $$ valid = false-->Line_61 $$ if (valid && tokens.length != 5) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_63 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_67 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_71 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_74 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_78 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_81 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_85 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_88 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_92 $$ valid = false-->Line_65 $$ if (valid && !tokens[0].equals("@" + account)) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_63 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_67 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_71 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_74 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_78 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_81 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_85 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_88 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_92 $$ valid = false-->Line_69 $$ if (valid && !(tokens[1].startsWith("gi:") && Cast.Integer.isA(tokens[1].substring(3)))) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_63 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_67 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_71 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_74 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_78 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_81 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_85 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_88 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_92 $$ valid = false-->Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_63 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_67 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_71 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_74 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_78 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_81 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_85 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_88 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_92 $$ valid = false-->Line_76 $$ if (valid && !(tokens[2].startsWith("gi:") && Cast.Integer.isA(tokens[2].substring(3)))) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_63 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_67 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_71 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_74 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_78 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_81 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_85 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_88 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_92 $$ valid = false-->Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_63 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_67 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_71 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_74 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_78 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_81 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_85 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_88 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_92 $$ valid = false-->Line_83 $$ if (valid && !(tokens[3].startsWith("pmid:") && Cast.Integer.isA(tokens[3].substring(5)))) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_63 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_67 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_71 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_74 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_78 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_81 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_85 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_88 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_92 $$ valid = false-->Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) [ FD ]
Line_59 $$ boolean valid = title != null && published != null-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_63 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_67 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_71 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_74 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_78 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_81 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_85 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_88 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_92 $$ valid = false-->Line_90 $$ if (valid && !tokens[4].equals("#" + hashtag)) [ FD ]
Line_45 $$ foafName = reader.getElementText()-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_109 $$ foafName = null-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_47 $$ foafURI = reader.getElementText()-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_110 $$ foafURI = null-->Line_95 $$ exportFoaf(foafName, foafURI)[ FD ]
Line_56 $$ Protein p1 = null-->Line_96 $$ exportGi(p1)[ FD ]
Line_73 $$ if (valid && (p1 = fetchProtein(Integer.parseInt(tokens[1].substring(3)))) == null) -->Line_96 $$ exportGi(p1)[ FD ]
Line_57 $$ Protein p2 = null-->Line_97 $$ exportGi(p2)[ FD ]
Line_80 $$ if (valid && (p2 = fetchProtein(Integer.parseInt(tokens[2].substring(3)))) == null) -->Line_97 $$ exportGi(p2)[ FD ]
Line_58 $$ PubmedEntry pubmed = null-->Line_98 $$ exportPubmed(pubmed)[ FD ]
Line_87 $$ if (valid && (pubmed = fetchPubmedEntry(Integer.parseInt(tokens[3].substring(5)))) == null) -->Line_98 $$ exportPubmed(pubmed)[ FD ]
Line_31 $$ published = reader.getElementText()-->Line_104 $$ System.out.println(" <dc:date>" + escape(published) + "</dc:date>")[ FD ]
Line_112 $$ published = null-->Line_104 $$ System.out.println(" <dc:date>" + escape(published) + "</dc:date>")[ FD ]
Line_43 $$ inAuthor = true-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_111 $$ inAuthor = false-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_115 $$ inAuthor = false-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
Line_29 $$ String local = qName.getLocalPart()-->Line_114 $$ if (inAuthor && local.equals("author")) [ FD ]
