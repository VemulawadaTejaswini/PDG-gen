Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void registerClasses() throws PrintException [ CD ]
Line_2 $$ protected void registerClasses() throws PrintException -->Line_3 $$ if (!init) [ CD ]
Line_5 $$ Enumeration<URL> somethingToRegister = this.getClass().getClassLoader().getResources("META-INF/" + getClass().getSimpleName() + ".properties")-->Line_5 $$ Enumeration<URL> somethingToRegister = this.getClass().getClassLoader().getResources("META-INF/" + getClass().getSimpleName() + ".properties")[ CD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_6 $$ while (somethingToRegister.hasMoreElements()) [ CD ]
Line_5 $$ Enumeration<URL> somethingToRegister = this.getClass().getClassLoader().getResources("META-INF/" + getClass().getSimpleName() + ".properties")-->Line_6 $$ while (somethingToRegister.hasMoreElements()) [ FD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_7 $$ URL url = (URL) somethingToRegister.nextElement()[ CD ]
Line_5 $$ Enumeration<URL> somethingToRegister = this.getClass().getClassLoader().getResources("META-INF/" + getClass().getSimpleName() + ".properties")-->Line_7 $$ URL url = (URL) somethingToRegister.nextElement()[ FD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_8 $$ InputStream in = url.openStream()[ CD ]
Line_8 $$ InputStream in = url.openStream()-->Line_8 $$ InputStream in = url.openStream()[ CD ]
Line_7 $$ URL url = (URL) somethingToRegister.nextElement()-->Line_8 $$ InputStream in = url.openStream()[ FD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_9 $$ BufferedReader buff = new BufferedReader(new InputStreamReader(in))[ CD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_10 $$ String line = buff.readLine()[ CD ]
Line_10 $$ String line = buff.readLine()-->Line_10 $$ String line = buff.readLine()[ CD ]
Line_9 $$ BufferedReader buff = new BufferedReader(new InputStreamReader(in))-->Line_10 $$ String line = buff.readLine()[ FD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_11 $$ while (line != null) [ CD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_6 $$ while (somethingToRegister.hasMoreElements()) [ CD ]
Line_10 $$ String line = buff.readLine()-->Line_11 $$ while (line != null) [ FD ]
Line_11 $$ while (line != null) -->Line_12 $$ log.debug(line)[ CD ]
Line_10 $$ String line = buff.readLine()-->Line_12 $$ log.debug(line)[ FD ]
Line_14 $$ Class cls = Class.forName(line)-->Line_14 $$ Class cls = Class.forName(line)[ CD ]
Line_10 $$ String line = buff.readLine()-->Line_14 $$ Class cls = Class.forName(line)[ FD ]
Line_14 $$ Class cls = Class.forName(line)-->Line_15 $$ cls.newInstance()[ FD ]
Line_11 $$ while (line != null) -->Line_24 $$ line = buff.readLine()[ CD ]
Line_24 $$ line = buff.readLine()-->Line_24 $$ line = buff.readLine()[ FD ]
Line_10 $$ String line = buff.readLine()-->Line_24 $$ line = buff.readLine()[ FD ]
Line_24 $$ line = buff.readLine()-->Line_24 $$ line = buff.readLine()[ CD ]
Line_9 $$ BufferedReader buff = new BufferedReader(new InputStreamReader(in))-->Line_24 $$ line = buff.readLine()[ FD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_26 $$ buff.close()[ CD ]
Line_9 $$ BufferedReader buff = new BufferedReader(new InputStreamReader(in))-->Line_26 $$ buff.close()[ FD ]
Line_6 $$ while (somethingToRegister.hasMoreElements()) -->Line_27 $$ in.close()[ CD ]
Line_8 $$ InputStream in = url.openStream()-->Line_27 $$ in.close()[ FD ]
Line_7 $$ URL url = (URL) somethingToRegister.nextElement()-->Line_8 $$ InputStream in = url.openStream()[ FD ]
Line_9 $$ BufferedReader buff = new BufferedReader(new InputStreamReader(in))-->Line_10 $$ String line = buff.readLine()[ FD ]
Line_9 $$ BufferedReader buff = new BufferedReader(new InputStreamReader(in))-->Line_26 $$ buff.close()[ FD ]
Line_8 $$ InputStream in = url.openStream()-->Line_27 $$ in.close()[ FD ]
Line_24 $$ line = buff.readLine()-->Line_11 $$ while (line != null) [ FD ]
Line_24 $$ line = buff.readLine()-->Line_11 $$ while (line != null) [ FD ]
Line_24 $$ line = buff.readLine()-->Line_12 $$ log.debug(line)[ FD ]
Line_24 $$ line = buff.readLine()-->Line_14 $$ Class cls = Class.forName(line)[ FD ]
Line_14 $$ Class cls = Class.forName(line)-->Line_15 $$ cls.newInstance()[ FD ]
