Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void buildBundle() [ CD ]
Line_2 $$ private void buildBundle() -->Line_3 $$ if (targetProject == null) [ CD ]
Line_3 $$ if (targetProject == null) -->Line_4 $$ MessageDialog.openError(getShell(), "Error", "No target SPAB project selected!")[ CD ]
Line_3 $$ if (targetProject == null) -->Line_5 $$ return[ CD ]
Line_2 $$ private void buildBundle() -->Line_7 $$ if (projectProcessDirSelector.getText().trim().length() == 0) [ CD ]
Line_7 $$ if (projectProcessDirSelector.getText().trim().length() == 0) -->Line_8 $$ MessageDialog.openError(getShell(), "Error", "No process directory selected for project " + targetProject.getName() + "!")[ CD ]
Line_7 $$ if (projectProcessDirSelector.getText().trim().length() == 0) -->Line_9 $$ return[ CD ]
Line_2 $$ private void buildBundle() -->Line_11 $$ deleteBundleFile()[ CD ]
Line_13 $$ File projectDir = targetProject.getLocation().toFile()-->Line_13 $$ File projectDir = targetProject.getLocation().toFile()[ CD ]
Line_15 $$ boolean bpmoCopied = IOUtils.copyProcessFilesSecure(getBPMOFile(), projectProcessesDir)-->Line_15 $$ boolean bpmoCopied = IOUtils.copyProcessFilesSecure(getBPMOFile(), projectProcessesDir)[ CD ]
Line_14 $$ File projectProcessesDir = new File(projectDir, projectProcessDirSelector.getText())-->Line_15 $$ boolean bpmoCopied = IOUtils.copyProcessFilesSecure(getBPMOFile(), projectProcessesDir)[ FD ]
Line_16 $$ boolean sbpelCopied = IOUtils.copyProcessFilesSecure(getSBPELFile(), projectProcessesDir)-->Line_16 $$ boolean sbpelCopied = IOUtils.copyProcessFilesSecure(getSBPELFile(), projectProcessesDir)[ CD ]
Line_14 $$ File projectProcessesDir = new File(projectDir, projectProcessDirSelector.getText())-->Line_16 $$ boolean sbpelCopied = IOUtils.copyProcessFilesSecure(getSBPELFile(), projectProcessesDir)[ FD ]
Line_17 $$ boolean xmlCopied = IOUtils.copyProcessFilesSecure(getBPEL4SWSFile(), projectProcessesDir)-->Line_17 $$ boolean xmlCopied = IOUtils.copyProcessFilesSecure(getBPEL4SWSFile(), projectProcessesDir)[ CD ]
Line_14 $$ File projectProcessesDir = new File(projectDir, projectProcessDirSelector.getText())-->Line_17 $$ boolean xmlCopied = IOUtils.copyProcessFilesSecure(getBPEL4SWSFile(), projectProcessesDir)[ FD ]
Line_13 $$ File projectDir = targetProject.getLocation().toFile()-->Line_18 $$ bundleFile = IOUtils.archiveBundle(projectDir, Activator.getDefault().getStateLocation().toFile())[ FD ]
Line_19 $$ if (bpmoCopied) -->Line_20 $$ new File(projectProcessesDir, getBPMOFile().getName()).delete()[ CD ]
Line_22 $$ if (sbpelCopied) -->Line_23 $$ new File(projectProcessesDir, getSBPELFile().getName()).delete()[ CD ]
Line_25 $$ if (xmlCopied) -->Line_26 $$ new File(projectProcessesDir, getBPEL4SWSFile().getName()).delete()[ CD ]
Line_2 $$ private void buildBundle() -->Line_34 $$ bpmoFile = getBPMOFile()[ CD ]
Line_2 $$ private void buildBundle() -->Line_35 $$ sbpelFile = getSBPELFile()[ CD ]
Line_2 $$ private void buildBundle() -->Line_36 $$ xmlFile = getBPEL4SWSFile()[ CD ]
Line_2 $$ private void buildBundle() -->Line_37 $$ updateBundleUI()[ CD ]
Line_2 $$ private void buildBundle() -->Line_38 $$ getWizard().getContainer().updateButtons()[ CD ]
