Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int down(String downLoadUrl, String saveUrl) [ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_3 $$ int status = 1[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_4 $$ long fileSize = 0[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_5 $$ int len = 0[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_6 $$ byte[] bt = new byte[1024][ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_7 $$ RandomAccessFile raFile = null[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_8 $$ long totalSize = 0[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_9 $$ URL url = null[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_10 $$ HttpURLConnection httpConn = null[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_11 $$ BufferedInputStream bis = null[ CD ]
Line_9 $$ URL url = null-->Line_13 $$ url = new URL(downLoadUrl)[ FD ]
Line_13 $$ url = new URL(downLoadUrl)-->Line_13 $$ url = new URL(downLoadUrl)[ FD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_9 $$ URL url = null-->Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_13 $$ url = new URL(downLoadUrl)-->Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) [ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) [ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_16 $$ status = 500[ CD ]
Line_3 $$ int status = 1-->Line_16 $$ status = 500[ FD ]
Line_16 $$ status = 500-->Line_16 $$ status = 500[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))[ CD ]
Line_8 $$ long totalSize = 0-->Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))[ FD ]
Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))-->Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))[ FD ]
Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))-->Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))[ CD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_19 $$ System.out.println("文件大小:" + totalSize / 1000000 + " M")[ CD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_20 $$ httpConn.disconnect()[ CD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_20 $$ httpConn.disconnect()[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_20 $$ httpConn.disconnect()[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()[ CD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_9 $$ URL url = null-->Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_13 $$ url = new URL(downLoadUrl)-->Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)[ CD ]
Line_4 $$ long fileSize = 0-->Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)[ FD ]
Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)-->Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)[ FD ]
Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)-->Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)[ CD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_23 $$ System.out.println("已下载:" + fileSize / 1000000 + " M")[ CD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_24 $$ httpConn.setRequestProperty("RANGE", "bytes=" + fileSize + "-")[ CD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_24 $$ httpConn.setRequestProperty("RANGE", "bytes=" + fileSize + "-")[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_24 $$ httpConn.setRequestProperty("RANGE", "bytes=" + fileSize + "-")[ FD ]
Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_24 $$ httpConn.setRequestProperty("RANGE", "bytes=" + fileSize + "-")[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_25 $$ httpConn.setRequestProperty("Accept", "image/gif,image/x-xbitmap,application/msword,*/*")[ CD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_25 $$ httpConn.setRequestProperty("Accept", "image/gif,image/x-xbitmap,application/msword,*/*")[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_25 $$ httpConn.setRequestProperty("Accept", "image/gif,image/x-xbitmap,application/msword,*/*")[ FD ]
Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_25 $$ httpConn.setRequestProperty("Accept", "image/gif,image/x-xbitmap,application/msword,*/*")[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")[ CD ]
Line_7 $$ RandomAccessFile raFile = null-->Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")[ FD ]
Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")-->Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_27 $$ raFile.seek(fileSize)[ CD ]
Line_7 $$ RandomAccessFile raFile = null-->Line_27 $$ raFile.seek(fileSize)[ FD ]
Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")-->Line_27 $$ raFile.seek(fileSize)[ FD ]
Line_4 $$ long fileSize = 0-->Line_27 $$ raFile.seek(fileSize)[ FD ]
Line_22 $$ fileSize = loadFileSize(saveUrl + BACK_SUFFIX)-->Line_27 $$ raFile.seek(fileSize)[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())[ CD ]
Line_11 $$ BufferedInputStream bis = null-->Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())[ FD ]
Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())-->Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())[ FD ]
Line_10 $$ HttpURLConnection httpConn = null-->Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())[ FD ]
Line_14 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())[ FD ]
Line_21 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())[ FD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_29 $$ while ((len = bis.read(bt)) > 0) [ CD ]
Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) -->Line_15 $$ if (httpConn.getHeaderField("Content-Length") == null) [ CD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_29 $$ while ((len = bis.read(bt)) > 0) [ FD ]
Line_5 $$ int len = 0-->Line_29 $$ while ((len = bis.read(bt)) > 0) [ FD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_29 $$ while ((len = bis.read(bt)) > 0) [ CD ]
Line_11 $$ BufferedInputStream bis = null-->Line_29 $$ while ((len = bis.read(bt)) > 0) [ FD ]
Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())-->Line_29 $$ while ((len = bis.read(bt)) > 0) [ FD ]
Line_6 $$ byte[] bt = new byte[1024]-->Line_29 $$ while ((len = bis.read(bt)) > 0) [ FD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_30 $$ raFile.write(bt, 0, len)[ CD ]
Line_7 $$ RandomAccessFile raFile = null-->Line_30 $$ raFile.write(bt, 0, len)[ FD ]
Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")-->Line_30 $$ raFile.write(bt, 0, len)[ FD ]
Line_6 $$ byte[] bt = new byte[1024]-->Line_30 $$ raFile.write(bt, 0, len)[ FD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_30 $$ raFile.write(bt, 0, len)[ FD ]
Line_5 $$ int len = 0-->Line_30 $$ raFile.write(bt, 0, len)[ FD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_31 $$ float progress = 0.f[ CD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_32 $$ float downSize = raFile.length()[ CD ]
Line_32 $$ float downSize = raFile.length()-->Line_32 $$ float downSize = raFile.length()[ CD ]
Line_7 $$ RandomAccessFile raFile = null-->Line_32 $$ float downSize = raFile.length()[ FD ]
Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")-->Line_32 $$ float downSize = raFile.length()[ FD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_33 $$ progress = downSize / totalSize[ CD ]
Line_31 $$ float progress = 0.f-->Line_33 $$ progress = downSize / totalSize[ FD ]
Line_33 $$ progress = downSize / totalSize-->Line_33 $$ progress = downSize / totalSize[ FD ]
Line_32 $$ float downSize = raFile.length()-->Line_33 $$ progress = downSize / totalSize[ FD ]
Line_8 $$ long totalSize = 0-->Line_33 $$ progress = downSize / totalSize[ FD ]
Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))-->Line_33 $$ progress = downSize / totalSize[ FD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_34 $$ System.out.println(progress * 100 + "%" + "\t\t" + downSize / 1000000 + "M")[ CD ]
Line_3 $$ int status = 1-->Line_38 $$ status = 404[ FD ]
Line_16 $$ status = 500-->Line_38 $$ status = 404[ FD ]
Line_38 $$ status = 404-->Line_38 $$ status = 404[ FD ]
Line_11 $$ BufferedInputStream bis = null-->Line_43 $$ if (bis != null)[ FD ]
Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())-->Line_43 $$ if (bis != null)[ FD ]
Line_43 $$ if (bis != null)-->Line_43 $$ bis.close()[ CD ]
Line_11 $$ BufferedInputStream bis = null-->Line_43 $$ bis.close()[ FD ]
Line_28 $$ bis = new BufferedInputStream(httpConn.getInputStream())-->Line_43 $$ bis.close()[ FD ]
Line_7 $$ RandomAccessFile raFile = null-->Line_44 $$ if (raFile != null)[ FD ]
Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")-->Line_44 $$ if (raFile != null)[ FD ]
Line_44 $$ if (raFile != null)-->Line_44 $$ raFile.close()[ CD ]
Line_7 $$ RandomAccessFile raFile = null-->Line_44 $$ raFile.close()[ FD ]
Line_26 $$ raFile = new RandomAccessFile(saveUrl + BACK_SUFFIX, "rw")-->Line_44 $$ raFile.close()[ FD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_49 $$ if (loadFileSize(saveUrl + BACK_SUFFIX) == totalSize) [ CD ]
Line_8 $$ long totalSize = 0-->Line_49 $$ if (loadFileSize(saveUrl + BACK_SUFFIX) == totalSize) [ FD ]
Line_18 $$ totalSize = Long.parseLong(httpConn.getHeaderField("Content-Length"))-->Line_49 $$ if (loadFileSize(saveUrl + BACK_SUFFIX) == totalSize) [ FD ]
Line_49 $$ if (loadFileSize(saveUrl + BACK_SUFFIX) == totalSize) -->Line_50 $$ fileRename(saveUrl + BACK_SUFFIX, saveUrl)[ CD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_50 $$ fileRename(saveUrl + BACK_SUFFIX, saveUrl)[ FD ]
Line_2 $$ public int down(String downLoadUrl, String saveUrl) -->Line_52 $$ return status[ CD ]
Line_29 $$ while ((len = bis.read(bt)) > 0) -->Line_30 $$ raFile.write(bt, 0, len)[ FD ]
Line_32 $$ float downSize = raFile.length()-->Line_33 $$ progress = downSize / totalSize[ FD ]
