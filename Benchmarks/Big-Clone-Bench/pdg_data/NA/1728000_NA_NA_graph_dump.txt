Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException [ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_3 $$ if (baseName == null || locale == null || format == null || loader == null)[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_4 $$ ResourceBundle bundle = null[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_5 $$ if (format.equals("user")) [ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_5 $$ if (format.equals("user")) [ FD ]
Line_5 $$ if (format.equals("user")) -->Line_5 $$ if (format.equals("user")) [ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_5 $$ if (format.equals("user")) [ FD ]
Line_5 $$ if (format.equals("user")) -->Line_6 $$ String bundleName = toBundleName(baseName, locale)[ CD ]
Line_6 $$ String bundleName = toBundleName(baseName, locale)-->Line_6 $$ String bundleName = toBundleName(baseName, locale)[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_6 $$ String bundleName = toBundleName(baseName, locale)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_6 $$ String bundleName = toBundleName(baseName, locale)[ FD ]
Line_5 $$ if (format.equals("user")) -->Line_7 $$ String resourceName = "file://" + config.getString(HOME) + "/" + bundleName + ".properties"[ CD ]
Line_5 $$ if (format.equals("user")) -->Line_8 $$ InputStream stream = null[ CD ]
Line_10 $$ URL url = new URL(resourceName)-->Line_11 $$ if (url != null) [ FD ]
Line_11 $$ if (url != null) -->Line_12 $$ URLConnection connection = url.openConnection()[ CD ]
Line_12 $$ URLConnection connection = url.openConnection()-->Line_12 $$ URLConnection connection = url.openConnection()[ CD ]
Line_10 $$ URL url = new URL(resourceName)-->Line_12 $$ URLConnection connection = url.openConnection()[ FD ]
Line_11 $$ if (url != null) -->Line_13 $$ if (connection != null) [ CD ]
Line_12 $$ URLConnection connection = url.openConnection()-->Line_13 $$ if (connection != null) [ FD ]
Line_13 $$ if (connection != null) -->Line_14 $$ if (reload) [ CD ]
Line_14 $$ if (reload) -->Line_15 $$ connection.setUseCaches(false)[ CD ]
Line_12 $$ URLConnection connection = url.openConnection()-->Line_15 $$ connection.setUseCaches(false)[ FD ]
Line_13 $$ if (connection != null) -->Line_17 $$ stream = connection.getInputStream()[ CD ]
Line_8 $$ InputStream stream = null-->Line_17 $$ stream = connection.getInputStream()[ FD ]
Line_17 $$ stream = connection.getInputStream()-->Line_17 $$ stream = connection.getInputStream()[ FD ]
Line_17 $$ stream = connection.getInputStream()-->Line_17 $$ stream = connection.getInputStream()[ CD ]
Line_12 $$ URLConnection connection = url.openConnection()-->Line_17 $$ stream = connection.getInputStream()[ FD ]
Line_5 $$ if (format.equals("user")) -->Line_22 $$ if (stream != null) [ CD ]
Line_8 $$ InputStream stream = null-->Line_22 $$ if (stream != null) [ FD ]
Line_17 $$ stream = connection.getInputStream()-->Line_22 $$ if (stream != null) [ FD ]
Line_22 $$ if (stream != null) -->Line_23 $$ BufferedInputStream bis = new BufferedInputStream(stream)[ CD ]
Line_22 $$ if (stream != null) -->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ CD ]
Line_4 $$ ResourceBundle bundle = null-->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))-->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_23 $$ BufferedInputStream bis = new BufferedInputStream(stream)-->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_24 $$ bundle = new UserResourceBundle(UTF8ClassLoader.readUTFStreamToEscapedASCII(bis), super.newBundle(baseName, locale, "java.properties", loader, reload))[ FD ]
Line_22 $$ if (stream != null) -->Line_25 $$ bis.close()[ CD ]
Line_23 $$ BufferedInputStream bis = new BufferedInputStream(stream)-->Line_25 $$ bis.close()[ FD ]
Line_22 $$ if (stream != null) -->Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)[ CD ]
Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)-->Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_27 $$ return super.newBundle(baseName, locale, "java.properties", loader, reload)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_30 $$ return bundle[ CD ]
