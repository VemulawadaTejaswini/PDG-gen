Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ MSPack pack = new MSPack(new FileInputStream(args[0]))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String[] files = pack.getFileNames()[ CD ]
Line_4 $$ String[] files = pack.getFileNames()-->Line_4 $$ String[] files = pack.getFileNames()[ CD ]
Line_3 $$ MSPack pack = new MSPack(new FileInputStream(args[0]))-->Line_4 $$ String[] files = pack.getFileNames()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ CD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ CD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ FD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ CD ]
Line_3 $$ MSPack pack = new MSPack(new FileInputStream(args[0]))-->Line_5 $$ System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ System.out.println("Writing " + files[files.length - 1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ InputStream is = pack.getInputStream(files.length - 1)[ CD ]
Line_7 $$ InputStream is = pack.getInputStream(files.length - 1)-->Line_7 $$ InputStream is = pack.getInputStream(files.length - 1)[ CD ]
Line_3 $$ MSPack pack = new MSPack(new FileInputStream(args[0]))-->Line_7 $$ InputStream is = pack.getInputStream(files.length - 1)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ OutputStream os = new FileOutputStream(files[files.length - 1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int n[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ byte[] buf = new byte[4096][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)-->Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)[ FD ]
Line_9 $$ int n-->Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)[ FD ]
Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)-->Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)[ CD ]
Line_7 $$ InputStream is = pack.getInputStream(files.length - 1)-->Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)[ FD ]
Line_10 $$ byte[] buf = new byte[4096]-->Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)[ FD ]
Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)-->Line_11 $$ os.write(buf, 0, n)[ CD ]
Line_8 $$ OutputStream os = new FileOutputStream(files[files.length - 1])-->Line_11 $$ os.write(buf, 0, n)[ FD ]
Line_10 $$ byte[] buf = new byte[4096]-->Line_11 $$ os.write(buf, 0, n)[ FD ]
Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)-->Line_11 $$ os.write(buf, 0, n)[ FD ]
Line_9 $$ int n-->Line_11 $$ os.write(buf, 0, n)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ os.close()[ CD ]
Line_8 $$ OutputStream os = new FileOutputStream(files[files.length - 1])-->Line_12 $$ os.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ is.close()[ CD ]
Line_7 $$ InputStream is = pack.getInputStream(files.length - 1)-->Line_13 $$ is.close()[ FD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ FD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ FD ]
Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])-->Line_5 $$ for (int i = 0; i < files.length; i++) System.out.println(i + ": " + files[i] + ": " + pack.getLengths()[i])[ FD ]
Line_11 $$ while ((n = is.read(buf)) != -1) os.write(buf, 0, n)-->Line_11 $$ os.write(buf, 0, n)[ FD ]
