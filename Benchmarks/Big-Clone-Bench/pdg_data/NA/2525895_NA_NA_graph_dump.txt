Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static byte[] encode(String cryptPassword, byte[] credentials, byte[] salt) [ CD ]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST)-->Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST)[ CD ]
Line_5 $$ SecureRandom random = SecureRandom.getInstance(RANDOM)-->Line_5 $$ SecureRandom random = SecureRandom.getInstance(RANDOM)[ CD ]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST)-->Line_6 $$ digester.reset()[ FD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_7 $$ for (int i = 0; i < ITERATIONS; i++) [ CD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_7 $$ for (int i = 0; i < ITERATIONS; i++) [ CD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_7 $$ for (int i = 0; i < ITERATIONS; i++) [ FD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_8 $$ digester.update(salt)[ CD ]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST)-->Line_8 $$ digester.update(salt)[ FD ]
Line_2 $$ public static byte[] encode(String cryptPassword, byte[] credentials, byte[] salt) -->Line_8 $$ digester.update(salt)[ FD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_9 $$ digester.update(cryptPassword.getBytes("UTF-8"))[ CD ]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST)-->Line_9 $$ digester.update(cryptPassword.getBytes("UTF-8"))[ FD ]
Line_2 $$ public static byte[] encode(String cryptPassword, byte[] credentials, byte[] salt) -->Line_9 $$ digester.update(cryptPassword.getBytes("UTF-8"))[ FD ]
Line_11 $$ byte[] hash = digester.digest()-->Line_11 $$ byte[] hash = digester.digest()[ CD ]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST)-->Line_11 $$ byte[] hash = digester.digest()[ FD ]
Line_5 $$ SecureRandom random = SecureRandom.getInstance(RANDOM)-->Line_12 $$ random.setSeed(hash)[ FD ]
Line_11 $$ byte[] hash = digester.digest()-->Line_12 $$ random.setSeed(hash)[ FD ]
Line_13 $$ int maxKeySize = Cipher.getMaxAllowedKeyLength(CIPHER)-->Line_13 $$ int maxKeySize = Cipher.getMaxAllowedKeyLength(CIPHER)[ CD ]
Line_14 $$ KeyGenerator generator = KeyGenerator.getInstance(CIPHER)-->Line_14 $$ KeyGenerator generator = KeyGenerator.getInstance(CIPHER)[ CD ]
Line_14 $$ KeyGenerator generator = KeyGenerator.getInstance(CIPHER)-->Line_15 $$ generator.init(maxKeySize, random)[ FD ]
Line_13 $$ int maxKeySize = Cipher.getMaxAllowedKeyLength(CIPHER)-->Line_15 $$ generator.init(maxKeySize, random)[ FD ]
Line_5 $$ SecureRandom random = SecureRandom.getInstance(RANDOM)-->Line_15 $$ generator.init(maxKeySize, random)[ FD ]
Line_16 $$ SecretKey key = generator.generateKey()-->Line_16 $$ SecretKey key = generator.generateKey()[ CD ]
Line_14 $$ KeyGenerator generator = KeyGenerator.getInstance(CIPHER)-->Line_16 $$ SecretKey key = generator.generateKey()[ FD ]
Line_17 $$ Cipher cipher = Cipher.getInstance(CIPHER)-->Line_17 $$ Cipher cipher = Cipher.getInstance(CIPHER)[ CD ]
Line_17 $$ Cipher cipher = Cipher.getInstance(CIPHER)-->Line_18 $$ cipher.init(Cipher.ENCRYPT_MODE, key)[ FD ]
Line_16 $$ SecretKey key = generator.generateKey()-->Line_18 $$ cipher.init(Cipher.ENCRYPT_MODE, key)[ FD ]
Line_19 $$ byte[] cipherOut = cipher.doFinal(credentials)-->Line_19 $$ byte[] cipherOut = cipher.doFinal(credentials)[ CD ]
Line_17 $$ Cipher cipher = Cipher.getInstance(CIPHER)-->Line_19 $$ byte[] cipherOut = cipher.doFinal(credentials)[ FD ]
Line_2 $$ public static byte[] encode(String cryptPassword, byte[] credentials, byte[] salt) -->Line_19 $$ byte[] cipherOut = cipher.doFinal(credentials)[ FD ]
Line_2 $$ public static byte[] encode(String cryptPassword, byte[] credentials, byte[] salt) -->Line_21 $$ System.arraycopy(salt, 0, ret, 0, salt.length)[ FD ]
Line_20 $$ byte[] ret = new byte[salt.length + cipherOut.length]-->Line_21 $$ System.arraycopy(salt, 0, ret, 0, salt.length)[ FD ]
Line_19 $$ byte[] cipherOut = cipher.doFinal(credentials)-->Line_22 $$ System.arraycopy(cipherOut, 0, ret, salt.length, cipherOut.length)[ FD ]
Line_20 $$ byte[] ret = new byte[salt.length + cipherOut.length]-->Line_22 $$ System.arraycopy(cipherOut, 0, ret, salt.length, cipherOut.length)[ FD ]
Line_2 $$ public static byte[] encode(String cryptPassword, byte[] credentials, byte[] salt) -->Line_27 $$ return new byte[0][ CD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_7 $$ for (int i = 0; i < ITERATIONS; i++) [ FD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_7 $$ for (int i = 0; i < ITERATIONS; i++) [ FD ]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) -->Line_7 $$ for (int i = 0; i < ITERATIONS; i++) [ FD ]
