Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException [ CD ]
Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)[ CD ]
Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)[ FD ]
Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException -->Line_4 $$ if (con == null) [ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_4 $$ if (con == null) [ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_8 $$ con.setAutoCommit(false)[ FD ]
Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException -->Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + this.dbInsertName)[ FD ]
Line_10 $$ String uid = ((RDN) (new DN(entry.getEntry().getDN())).getRDNs().get(0)).getValue()-->Line_10 $$ String uid = ((RDN) (new DN(entry.getEntry().getDN())).getRDNs().get(0)).getValue()[ CD ]
Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException -->Line_10 $$ String uid = ((RDN) (new DN(entry.getEntry().getDN())).getRDNs().get(0)).getValue()[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement(this.insertSQL)-->Line_11 $$ PreparedStatement ps = con.prepareStatement(this.insertSQL)[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_11 $$ PreparedStatement ps = con.prepareStatement(this.insertSQL)[ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_13 $$ String field = this.fields.get(i)[ CD ]
Line_13 $$ String field = this.fields.get(i)-->Line_13 $$ String field = this.fields.get(i)[ CD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_13 $$ String field = this.fields.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_14 $$ if (field.equals(this.rdnField)) [ CD ]
Line_13 $$ String field = this.fields.get(i)-->Line_14 $$ if (field.equals(this.rdnField)) [ FD ]
Line_14 $$ if (field.equals(this.rdnField)) -->Line_14 $$ if (field.equals(this.rdnField)) [ CD ]
Line_13 $$ String field = this.fields.get(i)-->Line_14 $$ if (field.equals(this.rdnField)) [ FD ]
Line_14 $$ if (field.equals(this.rdnField)) -->Line_15 $$ ps.setString(i + 1, uid)[ CD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement(this.insertSQL)-->Line_15 $$ ps.setString(i + 1, uid)[ FD ]
Line_10 $$ String uid = ((RDN) (new DN(entry.getEntry().getDN())).getRDNs().get(0)).getValue()-->Line_15 $$ ps.setString(i + 1, uid)[ FD ]
Line_14 $$ if (field.equals(this.rdnField)) -->Line_17 $$ ps.setString(i + 1, entry.getEntry().getAttribute(db2ldap.get(field)).getStringValue())[ CD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement(this.insertSQL)-->Line_17 $$ ps.setString(i + 1, entry.getEntry().getAttribute(db2ldap.get(field)).getStringValue())[ FD ]
Line_2 $$ public void add(AddInterceptorChain chain, Entry entry, LDAPConstraints constraints) throws LDAPException -->Line_17 $$ ps.setString(i + 1, entry.getEntry().getAttribute(db2ldap.get(field)).getStringValue())[ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + this.dbInsertName)-->Line_17 $$ ps.setString(i + 1, entry.getEntry().getAttribute(db2ldap.get(field)).getStringValue())[ FD ]
Line_13 $$ String field = this.fields.get(i)-->Line_17 $$ ps.setString(i + 1, entry.getEntry().getAttribute(db2ldap.get(field)).getStringValue())[ FD ]
Line_11 $$ PreparedStatement ps = con.prepareStatement(this.insertSQL)-->Line_20 $$ ps.executeUpdate()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_21 $$ con.commit()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_24 $$ con.rollback()[ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_12 $$ for (int i = 0; i < this.fields.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < this.fields.size(); i++) -->Line_13 $$ String field = this.fields.get(i)[ FD ]
Line_13 $$ String field = this.fields.get(i)-->Line_14 $$ if (field.equals(this.rdnField)) [ FD ]
Line_13 $$ String field = this.fields.get(i)-->Line_14 $$ if (field.equals(this.rdnField)) [ FD ]
Line_13 $$ String field = this.fields.get(i)-->Line_17 $$ ps.setString(i + 1, entry.getEntry().getAttribute(db2ldap.get(field)).getStringValue())[ FD ]
