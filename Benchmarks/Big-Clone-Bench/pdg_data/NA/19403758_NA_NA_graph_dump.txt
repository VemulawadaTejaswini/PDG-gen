Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception [ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_3 $$ log.info("createEditionForExport ")[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_4 $$ InputStream edition = null[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_5 $$ if (viewComponentIdWithUnit <= 0) [ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_5 $$ if (viewComponentIdWithUnit <= 0) [ FD ]
Line_5 $$ if (viewComponentIdWithUnit <= 0) -->Line_6 $$ edition = getContentServiceSpring().exportEditionFull()[ CD ]
Line_4 $$ InputStream edition = null-->Line_6 $$ edition = getContentServiceSpring().exportEditionFull()[ FD ]
Line_6 $$ edition = getContentServiceSpring().exportEditionFull()-->Line_6 $$ edition = getContentServiceSpring().exportEditionFull()[ FD ]
Line_6 $$ edition = getContentServiceSpring().exportEditionFull()-->Line_6 $$ edition = getContentServiceSpring().exportEditionFull()[ CD ]
Line_5 $$ if (viewComponentIdWithUnit <= 0) -->Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))[ CD ]
Line_4 $$ InputStream edition = null-->Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))[ FD ]
Line_6 $$ edition = getContentServiceSpring().exportEditionFull()-->Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))[ FD ]
Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))-->Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))[ FD ]
Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))-->Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))[ FD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_10 $$ log.info("got answer... ")[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_11 $$ if (log.isDebugEnabled())[ CD ]
Line_11 $$ if (log.isDebugEnabled())-->Line_11 $$ if (log.isDebugEnabled())[ CD ]
Line_11 $$ if (log.isDebugEnabled())-->Line_11 $$ log.debug("tmpFile " + outputFile.getName())[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_11 $$ log.debug("tmpFile " + outputFile.getName())[ FD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_12 $$ FileOutputStream fos = new FileOutputStream(outputFile)[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_13 $$ IOUtils.copyLarge(edition, fos)[ CD ]
Line_4 $$ InputStream edition = null-->Line_13 $$ IOUtils.copyLarge(edition, fos)[ FD ]
Line_6 $$ edition = getContentServiceSpring().exportEditionFull()-->Line_13 $$ IOUtils.copyLarge(edition, fos)[ FD ]
Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))-->Line_13 $$ IOUtils.copyLarge(edition, fos)[ FD ]
Line_12 $$ FileOutputStream fos = new FileOutputStream(outputFile)-->Line_13 $$ IOUtils.copyLarge(edition, fos)[ FD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_14 $$ IOUtils.closeQuietly(edition)[ CD ]
Line_4 $$ InputStream edition = null-->Line_14 $$ IOUtils.closeQuietly(edition)[ FD ]
Line_6 $$ edition = getContentServiceSpring().exportEditionFull()-->Line_14 $$ IOUtils.closeQuietly(edition)[ FD ]
Line_8 $$ edition = getContentServiceSpring().exportEditionUnit(Integer.valueOf(viewComponentIdWithUnit))-->Line_14 $$ IOUtils.closeQuietly(edition)[ FD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_15 $$ IOUtils.closeQuietly(fos)[ CD ]
Line_12 $$ FileOutputStream fos = new FileOutputStream(outputFile)-->Line_15 $$ IOUtils.closeQuietly(fos)[ FD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_16 $$ outputFile = null[ CD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_16 $$ outputFile = null[ FD ]
Line_16 $$ outputFile = null-->Line_16 $$ outputFile = null[ FD ]
Line_2 $$ protected void handleCreateEditionForExport(File outputFile, int viewComponentIdWithUnit) throws Exception -->Line_17 $$ System.gc()[ CD ]
