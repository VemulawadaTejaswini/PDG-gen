Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException [ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_3 $$ String urlString = "http://" + peerId + "/upload"[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_4 $$ HttpURLConnection uploadConnection = null[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_5 $$ DataOutputStream connOutput = null[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_6 $$ FileInputStream fileInput = null[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_7 $$ String lineEnd = "\r\n"[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_8 $$ String twoHyphens = "--"[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_9 $$ String boundary = "232404jkg4220957934FW"[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_10 $$ int bytesRead, bytesAvailable, bufferSize[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_11 $$ byte[] buffer[ CD ]
Line_2 $$ private void pushResource(String peerId, String communityId, String resourceFilePath, List<String> attachmentFilePaths) throws IOException -->Line_12 $$ int maxBufferSize = 1 * 1024 * 1024[ CD ]
Line_15 $$ if (!resourceFile.exists()) -->Line_15 $$ if (!resourceFile.exists()) [ CD ]
Line_15 $$ if (!resourceFile.exists()) -->Line_15 $$ if (!resourceFile.exists()) [ CD ]
Line_14 $$ File resourceFile = new File(resourceFilePath)-->Line_15 $$ if (!resourceFile.exists()) [ FD ]
Line_15 $$ if (!resourceFile.exists()) -->Line_16 $$ LOG.error("JTellaAdapter: Resource file could not be found for push: " + resourceFilePath)[ CD ]
Line_15 $$ if (!resourceFile.exists()) -->Line_17 $$ return[ CD ]
Line_22 $$ if (!attachFile.exists()) -->Line_22 $$ if (!attachFile.exists()) [ CD ]
Line_22 $$ if (!attachFile.exists()) -->Line_22 $$ if (!attachFile.exists()) [ CD ]
Line_21 $$ File attachFile = new File(attachmentPath)-->Line_22 $$ if (!attachFile.exists()) [ FD ]
Line_22 $$ if (!attachFile.exists()) -->Line_23 $$ LOG.error("JTellaAdapter: Attachment file could not be found for push: " + attachmentPath)[ CD ]
Line_22 $$ if (!attachFile.exists()) -->Line_24 $$ return[ CD ]
Line_19 $$ List<File> attachments = new ArrayList<File>()-->Line_26 $$ attachments.add(attachFile)[ FD ]
Line_21 $$ File attachFile = new File(attachmentPath)-->Line_26 $$ attachments.add(attachFile)[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_29 $$ URL url = new URL(urlString)-->Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_31 $$ uploadConnection.setDoInput(true)[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_31 $$ uploadConnection.setDoInput(true)[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_32 $$ uploadConnection.setDoOutput(true)[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_32 $$ uploadConnection.setDoOutput(true)[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_33 $$ uploadConnection.setUseCaches(false)[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_33 $$ uploadConnection.setUseCaches(false)[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_34 $$ uploadConnection.setRequestMethod("POST")[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_34 $$ uploadConnection.setRequestMethod("POST")[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_35 $$ uploadConnection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary)[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_35 $$ uploadConnection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary)[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_36 $$ uploadConnection.setRequestProperty("Connection", "Keep-Alive")[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_36 $$ uploadConnection.setRequestProperty("Connection", "Keep-Alive")[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_37 $$ uploadConnection.setRequestProperty("User-Agent", "UP2P")[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_37 $$ uploadConnection.setRequestProperty("User-Agent", "UP2P")[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_38 $$ uploadConnection.setRequestProperty("Accept", "[star]/[star]")[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_38 $$ uploadConnection.setRequestProperty("Accept", "[star]/[star]")[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_40 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_40 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_41 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:community\"" + lineEnd + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_41 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:community\"" + lineEnd + lineEnd)[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_42 $$ connOutput.writeBytes(communityId + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_42 $$ connOutput.writeBytes(communityId + lineEnd)[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_43 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_43 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_44 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:pushupload\"" + lineEnd + lineEnd + "true" + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_44 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:pushupload\"" + lineEnd + lineEnd + "true" + lineEnd)[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_45 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_45 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_49 $$ while (!fileWriteComplete) [ CD ]
Line_46 $$ boolean fileWriteComplete = false-->Line_49 $$ while (!fileWriteComplete) [ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_50 $$ if (!resourceFileWritten) [ CD ]
Line_47 $$ boolean resourceFileWritten = false-->Line_50 $$ if (!resourceFileWritten) [ FD ]
Line_50 $$ if (!resourceFileWritten) -->Line_50 $$ if (!resourceFileWritten) [ CD ]
Line_47 $$ boolean resourceFileWritten = false-->Line_50 $$ if (!resourceFileWritten) [ FD ]
Line_50 $$ if (!resourceFileWritten) -->Line_51 $$ nextFile = resourceFile[ CD ]
Line_51 $$ nextFile = resourceFile-->Line_51 $$ nextFile = resourceFile[ FD ]
Line_48 $$ File nextFile = null-->Line_51 $$ nextFile = resourceFile[ FD ]
Line_14 $$ File resourceFile = new File(resourceFilePath)-->Line_51 $$ nextFile = resourceFile[ FD ]
Line_50 $$ if (!resourceFileWritten) -->Line_53 $$ nextFile = attachments.remove(0)[ CD ]
Line_51 $$ nextFile = resourceFile-->Line_53 $$ nextFile = attachments.remove(0)[ FD ]
Line_53 $$ nextFile = attachments.remove(0)-->Line_53 $$ nextFile = attachments.remove(0)[ FD ]
Line_48 $$ File nextFile = null-->Line_53 $$ nextFile = attachments.remove(0)[ FD ]
Line_53 $$ nextFile = attachments.remove(0)-->Line_53 $$ nextFile = attachments.remove(0)[ CD ]
Line_19 $$ List<File> attachments = new ArrayList<File>()-->Line_53 $$ nextFile = attachments.remove(0)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_55 $$ LOG.debug("JTellaAdapter: PUSHing file: " + nextFile.getAbsolutePath())[ CD ]
Line_51 $$ nextFile = resourceFile-->Line_55 $$ LOG.debug("JTellaAdapter: PUSHing file: " + nextFile.getAbsolutePath())[ FD ]
Line_53 $$ nextFile = attachments.remove(0)-->Line_55 $$ LOG.debug("JTellaAdapter: PUSHing file: " + nextFile.getAbsolutePath())[ FD ]
Line_48 $$ File nextFile = null-->Line_55 $$ LOG.debug("JTellaAdapter: PUSHing file: " + nextFile.getAbsolutePath())[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_51 $$ nextFile = resourceFile-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_53 $$ nextFile = attachments.remove(0)-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_48 $$ File nextFile = null-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_57 $$ connOutput.writeBytes(lineEnd)[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_57 $$ connOutput.writeBytes(lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_57 $$ connOutput.writeBytes(lineEnd)[ FD ]
Line_7 $$ String lineEnd = "\r\n"-->Line_57 $$ connOutput.writeBytes(lineEnd)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_58 $$ fileInput = new FileInputStream(nextFile)[ CD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_58 $$ fileInput = new FileInputStream(nextFile)[ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_58 $$ fileInput = new FileInputStream(nextFile)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_59 $$ bytesAvailable = fileInput.available()[ CD ]
Line_59 $$ bytesAvailable = fileInput.available()-->Line_59 $$ bytesAvailable = fileInput.available()[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_59 $$ bytesAvailable = fileInput.available()[ FD ]
Line_59 $$ bytesAvailable = fileInput.available()-->Line_59 $$ bytesAvailable = fileInput.available()[ CD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_59 $$ bytesAvailable = fileInput.available()[ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_59 $$ bytesAvailable = fileInput.available()[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ CD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ CD ]
Line_59 $$ bytesAvailable = fileInput.available()-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_12 $$ int maxBufferSize = 1 * 1024 * 1024-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_61 $$ buffer = new byte[bufferSize][ CD ]
Line_61 $$ buffer = new byte[bufferSize]-->Line_61 $$ buffer = new byte[bufferSize][ FD ]
Line_11 $$ byte[] buffer-->Line_61 $$ buffer = new byte[bufferSize][ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ CD ]
Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ CD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_61 $$ buffer = new byte[bufferSize]-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_11 $$ byte[] buffer-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_63 $$ while (bytesRead > 0) [ CD ]
Line_49 $$ while (!fileWriteComplete) -->Line_49 $$ while (!fileWriteComplete) [ CD ]
Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_63 $$ while (bytesRead > 0) [ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_63 $$ while (bytesRead > 0) [ FD ]
Line_63 $$ while (bytesRead > 0) -->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_61 $$ buffer = new byte[bufferSize]-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_11 $$ byte[] buffer-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_63 $$ while (bytesRead > 0) -->Line_65 $$ bytesAvailable = fileInput.available()[ CD ]
Line_65 $$ bytesAvailable = fileInput.available()-->Line_65 $$ bytesAvailable = fileInput.available()[ FD ]
Line_59 $$ bytesAvailable = fileInput.available()-->Line_65 $$ bytesAvailable = fileInput.available()[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_65 $$ bytesAvailable = fileInput.available()[ FD ]
Line_65 $$ bytesAvailable = fileInput.available()-->Line_65 $$ bytesAvailable = fileInput.available()[ CD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_65 $$ bytesAvailable = fileInput.available()[ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_65 $$ bytesAvailable = fileInput.available()[ FD ]
Line_63 $$ while (bytesRead > 0) -->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ CD ]
Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ CD ]
Line_65 $$ bytesAvailable = fileInput.available()-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_59 $$ bytesAvailable = fileInput.available()-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_12 $$ int maxBufferSize = 1 * 1024 * 1024-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_63 $$ while (bytesRead > 0) -->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ CD ]
Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ CD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_61 $$ buffer = new byte[bufferSize]-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_11 $$ byte[] buffer-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_10 $$ int bytesRead, bytesAvailable, bufferSize-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_69 $$ connOutput.writeBytes(lineEnd)[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_69 $$ connOutput.writeBytes(lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_69 $$ connOutput.writeBytes(lineEnd)[ FD ]
Line_7 $$ String lineEnd = "\r\n"-->Line_69 $$ connOutput.writeBytes(lineEnd)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_70 $$ if (attachments.isEmpty()) [ CD ]
Line_19 $$ List<File> attachments = new ArrayList<File>()-->Line_70 $$ if (attachments.isEmpty()) [ FD ]
Line_70 $$ if (attachments.isEmpty()) -->Line_70 $$ if (attachments.isEmpty()) [ CD ]
Line_19 $$ List<File> attachments = new ArrayList<File>()-->Line_70 $$ if (attachments.isEmpty()) [ FD ]
Line_70 $$ if (attachments.isEmpty()) -->Line_71 $$ connOutput.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd)[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_71 $$ connOutput.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_71 $$ connOutput.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd)[ FD ]
Line_70 $$ if (attachments.isEmpty()) -->Line_73 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_73 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_73 $$ connOutput.writeBytes(twoHyphens + boundary + lineEnd)[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_75 $$ resourceFileWritten = true[ CD ]
Line_75 $$ resourceFileWritten = true-->Line_75 $$ resourceFileWritten = true[ FD ]
Line_47 $$ boolean resourceFileWritten = false-->Line_75 $$ resourceFileWritten = true[ FD ]
Line_49 $$ while (!fileWriteComplete) -->Line_76 $$ if (attachments.isEmpty()) [ CD ]
Line_19 $$ List<File> attachments = new ArrayList<File>()-->Line_76 $$ if (attachments.isEmpty()) [ FD ]
Line_76 $$ if (attachments.isEmpty()) -->Line_76 $$ if (attachments.isEmpty()) [ CD ]
Line_19 $$ List<File> attachments = new ArrayList<File>()-->Line_76 $$ if (attachments.isEmpty()) [ FD ]
Line_76 $$ if (attachments.isEmpty()) -->Line_77 $$ fileWriteComplete = true[ CD ]
Line_77 $$ fileWriteComplete = true-->Line_77 $$ fileWriteComplete = true[ FD ]
Line_46 $$ boolean fileWriteComplete = false-->Line_77 $$ fileWriteComplete = true[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_80 $$ BufferedReader inStream = new BufferedReader(new InputStreamReader(uploadConnection.getInputStream()))[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_80 $$ BufferedReader inStream = new BufferedReader(new InputStreamReader(uploadConnection.getInputStream()))[ FD ]
Line_80 $$ BufferedReader inStream = new BufferedReader(new InputStreamReader(uploadConnection.getInputStream()))-->Line_81 $$ while (inStream.readLine() != null) [ FD ]
Line_80 $$ BufferedReader inStream = new BufferedReader(new InputStreamReader(uploadConnection.getInputStream()))-->Line_82 $$ inStream.close()[ FD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_92 $$ if (fileInput != null) [ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_92 $$ if (fileInput != null) [ FD ]
Line_92 $$ if (fileInput != null) -->Line_93 $$ fileInput.close()[ CD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_93 $$ fileInput.close()[ FD ]
Line_6 $$ FileInputStream fileInput = null-->Line_93 $$ fileInput.close()[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_95 $$ if (connOutput != null) [ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_95 $$ if (connOutput != null) [ FD ]
Line_95 $$ if (connOutput != null) -->Line_96 $$ connOutput.flush()[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_96 $$ connOutput.flush()[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_96 $$ connOutput.flush()[ FD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_98 $$ if (connOutput != null) [ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_98 $$ if (connOutput != null) [ FD ]
Line_98 $$ if (connOutput != null) -->Line_99 $$ connOutput.close()[ CD ]
Line_5 $$ DataOutputStream connOutput = null-->Line_99 $$ connOutput.close()[ FD ]
Line_39 $$ connOutput = new DataOutputStream(uploadConnection.getOutputStream())-->Line_99 $$ connOutput.close()[ FD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_101 $$ if (uploadConnection != null) [ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_101 $$ if (uploadConnection != null) [ FD ]
Line_101 $$ if (uploadConnection != null) -->Line_102 $$ uploadConnection.disconnect()[ CD ]
Line_4 $$ HttpURLConnection uploadConnection = null-->Line_102 $$ uploadConnection.disconnect()[ FD ]
Line_30 $$ uploadConnection = (HttpURLConnection) url.openConnection()-->Line_102 $$ uploadConnection.disconnect()[ FD ]
Line_77 $$ fileWriteComplete = true-->Line_49 $$ while (!fileWriteComplete) [ FD ]
Line_75 $$ resourceFileWritten = true-->Line_50 $$ if (!resourceFileWritten) [ FD ]
Line_75 $$ resourceFileWritten = true-->Line_50 $$ if (!resourceFileWritten) [ FD ]
Line_51 $$ nextFile = resourceFile-->Line_55 $$ LOG.debug("JTellaAdapter: PUSHing file: " + nextFile.getAbsolutePath())[ FD ]
Line_53 $$ nextFile = attachments.remove(0)-->Line_55 $$ LOG.debug("JTellaAdapter: PUSHing file: " + nextFile.getAbsolutePath())[ FD ]
Line_51 $$ nextFile = resourceFile-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_53 $$ nextFile = attachments.remove(0)-->Line_56 $$ connOutput.writeBytes("Content-Disposition: form-data; name=\"up2p:filename\";" + " filename=\"" + nextFile.getName() + "\"" + lineEnd)[ FD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_59 $$ bytesAvailable = fileInput.available()[ FD ]
Line_59 $$ bytesAvailable = fileInput.available()-->Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_58 $$ fileInput = new FileInputStream(nextFile)-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_61 $$ buffer = new byte[bufferSize]-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_60 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_62 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_63 $$ while (bytesRead > 0) [ FD ]
Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)-->Line_63 $$ while (bytesRead > 0) [ FD ]
Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_64 $$ connOutput.write(buffer, 0, bufferSize)[ FD ]
Line_65 $$ bytesAvailable = fileInput.available()-->Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)[ FD ]
Line_66 $$ bufferSize = Math.min(bytesAvailable, maxBufferSize)-->Line_67 $$ bytesRead = fileInput.read(buffer, 0, bufferSize)[ FD ]
