Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) [ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_3 $$ Vector ret = new Vector()[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_4 $$ boolean swapped = true[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_5 $$ int j = 0[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_6 $$ Pair tmp[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_7 $$ while (swapped) [ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) [ CD ]
Line_7 $$ while (swapped) -->Line_8 $$ swapped = false[ CD ]
Line_8 $$ swapped = false-->Line_8 $$ swapped = false[ FD ]
Line_4 $$ boolean swapped = true-->Line_8 $$ swapped = false[ FD ]
Line_7 $$ while (swapped) -->Line_9 $$ j++[ CD ]
Line_5 $$ int j = 0-->Line_9 $$ j++[ FD ]
Line_7 $$ while (swapped) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ CD ]
Line_7 $$ while (swapped) -->Line_7 $$ while (swapped) [ CD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ CD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ CD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ FD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_11 $$ if (ps[i].c > ps[i + 1].c) [ CD ]
Line_11 $$ if (ps[i].c > ps[i + 1].c) -->Line_12 $$ tmp = ps[i][ CD ]
Line_12 $$ tmp = ps[i]-->Line_12 $$ tmp = ps[i][ FD ]
Line_6 $$ Pair tmp-->Line_12 $$ tmp = ps[i][ FD ]
Line_11 $$ if (ps[i].c > ps[i + 1].c) -->Line_13 $$ ps[i] = ps[i + 1][ CD ]
Line_11 $$ if (ps[i].c > ps[i + 1].c) -->Line_14 $$ ps[i + 1] = tmp[ CD ]
Line_12 $$ tmp = ps[i]-->Line_14 $$ ps[i + 1] = tmp[ FD ]
Line_6 $$ Pair tmp-->Line_14 $$ ps[i + 1] = tmp[ FD ]
Line_11 $$ if (ps[i].c > ps[i + 1].c) -->Line_15 $$ swapped = true[ CD ]
Line_15 $$ swapped = true-->Line_15 $$ swapped = true[ FD ]
Line_8 $$ swapped = false-->Line_15 $$ swapped = true[ FD ]
Line_4 $$ boolean swapped = true-->Line_15 $$ swapped = true[ FD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_19 $$ int m = Math.min(num, ps.length)[ CD ]
Line_19 $$ int m = Math.min(num, ps.length)-->Line_19 $$ int m = Math.min(num, ps.length)[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_19 $$ int m = Math.min(num, ps.length)[ FD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) [ CD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ FD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ CD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ CD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ FD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ FD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_21 $$ if (id == null)[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_21 $$ if (id == null)[ FD ]
Line_21 $$ if (id == null)-->Line_21 $$ ret.addElement(ps[i].n)[ CD ]
Line_3 $$ Vector ret = new Vector()-->Line_21 $$ ret.addElement(ps[i].n)[ FD ]
Line_21 $$ if (id == null)-->Line_21 $$ if (ps[i].n.startsWith(id) && !ps[i].n.equals(id))[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_21 $$ if (ps[i].n.startsWith(id) && !ps[i].n.equals(id))[ FD ]
Line_21 $$ if (ps[i].n.startsWith(id) && !ps[i].n.equals(id))-->Line_21 $$ if (ps[i].n.startsWith(id) && !ps[i].n.equals(id))[ CD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_21 $$ if (ps[i].n.startsWith(id) && !ps[i].n.equals(id))[ FD ]
Line_21 $$ if (ps[i].n.startsWith(id) && !ps[i].n.equals(id))-->Line_21 $$ ret.addElement(ps[i].n)[ CD ]
Line_3 $$ Vector ret = new Vector()-->Line_21 $$ ret.addElement(ps[i].n)[ FD ]
Line_2 $$ private Vector _sort(Pair[] ps, String id, int num) -->Line_23 $$ return ret[ CD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ FD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ FD ]
Line_10 $$ for (int i = 0; i < ps.length - j; i++) -->Line_10 $$ for (int i = 0; i < ps.length - j; i++) [ FD ]
Line_12 $$ tmp = ps[i]-->Line_14 $$ ps[i + 1] = tmp[ FD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ FD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ FD ]
Line_20 $$ for (int i = m - 1; i >= 0; i--) -->Line_20 $$ for (int i = m - 1; i >= 0; i--) [ FD ]
