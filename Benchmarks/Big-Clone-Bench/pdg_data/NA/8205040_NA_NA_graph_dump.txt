Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Template updateTemplate(Template template) [ CD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_3 $$ template.setContent(getTemplateContent(template.getScreen()))[ CD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_3 $$ template.setContent(getTemplateContent(template.getScreen()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_3 $$ template.setContent(getTemplateContent(template.getScreen()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_4 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()[ CD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_5 $$ params.add(new BasicNameValuePair("name", template.getName()))[ CD ]
Line_4 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_5 $$ params.add(new BasicNameValuePair("name", template.getName()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_5 $$ params.add(new BasicNameValuePair("name", template.getName()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_6 $$ params.add(new BasicNameValuePair("content", template.getContent()))[ CD ]
Line_4 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_6 $$ params.add(new BasicNameValuePair("content", template.getContent()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_6 $$ params.add(new BasicNameValuePair("content", template.getContent()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_7 $$ params.add(new BasicNameValuePair("shared", template.isShared() + ""))[ CD ]
Line_4 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_7 $$ params.add(new BasicNameValuePair("shared", template.isShared() + ""))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_7 $$ params.add(new BasicNameValuePair("shared", template.isShared() + ""))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_8 $$ params.add(new BasicNameValuePair("keywords", template.getKeywords()))[ CD ]
Line_4 $$ List<NameValuePair> params = new ArrayList<NameValuePair>()-->Line_8 $$ params.add(new BasicNameValuePair("keywords", template.getKeywords()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_8 $$ params.add(new BasicNameValuePair("keywords", template.getKeywords()))[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_10 $$ String saveRestUrl = configuration.getBeehiveRESTRootUrl() + "account/" + userService.getAccount().getOid() + "/template/" + template.getOid()[ FD ]
Line_11 $$ HttpPut httpPut = new HttpPut(saveRestUrl)-->Line_12 $$ addAuthentication(httpPut)[ FD ]
Line_11 $$ HttpPut httpPut = new HttpPut(saveRestUrl)-->Line_14 $$ httpPut.setEntity(formEntity)[ FD ]
Line_13 $$ UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(params, "UTF-8")-->Line_14 $$ httpPut.setEntity(formEntity)[ FD ]
Line_16 $$ HttpResponse response = httpClient.execute(httpPut)-->Line_16 $$ HttpResponse response = httpClient.execute(httpPut)[ CD ]
Line_15 $$ HttpClient httpClient = new DefaultHttpClient()-->Line_16 $$ HttpResponse response = httpClient.execute(httpPut)[ FD ]
Line_11 $$ HttpPut httpPut = new HttpPut(saveRestUrl)-->Line_16 $$ HttpResponse response = httpClient.execute(httpPut)[ FD ]
Line_16 $$ HttpResponse response = httpClient.execute(httpPut)-->Line_17 $$ if (HttpServletResponse.SC_OK == response.getStatusLine().getStatusCode()) [ FD ]
Line_17 $$ if (HttpServletResponse.SC_OK == response.getStatusLine().getStatusCode()) -->Line_18 $$ resourceService.saveTemplateResourcesToBeehive(template)[ CD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_18 $$ resourceService.saveTemplateResourcesToBeehive(template)[ FD ]
Line_17 $$ if (HttpServletResponse.SC_OK == response.getStatusLine().getStatusCode()) -->Line_19 $$ if (HttpServletResponse.SC_NOT_FOUND == response.getStatusLine().getStatusCode()) [ CD ]
Line_16 $$ HttpResponse response = httpClient.execute(httpPut)-->Line_19 $$ if (HttpServletResponse.SC_NOT_FOUND == response.getStatusLine().getStatusCode()) [ FD ]
Line_19 $$ if (HttpServletResponse.SC_NOT_FOUND == response.getStatusLine().getStatusCode()) -->Line_20 $$ return null[ CD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_22 $$ throw new BeehiveNotAvailableException("Failed to update template:" + template.getName() + ", Status code: " + response.getStatusLine().getStatusCode())[ FD ]
Line_16 $$ HttpResponse response = httpClient.execute(httpPut)-->Line_22 $$ throw new BeehiveNotAvailableException("Failed to update template:" + template.getName() + ", Status code: " + response.getStatusLine().getStatusCode())[ FD ]
Line_2 $$ public Template updateTemplate(Template template) -->Line_27 $$ return template[ CD ]
