Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void guardarCantidad() [ CD ]
Line_4 $$ String can = String.valueOf(cantidadArchivos)-->Line_4 $$ String can = String.valueOf(cantidadArchivos)[ CD ]
Line_8 $$ PrintWriter salida = new PrintWriter(bw)-->Line_9 $$ salida.print(can)[ FD ]
Line_4 $$ String can = String.valueOf(cantidadArchivos)-->Line_9 $$ salida.print(can)[ FD ]
Line_8 $$ PrintWriter salida = new PrintWriter(bw)-->Line_10 $$ salida.close()[ FD ]
Line_11 $$ BufferedInputStream origin = null-->Line_17 $$ origin = new BufferedInputStream(fi, buffer)[ FD ]
Line_17 $$ origin = new BufferedInputStream(fi, buffer)-->Line_17 $$ origin = new BufferedInputStream(fi, buffer)[ FD ]
Line_13 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_19 $$ out.putNextEntry(entry)[ FD ]
Line_18 $$ ZipEntry entry = new ZipEntry("cantidadArchivos.txt")-->Line_19 $$ out.putNextEntry(entry)[ FD ]
Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)-->Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)[ FD ]
Line_20 $$ int count-->Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)[ FD ]
Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)-->Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)[ CD ]
Line_11 $$ BufferedInputStream origin = null-->Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)[ FD ]
Line_17 $$ origin = new BufferedInputStream(fi, buffer)-->Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)[ FD ]
Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)-->Line_21 $$ out.write(data, 0, count)[ CD ]
Line_13 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_21 $$ out.write(data, 0, count)[ FD ]
Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)-->Line_21 $$ out.write(data, 0, count)[ FD ]
Line_20 $$ int count-->Line_21 $$ out.write(data, 0, count)[ FD ]
Line_13 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_22 $$ out.close()[ FD ]
Line_21 $$ while ((count = origin.read(data, 0, buffer)) != -1) out.write(data, 0, count)-->Line_21 $$ out.write(data, 0, count)[ FD ]
