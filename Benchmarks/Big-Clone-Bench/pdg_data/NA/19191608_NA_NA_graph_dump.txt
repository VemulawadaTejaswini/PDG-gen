Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) [ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_3 $$ String realm = ""[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_4 $$ String nonce = ""[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_5 $$ String opaque = ""[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_6 $$ String algorithm = ""[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_7 $$ String qop = ""[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_8 $$ StringBuffer digest = new StringBuffer()[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_9 $$ String cnonce[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_10 $$ String noncecount[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_11 $$ String pAuthStr = authstr[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_12 $$ int ptr = 0[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_13 $$ String response = ""[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_14 $$ int i = 0[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_15 $$ StringTokenizer st = new StringTokenizer(pAuthStr, ",")[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_16 $$ StringTokenizer stprob = null[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_17 $$ String str = null[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_18 $$ String key = null[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_19 $$ String value = null[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_20 $$ Properties probs = new Properties()[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_21 $$ while (st.hasMoreTokens()) [ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) [ CD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_21 $$ while (st.hasMoreTokens()) [ CD ]
Line_15 $$ StringTokenizer st = new StringTokenizer(pAuthStr, ",")-->Line_21 $$ while (st.hasMoreTokens()) [ FD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_22 $$ String nextToken = st.nextToken()[ CD ]
Line_22 $$ String nextToken = st.nextToken()-->Line_22 $$ String nextToken = st.nextToken()[ CD ]
Line_15 $$ StringTokenizer st = new StringTokenizer(pAuthStr, ",")-->Line_22 $$ String nextToken = st.nextToken()[ FD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_23 $$ stprob = new StringTokenizer(nextToken, "=")[ CD ]
Line_23 $$ stprob = new StringTokenizer(nextToken, "=")-->Line_23 $$ stprob = new StringTokenizer(nextToken, "=")[ FD ]
Line_16 $$ StringTokenizer stprob = null-->Line_23 $$ stprob = new StringTokenizer(nextToken, "=")[ FD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_24 $$ key = stprob.nextToken()[ CD ]
Line_24 $$ key = stprob.nextToken()-->Line_24 $$ key = stprob.nextToken()[ FD ]
Line_18 $$ String key = null-->Line_24 $$ key = stprob.nextToken()[ FD ]
Line_24 $$ key = stprob.nextToken()-->Line_24 $$ key = stprob.nextToken()[ CD ]
Line_23 $$ stprob = new StringTokenizer(nextToken, "=")-->Line_24 $$ key = stprob.nextToken()[ FD ]
Line_16 $$ StringTokenizer stprob = null-->Line_24 $$ key = stprob.nextToken()[ FD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_25 $$ value = stprob.nextToken()[ CD ]
Line_25 $$ value = stprob.nextToken()-->Line_25 $$ value = stprob.nextToken()[ FD ]
Line_19 $$ String value = null-->Line_25 $$ value = stprob.nextToken()[ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_25 $$ value = stprob.nextToken()[ CD ]
Line_23 $$ stprob = new StringTokenizer(nextToken, "=")-->Line_25 $$ value = stprob.nextToken()[ FD ]
Line_16 $$ StringTokenizer stprob = null-->Line_25 $$ value = stprob.nextToken()[ FD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ CD ]
Line_25 $$ value = stprob.nextToken()-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_19 $$ String value = null-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_19 $$ String value = null-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') -->Line_27 $$ value = value.substring(1, value.length() - 1)[ CD ]
Line_25 $$ value = stprob.nextToken()-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_19 $$ String value = null-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_27 $$ value = value.substring(1, value.length() - 1)[ CD ]
Line_25 $$ value = stprob.nextToken()-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_19 $$ String value = null-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_19 $$ String value = null-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_21 $$ while (st.hasMoreTokens()) -->Line_29 $$ probs.put(key, value)[ CD ]
Line_20 $$ Properties probs = new Properties()-->Line_29 $$ probs.put(key, value)[ FD ]
Line_24 $$ key = stprob.nextToken()-->Line_29 $$ probs.put(key, value)[ FD ]
Line_18 $$ String key = null-->Line_29 $$ probs.put(key, value)[ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_29 $$ probs.put(key, value)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_29 $$ probs.put(key, value)[ FD ]
Line_19 $$ String value = null-->Line_29 $$ probs.put(key, value)[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_31 $$ digest.append("Digest username=\"" + user + "\", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_31 $$ digest.append("Digest username=\"" + user + "\", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_32 $$ digest.append("realm=\"")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_32 $$ digest.append("realm=\"")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_33 $$ digest.append(probs.getProperty("realm"))[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_33 $$ digest.append(probs.getProperty("realm"))[ FD ]
Line_20 $$ Properties probs = new Properties()-->Line_33 $$ digest.append(probs.getProperty("realm"))[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_34 $$ digest.append("\", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_34 $$ digest.append("\", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_35 $$ digest.append("nonce=\"")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_35 $$ digest.append("nonce=\"")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_36 $$ digest.append(probs.getProperty("nonce"))[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_36 $$ digest.append(probs.getProperty("nonce"))[ FD ]
Line_20 $$ Properties probs = new Properties()-->Line_36 $$ digest.append(probs.getProperty("nonce"))[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_37 $$ digest.append("\", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_37 $$ digest.append("\", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_38 $$ digest.append("uri=\"" + requri + "\", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_38 $$ digest.append("uri=\"" + requri + "\", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_39 $$ cnonce = "abcdefghi"[ CD ]
Line_9 $$ String cnonce-->Line_39 $$ cnonce = "abcdefghi"[ FD ]
Line_39 $$ cnonce = "abcdefghi"-->Line_39 $$ cnonce = "abcdefghi"[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_40 $$ noncecount = "00000001"[ CD ]
Line_10 $$ String noncecount-->Line_40 $$ noncecount = "00000001"[ FD ]
Line_40 $$ noncecount = "00000001"-->Line_40 $$ noncecount = "00000001"[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_41 $$ String toDigest = user + ":" + realm + ":" + password[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_42 $$ byte[] digestbuffer = null[ CD ]
Line_44 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_44 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_44 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_45 $$ md.update(toDigest.getBytes())[ FD ]
Line_41 $$ String toDigest = user + ":" + realm + ":" + password-->Line_45 $$ md.update(toDigest.getBytes())[ FD ]
Line_42 $$ byte[] digestbuffer = null-->Line_46 $$ digestbuffer = md.digest()[ FD ]
Line_46 $$ digestbuffer = md.digest()-->Line_46 $$ digestbuffer = md.digest()[ FD ]
Line_46 $$ digestbuffer = md.digest()-->Line_46 $$ digestbuffer = md.digest()[ CD ]
Line_44 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_46 $$ digestbuffer = md.digest()[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_51 $$ digest.append("qop=\"auth\", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_51 $$ digest.append("qop=\"auth\", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_52 $$ digest.append("cnonce=\"" + cnonce + "\", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_52 $$ digest.append("cnonce=\"" + cnonce + "\", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_53 $$ digest.append("nc=" + noncecount + ", ")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_53 $$ digest.append("nc=" + noncecount + ", ")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_54 $$ digest.append("response=\"" + response + "\"")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_54 $$ digest.append("response=\"" + response + "\"")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_55 $$ if (probs.getProperty("opaque") != null) [ CD ]
Line_20 $$ Properties probs = new Properties()-->Line_55 $$ if (probs.getProperty("opaque") != null) [ FD ]
Line_55 $$ if (probs.getProperty("opaque") != null) -->Line_56 $$ digest.append(", opaque=\"" + probs.getProperty("opaque") + "\"")[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_56 $$ digest.append(", opaque=\"" + probs.getProperty("opaque") + "\"")[ FD ]
Line_20 $$ Properties probs = new Properties()-->Line_56 $$ digest.append(", opaque=\"" + probs.getProperty("opaque") + "\"")[ FD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_58 $$ System.out.println("SipProtocol: Digest calculated.")[ CD ]
Line_2 $$ public static String getDigestResponse(String user, String password, String method, String requri, String authstr) -->Line_59 $$ return digest.toString()[ CD ]
Line_59 $$ return digest.toString()-->Line_59 $$ return digest.toString()[ CD ]
Line_8 $$ StringBuffer digest = new StringBuffer()-->Line_59 $$ return digest.toString()[ FD ]
Line_23 $$ stprob = new StringTokenizer(nextToken, "=")-->Line_24 $$ key = stprob.nextToken()[ FD ]
Line_23 $$ stprob = new StringTokenizer(nextToken, "=")-->Line_25 $$ value = stprob.nextToken()[ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_26 $$ if (value.charAt(0) == '"' || value.charAt(0) == '\'') [ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_27 $$ value = value.substring(1, value.length() - 1)[ FD ]
Line_24 $$ key = stprob.nextToken()-->Line_29 $$ probs.put(key, value)[ FD ]
Line_25 $$ value = stprob.nextToken()-->Line_29 $$ probs.put(key, value)[ FD ]
Line_27 $$ value = value.substring(1, value.length() - 1)-->Line_29 $$ probs.put(key, value)[ FD ]
