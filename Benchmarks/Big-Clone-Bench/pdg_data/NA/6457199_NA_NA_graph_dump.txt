Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ String path = request.getPathInfo()[ CD ]
Line_3 $$ String path = request.getPathInfo()-->Line_3 $$ String path = request.getPathInfo()[ CD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ String path = request.getPathInfo()[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ if (!path.startsWith(alias)) [ CD ]
Line_4 $$ if (!path.startsWith(alias)) -->Line_4 $$ if (!path.startsWith(alias)) [ CD ]
Line_4 $$ if (!path.startsWith(alias)) -->Line_4 $$ if (!path.startsWith(alias)) [ CD ]
Line_3 $$ String path = request.getPathInfo()-->Line_4 $$ if (!path.startsWith(alias)) [ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_7 $$ String internal[ CD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_8 $$ if (alias.equals("/")) [ CD ]
Line_8 $$ if (alias.equals("/")) -->Line_8 $$ if (alias.equals("/")) [ CD ]
Line_8 $$ if (alias.equals("/")) -->Line_9 $$ internal = name + path[ CD ]
Line_7 $$ String internal-->Line_9 $$ internal = name + path[ FD ]
Line_9 $$ internal = name + path-->Line_9 $$ internal = name + path[ FD ]
Line_3 $$ String path = request.getPathInfo()-->Line_9 $$ internal = name + path[ FD ]
Line_8 $$ if (alias.equals("/")) -->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ CD ]
Line_7 $$ String internal-->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ FD ]
Line_9 $$ internal = name + path-->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ FD ]
Line_11 $$ internal = name + path.substring(alias.length(), path.length())-->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ FD ]
Line_11 $$ internal = name + path.substring(alias.length(), path.length())-->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ CD ]
Line_3 $$ String path = request.getPathInfo()-->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ FD ]
Line_3 $$ String path = request.getPathInfo()-->Line_11 $$ internal = name + path.substring(alias.length(), path.length())[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_13 $$ URL resource = httpContext.getResource(internal)[ CD ]
Line_13 $$ URL resource = httpContext.getResource(internal)-->Line_13 $$ URL resource = httpContext.getResource(internal)[ CD ]
Line_7 $$ String internal-->Line_13 $$ URL resource = httpContext.getResource(internal)[ FD ]
Line_9 $$ internal = name + path-->Line_13 $$ URL resource = httpContext.getResource(internal)[ FD ]
Line_11 $$ internal = name + path.substring(alias.length(), path.length())-->Line_13 $$ URL resource = httpContext.getResource(internal)[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_14 $$ if (resource == null) [ CD ]
Line_13 $$ URL resource = httpContext.getResource(internal)-->Line_14 $$ if (resource == null) [ FD ]
Line_14 $$ if (resource == null) -->Line_15 $$ return false[ CD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_17 $$ String mimeType = servletContext.getMimeType(internal)[ CD ]
Line_17 $$ String mimeType = servletContext.getMimeType(internal)-->Line_17 $$ String mimeType = servletContext.getMimeType(internal)[ CD ]
Line_7 $$ String internal-->Line_17 $$ String mimeType = servletContext.getMimeType(internal)[ FD ]
Line_9 $$ internal = name + path-->Line_17 $$ String mimeType = servletContext.getMimeType(internal)[ FD ]
Line_11 $$ internal = name + path.substring(alias.length(), path.length())-->Line_17 $$ String mimeType = servletContext.getMimeType(internal)[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_18 $$ if (mimeType != null) [ CD ]
Line_17 $$ String mimeType = servletContext.getMimeType(internal)-->Line_18 $$ if (mimeType != null) [ FD ]
Line_18 $$ if (mimeType != null) -->Line_19 $$ response.setContentType(mimeType)[ CD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_19 $$ response.setContentType(mimeType)[ FD ]
Line_17 $$ String mimeType = servletContext.getMimeType(internal)-->Line_19 $$ response.setContentType(mimeType)[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_21 $$ InputStream is = resource.openStream()[ CD ]
Line_21 $$ InputStream is = resource.openStream()-->Line_21 $$ InputStream is = resource.openStream()[ CD ]
Line_13 $$ URL resource = httpContext.getResource(internal)-->Line_21 $$ InputStream is = resource.openStream()[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_22 $$ OutputStream os = response.getOutputStream()[ CD ]
Line_22 $$ OutputStream os = response.getOutputStream()-->Line_22 $$ OutputStream os = response.getOutputStream()[ CD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_22 $$ OutputStream os = response.getOutputStream()[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_23 $$ IOUtils.copyAndClose(is, os)[ CD ]
Line_21 $$ InputStream is = resource.openStream()-->Line_23 $$ IOUtils.copyAndClose(is, os)[ FD ]
Line_22 $$ OutputStream os = response.getOutputStream()-->Line_23 $$ IOUtils.copyAndClose(is, os)[ FD ]
Line_2 $$ protected boolean doRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_24 $$ return true[ CD ]
