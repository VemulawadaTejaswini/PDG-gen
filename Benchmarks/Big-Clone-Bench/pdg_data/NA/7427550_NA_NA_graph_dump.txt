Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void process(int branch, int level) [ CD ]
Line_2 $$ public void process(int branch, int level) -->Line_3 $$ Pattern p1 = Pattern.compile("<DIV class=\"treeline\">([^<]*)")[ CD ]
Line_3 $$ Pattern p1 = Pattern.compile("<DIV class=\"treeline\">([^<]*)")-->Line_3 $$ Pattern p1 = Pattern.compile("<DIV class=\"treeline\">([^<]*)")[ CD ]
Line_2 $$ public void process(int branch, int level) -->Line_4 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")[ CD ]
Line_4 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")-->Line_4 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")[ CD ]
Line_2 $$ public void process(int branch, int level) -->Line_5 $$ Matcher m, m1[ CD ]
Line_2 $$ public void process(int branch, int level) -->Line_6 $$ URL url[ CD ]
Line_2 $$ public void process(int branch, int level) -->Line_7 $$ HttpURLConnection conn[ CD ]
Line_6 $$ URL url-->Line_9 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_9 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")-->Line_9 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_10 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_10 $$ conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ URL url-->Line_10 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_9 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")-->Line_10 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_11 $$ conn.setRequestMethod("GET")[ FD ]
Line_10 $$ conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.setRequestMethod("GET")[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_12 $$ conn.setDoOutput(true)[ FD ]
Line_10 $$ conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.setDoOutput(true)[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_13 $$ conn.setDoInput(true)[ FD ]
Line_10 $$ conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn.setDoInput(true)[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_14 $$ conn.setRequestProperty("Cookie", sessionId)[ FD ]
Line_10 $$ conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setRequestProperty("Cookie", sessionId)[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_15 $$ BufferedReader i = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_10 $$ conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ BufferedReader i = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_18 $$ while ((line = i.readLine()) != null) [ FD ]
Line_16 $$ String line-->Line_18 $$ while ((line = i.readLine()) != null) [ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_18 $$ while ((line = i.readLine()) != null) [ CD ]
Line_15 $$ BufferedReader i = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_18 $$ while ((line = i.readLine()) != null) [ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_19 $$ m1 = p1.matcher(line)[ CD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_19 $$ m1 = p1.matcher(line)[ FD ]
Line_5 $$ Matcher m, m1-->Line_19 $$ m1 = p1.matcher(line)[ FD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_19 $$ m1 = p1.matcher(line)[ CD ]
Line_3 $$ Pattern p1 = Pattern.compile("<DIV class=\"treeline\">([^<]*)")-->Line_19 $$ m1 = p1.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_19 $$ m1 = p1.matcher(line)[ FD ]
Line_16 $$ String line-->Line_19 $$ m1 = p1.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_20 $$ m = p.matcher(line)[ CD ]
Line_20 $$ m = p.matcher(line)-->Line_20 $$ m = p.matcher(line)[ FD ]
Line_5 $$ Matcher m, m1-->Line_20 $$ m = p.matcher(line)[ FD ]
Line_20 $$ m = p.matcher(line)-->Line_20 $$ m = p.matcher(line)[ CD ]
Line_4 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")-->Line_20 $$ m = p.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_20 $$ m = p.matcher(line)[ FD ]
Line_16 $$ String line-->Line_20 $$ m = p.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_21 $$ if (m1.find()) [ CD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_21 $$ if (m1.find()) [ FD ]
Line_5 $$ Matcher m, m1-->Line_21 $$ if (m1.find()) [ FD ]
Line_21 $$ if (m1.find()) -->Line_21 $$ if (m1.find()) [ CD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_21 $$ if (m1.find()) [ FD ]
Line_5 $$ Matcher m, m1-->Line_21 $$ if (m1.find()) [ FD ]
Line_21 $$ if (m1.find()) -->Line_22 $$ if (m1.group(1).equals(createIdent(level))) [ CD ]
Line_22 $$ if (m1.group(1).equals(createIdent(level))) -->Line_22 $$ if (m1.group(1).equals(createIdent(level))) [ CD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_22 $$ if (m1.group(1).equals(createIdent(level))) [ FD ]
Line_5 $$ Matcher m, m1-->Line_22 $$ if (m1.group(1).equals(createIdent(level))) [ FD ]
Line_2 $$ public void process(int branch, int level) -->Line_22 $$ if (m1.group(1).equals(createIdent(level))) [ FD ]
Line_22 $$ if (m1.group(1).equals(createIdent(level))) -->Line_23 $$ doAdd = true[ CD ]
Line_23 $$ doAdd = true-->Line_23 $$ doAdd = true[ FD ]
Line_17 $$ boolean doAdd = false-->Line_23 $$ doAdd = true[ FD ]
Line_22 $$ if (m1.group(1).equals(createIdent(level))) -->Line_25 $$ doAdd = false[ CD ]
Line_23 $$ doAdd = true-->Line_25 $$ doAdd = false[ FD ]
Line_25 $$ doAdd = false-->Line_25 $$ doAdd = false[ FD ]
Line_17 $$ boolean doAdd = false-->Line_25 $$ doAdd = false[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_28 $$ if (m.find()) [ CD ]
Line_20 $$ m = p.matcher(line)-->Line_28 $$ if (m.find()) [ FD ]
Line_5 $$ Matcher m, m1-->Line_28 $$ if (m.find()) [ FD ]
Line_28 $$ if (m.find()) -->Line_28 $$ if (m.find()) [ CD ]
Line_20 $$ m = p.matcher(line)-->Line_28 $$ if (m.find()) [ FD ]
Line_5 $$ Matcher m, m1-->Line_28 $$ if (m.find()) [ FD ]
Line_28 $$ if (m.find()) -->Line_29 $$ if (doAdd) [ CD ]
Line_29 $$ if (doAdd) -->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ CD ]
Line_20 $$ m = p.matcher(line)-->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_5 $$ Matcher m, m1-->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_20 $$ m = p.matcher(line)-->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_5 $$ Matcher m, m1-->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_29 $$ if (doAdd) -->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ CD ]
Line_20 $$ m = p.matcher(line)-->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_5 $$ Matcher m, m1-->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_20 $$ m = p.matcher(line)-->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_5 $$ Matcher m, m1-->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_6 $$ URL url-->Line_35 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_9 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")-->Line_35 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_35 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")-->Line_35 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?branchId=" + branch + "&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_19 $$ m1 = p1.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_20 $$ m = p.matcher(line)[ FD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_21 $$ if (m1.find()) [ FD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_21 $$ if (m1.find()) [ FD ]
Line_19 $$ m1 = p1.matcher(line)-->Line_22 $$ if (m1.group(1).equals(createIdent(level))) [ FD ]
Line_20 $$ m = p.matcher(line)-->Line_28 $$ if (m.find()) [ FD ]
Line_20 $$ m = p.matcher(line)-->Line_28 $$ if (m.find()) [ FD ]
Line_20 $$ m = p.matcher(line)-->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_20 $$ m = p.matcher(line)-->Line_30 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_20 $$ m = p.matcher(line)-->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_20 $$ m = p.matcher(line)-->Line_31 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
