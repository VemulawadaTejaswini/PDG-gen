Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized void run() [ CD ]
Line_2 $$ public synchronized void run() -->Line_3 $$ String s[ CD ]
Line_2 $$ public synchronized void run() -->Line_4 $$ URL url = null[ CD ]
Line_6 $$ String localVersionS = globals.getProperty("jmathlib.version").replaceAll("/", ".")-->Line_6 $$ String localVersionS = globals.getProperty("jmathlib.version").replaceAll("/", ".")[ CD ]
Line_4 $$ URL url = null-->Line_7 $$ url = new URL(updateSiteS + "?jmathlib_version=" + localVersionS + "&command=check")[ FD ]
Line_7 $$ url = new URL(updateSiteS + "?jmathlib_version=" + localVersionS + "&command=check")-->Line_7 $$ url = new URL(updateSiteS + "?jmathlib_version=" + localVersionS + "&command=check")[ FD ]
Line_2 $$ public synchronized void run() -->Line_11 $$ Properties props = new Properties()[ CD ]
Line_11 $$ Properties props = new Properties()-->Line_13 $$ props.load(url.openStream())[ FD ]
Line_4 $$ URL url = null-->Line_13 $$ props.load(url.openStream())[ FD ]
Line_7 $$ url = new URL(updateSiteS + "?jmathlib_version=" + localVersionS + "&command=check")-->Line_13 $$ props.load(url.openStream())[ FD ]
Line_2 $$ public synchronized void run() -->Line_17 $$ String localVersionS = globals.getProperty("jmathlib.version")[ CD ]
Line_2 $$ public synchronized void run() -->Line_18 $$ String updateVersionS = props.getProperty("update.toversion")[ CD ]
Line_18 $$ String updateVersionS = props.getProperty("update.toversion")-->Line_18 $$ String updateVersionS = props.getProperty("update.toversion")[ CD ]
Line_11 $$ Properties props = new Properties()-->Line_18 $$ String updateVersionS = props.getProperty("update.toversion")[ FD ]
Line_2 $$ public synchronized void run() -->Line_19 $$ String updateActionS = props.getProperty("update.action")[ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_19 $$ String updateActionS = props.getProperty("update.action")[ CD ]
Line_11 $$ Properties props = new Properties()-->Line_19 $$ String updateActionS = props.getProperty("update.action")[ FD ]
Line_2 $$ public synchronized void run() -->Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) [ FD ]
Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) -->Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) [ FD ]
Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) -->Line_21 $$ if (!silentB) [ CD ]
Line_21 $$ if (!silentB) -->Line_22 $$ globals.getInterpreter().displayText("A full download ist required")[ CD ]
Line_21 $$ if (!silentB) -->Line_23 $$ globals.getInterpreter().displayText("A new version " + updateVersionS + " is available")[ CD ]
Line_21 $$ if (!silentB) -->Line_24 $$ globals.getInterpreter().displayText("\n Just type    update    at the prompt.")[ CD ]
Line_20 $$ if (updateActionS.equals("INCREMENTAL_DOWNLOAD")) -->Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) [ FD ]
Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) -->Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) [ FD ]
Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) -->Line_27 $$ if (!silentB) [ CD ]
Line_27 $$ if (!silentB) -->Line_28 $$ globals.getInterpreter().displayText("A full download ist required")[ CD ]
Line_27 $$ if (!silentB) -->Line_29 $$ globals.getInterpreter().displayText("A new version " + updateVersionS + " is available")[ CD ]
Line_27 $$ if (!silentB) -->Line_30 $$ globals.getInterpreter().displayText("Go to www.jmathlib.de and download the latest version")[ CD ]
Line_26 $$ if (updateActionS.equals("FULL_DOWNLOAD_REQUIRED")) -->Line_32 $$ if (updateActionS.equals("NO_ACTION")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_32 $$ if (updateActionS.equals("NO_ACTION")) [ FD ]
Line_32 $$ if (updateActionS.equals("NO_ACTION")) -->Line_32 $$ if (updateActionS.equals("NO_ACTION")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_32 $$ if (updateActionS.equals("NO_ACTION")) [ FD ]
Line_32 $$ if (updateActionS.equals("NO_ACTION")) -->Line_33 $$ if (!silentB)[ CD ]
Line_33 $$ if (!silentB)-->Line_33 $$ globals.getInterpreter().displayText("The local version of JMathLib is up to date")[ CD ]
Line_32 $$ if (updateActionS.equals("NO_ACTION")) -->Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) [ FD ]
Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) -->Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) [ CD ]
Line_19 $$ String updateActionS = props.getProperty("update.action")-->Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) [ FD ]
Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) -->Line_35 $$ if (!silentB)[ CD ]
Line_35 $$ if (!silentB)-->Line_35 $$ globals.getInterpreter().displayText("The local version of JMathLib ist not recognized by the server")[ CD ]
Line_34 $$ if (updateActionS.equals("VERSION_UNKNOWN")) -->Line_37 $$ globals.getInterpreter().displayText("check for updates encountered an error.")[ CD ]
Line_2 $$ public synchronized void run() -->Line_39 $$ debugLine("checkForUpdates: web:" + updateVersionS + " local:" + localVersionS)[ CD ]
Line_2 $$ public synchronized void run() -->Line_40 $$ Calendar cal = Calendar.getInstance()[ CD ]
Line_40 $$ Calendar cal = Calendar.getInstance()-->Line_40 $$ Calendar cal = Calendar.getInstance()[ CD ]
Line_2 $$ public synchronized void run() -->Line_41 $$ String checkedDate = Integer.toString(cal.get(Calendar.YEAR)) + "/" + Integer.toString(cal.get(Calendar.MONTH) + 1) + "/" + Integer.toString(cal.get(Calendar.DAY_OF_MONTH))[ CD ]
Line_40 $$ Calendar cal = Calendar.getInstance()-->Line_41 $$ String checkedDate = Integer.toString(cal.get(Calendar.YEAR)) + "/" + Integer.toString(cal.get(Calendar.MONTH) + 1) + "/" + Integer.toString(cal.get(Calendar.DAY_OF_MONTH))[ FD ]
Line_40 $$ Calendar cal = Calendar.getInstance()-->Line_41 $$ String checkedDate = Integer.toString(cal.get(Calendar.YEAR)) + "/" + Integer.toString(cal.get(Calendar.MONTH) + 1) + "/" + Integer.toString(cal.get(Calendar.DAY_OF_MONTH))[ FD ]
Line_40 $$ Calendar cal = Calendar.getInstance()-->Line_41 $$ String checkedDate = Integer.toString(cal.get(Calendar.YEAR)) + "/" + Integer.toString(cal.get(Calendar.MONTH) + 1) + "/" + Integer.toString(cal.get(Calendar.DAY_OF_MONTH))[ FD ]
Line_2 $$ public synchronized void run() -->Line_42 $$ globals.setProperty("update.date.last", checkedDate)[ CD ]
Line_41 $$ String checkedDate = Integer.toString(cal.get(Calendar.YEAR)) + "/" + Integer.toString(cal.get(Calendar.MONTH) + 1) + "/" + Integer.toString(cal.get(Calendar.DAY_OF_MONTH))-->Line_42 $$ globals.setProperty("update.date.last", checkedDate)[ FD ]
Line_2 $$ public synchronized void run() -->Line_43 $$ Enumeration propnames = props.propertyNames()[ CD ]
Line_43 $$ Enumeration propnames = props.propertyNames()-->Line_43 $$ Enumeration propnames = props.propertyNames()[ CD ]
Line_11 $$ Properties props = new Properties()-->Line_43 $$ Enumeration propnames = props.propertyNames()[ FD ]
Line_2 $$ public synchronized void run() -->Line_44 $$ while (propnames.hasMoreElements()) [ CD ]
Line_2 $$ public synchronized void run() -->Line_2 $$ public synchronized void run() [ CD ]
Line_44 $$ while (propnames.hasMoreElements()) -->Line_44 $$ while (propnames.hasMoreElements()) [ CD ]
Line_43 $$ Enumeration propnames = props.propertyNames()-->Line_44 $$ while (propnames.hasMoreElements()) [ FD ]
Line_44 $$ while (propnames.hasMoreElements()) -->Line_45 $$ String propName = (String) propnames.nextElement()[ CD ]
Line_43 $$ Enumeration propnames = props.propertyNames()-->Line_45 $$ String propName = (String) propnames.nextElement()[ FD ]
Line_44 $$ while (propnames.hasMoreElements()) -->Line_46 $$ String propValue = (String) props.getProperty(propName)[ CD ]
Line_11 $$ Properties props = new Properties()-->Line_46 $$ String propValue = (String) props.getProperty(propName)[ FD ]
Line_45 $$ String propName = (String) propnames.nextElement()-->Line_46 $$ String propValue = (String) props.getProperty(propName)[ FD ]
Line_44 $$ while (propnames.hasMoreElements()) -->Line_47 $$ ErrorLogger.debugLine("Property: " + propName + " = " + propValue)[ CD ]
Line_44 $$ while (propnames.hasMoreElements()) -->Line_48 $$ globals.setProperty(propName, propValue)[ CD ]
Line_45 $$ String propName = (String) propnames.nextElement()-->Line_48 $$ globals.setProperty(propName, propValue)[ FD ]
Line_46 $$ String propValue = (String) props.getProperty(propName)-->Line_48 $$ globals.setProperty(propName, propValue)[ FD ]
Line_45 $$ String propName = (String) propnames.nextElement()-->Line_46 $$ String propValue = (String) props.getProperty(propName)[ FD ]
Line_45 $$ String propName = (String) propnames.nextElement()-->Line_48 $$ globals.setProperty(propName, propValue)[ FD ]
Line_46 $$ String propValue = (String) props.getProperty(propName)-->Line_48 $$ globals.setProperty(propName, propValue)[ FD ]
