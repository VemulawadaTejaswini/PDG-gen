Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void moveRuleUp(String language, String tag, int row) throws FidoDatabaseException [ CD ]
Line_4 $$ Connection conn = null-->Line_7 $$ conn = fido.util.FidoDataSource.getConnection()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_7 $$ conn = fido.util.FidoDataSource.getConnection()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_7 $$ conn = fido.util.FidoDataSource.getConnection()[ CD ]
Line_4 $$ Connection conn = null-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_5 $$ Statement stmt = null-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_9 $$ stmt = conn.createStatement()[ CD ]
Line_4 $$ Connection conn = null-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_10 $$ int max = findMaxRank(stmt, language, tag)-->Line_10 $$ int max = findMaxRank(stmt, language, tag)[ CD ]
Line_5 $$ Statement stmt = null-->Line_10 $$ int max = findMaxRank(stmt, language, tag)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_10 $$ int max = findMaxRank(stmt, language, tag)[ FD ]
Line_2 $$ public void moveRuleUp(String language, String tag, int row) throws FidoDatabaseException -->Line_10 $$ int max = findMaxRank(stmt, language, tag)[ FD ]
Line_2 $$ public void moveRuleUp(String language, String tag, int row) throws FidoDatabaseException -->Line_10 $$ int max = findMaxRank(stmt, language, tag)[ FD ]
Line_5 $$ Statement stmt = null-->Line_12 $$ stmt.executeUpdate("update LanguageMorphologies set Rank = -1 " + "where Rank = " + row + " and MorphologyTag = '" + tag + "' and " + "      LanguageName = '" + language + "'")[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_12 $$ stmt.executeUpdate("update LanguageMorphologies set Rank = -1 " + "where Rank = " + row + " and MorphologyTag = '" + tag + "' and " + "      LanguageName = '" + language + "'")[ FD ]
Line_5 $$ Statement stmt = null-->Line_13 $$ stmt.executeUpdate("update LanguageMorphologies set Rank = " + row + "where Rank = " + (row - 1) + " and MorphologyTag = '" + tag + "' and " + "      LanguageName = '" + language + "'")[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_13 $$ stmt.executeUpdate("update LanguageMorphologies set Rank = " + row + "where Rank = " + (row - 1) + " and MorphologyTag = '" + tag + "' and " + "      LanguageName = '" + language + "'")[ FD ]
Line_5 $$ Statement stmt = null-->Line_14 $$ stmt.executeUpdate("update LanguageMorphologies set Rank = " + (row - 1) + "where Rank = -1 and MorphologyTag = '" + tag + "' and " + "      LanguageName = '" + language + "'")[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_14 $$ stmt.executeUpdate("update LanguageMorphologies set Rank = " + (row - 1) + "where Rank = -1 and MorphologyTag = '" + tag + "' and " + "      LanguageName = '" + language + "'")[ FD ]
Line_4 $$ Connection conn = null-->Line_15 $$ conn.commit()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_15 $$ conn.commit()[ FD ]
Line_4 $$ Connection conn = null-->Line_17 $$ if (conn != null)[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_17 $$ if (conn != null)[ FD ]
Line_17 $$ if (conn != null)-->Line_17 $$ conn.rollback()[ CD ]
Line_4 $$ Connection conn = null-->Line_17 $$ conn.rollback()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_17 $$ conn.rollback()[ FD ]
Line_5 $$ Statement stmt = null-->Line_20 $$ if (stmt != null)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_20 $$ if (stmt != null)[ FD ]
Line_20 $$ if (stmt != null)-->Line_20 $$ stmt.close()[ CD ]
Line_5 $$ Statement stmt = null-->Line_20 $$ stmt.close()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_20 $$ stmt.close()[ FD ]
Line_4 $$ Connection conn = null-->Line_21 $$ if (conn != null)[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_21 $$ if (conn != null)[ FD ]
Line_21 $$ if (conn != null)-->Line_21 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = null-->Line_21 $$ conn.close()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_21 $$ conn.close()[ FD ]
