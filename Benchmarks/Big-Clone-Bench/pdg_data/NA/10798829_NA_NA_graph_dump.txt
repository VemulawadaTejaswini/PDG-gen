Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException [ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_3 $$ String filename = p.getFileName()[ CD ]
Line_3 $$ String filename = p.getFileName()-->Line_3 $$ String filename = p.getFileName()[ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_3 $$ String filename = p.getFileName()[ FD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_4 $$ if (!p.isMimeType("multipart/*")) [ CD ]
Line_4 $$ if (!p.isMimeType("multipart/*")) -->Line_4 $$ if (!p.isMimeType("multipart/*")) [ CD ]
Line_4 $$ if (!p.isMimeType("multipart/*")) -->Line_4 $$ if (!p.isMimeType("multipart/*")) [ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_4 $$ if (!p.isMimeType("multipart/*")) [ FD ]
Line_4 $$ if (!p.isMimeType("multipart/*")) -->Line_5 $$ String disp = p.getDisposition()[ CD ]
Line_5 $$ String disp = p.getDisposition()-->Line_5 $$ String disp = p.getDisposition()[ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_5 $$ String disp = p.getDisposition()[ FD ]
Line_4 $$ if (!p.isMimeType("multipart/*")) -->Line_6 $$ if (disp == null || disp.equalsIgnoreCase(Part.ATTACHMENT)) [ CD ]
Line_5 $$ String disp = p.getDisposition()-->Line_6 $$ if (disp == null || disp.equalsIgnoreCase(Part.ATTACHMENT)) [ FD ]
Line_6 $$ if (disp == null || disp.equalsIgnoreCase(Part.ATTACHMENT)) -->Line_7 $$ if (checkCriteria(p)) [ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_7 $$ if (checkCriteria(p)) [ FD ]
Line_7 $$ if (checkCriteria(p)) -->Line_7 $$ if (checkCriteria(p)) [ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_7 $$ if (checkCriteria(p)) [ FD ]
Line_7 $$ if (checkCriteria(p)) -->Line_8 $$ if (filename == null)[ CD ]
Line_3 $$ String filename = p.getFileName()-->Line_8 $$ if (filename == null)[ FD ]
Line_8 $$ if (filename == null)-->Line_8 $$ filename = "Attachment" + attnum++[ CD ]
Line_3 $$ String filename = p.getFileName()-->Line_8 $$ filename = "Attachment" + attnum++[ FD ]
Line_8 $$ filename = "Attachment" + attnum++-->Line_8 $$ filename = "Attachment" + attnum++[ FD ]
Line_7 $$ if (checkCriteria(p)) -->Line_9 $$ if (result == null) [ CD ]
Line_11 $$ File f = File.createTempFile("amorph_pop3-", ".tmp")-->Line_11 $$ File f = File.createTempFile("amorph_pop3-", ".tmp")[ CD ]
Line_11 $$ File f = File.createTempFile("amorph_pop3-", ".tmp")-->Line_12 $$ f.deleteOnExit()[ FD ]
Line_14 $$ InputStream is = p.getInputStream()-->Line_14 $$ InputStream is = p.getInputStream()[ CD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_14 $$ InputStream is = p.getInputStream()[ FD ]
Line_16 $$ while ((c = is.read()) != -1) os.write(c)-->Line_16 $$ while ((c = is.read()) != -1) os.write(c)[ FD ]
Line_15 $$ int c-->Line_16 $$ while ((c = is.read()) != -1) os.write(c)[ FD ]
Line_16 $$ while ((c = is.read()) != -1) os.write(c)-->Line_16 $$ while ((c = is.read()) != -1) os.write(c)[ CD ]
Line_14 $$ InputStream is = p.getInputStream()-->Line_16 $$ while ((c = is.read()) != -1) os.write(c)[ FD ]
Line_16 $$ while ((c = is.read()) != -1) os.write(c)-->Line_16 $$ os.write(c)[ CD ]
Line_13 $$ OutputStream os = new BufferedOutputStream(new FileOutputStream(f))-->Line_16 $$ os.write(c)[ FD ]
Line_16 $$ while ((c = is.read()) != -1) os.write(c)-->Line_16 $$ os.write(c)[ FD ]
Line_15 $$ int c-->Line_16 $$ os.write(c)[ FD ]
Line_13 $$ OutputStream os = new BufferedOutputStream(new FileOutputStream(f))-->Line_17 $$ os.close()[ FD ]
Line_11 $$ File f = File.createTempFile("amorph_pop3-", ".tmp")-->Line_19 $$ System.out.println("saved attachment to file: " + f.getAbsolutePath())[ FD ]
Line_2 $$ private boolean handlePart(Part p) throws MessagingException, GetterException -->Line_28 $$ return false[ CD ]
Line_16 $$ while ((c = is.read()) != -1) os.write(c)-->Line_16 $$ os.write(c)[ FD ]
