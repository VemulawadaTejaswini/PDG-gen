Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Document saveFile(Document document, File file) throws Exception [ CD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_3 $$ SimpleDateFormat sdf = new SimpleDateFormat(Constants.DATEFORMAT_YYYYMMDD)[ CD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_4 $$ List<Preference> preferences = prefService.findAll()[ CD ]
Line_4 $$ List<Preference> preferences = prefService.findAll()-->Line_4 $$ List<Preference> preferences = prefService.findAll()[ CD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_5 $$ if (preferences != null && !preferences.isEmpty()) [ CD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_5 $$ if (preferences != null && !preferences.isEmpty()) [ CD ]
Line_4 $$ List<Preference> preferences = prefService.findAll()-->Line_5 $$ if (preferences != null && !preferences.isEmpty()) [ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_6 $$ Preference preference = preferences.get(0)[ CD ]
Line_6 $$ Preference preference = preferences.get(0)-->Line_6 $$ Preference preference = preferences.get(0)[ CD ]
Line_4 $$ List<Preference> preferences = prefService.findAll()-->Line_6 $$ Preference preference = preferences.get(0)[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_7 $$ String repo = preference.getRepository()[ CD ]
Line_7 $$ String repo = preference.getRepository()-->Line_7 $$ String repo = preference.getRepository()[ CD ]
Line_6 $$ Preference preference = preferences.get(0)-->Line_7 $$ String repo = preference.getRepository()[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_8 $$ StringBuffer sbRepo = new StringBuffer(repo)[ CD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_9 $$ sbRepo.append(File.separator)[ CD ]
Line_8 $$ StringBuffer sbRepo = new StringBuffer(repo)-->Line_9 $$ sbRepo.append(File.separator)[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_10 $$ StringBuffer sbFolder = new StringBuffer(document.getLocation())[ CD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_10 $$ StringBuffer sbFolder = new StringBuffer(document.getLocation())[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())[ CD ]
Line_8 $$ StringBuffer sbRepo = new StringBuffer(repo)-->Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())[ FD ]
Line_10 $$ StringBuffer sbFolder = new StringBuffer(document.getLocation())-->Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_12 $$ log.info("Check in file ID [" + document.getId() + "] to " + folder.getAbsolutePath())[ CD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_12 $$ log.info("Check in file ID [" + document.getId() + "] to " + folder.getAbsolutePath())[ FD ]
Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())-->Line_12 $$ log.info("Check in file ID [" + document.getId() + "] to " + folder.getAbsolutePath())[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_13 $$ if (!folder.exists()) [ CD ]
Line_13 $$ if (!folder.exists()) -->Line_13 $$ if (!folder.exists()) [ CD ]
Line_13 $$ if (!folder.exists()) -->Line_13 $$ if (!folder.exists()) [ CD ]
Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())-->Line_13 $$ if (!folder.exists()) [ FD ]
Line_13 $$ if (!folder.exists()) -->Line_14 $$ folder.mkdirs()[ CD ]
Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())-->Line_14 $$ folder.mkdirs()[ FD ]
Line_5 $$ if (preferences != null && !preferences.isEmpty()) -->Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null[ CD ]
Line_18 $$ StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(".").append(document.getExt())-->Line_18 $$ StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(".").append(document.getExt())[ CD ]
Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())-->Line_18 $$ StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(".").append(document.getExt())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_18 $$ StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(".").append(document.getExt())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_18 $$ StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(".").append(document.getExt())[ FD ]
Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())-->Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())[ CD ]
Line_11 $$ File folder = new File(sbRepo.append(sbFolder).toString())-->Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_20 $$ fcSource = new FileInputStream(file).getChannel()[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_20 $$ fcSource = new FileInputStream(file).getChannel()[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_20 $$ fcSource = new FileInputStream(file).getChannel()[ CD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()[ FD ]
Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()-->Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()[ FD ]
Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()-->Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()[ CD ]
Line_18 $$ StringBuffer sbFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append(".").append(document.getExt())-->Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()[ FD ]
Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()-->Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()[ FD ]
Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()-->Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()[ CD ]
Line_19 $$ StringBuffer sbVersionFile = new StringBuffer(folder.getAbsolutePath()).append(File.separator).append(document.getId()).append("_").append(document.getVersion().toString()).append(".").append(document.getExt())-->Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_23 $$ fcDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()-->Line_23 $$ fcDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_23 $$ fcDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_23 $$ fcDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_23 $$ fcDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_23 $$ fcDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_24 $$ fcSource = new FileInputStream(file).getChannel()[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_24 $$ fcSource = new FileInputStream(file).getChannel()[ FD ]
Line_24 $$ fcSource = new FileInputStream(file).getChannel()-->Line_24 $$ fcSource = new FileInputStream(file).getChannel()[ FD ]
Line_24 $$ fcSource = new FileInputStream(file).getChannel()-->Line_24 $$ fcSource = new FileInputStream(file).getChannel()[ CD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_24 $$ fcSource = new FileInputStream(file).getChannel()-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_24 $$ fcSource = new FileInputStream(file).getChannel()-->Line_25 $$ fcVersionDest.transferFrom(fcSource, 0, fcSource.size())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_26 $$ document.setLocation(sbFolder.toString())[ FD ]
Line_10 $$ StringBuffer sbFolder = new StringBuffer(document.getLocation())-->Line_26 $$ document.setLocation(sbFolder.toString())[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_27 $$ documentService.save(document)[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_29 $$ log.error("saveFile file not found: " + document.getName(), notFoundEx)[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_31 $$ log.error("saveFile IOException: " + document.getName(), ioEx)[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_34 $$ if (fcSource != null) [ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_34 $$ if (fcSource != null) [ FD ]
Line_24 $$ fcSource = new FileInputStream(file).getChannel()-->Line_34 $$ if (fcSource != null) [ FD ]
Line_34 $$ if (fcSource != null) -->Line_35 $$ fcSource.close()[ CD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_35 $$ fcSource.close()[ FD ]
Line_20 $$ fcSource = new FileInputStream(file).getChannel()-->Line_35 $$ fcSource.close()[ FD ]
Line_24 $$ fcSource = new FileInputStream(file).getChannel()-->Line_35 $$ fcSource.close()[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_37 $$ if (fcDest != null) [ FD ]
Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()-->Line_37 $$ if (fcDest != null) [ FD ]
Line_37 $$ if (fcDest != null) -->Line_38 $$ fcDest.close()[ CD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_38 $$ fcDest.close()[ FD ]
Line_21 $$ fcDest = new FileOutputStream(sbFile.toString()).getChannel()-->Line_38 $$ fcDest.close()[ FD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_40 $$ if (fcVersionDest != null) [ FD ]
Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()-->Line_40 $$ if (fcVersionDest != null) [ FD ]
Line_40 $$ if (fcVersionDest != null) -->Line_41 $$ fcVersionDest.close()[ CD ]
Line_16 $$ FileChannel fcSource = null, fcDest = null, fcVersionDest = null-->Line_41 $$ fcVersionDest.close()[ FD ]
Line_22 $$ fcVersionDest = new FileOutputStream(sbVersionFile.toString()).getChannel()-->Line_41 $$ fcVersionDest.close()[ FD ]
Line_2 $$ private Document saveFile(Document document, File file) throws Exception -->Line_48 $$ return document[ CD ]
