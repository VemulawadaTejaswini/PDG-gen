Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void upload(String login, String password, String file) throws ApiException [ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_3 $$ System.out.println("Trying to login to 4shared........")[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_4 $$ File f = new File(file)[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) [ CD ]
Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) -->Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) [ CD ]
Line_4 $$ File f = new File(file)-->Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) [ FD ]
Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) -->Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) [ CD ]
Line_4 $$ File f = new File(file)-->Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) [ FD ]
Line_4 $$ File f = new File(file)-->Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) [ FD ]
Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) -->Line_6 $$ System.out.println("File does not exist, unreadable or not a file")[ CD ]
Line_5 $$ if (!f.exists() || !f.canRead() || f.isDirectory()) -->Line_7 $$ return[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_10 $$ String loginRes = da.login(login, password)[ CD ]
Line_10 $$ String loginRes = da.login(login, password)-->Line_10 $$ String loginRes = da.login(login, password)[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_10 $$ String loginRes = da.login(login, password)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_10 $$ String loginRes = da.login(login, password)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_10 $$ String loginRes = da.login(login, password)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_11 $$ if (!loginRes.isEmpty()) [ CD ]
Line_11 $$ if (!loginRes.isEmpty()) -->Line_11 $$ if (!loginRes.isEmpty()) [ CD ]
Line_11 $$ if (!loginRes.isEmpty()) -->Line_11 $$ if (!loginRes.isEmpty()) [ CD ]
Line_10 $$ String loginRes = da.login(login, password)-->Line_11 $$ if (!loginRes.isEmpty()) [ FD ]
Line_11 $$ if (!loginRes.isEmpty()) -->Line_12 $$ System.out.println("Login failed: " + loginRes)[ CD ]
Line_11 $$ if (!loginRes.isEmpty()) -->Line_13 $$ return[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_15 $$ if (!da.hasRightUpload()) [ CD ]
Line_15 $$ if (!da.hasRightUpload()) -->Line_15 $$ if (!da.hasRightUpload()) [ CD ]
Line_15 $$ if (!da.hasRightUpload()) -->Line_15 $$ if (!da.hasRightUpload()) [ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_15 $$ if (!da.hasRightUpload()) [ FD ]
Line_15 $$ if (!da.hasRightUpload()) -->Line_16 $$ System.out.println("Uploading is temporarily disabled")[ CD ]
Line_15 $$ if (!da.hasRightUpload()) -->Line_17 $$ return[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_19 $$ System.out.println("4shared Login successful :)")[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ CD ]
Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())-->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ FD ]
Line_4 $$ File f = new File(file)-->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ FD ]
Line_4 $$ File f = new File(file)-->Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_21 $$ System.out.println("File id : " + newFileId)[ CD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)[ CD ]
Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)-->Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_23 $$ long dcId = da.getNewFileDataCenter(login, password)[ CD ]
Line_23 $$ long dcId = da.getNewFileDataCenter(login, password)-->Line_23 $$ long dcId = da.getNewFileDataCenter(login, password)[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_23 $$ long dcId = da.getNewFileDataCenter(login, password)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_23 $$ long dcId = da.getNewFileDataCenter(login, password)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_23 $$ long dcId = da.getNewFileDataCenter(login, password)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_24 $$ String url = da.getUploadFormUrl((int) dcId, sessionKey)[ CD ]
Line_24 $$ String url = da.getUploadFormUrl((int) dcId, sessionKey)-->Line_24 $$ String url = da.getUploadFormUrl((int) dcId, sessionKey)[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_24 $$ String url = da.getUploadFormUrl((int) dcId, sessionKey)[ FD ]
Line_22 $$ String sessionKey = da.createUploadSessionKey(login, password, -1)-->Line_24 $$ String url = da.getUploadFormUrl((int) dcId, sessionKey)[ FD ]
Line_28 $$ MultipartEntity me = new MultipartEntity()-->Line_32 $$ me.addPart("resumableFileId", rfid)[ FD ]
Line_29 $$ StringBody rfid = new StringBody("" + newFileId)-->Line_32 $$ me.addPart("resumableFileId", rfid)[ FD ]
Line_28 $$ MultipartEntity me = new MultipartEntity()-->Line_33 $$ me.addPart("resumableFirstByte", rfb)[ FD ]
Line_30 $$ StringBody rfb = new StringBody("" + 0)-->Line_33 $$ me.addPart("resumableFirstByte", rfb)[ FD ]
Line_28 $$ MultipartEntity me = new MultipartEntity()-->Line_34 $$ me.addPart("FilePart", isb)[ FD ]
Line_31 $$ InputStreamBody isb = new InputStreamBody(new BufferedInputStream(new FileInputStream(f)), "FilePart")-->Line_34 $$ me.addPart("FilePart", isb)[ FD ]
Line_27 $$ HttpPost post = new HttpPost(url)-->Line_35 $$ post.setEntity(me)[ FD ]
Line_28 $$ MultipartEntity me = new MultipartEntity()-->Line_35 $$ post.setEntity(me)[ FD ]
Line_36 $$ HttpResponse resp = client.execute(post)-->Line_36 $$ HttpResponse resp = client.execute(post)[ CD ]
Line_26 $$ HttpClient client = new DefaultHttpClient()-->Line_36 $$ HttpResponse resp = client.execute(post)[ FD ]
Line_27 $$ HttpPost post = new HttpPost(url)-->Line_36 $$ HttpResponse resp = client.execute(post)[ FD ]
Line_37 $$ HttpEntity resEnt = resp.getEntity()-->Line_37 $$ HttpEntity resEnt = resp.getEntity()[ CD ]
Line_36 $$ HttpResponse resp = client.execute(post)-->Line_37 $$ HttpEntity resEnt = resp.getEntity()[ FD ]
Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))-->Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))[ FD ]
Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())-->Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))[ FD ]
Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))-->Line_39 $$ if (res.isEmpty()) [ FD ]
Line_39 $$ if (res.isEmpty()) -->Line_39 $$ if (res.isEmpty()) [ CD ]
Line_38 $$ String res = da.uploadFinishFile(login, password, newFileId, DigestUtils.md5Hex(new FileInputStream(f)))-->Line_39 $$ if (res.isEmpty()) [ FD ]
Line_39 $$ if (res.isEmpty()) -->Line_40 $$ System.out.println("File uploaded.")[ CD ]
Line_39 $$ if (res.isEmpty()) -->Line_41 $$ downloadlink = da.getFileDownloadLink(login, password, newFileId)[ CD ]
Line_9 $$ DesktopAppJax2 da = new DesktopAppJax2Service().getDesktopAppJax2Port()-->Line_41 $$ downloadlink = da.getFileDownloadLink(login, password, newFileId)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_41 $$ downloadlink = da.getFileDownloadLink(login, password, newFileId)[ FD ]
Line_2 $$ private static void upload(String login, String password, String file) throws ApiException -->Line_41 $$ downloadlink = da.getFileDownloadLink(login, password, newFileId)[ FD ]
Line_20 $$ long newFileId = da.uploadStartFile(login, password, -1, f.getName(), f.length())-->Line_41 $$ downloadlink = da.getFileDownloadLink(login, password, newFileId)[ FD ]
Line_39 $$ if (res.isEmpty()) -->Line_42 $$ System.out.println("Download link : " + downloadlink)[ CD ]
Line_39 $$ if (res.isEmpty()) -->Line_44 $$ System.out.println("Upload failed: " + res)[ CD ]
