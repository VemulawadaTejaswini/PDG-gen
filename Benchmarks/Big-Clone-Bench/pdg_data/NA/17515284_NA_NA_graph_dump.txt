Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String readBaseLib() throws Exception [ CD ]
Line_2 $$ public String readBaseLib() throws Exception -->Line_3 $$ if (_BASE_LIB_JS == null) [ CD ]
Line_3 $$ if (_BASE_LIB_JS == null) -->Line_4 $$ StringBuffer js = new StringBuffer()[ CD ]
Line_6 $$ URL url = AbstractRunner.class.getResource(_BASELIB_FILENAME)-->Line_6 $$ URL url = AbstractRunner.class.getResource(_BASELIB_FILENAME)[ CD ]
Line_6 $$ URL url = AbstractRunner.class.getResource(_BASELIB_FILENAME)-->Line_7 $$ if (url != null) [ FD ]
Line_7 $$ if (url != null) -->Line_8 $$ InputStream is = url.openStream()[ CD ]
Line_8 $$ InputStream is = url.openStream()-->Line_8 $$ InputStream is = url.openStream()[ CD ]
Line_6 $$ URL url = AbstractRunner.class.getResource(_BASELIB_FILENAME)-->Line_8 $$ InputStream is = url.openStream()[ FD ]
Line_7 $$ if (url != null) -->Line_9 $$ InputStreamReader reader = new InputStreamReader(is)[ CD ]
Line_7 $$ if (url != null) -->Line_10 $$ BufferedReader bfReader = new BufferedReader(reader)[ CD ]
Line_7 $$ if (url != null) -->Line_11 $$ String tmp = null[ CD ]
Line_7 $$ if (url != null) -->Line_12 $$ do [ CD ]
Line_7 $$ if (url != null) -->Line_7 $$ if (url != null) [ CD ]
Line_11 $$ String tmp = null-->Line_12 $$ do [ FD ]
Line_12 $$ do -->Line_13 $$ tmp = bfReader.readLine()[ CD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_13 $$ tmp = bfReader.readLine()[ FD ]
Line_11 $$ String tmp = null-->Line_13 $$ tmp = bfReader.readLine()[ FD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_13 $$ tmp = bfReader.readLine()[ CD ]
Line_10 $$ BufferedReader bfReader = new BufferedReader(reader)-->Line_13 $$ tmp = bfReader.readLine()[ FD ]
Line_12 $$ do -->Line_14 $$ if (tmp != null) [ CD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_14 $$ if (tmp != null) [ FD ]
Line_11 $$ String tmp = null-->Line_14 $$ if (tmp != null) [ FD ]
Line_14 $$ if (tmp != null) -->Line_15 $$ js.append(tmp).append('\n')[ CD ]
Line_4 $$ StringBuffer js = new StringBuffer()-->Line_15 $$ js.append(tmp).append('\n')[ FD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_15 $$ js.append(tmp).append('\n')[ FD ]
Line_11 $$ String tmp = null-->Line_15 $$ js.append(tmp).append('\n')[ FD ]
Line_7 $$ if (url != null) -->Line_18 $$ bfReader.close()[ CD ]
Line_10 $$ BufferedReader bfReader = new BufferedReader(reader)-->Line_18 $$ bfReader.close()[ FD ]
Line_7 $$ if (url != null) -->Line_19 $$ reader.close()[ CD ]
Line_9 $$ InputStreamReader reader = new InputStreamReader(is)-->Line_19 $$ reader.close()[ FD ]
Line_7 $$ if (url != null) -->Line_20 $$ is.close()[ CD ]
Line_8 $$ InputStream is = url.openStream()-->Line_20 $$ is.close()[ FD ]
Line_3 $$ if (_BASE_LIB_JS == null) -->Line_26 $$ _BASE_LIB_JS = js.toString()[ CD ]
Line_4 $$ StringBuffer js = new StringBuffer()-->Line_26 $$ _BASE_LIB_JS = js.toString()[ FD ]
Line_2 $$ public String readBaseLib() throws Exception -->Line_28 $$ return _BASE_LIB_JS[ CD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_12 $$ do [ FD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_12 $$ do [ FD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_14 $$ if (tmp != null) [ FD ]
Line_13 $$ tmp = bfReader.readLine()-->Line_15 $$ js.append(tmp).append('\n')[ FD ]
