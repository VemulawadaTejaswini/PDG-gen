Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException [ CD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")[ CD ]
Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")-->Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_4 $$ digest.update(data.getBytes("UTF8"))[ CD ]
Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")-->Line_4 $$ digest.update(data.getBytes("UTF8"))[ FD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_4 $$ digest.update(data.getBytes("UTF8"))[ FD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_5 $$ byte[] bytes = digest.digest()[ CD ]
Line_5 $$ byte[] bytes = digest.digest()-->Line_5 $$ byte[] bytes = digest.digest()[ CD ]
Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5")-->Line_5 $$ byte[] bytes = digest.digest()[ FD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_6 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ CD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException [ CD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ int aByte = bytes[i][ CD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_9 $$ if (aByte < 0)[ CD ]
Line_8 $$ int aByte = bytes[i]-->Line_9 $$ if (aByte < 0)[ FD ]
Line_9 $$ if (aByte < 0)-->Line_9 $$ aByte += 256[ CD ]
Line_8 $$ int aByte = bytes[i]-->Line_9 $$ aByte += 256[ FD ]
Line_9 $$ aByte += 256-->Line_9 $$ aByte += 256[ FD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_10 $$ if (aByte < 16)[ CD ]
Line_8 $$ int aByte = bytes[i]-->Line_10 $$ if (aByte < 16)[ FD ]
Line_9 $$ aByte += 256-->Line_10 $$ if (aByte < 16)[ FD ]
Line_10 $$ if (aByte < 16)-->Line_10 $$ sb.append('0')[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_10 $$ sb.append('0')[ FD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_11 $$ sb.append(Integer.toHexString(aByte))[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_11 $$ sb.append(Integer.toHexString(aByte))[ FD ]
Line_8 $$ int aByte = bytes[i]-->Line_11 $$ sb.append(Integer.toHexString(aByte))[ FD ]
Line_9 $$ aByte += 256-->Line_11 $$ sb.append(Integer.toHexString(aByte))[ FD ]
Line_2 $$ protected final String H(String data) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_13 $$ return sb.toString()[ CD ]
Line_13 $$ return sb.toString()-->Line_13 $$ return sb.toString()[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_13 $$ return sb.toString()[ FD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < bytes.length; i++) -->Line_7 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_8 $$ int aByte = bytes[i]-->Line_9 $$ if (aByte < 0)[ FD ]
Line_9 $$ aByte += 256-->Line_9 $$ if (aByte < 0)[ FD ]
Line_8 $$ int aByte = bytes[i]-->Line_10 $$ if (aByte < 16)[ FD ]
Line_9 $$ aByte += 256-->Line_10 $$ if (aByte < 16)[ FD ]
Line_8 $$ int aByte = bytes[i]-->Line_11 $$ sb.append(Integer.toHexString(aByte))[ FD ]
Line_9 $$ aByte += 256-->Line_11 $$ sb.append(Integer.toHexString(aByte))[ FD ]
