Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean encrypt(int idAnexo) [ CD ]
Line_4 $$ Anexo anexo = anexoService.selectById(idAnexo)-->Line_4 $$ Anexo anexo = anexoService.selectById(idAnexo)[ CD ]
Line_2 $$ public boolean encrypt(int idAnexo) -->Line_4 $$ Anexo anexo = anexoService.selectById(idAnexo)[ FD ]
Line_4 $$ Anexo anexo = anexoService.selectById(idAnexo)-->Line_6 $$ FileInputStream fis = new FileInputStream(config.baseDir + "/arquivos_upload_direto/" + anexo.getAnexoCaminho())[ FD ]
Line_4 $$ Anexo anexo = anexoService.selectById(idAnexo)-->Line_7 $$ CipherOutputStream cos = new CipherOutputStream(new FileOutputStream(config.baseDir + "/arquivos_upload_direto/encrypt/" + anexo.getAnexoCaminho()), aes)[ FD ]
Line_6 $$ FileInputStream fis = new FileInputStream(config.baseDir + "/arquivos_upload_direto/" + anexo.getAnexoCaminho())-->Line_8 $$ IOUtils.copy(fis, cos)[ FD ]
Line_7 $$ CipherOutputStream cos = new CipherOutputStream(new FileOutputStream(config.baseDir + "/arquivos_upload_direto/encrypt/" + anexo.getAnexoCaminho()), aes)-->Line_8 $$ IOUtils.copy(fis, cos)[ FD ]
Line_7 $$ CipherOutputStream cos = new CipherOutputStream(new FileOutputStream(config.baseDir + "/arquivos_upload_direto/encrypt/" + anexo.getAnexoCaminho()), aes)-->Line_9 $$ cos.close()[ FD ]
Line_6 $$ FileInputStream fis = new FileInputStream(config.baseDir + "/arquivos_upload_direto/" + anexo.getAnexoCaminho())-->Line_10 $$ fis.close()[ FD ]
Line_2 $$ public boolean encrypt(int idAnexo) -->Line_15 $$ return true[ CD ]
