Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException [ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_3 $$ URL url = new URL(refererURL)[ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_4 $$ InputStream is = url.openStream()[ CD ]
Line_4 $$ InputStream is = url.openStream()-->Line_4 $$ InputStream is = url.openStream()[ CD ]
Line_3 $$ URL url = new URL(refererURL)-->Line_4 $$ InputStream is = url.openStream()[ FD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_6 $$ if (requestURL.startsWith("http://www.")) [ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_6 $$ if (requestURL.startsWith("http://www.")) [ FD ]
Line_6 $$ if (requestURL.startsWith("http://www.")) -->Line_6 $$ if (requestURL.startsWith("http://www.")) [ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_6 $$ if (requestURL.startsWith("http://www.")) [ FD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_13 $$ Parser parser = (new HTMLEditorKit() [ CD ]
Line_13 $$ Parser parser = (new HTMLEditorKit() -->Line_13 $$ Parser parser = (new HTMLEditorKit() [ CD ]
Line_13 $$ Parser parser = (new HTMLEditorKit() -->Line_15 $$ return super.getParser()[ CD ]
Line_15 $$ return super.getParser()-->Line_15 $$ return super.getParser()[ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_22 $$ while ((line = br.readLine()) != null) [ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException [ CD ]
Line_22 $$ while ((line = br.readLine()) != null) -->Line_23 $$ sb.append(line)[ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_26 $$ parser.parse(sr, new LinkbackCallback(), true)[ CD ]
Line_13 $$ Parser parser = (new HTMLEditorKit() -->Line_26 $$ parser.parse(sr, new LinkbackCallback(), true)[ FD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_27 $$ if (mStart != 0 && mEnd != 0 && mEnd > mStart) [ CD ]
Line_27 $$ if (mStart != 0 && mEnd != 0 && mEnd > mStart) -->Line_28 $$ mExcerpt = sb.toString().substring(mStart, mEnd)[ CD ]
Line_27 $$ if (mStart != 0 && mEnd != 0 && mEnd > mStart) -->Line_29 $$ mExcerpt = Utilities.removeHTML(mExcerpt)[ CD ]
Line_27 $$ if (mStart != 0 && mEnd != 0 && mEnd > mStart) -->Line_30 $$ if (mExcerpt.length() > mMaxExcerpt) [ CD ]
Line_30 $$ if (mExcerpt.length() > mMaxExcerpt) -->Line_30 $$ if (mExcerpt.length() > mMaxExcerpt) [ CD ]
Line_2 $$ private void extractByParsingHtml(String refererURL, String requestURL) throws MalformedURLException, IOException -->Line_34 $$ if (mTitle.startsWith(">") && mTitle.length() > 1) [ CD ]
Line_34 $$ if (mTitle.startsWith(">") && mTitle.length() > 1) -->Line_35 $$ mTitle = mTitle.substring(1)[ CD ]
