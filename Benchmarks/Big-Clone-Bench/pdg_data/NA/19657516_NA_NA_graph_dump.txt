Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) [ CD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_3 $$ if (loader == null)[ CD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_3 $$ if (loader == null)[ FD ]
Line_3 $$ if (loader == null)-->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ CD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ CD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_4 $$ final Map result = new HashMap()[ CD ]
Line_6 $$ final Enumeration resources = loader.getResources(resourceName)-->Line_6 $$ final Enumeration resources = loader.getResources(resourceName)[ CD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_6 $$ final Enumeration resources = loader.getResources(resourceName)[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_6 $$ final Enumeration resources = loader.getResources(resourceName)[ FD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_6 $$ final Enumeration resources = loader.getResources(resourceName)[ FD ]
Line_6 $$ final Enumeration resources = loader.getResources(resourceName)-->Line_7 $$ if (resources != null) [ FD ]
Line_7 $$ if (resources != null) -->Line_8 $$ while (resources.hasMoreElements()) [ CD ]
Line_7 $$ if (resources != null) -->Line_7 $$ if (resources != null) [ CD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_8 $$ while (resources.hasMoreElements()) [ CD ]
Line_6 $$ final Enumeration resources = loader.getResources(resourceName)-->Line_8 $$ while (resources.hasMoreElements()) [ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_9 $$ final URL url = (URL) resources.nextElement()[ CD ]
Line_6 $$ final Enumeration resources = loader.getResources(resourceName)-->Line_9 $$ final URL url = (URL) resources.nextElement()[ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_10 $$ final Properties mapping[ CD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_11 $$ InputStream urlIn = null[ CD ]
Line_11 $$ InputStream urlIn = null-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_13 $$ urlIn = url.openStream()[ CD ]
Line_9 $$ final URL url = (URL) resources.nextElement()-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_10 $$ final Properties mapping-->Line_14 $$ mapping = new Properties()[ FD ]
Line_14 $$ mapping = new Properties()-->Line_14 $$ mapping = new Properties()[ FD ]
Line_10 $$ final Properties mapping-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_14 $$ mapping = new Properties()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_19 $$ if (urlIn != null)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_19 $$ if (urlIn != null)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_20 $$ urlIn.close()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_20 $$ urlIn.close()[ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_8 $$ while (resources.hasMoreElements()) [ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_10 $$ final Properties mapping-->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ FD ]
Line_14 $$ mapping = new Properties()-->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_25 $$ final String protocol = (String) keys.nextElement()[ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_25 $$ final String protocol = (String) keys.nextElement()[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_26 $$ final String implClassName = mapping.getProperty(protocol)[ CD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_26 $$ final String implClassName = mapping.getProperty(protocol)[ CD ]
Line_10 $$ final Properties mapping-->Line_26 $$ final String implClassName = mapping.getProperty(protocol)[ FD ]
Line_14 $$ mapping = new Properties()-->Line_26 $$ final String implClassName = mapping.getProperty(protocol)[ FD ]
Line_25 $$ final String protocol = (String) keys.nextElement()-->Line_26 $$ final String implClassName = mapping.getProperty(protocol)[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_27 $$ final Object currentImpl = result.get(protocol)[ CD ]
Line_27 $$ final Object currentImpl = result.get(protocol)-->Line_27 $$ final Object currentImpl = result.get(protocol)[ CD ]
Line_4 $$ final Map result = new HashMap()-->Line_27 $$ final Object currentImpl = result.get(protocol)[ FD ]
Line_25 $$ final String protocol = (String) keys.nextElement()-->Line_27 $$ final Object currentImpl = result.get(protocol)[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_28 $$ if (currentImpl != null) [ CD ]
Line_27 $$ final Object currentImpl = result.get(protocol)-->Line_28 $$ if (currentImpl != null) [ FD ]
Line_28 $$ if (currentImpl != null) -->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ CD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ FD ]
Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ CD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ FD ]
Line_27 $$ final Object currentImpl = result.get(protocol)-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ CD ]
Line_4 $$ final Map result = new HashMap()-->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
Line_25 $$ final String protocol = (String) keys.nextElement()-->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
Line_2 $$ private static Map loadHandlerList(final String resourceName, ClassLoader loader) -->Line_37 $$ return result[ CD ]
Line_9 $$ final URL url = (URL) resources.nextElement()-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_10 $$ final Properties mapping-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_14 $$ mapping = new Properties()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_19 $$ if (urlIn != null)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_19 $$ if (urlIn != null)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_20 $$ urlIn.close()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_20 $$ urlIn.close()[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_25 $$ final String protocol = (String) keys.nextElement()[ FD ]
Line_25 $$ final String protocol = (String) keys.nextElement()-->Line_26 $$ final String implClassName = mapping.getProperty(protocol)[ FD ]
Line_25 $$ final String protocol = (String) keys.nextElement()-->Line_27 $$ final Object currentImpl = result.get(protocol)[ FD ]
Line_27 $$ final Object currentImpl = result.get(protocol)-->Line_28 $$ if (currentImpl != null) [ FD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ FD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ FD ]
Line_27 $$ final Object currentImpl = result.get(protocol)-->Line_29 $$ if (implClassName.equals(currentImpl.getClass().getName()))[ FD ]
Line_25 $$ final String protocol = (String) keys.nextElement()-->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
Line_26 $$ final String implClassName = mapping.getProperty(protocol)-->Line_31 $$ result.put(protocol, loadURLStreamHandler(implClassName, loader))[ FD ]
