Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) [ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_3 $$ logger.debug("Duplicating table " + table)[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_4 $$ Statement creTab, stmt[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_5 $$ ResultSet tuples, columns, keys[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_6 $$ int c[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_7 $$ String insert = ""[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_8 $$ PreparedStatement insTup[ CD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)[ FD ]
Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)-->Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)[ FD ]
Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)-->Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)[ FD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)[ FD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)[ FD ]
Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)-->Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)[ FD ]
Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)-->Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)[ FD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)[ FD ]
Line_4 $$ Statement creTab, stmt-->Line_12 $$ creTab = dcon.createStatement()[ FD ]
Line_12 $$ creTab = dcon.createStatement()-->Line_12 $$ creTab = dcon.createStatement()[ FD ]
Line_12 $$ creTab = dcon.createStatement()-->Line_12 $$ creTab = dcon.createStatement()[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_12 $$ creTab = dcon.createStatement()[ FD ]
Line_4 $$ Statement creTab, stmt-->Line_13 $$ creTab.execute(getCreateTableCommand(columns, keys))[ FD ]
Line_12 $$ creTab = dcon.createStatement()-->Line_13 $$ creTab.execute(getCreateTableCommand(columns, keys))[ FD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_13 $$ creTab.execute(getCreateTableCommand(columns, keys))[ FD ]
Line_10 $$ columns = scon.getMetaData().getColumns(null, null, table, null)-->Line_13 $$ creTab.execute(getCreateTableCommand(columns, keys))[ FD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_13 $$ creTab.execute(getCreateTableCommand(columns, keys))[ FD ]
Line_11 $$ keys = scon.getMetaData().getPrimaryKeys(null, null, table)-->Line_13 $$ creTab.execute(getCreateTableCommand(columns, keys))[ FD ]
Line_4 $$ Statement creTab, stmt-->Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)[ FD ]
Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)-->Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)[ FD ]
Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)-->Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)[ FD ]
Line_4 $$ Statement creTab, stmt-->Line_15 $$ stmt.setFetchSize(50)[ FD ]
Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)-->Line_15 $$ stmt.setFetchSize(50)[ FD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)[ FD ]
Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)-->Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)[ FD ]
Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)-->Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)[ CD ]
Line_4 $$ Statement creTab, stmt-->Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)[ FD ]
Line_14 $$ stmt = scon.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY)-->Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)[ FD ]
Line_6 $$ int c-->Line_17 $$ c = tuples.getMetaData().getColumnCount()[ FD ]
Line_17 $$ c = tuples.getMetaData().getColumnCount()-->Line_17 $$ c = tuples.getMetaData().getColumnCount()[ FD ]
Line_17 $$ c = tuples.getMetaData().getColumnCount()-->Line_17 $$ c = tuples.getMetaData().getColumnCount()[ CD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_17 $$ c = tuples.getMetaData().getColumnCount()[ FD ]
Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)-->Line_17 $$ c = tuples.getMetaData().getColumnCount()[ FD ]
Line_7 $$ String insert = ""-->Line_18 $$ insert = "INSERT INTO " + table + " VALUES("[ FD ]
Line_18 $$ insert = "INSERT INTO " + table + " VALUES("-->Line_18 $$ insert = "INSERT INTO " + table + " VALUES("[ FD ]
Line_6 $$ int c-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ FD ]
Line_17 $$ c = tuples.getMetaData().getColumnCount()-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ CD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ CD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ insert += "?,"[ CD ]
Line_19 $$ insert += "?,"-->Line_19 $$ insert += "?,"[ FD ]
Line_7 $$ String insert = ""-->Line_19 $$ insert += "?,"[ FD ]
Line_18 $$ insert = "INSERT INTO " + table + " VALUES("-->Line_19 $$ insert += "?,"[ FD ]
Line_19 $$ insert += "?,"-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_7 $$ String insert = ""-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_18 $$ insert = "INSERT INTO " + table + " VALUES("-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_19 $$ insert += "?,"-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_7 $$ String insert = ""-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_18 $$ insert = "INSERT INTO " + table + " VALUES("-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_19 $$ insert += "?,"-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_7 $$ String insert = ""-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_18 $$ insert = "INSERT INTO " + table + " VALUES("-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"-->Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"[ FD ]
Line_8 $$ PreparedStatement insTup-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_22 $$ insTup = dcon.prepareStatement(insert)-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_22 $$ insTup = dcon.prepareStatement(insert)-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ CD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_19 $$ insert += "?,"-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_7 $$ String insert = ""-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_18 $$ insert = "INSERT INTO " + table + " VALUES("-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_20 $$ insert = insert.substring(0, insert.length() - 1) + ")"-->Line_22 $$ insTup = dcon.prepareStatement(insert)[ FD ]
Line_23 $$ while (tuples.next()) -->Line_23 $$ while (tuples.next()) [ CD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_23 $$ while (tuples.next()) [ FD ]
Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)-->Line_23 $$ while (tuples.next()) [ FD ]
Line_23 $$ while (tuples.next()) -->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ CD ]
Line_23 $$ while (tuples.next()) -->Line_23 $$ while (tuples.next()) [ CD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_6 $$ int c-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_17 $$ c = tuples.getMetaData().getColumnCount()-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ CD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ CD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ CD ]
Line_8 $$ PreparedStatement insTup-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_22 $$ insTup = dcon.prepareStatement(insert)-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_5 $$ ResultSet tuples, columns, keys-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_16 $$ tuples = stmt.executeQuery("SELECT * FROM " + table)-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_23 $$ while (tuples.next()) -->Line_25 $$ insTup.executeUpdate()[ CD ]
Line_8 $$ PreparedStatement insTup-->Line_25 $$ insTup.executeUpdate()[ FD ]
Line_22 $$ insTup = dcon.prepareStatement(insert)-->Line_25 $$ insTup.executeUpdate()[ FD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_27 $$ dcon.commit()[ FD ]
Line_2 $$ private void duplicateTable(Connection scon, Connection dcon, String table) -->Line_31 $$ dcon.rollback()[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ FD ]
Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"-->Line_19 $$ for (int j = 1; j <= c; j++) insert += "?,"[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
Line_24 $$ for (int j = 1; j <= c; j++) insTup.setObject(j, tuples.getObject(j))-->Line_24 $$ insTup.setObject(j, tuples.getObject(j))[ FD ]
