Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public BigInteger generateHashing(String value, int lengthBits) [ CD ]
Line_4 $$ MessageDigest algorithm = MessageDigest.getInstance(this.algorithm)-->Line_4 $$ MessageDigest algorithm = MessageDigest.getInstance(this.algorithm)[ CD ]
Line_4 $$ MessageDigest algorithm = MessageDigest.getInstance(this.algorithm)-->Line_5 $$ algorithm.update(value.getBytes())[ FD ]
Line_2 $$ public BigInteger generateHashing(String value, int lengthBits) -->Line_5 $$ algorithm.update(value.getBytes())[ FD ]
Line_6 $$ byte[] digest = algorithm.digest()-->Line_6 $$ byte[] digest = algorithm.digest()[ CD ]
Line_4 $$ MessageDigest algorithm = MessageDigest.getInstance(this.algorithm)-->Line_6 $$ byte[] digest = algorithm.digest()[ FD ]
Line_2 $$ public BigInteger generateHashing(String value, int lengthBits) -->Line_8 $$ if (lengthBits != digest.length * 8) [ FD ]
Line_8 $$ if (lengthBits != digest.length * 8) -->Line_9 $$ BigInteger length = new BigInteger("2")[ CD ]
Line_8 $$ if (lengthBits != digest.length * 8) -->Line_10 $$ length = length.pow(lengthBits)[ CD ]
Line_9 $$ BigInteger length = new BigInteger("2")-->Line_10 $$ length = length.pow(lengthBits)[ FD ]
Line_10 $$ length = length.pow(lengthBits)-->Line_10 $$ length = length.pow(lengthBits)[ FD ]
Line_10 $$ length = length.pow(lengthBits)-->Line_10 $$ length = length.pow(lengthBits)[ CD ]
Line_9 $$ BigInteger length = new BigInteger("2")-->Line_10 $$ length = length.pow(lengthBits)[ FD ]
Line_10 $$ length = length.pow(lengthBits)-->Line_10 $$ length = length.pow(lengthBits)[ FD ]
Line_2 $$ public BigInteger generateHashing(String value, int lengthBits) -->Line_10 $$ length = length.pow(lengthBits)[ FD ]
Line_8 $$ if (lengthBits != digest.length * 8) -->Line_11 $$ hashing = hashing.mod(length)[ CD ]
Line_7 $$ BigInteger hashing = new BigInteger(+1, digest)-->Line_11 $$ hashing = hashing.mod(length)[ FD ]
Line_11 $$ hashing = hashing.mod(length)-->Line_11 $$ hashing = hashing.mod(length)[ FD ]
Line_11 $$ hashing = hashing.mod(length)-->Line_11 $$ hashing = hashing.mod(length)[ CD ]
Line_7 $$ BigInteger hashing = new BigInteger(+1, digest)-->Line_11 $$ hashing = hashing.mod(length)[ FD ]
Line_11 $$ hashing = hashing.mod(length)-->Line_11 $$ hashing = hashing.mod(length)[ FD ]
Line_9 $$ BigInteger length = new BigInteger("2")-->Line_11 $$ hashing = hashing.mod(length)[ FD ]
Line_10 $$ length = length.pow(lengthBits)-->Line_11 $$ hashing = hashing.mod(length)[ FD ]
