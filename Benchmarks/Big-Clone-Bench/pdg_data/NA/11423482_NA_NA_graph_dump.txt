Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected byte[] retrieveImageData() throws IOException [ CD ]
Line_2 $$ protected byte[] retrieveImageData() throws IOException -->Line_3 $$ URL url = new URL(imageUrl)[ CD ]
Line_2 $$ protected byte[] retrieveImageData() throws IOException -->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(imageUrl)-->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ protected byte[] retrieveImageData() throws IOException -->Line_5 $$ int fileSize = connection.getContentLength()[ CD ]
Line_5 $$ int fileSize = connection.getContentLength()-->Line_5 $$ int fileSize = connection.getContentLength()[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_5 $$ int fileSize = connection.getContentLength()[ FD ]
Line_2 $$ protected byte[] retrieveImageData() throws IOException -->Line_6 $$ Log.d(LOG_TAG, "fetching image " + imageUrl + " (" + (fileSize <= 0 ? "size unknown" : Integer.toString(fileSize)) + ")")[ CD ]
Line_5 $$ int fileSize = connection.getContentLength()-->Line_6 $$ Log.d(LOG_TAG, "fetching image " + imageUrl + " (" + (fileSize <= 0 ? "size unknown" : Integer.toString(fileSize)) + ")")[ FD ]
Line_2 $$ protected byte[] retrieveImageData() throws IOException -->Line_7 $$ BufferedInputStream istream = new BufferedInputStream(connection.getInputStream())[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_7 $$ BufferedInputStream istream = new BufferedInputStream(connection.getInputStream())[ FD ]
Line_5 $$ int fileSize = connection.getContentLength()-->Line_9 $$ if (fileSize <= 0) [ FD ]
Line_9 $$ if (fileSize <= 0) -->Line_10 $$ Log.w(LOG_TAG, "Server did not set a Content-Length header, will default to buffer size of " + defaultBufferSize + " bytes")[ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_11 $$ ByteArrayOutputStream buf = new ByteArrayOutputStream(defaultBufferSize)[ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_12 $$ byte[] buffer = new byte[defaultBufferSize][ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_13 $$ int bytesRead = 0[ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_14 $$ while (bytesRead != -1) [ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_9 $$ if (fileSize <= 0) [ CD ]
Line_13 $$ int bytesRead = 0-->Line_14 $$ while (bytesRead != -1) [ FD ]
Line_14 $$ while (bytesRead != -1) -->Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)[ CD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)[ FD ]
Line_13 $$ int bytesRead = 0-->Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)[ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)[ CD ]
Line_7 $$ BufferedInputStream istream = new BufferedInputStream(connection.getInputStream())-->Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)[ FD ]
Line_12 $$ byte[] buffer = new byte[defaultBufferSize]-->Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)[ FD ]
Line_14 $$ while (bytesRead != -1) -->Line_16 $$ if (bytesRead > 0)[ CD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_16 $$ if (bytesRead > 0)[ FD ]
Line_13 $$ int bytesRead = 0-->Line_16 $$ if (bytesRead > 0)[ FD ]
Line_16 $$ if (bytesRead > 0)-->Line_16 $$ buf.write(buffer, 0, bytesRead)[ CD ]
Line_11 $$ ByteArrayOutputStream buf = new ByteArrayOutputStream(defaultBufferSize)-->Line_16 $$ buf.write(buffer, 0, bytesRead)[ FD ]
Line_12 $$ byte[] buffer = new byte[defaultBufferSize]-->Line_16 $$ buf.write(buffer, 0, bytesRead)[ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_16 $$ buf.write(buffer, 0, bytesRead)[ FD ]
Line_13 $$ int bytesRead = 0-->Line_16 $$ buf.write(buffer, 0, bytesRead)[ FD ]
Line_9 $$ if (fileSize <= 0) -->Line_18 $$ return buf.toByteArray()[ CD ]
Line_18 $$ return buf.toByteArray()-->Line_18 $$ return buf.toByteArray()[ CD ]
Line_11 $$ ByteArrayOutputStream buf = new ByteArrayOutputStream(defaultBufferSize)-->Line_18 $$ return buf.toByteArray()[ FD ]
Line_9 $$ if (fileSize <= 0) -->Line_20 $$ byte[] imageData = new byte[fileSize][ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_22 $$ int offset = 0[ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_23 $$ while (bytesRead != -1 && offset < fileSize) [ CD ]
Line_9 $$ if (fileSize <= 0) -->Line_9 $$ if (fileSize <= 0) [ CD ]
Line_23 $$ while (bytesRead != -1 && offset < fileSize) -->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ CD ]
Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_13 $$ int bytesRead = 0-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ CD ]
Line_7 $$ BufferedInputStream istream = new BufferedInputStream(connection.getInputStream())-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_20 $$ byte[] imageData = new byte[fileSize]-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_22 $$ int offset = 0-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_23 $$ while (bytesRead != -1 && offset < fileSize) -->Line_25 $$ offset += bytesRead[ CD ]
Line_25 $$ offset += bytesRead-->Line_25 $$ offset += bytesRead[ FD ]
Line_22 $$ int offset = 0-->Line_25 $$ offset += bytesRead[ FD ]
Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)-->Line_25 $$ offset += bytesRead[ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_25 $$ offset += bytesRead[ FD ]
Line_13 $$ int bytesRead = 0-->Line_25 $$ offset += bytesRead[ FD ]
Line_9 $$ if (fileSize <= 0) -->Line_27 $$ return imageData[ CD ]
Line_7 $$ BufferedInputStream istream = new BufferedInputStream(connection.getInputStream())-->Line_31 $$ istream.close()[ FD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_32 $$ connection.disconnect()[ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_14 $$ while (bytesRead != -1) [ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_14 $$ while (bytesRead != -1) [ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_16 $$ if (bytesRead > 0)[ FD ]
Line_15 $$ bytesRead = istream.read(buffer, 0, defaultBufferSize)-->Line_16 $$ buf.write(buffer, 0, bytesRead)[ FD ]
Line_25 $$ offset += bytesRead-->Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)[ FD ]
Line_24 $$ bytesRead = istream.read(imageData, offset, fileSize - offset)-->Line_25 $$ offset += bytesRead[ FD ]
