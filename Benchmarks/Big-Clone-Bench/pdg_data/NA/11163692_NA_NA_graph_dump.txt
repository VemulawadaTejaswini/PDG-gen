Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException [ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_3 $$ Log.warning("source: " + src)[ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_4 $$ Log.warning("dest: " + dest)[ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_5 $$ if (!src.canRead()) [ CD ]
Line_5 $$ if (!src.canRead()) -->Line_5 $$ if (!src.canRead()) [ CD ]
Line_5 $$ if (!src.canRead()) -->Line_5 $$ if (!src.canRead()) [ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_5 $$ if (!src.canRead()) [ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_8 $$ if (!dest.getParentFile().isDirectory()) [ CD ]
Line_8 $$ if (!dest.getParentFile().isDirectory()) -->Line_8 $$ if (!dest.getParentFile().isDirectory()) [ CD ]
Line_8 $$ if (!dest.getParentFile().isDirectory()) -->Line_8 $$ if (!dest.getParentFile().isDirectory()) [ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_8 $$ if (!dest.getParentFile().isDirectory()) [ FD ]
Line_8 $$ if (!dest.getParentFile().isDirectory()) -->Line_9 $$ if (!dest.getParentFile().mkdirs()) [ CD ]
Line_9 $$ if (!dest.getParentFile().mkdirs()) -->Line_9 $$ if (!dest.getParentFile().mkdirs()) [ CD ]
Line_9 $$ if (!dest.getParentFile().mkdirs()) -->Line_9 $$ if (!dest.getParentFile().mkdirs()) [ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_9 $$ if (!dest.getParentFile().mkdirs()) [ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_10 $$ throw new IOException("failed to make directories: " + dest.getParent())[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_13 $$ FileInputStream fis = new FileInputStream(src)[ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_14 $$ FileOutputStream fos = new FileOutputStream(dest)[ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_15 $$ FileChannel fcin = fis.getChannel()[ CD ]
Line_15 $$ FileChannel fcin = fis.getChannel()-->Line_15 $$ FileChannel fcin = fis.getChannel()[ CD ]
Line_13 $$ FileInputStream fis = new FileInputStream(src)-->Line_15 $$ FileChannel fcin = fis.getChannel()[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_16 $$ FileChannel fcout = fos.getChannel()[ CD ]
Line_16 $$ FileChannel fcout = fos.getChannel()-->Line_16 $$ FileChannel fcout = fos.getChannel()[ CD ]
Line_14 $$ FileOutputStream fos = new FileOutputStream(dest)-->Line_16 $$ FileChannel fcout = fos.getChannel()[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_17 $$ Log.warning("starting transfer from position " + fcin.position() + " to size " + fcin.size())[ CD ]
Line_15 $$ FileChannel fcin = fis.getChannel()-->Line_17 $$ Log.warning("starting transfer from position " + fcin.position() + " to size " + fcin.size())[ FD ]
Line_15 $$ FileChannel fcin = fis.getChannel()-->Line_17 $$ Log.warning("starting transfer from position " + fcin.position() + " to size " + fcin.size())[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_18 $$ fcout.transferFrom(fcin, 0, fcin.size())[ CD ]
Line_16 $$ FileChannel fcout = fos.getChannel()-->Line_18 $$ fcout.transferFrom(fcin, 0, fcin.size())[ FD ]
Line_15 $$ FileChannel fcin = fis.getChannel()-->Line_18 $$ fcout.transferFrom(fcin, 0, fcin.size())[ FD ]
Line_15 $$ FileChannel fcin = fis.getChannel()-->Line_18 $$ fcout.transferFrom(fcin, 0, fcin.size())[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_19 $$ Log.warning("closing streams and channels")[ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_20 $$ fcin.close()[ CD ]
Line_15 $$ FileChannel fcin = fis.getChannel()-->Line_20 $$ fcin.close()[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_21 $$ fcout.close()[ CD ]
Line_16 $$ FileChannel fcout = fos.getChannel()-->Line_21 $$ fcout.close()[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_22 $$ fis.close()[ CD ]
Line_13 $$ FileInputStream fis = new FileInputStream(src)-->Line_22 $$ fis.close()[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_23 $$ fos.close()[ CD ]
Line_14 $$ FileOutputStream fos = new FileOutputStream(dest)-->Line_23 $$ fos.close()[ FD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_24 $$ if (removeSrc) [ CD ]
Line_24 $$ if (removeSrc) -->Line_25 $$ Log.warning("deleting file " + src)[ CD ]
Line_24 $$ if (removeSrc) -->Line_26 $$ src.delete()[ CD ]
Line_2 $$ public static void transfer(File src, File dest, boolean removeSrc) throws FileNotFoundException, IOException -->Line_26 $$ src.delete()[ FD ]
