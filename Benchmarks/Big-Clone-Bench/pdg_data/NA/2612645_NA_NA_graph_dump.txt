Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void populateDefaultIcons() [ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_3 $$ DomainNameTree defaultmap = this.getDefaultIconMap()[ CD ]
Line_3 $$ DomainNameTree defaultmap = this.getDefaultIconMap()-->Line_3 $$ DomainNameTree defaultmap = this.getDefaultIconMap()[ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_4 $$ DomainNameTree newmap = new DomainNameTree()[ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_5 $$ File iconDir = new File(this.usrIconDir)[ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) [ CD ]
Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) -->Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) [ CD ]
Line_5 $$ File iconDir = new File(this.usrIconDir)-->Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) [ FD ]
Line_5 $$ File iconDir = new File(this.usrIconDir)-->Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) [ FD ]
Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) -->Line_7 $$ int s = JOptionPane.showConfirmDialog(null, "Create icon directory " + this.usrIconDir + "?", "Icon directory does not exist!", JOptionPane.YES_NO_CANCEL_OPTION)[ CD ]
Line_7 $$ int s = JOptionPane.showConfirmDialog(null, "Create icon directory " + this.usrIconDir + "?", "Icon directory does not exist!", JOptionPane.YES_NO_CANCEL_OPTION)-->Line_7 $$ int s = JOptionPane.showConfirmDialog(null, "Create icon directory " + this.usrIconDir + "?", "Icon directory does not exist!", JOptionPane.YES_NO_CANCEL_OPTION)[ CD ]
Line_6 $$ if (!(iconDir.exists() && iconDir.isDirectory())) -->Line_8 $$ if (s == JOptionPane.YES_OPTION) [ CD ]
Line_7 $$ int s = JOptionPane.showConfirmDialog(null, "Create icon directory " + this.usrIconDir + "?", "Icon directory does not exist!", JOptionPane.YES_NO_CANCEL_OPTION)-->Line_8 $$ if (s == JOptionPane.YES_OPTION) [ FD ]
Line_8 $$ if (s == JOptionPane.YES_OPTION) -->Line_9 $$ iconDir.mkdir()[ CD ]
Line_5 $$ File iconDir = new File(this.usrIconDir)-->Line_9 $$ iconDir.mkdir()[ FD ]
Line_8 $$ if (s == JOptionPane.YES_OPTION) -->Line_11 $$ return[ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_14 $$ Set domains = defaultmap.domainSet()[ CD ]
Line_14 $$ Set domains = defaultmap.domainSet()-->Line_14 $$ Set domains = defaultmap.domainSet()[ CD ]
Line_3 $$ DomainNameTree defaultmap = this.getDefaultIconMap()-->Line_14 $$ Set domains = defaultmap.domainSet()[ FD ]
Line_2 $$ public void populateDefaultIcons() -->Line_15 $$ Iterator iter = domains.iterator()[ CD ]
Line_15 $$ Iterator iter = domains.iterator()-->Line_15 $$ Iterator iter = domains.iterator()[ CD ]
Line_14 $$ Set domains = defaultmap.domainSet()-->Line_15 $$ Iterator iter = domains.iterator()[ FD ]
Line_2 $$ public void populateDefaultIcons() -->Line_16 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_2 $$ public void populateDefaultIcons() [ CD ]
Line_16 $$ while (iter.hasNext()) -->Line_16 $$ while (iter.hasNext()) [ CD ]
Line_15 $$ Iterator iter = domains.iterator()-->Line_16 $$ while (iter.hasNext()) [ FD ]
Line_16 $$ while (iter.hasNext()) -->Line_17 $$ String dname = (String) iter.next()[ CD ]
Line_15 $$ Iterator iter = domains.iterator()-->Line_17 $$ String dname = (String) iter.next()[ FD ]
Line_16 $$ while (iter.hasNext()) -->Line_18 $$ String fname = defaultmap.getImageFile(dname)[ CD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_18 $$ String fname = defaultmap.getImageFile(dname)[ CD ]
Line_3 $$ DomainNameTree defaultmap = this.getDefaultIconMap()-->Line_18 $$ String fname = defaultmap.getImageFile(dname)[ FD ]
Line_17 $$ String dname = (String) iter.next()-->Line_18 $$ String fname = defaultmap.getImageFile(dname)[ FD ]
Line_16 $$ while (iter.hasNext()) -->Line_19 $$ if (fname != null) [ CD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_19 $$ if (fname != null) [ FD ]
Line_19 $$ if (fname != null) -->Line_20 $$ System.out.println("Attempting to populate with:" + fname)[ CD ]
Line_19 $$ if (fname != null) -->Line_21 $$ if (!fname.equals("null")) [ CD ]
Line_21 $$ if (!fname.equals("null")) -->Line_21 $$ if (!fname.equals("null")) [ CD ]
Line_21 $$ if (!fname.equals("null")) -->Line_21 $$ if (!fname.equals("null")) [ CD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_21 $$ if (!fname.equals("null")) [ FD ]
Line_21 $$ if (!fname.equals("null")) -->Line_22 $$ File file = new File(fname)[ CD ]
Line_21 $$ if (!fname.equals("null")) -->Line_23 $$ String newname = this.usrIconDir.concat(File.separator).concat(file.getName())[ CD ]
Line_23 $$ String newname = this.usrIconDir.concat(File.separator).concat(file.getName())-->Line_23 $$ String newname = this.usrIconDir.concat(File.separator).concat(file.getName())[ CD ]
Line_22 $$ File file = new File(fname)-->Line_23 $$ String newname = this.usrIconDir.concat(File.separator).concat(file.getName())[ FD ]
Line_21 $$ if (!fname.equals("null")) -->Line_24 $$ File newfile = new File(newname)[ CD ]
Line_21 $$ if (!fname.equals("null")) -->Line_25 $$ URL url = this.getClass().getResource(fname)[ CD ]
Line_25 $$ URL url = this.getClass().getResource(fname)-->Line_25 $$ URL url = this.getClass().getResource(fname)[ CD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_25 $$ URL url = this.getClass().getResource(fname)[ FD ]
Line_21 $$ if (!fname.equals("null")) -->Line_26 $$ if (url != null) [ CD ]
Line_25 $$ URL url = this.getClass().getResource(fname)-->Line_26 $$ if (url != null) [ FD ]
Line_26 $$ if (url != null) -->Line_27 $$ InputStream from = null[ CD ]
Line_26 $$ if (url != null) -->Line_28 $$ FileOutputStream to = null[ CD ]
Line_27 $$ InputStream from = null-->Line_31 $$ from = url.openStream()[ FD ]
Line_31 $$ from = url.openStream()-->Line_31 $$ from = url.openStream()[ FD ]
Line_31 $$ from = url.openStream()-->Line_31 $$ from = url.openStream()[ CD ]
Line_25 $$ URL url = this.getClass().getResource(fname)-->Line_31 $$ from = url.openStream()[ FD ]
Line_28 $$ FileOutputStream to = null-->Line_32 $$ to = new FileOutputStream(newfile)[ FD ]
Line_32 $$ to = new FileOutputStream(newfile)-->Line_32 $$ to = new FileOutputStream(newfile)[ FD ]
Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) -->Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) [ FD ]
Line_33 $$ int bytes_read = 0-->Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) [ FD ]
Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) -->Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) [ CD ]
Line_27 $$ InputStream from = null-->Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) [ FD ]
Line_31 $$ from = url.openStream()-->Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) [ FD ]
Line_30 $$ byte[] buffer = new byte[4096]-->Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) [ FD ]
Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) -->Line_35 $$ to.write(buffer, 0, bytes_read)[ CD ]
Line_28 $$ FileOutputStream to = null-->Line_35 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_32 $$ to = new FileOutputStream(newfile)-->Line_35 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_30 $$ byte[] buffer = new byte[4096]-->Line_35 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) -->Line_35 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_33 $$ int bytes_read = 0-->Line_35 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_4 $$ DomainNameTree newmap = new DomainNameTree()-->Line_37 $$ newmap.insert(new DomainNameNode(dname, newname))[ FD ]
Line_27 $$ InputStream from = null-->Line_41 $$ if (from != null) [ FD ]
Line_31 $$ from = url.openStream()-->Line_41 $$ if (from != null) [ FD ]
Line_27 $$ InputStream from = null-->Line_43 $$ from.close()[ FD ]
Line_31 $$ from = url.openStream()-->Line_43 $$ from.close()[ FD ]
Line_28 $$ FileOutputStream to = null-->Line_48 $$ if (to != null) [ FD ]
Line_32 $$ to = new FileOutputStream(newfile)-->Line_48 $$ if (to != null) [ FD ]
Line_28 $$ FileOutputStream to = null-->Line_50 $$ to.close()[ FD ]
Line_32 $$ to = new FileOutputStream(newfile)-->Line_50 $$ to.close()[ FD ]
Line_2 $$ public void populateDefaultIcons() -->Line_62 $$ int s = JOptionPane.showConfirmDialog(null, "Save default mappings in " + this.usrConfigFile + "?", "Icon directory populated...", JOptionPane.YES_NO_CANCEL_OPTION)[ CD ]
Line_2 $$ public void populateDefaultIcons() -->Line_63 $$ if (s == JOptionPane.YES_OPTION) [ CD ]
Line_7 $$ int s = JOptionPane.showConfirmDialog(null, "Create icon directory " + this.usrIconDir + "?", "Icon directory does not exist!", JOptionPane.YES_NO_CANCEL_OPTION)-->Line_63 $$ if (s == JOptionPane.YES_OPTION) [ FD ]
Line_63 $$ if (s == JOptionPane.YES_OPTION) -->Line_64 $$ saveToRegistry(newmap)[ CD ]
Line_4 $$ DomainNameTree newmap = new DomainNameTree()-->Line_64 $$ saveToRegistry(newmap)[ FD ]
Line_17 $$ String dname = (String) iter.next()-->Line_18 $$ String fname = defaultmap.getImageFile(dname)[ FD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_19 $$ if (fname != null) [ FD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_21 $$ if (!fname.equals("null")) [ FD ]
Line_22 $$ File file = new File(fname)-->Line_23 $$ String newname = this.usrIconDir.concat(File.separator).concat(file.getName())[ FD ]
Line_18 $$ String fname = defaultmap.getImageFile(dname)-->Line_25 $$ URL url = this.getClass().getResource(fname)[ FD ]
Line_25 $$ URL url = this.getClass().getResource(fname)-->Line_26 $$ if (url != null) [ FD ]
Line_25 $$ URL url = this.getClass().getResource(fname)-->Line_31 $$ from = url.openStream()[ FD ]
Line_27 $$ InputStream from = null-->Line_41 $$ if (from != null) [ FD ]
Line_31 $$ from = url.openStream()-->Line_41 $$ if (from != null) [ FD ]
Line_27 $$ InputStream from = null-->Line_43 $$ from.close()[ FD ]
Line_31 $$ from = url.openStream()-->Line_43 $$ from.close()[ FD ]
Line_28 $$ FileOutputStream to = null-->Line_48 $$ if (to != null) [ FD ]
Line_32 $$ to = new FileOutputStream(newfile)-->Line_48 $$ if (to != null) [ FD ]
Line_28 $$ FileOutputStream to = null-->Line_50 $$ to.close()[ FD ]
Line_32 $$ to = new FileOutputStream(newfile)-->Line_50 $$ to.close()[ FD ]
Line_34 $$ while ((bytes_read = from.read(buffer)) != -1) -->Line_35 $$ to.write(buffer, 0, bytes_read)[ FD ]
