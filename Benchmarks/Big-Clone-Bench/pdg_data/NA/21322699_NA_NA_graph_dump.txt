Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void zipUp() throws PersistenceException [ CD ]
Line_2 $$ public void zipUp() throws PersistenceException -->Line_3 $$ ZipOutputStream out = null[ CD ]
Line_5 $$ if (!backup.exists())-->Line_5 $$ if (!backup.exists())[ CD ]
Line_5 $$ if (!backup.exists())-->Line_5 $$ if (!backup.exists())[ CD ]
Line_5 $$ if (!backup.exists())-->Line_5 $$ backup.createNewFile()[ CD ]
Line_3 $$ ZipOutputStream out = null-->Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))[ FD ]
Line_3 $$ ZipOutputStream out = null-->Line_7 $$ out.setLevel(Deflater.DEFAULT_COMPRESSION)[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_7 $$ out.setLevel(Deflater.DEFAULT_COMPRESSION)[ FD ]
Line_10 $$ FileInputStream in = null-->Line_12 $$ in = new FileInputStream(new File(backupDirectory, file))[ FD ]
Line_12 $$ in = new FileInputStream(new File(backupDirectory, file))-->Line_12 $$ in = new FileInputStream(new File(backupDirectory, file))[ FD ]
Line_3 $$ ZipOutputStream out = null-->Line_13 $$ out.putNextEntry(new ZipEntry(file))[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_13 $$ out.putNextEntry(new ZipEntry(file))[ FD ]
Line_10 $$ FileInputStream in = null-->Line_14 $$ IOUtils.copy(in, out)[ FD ]
Line_12 $$ in = new FileInputStream(new File(backupDirectory, file))-->Line_14 $$ IOUtils.copy(in, out)[ FD ]
Line_3 $$ ZipOutputStream out = null-->Line_14 $$ IOUtils.copy(in, out)[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_14 $$ IOUtils.copy(in, out)[ FD ]
Line_3 $$ ZipOutputStream out = null-->Line_16 $$ out.closeEntry()[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_16 $$ out.closeEntry()[ FD ]
Line_10 $$ FileInputStream in = null-->Line_17 $$ if (null != in)[ FD ]
Line_12 $$ in = new FileInputStream(new File(backupDirectory, file))-->Line_17 $$ if (null != in)[ FD ]
Line_17 $$ if (null != in)-->Line_17 $$ in.close()[ CD ]
Line_10 $$ FileInputStream in = null-->Line_17 $$ in.close()[ FD ]
Line_12 $$ in = new FileInputStream(new File(backupDirectory, file))-->Line_17 $$ in.close()[ FD ]
Line_3 $$ ZipOutputStream out = null-->Line_26 $$ if (null != out)[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_26 $$ if (null != out)[ FD ]
Line_26 $$ if (null != out)-->Line_26 $$ out.close()[ CD ]
Line_3 $$ ZipOutputStream out = null-->Line_26 $$ out.close()[ FD ]
Line_6 $$ out = new ZipOutputStream(new FileOutputStream(backup))-->Line_26 $$ out.close()[ FD ]
