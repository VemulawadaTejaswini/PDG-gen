Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception [ CD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_3 $$ String path = req.getParameter("path")[ CD ]
Line_3 $$ String path = req.getParameter("path")-->Line_3 $$ String path = req.getParameter("path")[ CD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_3 $$ String path = req.getParameter("path")[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_4 $$ path = URLDecoder.decode(path, "UTF-8")[ CD ]
Line_3 $$ String path = req.getParameter("path")-->Line_4 $$ path = URLDecoder.decode(path, "UTF-8")[ FD ]
Line_4 $$ path = URLDecoder.decode(path, "UTF-8")-->Line_4 $$ path = URLDecoder.decode(path, "UTF-8")[ FD ]
Line_4 $$ path = URLDecoder.decode(path, "UTF-8")-->Line_4 $$ path = URLDecoder.decode(path, "UTF-8")[ CD ]
Line_3 $$ String path = req.getParameter("path")-->Line_4 $$ path = URLDecoder.decode(path, "UTF-8")[ FD ]
Line_4 $$ path = URLDecoder.decode(path, "UTF-8")-->Line_4 $$ path = URLDecoder.decode(path, "UTF-8")[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_5 $$ String name = req.getParameter("name")[ CD ]
Line_5 $$ String name = req.getParameter("name")-->Line_5 $$ String name = req.getParameter("name")[ CD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_5 $$ String name = req.getParameter("name")[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_6 $$ name = new String(name.getBytes(), "UTF-8")[ CD ]
Line_5 $$ String name = req.getParameter("name")-->Line_6 $$ name = new String(name.getBytes(), "UTF-8")[ FD ]
Line_6 $$ name = new String(name.getBytes(), "UTF-8")-->Line_6 $$ name = new String(name.getBytes(), "UTF-8")[ FD ]
Line_5 $$ String name = req.getParameter("name")-->Line_6 $$ name = new String(name.getBytes(), "UTF-8")[ FD ]
Line_6 $$ name = new String(name.getBytes(), "UTF-8")-->Line_6 $$ name = new String(name.getBytes(), "UTF-8")[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_7 $$ String contentType = req.getParameter("contentType")[ CD ]
Line_7 $$ String contentType = req.getParameter("contentType")-->Line_7 $$ String contentType = req.getParameter("contentType")[ CD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_7 $$ String contentType = req.getParameter("contentType")[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_8 $$ if (path == null) [ CD ]
Line_3 $$ String path = req.getParameter("path")-->Line_8 $$ if (path == null) [ FD ]
Line_4 $$ path = URLDecoder.decode(path, "UTF-8")-->Line_8 $$ if (path == null) [ FD ]
Line_8 $$ if (path == null) -->Line_9 $$ NullPointerException e = new NullPointerException("The path attribute cannot be retrieved.")[ CD ]
Line_8 $$ if (path == null) -->Line_10 $$ LOG.error(e)[ CD ]
Line_9 $$ NullPointerException e = new NullPointerException("The path attribute cannot be retrieved.")-->Line_10 $$ LOG.error(e)[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_13 $$ URL url = new URL(path)[ CD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_14 $$ InputStream inStream = null[ CD ]
Line_14 $$ InputStream inStream = null-->Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())[ FD ]
Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())-->Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())[ FD ]
Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())-->Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())[ CD ]
Line_13 $$ URL url = new URL(path)-->Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_17 $$ res.setContentType(contentType)[ FD ]
Line_7 $$ String contentType = req.getParameter("contentType")-->Line_17 $$ res.setContentType(contentType)[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_18 $$ res.addHeader("Content-Disposition", "attachment;filename=\"" + name + "\"")[ FD ]
Line_19 $$ ServletOutputStream out = res.getOutputStream()-->Line_19 $$ ServletOutputStream out = res.getOutputStream()[ CD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_19 $$ ServletOutputStream out = res.getOutputStream()[ FD ]
Line_14 $$ InputStream inStream = null-->Line_20 $$ IOUtils.copy(inStream, out)[ FD ]
Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())-->Line_20 $$ IOUtils.copy(inStream, out)[ FD ]
Line_19 $$ ServletOutputStream out = res.getOutputStream()-->Line_20 $$ IOUtils.copy(inStream, out)[ FD ]
Line_2 $$ public void execute(HttpServletRequest req, HttpServletResponse res, HttpServlet parent) throws Exception -->Line_21 $$ res.flushBuffer()[ FD ]
Line_14 $$ InputStream inStream = null-->Line_23 $$ if (inStream != null) [ FD ]
Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())-->Line_23 $$ if (inStream != null) [ FD ]
Line_23 $$ if (inStream != null) -->Line_24 $$ inStream.close()[ CD ]
Line_14 $$ InputStream inStream = null-->Line_24 $$ inStream.close()[ FD ]
Line_16 $$ inStream = URLUtils.getFileContent(url, req.getSession().getId())-->Line_24 $$ inStream.close()[ FD ]
