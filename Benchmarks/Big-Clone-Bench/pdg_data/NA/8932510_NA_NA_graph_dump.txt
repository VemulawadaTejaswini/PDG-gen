Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException [ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_3 $$ InputStream is = null[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_4 $$ InputStream page = null[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_5 $$ OutputStream os = null[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_6 $$ String rootUrl = null[ CD ]
Line_8 $$ boolean isMultipart = ServletFileUpload.isMultipartContent(request)-->Line_8 $$ boolean isMultipart = ServletFileUpload.isMultipartContent(request)[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_8 $$ boolean isMultipart = ServletFileUpload.isMultipartContent(request)[ FD ]
Line_8 $$ boolean isMultipart = ServletFileUpload.isMultipartContent(request)-->Line_9 $$ if (!isMultipart) [ FD ]
Line_9 $$ if (!isMultipart) -->Line_9 $$ if (!isMultipart) [ CD ]
Line_8 $$ boolean isMultipart = ServletFileUpload.isMultipartContent(request)-->Line_9 $$ if (!isMultipart) [ FD ]
Line_9 $$ if (!isMultipart) -->Line_10 $$ request.setAttribute("error", "Form isn't a multipart form")[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_10 $$ request.setAttribute("error", "Form isn't a multipart form")[ FD ]
Line_9 $$ if (!isMultipart) -->Line_11 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")[ CD ]
Line_11 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")-->Line_11 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_11 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")[ FD ]
Line_9 $$ if (!isMultipart) -->Line_12 $$ rd.forward(request, response)[ CD ]
Line_11 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")-->Line_12 $$ rd.forward(request, response)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_12 $$ rd.forward(request, response)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_12 $$ rd.forward(request, response)[ FD ]
Line_16 $$ FileItemIterator iter = upload.getItemIterator(request)-->Line_16 $$ FileItemIterator iter = upload.getItemIterator(request)[ CD ]
Line_14 $$ ServletFileUpload upload = new ServletFileUpload()-->Line_16 $$ FileItemIterator iter = upload.getItemIterator(request)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_16 $$ FileItemIterator iter = upload.getItemIterator(request)[ FD ]
Line_17 $$ while (iter.hasNext()) -->Line_17 $$ while (iter.hasNext()) [ CD ]
Line_16 $$ FileItemIterator iter = upload.getItemIterator(request)-->Line_17 $$ while (iter.hasNext()) [ FD ]
Line_17 $$ while (iter.hasNext()) -->Line_18 $$ FileItemStream item = iter.next()[ CD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_18 $$ FileItemStream item = iter.next()[ CD ]
Line_16 $$ FileItemIterator iter = upload.getItemIterator(request)-->Line_18 $$ FileItemStream item = iter.next()[ FD ]
Line_17 $$ while (iter.hasNext()) -->Line_19 $$ String name = item.getFieldName()[ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_19 $$ String name = item.getFieldName()[ CD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_19 $$ String name = item.getFieldName()[ FD ]
Line_17 $$ while (iter.hasNext()) -->Line_20 $$ if (name.equals("webpage")) [ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_20 $$ if (name.equals("webpage")) [ FD ]
Line_20 $$ if (name.equals("webpage")) -->Line_20 $$ if (name.equals("webpage")) [ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_20 $$ if (name.equals("webpage")) [ FD ]
Line_20 $$ if (name.equals("webpage")) -->Line_21 $$ is = item.openStream()[ CD ]
Line_21 $$ is = item.openStream()-->Line_21 $$ is = item.openStream()[ FD ]
Line_3 $$ InputStream is = null-->Line_21 $$ is = item.openStream()[ FD ]
Line_21 $$ is = item.openStream()-->Line_21 $$ is = item.openStream()[ CD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_21 $$ is = item.openStream()[ FD ]
Line_20 $$ if (name.equals("webpage")) -->Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_20 $$ if (name.equals("webpage")) -->Line_23 $$ IOUtils.copy(is, baos)[ CD ]
Line_21 $$ is = item.openStream()-->Line_23 $$ IOUtils.copy(is, baos)[ FD ]
Line_3 $$ InputStream is = null-->Line_23 $$ IOUtils.copy(is, baos)[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_23 $$ IOUtils.copy(is, baos)[ FD ]
Line_20 $$ if (name.equals("webpage")) -->Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())[ CD ]
Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_4 $$ InputStream page = null-->Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_20 $$ if (name.equals("webpage")) -->Line_25 $$ if (name.equals("weburl")) [ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_25 $$ if (name.equals("weburl")) [ FD ]
Line_25 $$ if (name.equals("weburl")) -->Line_25 $$ if (name.equals("weburl")) [ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_25 $$ if (name.equals("weburl")) [ FD ]
Line_25 $$ if (name.equals("weburl")) -->Line_26 $$ InputStream wpIs = null[ CD ]
Line_28 $$ webUrl = Streams.asString(item.openStream())-->Line_28 $$ webUrl = Streams.asString(item.openStream())[ FD ]
Line_15 $$ String webUrl = null-->Line_28 $$ webUrl = Streams.asString(item.openStream())[ FD ]
Line_28 $$ webUrl = Streams.asString(item.openStream())-->Line_28 $$ webUrl = Streams.asString(item.openStream())[ CD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_28 $$ webUrl = Streams.asString(item.openStream())[ FD ]
Line_26 $$ InputStream wpIs = null-->Line_30 $$ wpIs = new BufferedInputStream(u.openStream())[ FD ]
Line_30 $$ wpIs = new BufferedInputStream(u.openStream())-->Line_30 $$ wpIs = new BufferedInputStream(u.openStream())[ FD ]
Line_29 $$ URL u = new URL(webUrl)-->Line_30 $$ wpIs = new BufferedInputStream(u.openStream())[ FD ]
Line_26 $$ InputStream wpIs = null-->Line_32 $$ IOUtils.copy(wpIs, baos)[ FD ]
Line_30 $$ wpIs = new BufferedInputStream(u.openStream())-->Line_32 $$ IOUtils.copy(wpIs, baos)[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_32 $$ IOUtils.copy(wpIs, baos)[ FD ]
Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_4 $$ InputStream page = null-->Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_26 $$ InputStream wpIs = null-->Line_35 $$ IOUtils.closeQuietly(wpIs)[ FD ]
Line_30 $$ wpIs = new BufferedInputStream(u.openStream())-->Line_35 $$ IOUtils.closeQuietly(wpIs)[ FD ]
Line_25 $$ if (name.equals("weburl")) -->Line_37 $$ if (name.equals("rooturl")) [ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_37 $$ if (name.equals("rooturl")) [ FD ]
Line_37 $$ if (name.equals("rooturl")) -->Line_37 $$ if (name.equals("rooturl")) [ CD ]
Line_19 $$ String name = item.getFieldName()-->Line_37 $$ if (name.equals("rooturl")) [ FD ]
Line_37 $$ if (name.equals("rooturl")) -->Line_38 $$ rootUrl = Streams.asString(item.openStream())[ CD ]
Line_38 $$ rootUrl = Streams.asString(item.openStream())-->Line_38 $$ rootUrl = Streams.asString(item.openStream())[ FD ]
Line_6 $$ String rootUrl = null-->Line_38 $$ rootUrl = Streams.asString(item.openStream())[ FD ]
Line_38 $$ rootUrl = Streams.asString(item.openStream())-->Line_38 $$ rootUrl = Streams.asString(item.openStream())[ CD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_38 $$ rootUrl = Streams.asString(item.openStream())[ FD ]
Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_41 $$ if (page == null) [ FD ]
Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_41 $$ if (page == null) [ FD ]
Line_4 $$ InputStream page = null-->Line_41 $$ if (page == null) [ FD ]
Line_41 $$ if (page == null) -->Line_42 $$ request.setAttribute("error", "Form doesn't have an html file")[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_42 $$ request.setAttribute("error", "Form doesn't have an html file")[ FD ]
Line_41 $$ if (page == null) -->Line_43 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_43 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")[ FD ]
Line_41 $$ if (page == null) -->Line_44 $$ rd.forward(request, response)[ CD ]
Line_11 $$ RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/error.jsp")-->Line_44 $$ rd.forward(request, response)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_44 $$ rd.forward(request, response)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_44 $$ rd.forward(request, response)[ FD ]
Line_5 $$ OutputStream os = null-->Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())[ FD ]
Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())-->Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())[ FD ]
Line_5 $$ OutputStream os = null-->Line_48 $$ os.write(delegate.getMailer())[ FD ]
Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())-->Line_48 $$ os.write(delegate.getMailer())[ FD ]
Line_46 $$ ToMailerDelegate delegate = new ToMailerDelegate(page, rootUrl)-->Line_48 $$ os.write(delegate.getMailer())[ FD ]
Line_5 $$ OutputStream os = null-->Line_49 $$ os.flush()[ FD ]
Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())-->Line_49 $$ os.flush()[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_51 $$ streamException(request, response, e)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_51 $$ streamException(request, response, e)[ FD ]
Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_53 $$ IOUtils.closeQuietly(page)[ FD ]
Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())-->Line_53 $$ IOUtils.closeQuietly(page)[ FD ]
Line_4 $$ InputStream page = null-->Line_53 $$ IOUtils.closeQuietly(page)[ FD ]
Line_21 $$ is = item.openStream()-->Line_54 $$ IOUtils.closeQuietly(is)[ FD ]
Line_3 $$ InputStream is = null-->Line_54 $$ IOUtils.closeQuietly(is)[ FD ]
Line_5 $$ OutputStream os = null-->Line_55 $$ IOUtils.closeQuietly(os)[ FD ]
Line_47 $$ os = new BufferedOutputStream(response.getOutputStream())-->Line_55 $$ IOUtils.closeQuietly(os)[ FD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_19 $$ String name = item.getFieldName()[ FD ]
Line_19 $$ String name = item.getFieldName()-->Line_20 $$ if (name.equals("webpage")) [ FD ]
Line_19 $$ String name = item.getFieldName()-->Line_20 $$ if (name.equals("webpage")) [ FD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_21 $$ is = item.openStream()[ FD ]
Line_21 $$ is = item.openStream()-->Line_23 $$ IOUtils.copy(is, baos)[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_23 $$ IOUtils.copy(is, baos)[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_24 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_19 $$ String name = item.getFieldName()-->Line_25 $$ if (name.equals("weburl")) [ FD ]
Line_19 $$ String name = item.getFieldName()-->Line_25 $$ if (name.equals("weburl")) [ FD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_28 $$ webUrl = Streams.asString(item.openStream())[ FD ]
Line_29 $$ URL u = new URL(webUrl)-->Line_30 $$ wpIs = new BufferedInputStream(u.openStream())[ FD ]
Line_26 $$ InputStream wpIs = null-->Line_32 $$ IOUtils.copy(wpIs, baos)[ FD ]
Line_30 $$ wpIs = new BufferedInputStream(u.openStream())-->Line_32 $$ IOUtils.copy(wpIs, baos)[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_32 $$ IOUtils.copy(wpIs, baos)[ FD ]
Line_22 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_33 $$ page = new ByteArrayInputStream(baos.toByteArray())[ FD ]
Line_26 $$ InputStream wpIs = null-->Line_35 $$ IOUtils.closeQuietly(wpIs)[ FD ]
Line_30 $$ wpIs = new BufferedInputStream(u.openStream())-->Line_35 $$ IOUtils.closeQuietly(wpIs)[ FD ]
Line_19 $$ String name = item.getFieldName()-->Line_37 $$ if (name.equals("rooturl")) [ FD ]
Line_19 $$ String name = item.getFieldName()-->Line_37 $$ if (name.equals("rooturl")) [ FD ]
Line_18 $$ FileItemStream item = iter.next()-->Line_38 $$ rootUrl = Streams.asString(item.openStream())[ FD ]
