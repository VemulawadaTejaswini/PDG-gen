Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void writeToFtp(String login, String password, String address, String directory, String filename) [ CD ]
Line_2 $$ public void writeToFtp(String login, String password, String address, String directory, String filename) -->Line_3 $$ String newline = System.getProperty("line.separator")[ CD ]
Line_3 $$ String newline = System.getProperty("line.separator")-->Line_3 $$ String newline = System.getProperty("line.separator")[ CD ]
Line_6 $$ URLConnection urlConn = url.openConnection()-->Line_6 $$ URLConnection urlConn = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL("ftp://" + login + ":" + password + "@ftp." + address + directory + filename + ".html" + ";type=i")-->Line_6 $$ URLConnection urlConn = url.openConnection()[ FD ]
Line_6 $$ URLConnection urlConn = url.openConnection()-->Line_7 $$ urlConn.setDoOutput(true)[ FD ]
Line_6 $$ URLConnection urlConn = url.openConnection()-->Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())[ FD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_9 $$ stream.write("<html><title>" + title + "</title>" + newline)[ FD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_10 $$ stream.write("<h1><b>" + title + "</b></h1>" + newline)[ FD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_11 $$ stream.write("<h2>Table Of Contents:</h2><ul>" + newline)[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ CD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ CD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ CD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_13 $$ stream.write("<li><i><a href=\"#")[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_13 $$ stream.write("<li><i><a href=\"#")[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_14 $$ stream.write(readNoteTitle(k))[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_14 $$ stream.write(readNoteTitle(k))[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_14 $$ stream.write(readNoteTitle(k))[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_15 $$ stream.write("\">")[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_15 $$ stream.write("\">")[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_16 $$ stream.write(readNoteTitle(k))[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_16 $$ stream.write(readNoteTitle(k))[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_16 $$ stream.write(readNoteTitle(k))[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_17 $$ stream.write("</a></i></li>" + newline)[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_17 $$ stream.write("</a></i></li>" + newline)[ FD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_19 $$ stream.write("</ul><hr>" + newline + newline)[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ CD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ CD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_21 $$ stream.write("<h3><b>")[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_21 $$ stream.write("<h3><b>")[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_22 $$ stream.write("<a name=\"")[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_22 $$ stream.write("<a name=\"")[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_23 $$ stream.write(readNoteTitle(k))[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_23 $$ stream.write(readNoteTitle(k))[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_23 $$ stream.write(readNoteTitle(k))[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_23 $$ stream.write(readNoteTitle(k))[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_24 $$ stream.write("\">")[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_24 $$ stream.write("\">")[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_25 $$ stream.write(readNoteTitle(k) + "</a>")[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_25 $$ stream.write(readNoteTitle(k) + "</a>")[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_25 $$ stream.write(readNoteTitle(k) + "</a>")[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_25 $$ stream.write(readNoteTitle(k) + "</a>")[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_26 $$ stream.write("</b></h3>" + newline)[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_26 $$ stream.write("</b></h3>" + newline)[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_27 $$ stream.write(readNoteBody(k) + newline)[ CD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_27 $$ stream.write(readNoteBody(k) + newline)[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_27 $$ stream.write(readNoteBody(k) + newline)[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_27 $$ stream.write(readNoteBody(k) + newline)[ FD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_29 $$ stream.write(newline + "<br><hr><a>This was created using Scribe, a free crutch editor.</a></html>")[ FD ]
Line_8 $$ OutputStreamWriter stream = new OutputStreamWriter(urlConn.getOutputStream())-->Line_30 $$ stream.close()[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_12 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_14 $$ stream.write(readNoteTitle(k))[ FD ]
Line_12 $$ for (int k = 0; k < rings.size(); k++) -->Line_16 $$ stream.write(readNoteTitle(k))[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_20 $$ for (int k = 0; k < rings.size(); k++) [ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_23 $$ stream.write(readNoteTitle(k))[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_25 $$ stream.write(readNoteTitle(k) + "</a>")[ FD ]
Line_20 $$ for (int k = 0; k < rings.size(); k++) -->Line_27 $$ stream.write(readNoteBody(k) + newline)[ FD ]
