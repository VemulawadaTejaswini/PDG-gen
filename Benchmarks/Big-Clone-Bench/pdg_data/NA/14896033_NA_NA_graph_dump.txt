Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException [ CD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_3 $$ LOG.debug("Copying SMALL file '" + sourceFile.getAbsolutePath() + "' to '" + targetFile.getAbsolutePath() + "'.")[ CD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_3 $$ LOG.debug("Copying SMALL file '" + sourceFile.getAbsolutePath() + "' to '" + targetFile.getAbsolutePath() + "'.")[ FD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_3 $$ LOG.debug("Copying SMALL file '" + sourceFile.getAbsolutePath() + "' to '" + targetFile.getAbsolutePath() + "'.")[ FD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_4 $$ FileChannel inChannel = null[ CD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_5 $$ FileChannel outChannel = null[ CD ]
Line_4 $$ FileChannel inChannel = null-->Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()[ FD ]
Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()-->Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()[ FD ]
Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()-->Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()[ CD ]
Line_5 $$ FileChannel outChannel = null-->Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()[ FD ]
Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()-->Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()[ FD ]
Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()-->Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()[ CD ]
Line_4 $$ FileChannel inChannel = null-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_5 $$ FileChannel outChannel = null-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_4 $$ FileChannel inChannel = null-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_11 $$ throw new BusinessException("Could not copy file from '" + sourceFile.getAbsolutePath() + "' to '" + targetFile.getAbsolutePath() + "'!", e)[ FD ]
Line_2 $$ private static void copySmallFile(File sourceFile, File targetFile) throws BusinessException -->Line_11 $$ throw new BusinessException("Could not copy file from '" + sourceFile.getAbsolutePath() + "' to '" + targetFile.getAbsolutePath() + "'!", e)[ FD ]
Line_4 $$ FileChannel inChannel = null-->Line_14 $$ if (inChannel != null)[ FD ]
Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()-->Line_14 $$ if (inChannel != null)[ FD ]
Line_14 $$ if (inChannel != null)-->Line_14 $$ inChannel.close()[ CD ]
Line_4 $$ FileChannel inChannel = null-->Line_14 $$ inChannel.close()[ FD ]
Line_7 $$ inChannel = new FileInputStream(sourceFile).getChannel()-->Line_14 $$ inChannel.close()[ FD ]
Line_5 $$ FileChannel outChannel = null-->Line_19 $$ if (outChannel != null)[ FD ]
Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()-->Line_19 $$ if (outChannel != null)[ FD ]
Line_19 $$ if (outChannel != null)-->Line_19 $$ outChannel.close()[ CD ]
Line_5 $$ FileChannel outChannel = null-->Line_19 $$ outChannel.close()[ FD ]
Line_8 $$ outChannel = new FileOutputStream(targetFile).getChannel()-->Line_19 $$ outChannel.close()[ FD ]
