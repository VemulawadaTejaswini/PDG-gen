Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected IRunnableWithProgress getProjectCreationRunnable() [ CD ]
Line_2 $$ protected IRunnableWithProgress getProjectCreationRunnable() -->Line_3 $$ return new IRunnableWithProgress() [ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_5 $$ int remainingWorkUnits = 10[ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_6 $$ monitor.beginTask("New Modulo Project Creation", remainingWorkUnits)[ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_6 $$ monitor.beginTask("New Modulo Project Creation", remainingWorkUnits)[ FD ]
Line_5 $$ int remainingWorkUnits = 10-->Line_6 $$ monitor.beginTask("New Modulo Project Creation", remainingWorkUnits)[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_7 $$ IWorkspace ws = ResourcesPlugin.getWorkspace()[ CD ]
Line_7 $$ IWorkspace ws = ResourcesPlugin.getWorkspace()-->Line_7 $$ IWorkspace ws = ResourcesPlugin.getWorkspace()[ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_8 $$ newProject = fMainPage.getProjectHandle()[ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())[ CD ]
Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())-->Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())[ CD ]
Line_7 $$ IWorkspace ws = ResourcesPlugin.getWorkspace()-->Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_10 $$ String[] natures = [ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_11 $$ description.setNatureIds(natures)[ CD ]
Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())-->Line_11 $$ description.setNatureIds(natures)[ FD ]
Line_10 $$ String[] natures = -->Line_11 $$ description.setNatureIds(natures)[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_12 $$ ICommand command = description.newCommand()[ CD ]
Line_12 $$ ICommand command = description.newCommand()-->Line_12 $$ ICommand command = description.newCommand()[ CD ]
Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())-->Line_12 $$ ICommand command = description.newCommand()[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_13 $$ command.setBuilderName(JavaCore.BUILDER_ID)[ CD ]
Line_12 $$ ICommand command = description.newCommand()-->Line_13 $$ command.setBuilderName(JavaCore.BUILDER_ID)[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_14 $$ ICommand[] commands = [ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_15 $$ description.setBuildSpec(commands)[ CD ]
Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())-->Line_15 $$ description.setBuildSpec(commands)[ FD ]
Line_14 $$ ICommand[] commands = -->Line_15 $$ description.setBuildSpec(commands)[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_16 $$ IJavaProject jproject = JavaCore.create(newProject)[ CD ]
Line_16 $$ IJavaProject jproject = JavaCore.create(newProject)-->Line_16 $$ IJavaProject jproject = JavaCore.create(newProject)[ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_17 $$ ModuloProject modProj = new ModuloProject()[ CD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_18 $$ modProj.setJavaProject(jproject)[ CD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_18 $$ modProj.setJavaProject(jproject)[ FD ]
Line_16 $$ IJavaProject jproject = JavaCore.create(newProject)-->Line_18 $$ modProj.setJavaProject(jproject)[ FD ]
Line_9 $$ IProjectDescription description = ws.newProjectDescription(newProject.getName())-->Line_20 $$ newProject.create(description, new SubProgressMonitor(monitor, 1))[ FD ]
Line_22 $$ IFolder srcFolder = newProject.getFolder("src")-->Line_22 $$ IFolder srcFolder = newProject.getFolder("src")[ CD ]
Line_23 $$ IFolder javaFolder = srcFolder.getFolder("java")-->Line_23 $$ IFolder javaFolder = srcFolder.getFolder("java")[ CD ]
Line_22 $$ IFolder srcFolder = newProject.getFolder("src")-->Line_23 $$ IFolder javaFolder = srcFolder.getFolder("java")[ FD ]
Line_24 $$ IFolder buildFolder = newProject.getFolder("build")-->Line_24 $$ IFolder buildFolder = newProject.getFolder("build")[ CD ]
Line_25 $$ IFolder classesFolder = buildFolder.getFolder("classes")-->Line_25 $$ IFolder classesFolder = buildFolder.getFolder("classes")[ CD ]
Line_24 $$ IFolder buildFolder = newProject.getFolder("build")-->Line_25 $$ IFolder classesFolder = buildFolder.getFolder("classes")[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_26 $$ modProj.createFolder(srcFolder)[ FD ]
Line_22 $$ IFolder srcFolder = newProject.getFolder("src")-->Line_26 $$ modProj.createFolder(srcFolder)[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_27 $$ modProj.createFolder(javaFolder)[ FD ]
Line_23 $$ IFolder javaFolder = srcFolder.getFolder("java")-->Line_27 $$ modProj.createFolder(javaFolder)[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_28 $$ modProj.createFolder(buildFolder)[ FD ]
Line_24 $$ IFolder buildFolder = newProject.getFolder("build")-->Line_28 $$ modProj.createFolder(buildFolder)[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_29 $$ modProj.createFolder(classesFolder)[ FD ]
Line_25 $$ IFolder classesFolder = buildFolder.getFolder("classes")-->Line_29 $$ modProj.createFolder(classesFolder)[ FD ]
Line_30 $$ IPath buildPath = newProject.getFolder("build/classes").getFullPath()-->Line_30 $$ IPath buildPath = newProject.getFolder("build/classes").getFullPath()[ CD ]
Line_16 $$ IJavaProject jproject = JavaCore.create(newProject)-->Line_31 $$ jproject.setOutputLocation(buildPath, new SubProgressMonitor(monitor, 1))[ FD ]
Line_30 $$ IPath buildPath = newProject.getFolder("build/classes").getFullPath()-->Line_31 $$ jproject.setOutputLocation(buildPath, new SubProgressMonitor(monitor, 1))[ FD ]
Line_16 $$ IJavaProject jproject = JavaCore.create(newProject)-->Line_33 $$ jproject.setRawClasspath(entries, new SubProgressMonitor(monitor, 1))[ FD ]
Line_32 $$ IClasspathEntry[] entries = new IClasspathEntry[] -->Line_33 $$ jproject.setRawClasspath(entries, new SubProgressMonitor(monitor, 1))[ FD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_35 $$ definition.setId(fModuloPage.getPackageName())[ FD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_36 $$ definition.setVersion(new VersionNumber(1, 0, 0))[ FD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_37 $$ definition.setMetaName(fModuloPage.getModuleName())[ FD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_38 $$ definition.setMetaDescription("The " + fModuloPage.getModuleName() + " Module.")[ FD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_39 $$ definition.setModuleClassName(fModuloPage.getPackageName() + "." + fModuloPage.getModuleClassName())[ FD ]
Line_40 $$ if (fModuloPage.isConfigSelectioned())-->Line_40 $$ if (fModuloPage.isConfigSelectioned())[ CD ]
Line_40 $$ if (fModuloPage.isConfigSelectioned())-->Line_40 $$ definition.setConfigurationClassName(fModuloPage.getPackageName() + "." + fModuloPage.getConfigClassName())[ CD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_40 $$ definition.setConfigurationClassName(fModuloPage.getPackageName() + "." + fModuloPage.getConfigClassName())[ FD ]
Line_41 $$ if (fModuloPage.isStatSelectioned())-->Line_41 $$ if (fModuloPage.isStatSelectioned())[ CD ]
Line_41 $$ if (fModuloPage.isStatSelectioned())-->Line_41 $$ definition.setStatisticsClassName(fModuloPage.getPackageName() + "." + fModuloPage.getStatClassName())[ CD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_41 $$ definition.setStatisticsClassName(fModuloPage.getPackageName() + "." + fModuloPage.getStatClassName())[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_42 $$ modProj.setDefinition(definition)[ FD ]
Line_34 $$ ModuleDefinition definition = new ModuleDefinition()-->Line_42 $$ modProj.setDefinition(definition)[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_43 $$ modProj.createPackage()[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_44 $$ modProj.createModuleXML()[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_45 $$ modProj.createMainClass()[ FD ]
Line_46 $$ if (fModuloPage.isConfigSelectioned())-->Line_46 $$ if (fModuloPage.isConfigSelectioned())[ CD ]
Line_46 $$ if (fModuloPage.isConfigSelectioned())-->Line_46 $$ modProj.createConfigClass()[ CD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_46 $$ modProj.createConfigClass()[ FD ]
Line_47 $$ if (fModuloPage.isStatSelectioned())-->Line_47 $$ if (fModuloPage.isStatSelectioned())[ CD ]
Line_47 $$ if (fModuloPage.isStatSelectioned())-->Line_47 $$ modProj.createStatClass()[ CD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_47 $$ modProj.createStatClass()[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_48 $$ modProj.createModuleProperties()[ FD ]
Line_17 $$ ModuloProject modProj = new ModuloProject()-->Line_49 $$ modProj.createMessagesProperties()[ FD ]
Line_50 $$ IFolder binFolder = newProject.getFolder("bin")-->Line_50 $$ IFolder binFolder = newProject.getFolder("bin")[ CD ]
Line_50 $$ IFolder binFolder = newProject.getFolder("bin")-->Line_51 $$ binFolder.delete(true, new SubProgressMonitor(monitor, 1))[ FD ]
Line_3 $$ return new IRunnableWithProgress() -->Line_55 $$ monitor.done()[ FD ]
