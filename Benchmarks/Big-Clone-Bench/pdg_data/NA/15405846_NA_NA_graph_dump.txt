Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public DataSet guessAtUnknowns(String filename) [ CD ]
Line_2 $$ public DataSet guessAtUnknowns(String filename) -->Line_3 $$ TasselFileType guess = TasselFileType.Sequence[ CD ]
Line_2 $$ public DataSet guessAtUnknowns(String filename) -->Line_4 $$ DataSet tds = null[ CD ]
Line_2 $$ public DataSet guessAtUnknowns(String filename) -->Line_7 $$ if (filename.startsWith("http")) [ FD ]
Line_7 $$ if (filename.startsWith("http")) -->Line_7 $$ if (filename.startsWith("http")) [ CD ]
Line_2 $$ public DataSet guessAtUnknowns(String filename) -->Line_7 $$ if (filename.startsWith("http")) [ FD ]
Line_7 $$ if (filename.startsWith("http")) -->Line_8 $$ URL url = new URL(filename)[ CD ]
Line_7 $$ if (filename.startsWith("http")) -->Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_6 $$ BufferedReader br = null-->Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_8 $$ URL url = new URL(filename)-->Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_7 $$ if (filename.startsWith("http")) -->Line_11 $$ br = new BufferedReader(new FileReader(filename))[ CD ]
Line_6 $$ BufferedReader br = null-->Line_11 $$ br = new BufferedReader(new FileReader(filename))[ FD ]
Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_11 $$ br = new BufferedReader(new FileReader(filename))[ FD ]
Line_11 $$ br = new BufferedReader(new FileReader(filename))-->Line_11 $$ br = new BufferedReader(new FileReader(filename))[ FD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_13 $$ String line1 = br.readLine().trim()[ CD ]
Line_6 $$ BufferedReader br = null-->Line_13 $$ String line1 = br.readLine().trim()[ FD ]
Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_13 $$ String line1 = br.readLine().trim()[ FD ]
Line_11 $$ br = new BufferedReader(new FileReader(filename))-->Line_13 $$ String line1 = br.readLine().trim()[ FD ]
Line_14 $$ String[] sval1 = line1.split("\\s")-->Line_14 $$ String[] sval1 = line1.split("\\s")[ CD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_14 $$ String[] sval1 = line1.split("\\s")[ FD ]
Line_15 $$ String line2 = br.readLine().trim()-->Line_15 $$ String line2 = br.readLine().trim()[ CD ]
Line_6 $$ BufferedReader br = null-->Line_15 $$ String line2 = br.readLine().trim()[ FD ]
Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_15 $$ String line2 = br.readLine().trim()[ FD ]
Line_11 $$ br = new BufferedReader(new FileReader(filename))-->Line_15 $$ String line2 = br.readLine().trim()[ FD ]
Line_16 $$ String[] sval2 = line2.split("\\s")-->Line_16 $$ String[] sval2 = line2.split("\\s")[ CD ]
Line_15 $$ String line2 = br.readLine().trim()-->Line_16 $$ String[] sval2 = line2.split("\\s")[ FD ]
Line_18 $$ if (!sval1[0].startsWith("<") && (sval1.length == 2) && (line1.indexOf(':') < 0)) -->Line_18 $$ if (!sval1[0].startsWith("<") && (sval1.length == 2) && (line1.indexOf(':') < 0)) [ CD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_18 $$ if (!sval1[0].startsWith("<") && (sval1.length == 2) && (line1.indexOf(':') < 0)) [ FD ]
Line_18 $$ if (!sval1[0].startsWith("<") && (sval1.length == 2) && (line1.indexOf(':') < 0)) -->Line_19 $$ int countLoci = Integer.parseInt(sval1[1])[ CD ]
Line_19 $$ int countLoci = Integer.parseInt(sval1[1])-->Line_19 $$ int countLoci = Integer.parseInt(sval1[1])[ CD ]
Line_18 $$ if (!sval1[0].startsWith("<") && (sval1.length == 2) && (line1.indexOf(':') < 0)) -->Line_20 $$ if (countLoci == sval2.length) [ CD ]
Line_19 $$ int countLoci = Integer.parseInt(sval1[1])-->Line_20 $$ if (countLoci == sval2.length) [ FD ]
Line_20 $$ if (countLoci == sval2.length) -->Line_21 $$ lociMatchNumber = true[ CD ]
Line_17 $$ boolean lociMatchNumber = false-->Line_21 $$ lociMatchNumber = true[ FD ]
Line_21 $$ lociMatchNumber = true-->Line_21 $$ lociMatchNumber = true[ FD ]
Line_24 $$ if (sval1[0].equalsIgnoreCase("<Annotated>")) -->Line_24 $$ if (sval1[0].equalsIgnoreCase("<Annotated>")) [ CD ]
Line_24 $$ if (sval1[0].equalsIgnoreCase("<Annotated>")) -->Line_25 $$ guess = TasselFileType.Annotated[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_25 $$ guess = TasselFileType.Annotated[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_25 $$ guess = TasselFileType.Annotated[ FD ]
Line_24 $$ if (sval1[0].equalsIgnoreCase("<Annotated>")) -->Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) [ CD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) [ FD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) [ FD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_27 $$ boolean isTrait = false[ CD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_28 $$ boolean isMarker = false[ CD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_29 $$ boolean isNumeric = false[ CD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_30 $$ boolean isMap = false[ CD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_31 $$ Pattern tagPattern = Pattern.compile("[<>\\s]+")[ CD ]
Line_31 $$ Pattern tagPattern = Pattern.compile("[<>\\s]+")-->Line_31 $$ Pattern tagPattern = Pattern.compile("[<>\\s]+")[ CD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_32 $$ String[] info1 = tagPattern.split(line1)[ CD ]
Line_32 $$ String[] info1 = tagPattern.split(line1)-->Line_32 $$ String[] info1 = tagPattern.split(line1)[ CD ]
Line_31 $$ Pattern tagPattern = Pattern.compile("[<>\\s]+")-->Line_32 $$ String[] info1 = tagPattern.split(line1)[ FD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_32 $$ String[] info1 = tagPattern.split(line1)[ FD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_33 $$ String[] info2 = tagPattern.split(line2)[ CD ]
Line_33 $$ String[] info2 = tagPattern.split(line2)-->Line_33 $$ String[] info2 = tagPattern.split(line2)[ CD ]
Line_31 $$ Pattern tagPattern = Pattern.compile("[<>\\s]+")-->Line_33 $$ String[] info2 = tagPattern.split(line2)[ FD ]
Line_15 $$ String line2 = br.readLine().trim()-->Line_33 $$ String[] info2 = tagPattern.split(line2)[ FD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_34 $$ if (info1.length > 1) [ CD ]
Line_34 $$ if (info1.length > 1) -->Line_35 $$ if (info1[1].toUpperCase().startsWith("MARKER")) [ CD ]
Line_35 $$ if (info1[1].toUpperCase().startsWith("MARKER")) -->Line_35 $$ if (info1[1].toUpperCase().startsWith("MARKER")) [ CD ]
Line_35 $$ if (info1[1].toUpperCase().startsWith("MARKER")) -->Line_36 $$ isMarker = true[ CD ]
Line_28 $$ boolean isMarker = false-->Line_36 $$ isMarker = true[ FD ]
Line_36 $$ isMarker = true-->Line_36 $$ isMarker = true[ FD ]
Line_35 $$ if (info1[1].toUpperCase().startsWith("MARKER")) -->Line_37 $$ if (info1[1].toUpperCase().startsWith("TRAIT")) [ CD ]
Line_37 $$ if (info1[1].toUpperCase().startsWith("TRAIT")) -->Line_37 $$ if (info1[1].toUpperCase().startsWith("TRAIT")) [ CD ]
Line_37 $$ if (info1[1].toUpperCase().startsWith("TRAIT")) -->Line_38 $$ isTrait = true[ CD ]
Line_27 $$ boolean isTrait = false-->Line_38 $$ isTrait = true[ FD ]
Line_38 $$ isTrait = true-->Line_38 $$ isTrait = true[ FD ]
Line_37 $$ if (info1[1].toUpperCase().startsWith("TRAIT")) -->Line_39 $$ if (info1[1].toUpperCase().startsWith("NUMER")) [ CD ]
Line_39 $$ if (info1[1].toUpperCase().startsWith("NUMER")) -->Line_39 $$ if (info1[1].toUpperCase().startsWith("NUMER")) [ CD ]
Line_39 $$ if (info1[1].toUpperCase().startsWith("NUMER")) -->Line_40 $$ isNumeric = true[ CD ]
Line_29 $$ boolean isNumeric = false-->Line_40 $$ isNumeric = true[ FD ]
Line_40 $$ isNumeric = true-->Line_40 $$ isNumeric = true[ FD ]
Line_39 $$ if (info1[1].toUpperCase().startsWith("NUMER")) -->Line_41 $$ if (info1[1].toUpperCase().startsWith("MAP")) [ CD ]
Line_41 $$ if (info1[1].toUpperCase().startsWith("MAP")) -->Line_41 $$ if (info1[1].toUpperCase().startsWith("MAP")) [ CD ]
Line_41 $$ if (info1[1].toUpperCase().startsWith("MAP")) -->Line_42 $$ isMap = true[ CD ]
Line_30 $$ boolean isMap = false-->Line_42 $$ isMap = true[ FD ]
Line_42 $$ isMap = true-->Line_42 $$ isMap = true[ FD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_45 $$ if (info2.length > 1) [ CD ]
Line_45 $$ if (info2.length > 1) -->Line_46 $$ if (info2[1].toUpperCase().startsWith("MARKER")) [ CD ]
Line_46 $$ if (info2[1].toUpperCase().startsWith("MARKER")) -->Line_46 $$ if (info2[1].toUpperCase().startsWith("MARKER")) [ CD ]
Line_46 $$ if (info2[1].toUpperCase().startsWith("MARKER")) -->Line_47 $$ isMarker = true[ CD ]
Line_28 $$ boolean isMarker = false-->Line_47 $$ isMarker = true[ FD ]
Line_36 $$ isMarker = true-->Line_47 $$ isMarker = true[ FD ]
Line_47 $$ isMarker = true-->Line_47 $$ isMarker = true[ FD ]
Line_46 $$ if (info2[1].toUpperCase().startsWith("MARKER")) -->Line_48 $$ if (info2[1].toUpperCase().startsWith("TRAIT")) [ CD ]
Line_48 $$ if (info2[1].toUpperCase().startsWith("TRAIT")) -->Line_48 $$ if (info2[1].toUpperCase().startsWith("TRAIT")) [ CD ]
Line_48 $$ if (info2[1].toUpperCase().startsWith("TRAIT")) -->Line_49 $$ isTrait = true[ CD ]
Line_27 $$ boolean isTrait = false-->Line_49 $$ isTrait = true[ FD ]
Line_38 $$ isTrait = true-->Line_49 $$ isTrait = true[ FD ]
Line_49 $$ isTrait = true-->Line_49 $$ isTrait = true[ FD ]
Line_48 $$ if (info2[1].toUpperCase().startsWith("TRAIT")) -->Line_50 $$ if (info2[1].toUpperCase().startsWith("NUMER")) [ CD ]
Line_50 $$ if (info2[1].toUpperCase().startsWith("NUMER")) -->Line_50 $$ if (info2[1].toUpperCase().startsWith("NUMER")) [ CD ]
Line_50 $$ if (info2[1].toUpperCase().startsWith("NUMER")) -->Line_51 $$ isNumeric = true[ CD ]
Line_29 $$ boolean isNumeric = false-->Line_51 $$ isNumeric = true[ FD ]
Line_40 $$ isNumeric = true-->Line_51 $$ isNumeric = true[ FD ]
Line_51 $$ isNumeric = true-->Line_51 $$ isNumeric = true[ FD ]
Line_50 $$ if (info2[1].toUpperCase().startsWith("NUMER")) -->Line_52 $$ if (info2[1].toUpperCase().startsWith("MAP")) [ CD ]
Line_52 $$ if (info2[1].toUpperCase().startsWith("MAP")) -->Line_52 $$ if (info2[1].toUpperCase().startsWith("MAP")) [ CD ]
Line_52 $$ if (info2[1].toUpperCase().startsWith("MAP")) -->Line_53 $$ isMap = true[ CD ]
Line_30 $$ boolean isMap = false-->Line_53 $$ isMap = true[ FD ]
Line_42 $$ isMap = true-->Line_53 $$ isMap = true[ FD ]
Line_53 $$ isMap = true-->Line_53 $$ isMap = true[ FD ]
Line_45 $$ if (info2.length > 1) -->Line_56 $$ guess = null[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_56 $$ guess = null[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_56 $$ guess = null[ FD ]
Line_56 $$ guess = null-->Line_56 $$ guess = null[ FD ]
Line_45 $$ if (info2.length > 1) -->Line_57 $$ String inline = br.readLine()[ CD ]
Line_57 $$ String inline = br.readLine()-->Line_57 $$ String inline = br.readLine()[ CD ]
Line_6 $$ BufferedReader br = null-->Line_57 $$ String inline = br.readLine()[ FD ]
Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_57 $$ String inline = br.readLine()[ FD ]
Line_11 $$ br = new BufferedReader(new FileReader(filename))-->Line_57 $$ String inline = br.readLine()[ FD ]
Line_45 $$ if (info2.length > 1) -->Line_58 $$ while (guess == null && inline != null && (inline.startsWith("#") || inline.startsWith("<"))) [ CD ]
Line_45 $$ if (info2.length > 1) -->Line_45 $$ if (info2.length > 1) [ CD ]
Line_57 $$ String inline = br.readLine()-->Line_58 $$ while (guess == null && inline != null && (inline.startsWith("#") || inline.startsWith("<"))) [ FD ]
Line_57 $$ String inline = br.readLine()-->Line_58 $$ while (guess == null && inline != null && (inline.startsWith("#") || inline.startsWith("<"))) [ FD ]
Line_58 $$ while (guess == null && inline != null && (inline.startsWith("#") || inline.startsWith("<"))) -->Line_59 $$ if (inline.startsWith("<")) [ CD ]
Line_57 $$ String inline = br.readLine()-->Line_59 $$ if (inline.startsWith("<")) [ FD ]
Line_59 $$ if (inline.startsWith("<")) -->Line_59 $$ if (inline.startsWith("<")) [ CD ]
Line_57 $$ String inline = br.readLine()-->Line_59 $$ if (inline.startsWith("<")) [ FD ]
Line_59 $$ if (inline.startsWith("<")) -->Line_60 $$ String[] info = tagPattern.split(inline)[ CD ]
Line_60 $$ String[] info = tagPattern.split(inline)-->Line_60 $$ String[] info = tagPattern.split(inline)[ CD ]
Line_31 $$ Pattern tagPattern = Pattern.compile("[<>\\s]+")-->Line_60 $$ String[] info = tagPattern.split(inline)[ FD ]
Line_57 $$ String inline = br.readLine()-->Line_60 $$ String[] info = tagPattern.split(inline)[ FD ]
Line_59 $$ if (inline.startsWith("<")) -->Line_61 $$ if (info[1].toUpperCase().startsWith("MARKER")) [ CD ]
Line_61 $$ if (info[1].toUpperCase().startsWith("MARKER")) -->Line_61 $$ if (info[1].toUpperCase().startsWith("MARKER")) [ CD ]
Line_61 $$ if (info[1].toUpperCase().startsWith("MARKER")) -->Line_62 $$ isMarker = true[ CD ]
Line_62 $$ isMarker = true-->Line_62 $$ isMarker = true[ FD ]
Line_28 $$ boolean isMarker = false-->Line_62 $$ isMarker = true[ FD ]
Line_36 $$ isMarker = true-->Line_62 $$ isMarker = true[ FD ]
Line_47 $$ isMarker = true-->Line_62 $$ isMarker = true[ FD ]
Line_61 $$ if (info[1].toUpperCase().startsWith("MARKER")) -->Line_63 $$ if (info[1].toUpperCase().startsWith("TRAIT")) [ CD ]
Line_63 $$ if (info[1].toUpperCase().startsWith("TRAIT")) -->Line_63 $$ if (info[1].toUpperCase().startsWith("TRAIT")) [ CD ]
Line_63 $$ if (info[1].toUpperCase().startsWith("TRAIT")) -->Line_64 $$ isTrait = true[ CD ]
Line_64 $$ isTrait = true-->Line_64 $$ isTrait = true[ FD ]
Line_27 $$ boolean isTrait = false-->Line_64 $$ isTrait = true[ FD ]
Line_38 $$ isTrait = true-->Line_64 $$ isTrait = true[ FD ]
Line_49 $$ isTrait = true-->Line_64 $$ isTrait = true[ FD ]
Line_63 $$ if (info[1].toUpperCase().startsWith("TRAIT")) -->Line_65 $$ if (info[1].toUpperCase().startsWith("NUMER")) [ CD ]
Line_65 $$ if (info[1].toUpperCase().startsWith("NUMER")) -->Line_65 $$ if (info[1].toUpperCase().startsWith("NUMER")) [ CD ]
Line_65 $$ if (info[1].toUpperCase().startsWith("NUMER")) -->Line_66 $$ isNumeric = true[ CD ]
Line_66 $$ isNumeric = true-->Line_66 $$ isNumeric = true[ FD ]
Line_29 $$ boolean isNumeric = false-->Line_66 $$ isNumeric = true[ FD ]
Line_40 $$ isNumeric = true-->Line_66 $$ isNumeric = true[ FD ]
Line_51 $$ isNumeric = true-->Line_66 $$ isNumeric = true[ FD ]
Line_65 $$ if (info[1].toUpperCase().startsWith("NUMER")) -->Line_67 $$ if (info[1].toUpperCase().startsWith("MAP")) [ CD ]
Line_67 $$ if (info[1].toUpperCase().startsWith("MAP")) -->Line_67 $$ if (info[1].toUpperCase().startsWith("MAP")) [ CD ]
Line_67 $$ if (info[1].toUpperCase().startsWith("MAP")) -->Line_68 $$ isMap = true[ CD ]
Line_68 $$ isMap = true-->Line_68 $$ isMap = true[ FD ]
Line_30 $$ boolean isMap = false-->Line_68 $$ isMap = true[ FD ]
Line_42 $$ isMap = true-->Line_68 $$ isMap = true[ FD ]
Line_53 $$ isMap = true-->Line_68 $$ isMap = true[ FD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ CD ]
Line_64 $$ isTrait = true-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_27 $$ boolean isTrait = false-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_38 $$ isTrait = true-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_49 $$ isTrait = true-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_62 $$ isMarker = true-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_28 $$ boolean isMarker = false-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_36 $$ isMarker = true-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_47 $$ isMarker = true-->Line_73 $$ if (isTrait || (isMarker && isNumeric)) [ FD ]
Line_73 $$ if (isTrait || (isMarker && isNumeric)) -->Line_74 $$ guess = TasselFileType.Phenotype[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_74 $$ guess = TasselFileType.Phenotype[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_74 $$ guess = TasselFileType.Phenotype[ FD ]
Line_56 $$ guess = null-->Line_74 $$ guess = TasselFileType.Phenotype[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_74 $$ guess = TasselFileType.Phenotype[ FD ]
Line_73 $$ if (isTrait || (isMarker && isNumeric)) -->Line_75 $$ if (isMarker) [ CD ]
Line_68 $$ isMap = true-->Line_75 $$ if (isMarker) [ FD ]
Line_30 $$ boolean isMap = false-->Line_75 $$ if (isMarker) [ FD ]
Line_42 $$ isMap = true-->Line_75 $$ if (isMarker) [ FD ]
Line_53 $$ isMap = true-->Line_75 $$ if (isMarker) [ FD ]
Line_75 $$ if (isMarker) -->Line_76 $$ guess = TasselFileType.Polymorphism[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_76 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_76 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_56 $$ guess = null-->Line_76 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_76 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_76 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_75 $$ if (isMarker) -->Line_77 $$ if (isMap) [ CD ]
Line_77 $$ if (isMap) -->Line_78 $$ guess = TasselFileType.GeneticMap[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_78 $$ guess = TasselFileType.GeneticMap[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_78 $$ guess = TasselFileType.GeneticMap[ FD ]
Line_56 $$ guess = null-->Line_78 $$ guess = TasselFileType.GeneticMap[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_78 $$ guess = TasselFileType.GeneticMap[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_78 $$ guess = TasselFileType.GeneticMap[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_78 $$ guess = TasselFileType.GeneticMap[ FD ]
Line_26 $$ if (line1.startsWith("<") || line1.startsWith("#")) -->Line_82 $$ if ((line1.startsWith(">")) || (line1.startsWith(";"))) [ CD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_82 $$ if ((line1.startsWith(">")) || (line1.startsWith(";"))) [ FD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_82 $$ if ((line1.startsWith(">")) || (line1.startsWith(";"))) [ FD ]
Line_82 $$ if ((line1.startsWith(">")) || (line1.startsWith(";"))) -->Line_83 $$ guess = TasselFileType.Fasta[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_56 $$ guess = null-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_83 $$ guess = TasselFileType.Fasta[ FD ]
Line_82 $$ if ((line1.startsWith(">")) || (line1.startsWith(";"))) -->Line_84 $$ if (sval1.length == 1) [ CD ]
Line_84 $$ if (sval1.length == 1) -->Line_85 $$ guess = TasselFileType.SqrMatrix[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_56 $$ guess = null-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_85 $$ guess = TasselFileType.SqrMatrix-->Line_85 $$ guess = TasselFileType.SqrMatrix[ FD ]
Line_84 $$ if (sval1.length == 1) -->Line_86 $$ if (line1.indexOf(':') > 0) [ CD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_86 $$ if (line1.indexOf(':') > 0) [ FD ]
Line_86 $$ if (line1.indexOf(':') > 0) -->Line_87 $$ guess = TasselFileType.Polymorphism[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_56 $$ guess = null-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_85 $$ guess = TasselFileType.SqrMatrix-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_87 $$ guess = TasselFileType.Polymorphism-->Line_87 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_86 $$ if (line1.indexOf(':') > 0) -->Line_88 $$ if ((sval1.length == 2) && (lociMatchNumber)) [ CD ]
Line_88 $$ if ((sval1.length == 2) && (lociMatchNumber)) -->Line_89 $$ guess = TasselFileType.Polymorphism[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_56 $$ guess = null-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_85 $$ guess = TasselFileType.SqrMatrix-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_87 $$ guess = TasselFileType.Polymorphism-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_89 $$ guess = TasselFileType.Polymorphism-->Line_89 $$ guess = TasselFileType.Polymorphism[ FD ]
Line_88 $$ if ((sval1.length == 2) && (lociMatchNumber)) -->Line_90 $$ if ((line1.startsWith("#Nexus")) || (line1.startsWith("#NEXUS")) || (line1.startsWith("CLUSTAL")) || ((sval1.length == 2) && (sval2.length == 2))) [ CD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_90 $$ if ((line1.startsWith("#Nexus")) || (line1.startsWith("#NEXUS")) || (line1.startsWith("CLUSTAL")) || ((sval1.length == 2) && (sval2.length == 2))) [ FD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_90 $$ if ((line1.startsWith("#Nexus")) || (line1.startsWith("#NEXUS")) || (line1.startsWith("CLUSTAL")) || ((sval1.length == 2) && (sval2.length == 2))) [ FD ]
Line_13 $$ String line1 = br.readLine().trim()-->Line_90 $$ if ((line1.startsWith("#Nexus")) || (line1.startsWith("#NEXUS")) || (line1.startsWith("CLUSTAL")) || ((sval1.length == 2) && (sval2.length == 2))) [ FD ]
Line_90 $$ if ((line1.startsWith("#Nexus")) || (line1.startsWith("#NEXUS")) || (line1.startsWith("CLUSTAL")) || ((sval1.length == 2) && (sval2.length == 2))) -->Line_91 $$ guess = TasselFileType.Sequence[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_56 $$ guess = null-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_85 $$ guess = TasselFileType.SqrMatrix-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_87 $$ guess = TasselFileType.Polymorphism-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_89 $$ guess = TasselFileType.Polymorphism-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_91 $$ guess = TasselFileType.Sequence-->Line_91 $$ guess = TasselFileType.Sequence[ FD ]
Line_90 $$ if ((line1.startsWith("#Nexus")) || (line1.startsWith("#NEXUS")) || (line1.startsWith("CLUSTAL")) || ((sval1.length == 2) && (sval2.length == 2))) -->Line_92 $$ if (sval1.length == 3) [ CD ]
Line_92 $$ if (sval1.length == 3) -->Line_93 $$ guess = TasselFileType.Numerical[ CD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_56 $$ guess = null-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_85 $$ guess = TasselFileType.SqrMatrix-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_87 $$ guess = TasselFileType.Polymorphism-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_89 $$ guess = TasselFileType.Polymorphism-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_91 $$ guess = TasselFileType.Sequence-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_93 $$ guess = TasselFileType.Numerical-->Line_93 $$ guess = TasselFileType.Numerical[ FD ]
Line_4 $$ DataSet tds = null-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_96 $$ tds = processDatum(filename, guess)-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_96 $$ tds = processDatum(filename, guess)-->Line_96 $$ tds = processDatum(filename, guess)[ CD ]
Line_2 $$ public DataSet guessAtUnknowns(String filename) -->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_3 $$ TasselFileType guess = TasselFileType.Sequence-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_25 $$ guess = TasselFileType.Annotated-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_56 $$ guess = null-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_74 $$ guess = TasselFileType.Phenotype-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_76 $$ guess = TasselFileType.Polymorphism-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_78 $$ guess = TasselFileType.GeneticMap-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_83 $$ guess = TasselFileType.Fasta-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_85 $$ guess = TasselFileType.SqrMatrix-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_87 $$ guess = TasselFileType.Polymorphism-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_89 $$ guess = TasselFileType.Polymorphism-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_91 $$ guess = TasselFileType.Sequence-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_93 $$ guess = TasselFileType.Numerical-->Line_96 $$ tds = processDatum(filename, guess)[ FD ]
Line_6 $$ BufferedReader br = null-->Line_97 $$ br.close()[ FD ]
Line_9 $$ br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_97 $$ br.close()[ FD ]
Line_11 $$ br = new BufferedReader(new FileReader(filename))-->Line_97 $$ br.close()[ FD ]
Line_2 $$ public DataSet guessAtUnknowns(String filename) -->Line_100 $$ return tds[ CD ]
