Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception [ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_3 $$ MessageDigest md[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_4 $$ md = MessageDigest.getInstance("MD5")[ CD ]
Line_3 $$ MessageDigest md-->Line_4 $$ md = MessageDigest.getInstance("MD5")[ FD ]
Line_4 $$ md = MessageDigest.getInstance("MD5")-->Line_4 $$ md = MessageDigest.getInstance("MD5")[ FD ]
Line_4 $$ md = MessageDigest.getInstance("MD5")-->Line_4 $$ md = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_5 $$ md.update(passphrase.getBytes("UTF-8"))[ CD ]
Line_3 $$ MessageDigest md-->Line_5 $$ md.update(passphrase.getBytes("UTF-8"))[ FD ]
Line_4 $$ md = MessageDigest.getInstance("MD5")-->Line_5 $$ md.update(passphrase.getBytes("UTF-8"))[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_5 $$ md.update(passphrase.getBytes("UTF-8"))[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_6 $$ byte digest[] = md.digest()[ CD ]
Line_6 $$ byte digest[] = md.digest()-->Line_6 $$ byte digest[] = md.digest()[ CD ]
Line_3 $$ MessageDigest md-->Line_6 $$ byte digest[] = md.digest()[ FD ]
Line_4 $$ md = MessageDigest.getInstance("MD5")-->Line_6 $$ byte digest[] = md.digest()[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_7 $$ String digestString = base64encode(digest)[ CD ]
Line_7 $$ String digestString = base64encode(digest)-->Line_7 $$ String digestString = base64encode(digest)[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_8 $$ System.out.println(digestString)[ CD ]
Line_7 $$ String digestString = base64encode(digest)-->Line_8 $$ System.out.println(digestString)[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_9 $$ SecureRandom sr = new SecureRandom(digestString.getBytes())[ CD ]
Line_7 $$ String digestString = base64encode(digest)-->Line_9 $$ SecureRandom sr = new SecureRandom(digestString.getBytes())[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_10 $$ KeyGenerator kGen = KeyGenerator.getInstance("AES")[ CD ]
Line_10 $$ KeyGenerator kGen = KeyGenerator.getInstance("AES")-->Line_10 $$ KeyGenerator kGen = KeyGenerator.getInstance("AES")[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_11 $$ kGen.init(128, sr)[ CD ]
Line_10 $$ KeyGenerator kGen = KeyGenerator.getInstance("AES")-->Line_11 $$ kGen.init(128, sr)[ FD ]
Line_9 $$ SecureRandom sr = new SecureRandom(digestString.getBytes())-->Line_11 $$ kGen.init(128, sr)[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_12 $$ Key key = kGen.generateKey()[ CD ]
Line_12 $$ Key key = kGen.generateKey()-->Line_12 $$ Key key = kGen.generateKey()[ CD ]
Line_10 $$ KeyGenerator kGen = KeyGenerator.getInstance("AES")-->Line_12 $$ Key key = kGen.generateKey()[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_13 $$ Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding")[ CD ]
Line_13 $$ Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding")-->Line_13 $$ Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding")[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_14 $$ cipher.init(Cipher.DECRYPT_MODE, key)[ CD ]
Line_13 $$ Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding")-->Line_14 $$ cipher.init(Cipher.DECRYPT_MODE, key)[ FD ]
Line_12 $$ Key key = kGen.generateKey()-->Line_14 $$ cipher.init(Cipher.DECRYPT_MODE, key)[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_15 $$ byte[] cryptString = base64decode(crypted)[ CD ]
Line_15 $$ byte[] cryptString = base64decode(crypted)-->Line_15 $$ byte[] cryptString = base64decode(crypted)[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_15 $$ byte[] cryptString = base64decode(crypted)[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_16 $$ byte[] bOut = cipher.doFinal(cryptString)[ CD ]
Line_16 $$ byte[] bOut = cipher.doFinal(cryptString)-->Line_16 $$ byte[] bOut = cipher.doFinal(cryptString)[ CD ]
Line_13 $$ Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding")-->Line_16 $$ byte[] bOut = cipher.doFinal(cryptString)[ FD ]
Line_15 $$ byte[] cryptString = base64decode(crypted)-->Line_16 $$ byte[] bOut = cipher.doFinal(cryptString)[ FD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_17 $$ String outString = new String(bOut, "UTF-8")[ CD ]
Line_2 $$ public String decryptString(String passphrase, String crypted) throws Exception -->Line_18 $$ return outString[ CD ]
