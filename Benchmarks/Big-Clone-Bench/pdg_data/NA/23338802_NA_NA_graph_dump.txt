Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException [ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_3 $$ URL url = null[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_4 $$ url = createContent("lf.jar", "missing")[ CD ]
Line_3 $$ URL url = null-->Line_4 $$ url = createContent("lf.jar", "missing")[ FD ]
Line_4 $$ url = createContent("lf.jar", "missing")-->Line_4 $$ url = createContent("lf.jar", "missing")[ FD ]
Line_4 $$ url = createContent("lf.jar", "missing")-->Line_4 $$ url = createContent("lf.jar", "missing")[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_5 $$ JarURLConnection connection = null[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_6 $$ connection = (JarURLConnection) url.openConnection()[ CD ]
Line_5 $$ JarURLConnection connection = null-->Line_6 $$ connection = (JarURLConnection) url.openConnection()[ FD ]
Line_6 $$ connection = (JarURLConnection) url.openConnection()-->Line_6 $$ connection = (JarURLConnection) url.openConnection()[ FD ]
Line_3 $$ URL url = null-->Line_6 $$ connection = (JarURLConnection) url.openConnection()[ FD ]
Line_4 $$ url = createContent("lf.jar", "missing")-->Line_6 $$ connection = (JarURLConnection) url.openConnection()[ FD ]
Line_5 $$ JarURLConnection connection = null-->Line_8 $$ connection.connect()[ FD ]
Line_6 $$ connection = (JarURLConnection) url.openConnection()-->Line_8 $$ connection.connect()[ FD ]
Line_5 $$ JarURLConnection connection = null-->Line_13 $$ connection.getJarFile()[ FD ]
Line_6 $$ connection = (JarURLConnection) url.openConnection()-->Line_13 $$ connection.getJarFile()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_17 $$ URL invURL = createContent("InvalidJar.jar", "Test.class")[ CD ]
Line_17 $$ URL invURL = createContent("InvalidJar.jar", "Test.class")-->Line_17 $$ URL invURL = createContent("InvalidJar.jar", "Test.class")[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_18 $$ JarURLConnection juConn = (JarURLConnection) invURL.openConnection()[ CD ]
Line_17 $$ URL invURL = createContent("InvalidJar.jar", "Test.class")-->Line_18 $$ JarURLConnection juConn = (JarURLConnection) invURL.openConnection()[ FD ]
Line_18 $$ JarURLConnection juConn = (JarURLConnection) invURL.openConnection()-->Line_20 $$ juConn.getJarFile()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_24 $$ File resources = Support_Resources.createTempFolder()[ CD ]
Line_24 $$ File resources = Support_Resources.createTempFolder()-->Line_24 $$ File resources = Support_Resources.createTempFolder()[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_25 $$ Support_Resources.copyFile(resources, null, "hyts_att.jar")[ CD ]
Line_24 $$ File resources = Support_Resources.createTempFolder()-->Line_25 $$ Support_Resources.copyFile(resources, null, "hyts_att.jar")[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_26 $$ File file = new File(resources.toString() + "/hyts_att.jar")[ CD ]
Line_24 $$ File resources = Support_Resources.createTempFolder()-->Line_26 $$ File file = new File(resources.toString() + "/hyts_att.jar")[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")[ CD ]
Line_26 $$ File file = new File(resources.toString() + "/hyts_att.jar")-->Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_28 $$ JarURLConnection con1 = (JarURLConnection) fUrl1.openConnection()[ CD ]
Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")-->Line_28 $$ JarURLConnection con1 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_29 $$ ZipFile jf1 = con1.getJarFile()[ CD ]
Line_29 $$ ZipFile jf1 = con1.getJarFile()-->Line_29 $$ ZipFile jf1 = con1.getJarFile()[ CD ]
Line_28 $$ JarURLConnection con1 = (JarURLConnection) fUrl1.openConnection()-->Line_29 $$ ZipFile jf1 = con1.getJarFile()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_30 $$ JarURLConnection con2 = (JarURLConnection) fUrl1.openConnection()[ CD ]
Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")-->Line_30 $$ JarURLConnection con2 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_31 $$ ZipFile jf2 = con2.getJarFile()[ CD ]
Line_31 $$ ZipFile jf2 = con2.getJarFile()-->Line_31 $$ ZipFile jf2 = con2.getJarFile()[ CD ]
Line_30 $$ JarURLConnection con2 = (JarURLConnection) fUrl1.openConnection()-->Line_31 $$ ZipFile jf2 = con2.getJarFile()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_32 $$ assertTrue("file: JarFiles not the same", jf1 == jf2)[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_33 $$ jf1.close()[ CD ]
Line_29 $$ ZipFile jf1 = con1.getJarFile()-->Line_33 $$ jf1.close()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_34 $$ assertTrue("File should exist", file.exists())[ CD ]
Line_26 $$ File file = new File(resources.toString() + "/hyts_att.jar")-->Line_34 $$ assertTrue("File should exist", file.exists())[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_35 $$ fUrl1 = createContent("lf.jar", "")[ CD ]
Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")-->Line_35 $$ fUrl1 = createContent("lf.jar", "")[ FD ]
Line_35 $$ fUrl1 = createContent("lf.jar", "")-->Line_35 $$ fUrl1 = createContent("lf.jar", "")[ FD ]
Line_35 $$ fUrl1 = createContent("lf.jar", "")-->Line_35 $$ fUrl1 = createContent("lf.jar", "")[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()[ CD ]
Line_28 $$ JarURLConnection con1 = (JarURLConnection) fUrl1.openConnection()-->Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()-->Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")-->Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_35 $$ fUrl1 = createContent("lf.jar", "")-->Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_37 $$ jf1 = con1.getJarFile()[ CD ]
Line_29 $$ ZipFile jf1 = con1.getJarFile()-->Line_37 $$ jf1 = con1.getJarFile()[ FD ]
Line_37 $$ jf1 = con1.getJarFile()-->Line_37 $$ jf1 = con1.getJarFile()[ FD ]
Line_37 $$ jf1 = con1.getJarFile()-->Line_37 $$ jf1 = con1.getJarFile()[ CD ]
Line_28 $$ JarURLConnection con1 = (JarURLConnection) fUrl1.openConnection()-->Line_37 $$ jf1 = con1.getJarFile()[ FD ]
Line_36 $$ con1 = (JarURLConnection) fUrl1.openConnection()-->Line_37 $$ jf1 = con1.getJarFile()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()[ CD ]
Line_30 $$ JarURLConnection con2 = (JarURLConnection) fUrl1.openConnection()-->Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()-->Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_27 $$ URL fUrl1 = new URL("jar:file:" + file.getPath() + "!/")-->Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_35 $$ fUrl1 = createContent("lf.jar", "")-->Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_39 $$ jf2 = con2.getJarFile()[ CD ]
Line_31 $$ ZipFile jf2 = con2.getJarFile()-->Line_39 $$ jf2 = con2.getJarFile()[ FD ]
Line_39 $$ jf2 = con2.getJarFile()-->Line_39 $$ jf2 = con2.getJarFile()[ FD ]
Line_39 $$ jf2 = con2.getJarFile()-->Line_39 $$ jf2 = con2.getJarFile()[ CD ]
Line_30 $$ JarURLConnection con2 = (JarURLConnection) fUrl1.openConnection()-->Line_39 $$ jf2 = con2.getJarFile()[ FD ]
Line_38 $$ con2 = (JarURLConnection) fUrl1.openConnection()-->Line_39 $$ jf2 = con2.getJarFile()[ FD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_40 $$ assertTrue("http: JarFiles not the same", jf1 == jf2)[ CD ]
Line_2 $$ public void test_getJarFile() throws MalformedURLException, IOException -->Line_41 $$ jf1.close()[ CD ]
Line_29 $$ ZipFile jf1 = con1.getJarFile()-->Line_41 $$ jf1.close()[ FD ]
Line_37 $$ jf1 = con1.getJarFile()-->Line_41 $$ jf1.close()[ FD ]
