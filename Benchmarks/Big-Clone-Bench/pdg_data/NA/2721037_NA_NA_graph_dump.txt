Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException [ CD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_3 $$ FileInputStream fis = new FileInputStream(in)[ CD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_4 $$ FileOutputStream fos = new FileOutputStream(out0)[ CD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_5 $$ FileChannel fic = fis.getChannel()[ CD ]
Line_5 $$ FileChannel fic = fis.getChannel()-->Line_5 $$ FileChannel fic = fis.getChannel()[ CD ]
Line_3 $$ FileInputStream fis = new FileInputStream(in)-->Line_5 $$ FileChannel fic = fis.getChannel()[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_6 $$ FileChannel foc = fos.getChannel()[ CD ]
Line_6 $$ FileChannel foc = fos.getChannel()-->Line_6 $$ FileChannel foc = fos.getChannel()[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(out0)-->Line_6 $$ FileChannel foc = fos.getChannel()[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_7 $$ foc.transferFrom(fic, 0, pos)[ CD ]
Line_6 $$ FileChannel foc = fos.getChannel()-->Line_7 $$ foc.transferFrom(fic, 0, pos)[ FD ]
Line_5 $$ FileChannel fic = fis.getChannel()-->Line_7 $$ foc.transferFrom(fic, 0, pos)[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_7 $$ foc.transferFrom(fic, 0, pos)[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_8 $$ foc.close()[ CD ]
Line_6 $$ FileChannel foc = fos.getChannel()-->Line_8 $$ foc.close()[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_9 $$ fos = new FileOutputStream(out1)[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(out0)-->Line_9 $$ fos = new FileOutputStream(out1)[ FD ]
Line_9 $$ fos = new FileOutputStream(out1)-->Line_9 $$ fos = new FileOutputStream(out1)[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_10 $$ foc = fos.getChannel()[ CD ]
Line_6 $$ FileChannel foc = fos.getChannel()-->Line_10 $$ foc = fos.getChannel()[ FD ]
Line_10 $$ foc = fos.getChannel()-->Line_10 $$ foc = fos.getChannel()[ FD ]
Line_10 $$ foc = fos.getChannel()-->Line_10 $$ foc = fos.getChannel()[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(out0)-->Line_10 $$ foc = fos.getChannel()[ FD ]
Line_9 $$ fos = new FileOutputStream(out1)-->Line_10 $$ foc = fos.getChannel()[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_11 $$ foc.transferFrom(fic, 0, fic.size() - pos)[ CD ]
Line_6 $$ FileChannel foc = fos.getChannel()-->Line_11 $$ foc.transferFrom(fic, 0, fic.size() - pos)[ FD ]
Line_10 $$ foc = fos.getChannel()-->Line_11 $$ foc.transferFrom(fic, 0, fic.size() - pos)[ FD ]
Line_5 $$ FileChannel fic = fis.getChannel()-->Line_11 $$ foc.transferFrom(fic, 0, fic.size() - pos)[ FD ]
Line_5 $$ FileChannel fic = fis.getChannel()-->Line_11 $$ foc.transferFrom(fic, 0, fic.size() - pos)[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_12 $$ foc.close()[ CD ]
Line_6 $$ FileChannel foc = fos.getChannel()-->Line_12 $$ foc.close()[ FD ]
Line_10 $$ foc = fos.getChannel()-->Line_12 $$ foc.close()[ FD ]
Line_2 $$ public void SplitFile(File in, File out0, File out1, long pos) throws IOException -->Line_13 $$ fic.close()[ CD ]
Line_5 $$ FileChannel fic = fis.getChannel()-->Line_13 $$ fic.close()[ FD ]
