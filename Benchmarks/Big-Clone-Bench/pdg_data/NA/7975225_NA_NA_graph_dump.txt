Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException [ CD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_3 $$ FileOutputStream out = null[ CD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_4 $$ InputStream is = null[ CD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_6 $$ filename = toCanonicalFilename(filename)[ FD ]
Line_6 $$ filename = toCanonicalFilename(filename)-->Line_6 $$ filename = toCanonicalFilename(filename)[ FD ]
Line_6 $$ filename = toCanonicalFilename(filename)-->Line_6 $$ filename = toCanonicalFilename(filename)[ CD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_6 $$ filename = toCanonicalFilename(filename)[ FD ]
Line_6 $$ filename = toCanonicalFilename(filename)-->Line_6 $$ filename = toCanonicalFilename(filename)[ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_7 $$ URL url = new URL(root + filename.substring(1))[ FD ]
Line_6 $$ filename = toCanonicalFilename(filename)-->Line_7 $$ URL url = new URL(root + filename.substring(1))[ FD ]
Line_8 $$ URLConnection urlc = url.openConnection()-->Line_8 $$ URLConnection urlc = url.openConnection()[ CD ]
Line_7 $$ URL url = new URL(root + filename.substring(1))-->Line_8 $$ URLConnection urlc = url.openConnection()[ FD ]
Line_9 $$ int i = urlc.getContentLength()-->Line_9 $$ int i = urlc.getContentLength()[ CD ]
Line_8 $$ URLConnection urlc = url.openConnection()-->Line_9 $$ int i = urlc.getContentLength()[ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_10 $$ monitor.setTaskSize(i)[ FD ]
Line_9 $$ int i = urlc.getContentLength()-->Line_10 $$ monitor.setTaskSize(i)[ FD ]
Line_3 $$ FileOutputStream out = null-->Line_11 $$ out = new FileOutputStream(partFile)[ FD ]
Line_11 $$ out = new FileOutputStream(partFile)-->Line_11 $$ out = new FileOutputStream(partFile)[ FD ]
Line_4 $$ InputStream is = null-->Line_12 $$ is = urlc.getInputStream()[ FD ]
Line_12 $$ is = urlc.getInputStream()-->Line_12 $$ is = urlc.getInputStream()[ FD ]
Line_12 $$ is = urlc.getInputStream()-->Line_12 $$ is = urlc.getInputStream()[ CD ]
Line_8 $$ URLConnection urlc = url.openConnection()-->Line_12 $$ is = urlc.getInputStream()[ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_13 $$ monitor.started()[ FD ]
Line_4 $$ InputStream is = null-->Line_14 $$ copyStream(is, out, monitor)[ FD ]
Line_12 $$ is = urlc.getInputStream()-->Line_14 $$ copyStream(is, out, monitor)[ FD ]
Line_3 $$ FileOutputStream out = null-->Line_14 $$ copyStream(is, out, monitor)[ FD ]
Line_11 $$ out = new FileOutputStream(partFile)-->Line_14 $$ copyStream(is, out, monitor)[ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_14 $$ copyStream(is, out, monitor)[ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_15 $$ monitor.finished()[ FD ]
Line_3 $$ FileOutputStream out = null-->Line_16 $$ out.close()[ FD ]
Line_11 $$ out = new FileOutputStream(partFile)-->Line_16 $$ out.close()[ FD ]
Line_4 $$ InputStream is = null-->Line_17 $$ is.close()[ FD ]
Line_12 $$ is = urlc.getInputStream()-->Line_17 $$ is.close()[ FD ]
Line_18 $$ if (!partFile.renameTo(targetFile)) -->Line_18 $$ if (!partFile.renameTo(targetFile)) [ CD ]
Line_18 $$ if (!partFile.renameTo(targetFile)) -->Line_18 $$ if (!partFile.renameTo(targetFile)) [ CD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_18 $$ if (!partFile.renameTo(targetFile)) [ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_18 $$ if (!partFile.renameTo(targetFile)) [ FD ]
Line_3 $$ FileOutputStream out = null-->Line_22 $$ if (out != null)[ FD ]
Line_11 $$ out = new FileOutputStream(partFile)-->Line_22 $$ if (out != null)[ FD ]
Line_22 $$ if (out != null)-->Line_22 $$ out.close()[ CD ]
Line_3 $$ FileOutputStream out = null-->Line_22 $$ out.close()[ FD ]
Line_11 $$ out = new FileOutputStream(partFile)-->Line_22 $$ out.close()[ FD ]
Line_4 $$ InputStream is = null-->Line_23 $$ if (is != null)[ FD ]
Line_12 $$ is = urlc.getInputStream()-->Line_23 $$ if (is != null)[ FD ]
Line_23 $$ if (is != null)-->Line_23 $$ is.close()[ CD ]
Line_4 $$ InputStream is = null-->Line_23 $$ is.close()[ FD ]
Line_12 $$ is = urlc.getInputStream()-->Line_23 $$ is.close()[ FD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_24 $$ if (partFile.exists() && !partFile.delete()) [ FD ]
Line_24 $$ if (partFile.exists() && !partFile.delete()) -->Line_24 $$ if (partFile.exists() && !partFile.delete()) [ CD ]
Line_2 $$ protected void downloadFile(String filename, java.io.File targetFile, File partFile, ProgressMonitor monitor) throws java.io.IOException -->Line_24 $$ if (partFile.exists() && !partFile.delete()) [ FD ]
