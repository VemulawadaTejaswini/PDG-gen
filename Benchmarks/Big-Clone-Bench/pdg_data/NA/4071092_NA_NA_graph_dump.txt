Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) [ CD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_3 $$ FTPClient client = new FTPClient()[ CD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_4 $$ OutputStream outStream = null[ CD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_5 $$ Calendar filterCal = Calendar.getInstance()[ CD ]
Line_5 $$ Calendar filterCal = Calendar.getInstance()-->Line_5 $$ Calendar filterCal = Calendar.getInstance()[ CD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_6 $$ filterCal.set(Calendar.DAY_OF_MONTH, filterCal.get(Calendar.DAY_OF_MONTH) - 1)[ CD ]
Line_5 $$ Calendar filterCal = Calendar.getInstance()-->Line_6 $$ filterCal.set(Calendar.DAY_OF_MONTH, filterCal.get(Calendar.DAY_OF_MONTH) - 1)[ FD ]
Line_5 $$ Calendar filterCal = Calendar.getInstance()-->Line_6 $$ filterCal.set(Calendar.DAY_OF_MONTH, filterCal.get(Calendar.DAY_OF_MONTH) - 1)[ FD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_7 $$ Date aDayAgo = filterCal.getTime()[ CD ]
Line_7 $$ Date aDayAgo = filterCal.getTime()-->Line_7 $$ Date aDayAgo = filterCal.getTime()[ CD ]
Line_5 $$ Calendar filterCal = Calendar.getInstance()-->Line_7 $$ Date aDayAgo = filterCal.getTime()[ FD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_8 $$ String outputRecord = ""[ CD ]
Line_10 $$ Session session = CustomSystemSession.create(r)-->Line_10 $$ Session session = CustomSystemSession.create(r)[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_11 $$ client.connect(ftpHostname)[ FD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_12 $$ client.login(ftpUsername, ftpPassword)[ FD ]
Line_13 $$ FTPFile[] users = client.listFiles()-->Line_13 $$ FTPFile[] users = client.listFiles()[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_13 $$ FTPFile[] users = client.listFiles()[ FD ]
Line_13 $$ FTPFile[] users = client.listFiles()-->Line_14 $$ if (users != null) [ FD ]
Line_16 $$ String userName = user.getName()-->Line_16 $$ String userName = user.getName()[ CD ]
Line_15 $$ for (FTPFile user : users) -->Line_16 $$ String userName = user.getName()[ FD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_17 $$ if (alias.equals(userName)) [ FD ]
Line_16 $$ String userName = user.getName()-->Line_17 $$ if (alias.equals(userName)) [ FD ]
Line_17 $$ if (alias.equals(userName)) -->Line_17 $$ if (alias.equals(userName)) [ CD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_17 $$ if (alias.equals(userName)) [ FD ]
Line_16 $$ String userName = user.getName()-->Line_17 $$ if (alias.equals(userName)) [ FD ]
Line_17 $$ if (alias.equals(userName)) -->Line_18 $$ outputRecord += "Found account " + userName + ".\n"[ CD ]
Line_8 $$ String outputRecord = ""-->Line_18 $$ outputRecord += "Found account " + userName + ".\n"[ FD ]
Line_18 $$ outputRecord += "Found account " + userName + ".\n"-->Line_18 $$ outputRecord += "Found account " + userName + ".\n"[ FD ]
Line_17 $$ if (alias.equals(userName)) -->Line_19 $$ client.changeWorkingDirectory("/" + userName + "/")[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_19 $$ client.changeWorkingDirectory("/" + userName + "/")[ FD ]
Line_17 $$ if (alias.equals(userName)) -->Line_20 $$ FTPFile[] experiments = client.listFiles()[ CD ]
Line_20 $$ FTPFile[] experiments = client.listFiles()-->Line_20 $$ FTPFile[] experiments = client.listFiles()[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_20 $$ FTPFile[] experiments = client.listFiles()[ FD ]
Line_17 $$ if (alias.equals(userName)) -->Line_21 $$ if (experiments != null && userNode != null) [ CD ]
Line_23 $$ String experimentName = experiment.getName()-->Line_23 $$ String experimentName = experiment.getName()[ CD ]
Line_22 $$ for (FTPFile experiment : experiments) -->Line_23 $$ String experimentName = experiment.getName()[ FD ]
Line_8 $$ String outputRecord = ""-->Line_24 $$ outputRecord += "Exploring " + userName + "/" + experimentName + ".\n"[ FD ]
Line_18 $$ outputRecord += "Found account " + userName + ".\n"-->Line_24 $$ outputRecord += "Exploring " + userName + "/" + experimentName + ".\n"[ FD ]
Line_24 $$ outputRecord += "Exploring " + userName + "/" + experimentName + ".\n"-->Line_24 $$ outputRecord += "Exploring " + userName + "/" + experimentName + ".\n"[ FD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_25 $$ client.changeWorkingDirectory("/" + userName + "/" + experimentName + "/")[ FD ]
Line_26 $$ FTPFile[] datasets = client.listFiles()-->Line_26 $$ FTPFile[] datasets = client.listFiles()[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_26 $$ FTPFile[] datasets = client.listFiles()[ FD ]
Line_26 $$ FTPFile[] datasets = client.listFiles()-->Line_27 $$ if (datasets != null) [ FD ]
Line_29 $$ String datasetName = dataset.getName()-->Line_29 $$ String datasetName = dataset.getName()[ CD ]
Line_28 $$ for (FTPFile dataset : datasets) -->Line_29 $$ String datasetName = dataset.getName()[ FD ]
Line_8 $$ String outputRecord = ""-->Line_30 $$ outputRecord += "Exploring " + userName + "/" + experimentName + "/" + datasetName + ".\n"[ FD ]
Line_18 $$ outputRecord += "Found account " + userName + ".\n"-->Line_30 $$ outputRecord += "Exploring " + userName + "/" + experimentName + "/" + datasetName + ".\n"[ FD ]
Line_24 $$ outputRecord += "Exploring " + userName + "/" + experimentName + ".\n"-->Line_30 $$ outputRecord += "Exploring " + userName + "/" + experimentName + "/" + datasetName + ".\n"[ FD ]
Line_30 $$ outputRecord += "Exploring " + userName + "/" + experimentName + "/" + datasetName + ".\n"-->Line_30 $$ outputRecord += "Exploring " + userName + "/" + experimentName + "/" + datasetName + ".\n"[ FD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_31 $$ client.changeWorkingDirectory("/" + userName + "/" + experimentName + "/" + datasetName + "/")[ FD ]
Line_32 $$ Date collectionDate = dataset.getTimestamp().getTime()-->Line_32 $$ Date collectionDate = dataset.getTimestamp().getTime()[ CD ]
Line_28 $$ for (FTPFile dataset : datasets) -->Line_32 $$ Date collectionDate = dataset.getTimestamp().getTime()[ FD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_33 $$ if (collectionDate.after(aDayAgo) || all) [ FD ]
Line_32 $$ Date collectionDate = dataset.getTimestamp().getTime()-->Line_33 $$ if (collectionDate.after(aDayAgo) || all) [ FD ]
Line_7 $$ Date aDayAgo = filterCal.getTime()-->Line_33 $$ if (collectionDate.after(aDayAgo) || all) [ FD ]
Line_33 $$ if (collectionDate.after(aDayAgo) || all) -->Line_34 $$ FTPFile[] images = client.listFiles()[ CD ]
Line_34 $$ FTPFile[] images = client.listFiles()-->Line_34 $$ FTPFile[] images = client.listFiles()[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_34 $$ FTPFile[] images = client.listFiles()[ FD ]
Line_33 $$ if (collectionDate.after(aDayAgo) || all) -->Line_35 $$ if (images != null) [ CD ]
Line_34 $$ FTPFile[] images = client.listFiles()-->Line_35 $$ if (images != null) [ FD ]
Line_8 $$ String outputRecord = ""-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_18 $$ outputRecord += "Found account " + userName + ".\n"-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_24 $$ outputRecord += "Exploring " + userName + "/" + experimentName + ".\n"-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_30 $$ outputRecord += "Exploring " + userName + "/" + experimentName + "/" + datasetName + ".\n"-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ CD ]
Line_16 $$ String userName = user.getName()-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_23 $$ String experimentName = experiment.getName()-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_29 $$ String datasetName = dataset.getName()-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_32 $$ Date collectionDate = dataset.getTimestamp().getTime()-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_36 $$ for (FTPFile image : images) -->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_10 $$ Session session = CustomSystemSession.create(r)-->Line_37 $$ outputRecord += processImage(userName, experimentName, datasetName, collectionDate, image, client, userNode, session)[ FD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_48 $$ client.logout()[ FD ]
Line_4 $$ OutputStream outStream = null-->Line_58 $$ IOUtils.closeQuietly(outStream)[ FD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_60 $$ client.disconnect()[ FD ]
Line_2 $$ public static String harvestForUser(Node userNode, String alias, Boolean all) -->Line_65 $$ return outputRecord[ CD ]
