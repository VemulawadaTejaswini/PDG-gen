Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ File file = new File(LogHandler.path)[ CD ]
Line_2 $$ public void run() -->Line_4 $$ FileFilter filter = new FileFilter() [ CD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_6 $$ GregorianCalendar cal = new GregorianCalendar()[ CD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_7 $$ cal.setTime(new Date())[ CD ]
Line_6 $$ GregorianCalendar cal = new GregorianCalendar()-->Line_7 $$ cal.setTime(new Date())[ FD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_8 $$ cal.add(GregorianCalendar.DAY_OF_YEAR, -1)[ CD ]
Line_6 $$ GregorianCalendar cal = new GregorianCalendar()-->Line_8 $$ cal.add(GregorianCalendar.DAY_OF_YEAR, -1)[ FD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_9 $$ String oldTime = LogHandler.dateFormat.format(cal.getTime())[ CD ]
Line_9 $$ String oldTime = LogHandler.dateFormat.format(cal.getTime())-->Line_9 $$ String oldTime = LogHandler.dateFormat.format(cal.getTime())[ CD ]
Line_6 $$ GregorianCalendar cal = new GregorianCalendar()-->Line_9 $$ String oldTime = LogHandler.dateFormat.format(cal.getTime())[ FD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_10 $$ return file.getName().toLowerCase().startsWith(oldTime)[ CD ]
Line_10 $$ return file.getName().toLowerCase().startsWith(oldTime)-->Line_10 $$ return file.getName().toLowerCase().startsWith(oldTime)[ CD ]
Line_9 $$ String oldTime = LogHandler.dateFormat.format(cal.getTime())-->Line_10 $$ return file.getName().toLowerCase().startsWith(oldTime)[ FD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_10 $$ return file.getName().toLowerCase().startsWith(oldTime)[ FD ]
Line_3 $$ File file = new File(LogHandler.path)-->Line_10 $$ return file.getName().toLowerCase().startsWith(oldTime)[ FD ]
Line_2 $$ public void run() -->Line_13 $$ File[] list = file.listFiles(filter)[ CD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_13 $$ File[] list = file.listFiles(filter)[ FD ]
Line_3 $$ File file = new File(LogHandler.path)-->Line_13 $$ File[] list = file.listFiles(filter)[ FD ]
Line_4 $$ FileFilter filter = new FileFilter() -->Line_13 $$ File[] list = file.listFiles(filter)[ FD ]
Line_2 $$ public void run() -->Line_14 $$ if (list.length > 0) [ CD ]
Line_14 $$ if (list.length > 0) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_14 $$ if (list.length > 0) -->Line_14 $$ if (list.length > 0) [ CD ]
Line_18 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_18 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_18 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_22 $$ while ((read = in.read(data, 0, 1024)) != -1) out.write(data, 0, read)-->Line_22 $$ out.write(data, 0, read)[ CD ]
Line_21 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(LogHandler.path + list[i].getName() + ".temp"))-->Line_22 $$ out.write(data, 0, read)[ FD ]
Line_21 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(LogHandler.path + list[i].getName() + ".temp"))-->Line_24 $$ out.close()[ FD ]
Line_18 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_21 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(LogHandler.path + list[i].getName() + ".temp"))-->Line_24 $$ out.close()[ FD ]
