Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception [ CD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_3 $$ HttpPost httpPost = new HttpPost(path)[ CD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_4 $$ List<NameValuePair> postParams = new ArrayList<NameValuePair>()[ CD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_5 $$ for (Map.Entry<String, String> param : params.entrySet()) [ FD ]
Line_4 $$ List<NameValuePair> postParams = new ArrayList<NameValuePair>()-->Line_6 $$ postParams.add(new BasicNameValuePair(param.getKey(), param.getValue()))[ FD ]
Line_5 $$ for (Map.Entry<String, String> param : params.entrySet()) -->Line_6 $$ postParams.add(new BasicNameValuePair(param.getKey(), param.getValue()))[ FD ]
Line_5 $$ for (Map.Entry<String, String> param : params.entrySet()) -->Line_6 $$ postParams.add(new BasicNameValuePair(param.getKey(), param.getValue()))[ FD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_8 $$ HttpEntity entity = new UrlEncodedFormEntity(postParams, "UTF-8")[ CD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_9 $$ httpPost.setEntity(entity)[ CD ]
Line_3 $$ HttpPost httpPost = new HttpPost(path)-->Line_9 $$ httpPost.setEntity(entity)[ FD ]
Line_8 $$ HttpEntity entity = new UrlEncodedFormEntity(postParams, "UTF-8")-->Line_9 $$ httpPost.setEntity(entity)[ FD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_10 $$ HttpResponse httpResponse = sClient.execute(httpPost)[ CD ]
Line_10 $$ HttpResponse httpResponse = sClient.execute(httpPost)-->Line_10 $$ HttpResponse httpResponse = sClient.execute(httpPost)[ CD ]
Line_3 $$ HttpPost httpPost = new HttpPost(path)-->Line_10 $$ HttpResponse httpResponse = sClient.execute(httpPost)[ FD ]
Line_2 $$ public static InputStream executePost(String path, Map<String, String> params) throws Exception -->Line_11 $$ if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) [ CD ]
Line_10 $$ HttpResponse httpResponse = sClient.execute(httpPost)-->Line_11 $$ if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) [ FD ]
Line_11 $$ if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_12 $$ return httpResponse.getEntity().getContent()[ CD ]
Line_12 $$ return httpResponse.getEntity().getContent()-->Line_12 $$ return httpResponse.getEntity().getContent()[ CD ]
Line_10 $$ HttpResponse httpResponse = sClient.execute(httpPost)-->Line_12 $$ return httpResponse.getEntity().getContent()[ FD ]
Line_11 $$ if (httpResponse.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_14 $$ return null[ CD ]
