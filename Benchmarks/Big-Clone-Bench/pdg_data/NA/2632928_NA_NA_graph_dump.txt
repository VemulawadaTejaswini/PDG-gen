Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public DicomData load(String imgURL) [ CD ]
Line_5 $$ URL urlConn = new URL(imgURL)-->Line_6 $$ BufferedInputStream inS = new BufferedInputStream(urlConn.openStream())[ FD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_17 $$ while (din.read(buff2) != -1) [ FD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_17 $$ while (din.read(buff2) != -1) [ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_18 $$ tempInt = readInt2(buff2)[ CD ]
Line_18 $$ tempInt = readInt2(buff2)-->Line_18 $$ tempInt = readInt2(buff2)[ FD ]
Line_8 $$ int tempInt-->Line_18 $$ tempInt = readInt2(buff2)[ FD ]
Line_18 $$ tempInt = readInt2(buff2)-->Line_18 $$ tempInt = readInt2(buff2)[ CD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_18 $$ tempInt = readInt2(buff2)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ CD ]
Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ FD ]
Line_11 $$ String group-->Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ FD ]
Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ CD ]
Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ FD ]
Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ FD ]
Line_11 $$ String group-->Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ FD ]
Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ CD ]
Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)-->Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_11 $$ String group-->Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)-->Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ CD ]
Line_19 $$ group = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_20 $$ group += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_21 $$ group += Integer.toString((tempInt & 0x000000f0) >> 4, 16)-->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)-->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_11 $$ String group-->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)-->Line_22 $$ group += Integer.toString((tempInt & 0x0000000f), 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_23 $$ din.readFully(buff2)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_23 $$ din.readFully(buff2)[ FD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_23 $$ din.readFully(buff2)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_24 $$ tempInt = readInt2(buff2)[ CD ]
Line_18 $$ tempInt = readInt2(buff2)-->Line_24 $$ tempInt = readInt2(buff2)[ FD ]
Line_24 $$ tempInt = readInt2(buff2)-->Line_24 $$ tempInt = readInt2(buff2)[ FD ]
Line_8 $$ int tempInt-->Line_24 $$ tempInt = readInt2(buff2)[ FD ]
Line_24 $$ tempInt = readInt2(buff2)-->Line_24 $$ tempInt = readInt2(buff2)[ CD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_24 $$ tempInt = readInt2(buff2)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ CD ]
Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ FD ]
Line_12 $$ String number-->Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ FD ]
Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ CD ]
Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ FD ]
Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ FD ]
Line_12 $$ String number-->Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ FD ]
Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ CD ]
Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)-->Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_12 $$ String number-->Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ FD ]
Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)-->Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ CD ]
Line_25 $$ number = Integer.toString((tempInt & 0x0000f000) >> 12, 16)-->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_26 $$ number += Integer.toString((tempInt & 0x00000f00) >> 8, 16)-->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_27 $$ number += Integer.toString((tempInt & 0x000000f0) >> 4, 16)-->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)-->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_12 $$ String number-->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ FD ]
Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)-->Line_28 $$ number += Integer.toString((tempInt & 0x0000000f), 16)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_29 $$ tag = ("(" + group + "," + number + ")")[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_29 $$ tag = ("(" + group + "," + number + ")")[ FD ]
Line_13 $$ String tag-->Line_29 $$ tag = ("(" + group + "," + number + ")")[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_30 $$ if (debug_level > 3)[ CD ]
Line_30 $$ if (debug_level > 3)-->Line_30 $$ System.out.println("currentTag is : " + tag)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_31 $$ dicomData.setTag(tag)[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_31 $$ dicomData.setTag(tag)[ FD ]
Line_13 $$ String tag-->Line_31 $$ dicomData.setTag(tag)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_32 $$ containDic = dicomDic.isContain(tag)[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_32 $$ containDic = dicomDic.isContain(tag)[ FD ]
Line_13 $$ String tag-->Line_32 $$ containDic = dicomDic.isContain(tag)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_33 $$ if (vrType && !VReqSQ) [ CD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_34 $$ StringBuffer sbuff = new StringBuffer(2)[ CD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_35 $$ din.readFully(buff2)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_35 $$ din.readFully(buff2)[ FD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_35 $$ din.readFully(buff2)[ FD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ CD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_33 $$ if (vrType && !VReqSQ) [ CD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ CD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ CD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ FD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ sbuff.append((char) buff2[i])[ CD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_36 $$ sbuff.append((char) buff2[i])[ FD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_37 $$ dicomData.setVR(tag, sbuff.toString())[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_37 $$ dicomData.setVR(tag, sbuff.toString())[ FD ]
Line_13 $$ String tag-->Line_37 $$ dicomData.setVR(tag, sbuff.toString())[ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_37 $$ dicomData.setVR(tag, sbuff.toString())[ FD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ CD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ FD ]
Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) -->Line_39 $$ din.skip(2)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_39 $$ din.skip(2)[ FD ]
Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) -->Line_40 $$ din.readFully(buff4)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_40 $$ din.readFully(buff4)[ FD ]
Line_10 $$ byte[] buff4 = new byte[4]-->Line_40 $$ din.readFully(buff4)[ FD ]
Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) -->Line_41 $$ length = readInt4(buff4)[ CD ]
Line_41 $$ length = readInt4(buff4)-->Line_41 $$ length = readInt4(buff4)[ FD ]
Line_15 $$ int length-->Line_41 $$ length = readInt4(buff4)[ FD ]
Line_41 $$ length = readInt4(buff4)-->Line_41 $$ length = readInt4(buff4)[ CD ]
Line_10 $$ byte[] buff4 = new byte[4]-->Line_41 $$ length = readInt4(buff4)[ FD ]
Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) -->Line_43 $$ din.readFully(buff2)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_43 $$ din.readFully(buff2)[ FD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_43 $$ din.readFully(buff2)[ FD ]
Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) -->Line_44 $$ length = readInt2(buff2)[ CD ]
Line_41 $$ length = readInt4(buff4)-->Line_44 $$ length = readInt2(buff2)[ FD ]
Line_44 $$ length = readInt2(buff2)-->Line_44 $$ length = readInt2(buff2)[ FD ]
Line_15 $$ int length-->Line_44 $$ length = readInt2(buff2)[ FD ]
Line_44 $$ length = readInt2(buff2)-->Line_44 $$ length = readInt2(buff2)[ CD ]
Line_9 $$ byte[] buff2 = new byte[2]-->Line_44 $$ length = readInt2(buff2)[ FD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_47 $$ if (containDic)[ CD ]
Line_47 $$ if (containDic)-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ FD ]
Line_13 $$ String tag-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ FD ]
Line_13 $$ String tag-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ FD ]
Line_47 $$ if (containDic)-->Line_47 $$ dicomData.setVR(tag, "na")[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_47 $$ dicomData.setVR(tag, "na")[ FD ]
Line_13 $$ String tag-->Line_47 $$ dicomData.setVR(tag, "na")[ FD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_48 $$ din.readFully(buff4)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_48 $$ din.readFully(buff4)[ FD ]
Line_10 $$ byte[] buff4 = new byte[4]-->Line_48 $$ din.readFully(buff4)[ FD ]
Line_33 $$ if (vrType && !VReqSQ) -->Line_49 $$ length = readInt4(buff4)[ CD ]
Line_41 $$ length = readInt4(buff4)-->Line_49 $$ length = readInt4(buff4)[ FD ]
Line_44 $$ length = readInt2(buff2)-->Line_49 $$ length = readInt4(buff4)[ FD ]
Line_49 $$ length = readInt4(buff4)-->Line_49 $$ length = readInt4(buff4)[ FD ]
Line_15 $$ int length-->Line_49 $$ length = readInt4(buff4)[ FD ]
Line_49 $$ length = readInt4(buff4)-->Line_49 $$ length = readInt4(buff4)[ CD ]
Line_10 $$ byte[] buff4 = new byte[4]-->Line_49 $$ length = readInt4(buff4)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ FD ]
Line_13 $$ String tag-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ FD ]
Line_51 $$ if (tag.equals("(fffe,e0dd)"))-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ FD ]
Line_13 $$ String tag-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_52 $$ vr = dicomData.getVR(tag)[ CD ]
Line_52 $$ vr = dicomData.getVR(tag)-->Line_52 $$ vr = dicomData.getVR(tag)[ FD ]
Line_14 $$ String vr-->Line_52 $$ vr = dicomData.getVR(tag)[ FD ]
Line_52 $$ vr = dicomData.getVR(tag)-->Line_52 $$ vr = dicomData.getVR(tag)[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_52 $$ vr = dicomData.getVR(tag)[ FD ]
Line_13 $$ String tag-->Line_52 $$ vr = dicomData.getVR(tag)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_53 $$ if (debug_level > 3)[ CD ]
Line_53 $$ if (debug_level > 3)-->Line_53 $$ System.out.println("currentVR is : " + vr)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_54 $$ if (debug_level > 3)[ CD ]
Line_54 $$ if (debug_level > 3)-->Line_54 $$ System.out.println("currentLength: " + length)[ CD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_55 $$ if (length == -1) [ CD ]
Line_41 $$ length = readInt4(buff4)-->Line_55 $$ if (length == -1) [ FD ]
Line_44 $$ length = readInt2(buff2)-->Line_55 $$ if (length == -1) [ FD ]
Line_49 $$ length = readInt4(buff4)-->Line_55 $$ if (length == -1) [ FD ]
Line_15 $$ int length-->Line_55 $$ if (length == -1) [ FD ]
Line_55 $$ if (length == -1) -->Line_57 $$ length = 0[ CD ]
Line_41 $$ length = readInt4(buff4)-->Line_57 $$ length = 0[ FD ]
Line_44 $$ length = readInt2(buff2)-->Line_57 $$ length = 0[ FD ]
Line_49 $$ length = readInt4(buff4)-->Line_57 $$ length = 0[ FD ]
Line_57 $$ length = 0-->Line_57 $$ length = 0[ FD ]
Line_15 $$ int length-->Line_57 $$ length = 0[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_59 $$ value = new byte[length][ CD ]
Line_59 $$ value = new byte[length]-->Line_59 $$ value = new byte[length][ FD ]
Line_16 $$ byte[] value-->Line_59 $$ value = new byte[length][ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_60 $$ din.readFully(value)[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_60 $$ din.readFully(value)[ FD ]
Line_59 $$ value = new byte[length]-->Line_60 $$ din.readFully(value)[ FD ]
Line_16 $$ byte[] value-->Line_60 $$ din.readFully(value)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_61 $$ dicomData.setValue(tag, value)[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_61 $$ dicomData.setValue(tag, value)[ FD ]
Line_13 $$ String tag-->Line_61 $$ dicomData.setValue(tag, value)[ FD ]
Line_59 $$ value = new byte[length]-->Line_61 $$ dicomData.setValue(tag, value)[ FD ]
Line_16 $$ byte[] value-->Line_61 $$ dicomData.setValue(tag, value)[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_62 $$ if (containDic) [ CD ]
Line_62 $$ if (containDic) -->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ FD ]
Line_13 $$ String tag-->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ FD ]
Line_13 $$ String tag-->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ FD ]
Line_62 $$ if (containDic) -->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ FD ]
Line_13 $$ String tag-->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ FD ]
Line_13 $$ String tag-->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ FD ]
Line_62 $$ if (containDic) -->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ FD ]
Line_13 $$ String tag-->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ FD ]
Line_13 $$ String tag-->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ FD ]
Line_62 $$ if (containDic) -->Line_67 $$ dicomData.setName(tag, "NotContainedInDICOMDictionary")[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_67 $$ dicomData.setName(tag, "NotContainedInDICOMDictionary")[ FD ]
Line_13 $$ String tag-->Line_67 $$ dicomData.setName(tag, "NotContainedInDICOMDictionary")[ FD ]
Line_62 $$ if (containDic) -->Line_68 $$ dicomData.setVM(tag, "na")[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_68 $$ dicomData.setVM(tag, "na")[ FD ]
Line_13 $$ String tag-->Line_68 $$ dicomData.setVM(tag, "na")[ FD ]
Line_62 $$ if (containDic) -->Line_69 $$ dicomData.setVersion(tag, "na")[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_69 $$ dicomData.setVersion(tag, "na")[ FD ]
Line_13 $$ String tag-->Line_69 $$ dicomData.setVersion(tag, "na")[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_71 $$ if (debug_level > 3)[ CD ]
Line_71 $$ if (debug_level > 3)-->Line_71 $$ System.out.println("currentName is : " + dicomData.getName(tag))[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_71 $$ System.out.println("currentName is : " + dicomData.getName(tag))[ FD ]
Line_13 $$ String tag-->Line_71 $$ System.out.println("currentName is : " + dicomData.getName(tag))[ FD ]
Line_17 $$ while (din.read(buff2) != -1) -->Line_72 $$ this.analyzer(tag, vr)[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_72 $$ this.analyzer(tag, vr)[ FD ]
Line_13 $$ String tag-->Line_72 $$ this.analyzer(tag, vr)[ FD ]
Line_52 $$ vr = dicomData.getVR(tag)-->Line_72 $$ this.analyzer(tag, vr)[ FD ]
Line_14 $$ String vr-->Line_72 $$ this.analyzer(tag, vr)[ FD ]
Line_7 $$ DataInputStream din = new DataInputStream(inS)-->Line_74 $$ din.close()[ FD ]
Line_6 $$ BufferedInputStream inS = new BufferedInputStream(urlConn.openStream())-->Line_75 $$ inS.close()[ FD ]
Line_2 $$ public DicomData load(String imgURL) -->Line_83 $$ if (patientPrivacy) [ CD ]
Line_83 $$ if (patientPrivacy) -->Line_84 $$ String patientName[ CD ]
Line_83 $$ if (patientPrivacy) -->Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")[ CD ]
Line_84 $$ String patientName-->Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")[ FD ]
Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")-->Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")[ FD ]
Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")-->Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")[ CD ]
Line_83 $$ if (patientPrivacy) -->Line_86 $$ StringBuffer patientBuf = new StringBuffer(patientName)[ CD ]
Line_83 $$ if (patientPrivacy) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ CD ]
Line_83 $$ if (patientPrivacy) -->Line_83 $$ if (patientPrivacy) [ CD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_84 $$ String patientName-->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_85 $$ patientName = dicomData.getAnalyzedValue("(0010,0010)")-->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ CD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ CD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_88 $$ if (i % 2 == 1)[ CD ]
Line_88 $$ if (i % 2 == 1)-->Line_88 $$ patientBuf.setCharAt(i, '*')[ CD ]
Line_86 $$ StringBuffer patientBuf = new StringBuffer(patientName)-->Line_88 $$ patientBuf.setCharAt(i, '*')[ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_88 $$ patientBuf.setCharAt(i, '*')[ FD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_88 $$ patientBuf.setCharAt(i, '*')[ FD ]
Line_83 $$ if (patientPrivacy) -->Line_90 $$ dicomData.setAnalyzedValue("(0010,0010)", patientBuf.toString())[ CD ]
Line_86 $$ StringBuffer patientBuf = new StringBuffer(patientName)-->Line_90 $$ dicomData.setAnalyzedValue("(0010,0010)", patientBuf.toString())[ FD ]
Line_2 $$ public DicomData load(String imgURL) -->Line_92 $$ return dicomData[ CD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_31 $$ dicomData.setTag(tag)[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_32 $$ containDic = dicomDic.isContain(tag)[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_37 $$ dicomData.setVR(tag, sbuff.toString())[ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_37 $$ dicomData.setVR(tag, sbuff.toString())[ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ FD ]
Line_34 $$ StringBuffer sbuff = new StringBuffer(2)-->Line_38 $$ if (sbuff.toString().equals("OB") || sbuff.toString().equals("OW") || sbuff.toString().equals("SQ")) [ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_47 $$ dicomData.setVR(tag, dicomDic.getVR(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_47 $$ dicomData.setVR(tag, "na")[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_51 $$ if (tag.equals("(fffe,e0dd)"))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_52 $$ vr = dicomData.getVR(tag)[ FD ]
Line_41 $$ length = readInt4(buff4)-->Line_55 $$ if (length == -1) [ FD ]
Line_44 $$ length = readInt2(buff2)-->Line_55 $$ if (length == -1) [ FD ]
Line_49 $$ length = readInt4(buff4)-->Line_55 $$ if (length == -1) [ FD ]
Line_57 $$ length = 0-->Line_55 $$ if (length == -1) [ FD ]
Line_59 $$ value = new byte[length]-->Line_60 $$ din.readFully(value)[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_61 $$ dicomData.setValue(tag, value)[ FD ]
Line_59 $$ value = new byte[length]-->Line_61 $$ dicomData.setValue(tag, value)[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_63 $$ dicomData.setName(tag, dicomDic.getName(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_64 $$ dicomData.setVM(tag, dicomDic.getVM(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_65 $$ dicomData.setVersion(tag, dicomDic.getVersion(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_67 $$ dicomData.setName(tag, "NotContainedInDICOMDictionary")[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_68 $$ dicomData.setVM(tag, "na")[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_69 $$ dicomData.setVersion(tag, "na")[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_71 $$ System.out.println("currentName is : " + dicomData.getName(tag))[ FD ]
Line_29 $$ tag = ("(" + group + "," + number + ")")-->Line_72 $$ this.analyzer(tag, vr)[ FD ]
Line_52 $$ vr = dicomData.getVR(tag)-->Line_72 $$ this.analyzer(tag, vr)[ FD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ FD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ FD ]
Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])-->Line_36 $$ for (int i = 0; i < 2; i++) sbuff.append((char) buff2[i])[ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_87 $$ for (int i = 0; i < patientName.length(); i++) [ FD ]
Line_87 $$ for (int i = 0; i < patientName.length(); i++) -->Line_88 $$ patientBuf.setCharAt(i, '*')[ FD ]
