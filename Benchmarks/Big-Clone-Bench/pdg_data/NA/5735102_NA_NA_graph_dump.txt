Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) [ CD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_3 $$ if (loader == null)[ CD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_3 $$ if (loader == null)[ FD ]
Line_3 $$ if (loader == null)-->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ CD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_3 $$ loader = ClassLoader.getSystemClassLoader()[ CD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()[ CD ]
Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()-->Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()[ CD ]
Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)-->Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)[ CD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)[ FD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)[ FD ]
Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)-->Line_7 $$ if (resources != null) [ FD ]
Line_7 $$ if (resources != null) -->Line_8 $$ while (resources.hasMoreElements()) [ CD ]
Line_7 $$ if (resources != null) -->Line_7 $$ if (resources != null) [ CD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_8 $$ while (resources.hasMoreElements()) [ CD ]
Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)-->Line_8 $$ while (resources.hasMoreElements()) [ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_9 $$ final URL url = resources.nextElement()[ CD ]
Line_9 $$ final URL url = resources.nextElement()-->Line_9 $$ final URL url = resources.nextElement()[ CD ]
Line_6 $$ final Enumeration<URL> resources = loader.getResources(resourceName)-->Line_9 $$ final URL url = resources.nextElement()[ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_10 $$ final Properties mapping[ CD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_11 $$ InputStream urlIn = null[ CD ]
Line_11 $$ InputStream urlIn = null-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_13 $$ urlIn = url.openStream()[ CD ]
Line_9 $$ final URL url = resources.nextElement()-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_10 $$ final Properties mapping-->Line_14 $$ mapping = new Properties()[ FD ]
Line_14 $$ mapping = new Properties()-->Line_14 $$ mapping = new Properties()[ FD ]
Line_10 $$ final Properties mapping-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_14 $$ mapping = new Properties()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_19 $$ if (urlIn != null)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_19 $$ if (urlIn != null)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_20 $$ urlIn.close()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_20 $$ urlIn.close()[ FD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_8 $$ while (resources.hasMoreElements()) -->Line_8 $$ while (resources.hasMoreElements()) [ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ CD ]
Line_10 $$ final Properties mapping-->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ FD ]
Line_14 $$ mapping = new Properties()-->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_25 $$ final String format = (String) keys.nextElement()[ CD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_25 $$ final String format = (String) keys.nextElement()[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_26 $$ final String implClassName = mapping.getProperty(format)[ CD ]
Line_26 $$ final String implClassName = mapping.getProperty(format)-->Line_26 $$ final String implClassName = mapping.getProperty(format)[ CD ]
Line_10 $$ final Properties mapping-->Line_26 $$ final String implClassName = mapping.getProperty(format)[ FD ]
Line_14 $$ mapping = new Properties()-->Line_26 $$ final String implClassName = mapping.getProperty(format)[ FD ]
Line_25 $$ final String format = (String) keys.nextElement()-->Line_26 $$ final String implClassName = mapping.getProperty(format)[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_27 $$ result.add(loadResource(implClassName, loader))[ CD ]
Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()-->Line_27 $$ result.add(loadResource(implClassName, loader))[ FD ]
Line_26 $$ final String implClassName = mapping.getProperty(format)-->Line_27 $$ result.add(loadResource(implClassName, loader))[ FD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_27 $$ result.add(loadResource(implClassName, loader))[ FD ]
Line_3 $$ loader = ClassLoader.getSystemClassLoader()-->Line_27 $$ result.add(loadResource(implClassName, loader))[ FD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_33 $$ PointGeomReader[] resultArr = result.toArray(new PointGeomReader[result.size()])[ CD ]
Line_33 $$ PointGeomReader[] resultArr = result.toArray(new PointGeomReader[result.size()])-->Line_33 $$ PointGeomReader[] resultArr = result.toArray(new PointGeomReader[result.size()])[ CD ]
Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()-->Line_33 $$ PointGeomReader[] resultArr = result.toArray(new PointGeomReader[result.size()])[ FD ]
Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()-->Line_33 $$ PointGeomReader[] resultArr = result.toArray(new PointGeomReader[result.size()])[ FD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_34 $$ Arrays.sort(resultArr, FastComparator.DEFAULT)[ CD ]
Line_33 $$ PointGeomReader[] resultArr = result.toArray(new PointGeomReader[result.size()])-->Line_34 $$ Arrays.sort(resultArr, FastComparator.DEFAULT)[ FD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_35 $$ FastSet.recycle(result)[ CD ]
Line_4 $$ final FastSet<PointGeomReader> result = FastSet.newInstance()-->Line_35 $$ FastSet.recycle(result)[ FD ]
Line_2 $$ private static PointGeomReader[] loadResourceList(final String resourceName, ClassLoader loader) -->Line_36 $$ return resultArr[ CD ]
Line_9 $$ final URL url = resources.nextElement()-->Line_13 $$ urlIn = url.openStream()[ FD ]
Line_10 $$ final Properties mapping-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_14 $$ mapping = new Properties()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_15 $$ mapping.load(urlIn)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_19 $$ if (urlIn != null)[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_19 $$ if (urlIn != null)[ FD ]
Line_11 $$ InputStream urlIn = null-->Line_20 $$ urlIn.close()[ FD ]
Line_13 $$ urlIn = url.openStream()-->Line_20 $$ urlIn.close()[ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) [ FD ]
Line_24 $$ for (Enumeration keys = mapping.propertyNames(); keys.hasMoreElements(); ) -->Line_25 $$ final String format = (String) keys.nextElement()[ FD ]
Line_25 $$ final String format = (String) keys.nextElement()-->Line_26 $$ final String implClassName = mapping.getProperty(format)[ FD ]
Line_26 $$ final String implClassName = mapping.getProperty(format)-->Line_27 $$ result.add(loadResource(implClassName, loader))[ FD ]
