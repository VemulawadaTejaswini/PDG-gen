Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException [ CD ]
Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException -->Line_3 $$ File dir = File.createTempFile("javascript", "" + System.currentTimeMillis())[ CD ]
Line_3 $$ File dir = File.createTempFile("javascript", "" + System.currentTimeMillis())-->Line_3 $$ File dir = File.createTempFile("javascript", "" + System.currentTimeMillis())[ CD ]
Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException -->Line_4 $$ StringBuilder name = new StringBuilder()[ CD ]
Line_3 $$ File dir = File.createTempFile("javascript", "" + System.currentTimeMillis())-->Line_6 $$ if (dir.delete() && dir.mkdirs()) [ FD ]
Line_3 $$ File dir = File.createTempFile("javascript", "" + System.currentTimeMillis())-->Line_6 $$ if (dir.delete() && dir.mkdirs()) [ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_7 $$ File minDir = new File(dir, "min")[ CD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_8 $$ minDir.mkdir()[ CD ]
Line_7 $$ File minDir = new File(dir, "min")-->Line_8 $$ minDir.mkdir()[ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_9 $$ File combineFile = new File(minDir, "script.js")[ CD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_10 $$ File concatFile = new File(minDir, "concat.js")[ CD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_11 $$ Writer combineWriter = new FileWriter(combineFile)[ CD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_12 $$ Writer concatWriter = new FileWriter(concatFile)[ CD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()[ CD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_14 $$ boolean first = true[ CD ]
Line_16 $$ String path = ((Element) link).getAttribute("src")-->Line_16 $$ String path = ((Element) link).getAttribute("src")[ CD ]
Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException -->Line_17 $$ URL url = new URL(buildUrl(base, path))[ FD ]
Line_16 $$ String path = ((Element) link).getAttribute("src")-->Line_17 $$ URL url = new URL(buildUrl(base, path))[ FD ]
Line_18 $$ InputStream inputStream = url.openStream()-->Line_18 $$ InputStream inputStream = url.openStream()[ CD ]
Line_17 $$ URL url = new URL(buildUrl(base, path))-->Line_18 $$ InputStream inputStream = url.openStream()[ FD ]
Line_17 $$ URL url = new URL(buildUrl(base, path))-->Line_19 $$ File jsFile = new File(dir, fileName(url))[ FD ]
Line_18 $$ InputStream inputStream = url.openStream()-->Line_21 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_20 $$ FileOutputStream outputStream = new FileOutputStream(jsFile)-->Line_21 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_20 $$ FileOutputStream outputStream = new FileOutputStream(jsFile)-->Line_22 $$ outputStream.close()[ FD ]
Line_18 $$ InputStream inputStream = url.openStream()-->Line_23 $$ inputStream.close()[ FD ]
Line_14 $$ boolean first = true-->Line_24 $$ if (!first) [ FD ]
Line_24 $$ if (!first) -->Line_24 $$ if (!first) [ CD ]
Line_14 $$ boolean first = true-->Line_24 $$ if (!first) [ FD ]
Line_24 $$ if (!first) -->Line_25 $$ combineWriter.write("\n;\n")[ CD ]
Line_11 $$ Writer combineWriter = new FileWriter(combineFile)-->Line_25 $$ combineWriter.write("\n;\n")[ FD ]
Line_24 $$ if (!first) -->Line_26 $$ concatWriter.write("\n;\n")[ CD ]
Line_12 $$ Writer concatWriter = new FileWriter(concatFile)-->Line_26 $$ concatWriter.write("\n;\n")[ FD ]
Line_24 $$ if (!first) -->Line_28 $$ first = false[ CD ]
Line_14 $$ boolean first = true-->Line_28 $$ first = false[ FD ]
Line_28 $$ first = false-->Line_28 $$ first = false[ FD ]
Line_30 $$ if (Configuration.jsMinification()) -->Line_30 $$ if (Configuration.jsMinification()) [ CD ]
Line_30 $$ if (Configuration.jsMinification()) -->Line_31 $$ Reader reader = new FileReader(jsFile)[ CD ]
Line_33 $$ JavaScriptCompressor jsCompressor = new JavaScriptCompressor(reader, new ErrorReporter() -->Line_35 $$ fails.add(true)[ CD ]
Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()-->Line_35 $$ fails.add(true)[ FD ]
Line_33 $$ JavaScriptCompressor jsCompressor = new JavaScriptCompressor(reader, new ErrorReporter() -->Line_38 $$ fails.add(true)[ CD ]
Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()-->Line_38 $$ fails.add(true)[ FD ]
Line_33 $$ JavaScriptCompressor jsCompressor = new JavaScriptCompressor(reader, new ErrorReporter() -->Line_41 $$ fails.add(true)[ CD ]
Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()-->Line_41 $$ fails.add(true)[ FD ]
Line_33 $$ JavaScriptCompressor jsCompressor = new JavaScriptCompressor(reader, new ErrorReporter() -->Line_42 $$ return null[ CD ]
Line_33 $$ JavaScriptCompressor jsCompressor = new JavaScriptCompressor(reader, new ErrorReporter() -->Line_45 $$ jsCompressor.compress(combineWriter, 0, false, false, true, true)[ FD ]
Line_11 $$ Writer combineWriter = new FileWriter(combineFile)-->Line_45 $$ jsCompressor.compress(combineWriter, 0, false, false, true, true)[ FD ]
Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()-->Line_47 $$ fails.add(true)[ FD ]
Line_30 $$ if (Configuration.jsMinification()) -->Line_49 $$ reader.close()[ CD ]
Line_31 $$ Reader reader = new FileReader(jsFile)-->Line_49 $$ reader.close()[ FD ]
Line_31 $$ Reader reader = new FileReader(jsFile)-->Line_52 $$ IOUtils.copy(reader, concatWriter)[ FD ]
Line_12 $$ Writer concatWriter = new FileWriter(concatFile)-->Line_52 $$ IOUtils.copy(reader, concatWriter)[ FD ]
Line_31 $$ Reader reader = new FileReader(jsFile)-->Line_53 $$ reader.close()[ FD ]
Line_19 $$ File jsFile = new File(dir, fileName(url))-->Line_54 $$ String fileName = jsFile.getName()[ FD ]
Line_56 $$ if (pos >= 0) -->Line_57 $$ fileName = fileName.substring(0, pos)[ CD ]
Line_4 $$ StringBuilder name = new StringBuilder()-->Line_59 $$ name.append(fileName).append(",")[ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_61 $$ combineWriter.close()[ CD ]
Line_11 $$ Writer combineWriter = new FileWriter(combineFile)-->Line_61 $$ combineWriter.close()[ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_62 $$ concatWriter.close()[ CD ]
Line_12 $$ Writer concatWriter = new FileWriter(concatFile)-->Line_62 $$ concatWriter.close()[ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_64 $$ if (fails.size() == 0 && Configuration.jsMinification()) [ CD ]
Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()-->Line_64 $$ if (fails.size() == 0 && Configuration.jsMinification()) [ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_69 $$ name.append(hashCode(IOUtils.toString(reader))).append(".js")[ CD ]
Line_4 $$ StringBuilder name = new StringBuilder()-->Line_69 $$ name.append(hashCode(IOUtils.toString(reader))).append(".js")[ FD ]
Line_31 $$ Reader reader = new FileReader(jsFile)-->Line_69 $$ name.append(hashCode(IOUtils.toString(reader))).append(".js")[ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_70 $$ reader.close()[ CD ]
Line_31 $$ Reader reader = new FileReader(jsFile)-->Line_70 $$ reader.close()[ FD ]
Line_4 $$ StringBuilder name = new StringBuilder()-->Line_71 $$ File targetFile = new File(Configuration.getJsLocalDir(), name.toString())[ FD ]
Line_6 $$ if (dir.delete() && dir.mkdirs()) -->Line_72 $$ if (!targetFile.exists()) [ CD ]
Line_72 $$ if (!targetFile.exists()) -->Line_72 $$ if (!targetFile.exists()) [ CD ]
Line_72 $$ if (!targetFile.exists()) -->Line_72 $$ if (!targetFile.exists()) [ CD ]
Line_72 $$ if (!targetFile.exists()) -->Line_73 $$ targetFile.getParentFile().mkdirs()[ CD ]
Line_72 $$ if (!targetFile.exists()) -->Line_74 $$ if (fails.size() == 0 && Configuration.jsMinification()) [ CD ]
Line_13 $$ final List<Boolean> fails = new LinkedList<Boolean>()-->Line_74 $$ if (fails.size() == 0 && Configuration.jsMinification()) [ FD ]
Line_74 $$ if (fails.size() == 0 && Configuration.jsMinification()) -->Line_75 $$ FileUtils.copyFile(combineFile, targetFile)[ CD ]
Line_9 $$ File combineFile = new File(minDir, "script.js")-->Line_75 $$ FileUtils.copyFile(combineFile, targetFile)[ FD ]
Line_74 $$ if (fails.size() == 0 && Configuration.jsMinification()) -->Line_77 $$ FileUtils.copyFile(concatFile, targetFile)[ CD ]
Line_10 $$ File concatFile = new File(minDir, "concat.js")-->Line_77 $$ FileUtils.copyFile(concatFile, targetFile)[ FD ]
Line_72 $$ if (!targetFile.exists()) -->Line_79 $$ newFiles.add(targetFile)[ CD ]
Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException -->Line_79 $$ newFiles.add(targetFile)[ FD ]
Line_72 $$ if (!targetFile.exists()) -->Line_80 $$ logger.info("Combined several js files into the single " + targetFile + " [size=" + targetFile.length() + "].")[ CD ]
Line_3 $$ File dir = File.createTempFile("javascript", "" + System.currentTimeMillis())-->Line_84 $$ FileUtils.deleteQuietly(dir)[ FD ]
Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException -->Line_86 $$ if (name.length() != 0) [ CD ]
Line_4 $$ StringBuilder name = new StringBuilder()-->Line_86 $$ if (name.length() != 0) [ FD ]
Line_2 $$ public static Node combineJs(URL base, List<Node> linkJs, List<File> newFiles) throws IOException -->Line_87 $$ Element element = (Element) linkJs.get(0)[ FD ]
Line_86 $$ if (name.length() != 0) -->Line_88 $$ element.setAttribute("src", Configuration.getJsUrlPrefix() + name.toString())[ CD ]
Line_4 $$ StringBuilder name = new StringBuilder()-->Line_88 $$ element.setAttribute("src", Configuration.getJsUrlPrefix() + name.toString())[ FD ]
Line_86 $$ if (name.length() != 0) -->Line_89 $$ return element[ CD ]
Line_86 $$ if (name.length() != 0) -->Line_91 $$ return null[ CD ]
