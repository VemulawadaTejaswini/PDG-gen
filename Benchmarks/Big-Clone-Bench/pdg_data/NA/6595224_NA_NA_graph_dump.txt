Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String getTextResponse(String address) throws Exception [ CD ]
Line_2 $$ private String getTextResponse(String address) throws Exception -->Line_3 $$ URL url = new URL(address)[ CD ]
Line_2 $$ private String getTextResponse(String address) throws Exception -->Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(address)-->Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private String getTextResponse(String address) throws Exception -->Line_5 $$ con.setUseCaches(false)[ CD ]
Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_5 $$ con.setUseCaches(false)[ FD ]
Line_2 $$ private String getTextResponse(String address) throws Exception -->Line_6 $$ BufferedReader in = null[ CD ]
Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_8 $$ con.connect()[ FD ]
Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_9 $$ assertEquals(HttpURLConnection.HTTP_OK, con.getResponseCode())[ FD ]
Line_6 $$ BufferedReader in = null-->Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_13 $$ while ((inputLine = in.readLine()) != null) -->Line_13 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_12 $$ String inputLine = null-->Line_13 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_13 $$ while ((inputLine = in.readLine()) != null) -->Line_13 $$ while ((inputLine = in.readLine()) != null) [ CD ]
Line_6 $$ BufferedReader in = null-->Line_13 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_13 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_13 $$ while ((inputLine = in.readLine()) != null) -->Line_14 $$ builder.append(inputLine)[ CD ]
Line_11 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ builder.append(inputLine)[ FD ]
Line_13 $$ while ((inputLine = in.readLine()) != null) -->Line_14 $$ builder.append(inputLine)[ FD ]
Line_12 $$ String inputLine = null-->Line_14 $$ builder.append(inputLine)[ FD ]
Line_16 $$ return builder.toString()-->Line_16 $$ return builder.toString()[ CD ]
Line_11 $$ StringBuilder builder = new StringBuilder()-->Line_16 $$ return builder.toString()[ FD ]
Line_6 $$ BufferedReader in = null-->Line_18 $$ if (in != null) [ FD ]
Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_18 $$ if (in != null) [ FD ]
Line_18 $$ if (in != null) -->Line_19 $$ in.close()[ CD ]
Line_6 $$ BufferedReader in = null-->Line_19 $$ in.close()[ FD ]
Line_10 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_19 $$ in.close()[ FD ]
Line_4 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_21 $$ con.disconnect()[ FD ]
Line_13 $$ while ((inputLine = in.readLine()) != null) -->Line_14 $$ builder.append(inputLine)[ FD ]
