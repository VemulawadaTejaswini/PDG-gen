Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean copy(File source, File target) [ CD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ if (!source.exists())[ CD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ if (!source.exists())[ CD ]
Line_2 $$ public static boolean copy(File source, File target) -->Line_4 $$ if (!source.exists())[ FD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ return false[ CD ]
Line_2 $$ public static boolean copy(File source, File target) -->Line_5 $$ target.getParentFile().mkdirs()[ FD ]
Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)-->Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)[ FD ]
Line_9 $$ int len-->Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)[ FD ]
Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)-->Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)[ CD ]
Line_6 $$ InputStream input = new FileInputStream(source)-->Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)[ FD ]
Line_8 $$ byte[] buf = new byte[1024]-->Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)[ FD ]
Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)-->Line_10 $$ output.write(buf, 0, len)[ CD ]
Line_7 $$ OutputStream output = new FileOutputStream(target)-->Line_10 $$ output.write(buf, 0, len)[ FD ]
Line_8 $$ byte[] buf = new byte[1024]-->Line_10 $$ output.write(buf, 0, len)[ FD ]
Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)-->Line_10 $$ output.write(buf, 0, len)[ FD ]
Line_9 $$ int len-->Line_10 $$ output.write(buf, 0, len)[ FD ]
Line_6 $$ InputStream input = new FileInputStream(source)-->Line_11 $$ input.close()[ FD ]
Line_7 $$ OutputStream output = new FileOutputStream(target)-->Line_12 $$ output.close()[ FD ]
Line_10 $$ while ((len = input.read(buf)) > 0) output.write(buf, 0, len)-->Line_10 $$ output.write(buf, 0, len)[ FD ]
