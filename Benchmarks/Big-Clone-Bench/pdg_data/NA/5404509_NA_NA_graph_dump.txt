Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testThreadCheck() throws Exception [ CD ]
Line_2 $$ public void testThreadCheck() throws Exception -->Line_3 $$ ContentResolver resolver = getContext().getContentResolver()[ CD ]
Line_3 $$ ContentResolver resolver = getContext().getContentResolver()-->Line_3 $$ ContentResolver resolver = getContext().getContentResolver()[ CD ]
Line_2 $$ public void testThreadCheck() throws Exception -->Line_4 $$ GoogleHttpClient client = new GoogleHttpClient(resolver, "Test", false)[ CD ]
Line_4 $$ GoogleHttpClient client = new GoogleHttpClient(resolver, "Test", false)-->Line_9 $$ client.execute(method)[ FD ]
Line_6 $$ HttpGet method = new HttpGet(mServerUrl)-->Line_9 $$ client.execute(method)[ FD ]
Line_12 $$ if (!e.toString().contains("forbids HTTP requests"))-->Line_12 $$ if (!e.toString().contains("forbids HTTP requests"))[ CD ]
Line_12 $$ if (!e.toString().contains("forbids HTTP requests"))-->Line_12 $$ if (!e.toString().contains("forbids HTTP requests"))[ CD ]
Line_16 $$ HttpResponse response = client.execute(method)-->Line_16 $$ HttpResponse response = client.execute(method)[ CD ]
Line_4 $$ GoogleHttpClient client = new GoogleHttpClient(resolver, "Test", false)-->Line_16 $$ HttpResponse response = client.execute(method)[ FD ]
Line_6 $$ HttpGet method = new HttpGet(mServerUrl)-->Line_16 $$ HttpResponse response = client.execute(method)[ FD ]
Line_16 $$ HttpResponse response = client.execute(method)-->Line_17 $$ assertEquals("/", EntityUtils.toString(response.getEntity()))[ FD ]
Line_4 $$ GoogleHttpClient client = new GoogleHttpClient(resolver, "Test", false)-->Line_19 $$ client.close()[ FD ]
