Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException [ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_3 $$ URL url = new URL("http://cdf.gsfc.nasa.gov/html/CDFLeapSeconds.txt")[ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_4 $$ InputStream in[ CD ]
Line_4 $$ InputStream in-->Line_6 $$ in = url.openStream()[ FD ]
Line_6 $$ in = url.openStream()-->Line_6 $$ in = url.openStream()[ FD ]
Line_6 $$ in = url.openStream()-->Line_6 $$ in = url.openStream()[ CD ]
Line_3 $$ URL url = new URL("http://cdf.gsfc.nasa.gov/html/CDFLeapSeconds.txt")-->Line_6 $$ in = url.openStream()[ FD ]
Line_3 $$ URL url = new URL("http://cdf.gsfc.nasa.gov/html/CDFLeapSeconds.txt")-->Line_8 $$ url = LeapSecondsConverter.class.getResource("CDFLeapSeconds.txt")[ FD ]
Line_8 $$ url = LeapSecondsConverter.class.getResource("CDFLeapSeconds.txt")-->Line_8 $$ url = LeapSecondsConverter.class.getResource("CDFLeapSeconds.txt")[ FD ]
Line_8 $$ url = LeapSecondsConverter.class.getResource("CDFLeapSeconds.txt")-->Line_8 $$ url = LeapSecondsConverter.class.getResource("CDFLeapSeconds.txt")[ CD ]
Line_4 $$ InputStream in-->Line_9 $$ in = url.openStream()[ FD ]
Line_6 $$ in = url.openStream()-->Line_9 $$ in = url.openStream()[ FD ]
Line_9 $$ in = url.openStream()-->Line_9 $$ in = url.openStream()[ FD ]
Line_9 $$ in = url.openStream()-->Line_9 $$ in = url.openStream()[ CD ]
Line_3 $$ URL url = new URL("http://cdf.gsfc.nasa.gov/html/CDFLeapSeconds.txt")-->Line_9 $$ in = url.openStream()[ FD ]
Line_8 $$ url = LeapSecondsConverter.class.getResource("CDFLeapSeconds.txt")-->Line_9 $$ in = url.openStream()[ FD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_12 $$ BufferedReader r = new BufferedReader(new InputStreamReader(in))[ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_13 $$ String s = ""[ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_16 $$ String lastLine = s[ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_17 $$ while (s != null) [ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException [ CD ]
Line_13 $$ String s = ""-->Line_17 $$ while (s != null) [ FD ]
Line_17 $$ while (s != null) -->Line_18 $$ s = r.readLine()[ CD ]
Line_18 $$ s = r.readLine()-->Line_18 $$ s = r.readLine()[ FD ]
Line_13 $$ String s = ""-->Line_18 $$ s = r.readLine()[ FD ]
Line_18 $$ s = r.readLine()-->Line_18 $$ s = r.readLine()[ CD ]
Line_12 $$ BufferedReader r = new BufferedReader(new InputStreamReader(in))-->Line_18 $$ s = r.readLine()[ FD ]
Line_17 $$ while (s != null) -->Line_19 $$ if (s == null) [ CD ]
Line_18 $$ s = r.readLine()-->Line_19 $$ if (s == null) [ FD ]
Line_13 $$ String s = ""-->Line_19 $$ if (s == null) [ FD ]
Line_19 $$ if (s == null) -->Line_20 $$ System.err.println("Last leap second read from " + url + " " + lastLine)[ CD ]
Line_17 $$ while (s != null) -->Line_23 $$ if (s.startsWith(";")) [ CD ]
Line_18 $$ s = r.readLine()-->Line_23 $$ if (s.startsWith(";")) [ FD ]
Line_13 $$ String s = ""-->Line_23 $$ if (s.startsWith(";")) [ FD ]
Line_23 $$ if (s.startsWith(";")) -->Line_23 $$ if (s.startsWith(";")) [ CD ]
Line_18 $$ s = r.readLine()-->Line_23 $$ if (s.startsWith(";")) [ FD ]
Line_13 $$ String s = ""-->Line_23 $$ if (s.startsWith(";")) [ FD ]
Line_17 $$ while (s != null) -->Line_26 $$ String[] ss = s.trim().split("\\s+", -2)[ CD ]
Line_26 $$ String[] ss = s.trim().split("\\s+", -2)-->Line_26 $$ String[] ss = s.trim().split("\\s+", -2)[ CD ]
Line_18 $$ s = r.readLine()-->Line_26 $$ String[] ss = s.trim().split("\\s+", -2)[ FD ]
Line_13 $$ String s = ""-->Line_26 $$ String[] ss = s.trim().split("\\s+", -2)[ FD ]
Line_17 $$ while (s != null) -->Line_27 $$ if (ss[0].compareTo("1972") < 0) [ CD ]
Line_17 $$ while (s != null) -->Line_30 $$ int iyear = Integer.parseInt(ss[0])[ CD ]
Line_30 $$ int iyear = Integer.parseInt(ss[0])-->Line_30 $$ int iyear = Integer.parseInt(ss[0])[ CD ]
Line_17 $$ while (s != null) -->Line_31 $$ int imonth = Integer.parseInt(ss[1])[ CD ]
Line_31 $$ int imonth = Integer.parseInt(ss[1])-->Line_31 $$ int imonth = Integer.parseInt(ss[1])[ CD ]
Line_17 $$ while (s != null) -->Line_32 $$ int iday = Integer.parseInt(ss[2])[ CD ]
Line_32 $$ int iday = Integer.parseInt(ss[2])-->Line_32 $$ int iday = Integer.parseInt(ss[2])[ CD ]
Line_17 $$ while (s != null) -->Line_33 $$ int ileap = (int) (Double.parseDouble(ss[3]))[ CD ]
Line_17 $$ while (s != null) -->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ CD ]
Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ CD ]
Line_30 $$ int iyear = Integer.parseInt(ss[0])-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ FD ]
Line_31 $$ int imonth = Integer.parseInt(ss[1])-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ FD ]
Line_32 $$ int iday = Integer.parseInt(ss[2])-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ FD ]
Line_17 $$ while (s != null) -->Line_35 $$ leapSeconds.add(Long.valueOf(((long) us2000) * 1000L - 43200000000000L + (long) (ileap - 32) * 1000000000))[ CD ]
Line_17 $$ while (s != null) -->Line_36 $$ withoutLeapSeconds.add(us2000)[ CD ]
Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)-->Line_36 $$ withoutLeapSeconds.add(us2000)[ FD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_38 $$ leapSeconds.add(Long.MAX_VALUE)[ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_39 $$ withoutLeapSeconds.add(Double.MAX_VALUE)[ CD ]
Line_2 $$ private static void updateLeapSeconds() throws IOException, MalformedURLException, NumberFormatException -->Line_40 $$ lastUpdateMillis = System.currentTimeMillis()[ CD ]
Line_18 $$ s = r.readLine()-->Line_17 $$ while (s != null) [ FD ]
Line_18 $$ s = r.readLine()-->Line_17 $$ while (s != null) [ FD ]
Line_18 $$ s = r.readLine()-->Line_19 $$ if (s == null) [ FD ]
Line_18 $$ s = r.readLine()-->Line_23 $$ if (s.startsWith(";")) [ FD ]
Line_18 $$ s = r.readLine()-->Line_23 $$ if (s.startsWith(";")) [ FD ]
Line_18 $$ s = r.readLine()-->Line_26 $$ String[] ss = s.trim().split("\\s+", -2)[ FD ]
Line_30 $$ int iyear = Integer.parseInt(ss[0])-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ FD ]
Line_31 $$ int imonth = Integer.parseInt(ss[1])-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ FD ]
Line_32 $$ int iday = Integer.parseInt(ss[2])-->Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)[ FD ]
Line_34 $$ double us2000 = TimeUtil.createTimeDatum(iyear, imonth, iday, 0, 0, 0, 0).doubleValue(Units.us2000)-->Line_36 $$ withoutLeapSeconds.add(us2000)[ FD ]
