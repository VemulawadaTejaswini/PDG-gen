Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected EntailmentType invokeHttp(String stuff) [ CD ]
Line_2 $$ protected EntailmentType invokeHttp(String stuff) -->Line_3 $$ String data = encode("theory") + "=" + encode(stuff)[ CD ]
Line_2 $$ protected EntailmentType invokeHttp(String stuff) -->Line_3 $$ String data = encode("theory") + "=" + encode(stuff)[ FD ]
Line_2 $$ protected EntailmentType invokeHttp(String stuff) -->Line_4 $$ URL url[ CD ]
Line_2 $$ protected EntailmentType invokeHttp(String stuff) -->Line_5 $$ EntailmentType result = EntailmentType.unkown[ CD ]
Line_4 $$ URL url-->Line_7 $$ url = new URL(httpAddress)[ FD ]
Line_7 $$ url = new URL(httpAddress)-->Line_7 $$ url = new URL(httpAddress)[ FD ]
Line_2 $$ protected EntailmentType invokeHttp(String stuff) -->Line_11 $$ log.debug("sending theory to endpoint: " + url)[ CD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_13 $$ URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ URL url-->Line_13 $$ URLConnection conn = url.openConnection()[ FD ]
Line_7 $$ url = new URL(httpAddress)-->Line_13 $$ URLConnection conn = url.openConnection()[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_14 $$ conn.setDoOutput(true)[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_16 $$ wr.write(data)[ FD ]
Line_3 $$ String data = encode("theory") + "=" + encode(stuff)-->Line_16 $$ wr.write(data)[ FD ]
Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_17 $$ wr.flush()[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_20 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_19 $$ String line-->Line_20 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_20 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_20 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_21 $$ log.debug("resultline: " + line)[ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ if (line.contains("Proof found")) [ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ if (line.contains("Proof found")) [ FD ]
Line_19 $$ String line-->Line_22 $$ if (line.contains("Proof found")) [ FD ]
Line_22 $$ if (line.contains("Proof found")) -->Line_22 $$ if (line.contains("Proof found")) [ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ if (line.contains("Proof found")) [ FD ]
Line_19 $$ String line-->Line_22 $$ if (line.contains("Proof found")) [ FD ]
Line_22 $$ if (line.contains("Proof found")) -->Line_23 $$ result = EntailmentType.entailed[ CD ]
Line_23 $$ result = EntailmentType.entailed-->Line_23 $$ result = EntailmentType.entailed[ FD ]
Line_5 $$ EntailmentType result = EntailmentType.unkown-->Line_23 $$ result = EntailmentType.entailed[ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_25 $$ if (line.contains("Ran out of time")) [ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_25 $$ if (line.contains("Ran out of time")) [ FD ]
Line_19 $$ String line-->Line_25 $$ if (line.contains("Ran out of time")) [ FD ]
Line_25 $$ if (line.contains("Ran out of time")) -->Line_25 $$ if (line.contains("Ran out of time")) [ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_25 $$ if (line.contains("Ran out of time")) [ FD ]
Line_19 $$ String line-->Line_25 $$ if (line.contains("Ran out of time")) [ FD ]
Line_25 $$ if (line.contains("Ran out of time")) -->Line_26 $$ result = EntailmentType.unkown[ CD ]
Line_23 $$ result = EntailmentType.entailed-->Line_26 $$ result = EntailmentType.unkown[ FD ]
Line_26 $$ result = EntailmentType.unkown-->Line_26 $$ result = EntailmentType.unkown[ FD ]
Line_5 $$ EntailmentType result = EntailmentType.unkown-->Line_26 $$ result = EntailmentType.unkown[ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ if (line.contains("Completion found")) [ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ if (line.contains("Completion found")) [ FD ]
Line_19 $$ String line-->Line_28 $$ if (line.contains("Completion found")) [ FD ]
Line_28 $$ if (line.contains("Completion found")) -->Line_28 $$ if (line.contains("Completion found")) [ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ if (line.contains("Completion found")) [ FD ]
Line_19 $$ String line-->Line_28 $$ if (line.contains("Completion found")) [ FD ]
Line_28 $$ if (line.contains("Completion found")) -->Line_29 $$ result = EntailmentType.notEntailed[ CD ]
Line_23 $$ result = EntailmentType.entailed-->Line_29 $$ result = EntailmentType.notEntailed[ FD ]
Line_26 $$ result = EntailmentType.unkown-->Line_29 $$ result = EntailmentType.notEntailed[ FD ]
Line_29 $$ result = EntailmentType.notEntailed-->Line_29 $$ result = EntailmentType.notEntailed[ FD ]
Line_5 $$ EntailmentType result = EntailmentType.unkown-->Line_29 $$ result = EntailmentType.notEntailed[ FD ]
Line_15 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_32 $$ wr.close()[ FD ]
Line_18 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_33 $$ rd.close()[ FD ]
Line_2 $$ protected EntailmentType invokeHttp(String stuff) -->Line_37 $$ return result[ CD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ if (line.contains("Proof found")) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_22 $$ if (line.contains("Proof found")) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_25 $$ if (line.contains("Ran out of time")) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_25 $$ if (line.contains("Ran out of time")) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ if (line.contains("Completion found")) [ FD ]
Line_20 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ if (line.contains("Completion found")) [ FD ]
