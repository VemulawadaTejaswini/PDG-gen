Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception [ CD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_3 $$ InputStream in = new ByteArrayInputStream(content)[ CD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_5 $$ CodecUtil.encodeQuotedPrintableBinary(in, out)[ CD ]
Line_3 $$ InputStream in = new ByteArrayInputStream(content)-->Line_5 $$ CodecUtil.encodeQuotedPrintableBinary(in, out)[ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_5 $$ CodecUtil.encodeQuotedPrintableBinary(in, out)[ FD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_6 $$ in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()))[ CD ]
Line_3 $$ InputStream in = new ByteArrayInputStream(content)-->Line_6 $$ in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()))[ FD ]
Line_6 $$ in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()))-->Line_6 $$ in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()))[ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_6 $$ in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()))[ FD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_7 $$ out = new ByteArrayOutputStream()[ CD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_7 $$ out = new ByteArrayOutputStream()[ FD ]
Line_7 $$ out = new ByteArrayOutputStream()-->Line_7 $$ out = new ByteArrayOutputStream()[ FD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_8 $$ IOUtils.copy(in, out)[ CD ]
Line_3 $$ InputStream in = new ByteArrayInputStream(content)-->Line_8 $$ IOUtils.copy(in, out)[ FD ]
Line_6 $$ in = new QuotedPrintableInputStream(new ByteArrayInputStream(out.toByteArray()))-->Line_8 $$ IOUtils.copy(in, out)[ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_8 $$ IOUtils.copy(in, out)[ FD ]
Line_7 $$ out = new ByteArrayOutputStream()-->Line_8 $$ IOUtils.copy(in, out)[ FD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_9 $$ assertEquals(content, out.toByteArray())[ CD ]
Line_2 $$ private void checkRoundtrip(byte[] content) throws Exception -->Line_9 $$ assertEquals(content, out.toByteArray())[ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_9 $$ assertEquals(content, out.toByteArray())[ FD ]
Line_7 $$ out = new ByteArrayOutputStream()-->Line_9 $$ assertEquals(content, out.toByteArray())[ FD ]
