Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception [ CD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_3 $$ FTPClient client = new FTPClient()[ CD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_4 $$ client.connect(server.getExternalName(), server.getPort())[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_4 $$ client.connect(server.getExternalName(), server.getPort())[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_5 $$ int reply = client.getReplyCode()[ CD ]
Line_5 $$ int reply = client.getReplyCode()-->Line_5 $$ int reply = client.getReplyCode()[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_5 $$ int reply = client.getReplyCode()[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_6 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_6 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_6 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_6 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_6 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_5 $$ int reply = client.getReplyCode()-->Line_6 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_9 $$ client.login(server.getDefaultUserName(), server.getDefaultUserPassword())[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_9 $$ client.login(server.getDefaultUserName(), server.getDefaultUserPassword())[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_10 $$ reply = client.getReplyCode()[ CD ]
Line_5 $$ int reply = client.getReplyCode()-->Line_10 $$ reply = client.getReplyCode()[ FD ]
Line_10 $$ reply = client.getReplyCode()-->Line_10 $$ reply = client.getReplyCode()[ FD ]
Line_10 $$ reply = client.getReplyCode()-->Line_10 $$ reply = client.getReplyCode()[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_10 $$ reply = client.getReplyCode()[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_5 $$ int reply = client.getReplyCode()-->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_10 $$ reply = client.getReplyCode()-->Line_11 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_14 $$ InputStream stream = getClass().getClassLoader().getResourceAsStream("res/conf/ftpd.properties")[ CD ]
Line_14 $$ InputStream stream = getClass().getClassLoader().getResourceAsStream("res/conf/ftpd.properties")-->Line_14 $$ InputStream stream = getClass().getClassLoader().getResourceAsStream("res/conf/ftpd.properties")[ CD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_15 $$ client.storeFile(fileName, stream)[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_15 $$ client.storeFile(fileName, stream)[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_15 $$ client.storeFile(fileName, stream)[ FD ]
Line_14 $$ InputStream stream = getClass().getClassLoader().getResourceAsStream("res/conf/ftpd.properties")-->Line_15 $$ client.storeFile(fileName, stream)[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_16 $$ File transfferedFile = new File(server.getServerRootDirectory(), fileName)[ CD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_17 $$ assertTrue(transfferedFile.exists())[ CD ]
Line_16 $$ File transfferedFile = new File(server.getServerRootDirectory(), fileName)-->Line_17 $$ assertTrue(transfferedFile.exists())[ FD ]
Line_2 $$ private void transferFile(String fileName) throws SocketException, IOException, Exception -->Line_18 $$ assertTrue(transfferedFile.delete())[ CD ]
Line_16 $$ File transfferedFile = new File(server.getServerRootDirectory(), fileName)-->Line_18 $$ assertTrue(transfferedFile.delete())[ FD ]
