Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void dispatchContent(InputStream is) throws IOException [ CD ]
Line_2 $$ public void dispatchContent(InputStream is) throws IOException -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debug("Sending content message over JMS")[ CD ]
Line_2 $$ public void dispatchContent(InputStream is) throws IOException -->Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void dispatchContent(InputStream is) throws IOException -->Line_7 $$ IOUtils.copy(is, bos)[ CD ]
Line_2 $$ public void dispatchContent(InputStream is) throws IOException -->Line_7 $$ IOUtils.copy(is, bos)[ FD ]
Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_7 $$ IOUtils.copy(is, bos)[ FD ]
Line_2 $$ public void dispatchContent(InputStream is) throws IOException -->Line_8 $$ this.send(new MessageCreator() [ CD ]
Line_8 $$ this.send(new MessageCreator() -->Line_10 $$ BytesMessage message = session.createBytesMessage()[ CD ]
Line_10 $$ BytesMessage message = session.createBytesMessage()-->Line_10 $$ BytesMessage message = session.createBytesMessage()[ CD ]
Line_8 $$ this.send(new MessageCreator() -->Line_10 $$ BytesMessage message = session.createBytesMessage()[ FD ]
Line_8 $$ this.send(new MessageCreator() -->Line_11 $$ message.writeBytes(bos.toByteArray())[ CD ]
Line_10 $$ BytesMessage message = session.createBytesMessage()-->Line_11 $$ message.writeBytes(bos.toByteArray())[ FD ]
Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_11 $$ message.writeBytes(bos.toByteArray())[ FD ]
Line_8 $$ this.send(new MessageCreator() -->Line_12 $$ return message[ CD ]
