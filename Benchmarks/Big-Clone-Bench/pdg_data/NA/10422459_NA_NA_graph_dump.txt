Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private synchronized void renewToken() [ CD ]
Line_2 $$ private synchronized void renewToken() -->Line_3 $$ if (!(System.currentTimeMillis() > (lastTokenRenewal + 10000)))[ CD ]
Line_3 $$ if (!(System.currentTimeMillis() > (lastTokenRenewal + 10000)))-->Line_3 $$ if (!(System.currentTimeMillis() > (lastTokenRenewal + 10000)))[ CD ]
Line_3 $$ if (!(System.currentTimeMillis() > (lastTokenRenewal + 10000)))-->Line_3 $$ return[ CD ]
Line_2 $$ private synchronized void renewToken() -->Line_4 $$ lastTokenRenewal = System.currentTimeMillis()[ CD ]
Line_2 $$ private synchronized void renewToken() -->Line_5 $$ String token = null[ CD ]
Line_2 $$ private synchronized void renewToken() -->Line_6 $$ System.out.println("loading error - refresh token")[ CD ]
Line_2 $$ private synchronized void renewToken() -->Line_7 $$ byte[] buff = null[ CD ]
Line_12 $$ URLConnection connection = remoteurl.openConnection()-->Line_12 $$ URLConnection connection = remoteurl.openConnection()[ CD ]
Line_11 $$ URL remoteurl = new URL(getServingURL() + "?token_timeout=true")-->Line_12 $$ URLConnection connection = remoteurl.openConnection()[ FD ]
Line_12 $$ URLConnection connection = remoteurl.openConnection()-->Line_13 $$ connection.setRequestProperty("Referer", getServingURL())[ FD ]
Line_14 $$ int length = connection.getContentLength()-->Line_14 $$ int length = connection.getContentLength()[ CD ]
Line_12 $$ URLConnection connection = remoteurl.openConnection()-->Line_14 $$ int length = connection.getContentLength()[ FD ]
Line_15 $$ InputStream in = connection.getInputStream()-->Line_15 $$ InputStream in = connection.getInputStream()[ CD ]
Line_12 $$ URLConnection connection = remoteurl.openConnection()-->Line_15 $$ InputStream in = connection.getInputStream()[ FD ]
Line_7 $$ byte[] buff = null-->Line_16 $$ buff = new byte[length][ FD ]
Line_16 $$ buff = new byte[length]-->Line_16 $$ buff = new byte[length][ FD ]
Line_17 $$ int bytesRead = 0-->Line_18 $$ while (bytesRead < length) [ FD ]
Line_14 $$ int length = connection.getContentLength()-->Line_18 $$ while (bytesRead < length) [ FD ]
Line_18 $$ while (bytesRead < length) -->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ CD ]
Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_17 $$ int bytesRead = 0-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ CD ]
Line_15 $$ InputStream in = connection.getInputStream()-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_7 $$ byte[] buff = null-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_16 $$ buff = new byte[length]-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_17 $$ int bytesRead = 0-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_15 $$ InputStream in = connection.getInputStream()-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
Line_5 $$ String token = null-->Line_21 $$ token = new String(buff)[ FD ]
Line_21 $$ token = new String(buff)-->Line_21 $$ token = new String(buff)[ FD ]
Line_2 $$ private synchronized void renewToken() -->Line_24 $$ if (token != null && !token.equals("")) [ CD ]
Line_24 $$ if (token != null && !token.equals("")) -->Line_24 $$ if (token != null && !token.equals("")) [ CD ]
Line_5 $$ String token = null-->Line_24 $$ if (token != null && !token.equals("")) [ FD ]
Line_21 $$ token = new String(buff)-->Line_24 $$ if (token != null && !token.equals("")) [ FD ]
Line_24 $$ if (token != null && !token.equals("")) -->Line_25 $$ token = token.trim()[ CD ]
Line_5 $$ String token = null-->Line_25 $$ token = token.trim()[ FD ]
Line_21 $$ token = new String(buff)-->Line_25 $$ token = token.trim()[ FD ]
Line_25 $$ token = token.trim()-->Line_25 $$ token = token.trim()[ FD ]
Line_25 $$ token = token.trim()-->Line_25 $$ token = token.trim()[ CD ]
Line_5 $$ String token = null-->Line_25 $$ token = token.trim()[ FD ]
Line_21 $$ token = new String(buff)-->Line_25 $$ token = token.trim()[ FD ]
Line_25 $$ token = token.trim()-->Line_25 $$ token = token.trim()[ FD ]
Line_24 $$ if (token != null && !token.equals("")) -->Line_26 $$ this.info.setToken(token)[ CD ]
Line_5 $$ String token = null-->Line_26 $$ this.info.setToken(token)[ FD ]
Line_21 $$ token = new String(buff)-->Line_26 $$ this.info.setToken(token)[ FD ]
Line_25 $$ token = token.trim()-->Line_26 $$ this.info.setToken(token)[ FD ]
Line_24 $$ if (token != null && !token.equals("")) -->Line_28 $$ System.out.println("Token returned was null")[ CD ]
Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())-->Line_18 $$ while (bytesRead < length) [ FD ]
Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())-->Line_18 $$ while (bytesRead < length) [ FD ]
Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())-->Line_19 $$ bytesRead += in.read(buff, bytesRead, in.available())[ FD ]
