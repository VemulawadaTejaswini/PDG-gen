Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean reject(String surl, ProgressMonitor mon) throws IllegalArgumentException [ CD ]
Line_2 $$ public boolean reject(String surl, ProgressMonitor mon) throws IllegalArgumentException -->Line_3 $$ DocumentBuilder builder = null[ CD ]
Line_3 $$ DocumentBuilder builder = null-->Line_5 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()[ FD ]
Line_5 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()-->Line_5 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()[ FD ]
Line_5 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()-->Line_5 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()[ CD ]
Line_6 $$ URISplit split = URISplit.parse(surl)-->Line_6 $$ URISplit split = URISplit.parse(surl)[ CD ]
Line_2 $$ public boolean reject(String surl, ProgressMonitor mon) throws IllegalArgumentException -->Line_6 $$ URISplit split = URISplit.parse(surl)[ FD ]
Line_8 $$ InputStream in = url.openStream()-->Line_8 $$ InputStream in = url.openStream()[ CD ]
Line_7 $$ URL url = new URL(split.file)-->Line_8 $$ InputStream in = url.openStream()[ FD ]
Line_10 $$ Document document = builder.parse(source)-->Line_10 $$ Document document = builder.parse(source)[ CD ]
Line_3 $$ DocumentBuilder builder = null-->Line_10 $$ Document document = builder.parse(source)[ FD ]
Line_5 $$ builder = DocumentBuilderFactory.newInstance().newDocumentBuilder()-->Line_10 $$ Document document = builder.parse(source)[ FD ]
Line_9 $$ InputSource source = new InputSource(in)-->Line_10 $$ Document document = builder.parse(source)[ FD ]
Line_8 $$ InputStream in = url.openStream()-->Line_11 $$ in.close()[ FD ]
Line_12 $$ Node n = document.getDocumentElement()-->Line_12 $$ Node n = document.getDocumentElement()[ CD ]
Line_10 $$ Document document = builder.parse(source)-->Line_12 $$ Node n = document.getDocumentElement()[ FD ]
Line_13 $$ String localName = n.getNodeName()-->Line_13 $$ String localName = n.getNodeName()[ CD ]
Line_12 $$ Node n = document.getDocumentElement()-->Line_13 $$ String localName = n.getNodeName()[ FD ]
Line_14 $$ int i = localName.indexOf(":")-->Line_14 $$ int i = localName.indexOf(":")[ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_14 $$ int i = localName.indexOf(":")[ FD ]
Line_14 $$ int i = localName.indexOf(":")-->Line_15 $$ if (i > -1) [ FD ]
Line_15 $$ if (i > -1) -->Line_16 $$ localName = localName.substring(i + 1)[ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_16 $$ localName = localName.substring(i + 1)[ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_16 $$ localName = localName.substring(i + 1)[ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_16 $$ localName = localName.substring(i + 1)[ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_16 $$ localName = localName.substring(i + 1)[ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_16 $$ localName = localName.substring(i + 1)[ FD ]
Line_13 $$ String localName = n.getNodeName()-->Line_18 $$ if (localName.equals("Spase")) [ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_18 $$ if (localName.equals("Spase")) [ FD ]
Line_18 $$ if (localName.equals("Spase")) -->Line_18 $$ if (localName.equals("Spase")) [ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_18 $$ if (localName.equals("Spase")) [ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_18 $$ if (localName.equals("Spase")) [ FD ]
Line_18 $$ if (localName.equals("Spase")) -->Line_19 $$ return false[ CD ]
Line_18 $$ if (localName.equals("Spase")) -->Line_20 $$ if (localName.equals("Eventlist")) [ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_20 $$ if (localName.equals("Eventlist")) [ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_20 $$ if (localName.equals("Eventlist")) [ FD ]
Line_20 $$ if (localName.equals("Eventlist")) -->Line_20 $$ if (localName.equals("Eventlist")) [ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_20 $$ if (localName.equals("Eventlist")) [ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_20 $$ if (localName.equals("Eventlist")) [ FD ]
Line_20 $$ if (localName.equals("Eventlist")) -->Line_21 $$ return false[ CD ]
Line_20 $$ if (localName.equals("Eventlist")) -->Line_22 $$ if (localName.equals("VOTABLE")) [ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_22 $$ if (localName.equals("VOTABLE")) [ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_22 $$ if (localName.equals("VOTABLE")) [ FD ]
Line_22 $$ if (localName.equals("VOTABLE")) -->Line_22 $$ if (localName.equals("VOTABLE")) [ CD ]
Line_13 $$ String localName = n.getNodeName()-->Line_22 $$ if (localName.equals("VOTABLE")) [ FD ]
Line_16 $$ localName = localName.substring(i + 1)-->Line_22 $$ if (localName.equals("VOTABLE")) [ FD ]
Line_22 $$ if (localName.equals("VOTABLE")) -->Line_23 $$ return false[ CD ]
Line_22 $$ if (localName.equals("VOTABLE")) -->Line_25 $$ return true[ CD ]
