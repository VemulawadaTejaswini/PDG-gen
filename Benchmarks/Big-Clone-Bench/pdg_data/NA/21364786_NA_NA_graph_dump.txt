Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException [ CD ]
Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException -->Line_3 $$ boolean bMatch = false[ CD ]
Line_6 $$ byte[] baSalt = Hex.decodeHex(strSalt.toCharArray())-->Line_6 $$ byte[] baSalt = Hex.decodeHex(strSalt.toCharArray())[ CD ]
Line_5 $$ String strSalt = (String) salt-->Line_6 $$ byte[] baSalt = Hex.decodeHex(strSalt.toCharArray())[ FD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_7 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)[ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_8 $$ md.update(rawPass.getBytes(CHAR_ENCODING))[ FD ]
Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException -->Line_8 $$ md.update(rawPass.getBytes(CHAR_ENCODING))[ FD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_9 $$ md.update(baSalt)[ FD ]
Line_6 $$ byte[] baSalt = Hex.decodeHex(strSalt.toCharArray())-->Line_9 $$ md.update(baSalt)[ FD ]
Line_10 $$ byte[] baCalculatedHash = md.digest()-->Line_10 $$ byte[] baCalculatedHash = md.digest()[ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM)-->Line_10 $$ byte[] baCalculatedHash = md.digest()[ FD ]
Line_11 $$ byte[] baStoredHash = Hex.decodeHex(encPass.toCharArray())-->Line_11 $$ byte[] baStoredHash = Hex.decodeHex(encPass.toCharArray())[ CD ]
Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException -->Line_11 $$ byte[] baStoredHash = Hex.decodeHex(encPass.toCharArray())[ FD ]
Line_3 $$ boolean bMatch = false-->Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)[ FD ]
Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)-->Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)[ FD ]
Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)-->Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)[ CD ]
Line_10 $$ byte[] baCalculatedHash = md.digest()-->Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)[ FD ]
Line_11 $$ byte[] baStoredHash = Hex.decodeHex(encPass.toCharArray())-->Line_12 $$ bMatch = MessageDigest.isEqual(baCalculatedHash, baStoredHash)[ FD ]
Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException -->Line_16 $$ return bMatch[ CD ]
