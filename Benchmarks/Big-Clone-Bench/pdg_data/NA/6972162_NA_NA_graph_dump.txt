Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void removeDownload() [ CD ]
Line_4 $$ int rowCount = mDownloadTable.getSelectedRowCount()-->Line_4 $$ int rowCount = mDownloadTable.getSelectedRowCount()[ CD ]
Line_4 $$ int rowCount = mDownloadTable.getSelectedRowCount()-->Line_5 $$ if (rowCount <= 0)[ FD ]
Line_5 $$ if (rowCount <= 0)-->Line_5 $$ return[ CD ]
Line_6 $$ int[] rows = mDownloadTable.getSelectedRows()-->Line_6 $$ int[] rows = mDownloadTable.getSelectedRows()[ CD ]
Line_4 $$ int rowCount = mDownloadTable.getSelectedRowCount()-->Line_9 $$ for (int i = 0; i < rowCount; i++) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_10 $$ int row = rows[i][ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_11 $$ if (row >= mDownloadMgr.getDownloadCount())[ CD ]
Line_10 $$ int row = rows[i]-->Line_11 $$ if (row >= mDownloadMgr.getDownloadCount())[ FD ]
Line_11 $$ if (row >= mDownloadMgr.getDownloadCount())-->Line_11 $$ return[ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_12 $$ orderedRows[i] = mDownloadSorter.indexes[row][ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ CD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ CD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_16 $$ for (int j = 0; j < i; j++) [ CD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ CD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_16 $$ for (int j = 0; j < i; j++) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_16 $$ for (int j = 0; j < i; j++) [ FD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_16 $$ for (int j = 0; j < i; j++) [ CD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_16 $$ for (int j = 0; j < i; j++) [ CD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_16 $$ for (int j = 0; j < i; j++) [ FD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_17 $$ if (orderedRows[j] > orderedRows[j + 1]) [ CD ]
Line_17 $$ if (orderedRows[j] > orderedRows[j + 1]) -->Line_18 $$ int tmp = orderedRows[j][ CD ]
Line_17 $$ if (orderedRows[j] > orderedRows[j + 1]) -->Line_19 $$ orderedRows[j] = orderedRows[j + 1][ CD ]
Line_17 $$ if (orderedRows[j] > orderedRows[j + 1]) -->Line_20 $$ orderedRows[j + 1] = tmp[ CD ]
Line_18 $$ int tmp = orderedRows[j]-->Line_20 $$ orderedRows[j + 1] = tmp[ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ CD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ CD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_25 $$ mDownloadMgr.removeDownload(orderedRows[i])[ CD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ FD ]
Line_9 $$ for (int i = 0; i < rowCount; i++) -->Line_9 $$ for (int i = 0; i < rowCount; i++) [ FD ]
Line_10 $$ int row = rows[i]-->Line_11 $$ if (row >= mDownloadMgr.getDownloadCount())[ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ FD ]
Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) -->Line_15 $$ for (int i = orderedRows.length - 1; i > 0; i--) [ FD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_16 $$ for (int j = 0; j < i; j++) [ FD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_16 $$ for (int j = 0; j < i; j++) [ FD ]
Line_16 $$ for (int j = 0; j < i; j++) -->Line_16 $$ for (int j = 0; j < i; j++) [ FD ]
Line_18 $$ int tmp = orderedRows[j]-->Line_20 $$ orderedRows[j + 1] = tmp[ FD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) -->Line_24 $$ for (int i = orderedRows.length - 1; i >= 0; i--) [ FD ]
