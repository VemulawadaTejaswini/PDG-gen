Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public StringBuffer get(URL url) throws IOException [ CD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_3 $$ StringBuffer pageContents = new StringBuffer()[ CD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_4 $$ PDFReader reader = new PDFReader(url.openStream())[ CD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_4 $$ PDFReader reader = new PDFReader(url.openStream())[ FD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_5 $$ reader.open()[ CD ]
Line_4 $$ PDFReader reader = new PDFReader(url.openStream())-->Line_5 $$ reader.open()[ FD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_6 $$ int pageCount = reader.getNumberOfPages()[ CD ]
Line_6 $$ int pageCount = reader.getNumberOfPages()-->Line_6 $$ int pageCount = reader.getNumberOfPages()[ CD ]
Line_4 $$ PDFReader reader = new PDFReader(url.openStream())-->Line_6 $$ int pageCount = reader.getNumberOfPages()[ FD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ CD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_2 $$ public StringBuffer get(URL url) throws IOException [ CD ]
Line_6 $$ int pageCount = reader.getNumberOfPages()-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ CD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ CD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ CD ]
Line_3 $$ StringBuffer pageContents = new StringBuffer()-->Line_7 $$ pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_4 $$ PDFReader reader = new PDFReader(url.openStream())-->Line_7 $$ pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_8 $$ reader.close()[ CD ]
Line_4 $$ PDFReader reader = new PDFReader(url.openStream())-->Line_8 $$ reader.close()[ FD ]
Line_2 $$ public StringBuffer get(URL url) throws IOException -->Line_9 $$ return pageContents[ CD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
Line_7 $$ for (int i = 0; i < pageCount; i++) pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))-->Line_7 $$ pageContents.append(new String(reader.extractTextFromPage(i).getBytes(), "UTF-8"))[ FD ]
