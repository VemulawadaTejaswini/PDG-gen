Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected String readUrl(String svnUrl) throws IOException [ CD ]
Line_2 $$ protected String readUrl(String svnUrl) throws IOException -->Line_3 $$ URL url = new URL(svnUrl)[ CD ]
Line_2 $$ protected String readUrl(String svnUrl) throws IOException -->Line_4 $$ URLConnection uc = url.openConnection()[ CD ]
Line_4 $$ URLConnection uc = url.openConnection()-->Line_4 $$ URLConnection uc = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(svnUrl)-->Line_4 $$ URLConnection uc = url.openConnection()[ FD ]
Line_2 $$ protected String readUrl(String svnUrl) throws IOException -->Line_5 $$ if (url.getProtocol().equals("https")) [ CD ]
Line_5 $$ if (url.getProtocol().equals("https")) -->Line_5 $$ if (url.getProtocol().equals("https")) [ CD ]
Line_3 $$ URL url = new URL(svnUrl)-->Line_5 $$ if (url.getProtocol().equals("https")) [ FD ]
Line_5 $$ if (url.getProtocol().equals("https")) -->Line_6 $$ String userPassword = user + ":" + password[ CD ]
Line_5 $$ if (url.getProtocol().equals("https")) -->Line_7 $$ String encoding = new sun.misc.BASE64Encoder().encode(userPassword.getBytes())[ CD ]
Line_7 $$ String encoding = new sun.misc.BASE64Encoder().encode(userPassword.getBytes())-->Line_7 $$ String encoding = new sun.misc.BASE64Encoder().encode(userPassword.getBytes())[ CD ]
Line_6 $$ String userPassword = user + ":" + password-->Line_7 $$ String encoding = new sun.misc.BASE64Encoder().encode(userPassword.getBytes())[ FD ]
Line_5 $$ if (url.getProtocol().equals("https")) -->Line_8 $$ uc.setRequestProperty("Authorization", "Basic " + encoding)[ CD ]
Line_4 $$ URLConnection uc = url.openConnection()-->Line_8 $$ uc.setRequestProperty("Authorization", "Basic " + encoding)[ FD ]
Line_2 $$ protected String readUrl(String svnUrl) throws IOException -->Line_10 $$ InputStream is = null[ CD ]
Line_2 $$ protected String readUrl(String svnUrl) throws IOException -->Line_11 $$ String in = null[ CD ]
Line_10 $$ InputStream is = null-->Line_13 $$ is = uc.getInputStream()[ FD ]
Line_13 $$ is = uc.getInputStream()-->Line_13 $$ is = uc.getInputStream()[ FD ]
Line_13 $$ is = uc.getInputStream()-->Line_13 $$ is = uc.getInputStream()[ CD ]
Line_4 $$ URLConnection uc = url.openConnection()-->Line_13 $$ is = uc.getInputStream()[ FD ]
Line_11 $$ String in = null-->Line_14 $$ in = read(is)[ FD ]
Line_14 $$ in = read(is)-->Line_14 $$ in = read(is)[ FD ]
Line_14 $$ in = read(is)-->Line_14 $$ in = read(is)[ CD ]
Line_10 $$ InputStream is = null-->Line_14 $$ in = read(is)[ FD ]
Line_13 $$ is = uc.getInputStream()-->Line_14 $$ in = read(is)[ FD ]
Line_10 $$ InputStream is = null-->Line_17 $$ is.close()[ FD ]
Line_13 $$ is = uc.getInputStream()-->Line_17 $$ is.close()[ FD ]
Line_2 $$ protected String readUrl(String svnUrl) throws IOException -->Line_21 $$ return in[ CD ]
