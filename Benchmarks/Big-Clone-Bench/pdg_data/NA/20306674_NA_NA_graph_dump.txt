Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int create(BusinessObject o) throws DAOException [ CD ]
Line_2 $$ public int create(BusinessObject o) throws DAOException -->Line_3 $$ int insert = 0[ CD ]
Line_2 $$ public int create(BusinessObject o) throws DAOException -->Line_4 $$ int id = 0[ CD ]
Line_2 $$ public int create(BusinessObject o) throws DAOException -->Line_5 $$ Bill bill = (Bill) o[ CD ]
Line_7 $$ PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_BILL"))-->Line_7 $$ PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_BILL"))[ CD ]
Line_7 $$ PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_BILL"))-->Line_8 $$ pst.setDate(1, new java.sql.Date(bill.getDate().getTime()))[ FD ]
Line_5 $$ Bill bill = (Bill) o-->Line_8 $$ pst.setDate(1, new java.sql.Date(bill.getDate().getTime()))[ FD ]
Line_7 $$ PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_BILL"))-->Line_9 $$ pst.setInt(2, bill.getIdAccount())[ FD ]
Line_5 $$ Bill bill = (Bill) o-->Line_9 $$ pst.setInt(2, bill.getIdAccount())[ FD ]
Line_3 $$ int insert = 0-->Line_10 $$ insert = pst.executeUpdate()[ FD ]
Line_10 $$ insert = pst.executeUpdate()-->Line_10 $$ insert = pst.executeUpdate()[ FD ]
Line_10 $$ insert = pst.executeUpdate()-->Line_10 $$ insert = pst.executeUpdate()[ CD ]
Line_7 $$ PreparedStatement pst = connection.prepareStatement(XMLGetQuery.getQuery("INSERT_BILL"))-->Line_10 $$ insert = pst.executeUpdate()[ FD ]
Line_3 $$ int insert = 0-->Line_11 $$ if (insert <= 0) [ FD ]
Line_10 $$ insert = pst.executeUpdate()-->Line_11 $$ if (insert <= 0) [ FD ]
Line_11 $$ if (insert <= 0) -->Line_12 $$ connection.rollback()[ CD ]
Line_11 $$ if (insert <= 0) -->Line_14 $$ if (insert > 1) [ CD ]
Line_3 $$ int insert = 0-->Line_14 $$ if (insert > 1) [ FD ]
Line_10 $$ insert = pst.executeUpdate()-->Line_14 $$ if (insert > 1) [ FD ]
Line_14 $$ if (insert > 1) -->Line_15 $$ connection.rollback()[ CD ]
Line_18 $$ Statement st = connection.createStatement()-->Line_18 $$ Statement st = connection.createStatement()[ CD ]
Line_19 $$ ResultSet rs = st.executeQuery("select max(id) from bill")-->Line_19 $$ ResultSet rs = st.executeQuery("select max(id) from bill")[ CD ]
Line_18 $$ Statement st = connection.createStatement()-->Line_19 $$ ResultSet rs = st.executeQuery("select max(id) from bill")[ FD ]
Line_19 $$ ResultSet rs = st.executeQuery("select max(id) from bill")-->Line_20 $$ rs.next()[ FD ]
Line_4 $$ int id = 0-->Line_21 $$ id = rs.getInt(1)[ FD ]
Line_21 $$ id = rs.getInt(1)-->Line_21 $$ id = rs.getInt(1)[ FD ]
Line_21 $$ id = rs.getInt(1)-->Line_21 $$ id = rs.getInt(1)[ CD ]
Line_19 $$ ResultSet rs = st.executeQuery("select max(id) from bill")-->Line_21 $$ id = rs.getInt(1)[ FD ]
Line_2 $$ public int create(BusinessObject o) throws DAOException -->Line_30 $$ return id[ CD ]
