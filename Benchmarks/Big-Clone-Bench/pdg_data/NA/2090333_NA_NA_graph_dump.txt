Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException [ CD ]
Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException -->Line_3 $$ InputStream in = new FileInputStream(path)[ CD ]
Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException -->Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException -->Line_5 $$ IOUtils.copy(in, out)[ CD ]
Line_3 $$ InputStream in = new FileInputStream(path)-->Line_5 $$ IOUtils.copy(in, out)[ FD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_5 $$ IOUtils.copy(in, out)[ FD ]
Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException -->Line_6 $$ in.close()[ CD ]
Line_3 $$ InputStream in = new FileInputStream(path)-->Line_6 $$ in.close()[ FD ]
Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException -->Line_7 $$ out.close()[ CD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_7 $$ out.close()[ FD ]
Line_2 $$ private static byte[] tryLoadFile(String path) throws IOException -->Line_8 $$ return out.toByteArray()[ CD ]
Line_8 $$ return out.toByteArray()-->Line_8 $$ return out.toByteArray()[ CD ]
Line_4 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_8 $$ return out.toByteArray()[ FD ]
