Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputStream send(String s, String s1) throws IOException [ CD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_3 $$ HttpURLConnection httpurlconnection = null[ CD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_4 $$ DataInputStream datainputstream = null[ CD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_5 $$ System.setProperty("java.protocol.handler.pkgs", "com.sun.net.ssl.internal.www.protocol")[ CD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_6 $$ URL url = new URL(s1)[ CD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ URL url = new URL(s1)-->Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_8 $$ configureURLConnection(httpurlconnection)[ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_8 $$ configureURLConnection(httpurlconnection)[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_8 $$ configureURLConnection(httpurlconnection)[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_9 $$ DataOutputStream dataoutputstream = new DataOutputStream(httpurlconnection.getOutputStream())[ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_9 $$ DataOutputStream dataoutputstream = new DataOutputStream(httpurlconnection.getOutputStream())[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_9 $$ DataOutputStream dataoutputstream = new DataOutputStream(httpurlconnection.getOutputStream())[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_10 $$ dataoutputstream.write(s.getBytes())[ CD ]
Line_9 $$ DataOutputStream dataoutputstream = new DataOutputStream(httpurlconnection.getOutputStream())-->Line_10 $$ dataoutputstream.write(s.getBytes())[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_10 $$ dataoutputstream.write(s.getBytes())[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_11 $$ httpurlconnection.connect()[ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_11 $$ httpurlconnection.connect()[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_11 $$ httpurlconnection.connect()[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_12 $$ datainputstream = new DataInputStream(httpurlconnection.getInputStream())[ CD ]
Line_4 $$ DataInputStream datainputstream = null-->Line_12 $$ datainputstream = new DataInputStream(httpurlconnection.getInputStream())[ FD ]
Line_12 $$ datainputstream = new DataInputStream(httpurlconnection.getInputStream())-->Line_12 $$ datainputstream = new DataInputStream(httpurlconnection.getInputStream())[ FD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_12 $$ datainputstream = new DataInputStream(httpurlconnection.getInputStream())[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_12 $$ datainputstream = new DataInputStream(httpurlconnection.getInputStream())[ FD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_13 $$ if (httpurlconnection.getResponseCode() != 200) [ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_13 $$ if (httpurlconnection.getResponseCode() != 200) [ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_13 $$ if (httpurlconnection.getResponseCode() != 200) [ FD ]
Line_13 $$ if (httpurlconnection.getResponseCode() != 200) -->Line_14 $$ System.out.println("Invalid Response Code! Code Returned = " + Integer.toString(httpurlconnection.getResponseCode()))[ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_14 $$ System.out.println("Invalid Response Code! Code Returned = " + Integer.toString(httpurlconnection.getResponseCode()))[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_14 $$ System.out.println("Invalid Response Code! Code Returned = " + Integer.toString(httpurlconnection.getResponseCode()))[ FD ]
Line_13 $$ if (httpurlconnection.getResponseCode() != 200) -->Line_15 $$ return null[ CD ]
Line_2 $$ public InputStream send(String s, String s1) throws IOException -->Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) [ CD ]
Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) -->Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) [ CD ]
Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) -->Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) [ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) [ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) [ FD ]
Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) -->Line_18 $$ System.out.println("Invalid Content-Type! Content type of response received = " + httpurlconnection.getContentType())[ CD ]
Line_3 $$ HttpURLConnection httpurlconnection = null-->Line_18 $$ System.out.println("Invalid Content-Type! Content type of response received = " + httpurlconnection.getContentType())[ FD ]
Line_7 $$ httpurlconnection = (HttpURLConnection) url.openConnection()-->Line_18 $$ System.out.println("Invalid Content-Type! Content type of response received = " + httpurlconnection.getContentType())[ FD ]
Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) -->Line_19 $$ return null[ CD ]
Line_17 $$ if (!httpurlconnection.getContentType().equalsIgnoreCase("Text/xml")) -->Line_21 $$ return datainputstream[ CD ]
