Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized InputStream getResourceAsStream(String name) [ CD ]
Line_2 $$ public synchronized InputStream getResourceAsStream(String name) -->Line_3 $$ InputStream inputStream = null[ CD ]
Line_2 $$ public synchronized InputStream getResourceAsStream(String name) -->Line_4 $$ BufferedInputStream in = null[ CD ]
Line_2 $$ public synchronized InputStream getResourceAsStream(String name) -->Line_5 $$ BufferedOutputStream out = null[ CD ]
Line_7 $$ URL url = getResource(name)-->Line_7 $$ URL url = getResource(name)[ CD ]
Line_2 $$ public synchronized InputStream getResourceAsStream(String name) -->Line_7 $$ URL url = getResource(name)[ FD ]
Line_8 $$ String remoteName = url.toExternalForm()-->Line_8 $$ String remoteName = url.toExternalForm()[ CD ]
Line_7 $$ URL url = getResource(name)-->Line_8 $$ String remoteName = url.toExternalForm()[ FD ]
Line_8 $$ String remoteName = url.toExternalForm()-->Line_9 $$ String localName = (String) cacheHashtable.get(remoteName)[ FD ]
Line_9 $$ String localName = (String) cacheHashtable.get(remoteName)-->Line_10 $$ if (localName != null) [ FD ]
Line_10 $$ if (localName != null) -->Line_11 $$ System.out.println("Retrieving \"" + localName + "\"...")[ CD ]
Line_10 $$ if (localName != null) -->Line_12 $$ return new FileInputStream(localName)[ CD ]
Line_14 $$ String host = url.getHost()-->Line_14 $$ String host = url.getHost()[ CD ]
Line_7 $$ URL url = getResource(name)-->Line_14 $$ String host = url.getHost()[ FD ]
Line_15 $$ String prot = url.getProtocol()-->Line_15 $$ String prot = url.getProtocol()[ CD ]
Line_7 $$ URL url = getResource(name)-->Line_15 $$ String prot = url.getProtocol()[ FD ]
Line_16 $$ int port = url.getPort()-->Line_16 $$ int port = url.getPort()[ CD ]
Line_7 $$ URL url = getResource(name)-->Line_16 $$ int port = url.getPort()[ FD ]
Line_16 $$ int port = url.getPort()-->Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)[ FD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())[ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())[ FD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())[ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())[ FD ]
Line_9 $$ String localName = (String) cacheHashtable.get(remoteName)-->Line_19 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_19 $$ localName = cacheFile.getCanonicalPath()-->Line_19 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_19 $$ localName = cacheFile.getCanonicalPath()-->Line_19 $$ localName = cacheFile.getCanonicalPath()[ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_19 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_19 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_21 $$ URLConnection urlConnection = url.openConnection()-->Line_21 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_7 $$ URL url = getResource(name)-->Line_21 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_22 $$ if (cacheFile.exists()) [ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_22 $$ if (cacheFile.exists()) [ FD ]
Line_22 $$ if (cacheFile.exists()) -->Line_22 $$ if (cacheFile.exists()) [ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_22 $$ if (cacheFile.exists()) [ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_22 $$ if (cacheFile.exists()) [ FD ]
Line_22 $$ if (cacheFile.exists()) -->Line_23 $$ urlConnection.setIfModifiedSince(cacheFile.lastModified())[ CD ]
Line_21 $$ URLConnection urlConnection = url.openConnection()-->Line_23 $$ urlConnection.setIfModifiedSince(cacheFile.lastModified())[ FD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_23 $$ urlConnection.setIfModifiedSince(cacheFile.lastModified())[ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_23 $$ urlConnection.setIfModifiedSince(cacheFile.lastModified())[ FD ]
Line_21 $$ URLConnection urlConnection = url.openConnection()-->Line_25 $$ if (urlConnection instanceof HttpURLConnection) [ FD ]
Line_25 $$ if (urlConnection instanceof HttpURLConnection) -->Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection[ CD ]
Line_25 $$ if (urlConnection instanceof HttpURLConnection) -->Line_27 $$ httpURLConnection.setFollowRedirects(true)[ CD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_27 $$ httpURLConnection.setFollowRedirects(true)[ FD ]
Line_25 $$ if (urlConnection instanceof HttpURLConnection) -->Line_28 $$ httpURLConnection.setRequestMethod("GET")[ CD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_28 $$ httpURLConnection.setRequestMethod("GET")[ FD ]
Line_25 $$ if (urlConnection instanceof HttpURLConnection) -->Line_29 $$ int responseCode = httpURLConnection.getResponseCode()[ CD ]
Line_29 $$ int responseCode = httpURLConnection.getResponseCode()-->Line_29 $$ int responseCode = httpURLConnection.getResponseCode()[ CD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_29 $$ int responseCode = httpURLConnection.getResponseCode()[ FD ]
Line_25 $$ if (urlConnection instanceof HttpURLConnection) -->Line_30 $$ System.out.println(httpURLConnection.getResponseMessage() + ", " + httpURLConnection.getContentLength() + " bytes" + ", " + new Date(httpURLConnection.getDate()) + ", " + new Date(httpURLConnection.getLastModified()))[ CD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_30 $$ System.out.println(httpURLConnection.getResponseMessage() + ", " + httpURLConnection.getContentLength() + " bytes" + ", " + new Date(httpURLConnection.getDate()) + ", " + new Date(httpURLConnection.getLastModified()))[ FD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_30 $$ System.out.println(httpURLConnection.getResponseMessage() + ", " + httpURLConnection.getContentLength() + " bytes" + ", " + new Date(httpURLConnection.getDate()) + ", " + new Date(httpURLConnection.getLastModified()))[ FD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_30 $$ System.out.println(httpURLConnection.getResponseMessage() + ", " + httpURLConnection.getContentLength() + " bytes" + ", " + new Date(httpURLConnection.getDate()) + ", " + new Date(httpURLConnection.getLastModified()))[ FD ]
Line_26 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlConnection-->Line_30 $$ System.out.println(httpURLConnection.getResponseMessage() + ", " + httpURLConnection.getContentLength() + " bytes" + ", " + new Date(httpURLConnection.getDate()) + ", " + new Date(httpURLConnection.getLastModified()))[ FD ]
Line_25 $$ if (urlConnection instanceof HttpURLConnection) -->Line_31 $$ if (responseCode != HttpURLConnection.HTTP_OK) [ CD ]
Line_29 $$ int responseCode = httpURLConnection.getResponseCode()-->Line_31 $$ if (responseCode != HttpURLConnection.HTTP_OK) [ FD ]
Line_31 $$ if (responseCode != HttpURLConnection.HTTP_OK) -->Line_32 $$ return null[ CD ]
Line_3 $$ InputStream inputStream = null-->Line_35 $$ inputStream = urlConnection.getInputStream()[ FD ]
Line_35 $$ inputStream = urlConnection.getInputStream()-->Line_35 $$ inputStream = urlConnection.getInputStream()[ FD ]
Line_35 $$ inputStream = urlConnection.getInputStream()-->Line_35 $$ inputStream = urlConnection.getInputStream()[ CD ]
Line_21 $$ URLConnection urlConnection = url.openConnection()-->Line_35 $$ inputStream = urlConnection.getInputStream()[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_36 $$ if (inputStream == null)[ FD ]
Line_35 $$ inputStream = urlConnection.getInputStream()-->Line_36 $$ if (inputStream == null)[ FD ]
Line_36 $$ if (inputStream == null)-->Line_36 $$ return null[ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_37 $$ if (cacheFile.exists()) [ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_37 $$ if (cacheFile.exists()) [ FD ]
Line_37 $$ if (cacheFile.exists()) -->Line_37 $$ if (cacheFile.exists()) [ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_37 $$ if (cacheFile.exists()) [ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_37 $$ if (cacheFile.exists()) [ FD ]
Line_37 $$ if (cacheFile.exists()) -->Line_38 $$ long lastModified = urlConnection.getLastModified()[ CD ]
Line_38 $$ long lastModified = urlConnection.getLastModified()-->Line_38 $$ long lastModified = urlConnection.getLastModified()[ CD ]
Line_21 $$ URLConnection urlConnection = url.openConnection()-->Line_38 $$ long lastModified = urlConnection.getLastModified()[ FD ]
Line_37 $$ if (cacheFile.exists()) -->Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) [ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) [ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) [ FD ]
Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) -->Line_40 $$ inputStream.close()[ CD ]
Line_3 $$ InputStream inputStream = null-->Line_40 $$ inputStream.close()[ FD ]
Line_35 $$ inputStream = urlConnection.getInputStream()-->Line_40 $$ inputStream.close()[ FD ]
Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) -->Line_41 $$ cacheHashtable.put(remoteName, localName)[ CD ]
Line_8 $$ String remoteName = url.toExternalForm()-->Line_41 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_9 $$ String localName = (String) cacheHashtable.get(remoteName)-->Line_41 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_19 $$ localName = cacheFile.getCanonicalPath()-->Line_41 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) -->Line_42 $$ System.out.println("Retrieving \"" + localName + "\"...")[ CD ]
Line_39 $$ if ((lastModified > 0) && (lastModified < cacheFile.lastModified())) -->Line_43 $$ return new FileInputStream(cacheFile)[ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_46 $$ File parentFile = new File(cacheFile.getParent())[ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_46 $$ File parentFile = new File(cacheFile.getParent())[ FD ]
Line_46 $$ File parentFile = new File(cacheFile.getParent())-->Line_47 $$ parentFile.mkdirs()[ FD ]
Line_9 $$ String localName = (String) cacheHashtable.get(remoteName)-->Line_48 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_19 $$ localName = cacheFile.getCanonicalPath()-->Line_48 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_48 $$ localName = cacheFile.getCanonicalPath()-->Line_48 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_48 $$ localName = cacheFile.getCanonicalPath()-->Line_48 $$ localName = cacheFile.getCanonicalPath()[ CD ]
Line_17 $$ File cacheFile = new File(cacheDir, prot + File.separator + host + File.separator + "port" + (port == -1 ? "" : Integer.toString(port)) + File.separator + name)-->Line_48 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_18 $$ cacheFile = new File(cacheFile.getCanonicalPath())-->Line_48 $$ localName = cacheFile.getCanonicalPath()[ FD ]
Line_4 $$ BufferedInputStream in = null-->Line_50 $$ in = new BufferedInputStream(inputStream)[ FD ]
Line_50 $$ in = new BufferedInputStream(inputStream)-->Line_50 $$ in = new BufferedInputStream(inputStream)[ FD ]
Line_5 $$ BufferedOutputStream out = null-->Line_51 $$ out = new BufferedOutputStream(new FileOutputStream(cacheFile))[ FD ]
Line_51 $$ out = new BufferedOutputStream(new FileOutputStream(cacheFile))-->Line_51 $$ out = new BufferedOutputStream(new FileOutputStream(cacheFile))[ FD ]
Line_53 $$ while ((i = in.read()) > -1) out.write(i)-->Line_53 $$ while ((i = in.read()) > -1) out.write(i)[ FD ]
Line_52 $$ int i-->Line_53 $$ while ((i = in.read()) > -1) out.write(i)[ FD ]
Line_53 $$ while ((i = in.read()) > -1) out.write(i)-->Line_53 $$ while ((i = in.read()) > -1) out.write(i)[ CD ]
Line_4 $$ BufferedInputStream in = null-->Line_53 $$ while ((i = in.read()) > -1) out.write(i)[ FD ]
Line_50 $$ in = new BufferedInputStream(inputStream)-->Line_53 $$ while ((i = in.read()) > -1) out.write(i)[ FD ]
Line_53 $$ while ((i = in.read()) > -1) out.write(i)-->Line_53 $$ out.write(i)[ CD ]
Line_5 $$ BufferedOutputStream out = null-->Line_53 $$ out.write(i)[ FD ]
Line_51 $$ out = new BufferedOutputStream(new FileOutputStream(cacheFile))-->Line_53 $$ out.write(i)[ FD ]
Line_53 $$ while ((i = in.read()) > -1) out.write(i)-->Line_53 $$ out.write(i)[ FD ]
Line_52 $$ int i-->Line_53 $$ out.write(i)[ FD ]
Line_5 $$ BufferedOutputStream out = null-->Line_54 $$ out.close()[ FD ]
Line_51 $$ out = new BufferedOutputStream(new FileOutputStream(cacheFile))-->Line_54 $$ out.close()[ FD ]
Line_4 $$ BufferedInputStream in = null-->Line_55 $$ in.close()[ FD ]
Line_50 $$ in = new BufferedInputStream(inputStream)-->Line_55 $$ in.close()[ FD ]
Line_8 $$ String remoteName = url.toExternalForm()-->Line_56 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_9 $$ String localName = (String) cacheHashtable.get(remoteName)-->Line_56 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_19 $$ localName = cacheFile.getCanonicalPath()-->Line_56 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_48 $$ localName = cacheFile.getCanonicalPath()-->Line_56 $$ cacheHashtable.put(remoteName, localName)[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_61 $$ inputStream.close()[ FD ]
Line_35 $$ inputStream = urlConnection.getInputStream()-->Line_61 $$ inputStream.close()[ FD ]
Line_4 $$ BufferedInputStream in = null-->Line_65 $$ in.close()[ FD ]
Line_50 $$ in = new BufferedInputStream(inputStream)-->Line_65 $$ in.close()[ FD ]
Line_5 $$ BufferedOutputStream out = null-->Line_69 $$ out.close()[ FD ]
Line_51 $$ out = new BufferedOutputStream(new FileOutputStream(cacheFile))-->Line_69 $$ out.close()[ FD ]
Line_53 $$ while ((i = in.read()) > -1) out.write(i)-->Line_53 $$ out.write(i)[ FD ]
