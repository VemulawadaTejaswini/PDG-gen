Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static MimeType getMimeType(URL url) [ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_3 $$ String mimeTypeString = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_4 $$ String charsetFromWebServer = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_5 $$ String contentType = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_6 $$ InputStream is = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_7 $$ MimeType mimeTypeFromWebServer = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_8 $$ MimeType mimeTypeFromFileSuffix = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_9 $$ MimeType mimeTypeFromMagicNumbers = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_10 $$ String fileSufix = null[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_11 $$ if (url == null)[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_11 $$ if (url == null)[ FD ]
Line_11 $$ if (url == null)-->Line_11 $$ return null[ CD ]
Line_6 $$ InputStream is = null-->Line_14 $$ is = url.openConnection().getInputStream()[ FD ]
Line_14 $$ is = url.openConnection().getInputStream()-->Line_14 $$ is = url.openConnection().getInputStream()[ FD ]
Line_14 $$ is = url.openConnection().getInputStream()-->Line_14 $$ is = url.openConnection().getInputStream()[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_14 $$ is = url.openConnection().getInputStream()[ FD ]
Line_5 $$ String contentType = null-->Line_15 $$ contentType = url.openConnection().getContentType()[ FD ]
Line_15 $$ contentType = url.openConnection().getContentType()-->Line_15 $$ contentType = url.openConnection().getContentType()[ FD ]
Line_15 $$ contentType = url.openConnection().getContentType()-->Line_15 $$ contentType = url.openConnection().getContentType()[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_15 $$ contentType = url.openConnection().getContentType()[ FD ]
Line_5 $$ String contentType = null-->Line_18 $$ if (contentType != null) [ FD ]
Line_15 $$ contentType = url.openConnection().getContentType()-->Line_18 $$ if (contentType != null) [ FD ]
Line_18 $$ if (contentType != null) -->Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")[ CD ]
Line_18 $$ if (contentType != null) -->Line_20 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_20 $$ if (st.hasMoreTokens())[ FD ]
Line_20 $$ if (st.hasMoreTokens())-->Line_20 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_20 $$ if (st.hasMoreTokens())[ FD ]
Line_20 $$ if (st.hasMoreTokens())-->Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()[ CD ]
Line_3 $$ String mimeTypeString = null-->Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()[ FD ]
Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()-->Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()[ FD ]
Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()-->Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()[ FD ]
Line_18 $$ if (contentType != null) -->Line_21 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_21 $$ if (st.hasMoreTokens())[ FD ]
Line_21 $$ if (st.hasMoreTokens())-->Line_21 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_21 $$ if (st.hasMoreTokens())[ FD ]
Line_21 $$ if (st.hasMoreTokens())-->Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()[ CD ]
Line_4 $$ String charsetFromWebServer = null-->Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()[ FD ]
Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()-->Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()[ FD ]
Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()-->Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()[ FD ]
Line_18 $$ if (contentType != null) -->Line_22 $$ if (charsetFromWebServer != null) [ CD ]
Line_4 $$ String charsetFromWebServer = null-->Line_22 $$ if (charsetFromWebServer != null) [ FD ]
Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()-->Line_22 $$ if (charsetFromWebServer != null) [ FD ]
Line_22 $$ if (charsetFromWebServer != null) -->Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")[ FD ]
Line_22 $$ if (charsetFromWebServer != null) -->Line_24 $$ charsetFromWebServer = null[ CD ]
Line_4 $$ String charsetFromWebServer = null-->Line_24 $$ charsetFromWebServer = null[ FD ]
Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()-->Line_24 $$ charsetFromWebServer = null[ FD ]
Line_24 $$ charsetFromWebServer = null-->Line_24 $$ charsetFromWebServer = null[ FD ]
Line_22 $$ if (charsetFromWebServer != null) -->Line_25 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_25 $$ if (st.hasMoreTokens())[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_25 $$ if (st.hasMoreTokens())[ FD ]
Line_25 $$ if (st.hasMoreTokens())-->Line_25 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_25 $$ if (st.hasMoreTokens())[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_25 $$ if (st.hasMoreTokens())[ FD ]
Line_25 $$ if (st.hasMoreTokens())-->Line_25 $$ st.nextToken()[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_25 $$ st.nextToken()[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_25 $$ st.nextToken()[ FD ]
Line_22 $$ if (charsetFromWebServer != null) -->Line_26 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_26 $$ if (st.hasMoreTokens())[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_26 $$ if (st.hasMoreTokens())[ FD ]
Line_26 $$ if (st.hasMoreTokens())-->Line_26 $$ if (st.hasMoreTokens())[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_26 $$ if (st.hasMoreTokens())[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_26 $$ if (st.hasMoreTokens())[ FD ]
Line_26 $$ if (st.hasMoreTokens())-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ CD ]
Line_4 $$ String charsetFromWebServer = null-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ FD ]
Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ FD ]
Line_24 $$ charsetFromWebServer = null-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ FD ]
Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ FD ]
Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ CD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(contentType, ";")-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ FD ]
Line_23 $$ st = new StringTokenizer(charsetFromWebServer, "=")-->Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()[ FD ]
Line_7 $$ MimeType mimeTypeFromWebServer = null-->Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)[ FD ]
Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)-->Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)[ FD ]
Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)-->Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)[ CD ]
Line_3 $$ String mimeTypeString = null-->Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)[ FD ]
Line_20 $$ mimeTypeString = st.nextToken().toLowerCase()-->Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)[ FD ]
Line_10 $$ String fileSufix = null-->Line_30 $$ fileSufix = getFileSufix(url)[ FD ]
Line_30 $$ fileSufix = getFileSufix(url)-->Line_30 $$ fileSufix = getFileSufix(url)[ FD ]
Line_30 $$ fileSufix = getFileSufix(url)-->Line_30 $$ fileSufix = getFileSufix(url)[ CD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_30 $$ fileSufix = getFileSufix(url)[ FD ]
Line_8 $$ MimeType mimeTypeFromFileSuffix = null-->Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)[ FD ]
Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)-->Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)[ FD ]
Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)-->Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)[ CD ]
Line_10 $$ String fileSufix = null-->Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)[ FD ]
Line_30 $$ fileSufix = getFileSufix(url)-->Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)[ FD ]
Line_9 $$ MimeType mimeTypeFromMagicNumbers = null-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ CD ]
Line_6 $$ InputStream is = null-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_14 $$ is = url.openConnection().getInputStream()-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_4 $$ String charsetFromWebServer = null-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_21 $$ charsetFromWebServer = st.nextToken().toLowerCase()-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_24 $$ charsetFromWebServer = null-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_26 $$ charsetFromWebServer = st.nextToken().toUpperCase()-->Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)[ FD ]
Line_6 $$ InputStream is = null-->Line_34 $$ IOUtils.closeQuietly(is)[ FD ]
Line_14 $$ is = url.openConnection().getInputStream()-->Line_34 $$ IOUtils.closeQuietly(is)[ FD ]
Line_2 $$ private static MimeType getMimeType(URL url) -->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ CD ]
Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ CD ]
Line_7 $$ MimeType mimeTypeFromWebServer = null-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ FD ]
Line_29 $$ mimeTypeFromWebServer = mimeString2mimeTypeMap.get(mimeTypeString)-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ FD ]
Line_8 $$ MimeType mimeTypeFromFileSuffix = null-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ FD ]
Line_31 $$ mimeTypeFromFileSuffix = getMimeType(fileSufix)-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ FD ]
Line_9 $$ MimeType mimeTypeFromMagicNumbers = null-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ FD ]
Line_32 $$ mimeTypeFromMagicNumbers = guessTypeUsingMagicNumbers(is, charsetFromWebServer)-->Line_36 $$ return decideBetweenThreeMimeTypes(mimeTypeFromWebServer, mimeTypeFromFileSuffix, mimeTypeFromMagicNumbers)[ FD ]
