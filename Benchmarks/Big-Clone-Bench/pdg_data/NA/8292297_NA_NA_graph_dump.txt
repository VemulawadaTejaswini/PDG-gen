Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException [ CD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_3 $$ LOGGER.debug("GET REQUEST OR RESPONSE - Send content: " + file.getAbsolutePath())[ CD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_4 $$ FileInputStream in = null[ CD ]
Line_4 $$ FileInputStream in = null-->Line_6 $$ in = new FileInputStream(file)[ FD ]
Line_6 $$ in = new FileInputStream(file)-->Line_6 $$ in = new FileInputStream(file)[ FD ]
Line_7 $$ int bytes = IOUtils.copy(in, out)-->Line_7 $$ int bytes = IOUtils.copy(in, out)[ CD ]
Line_4 $$ FileInputStream in = null-->Line_7 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_6 $$ in = new FileInputStream(file)-->Line_7 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_7 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_9 $$ out.flush()[ FD ]
Line_4 $$ FileInputStream in = null-->Line_11 $$ IOUtils.closeQuietly(in)[ FD ]
Line_6 $$ in = new FileInputStream(file)-->Line_11 $$ IOUtils.closeQuietly(in)[ FD ]
