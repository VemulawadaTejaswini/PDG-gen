Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String generateMD5(final String data) [ CD ]
Line_2 $$ public static String generateMD5(final String data) -->Line_3 $$ final StringBuilder hash = new StringBuilder(64)[ CD ]
Line_5 $$ final MessageDigest sha1 = MessageDigest.getInstance("MD5")-->Line_5 $$ final MessageDigest sha1 = MessageDigest.getInstance("MD5")[ CD ]
Line_5 $$ final MessageDigest sha1 = MessageDigest.getInstance("MD5")-->Line_6 $$ sha1.update(data.getBytes())[ FD ]
Line_2 $$ public static String generateMD5(final String data) -->Line_6 $$ sha1.update(data.getBytes())[ FD ]
Line_7 $$ final byte[] digest = sha1.digest()-->Line_7 $$ final byte[] digest = sha1.digest()[ CD ]
Line_5 $$ final MessageDigest sha1 = MessageDigest.getInstance("MD5")-->Line_7 $$ final byte[] digest = sha1.digest()[ FD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_9 $$ String hex = Integer.toHexString(aDigest)[ CD ]
Line_8 $$ for (byte aDigest : digest) -->Line_9 $$ String hex = Integer.toHexString(aDigest)[ FD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_10 $$ if (hex.length() == 1) [ FD ]
Line_10 $$ if (hex.length() == 1) -->Line_11 $$ hex = "0" + hex[ CD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_11 $$ hex = "0" + hex[ FD ]
Line_11 $$ hex = "0" + hex-->Line_11 $$ hex = "0" + hex[ FD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_11 $$ hex = "0" + hex[ FD ]
Line_11 $$ hex = "0" + hex-->Line_11 $$ hex = "0" + hex[ FD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_11 $$ hex = "0" + hex-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_13 $$ hex = hex.substring(hex.length() - 2)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_13 $$ hex = hex.substring(hex.length() - 2)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ CD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_11 $$ hex = "0" + hex-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_13 $$ hex = hex.substring(hex.length() - 2)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_11 $$ hex = "0" + hex-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_13 $$ hex = hex.substring(hex.length() - 2)-->Line_13 $$ hex = hex.substring(hex.length() - 2)[ FD ]
Line_3 $$ final StringBuilder hash = new StringBuilder(64)-->Line_14 $$ hash.append(hex)[ FD ]
Line_9 $$ String hex = Integer.toHexString(aDigest)-->Line_14 $$ hash.append(hex)[ FD ]
Line_11 $$ hex = "0" + hex-->Line_14 $$ hash.append(hex)[ FD ]
Line_13 $$ hex = hex.substring(hex.length() - 2)-->Line_14 $$ hash.append(hex)[ FD ]
Line_2 $$ public static String generateMD5(final String data) -->Line_18 $$ return hash.toString()[ CD ]
Line_18 $$ return hash.toString()-->Line_18 $$ return hash.toString()[ CD ]
Line_3 $$ final StringBuilder hash = new StringBuilder(64)-->Line_18 $$ return hash.toString()[ FD ]
