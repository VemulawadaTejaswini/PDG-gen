Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void handleMessage(Message message) throws Fault [ CD ]
Line_2 $$ public void handleMessage(Message message) throws Fault -->Line_3 $$ InputStream is = message.getContent(InputStream.class)[ CD ]
Line_3 $$ InputStream is = message.getContent(InputStream.class)-->Line_3 $$ InputStream is = message.getContent(InputStream.class)[ CD ]
Line_2 $$ public void handleMessage(Message message) throws Fault -->Line_3 $$ InputStream is = message.getContent(InputStream.class)[ FD ]
Line_2 $$ public void handleMessage(Message message) throws Fault -->Line_4 $$ if (is == null) [ CD ]
Line_3 $$ InputStream is = message.getContent(InputStream.class)-->Line_4 $$ if (is == null) [ FD ]
Line_4 $$ if (is == null) -->Line_5 $$ return[ CD ]
Line_2 $$ public void handleMessage(Message message) throws Fault -->Line_7 $$ CachedOutputStream bos = new CachedOutputStream()[ CD ]
Line_3 $$ InputStream is = message.getContent(InputStream.class)-->Line_9 $$ IOUtils.copy(is, bos)[ FD ]
Line_7 $$ CachedOutputStream bos = new CachedOutputStream()-->Line_9 $$ IOUtils.copy(is, bos)[ FD ]
Line_3 $$ InputStream is = message.getContent(InputStream.class)-->Line_10 $$ is.close()[ FD ]
Line_7 $$ CachedOutputStream bos = new CachedOutputStream()-->Line_11 $$ bos.close()[ FD ]
Line_7 $$ CachedOutputStream bos = new CachedOutputStream()-->Line_12 $$ sendMsg("Inbound Message \n" + "--------------" + bos.getOut().toString() + "\n--------------")[ FD ]
Line_2 $$ public void handleMessage(Message message) throws Fault -->Line_13 $$ message.setContent(InputStream.class, bos.getInputStream())[ FD ]
Line_7 $$ CachedOutputStream bos = new CachedOutputStream()-->Line_13 $$ message.setContent(InputStream.class, bos.getInputStream())[ FD ]
