Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void parse(Project project, Object source, RootHandler handler) [ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_3 $$ AntXMLContext context = (AntXMLContext) Reflect.getField(handler, "context")[ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_3 $$ AntXMLContext context = (AntXMLContext) Reflect.getField(handler, "context")[ FD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_4 $$ File buildFile = null[ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_5 $$ URL url = null[ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_6 $$ String buildFileName = null[ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_7 $$ if (source instanceof File) [ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_7 $$ if (source instanceof File) [ FD ]
Line_7 $$ if (source instanceof File) -->Line_8 $$ buildFile = (File) source[ CD ]
Line_4 $$ File buildFile = null-->Line_8 $$ buildFile = (File) source[ FD ]
Line_8 $$ buildFile = (File) source-->Line_8 $$ buildFile = (File) source[ FD ]
Line_7 $$ if (source instanceof File) -->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ CD ]
Line_4 $$ File buildFile = null-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ FD ]
Line_8 $$ buildFile = (File) source-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ CD ]
Line_4 $$ File buildFile = null-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ FD ]
Line_8 $$ buildFile = (File) source-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())[ FD ]
Line_7 $$ if (source instanceof File) -->Line_10 $$ context.setBuildFile(buildFile)[ CD ]
Line_3 $$ AntXMLContext context = (AntXMLContext) Reflect.getField(handler, "context")-->Line_10 $$ context.setBuildFile(buildFile)[ FD ]
Line_4 $$ File buildFile = null-->Line_10 $$ context.setBuildFile(buildFile)[ FD ]
Line_8 $$ buildFile = (File) source-->Line_10 $$ context.setBuildFile(buildFile)[ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_10 $$ context.setBuildFile(buildFile)[ FD ]
Line_7 $$ if (source instanceof File) -->Line_11 $$ buildFileName = buildFile.toString()[ CD ]
Line_6 $$ String buildFileName = null-->Line_11 $$ buildFileName = buildFile.toString()[ FD ]
Line_11 $$ buildFileName = buildFile.toString()-->Line_11 $$ buildFileName = buildFile.toString()[ FD ]
Line_11 $$ buildFileName = buildFile.toString()-->Line_11 $$ buildFileName = buildFile.toString()[ CD ]
Line_4 $$ File buildFile = null-->Line_11 $$ buildFileName = buildFile.toString()[ FD ]
Line_8 $$ buildFile = (File) source-->Line_11 $$ buildFileName = buildFile.toString()[ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_11 $$ buildFileName = buildFile.toString()[ FD ]
Line_7 $$ if (source instanceof File) -->Line_12 $$ if (source instanceof URL) [ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_12 $$ if (source instanceof URL) [ FD ]
Line_12 $$ if (source instanceof URL) -->Line_13 $$ url = (URL) source[ CD ]
Line_5 $$ URL url = null-->Line_13 $$ url = (URL) source[ FD ]
Line_13 $$ url = (URL) source-->Line_13 $$ url = (URL) source[ FD ]
Line_12 $$ if (source instanceof URL) -->Line_14 $$ buildFileName = url.toString()[ CD ]
Line_6 $$ String buildFileName = null-->Line_14 $$ buildFileName = url.toString()[ FD ]
Line_11 $$ buildFileName = buildFile.toString()-->Line_14 $$ buildFileName = url.toString()[ FD ]
Line_14 $$ buildFileName = url.toString()-->Line_14 $$ buildFileName = url.toString()[ FD ]
Line_14 $$ buildFileName = url.toString()-->Line_14 $$ buildFileName = url.toString()[ CD ]
Line_5 $$ URL url = null-->Line_14 $$ buildFileName = url.toString()[ FD ]
Line_13 $$ url = (URL) source-->Line_14 $$ buildFileName = url.toString()[ FD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_16 $$ throw new BuildException("Source " + source.getClass().getName() + " not supported by this plugin")[ FD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_18 $$ InputStream inputStream = null[ CD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_19 $$ InputSource inputSource = null[ CD ]
Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()-->Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()[ CD ]
Line_4 $$ File buildFile = null-->Line_23 $$ if (buildFile != null) [ FD ]
Line_8 $$ buildFile = (File) source-->Line_23 $$ if (buildFile != null) [ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_23 $$ if (buildFile != null) [ FD ]
Line_23 $$ if (buildFile != null) -->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ CD ]
Line_22 $$ String uri = null-->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ FD ]
Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())-->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ FD ]
Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())-->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ CD ]
Line_4 $$ File buildFile = null-->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ FD ]
Line_8 $$ buildFile = (File) source-->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ FD ]
Line_9 $$ buildFile = fu.normalize(buildFile.getAbsolutePath())-->Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())[ FD ]
Line_23 $$ if (buildFile != null) -->Line_25 $$ inputStream = new FileInputStream(buildFile)[ CD ]
Line_18 $$ InputStream inputStream = null-->Line_25 $$ inputStream = new FileInputStream(buildFile)[ FD ]
Line_25 $$ inputStream = new FileInputStream(buildFile)-->Line_25 $$ inputStream = new FileInputStream(buildFile)[ FD ]
Line_23 $$ if (buildFile != null) -->Line_27 $$ inputStream = url.openStream()[ CD ]
Line_18 $$ InputStream inputStream = null-->Line_27 $$ inputStream = url.openStream()[ FD ]
Line_25 $$ inputStream = new FileInputStream(buildFile)-->Line_27 $$ inputStream = url.openStream()[ FD ]
Line_27 $$ inputStream = url.openStream()-->Line_27 $$ inputStream = url.openStream()[ FD ]
Line_27 $$ inputStream = url.openStream()-->Line_27 $$ inputStream = url.openStream()[ CD ]
Line_5 $$ URL url = null-->Line_27 $$ inputStream = url.openStream()[ FD ]
Line_13 $$ url = (URL) source-->Line_27 $$ inputStream = url.openStream()[ FD ]
Line_23 $$ if (buildFile != null) -->Line_28 $$ uri = url.toString()[ CD ]
Line_22 $$ String uri = null-->Line_28 $$ uri = url.toString()[ FD ]
Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())-->Line_28 $$ uri = url.toString()[ FD ]
Line_28 $$ uri = url.toString()-->Line_28 $$ uri = url.toString()[ FD ]
Line_28 $$ uri = url.toString()-->Line_28 $$ uri = url.toString()[ CD ]
Line_5 $$ URL url = null-->Line_28 $$ uri = url.toString()[ FD ]
Line_13 $$ url = (URL) source-->Line_28 $$ uri = url.toString()[ FD ]
Line_19 $$ InputSource inputSource = null-->Line_30 $$ inputSource = new InputSource(inputStream)[ FD ]
Line_30 $$ inputSource = new InputSource(inputStream)-->Line_30 $$ inputSource = new InputSource(inputStream)[ FD ]
Line_22 $$ String uri = null-->Line_31 $$ if (uri != null) [ FD ]
Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())-->Line_31 $$ if (uri != null) [ FD ]
Line_28 $$ uri = url.toString()-->Line_31 $$ if (uri != null) [ FD ]
Line_31 $$ if (uri != null) -->Line_32 $$ inputSource.setSystemId(uri)[ CD ]
Line_19 $$ InputSource inputSource = null-->Line_32 $$ inputSource.setSystemId(uri)[ FD ]
Line_30 $$ inputSource = new InputSource(inputStream)-->Line_32 $$ inputSource.setSystemId(uri)[ FD ]
Line_22 $$ String uri = null-->Line_32 $$ inputSource.setSystemId(uri)[ FD ]
Line_24 $$ uri = fu.toURI(buildFile.getAbsolutePath())-->Line_32 $$ inputSource.setSystemId(uri)[ FD ]
Line_28 $$ uri = url.toString()-->Line_32 $$ inputSource.setSystemId(uri)[ FD ]
Line_2 $$ public void parse(Project project, Object source, RootHandler handler) -->Line_34 $$ project.log("parsing buildfile " + buildFileName + " with URI = " + uri, Project.MSG_VERBOSE)[ FD ]
Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()-->Line_36 $$ parser.setContentHandler(hb)[ FD ]
Line_35 $$ DefaultHandler hb = handler-->Line_36 $$ parser.setContentHandler(hb)[ FD ]
Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()-->Line_37 $$ parser.setEntityResolver(hb)[ FD ]
Line_35 $$ DefaultHandler hb = handler-->Line_37 $$ parser.setEntityResolver(hb)[ FD ]
Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()-->Line_38 $$ parser.setErrorHandler(hb)[ FD ]
Line_35 $$ DefaultHandler hb = handler-->Line_38 $$ parser.setErrorHandler(hb)[ FD ]
Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()-->Line_39 $$ parser.setDTDHandler(hb)[ FD ]
Line_35 $$ DefaultHandler hb = handler-->Line_39 $$ parser.setDTDHandler(hb)[ FD ]
Line_21 $$ XMLReader parser = JAXPUtils.getNamespaceXMLReader()-->Line_40 $$ parser.parse(inputSource)[ FD ]
Line_19 $$ InputSource inputSource = null-->Line_40 $$ parser.parse(inputSource)[ FD ]
Line_30 $$ inputSource = new InputSource(inputStream)-->Line_40 $$ parser.parse(inputSource)[ FD ]
Line_43 $$ Throwable t = exc.getException()-->Line_43 $$ Throwable t = exc.getException()[ CD ]
Line_43 $$ Throwable t = exc.getException()-->Line_44 $$ if (t instanceof BuildException) [ FD ]
Line_44 $$ if (t instanceof BuildException) -->Line_45 $$ BuildException be = (BuildException) t[ CD ]
Line_44 $$ if (t instanceof BuildException) -->Line_46 $$ if (be.getLocation() == Location.UNKNOWN_LOCATION) [ CD ]
Line_45 $$ BuildException be = (BuildException) t-->Line_46 $$ if (be.getLocation() == Location.UNKNOWN_LOCATION) [ FD ]
Line_46 $$ if (be.getLocation() == Location.UNKNOWN_LOCATION) -->Line_47 $$ be.setLocation(location)[ CD ]
Line_45 $$ BuildException be = (BuildException) t-->Line_47 $$ be.setLocation(location)[ FD ]
Line_42 $$ Location location = new Location(exc.getSystemId(), exc.getLineNumber(), exc.getColumnNumber())-->Line_47 $$ be.setLocation(location)[ FD ]
Line_43 $$ Throwable t = exc.getException()-->Line_54 $$ if (t instanceof BuildException) [ FD ]
Line_18 $$ InputStream inputStream = null-->Line_65 $$ if (inputStream != null) [ FD ]
Line_25 $$ inputStream = new FileInputStream(buildFile)-->Line_65 $$ if (inputStream != null) [ FD ]
Line_27 $$ inputStream = url.openStream()-->Line_65 $$ if (inputStream != null) [ FD ]
Line_18 $$ InputStream inputStream = null-->Line_67 $$ inputStream.close()[ FD ]
Line_25 $$ inputStream = new FileInputStream(buildFile)-->Line_67 $$ inputStream.close()[ FD ]
Line_27 $$ inputStream = url.openStream()-->Line_67 $$ inputStream.close()[ FD ]
