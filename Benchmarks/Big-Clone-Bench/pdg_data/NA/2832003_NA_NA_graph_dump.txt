Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String computeDigest(String str, String alg) [ CD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_3 $$ MessageDigest currentAlgorithm = null[ CD ]
Line_3 $$ MessageDigest currentAlgorithm = null-->Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)[ FD ]
Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)-->Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)[ FD ]
Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)-->Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)[ CD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)[ FD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_9 $$ currentAlgorithm.reset()[ CD ]
Line_3 $$ MessageDigest currentAlgorithm = null-->Line_9 $$ currentAlgorithm.reset()[ FD ]
Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)-->Line_9 $$ currentAlgorithm.reset()[ FD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_10 $$ currentAlgorithm.update(str.getBytes())[ CD ]
Line_3 $$ MessageDigest currentAlgorithm = null-->Line_10 $$ currentAlgorithm.update(str.getBytes())[ FD ]
Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)-->Line_10 $$ currentAlgorithm.update(str.getBytes())[ FD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_10 $$ currentAlgorithm.update(str.getBytes())[ FD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_11 $$ byte[] hash = currentAlgorithm.digest()[ CD ]
Line_11 $$ byte[] hash = currentAlgorithm.digest()-->Line_11 $$ byte[] hash = currentAlgorithm.digest()[ CD ]
Line_3 $$ MessageDigest currentAlgorithm = null-->Line_11 $$ byte[] hash = currentAlgorithm.digest()[ FD ]
Line_5 $$ currentAlgorithm = MessageDigest.getInstance(alg)-->Line_11 $$ byte[] hash = currentAlgorithm.digest()[ FD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_12 $$ String d = ""[ CD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_13 $$ int usbyte = 0[ CD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_2 $$ public static String computeDigest(String str, String alg) [ CD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_15 $$ usbyte = hash[i] & 0xFF[ CD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_15 $$ usbyte = hash[i] & 0xFF[ FD ]
Line_13 $$ int usbyte = 0-->Line_15 $$ usbyte = hash[i] & 0xFF[ FD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_16 $$ if (usbyte < 16)[ CD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_16 $$ if (usbyte < 16)[ FD ]
Line_13 $$ int usbyte = 0-->Line_16 $$ if (usbyte < 16)[ FD ]
Line_16 $$ if (usbyte < 16)-->Line_16 $$ d += "0" + Integer.toHexString(usbyte)[ CD ]
Line_16 $$ d += "0" + Integer.toHexString(usbyte)-->Line_16 $$ d += "0" + Integer.toHexString(usbyte)[ FD ]
Line_12 $$ String d = ""-->Line_16 $$ d += "0" + Integer.toHexString(usbyte)[ FD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_16 $$ d += "0" + Integer.toHexString(usbyte)[ FD ]
Line_13 $$ int usbyte = 0-->Line_16 $$ d += "0" + Integer.toHexString(usbyte)[ FD ]
Line_16 $$ if (usbyte < 16)-->Line_16 $$ d += Integer.toHexString(usbyte)[ CD ]
Line_16 $$ d += "0" + Integer.toHexString(usbyte)-->Line_16 $$ d += Integer.toHexString(usbyte)[ FD ]
Line_16 $$ d += Integer.toHexString(usbyte)-->Line_16 $$ d += Integer.toHexString(usbyte)[ FD ]
Line_12 $$ String d = ""-->Line_16 $$ d += Integer.toHexString(usbyte)[ FD ]
Line_16 $$ d += Integer.toHexString(usbyte)-->Line_16 $$ d += Integer.toHexString(usbyte)[ CD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_16 $$ d += Integer.toHexString(usbyte)[ FD ]
Line_13 $$ int usbyte = 0-->Line_16 $$ d += Integer.toHexString(usbyte)[ FD ]
Line_2 $$ public static String computeDigest(String str, String alg) -->Line_18 $$ return d.toUpperCase()[ CD ]
Line_18 $$ return d.toUpperCase()-->Line_18 $$ return d.toUpperCase()[ CD ]
Line_16 $$ d += "0" + Integer.toHexString(usbyte)-->Line_18 $$ return d.toUpperCase()[ FD ]
Line_16 $$ d += Integer.toHexString(usbyte)-->Line_18 $$ return d.toUpperCase()[ FD ]
Line_12 $$ String d = ""-->Line_18 $$ return d.toUpperCase()[ FD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_16 $$ if (usbyte < 16)[ FD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_16 $$ d += "0" + Integer.toHexString(usbyte)[ FD ]
Line_15 $$ usbyte = hash[i] & 0xFF-->Line_16 $$ d += Integer.toHexString(usbyte)[ FD ]
