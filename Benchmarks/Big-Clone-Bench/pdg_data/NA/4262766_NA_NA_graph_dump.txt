Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException [ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_3 $$ String bundleName = toBundleName(baseName, locale)[ CD ]
Line_3 $$ String bundleName = toBundleName(baseName, locale)-->Line_3 $$ String bundleName = toBundleName(baseName, locale)[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_3 $$ String bundleName = toBundleName(baseName, locale)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_3 $$ String bundleName = toBundleName(baseName, locale)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_4 $$ String resourceName = toResourceName(bundleName, "properties")[ CD ]
Line_4 $$ String resourceName = toResourceName(bundleName, "properties")-->Line_4 $$ String resourceName = toResourceName(bundleName, "properties")[ CD ]
Line_3 $$ String bundleName = toBundleName(baseName, locale)-->Line_4 $$ String resourceName = toResourceName(bundleName, "properties")[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_5 $$ ResourceBundle bundle = null[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_6 $$ InputStream stream = null[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_7 $$ if (reload) [ CD ]
Line_7 $$ if (reload) -->Line_8 $$ URL url = loader.getResource(resourceName)[ CD ]
Line_8 $$ URL url = loader.getResource(resourceName)-->Line_8 $$ URL url = loader.getResource(resourceName)[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_8 $$ URL url = loader.getResource(resourceName)[ FD ]
Line_4 $$ String resourceName = toResourceName(bundleName, "properties")-->Line_8 $$ URL url = loader.getResource(resourceName)[ FD ]
Line_7 $$ if (reload) -->Line_9 $$ if (url != null) [ CD ]
Line_8 $$ URL url = loader.getResource(resourceName)-->Line_9 $$ if (url != null) [ FD ]
Line_9 $$ if (url != null) -->Line_10 $$ URLConnection connection = url.openConnection()[ CD ]
Line_10 $$ URLConnection connection = url.openConnection()-->Line_10 $$ URLConnection connection = url.openConnection()[ CD ]
Line_8 $$ URL url = loader.getResource(resourceName)-->Line_10 $$ URLConnection connection = url.openConnection()[ FD ]
Line_9 $$ if (url != null) -->Line_11 $$ if (connection != null) [ CD ]
Line_10 $$ URLConnection connection = url.openConnection()-->Line_11 $$ if (connection != null) [ FD ]
Line_11 $$ if (connection != null) -->Line_12 $$ connection.setUseCaches(false)[ CD ]
Line_10 $$ URLConnection connection = url.openConnection()-->Line_12 $$ connection.setUseCaches(false)[ FD ]
Line_11 $$ if (connection != null) -->Line_13 $$ stream = connection.getInputStream()[ CD ]
Line_6 $$ InputStream stream = null-->Line_13 $$ stream = connection.getInputStream()[ FD ]
Line_13 $$ stream = connection.getInputStream()-->Line_13 $$ stream = connection.getInputStream()[ FD ]
Line_13 $$ stream = connection.getInputStream()-->Line_13 $$ stream = connection.getInputStream()[ CD ]
Line_10 $$ URLConnection connection = url.openConnection()-->Line_13 $$ stream = connection.getInputStream()[ FD ]
Line_7 $$ if (reload) -->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ CD ]
Line_6 $$ InputStream stream = null-->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ FD ]
Line_13 $$ stream = connection.getInputStream()-->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ FD ]
Line_17 $$ stream = loader.getResourceAsStream(resourceName)-->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ FD ]
Line_17 $$ stream = loader.getResourceAsStream(resourceName)-->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ CD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ FD ]
Line_4 $$ String resourceName = toResourceName(bundleName, "properties")-->Line_17 $$ stream = loader.getResourceAsStream(resourceName)[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_19 $$ if (stream != null) [ CD ]
Line_6 $$ InputStream stream = null-->Line_19 $$ if (stream != null) [ FD ]
Line_13 $$ stream = connection.getInputStream()-->Line_19 $$ if (stream != null) [ FD ]
Line_17 $$ stream = loader.getResourceAsStream(resourceName)-->Line_19 $$ if (stream != null) [ FD ]
Line_5 $$ ResourceBundle bundle = null-->Line_21 $$ bundle = new PropertyResourceBundle(new InputStreamReader(stream, "UTF-8"))[ FD ]
Line_21 $$ bundle = new PropertyResourceBundle(new InputStreamReader(stream, "UTF-8"))-->Line_21 $$ bundle = new PropertyResourceBundle(new InputStreamReader(stream, "UTF-8"))[ FD ]
Line_6 $$ InputStream stream = null-->Line_23 $$ stream.close()[ FD ]
Line_13 $$ stream = connection.getInputStream()-->Line_23 $$ stream.close()[ FD ]
Line_17 $$ stream = loader.getResourceAsStream(resourceName)-->Line_23 $$ stream.close()[ FD ]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException -->Line_26 $$ return bundle[ CD ]
