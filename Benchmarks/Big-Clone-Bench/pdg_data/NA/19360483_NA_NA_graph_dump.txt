Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void initLogging() [ CD ]
Line_2 $$ private void initLogging() -->Line_3 $$ File logging = new File(App.getHome(), "logging.properties")[ CD ]
Line_2 $$ private void initLogging() -->Line_4 $$ if (!logging.exists()) [ CD ]
Line_4 $$ if (!logging.exists()) -->Line_4 $$ if (!logging.exists()) [ CD ]
Line_4 $$ if (!logging.exists()) -->Line_4 $$ if (!logging.exists()) [ CD ]
Line_3 $$ File logging = new File(App.getHome(), "logging.properties")-->Line_4 $$ if (!logging.exists()) [ FD ]
Line_4 $$ if (!logging.exists()) -->Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")[ CD ]
Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")-->Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")[ CD ]
Line_4 $$ if (!logging.exists()) -->Line_6 $$ OutputStream output = null[ CD ]
Line_6 $$ OutputStream output = null-->Line_8 $$ output = new FileOutputStream(logging)[ FD ]
Line_8 $$ output = new FileOutputStream(logging)-->Line_8 $$ output = new FileOutputStream(logging)[ FD ]
Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")-->Line_9 $$ IOUtils.copy(input, output)[ FD ]
Line_6 $$ OutputStream output = null-->Line_9 $$ IOUtils.copy(input, output)[ FD ]
Line_8 $$ output = new FileOutputStream(logging)-->Line_9 $$ IOUtils.copy(input, output)[ FD ]
Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")-->Line_12 $$ IOUtils.closeQuietly(input)[ FD ]
Line_6 $$ OutputStream output = null-->Line_13 $$ IOUtils.closeQuietly(output)[ FD ]
Line_8 $$ output = new FileOutputStream(logging)-->Line_13 $$ IOUtils.closeQuietly(output)[ FD ]
Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")-->Line_18 $$ input = new FileInputStream(logging)[ FD ]
Line_18 $$ input = new FileInputStream(logging)-->Line_18 $$ input = new FileInputStream(logging)[ FD ]
Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")-->Line_19 $$ LogManager.getLogManager().readConfiguration(input)[ FD ]
Line_18 $$ input = new FileInputStream(logging)-->Line_19 $$ LogManager.getLogManager().readConfiguration(input)[ FD ]
Line_5 $$ InputStream input = getClass().getResourceAsStream("logging.properties-setup")-->Line_22 $$ IOUtils.closeQuietly(input)[ FD ]
Line_18 $$ input = new FileInputStream(logging)-->Line_22 $$ IOUtils.closeQuietly(input)[ FD ]
