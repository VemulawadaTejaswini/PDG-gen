Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void loadMascotLibrary() [ CD ]
Line_2 $$ private void loadMascotLibrary() -->Line_3 $$ if (isMascotLibraryLoaded)[ CD ]
Line_3 $$ if (isMascotLibraryLoaded)-->Line_3 $$ return[ CD ]
Line_8 $$ if (Configurator.getOSName().toLowerCase().contains("linux")) -->Line_8 $$ if (Configurator.getOSName().toLowerCase().contains("linux")) [ CD ]
Line_8 $$ if (Configurator.getOSName().toLowerCase().contains("linux")) -->Line_9 $$ isLinux = true[ CD ]
Line_5 $$ boolean isLinux = false-->Line_9 $$ isLinux = true[ FD ]
Line_9 $$ isLinux = true-->Line_9 $$ isLinux = true[ FD ]
Line_11 $$ if (Configurator.getOSArch().toLowerCase().contains("amd64")) -->Line_11 $$ if (Configurator.getOSArch().toLowerCase().contains("amd64")) [ CD ]
Line_11 $$ if (Configurator.getOSArch().toLowerCase().contains("amd64")) -->Line_12 $$ isAMD64 = true[ CD ]
Line_6 $$ boolean isAMD64 = false-->Line_12 $$ isAMD64 = true[ FD ]
Line_12 $$ isAMD64 = true-->Line_12 $$ isAMD64 = true[ FD ]
Line_14 $$ if (isLinux) -->Line_15 $$ if (isAMD64) [ CD ]
Line_15 $$ if (isAMD64) -->Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"[ CD ]
Line_7 $$ String mascotLibraryFile-->Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"[ FD ]
Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"-->Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"[ FD ]
Line_15 $$ if (isAMD64) -->Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"[ CD ]
Line_7 $$ String mascotLibraryFile-->Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"[ FD ]
Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"-->Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"[ FD ]
Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"-->Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"[ FD ]
Line_14 $$ if (isLinux) -->Line_21 $$ if (isAMD64) [ CD ]
Line_21 $$ if (isAMD64) -->Line_22 $$ mascotLibraryFile = "msparserj-64.dll"[ CD ]
Line_7 $$ String mascotLibraryFile-->Line_22 $$ mascotLibraryFile = "msparserj-64.dll"[ FD ]
Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"-->Line_22 $$ mascotLibraryFile = "msparserj-64.dll"[ FD ]
Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"-->Line_22 $$ mascotLibraryFile = "msparserj-64.dll"[ FD ]
Line_22 $$ mascotLibraryFile = "msparserj-64.dll"-->Line_22 $$ mascotLibraryFile = "msparserj-64.dll"[ FD ]
Line_21 $$ if (isAMD64) -->Line_24 $$ mascotLibraryFile = "msparserj-32.dll"[ CD ]
Line_7 $$ String mascotLibraryFile-->Line_24 $$ mascotLibraryFile = "msparserj-32.dll"[ FD ]
Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"-->Line_24 $$ mascotLibraryFile = "msparserj-32.dll"[ FD ]
Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"-->Line_24 $$ mascotLibraryFile = "msparserj-32.dll"[ FD ]
Line_22 $$ mascotLibraryFile = "msparserj-64.dll"-->Line_24 $$ mascotLibraryFile = "msparserj-32.dll"[ FD ]
Line_24 $$ mascotLibraryFile = "msparserj-32.dll"-->Line_24 $$ mascotLibraryFile = "msparserj-32.dll"[ FD ]
Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)-->Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)[ CD ]
Line_7 $$ String mascotLibraryFile-->Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)[ FD ]
Line_16 $$ mascotLibraryFile = "libmsparserj-64.so"-->Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)[ FD ]
Line_18 $$ mascotLibraryFile = "libmsparserj-32.so"-->Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)[ FD ]
Line_22 $$ mascotLibraryFile = "msparserj-64.dll"-->Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)[ FD ]
Line_24 $$ mascotLibraryFile = "msparserj-32.dll"-->Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)[ FD ]
Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)-->Line_29 $$ if (mascot_lib != null) [ FD ]
Line_29 $$ if (mascot_lib != null) -->Line_30 $$ logger.debug("Mascot library URL: " + mascot_lib)[ CD ]
Line_29 $$ if (mascot_lib != null) -->Line_31 $$ tmpMascotLibraryFile = File.createTempFile("libmascot.so.", ".tmp", new File(System.getProperty("java.io.tmpdir")))[ CD ]
Line_29 $$ if (mascot_lib != null) -->Line_32 $$ InputStream in = mascot_lib.openStream()[ CD ]
Line_32 $$ InputStream in = mascot_lib.openStream()-->Line_32 $$ InputStream in = mascot_lib.openStream()[ CD ]
Line_28 $$ URL mascot_lib = MascotDAO.class.getClassLoader().getResource(mascotLibraryFile)-->Line_32 $$ InputStream in = mascot_lib.openStream()[ FD ]
Line_29 $$ if (mascot_lib != null) -->Line_33 $$ OutputStream out = new FileOutputStream(tmpMascotLibraryFile)[ CD ]
Line_29 $$ if (mascot_lib != null) -->Line_34 $$ IOUtils.copy(in, out)[ CD ]
Line_32 $$ InputStream in = mascot_lib.openStream()-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_33 $$ OutputStream out = new FileOutputStream(tmpMascotLibraryFile)-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_29 $$ if (mascot_lib != null) -->Line_35 $$ in.close()[ CD ]
Line_32 $$ InputStream in = mascot_lib.openStream()-->Line_35 $$ in.close()[ FD ]
Line_29 $$ if (mascot_lib != null) -->Line_36 $$ out.close()[ CD ]
Line_33 $$ OutputStream out = new FileOutputStream(tmpMascotLibraryFile)-->Line_36 $$ out.close()[ FD ]
Line_29 $$ if (mascot_lib != null) -->Line_37 $$ System.load(tmpMascotLibraryFile.getAbsolutePath())[ CD ]
