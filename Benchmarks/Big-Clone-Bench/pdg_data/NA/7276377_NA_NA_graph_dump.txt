Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String checksum(URL url, String algorithm) [ CD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_3 $$ MessageDigest messageDigest[ CD ]
Line_3 $$ MessageDigest messageDigest-->Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)[ FD ]
Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)-->Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)[ FD ]
Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)-->Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)[ CD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)[ FD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_9 $$ byte[] bytes = new byte[4 * 1024][ CD ]
Line_11 $$ InputStream in = null-->Line_13 $$ in = url.openStream()[ FD ]
Line_13 $$ in = url.openStream()-->Line_13 $$ in = url.openStream()[ FD ]
Line_13 $$ in = url.openStream()-->Line_13 $$ in = url.openStream()[ CD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_13 $$ in = url.openStream()[ FD ]
Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) -->Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) [ FD ]
Line_14 $$ int nBytesRead = 0-->Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) [ FD ]
Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) -->Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) [ CD ]
Line_11 $$ InputStream in = null-->Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) [ FD ]
Line_13 $$ in = url.openStream()-->Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) [ FD ]
Line_9 $$ byte[] bytes = new byte[4 * 1024]-->Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) [ FD ]
Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) -->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ CD ]
Line_3 $$ MessageDigest messageDigest-->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ FD ]
Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)-->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ FD ]
Line_9 $$ byte[] bytes = new byte[4 * 1024]-->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ FD ]
Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) -->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ FD ]
Line_14 $$ int nBytesRead = 0-->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ FD ]
Line_11 $$ InputStream in = null-->Line_19 $$ if (in != null) [ FD ]
Line_13 $$ in = url.openStream()-->Line_19 $$ if (in != null) [ FD ]
Line_19 $$ if (in != null) -->Line_20 $$ in.close()[ CD ]
Line_11 $$ InputStream in = null-->Line_20 $$ in.close()[ FD ]
Line_13 $$ in = url.openStream()-->Line_20 $$ in.close()[ FD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_24 $$ throw new RuntimeException("Could not read message digest for: " + url.toExternalForm() + " using algorithm: " + algorithm)[ FD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_26 $$ byte[] checksumValue = messageDigest.digest()[ CD ]
Line_26 $$ byte[] checksumValue = messageDigest.digest()-->Line_26 $$ byte[] checksumValue = messageDigest.digest()[ CD ]
Line_3 $$ MessageDigest messageDigest-->Line_26 $$ byte[] checksumValue = messageDigest.digest()[ FD ]
Line_5 $$ messageDigest = MessageDigest.getInstance(algorithm)-->Line_26 $$ byte[] checksumValue = messageDigest.digest()[ FD ]
Line_2 $$ public static String checksum(URL url, String algorithm) -->Line_27 $$ return digestAsString(checksumValue)[ CD ]
Line_27 $$ return digestAsString(checksumValue)-->Line_27 $$ return digestAsString(checksumValue)[ CD ]
Line_26 $$ byte[] checksumValue = messageDigest.digest()-->Line_27 $$ return digestAsString(checksumValue)[ FD ]
Line_15 $$ while ((nBytesRead = in.read(bytes)) > 0) -->Line_16 $$ messageDigest.update(bytes, 0, nBytesRead)[ FD ]
