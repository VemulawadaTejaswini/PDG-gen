Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) [ CD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_3 $$ if (longitude == null) [ CD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_3 $$ if (longitude == null) [ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_6 $$ if (latitude == null) [ CD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_6 $$ if (latitude == null) [ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_9 $$ if (zoomLevel == null) [ CD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_9 $$ if (zoomLevel == null) [ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)[ CD ]
Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)-->Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)[ CD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)[ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)[ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)[ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_13 $$ BufferedImage img[ CD ]
Line_15 $$ URLConnection conn = url.toURL().openConnection()-->Line_15 $$ URLConnection conn = url.toURL().openConnection()[ CD ]
Line_12 $$ final URI url = GoogleMapsUtils.buildGoogleMapsStaticUrl(latitude, longitude, zoomLevel)-->Line_15 $$ URLConnection conn = url.toURL().openConnection()[ FD ]
Line_13 $$ BufferedImage img-->Line_16 $$ img = ImageIO.read(conn.getInputStream())[ FD ]
Line_16 $$ img = ImageIO.read(conn.getInputStream())-->Line_16 $$ img = ImageIO.read(conn.getInputStream())[ FD ]
Line_16 $$ img = ImageIO.read(conn.getInputStream())-->Line_16 $$ img = ImageIO.read(conn.getInputStream())[ CD ]
Line_15 $$ URLConnection conn = url.toURL().openConnection()-->Line_16 $$ img = ImageIO.read(conn.getInputStream())[ FD ]
Line_13 $$ BufferedImage img-->Line_19 $$ img = new BufferedImage(GoogleMapsUtils.defaultWidth, 100, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_16 $$ img = ImageIO.read(conn.getInputStream())-->Line_19 $$ img = new BufferedImage(GoogleMapsUtils.defaultWidth, 100, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_19 $$ img = new BufferedImage(GoogleMapsUtils.defaultWidth, 100, BufferedImage.TYPE_INT_RGB)-->Line_19 $$ img = new BufferedImage(GoogleMapsUtils.defaultWidth, 100, BufferedImage.TYPE_INT_RGB)[ FD ]
Line_20 $$ final Graphics2D graphics = img.createGraphics()-->Line_20 $$ final Graphics2D graphics = img.createGraphics()[ CD ]
Line_13 $$ BufferedImage img-->Line_20 $$ final Graphics2D graphics = img.createGraphics()[ FD ]
Line_16 $$ img = ImageIO.read(conn.getInputStream())-->Line_20 $$ final Graphics2D graphics = img.createGraphics()[ FD ]
Line_19 $$ img = new BufferedImage(GoogleMapsUtils.defaultWidth, 100, BufferedImage.TYPE_INT_RGB)-->Line_20 $$ final Graphics2D graphics = img.createGraphics()[ FD ]
Line_21 $$ final Map<Object, Object> renderingHints = CollectionUtils.getHashMap()-->Line_21 $$ final Map<Object, Object> renderingHints = CollectionUtils.getHashMap()[ CD ]
Line_21 $$ final Map<Object, Object> renderingHints = CollectionUtils.getHashMap()-->Line_22 $$ renderingHints.put(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON)[ FD ]
Line_20 $$ final Graphics2D graphics = img.createGraphics()-->Line_23 $$ graphics.addRenderingHints(renderingHints)[ FD ]
Line_21 $$ final Map<Object, Object> renderingHints = CollectionUtils.getHashMap()-->Line_23 $$ graphics.addRenderingHints(renderingHints)[ FD ]
Line_20 $$ final Graphics2D graphics = img.createGraphics()-->Line_24 $$ graphics.setBackground(Color.WHITE)[ FD ]
Line_20 $$ final Graphics2D graphics = img.createGraphics()-->Line_25 $$ graphics.setColor(Color.GRAY)[ FD ]
Line_20 $$ final Graphics2D graphics = img.createGraphics()-->Line_26 $$ graphics.clearRect(0, 0, GoogleMapsUtils.defaultWidth, 100)[ FD ]
Line_20 $$ final Graphics2D graphics = img.createGraphics()-->Line_27 $$ graphics.drawString("Not Available", 30, 30)[ FD ]
Line_2 $$ public Image getGoogleMapImage(final BigDecimal latitude, final BigDecimal longitude, final Integer zoomLevel) -->Line_31 $$ return img[ CD ]
