Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void addImageDB(String pictogramsPath, String pictogramToAddPath, String language, String type, String word) [ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_7 $$ if (!dataBase.exists()) [ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_7 $$ if (!dataBase.exists()) [ CD ]
Line_6 $$ File dataBase = new File(fileName)-->Line_7 $$ if (!dataBase.exists()) [ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_8 $$ JOptionPane.showMessageDialog(null, "No se encuentra el fichero DB", "Error", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_10 $$ int idL = 0, idT = 0[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_11 $$ G.conn = DriverManager.getConnection("jdbc:sqlite:" + fileName)[ CD ]
Line_11 $$ G.conn = DriverManager.getConnection("jdbc:sqlite:" + fileName)-->Line_11 $$ G.conn = DriverManager.getConnection("jdbc:sqlite:" + fileName)[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_12 $$ Statement stat = G.conn.createStatement()[ CD ]
Line_12 $$ Statement stat = G.conn.createStatement()-->Line_12 $$ Statement stat = G.conn.createStatement()[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")[ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")[ CD ]
Line_12 $$ Statement stat = G.conn.createStatement()-->Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_14 $$ while (rs.next()) [ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_7 $$ if (!dataBase.exists()) [ CD ]
Line_14 $$ while (rs.next()) -->Line_14 $$ while (rs.next()) [ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_14 $$ while (rs.next()) [ FD ]
Line_14 $$ while (rs.next()) -->Line_15 $$ idL = rs.getInt("id")[ CD ]
Line_15 $$ idL = rs.getInt("id")-->Line_15 $$ idL = rs.getInt("id")[ FD ]
Line_10 $$ int idL = 0, idT = 0-->Line_15 $$ idL = rs.getInt("id")[ FD ]
Line_15 $$ idL = rs.getInt("id")-->Line_15 $$ idL = rs.getInt("id")[ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_15 $$ idL = rs.getInt("id")[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_17 $$ rs.close()[ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_17 $$ rs.close()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_18 $$ stat.close()[ CD ]
Line_12 $$ Statement stat = G.conn.createStatement()-->Line_18 $$ stat.close()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_19 $$ stat = G.conn.createStatement()[ CD ]
Line_12 $$ Statement stat = G.conn.createStatement()-->Line_19 $$ stat = G.conn.createStatement()[ FD ]
Line_19 $$ stat = G.conn.createStatement()-->Line_19 $$ stat = G.conn.createStatement()[ FD ]
Line_19 $$ stat = G.conn.createStatement()-->Line_19 $$ stat = G.conn.createStatement()[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")[ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")[ FD ]
Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")-->Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")[ FD ]
Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")-->Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")[ CD ]
Line_12 $$ Statement stat = G.conn.createStatement()-->Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")[ FD ]
Line_19 $$ stat = G.conn.createStatement()-->Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_21 $$ while (rs.next()) [ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_7 $$ if (!dataBase.exists()) [ CD ]
Line_21 $$ while (rs.next()) -->Line_21 $$ while (rs.next()) [ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_21 $$ while (rs.next()) [ FD ]
Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")-->Line_21 $$ while (rs.next()) [ FD ]
Line_21 $$ while (rs.next()) -->Line_22 $$ idT = rs.getInt("id")[ CD ]
Line_22 $$ idT = rs.getInt("id")-->Line_22 $$ idT = rs.getInt("id")[ FD ]
Line_10 $$ int idL = 0, idT = 0-->Line_22 $$ idT = rs.getInt("id")[ FD ]
Line_22 $$ idT = rs.getInt("id")-->Line_22 $$ idT = rs.getInt("id")[ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_22 $$ idT = rs.getInt("id")[ FD ]
Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")-->Line_22 $$ idT = rs.getInt("id")[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_24 $$ rs.close()[ CD ]
Line_13 $$ ResultSet rs = stat.executeQuery("select id from language where name=\"" + language + "\"")-->Line_24 $$ rs.close()[ FD ]
Line_20 $$ rs = stat.executeQuery("select id from type where name=\"" + type + "\"")-->Line_24 $$ rs.close()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_25 $$ stat.close()[ CD ]
Line_12 $$ Statement stat = G.conn.createStatement()-->Line_25 $$ stat.close()[ FD ]
Line_19 $$ stat = G.conn.createStatement()-->Line_25 $$ stat.close()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())[ CD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())[ CD ]
Line_2 $$ public static void addImageDB(String pictogramsPath, String pictogramToAddPath, String language, String type, String word) -->Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())[ FD ]
Line_2 $$ public static void addImageDB(String pictogramsPath, String pictogramToAddPath, String language, String type, String word) -->Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())[ FD ]
Line_2 $$ public static void addImageDB(String pictogramsPath, String pictogramToAddPath, String language, String type, String word) -->Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_27 $$ String idOrig = id[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_28 $$ String pathSrc = pictogramToAddPath[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_29 $$ String pathDst = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase() + File.separator[ CD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_29 $$ String pathDst = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase() + File.separator[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_30 $$ String folder = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase()[ CD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_30 $$ String folder = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_31 $$ String pathDstTmp = pathDst.concat(id)[ CD ]
Line_31 $$ String pathDstTmp = pathDst.concat(id)-->Line_31 $$ String pathDstTmp = pathDst.concat(id)[ CD ]
Line_29 $$ String pathDst = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase() + File.separator-->Line_31 $$ String pathDstTmp = pathDst.concat(id)[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_31 $$ String pathDstTmp = pathDst.concat(id)[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_32 $$ String idTmp = id[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_33 $$ File testFile = new File(pathDstTmp)[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_34 $$ int cont = 1[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_35 $$ while (testFile.exists()) [ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_7 $$ if (!dataBase.exists()) [ CD ]
Line_35 $$ while (testFile.exists()) -->Line_35 $$ while (testFile.exists()) [ CD ]
Line_33 $$ File testFile = new File(pathDstTmp)-->Line_35 $$ while (testFile.exists()) [ FD ]
Line_35 $$ while (testFile.exists()) -->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ CD ]
Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_32 $$ String idTmp = id-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())[ FD ]
Line_35 $$ while (testFile.exists()) -->Line_37 $$ pathDstTmp = pathDst + idTmp[ CD ]
Line_37 $$ pathDstTmp = pathDst + idTmp-->Line_37 $$ pathDstTmp = pathDst + idTmp[ FD ]
Line_31 $$ String pathDstTmp = pathDst.concat(id)-->Line_37 $$ pathDstTmp = pathDst + idTmp[ FD ]
Line_29 $$ String pathDst = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase() + File.separator-->Line_37 $$ pathDstTmp = pathDst + idTmp[ FD ]
Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())-->Line_37 $$ pathDstTmp = pathDst + idTmp[ FD ]
Line_32 $$ String idTmp = id-->Line_37 $$ pathDstTmp = pathDst + idTmp[ FD ]
Line_35 $$ while (testFile.exists()) -->Line_38 $$ testFile = new File(pathDstTmp)[ CD ]
Line_38 $$ testFile = new File(pathDstTmp)-->Line_38 $$ testFile = new File(pathDstTmp)[ FD ]
Line_33 $$ File testFile = new File(pathDstTmp)-->Line_38 $$ testFile = new File(pathDstTmp)[ FD ]
Line_35 $$ while (testFile.exists()) -->Line_39 $$ cont++[ CD ]
Line_34 $$ int cont = 1-->Line_39 $$ cont++[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_41 $$ pathDst = pathDstTmp[ CD ]
Line_29 $$ String pathDst = pictogramsPath + File.separator + id.substring(0, 1).toUpperCase() + File.separator-->Line_41 $$ pathDst = pathDstTmp[ FD ]
Line_41 $$ pathDst = pathDstTmp-->Line_41 $$ pathDst = pathDstTmp[ FD ]
Line_37 $$ pathDstTmp = pathDst + idTmp-->Line_41 $$ pathDst = pathDstTmp[ FD ]
Line_31 $$ String pathDstTmp = pathDst.concat(id)-->Line_41 $$ pathDst = pathDstTmp[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_42 $$ id = idTmp[ CD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_42 $$ id = idTmp[ FD ]
Line_42 $$ id = idTmp-->Line_42 $$ id = idTmp[ FD ]
Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())-->Line_42 $$ id = idTmp[ FD ]
Line_32 $$ String idTmp = id-->Line_42 $$ id = idTmp[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_43 $$ File newDirectoryFolder = new File(folder)[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_44 $$ if (!newDirectoryFolder.exists()) [ CD ]
Line_44 $$ if (!newDirectoryFolder.exists()) -->Line_44 $$ if (!newDirectoryFolder.exists()) [ CD ]
Line_44 $$ if (!newDirectoryFolder.exists()) -->Line_44 $$ if (!newDirectoryFolder.exists()) [ CD ]
Line_43 $$ File newDirectoryFolder = new File(folder)-->Line_44 $$ if (!newDirectoryFolder.exists()) [ FD ]
Line_44 $$ if (!newDirectoryFolder.exists()) -->Line_45 $$ newDirectoryFolder.mkdirs()[ CD ]
Line_43 $$ File newDirectoryFolder = new File(folder)-->Line_45 $$ newDirectoryFolder.mkdirs()[ FD ]
Line_48 $$ FileChannel srcChannel = new FileInputStream(pathSrc).getChannel()-->Line_48 $$ FileChannel srcChannel = new FileInputStream(pathSrc).getChannel()[ CD ]
Line_49 $$ FileChannel dstChannel = new FileOutputStream(pathDst).getChannel()-->Line_49 $$ FileChannel dstChannel = new FileOutputStream(pathDst).getChannel()[ CD ]
Line_49 $$ FileChannel dstChannel = new FileOutputStream(pathDst).getChannel()-->Line_50 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_48 $$ FileChannel srcChannel = new FileInputStream(pathSrc).getChannel()-->Line_50 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_48 $$ FileChannel srcChannel = new FileInputStream(pathSrc).getChannel()-->Line_50 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_48 $$ FileChannel srcChannel = new FileInputStream(pathSrc).getChannel()-->Line_51 $$ srcChannel.close()[ FD ]
Line_49 $$ FileChannel dstChannel = new FileOutputStream(pathDst).getChannel()-->Line_52 $$ dstChannel.close()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")[ CD ]
Line_7 $$ if (!dataBase.exists()) -->Line_57 $$ stmt.setString(1, word.toLowerCase())[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_57 $$ stmt.setString(1, word.toLowerCase())[ FD ]
Line_2 $$ public static void addImageDB(String pictogramsPath, String pictogramToAddPath, String language, String type, String word) -->Line_57 $$ stmt.setString(1, word.toLowerCase())[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_58 $$ stmt.setInt(2, idL)[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_58 $$ stmt.setInt(2, idL)[ FD ]
Line_15 $$ idL = rs.getInt("id")-->Line_58 $$ stmt.setInt(2, idL)[ FD ]
Line_10 $$ int idL = 0, idT = 0-->Line_58 $$ stmt.setInt(2, idL)[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_59 $$ stmt.setInt(3, idT)[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_59 $$ stmt.setInt(3, idT)[ FD ]
Line_22 $$ idT = rs.getInt("id")-->Line_59 $$ stmt.setInt(3, idT)[ FD ]
Line_10 $$ int idL = 0, idT = 0-->Line_59 $$ stmt.setInt(3, idT)[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_60 $$ stmt.setString(4, id)[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_60 $$ stmt.setString(4, id)[ FD ]
Line_26 $$ String id = pictogramToAddPath.substring(pictogramToAddPath.lastIndexOf(File.separator) + 1, pictogramToAddPath.length())-->Line_60 $$ stmt.setString(4, id)[ FD ]
Line_42 $$ id = idTmp-->Line_60 $$ stmt.setString(4, id)[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_61 $$ stmt.setString(5, idOrig)[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_61 $$ stmt.setString(5, idOrig)[ FD ]
Line_27 $$ String idOrig = id-->Line_61 $$ stmt.setString(5, idOrig)[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_62 $$ stmt.executeUpdate()[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_62 $$ stmt.executeUpdate()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_63 $$ stmt.close()[ CD ]
Line_56 $$ PreparedStatement stmt = G.conn.prepareStatement("INSERT OR IGNORE INTO main (word, idL, idT, name, nameNN) VALUES (?,?,?,?,?)")-->Line_63 $$ stmt.close()[ FD ]
Line_7 $$ if (!dataBase.exists()) -->Line_64 $$ G.conn.close()[ CD ]
Line_38 $$ testFile = new File(pathDstTmp)-->Line_35 $$ while (testFile.exists()) [ FD ]
Line_36 $$ idTmp = id.substring(0, id.lastIndexOf('.')) + '_' + cont + id.substring(id.lastIndexOf('.'), id.length())-->Line_37 $$ pathDstTmp = pathDst + idTmp[ FD ]
