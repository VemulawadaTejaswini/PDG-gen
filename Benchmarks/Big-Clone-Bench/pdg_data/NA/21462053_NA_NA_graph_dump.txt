Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception [ CD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_3 $$ int nRows = 0[ CD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_4 $$ if (!publisher.getIsAdministrator()) [ CD ]
Line_4 $$ if (!publisher.getIsAdministrator()) -->Line_4 $$ if (!publisher.getIsAdministrator()) [ CD ]
Line_4 $$ if (!publisher.getIsAdministrator()) -->Line_4 $$ if (!publisher.getIsAdministrator()) [ CD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_4 $$ if (!publisher.getIsAdministrator()) [ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_7 $$ PreparedStatement st = null[ CD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_8 $$ ManagedConnection mc = returnConnection()[ CD ]
Line_8 $$ ManagedConnection mc = returnConnection()-->Line_8 $$ ManagedConnection mc = returnConnection()[ CD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_9 $$ Connection con = mc.getJdbcConnection()[ CD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_9 $$ Connection con = mc.getJdbcConnection()[ CD ]
Line_8 $$ ManagedConnection mc = returnConnection()-->Line_9 $$ Connection con = mc.getJdbcConnection()[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_10 $$ DatabaseMetaData dmt = con.getMetaData()[ CD ]
Line_10 $$ DatabaseMetaData dmt = con.getMetaData()-->Line_10 $$ DatabaseMetaData dmt = con.getMetaData()[ CD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_10 $$ DatabaseMetaData dmt = con.getMetaData()[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_11 $$ String database = dmt.getDatabaseProductName().toLowerCase()[ CD ]
Line_11 $$ String database = dmt.getDatabaseProductName().toLowerCase()-->Line_11 $$ String database = dmt.getDatabaseProductName().toLowerCase()[ CD ]
Line_10 $$ DatabaseMetaData dmt = con.getMetaData()-->Line_11 $$ String database = dmt.getDatabaseProductName().toLowerCase()[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_12 $$ boolean autoCommit = con.getAutoCommit()[ CD ]
Line_12 $$ boolean autoCommit = con.getAutoCommit()-->Line_12 $$ boolean autoCommit = con.getAutoCommit()[ CD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_12 $$ boolean autoCommit = con.getAutoCommit()[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_13 $$ con.setAutoCommit(false)[ CD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_13 $$ con.setAutoCommit(false)[ FD ]
Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)-->Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)[ CD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)[ FD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)[ FD ]
Line_11 $$ String database = dmt.getDatabaseProductName().toLowerCase()-->Line_18 $$ if (database.contains("mysql")) [ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_18 $$ if (database.contains("mysql")) [ CD ]
Line_11 $$ String database = dmt.getDatabaseProductName().toLowerCase()-->Line_18 $$ if (database.contains("mysql")) [ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_19 $$ sbData.append(" DELETE ").append(getResourceDataTableName()).append(" FROM ").append(getResourceDataTableName())[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_19 $$ sbData.append(" DELETE ").append(getResourceDataTableName()).append(" FROM ").append(getResourceDataTableName())[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_20 $$ sbData.append(" LEFT JOIN ").append(getResourceTableName())[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_20 $$ sbData.append(" LEFT JOIN ").append(getResourceTableName())[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_21 $$ sbData.append(" ON ").append(getResourceDataTableName()).append(".ID=").append(getResourceTableName()).append(".ID WHERE ").append(getResourceTableName()).append(".ID in (")[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_21 $$ sbData.append(" ON ").append(getResourceDataTableName()).append(".ID=").append(getResourceTableName()).append(".ID WHERE ").append(getResourceTableName()).append(".ID in (")[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_22 $$ sbData.append(" SELECT ID FROM ").append(getResourceTableName()).append(" ")[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_22 $$ sbData.append(" SELECT ID FROM ").append(getResourceTableName()).append(" ")[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_23 $$ if (sbWhere.length() > 0) [ CD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_23 $$ if (sbWhere.length() > 0) [ FD ]
Line_23 $$ if (sbWhere.length() > 0) -->Line_24 $$ sbData.append(" WHERE ").append(sbWhere.toString())[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_24 $$ sbData.append(" WHERE ").append(sbWhere.toString())[ FD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_24 $$ sbData.append(" WHERE ").append(sbWhere.toString())[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_26 $$ sbData.append(")")[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_26 $$ sbData.append(")")[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_28 $$ sbData.append(" DELETE FROM ").append(getResourceDataTableName())[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_28 $$ sbData.append(" DELETE FROM ").append(getResourceDataTableName())[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_29 $$ sbData.append(" WHERE ").append(getResourceDataTableName()).append(".ID in (")[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_29 $$ sbData.append(" WHERE ").append(getResourceDataTableName()).append(".ID in (")[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_30 $$ sbData.append(" SELECT ID FROM ").append(getResourceTableName()).append(" ")[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_30 $$ sbData.append(" SELECT ID FROM ").append(getResourceTableName()).append(" ")[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_31 $$ if (sbWhere.length() > 0) [ CD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_31 $$ if (sbWhere.length() > 0) [ FD ]
Line_31 $$ if (sbWhere.length() > 0) -->Line_32 $$ sbData.append(" WHERE ").append(sbWhere.toString())[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_32 $$ sbData.append(" WHERE ").append(sbWhere.toString())[ FD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_32 $$ sbData.append(" WHERE ").append(sbWhere.toString())[ FD ]
Line_18 $$ if (database.contains("mysql")) -->Line_34 $$ sbData.append(")")[ CD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_34 $$ sbData.append(")")[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_36 $$ st = con.prepareStatement(sbData.toString())[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_36 $$ st = con.prepareStatement(sbData.toString())[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_36 $$ st = con.prepareStatement(sbData.toString())[ CD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_36 $$ st = con.prepareStatement(sbData.toString())[ FD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_36 $$ st = con.prepareStatement(sbData.toString())[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_37 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_37 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_37 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)-->Line_37 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_17 $$ StringBuilder sbData = new StringBuilder()-->Line_38 $$ logExpression(sbData.toString())[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_39 $$ st.executeUpdate()[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_39 $$ st.executeUpdate()[ FD ]
Line_40 $$ StringBuilder sbSql = new StringBuilder()-->Line_41 $$ sbSql.append("DELETE FROM ").append(getResourceTableName()).append(" ")[ FD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_42 $$ if (sbWhere.length() > 0) [ FD ]
Line_42 $$ if (sbWhere.length() > 0) -->Line_43 $$ sbSql.append(" WHERE ").append(sbWhere.toString())[ CD ]
Line_40 $$ StringBuilder sbSql = new StringBuilder()-->Line_43 $$ sbSql.append(" WHERE ").append(sbWhere.toString())[ FD ]
Line_15 $$ StringBuilder sbWhere = new StringBuilder()-->Line_43 $$ sbSql.append(" WHERE ").append(sbWhere.toString())[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_45 $$ closeStatement(st)[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_45 $$ closeStatement(st)[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_46 $$ st = con.prepareStatement(sbSql.toString())[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_46 $$ st = con.prepareStatement(sbSql.toString())[ FD ]
Line_46 $$ st = con.prepareStatement(sbSql.toString())-->Line_46 $$ st = con.prepareStatement(sbSql.toString())[ FD ]
Line_46 $$ st = con.prepareStatement(sbSql.toString())-->Line_46 $$ st = con.prepareStatement(sbSql.toString())[ CD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_46 $$ st = con.prepareStatement(sbSql.toString())[ FD ]
Line_40 $$ StringBuilder sbSql = new StringBuilder()-->Line_46 $$ st = con.prepareStatement(sbSql.toString())[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_47 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_47 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_47 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_46 $$ st = con.prepareStatement(sbSql.toString())-->Line_47 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_16 $$ Map<String, Object> args = criteria.appendWherePhrase(null, sbWhere, publisher)-->Line_47 $$ criteria.applyArgs(st, 1, args)[ FD ]
Line_40 $$ StringBuilder sbSql = new StringBuilder()-->Line_48 $$ logExpression(sbSql.toString())[ FD ]
Line_3 $$ int nRows = 0-->Line_49 $$ nRows = st.executeUpdate()[ FD ]
Line_49 $$ nRows = st.executeUpdate()-->Line_49 $$ nRows = st.executeUpdate()[ FD ]
Line_49 $$ nRows = st.executeUpdate()-->Line_49 $$ nRows = st.executeUpdate()[ CD ]
Line_7 $$ PreparedStatement st = null-->Line_49 $$ nRows = st.executeUpdate()[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_49 $$ nRows = st.executeUpdate()[ FD ]
Line_46 $$ st = con.prepareStatement(sbSql.toString())-->Line_49 $$ nRows = st.executeUpdate()[ FD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_50 $$ con.commit()[ FD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_52 $$ con.rollback()[ FD ]
Line_7 $$ PreparedStatement st = null-->Line_55 $$ closeStatement(st)[ FD ]
Line_36 $$ st = con.prepareStatement(sbData.toString())-->Line_55 $$ closeStatement(st)[ FD ]
Line_46 $$ st = con.prepareStatement(sbSql.toString())-->Line_55 $$ closeStatement(st)[ FD ]
Line_9 $$ Connection con = mc.getJdbcConnection()-->Line_56 $$ con.setAutoCommit(autoCommit)[ FD ]
Line_12 $$ boolean autoCommit = con.getAutoCommit()-->Line_56 $$ con.setAutoCommit(autoCommit)[ FD ]
Line_2 $$ public int deleteRecord(Publisher publisher, MmdQueryCriteria criteria) throws Exception -->Line_58 $$ return nRows[ CD ]
