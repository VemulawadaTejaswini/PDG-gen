Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void loadFromInternet(boolean reload) [ CD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_3 $$ if (!reload && this.internetScoreGroupModel != null) [ CD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_3 $$ if (!reload && this.internetScoreGroupModel != null) [ FD ]
Line_3 $$ if (!reload && this.internetScoreGroupModel != null) -->Line_4 $$ return[ CD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_7 $$ ProgressBar settingProgressBar = (ProgressBar) this.activity.findViewById(R.id.settingProgressBar)[ CD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_8 $$ settingProgressBar.setVisibility(View.VISIBLE)[ CD ]
Line_7 $$ ProgressBar settingProgressBar = (ProgressBar) this.activity.findViewById(R.id.settingProgressBar)-->Line_8 $$ settingProgressBar.setVisibility(View.VISIBLE)[ FD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_9 $$ final Timer timer = new Timer()[ CD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_10 $$ final Handler handler = new Handler() [ CD ]
Line_10 $$ final Handler handler = new Handler() -->Line_12 $$ if (loadingFlag == false) [ CD ]
Line_12 $$ if (loadingFlag == false) -->Line_13 $$ ProgressBar settingProgressBar = (ProgressBar) BestScoreExpandableListAdapter.this.activity.findViewById(R.id.settingProgressBar)[ CD ]
Line_12 $$ if (loadingFlag == false) -->Line_14 $$ settingProgressBar.setVisibility(View.INVISIBLE)[ CD ]
Line_13 $$ ProgressBar settingProgressBar = (ProgressBar) BestScoreExpandableListAdapter.this.activity.findViewById(R.id.settingProgressBar)-->Line_14 $$ settingProgressBar.setVisibility(View.INVISIBLE)[ FD ]
Line_7 $$ ProgressBar settingProgressBar = (ProgressBar) this.activity.findViewById(R.id.settingProgressBar)-->Line_14 $$ settingProgressBar.setVisibility(View.INVISIBLE)[ FD ]
Line_12 $$ if (loadingFlag == false) -->Line_15 $$ timer.cancel()[ CD ]
Line_9 $$ final Timer timer = new Timer()-->Line_15 $$ timer.cancel()[ FD ]
Line_10 $$ final Handler handler = new Handler() -->Line_17 $$ super.handleMessage(msg)[ CD ]
Line_10 $$ final Handler handler = new Handler() -->Line_17 $$ super.handleMessage(msg)[ FD ]
Line_20 $$ final TimerTask task = new TimerTask() -->Line_22 $$ Message message = new Message()[ CD ]
Line_20 $$ final TimerTask task = new TimerTask() -->Line_23 $$ handler.sendMessage(message)[ CD ]
Line_10 $$ final Handler handler = new Handler() -->Line_23 $$ handler.sendMessage(message)[ FD ]
Line_22 $$ Message message = new Message()-->Line_23 $$ handler.sendMessage(message)[ FD ]
Line_2 $$ public void loadFromInternet(boolean reload) -->Line_26 $$ timer.schedule(task, 1, 50)[ CD ]
Line_9 $$ final Timer timer = new Timer()-->Line_26 $$ timer.schedule(task, 1, 50)[ FD ]
Line_32 $$ if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_33 $$ String entity = EntityUtils.toString(response.getEntity())[ CD ]
Line_32 $$ if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_34 $$ String[] itemArray = entity.split(";")[ CD ]
Line_32 $$ if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_35 $$ this.internetScoreGroupModel = new ScoreGroupModel()[ CD ]
Line_32 $$ if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ CD ]
Line_32 $$ if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) -->Line_32 $$ if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) [ CD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ CD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ CD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ FD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_37 $$ String[] itemValueArray = itemArray[i].split("\\|")[ CD ]
Line_37 $$ String[] itemValueArray = itemArray[i].split("\\|")-->Line_37 $$ String[] itemValueArray = itemArray[i].split("\\|")[ CD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_38 $$ if (itemValueArray.length != 3) [ CD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_41 $$ ScoreItemModel itemModel = new ScoreItemModel(itemValueArray[0], itemValueArray[1], itemValueArray[2])[ CD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_42 $$ this.internetScoreGroupModel.addItem(itemModel)[ CD ]
Line_41 $$ ScoreItemModel itemModel = new ScoreItemModel(itemValueArray[0], itemValueArray[1], itemValueArray[2])-->Line_42 $$ this.internetScoreGroupModel.addItem(itemModel)[ FD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ FD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ FD ]
Line_36 $$ for (int i = 0; i < itemArray.length; i++) -->Line_36 $$ for (int i = 0; i < itemArray.length; i++) [ FD ]
Line_41 $$ ScoreItemModel itemModel = new ScoreItemModel(itemValueArray[0], itemValueArray[1], itemValueArray[2])-->Line_42 $$ this.internetScoreGroupModel.addItem(itemModel)[ FD ]
