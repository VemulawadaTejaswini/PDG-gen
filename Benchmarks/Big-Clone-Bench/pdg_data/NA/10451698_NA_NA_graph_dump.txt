Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException [ CD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_3 $$ if (source.isDirectory()) [ CD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_3 $$ if (source.isDirectory()) [ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_3 $$ if (source.isDirectory()) [ CD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_3 $$ if (source.isDirectory()) [ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_4 $$ File newDir = new File(destinationDirectory, source.getName())[ CD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_4 $$ File newDir = new File(destinationDirectory, source.getName())[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_5 $$ newDir.mkdir()[ CD ]
Line_4 $$ File newDir = new File(destinationDirectory, source.getName())-->Line_5 $$ newDir.mkdir()[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_6 $$ File[] children = source.listFiles()[ CD ]
Line_6 $$ File[] children = source.listFiles()-->Line_6 $$ File[] children = source.listFiles()[ CD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_6 $$ File[] children = source.listFiles()[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_3 $$ if (source.isDirectory()) [ CD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_8 $$ if (children[i].getName().equals(".svn")) [ CD ]
Line_8 $$ if (children[i].getName().equals(".svn")) -->Line_8 $$ if (children[i].getName().equals(".svn")) [ CD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_11 $$ copy(children[i], newDir)[ CD ]
Line_4 $$ File newDir = new File(destinationDirectory, source.getName())-->Line_11 $$ copy(children[i], newDir)[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_14 $$ File newFile = new File(destinationDirectory, source.getName())[ CD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_14 $$ File newFile = new File(destinationDirectory, source.getName())[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_15 $$ if (newFile.exists() && source.lastModified() == newFile.lastModified()) [ CD ]
Line_14 $$ File newFile = new File(destinationDirectory, source.getName())-->Line_15 $$ if (newFile.exists() && source.lastModified() == newFile.lastModified()) [ FD ]
Line_2 $$ private void copy(File source, File destinationDirectory) throws IOException -->Line_15 $$ if (newFile.exists() && source.lastModified() == newFile.lastModified()) [ FD ]
Line_14 $$ File newFile = new File(destinationDirectory, source.getName())-->Line_15 $$ if (newFile.exists() && source.lastModified() == newFile.lastModified()) [ FD ]
Line_15 $$ if (newFile.exists() && source.lastModified() == newFile.lastModified()) -->Line_16 $$ return[ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_18 $$ FileOutputStream output = new FileOutputStream(newFile)[ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_19 $$ FileInputStream input = new FileInputStream(source)[ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_20 $$ byte[] buff = new byte[2048][ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_21 $$ int read = 0[ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_22 $$ while ((read = input.read(buff)) > 0) [ CD ]
Line_3 $$ if (source.isDirectory()) -->Line_3 $$ if (source.isDirectory()) [ CD ]
Line_22 $$ while ((read = input.read(buff)) > 0) -->Line_22 $$ while ((read = input.read(buff)) > 0) [ FD ]
Line_21 $$ int read = 0-->Line_22 $$ while ((read = input.read(buff)) > 0) [ FD ]
Line_22 $$ while ((read = input.read(buff)) > 0) -->Line_22 $$ while ((read = input.read(buff)) > 0) [ CD ]
Line_19 $$ FileInputStream input = new FileInputStream(source)-->Line_22 $$ while ((read = input.read(buff)) > 0) [ FD ]
Line_20 $$ byte[] buff = new byte[2048]-->Line_22 $$ while ((read = input.read(buff)) > 0) [ FD ]
Line_22 $$ while ((read = input.read(buff)) > 0) -->Line_23 $$ output.write(buff, 0, read)[ CD ]
Line_18 $$ FileOutputStream output = new FileOutputStream(newFile)-->Line_23 $$ output.write(buff, 0, read)[ FD ]
Line_20 $$ byte[] buff = new byte[2048]-->Line_23 $$ output.write(buff, 0, read)[ FD ]
Line_22 $$ while ((read = input.read(buff)) > 0) -->Line_23 $$ output.write(buff, 0, read)[ FD ]
Line_21 $$ int read = 0-->Line_23 $$ output.write(buff, 0, read)[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_25 $$ output.flush()[ CD ]
Line_18 $$ FileOutputStream output = new FileOutputStream(newFile)-->Line_25 $$ output.flush()[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_26 $$ output.close()[ CD ]
Line_18 $$ FileOutputStream output = new FileOutputStream(newFile)-->Line_26 $$ output.close()[ FD ]
Line_3 $$ if (source.isDirectory()) -->Line_27 $$ input.close()[ CD ]
Line_19 $$ FileInputStream input = new FileInputStream(source)-->Line_27 $$ input.close()[ FD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < children.length; i++) -->Line_7 $$ for (int i = 0; i < children.length; i++) [ FD ]
Line_22 $$ while ((read = input.read(buff)) > 0) -->Line_23 $$ output.write(buff, 0, read)[ FD ]
