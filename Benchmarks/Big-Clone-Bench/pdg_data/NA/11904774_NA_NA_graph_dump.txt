Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testFileSystem() throws IOException [ CD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_3 $$ Fragment f = Fragment.EMPTY[ CD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_4 $$ Fragment g = f.plus(System.getProperty("java.io.tmpdir"))[ CD ]
Line_4 $$ Fragment g = f.plus(System.getProperty("java.io.tmpdir"))-->Line_4 $$ Fragment g = f.plus(System.getProperty("java.io.tmpdir"))[ CD ]
Line_3 $$ Fragment f = Fragment.EMPTY-->Line_4 $$ Fragment g = f.plus(System.getProperty("java.io.tmpdir"))[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_5 $$ Fragment h = f.plus("april", "1971", "data.txt")[ CD ]
Line_5 $$ Fragment h = f.plus("april", "1971", "data.txt")-->Line_5 $$ Fragment h = f.plus("april", "1971", "data.txt")[ CD ]
Line_3 $$ Fragment f = Fragment.EMPTY-->Line_5 $$ Fragment h = f.plus("april", "1971", "data.txt")[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_6 $$ Fragment i = f.plus(g, h)[ CD ]
Line_6 $$ Fragment i = f.plus(g, h)-->Line_6 $$ Fragment i = f.plus(g, h)[ CD ]
Line_3 $$ Fragment f = Fragment.EMPTY-->Line_6 $$ Fragment i = f.plus(g, h)[ FD ]
Line_4 $$ Fragment g = f.plus(System.getProperty("java.io.tmpdir"))-->Line_6 $$ Fragment i = f.plus(g, h)[ FD ]
Line_5 $$ Fragment h = f.plus("april", "1971", "data.txt")-->Line_6 $$ Fragment i = f.plus(g, h)[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_7 $$ InOutLocation iol = locs.fs.plus(i)[ CD ]
Line_7 $$ InOutLocation iol = locs.fs.plus(i)-->Line_7 $$ InOutLocation iol = locs.fs.plus(i)[ CD ]
Line_6 $$ Fragment i = f.plus(g, h)-->Line_7 $$ InOutLocation iol = locs.fs.plus(i)[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_8 $$ PrintStream ps = new PrintStream(iol.openOutput())[ CD ]
Line_7 $$ InOutLocation iol = locs.fs.plus(i)-->Line_8 $$ PrintStream ps = new PrintStream(iol.openOutput())[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_9 $$ List<String> expected = new ArrayList<String>()[ CD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_10 $$ expected.add("So I am stepping out this old brown shoe")[ CD ]
Line_9 $$ List<String> expected = new ArrayList<String>()-->Line_10 $$ expected.add("So I am stepping out this old brown shoe")[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_11 $$ expected.add("Maybe I'm in love with you")[ CD ]
Line_9 $$ List<String> expected = new ArrayList<String>()-->Line_11 $$ expected.add("Maybe I'm in love with you")[ FD ]
Line_8 $$ PrintStream ps = new PrintStream(iol.openOutput())-->Line_12 $$ ps.println(s)[ FD ]
Line_12 $$ for (String s : expected) ps.println(s)-->Line_12 $$ ps.println(s)[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_13 $$ ps.close()[ CD ]
Line_8 $$ PrintStream ps = new PrintStream(iol.openOutput())-->Line_13 $$ ps.close()[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_14 $$ InLocation inRoot = locs.fs[ CD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())[ CD ]
Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())-->Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())[ CD ]
Line_14 $$ InLocation inRoot = locs.fs-->Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())[ FD ]
Line_6 $$ Fragment i = f.plus(g, h)-->Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_16 $$ assertEquals(expected, lst)[ CD ]
Line_9 $$ List<String> expected = new ArrayList<String>()-->Line_16 $$ assertEquals(expected, lst)[ FD ]
Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())-->Line_16 $$ assertEquals(expected, lst)[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_17 $$ URL url = iol.toUrl()[ CD ]
Line_17 $$ URL url = iol.toUrl()-->Line_17 $$ URL url = iol.toUrl()[ CD ]
Line_7 $$ InOutLocation iol = locs.fs.plus(i)-->Line_17 $$ URL url = iol.toUrl()[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_18 $$ lst = read(url.openStream())[ CD ]
Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())-->Line_18 $$ lst = read(url.openStream())[ FD ]
Line_18 $$ lst = read(url.openStream())-->Line_18 $$ lst = read(url.openStream())[ FD ]
Line_18 $$ lst = read(url.openStream())-->Line_18 $$ lst = read(url.openStream())[ CD ]
Line_17 $$ URL url = iol.toUrl()-->Line_18 $$ lst = read(url.openStream())[ FD ]
Line_2 $$ public void testFileSystem() throws IOException -->Line_19 $$ assertEquals(expected, lst)[ CD ]
Line_9 $$ List<String> expected = new ArrayList<String>()-->Line_19 $$ assertEquals(expected, lst)[ FD ]
Line_15 $$ List<String> lst = read(inRoot.plus(i).openInput())-->Line_19 $$ assertEquals(expected, lst)[ FD ]
Line_18 $$ lst = read(url.openStream())-->Line_19 $$ assertEquals(expected, lst)[ FD ]
