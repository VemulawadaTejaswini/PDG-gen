Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException [ CD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_3 $$ HttpGet httpget = new HttpGet(Constants.STRATEGICDOMINATION_URL + "/gameboard.cgi?gameid=" + 1687)[ CD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_4 $$ HttpResponse response = httpclient.execute(httpget)[ CD ]
Line_4 $$ HttpResponse response = httpclient.execute(httpget)-->Line_4 $$ HttpResponse response = httpclient.execute(httpget)[ CD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_4 $$ HttpResponse response = httpclient.execute(httpget)[ FD ]
Line_3 $$ HttpGet httpget = new HttpGet(Constants.STRATEGICDOMINATION_URL + "/gameboard.cgi?gameid=" + 1687)-->Line_4 $$ HttpResponse response = httpclient.execute(httpget)[ FD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_5 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_5 $$ HttpEntity entity = response.getEntity()-->Line_5 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_4 $$ HttpResponse response = httpclient.execute(httpget)-->Line_5 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_6 $$ System.out.println("cg form get: " + response.getStatusLine())[ CD ]
Line_4 $$ HttpResponse response = httpclient.execute(httpget)-->Line_6 $$ System.out.println("cg form get: " + response.getStatusLine())[ FD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_7 $$ if (entity != null) [ CD ]
Line_5 $$ HttpEntity entity = response.getEntity()-->Line_7 $$ if (entity != null) [ FD ]
Line_7 $$ if (entity != null) -->Line_8 $$ InputStream inStream = entity.getContent()[ CD ]
Line_8 $$ InputStream inStream = entity.getContent()-->Line_8 $$ InputStream inStream = entity.getContent()[ CD ]
Line_5 $$ HttpEntity entity = response.getEntity()-->Line_8 $$ InputStream inStream = entity.getContent()[ FD ]
Line_7 $$ if (entity != null) -->Line_9 $$ IOUtils.copy(inStream, System.out)[ CD ]
Line_8 $$ InputStream inStream = entity.getContent()-->Line_9 $$ IOUtils.copy(inStream, System.out)[ FD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_11 $$ System.out.println("cg set of cookies:")[ CD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()[ CD ]
Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()-->Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()[ CD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()[ FD ]
Line_2 $$ private void chooseGame(DefaultHttpClient httpclient) throws IOException, ClientProtocolException -->Line_13 $$ if (cookies.isEmpty()) [ CD ]
Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()-->Line_13 $$ if (cookies.isEmpty()) [ FD ]
Line_13 $$ if (cookies.isEmpty()) -->Line_13 $$ if (cookies.isEmpty()) [ CD ]
Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()-->Line_13 $$ if (cookies.isEmpty()) [ FD ]
Line_13 $$ if (cookies.isEmpty()) -->Line_14 $$ System.out.println("None")[ CD ]
Line_13 $$ if (cookies.isEmpty()) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ CD ]
Line_13 $$ if (cookies.isEmpty()) -->Line_13 $$ if (cookies.isEmpty()) [ CD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ CD ]
Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()-->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ CD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ CD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_17 $$ System.out.println("- " + cookies.get(i).toString())[ CD ]
Line_12 $$ List<Cookie> cookies = httpclient.getCookieStore().getCookies()-->Line_17 $$ System.out.println("- " + cookies.get(i).toString())[ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_17 $$ System.out.println("- " + cookies.get(i).toString())[ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_16 $$ for (int i = 0; i < cookies.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < cookies.size(); i++) -->Line_17 $$ System.out.println("- " + cookies.get(i).toString())[ FD ]
