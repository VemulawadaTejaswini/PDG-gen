Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean cpy(File a, File b) [ CD ]
Line_4 $$ FileInputStream astream = null-->Line_7 $$ astream = new FileInputStream(a)[ FD ]
Line_7 $$ astream = new FileInputStream(a)-->Line_7 $$ astream = new FileInputStream(a)[ FD ]
Line_5 $$ FileOutputStream bstream = null-->Line_8 $$ bstream = new FileOutputStream(b)[ FD ]
Line_8 $$ bstream = new FileOutputStream(b)-->Line_8 $$ bstream = new FileOutputStream(b)[ FD ]
Line_9 $$ long flength = a.length()-->Line_9 $$ long flength = a.length()[ CD ]
Line_2 $$ public static boolean cpy(File a, File b) -->Line_9 $$ long flength = a.length()[ FD ]
Line_9 $$ long flength = a.length()-->Line_10 $$ int bufsize = (int) Math.min(flength, 1024)[ FD ]
Line_12 $$ long n = 0-->Line_13 $$ while (n < flength) [ FD ]
Line_9 $$ long flength = a.length()-->Line_13 $$ while (n < flength) [ FD ]
Line_13 $$ while (n < flength) -->Line_14 $$ int naread = astream.read(buf)[ CD ]
Line_14 $$ int naread = astream.read(buf)-->Line_14 $$ int naread = astream.read(buf)[ CD ]
Line_4 $$ FileInputStream astream = null-->Line_14 $$ int naread = astream.read(buf)[ FD ]
Line_7 $$ astream = new FileInputStream(a)-->Line_14 $$ int naread = astream.read(buf)[ FD ]
Line_13 $$ while (n < flength) -->Line_15 $$ bstream.write(buf, 0, naread)[ CD ]
Line_5 $$ FileOutputStream bstream = null-->Line_15 $$ bstream.write(buf, 0, naread)[ FD ]
Line_8 $$ bstream = new FileOutputStream(b)-->Line_15 $$ bstream.write(buf, 0, naread)[ FD ]
Line_14 $$ int naread = astream.read(buf)-->Line_15 $$ bstream.write(buf, 0, naread)[ FD ]
Line_13 $$ while (n < flength) -->Line_16 $$ n += naread[ CD ]
Line_16 $$ n += naread-->Line_16 $$ n += naread[ FD ]
Line_12 $$ long n = 0-->Line_16 $$ n += naread[ FD ]
Line_14 $$ int naread = astream.read(buf)-->Line_16 $$ n += naread[ FD ]
Line_4 $$ FileInputStream astream = null-->Line_19 $$ if (astream != null)[ FD ]
Line_7 $$ astream = new FileInputStream(a)-->Line_19 $$ if (astream != null)[ FD ]
Line_19 $$ if (astream != null)-->Line_19 $$ astream.close()[ CD ]
Line_4 $$ FileInputStream astream = null-->Line_19 $$ astream.close()[ FD ]
Line_7 $$ astream = new FileInputStream(a)-->Line_19 $$ astream.close()[ FD ]
Line_5 $$ FileOutputStream bstream = null-->Line_20 $$ if (bstream != null)[ FD ]
Line_8 $$ bstream = new FileOutputStream(b)-->Line_20 $$ if (bstream != null)[ FD ]
Line_20 $$ if (bstream != null)-->Line_20 $$ bstream.close()[ CD ]
Line_5 $$ FileOutputStream bstream = null-->Line_20 $$ bstream.close()[ FD ]
Line_8 $$ bstream = new FileOutputStream(b)-->Line_20 $$ bstream.close()[ FD ]
Line_2 $$ public static boolean cpy(File a, File b) -->Line_26 $$ return true[ CD ]
Line_16 $$ n += naread-->Line_13 $$ while (n < flength) [ FD ]
Line_16 $$ n += naread-->Line_13 $$ while (n < flength) [ FD ]
Line_14 $$ int naread = astream.read(buf)-->Line_15 $$ bstream.write(buf, 0, naread)[ FD ]
Line_14 $$ int naread = astream.read(buf)-->Line_16 $$ n += naread[ FD ]
