Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException [ CD ]
Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException -->Line_3 $$ long fileSize = src.length()[ CD ]
Line_3 $$ long fileSize = src.length()-->Line_3 $$ long fileSize = src.length()[ CD ]
Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException -->Line_3 $$ long fileSize = src.length()[ FD ]
Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException -->Line_4 $$ final FileInputStream fis = new FileInputStream(src)[ CD ]
Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException -->Line_5 $$ final FileOutputStream fos = new FileOutputStream(dst)[ CD ]
Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException -->Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()[ CD ]
Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()-->Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()[ CD ]
Line_4 $$ final FileInputStream fis = new FileInputStream(src)-->Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()[ FD ]
Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()-->Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()[ CD ]
Line_5 $$ final FileOutputStream fos = new FileOutputStream(dst)-->Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()[ FD ]
Line_9 $$ final long copyCnt = Math.min(65536, fileSize)-->Line_9 $$ final long copyCnt = Math.min(65536, fileSize)[ CD ]
Line_3 $$ long fileSize = src.length()-->Line_9 $$ final long copyCnt = Math.min(65536, fileSize)[ FD ]
Line_3 $$ long fileSize = src.length()-->Line_10 $$ do [ FD ]
Line_10 $$ do -->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ CD ]
Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_8 $$ long offs = 0, doneCnt = 0-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ CD ]
Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_8 $$ long offs = 0, doneCnt = 0-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_9 $$ final long copyCnt = Math.min(65536, fileSize)-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_10 $$ do -->Line_12 $$ offs += doneCnt[ CD ]
Line_12 $$ offs += doneCnt-->Line_12 $$ offs += doneCnt[ FD ]
Line_8 $$ long offs = 0, doneCnt = 0-->Line_12 $$ offs += doneCnt[ FD ]
Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)-->Line_12 $$ offs += doneCnt[ FD ]
Line_8 $$ long offs = 0, doneCnt = 0-->Line_12 $$ offs += doneCnt[ FD ]
Line_10 $$ do -->Line_13 $$ fileSize -= doneCnt[ CD ]
Line_13 $$ fileSize -= doneCnt-->Line_13 $$ fileSize -= doneCnt[ FD ]
Line_3 $$ long fileSize = src.length()-->Line_13 $$ fileSize -= doneCnt[ FD ]
Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)-->Line_13 $$ fileSize -= doneCnt[ FD ]
Line_8 $$ long offs = 0, doneCnt = 0-->Line_13 $$ fileSize -= doneCnt[ FD ]
Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()-->Line_17 $$ in.close()[ FD ]
Line_6 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel()-->Line_21 $$ out.close()[ FD ]
Line_4 $$ final FileInputStream fis = new FileInputStream(src)-->Line_25 $$ fis.close()[ FD ]
Line_5 $$ final FileOutputStream fos = new FileOutputStream(dst)-->Line_29 $$ fos.close()[ FD ]
Line_2 $$ public static void copy(final File src, final File dst) throws IOException, IllegalArgumentException -->Line_32 $$ src.delete()[ FD ]
Line_13 $$ fileSize -= doneCnt-->Line_10 $$ do [ FD ]
Line_13 $$ fileSize -= doneCnt-->Line_10 $$ do [ FD ]
Line_12 $$ offs += doneCnt-->Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)[ FD ]
Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)-->Line_12 $$ offs += doneCnt[ FD ]
Line_11 $$ doneCnt = in.transferTo(offs, copyCnt, out)-->Line_13 $$ fileSize -= doneCnt[ FD ]
