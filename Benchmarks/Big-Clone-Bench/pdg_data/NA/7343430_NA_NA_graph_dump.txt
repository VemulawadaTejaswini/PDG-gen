Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException [ CD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())[ CD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())[ CD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_4 $$ Log.info("CCNFileProxy: extracted request for file: " + fileToWrite.getAbsolutePath() + " exists? ", fileToWrite.exists())[ CD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_4 $$ Log.info("CCNFileProxy: extracted request for file: " + fileToWrite.getAbsolutePath() + " exists? ", fileToWrite.exists())[ FD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_4 $$ Log.info("CCNFileProxy: extracted request for file: " + fileToWrite.getAbsolutePath() + " exists? ", fileToWrite.exists())[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_5 $$ if (!fileToWrite.exists()) [ CD ]
Line_5 $$ if (!fileToWrite.exists()) -->Line_5 $$ if (!fileToWrite.exists()) [ CD ]
Line_5 $$ if (!fileToWrite.exists()) -->Line_5 $$ if (!fileToWrite.exists()) [ CD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_5 $$ if (!fileToWrite.exists()) [ FD ]
Line_5 $$ if (!fileToWrite.exists()) -->Line_6 $$ Log.warning("File [ CD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_6 $$ Log.warning("File [ FD ]
Line_5 $$ if (!fileToWrite.exists()) -->Line_7 $$ return false[ CD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_9 $$ FileInputStream fis = null[ CD ]
Line_9 $$ FileInputStream fis = null-->Line_11 $$ fis = new FileInputStream(fileToWrite)[ FD ]
Line_11 $$ fis = new FileInputStream(fileToWrite)-->Line_11 $$ fis = new FileInputStream(fileToWrite)[ FD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_13 $$ Log.warning("Unexpected: file we expected to exist doesn't exist: [ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_16 $$ CCNTime modificationTime = new CCNTime(fileToWrite.lastModified())[ CD ]
Line_3 $$ File fileToWrite = ccnNameToFilePath(outstandingInterest.name())-->Line_16 $$ CCNTime modificationTime = new CCNTime(fileToWrite.lastModified())[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_17 $$ ContentName versionedName = VersioningProfile.addVersion(new ContentName(_prefix, outstandingInterest.name().postfix(_prefix).components()), modificationTime)[ CD ]
Line_17 $$ ContentName versionedName = VersioningProfile.addVersion(new ContentName(_prefix, outstandingInterest.name().postfix(_prefix).components()), modificationTime)-->Line_17 $$ ContentName versionedName = VersioningProfile.addVersion(new ContentName(_prefix, outstandingInterest.name().postfix(_prefix).components()), modificationTime)[ CD ]
Line_16 $$ CCNTime modificationTime = new CCNTime(fileToWrite.lastModified())-->Line_17 $$ ContentName versionedName = VersioningProfile.addVersion(new ContentName(_prefix, outstandingInterest.name().postfix(_prefix).components()), modificationTime)[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_17 $$ ContentName versionedName = VersioningProfile.addVersion(new ContentName(_prefix, outstandingInterest.name().postfix(_prefix).components()), modificationTime)[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_18 $$ CCNFileOutputStream ccnout = new CCNFileOutputStream(versionedName, _handle)[ CD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_19 $$ ccnout.addOutstandingInterest(outstandingInterest)[ CD ]
Line_18 $$ CCNFileOutputStream ccnout = new CCNFileOutputStream(versionedName, _handle)-->Line_19 $$ ccnout.addOutstandingInterest(outstandingInterest)[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_19 $$ ccnout.addOutstandingInterest(outstandingInterest)[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_20 $$ byte[] buffer = new byte[BUF_SIZE][ CD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_21 $$ int read = fis.read(buffer)[ CD ]
Line_21 $$ int read = fis.read(buffer)-->Line_21 $$ int read = fis.read(buffer)[ CD ]
Line_9 $$ FileInputStream fis = null-->Line_21 $$ int read = fis.read(buffer)[ FD ]
Line_11 $$ fis = new FileInputStream(fileToWrite)-->Line_21 $$ int read = fis.read(buffer)[ FD ]
Line_20 $$ byte[] buffer = new byte[BUF_SIZE]-->Line_21 $$ int read = fis.read(buffer)[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_22 $$ while (read >= 0) [ CD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException [ CD ]
Line_21 $$ int read = fis.read(buffer)-->Line_22 $$ while (read >= 0) [ FD ]
Line_22 $$ while (read >= 0) -->Line_23 $$ ccnout.write(buffer, 0, read)[ CD ]
Line_18 $$ CCNFileOutputStream ccnout = new CCNFileOutputStream(versionedName, _handle)-->Line_23 $$ ccnout.write(buffer, 0, read)[ FD ]
Line_20 $$ byte[] buffer = new byte[BUF_SIZE]-->Line_23 $$ ccnout.write(buffer, 0, read)[ FD ]
Line_21 $$ int read = fis.read(buffer)-->Line_23 $$ ccnout.write(buffer, 0, read)[ FD ]
Line_22 $$ while (read >= 0) -->Line_24 $$ read = fis.read(buffer)[ CD ]
Line_24 $$ read = fis.read(buffer)-->Line_24 $$ read = fis.read(buffer)[ FD ]
Line_21 $$ int read = fis.read(buffer)-->Line_24 $$ read = fis.read(buffer)[ FD ]
Line_24 $$ read = fis.read(buffer)-->Line_24 $$ read = fis.read(buffer)[ CD ]
Line_9 $$ FileInputStream fis = null-->Line_24 $$ read = fis.read(buffer)[ FD ]
Line_11 $$ fis = new FileInputStream(fileToWrite)-->Line_24 $$ read = fis.read(buffer)[ FD ]
Line_20 $$ byte[] buffer = new byte[BUF_SIZE]-->Line_24 $$ read = fis.read(buffer)[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_26 $$ fis.close()[ CD ]
Line_9 $$ FileInputStream fis = null-->Line_26 $$ fis.close()[ FD ]
Line_11 $$ fis = new FileInputStream(fileToWrite)-->Line_26 $$ fis.close()[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_27 $$ ccnout.close()[ CD ]
Line_18 $$ CCNFileOutputStream ccnout = new CCNFileOutputStream(versionedName, _handle)-->Line_27 $$ ccnout.close()[ FD ]
Line_2 $$ protected boolean writeFile(Interest outstandingInterest) throws IOException -->Line_28 $$ return true[ CD ]
Line_24 $$ read = fis.read(buffer)-->Line_22 $$ while (read >= 0) [ FD ]
Line_24 $$ read = fis.read(buffer)-->Line_22 $$ while (read >= 0) [ FD ]
Line_24 $$ read = fis.read(buffer)-->Line_23 $$ ccnout.write(buffer, 0, read)[ FD ]
