Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static QDataSet test3_binary() throws IOException, StreamException [ CD ]
Line_2 $$ private static QDataSet test3_binary() throws IOException, StreamException -->Line_3 $$ URL url = TestQDataSetStreamHandler.class.getResource("test3.binary.qds")[ CD ]
Line_3 $$ URL url = TestQDataSetStreamHandler.class.getResource("test3.binary.qds")-->Line_3 $$ URL url = TestQDataSetStreamHandler.class.getResource("test3.binary.qds")[ CD ]
Line_2 $$ private static QDataSet test3_binary() throws IOException, StreamException -->Line_4 $$ QDataSetStreamHandler handler = new QDataSetStreamHandler()[ CD ]
Line_2 $$ private static QDataSet test3_binary() throws IOException, StreamException -->Line_5 $$ StreamTool.readStream(Channels.newChannel(url.openStream()), handler)[ CD ]
Line_4 $$ QDataSetStreamHandler handler = new QDataSetStreamHandler()-->Line_5 $$ StreamTool.readStream(Channels.newChannel(url.openStream()), handler)[ FD ]
Line_3 $$ URL url = TestQDataSetStreamHandler.class.getResource("test3.binary.qds")-->Line_5 $$ StreamTool.readStream(Channels.newChannel(url.openStream()), handler)[ FD ]
Line_2 $$ private static QDataSet test3_binary() throws IOException, StreamException -->Line_6 $$ QDataSet qds = handler.getDataSet()[ CD ]
Line_6 $$ QDataSet qds = handler.getDataSet()-->Line_6 $$ QDataSet qds = handler.getDataSet()[ CD ]
Line_4 $$ QDataSetStreamHandler handler = new QDataSetStreamHandler()-->Line_6 $$ QDataSet qds = handler.getDataSet()[ FD ]
Line_2 $$ private static QDataSet test3_binary() throws IOException, StreamException -->Line_7 $$ return qds[ CD ]
