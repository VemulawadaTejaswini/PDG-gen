Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String downloadToSdCard(String localFileName, String suffixFromHeader, String extension) [ CD ]
Line_2 $$ public String downloadToSdCard(String localFileName, String suffixFromHeader, String extension) -->Line_3 $$ InputStream in = null[ CD ]
Line_2 $$ public String downloadToSdCard(String localFileName, String suffixFromHeader, String extension) -->Line_4 $$ FileOutputStream fos = null[ CD ]
Line_2 $$ public String downloadToSdCard(String localFileName, String suffixFromHeader, String extension) -->Line_5 $$ String absolutePath = null[ CD ]
Line_8 $$ StreamAndHeader inAndHeader = HTTPUtils.openWithHeader(url, suffixFromHeader)-->Line_8 $$ StreamAndHeader inAndHeader = HTTPUtils.openWithHeader(url, suffixFromHeader)[ CD ]
Line_2 $$ public String downloadToSdCard(String localFileName, String suffixFromHeader, String extension) -->Line_8 $$ StreamAndHeader inAndHeader = HTTPUtils.openWithHeader(url, suffixFromHeader)[ FD ]
Line_9 $$ if (inAndHeader == null || inAndHeader.mStream == null) -->Line_10 $$ return null[ CD ]
Line_3 $$ InputStream in = null-->Line_12 $$ in = inAndHeader.mStream[ FD ]
Line_12 $$ in = inAndHeader.mStream-->Line_12 $$ in = inAndHeader.mStream[ FD ]
Line_13 $$ String sdcardpath = android.os.Environment.getExternalStorageDirectory().getAbsolutePath()-->Line_13 $$ String sdcardpath = android.os.Environment.getExternalStorageDirectory().getAbsolutePath()[ CD ]
Line_14 $$ String headerValue = suffixFromHeader == null || inAndHeader.mHeaderValue == null ? "" : inAndHeader.mHeaderValue-->Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")[ FD ]
Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")-->Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")[ FD ]
Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")-->Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")[ CD ]
Line_14 $$ String headerValue = suffixFromHeader == null || inAndHeader.mHeaderValue == null ? "" : inAndHeader.mHeaderValue-->Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")[ FD ]
Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")-->Line_15 $$ headerValue = headerValue.replaceAll("[-:]*\\s*", "")[ FD ]
Line_3 $$ InputStream in = null-->Line_17 $$ mSize = in.available()[ FD ]
Line_12 $$ in = inAndHeader.mStream-->Line_17 $$ mSize = in.available()[ FD ]
Line_4 $$ FileOutputStream fos = null-->Line_19 $$ fos = new FileOutputStream(new File(filename))[ FD ]
Line_19 $$ fos = new FileOutputStream(new File(filename))-->Line_19 $$ fos = new FileOutputStream(new File(filename))[ FD ]
Line_22 $$ int readsize = buffersize-->Line_24 $$ while (readsize != -1) [ FD ]
Line_24 $$ while (readsize != -1) -->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ CD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ FD ]
Line_22 $$ int readsize = buffersize-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ FD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ CD ]
Line_3 $$ InputStream in = null-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ FD ]
Line_12 $$ in = inAndHeader.mStream-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ FD ]
Line_21 $$ byte[] buffer = new byte[buffersize]-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ FD ]
Line_20 $$ int buffersize = 1024-->Line_25 $$ readsize = in.read(buffer, 0, buffersize)[ FD ]
Line_24 $$ while (readsize != -1) -->Line_26 $$ if (readsize > 0) [ CD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_26 $$ if (readsize > 0) [ FD ]
Line_22 $$ int readsize = buffersize-->Line_26 $$ if (readsize > 0) [ FD ]
Line_26 $$ if (readsize > 0) -->Line_27 $$ Log.i(TAG, "Read " + readsize + " bytes...")[ CD ]
Line_26 $$ if (readsize > 0) -->Line_28 $$ fos.write(buffer, 0, readsize)[ CD ]
Line_4 $$ FileOutputStream fos = null-->Line_28 $$ fos.write(buffer, 0, readsize)[ FD ]
Line_19 $$ fos = new FileOutputStream(new File(filename))-->Line_28 $$ fos.write(buffer, 0, readsize)[ FD ]
Line_21 $$ byte[] buffer = new byte[buffersize]-->Line_28 $$ fos.write(buffer, 0, readsize)[ FD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_28 $$ fos.write(buffer, 0, readsize)[ FD ]
Line_22 $$ int readsize = buffersize-->Line_28 $$ fos.write(buffer, 0, readsize)[ FD ]
Line_4 $$ FileOutputStream fos = null-->Line_32 $$ fos.flush()[ FD ]
Line_19 $$ fos = new FileOutputStream(new File(filename))-->Line_32 $$ fos.flush()[ FD ]
Line_4 $$ FileOutputStream fos = null-->Line_33 $$ fos.close()[ FD ]
Line_19 $$ fos = new FileOutputStream(new File(filename))-->Line_33 $$ fos.close()[ FD ]
Line_34 $$ FileInputStream controlIn = new FileInputStream(filename)-->Line_35 $$ mSavedSize = controlIn.available()[ FD ]
Line_3 $$ InputStream in = null-->Line_42 $$ HTTPUtils.close(in)[ FD ]
Line_12 $$ in = inAndHeader.mStream-->Line_42 $$ HTTPUtils.close(in)[ FD ]
Line_2 $$ public String downloadToSdCard(String localFileName, String suffixFromHeader, String extension) -->Line_44 $$ return mAbsolutePath[ CD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_24 $$ while (readsize != -1) [ FD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_24 $$ while (readsize != -1) [ FD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_26 $$ if (readsize > 0) [ FD ]
Line_25 $$ readsize = in.read(buffer, 0, buffersize)-->Line_28 $$ fos.write(buffer, 0, readsize)[ FD ]
