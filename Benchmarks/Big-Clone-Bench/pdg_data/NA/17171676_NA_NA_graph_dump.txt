Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException [ CD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()[ CD ]
Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()-->Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()[ CD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()[ FD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_4 $$ if (messageBufferPolicy == null) [ CD ]
Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()-->Line_4 $$ if (messageBufferPolicy == null) [ FD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_7 $$ MessageBufferUtil msgBufferUtilObj = new MessageBufferUtil(solutionName, TokenConstants.getSimpleAuthAuthenticationType())[ CD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_8 $$ String requestUri = msgBufferUtilObj.getRequestUri()[ CD ]
Line_8 $$ String requestUri = msgBufferUtilObj.getRequestUri()-->Line_8 $$ String requestUri = msgBufferUtilObj.getRequestUri()[ CD ]
Line_7 $$ MessageBufferUtil msgBufferUtilObj = new MessageBufferUtil(solutionName, TokenConstants.getSimpleAuthAuthenticationType())-->Line_8 $$ String requestUri = msgBufferUtilObj.getRequestUri()[ FD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)[ CD ]
Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)-->Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)[ CD ]
Line_7 $$ MessageBufferUtil msgBufferUtilObj = new MessageBufferUtil(solutionName, TokenConstants.getSimpleAuthAuthenticationType())-->Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)[ FD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)[ FD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_10 $$ if (messageBufferUri == null) [ CD ]
Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)-->Line_10 $$ if (messageBufferUri == null) [ FD ]
Line_2 $$ public void createMessageBuffer(String messageBufferName, MessageBufferPolicy messageBufferPolicyObj) throws AppFabricException -->Line_13 $$ String authorizationToken = ""[ CD ]
Line_13 $$ String authorizationToken = ""-->Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)[ FD ]
Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)-->Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)[ FD ]
Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)-->Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)[ CD ]
Line_15 $$ ACSTokenProvider tp = new ACSTokenProvider(httpWebProxyServer_, httpWebProxyPort_, this.credentials)-->Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)[ FD ]
Line_8 $$ String requestUri = msgBufferUtilObj.getRequestUri()-->Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)[ FD ]
Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)-->Line_16 $$ authorizationToken = tp.getACSToken(requestUri, messageBufferUri)[ FD ]
Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)-->Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")[ FD ]
Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")-->Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")[ FD ]
Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")-->Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")[ CD ]
Line_9 $$ String messageBufferUri = msgBufferUtilObj.getCreateMessageBufferUri(messageBufferName)-->Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")[ FD ]
Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")-->Line_23 $$ messageBufferUri = messageBufferUri.replaceAll("http", "https")[ FD ]
Line_26 $$ if (httpWebProxy_ != null)-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)[ CD ]
Line_25 $$ HttpURLConnection connection-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)[ FD ]
Line_24 $$ URL urlConn = new URL(messageBufferUri)-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)[ FD ]
Line_26 $$ if (httpWebProxy_ != null)-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()[ CD ]
Line_25 $$ HttpURLConnection connection-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()[ FD ]
Line_24 $$ URL urlConn = new URL(messageBufferUri)-->Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_27 $$ connection.setRequestMethod("PUT")[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_27 $$ connection.setRequestMethod("PUT")[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_27 $$ connection.setRequestMethod("PUT")[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_28 $$ connection.setRequestProperty("Content-type", MessageBufferConstants.getCONTENT_TYPE_PROPERTY_FOR_ATOM_XML())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_28 $$ connection.setRequestProperty("Content-type", MessageBufferConstants.getCONTENT_TYPE_PROPERTY_FOR_ATOM_XML())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_28 $$ connection.setRequestProperty("Content-type", MessageBufferConstants.getCONTENT_TYPE_PROPERTY_FOR_ATOM_XML())[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_29 $$ connection.setRequestProperty("Content-Length", "" + messageBufferPolicy.length())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_29 $$ connection.setRequestProperty("Content-Length", "" + messageBufferPolicy.length())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_29 $$ connection.setRequestProperty("Content-Length", "" + messageBufferPolicy.length())[ FD ]
Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()-->Line_29 $$ connection.setRequestProperty("Content-Length", "" + messageBufferPolicy.length())[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_31 $$ connection.setRequestProperty("Authorization", authStr)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_31 $$ connection.setRequestProperty("Authorization", authStr)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_31 $$ connection.setRequestProperty("Authorization", authStr)[ FD ]
Line_30 $$ String authStr = TokenConstants.getWrapAuthenticationType() + " " + TokenConstants.getWrapAuthorizationHeaderKey() + "=\"" + authorizationToken + "\""-->Line_31 $$ connection.setRequestProperty("Authorization", authStr)[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_32 $$ connection.setRequestProperty("Expect", "100-continue")[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_32 $$ connection.setRequestProperty("Expect", "100-continue")[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_32 $$ connection.setRequestProperty("Expect", "100-continue")[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_33 $$ connection.setUseCaches(false)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_33 $$ connection.setUseCaches(false)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_33 $$ connection.setUseCaches(false)[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_34 $$ connection.setDoInput(true)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_34 $$ connection.setDoInput(true)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_34 $$ connection.setDoInput(true)[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_35 $$ connection.setDoOutput(true)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_35 $$ connection.setDoOutput(true)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_35 $$ connection.setDoOutput(true)[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_36 $$ DataOutputStream wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_36 $$ DataOutputStream wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_36 $$ DataOutputStream wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_36 $$ DataOutputStream wr = new DataOutputStream(connection.getOutputStream())-->Line_37 $$ wr.writeBytes(messageBufferPolicy)[ FD ]
Line_3 $$ String messageBufferPolicy = messageBufferPolicyObj.getMessageBufferPolicy()-->Line_37 $$ wr.writeBytes(messageBufferPolicy)[ FD ]
Line_36 $$ DataOutputStream wr = new DataOutputStream(connection.getOutputStream())-->Line_38 $$ wr.flush()[ FD ]
Line_36 $$ DataOutputStream wr = new DataOutputStream(connection.getOutputStream())-->Line_39 $$ wr.close()[ FD ]
Line_40 $$ if (LoggerUtil.getIsLoggingOn())-->Line_40 $$ if (LoggerUtil.getIsLoggingOn())[ CD ]
Line_40 $$ if (LoggerUtil.getIsLoggingOn())-->Line_40 $$ SDKLoggerHelper.logRequest(connection, SDKLoggerHelper.RecordType.CreateMessageBuffer_REQUEST)[ CD ]
Line_25 $$ HttpURLConnection connection-->Line_40 $$ SDKLoggerHelper.logRequest(connection, SDKLoggerHelper.RecordType.CreateMessageBuffer_REQUEST)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_40 $$ SDKLoggerHelper.logRequest(connection, SDKLoggerHelper.RecordType.CreateMessageBuffer_REQUEST)[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_40 $$ SDKLoggerHelper.logRequest(connection, SDKLoggerHelper.RecordType.CreateMessageBuffer_REQUEST)[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_41 $$ String responseCode = "<responseCode>" + connection.getResponseCode() + "</responseCode>"[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_41 $$ String responseCode = "<responseCode>" + connection.getResponseCode() + "</responseCode>"[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_41 $$ String responseCode = "<responseCode>" + connection.getResponseCode() + "</responseCode>"[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_25 $$ HttpURLConnection connection-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_25 $$ HttpURLConnection connection-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ FD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_43 $$ InputStream is = connection.getInputStream()[ CD ]
Line_43 $$ InputStream is = connection.getInputStream()-->Line_43 $$ InputStream is = connection.getInputStream()[ CD ]
Line_25 $$ HttpURLConnection connection-->Line_43 $$ InputStream is = connection.getInputStream()[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_43 $$ InputStream is = connection.getInputStream()[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_43 $$ InputStream is = connection.getInputStream()[ FD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_44 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is))[ CD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_45 $$ String line[ CD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_46 $$ StringBuffer response = new StringBuffer()[ CD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_47 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) [ CD ]
Line_47 $$ while ((line = rd.readLine()) != null) -->Line_47 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_45 $$ String line-->Line_47 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_47 $$ while ((line = rd.readLine()) != null) -->Line_47 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_44 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is))-->Line_47 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_47 $$ while ((line = rd.readLine()) != null) -->Line_48 $$ response.append(line)[ CD ]
Line_46 $$ StringBuffer response = new StringBuffer()-->Line_48 $$ response.append(line)[ FD ]
Line_47 $$ while ((line = rd.readLine()) != null) -->Line_48 $$ response.append(line)[ FD ]
Line_45 $$ String line-->Line_48 $$ response.append(line)[ FD ]
Line_47 $$ while ((line = rd.readLine()) != null) -->Line_49 $$ response.append('\r')[ CD ]
Line_46 $$ StringBuffer response = new StringBuffer()-->Line_49 $$ response.append('\r')[ FD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_51 $$ rd.close()[ CD ]
Line_44 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is))-->Line_51 $$ rd.close()[ FD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_52 $$ if (LoggerUtil.getIsLoggingOn()) [ CD ]
Line_52 $$ if (LoggerUtil.getIsLoggingOn()) -->Line_52 $$ if (LoggerUtil.getIsLoggingOn()) [ CD ]
Line_52 $$ if (LoggerUtil.getIsLoggingOn()) -->Line_53 $$ StringBuilder responseXML = new StringBuilder()[ CD ]
Line_52 $$ if (LoggerUtil.getIsLoggingOn()) -->Line_54 $$ responseXML.append(responseCode)[ CD ]
Line_53 $$ StringBuilder responseXML = new StringBuilder()-->Line_54 $$ responseXML.append(responseCode)[ FD ]
Line_41 $$ String responseCode = "<responseCode>" + connection.getResponseCode() + "</responseCode>"-->Line_54 $$ responseXML.append(responseCode)[ FD ]
Line_52 $$ if (LoggerUtil.getIsLoggingOn()) -->Line_55 $$ responseXML.append(response.toString())[ CD ]
Line_53 $$ StringBuilder responseXML = new StringBuilder()-->Line_55 $$ responseXML.append(response.toString())[ FD ]
Line_46 $$ StringBuffer response = new StringBuffer()-->Line_55 $$ responseXML.append(response.toString())[ FD ]
Line_52 $$ if (LoggerUtil.getIsLoggingOn()) -->Line_56 $$ SDKLoggerHelper.logMessage(URLEncoder.encode(responseXML.toString(), "UTF-8"), SDKLoggerHelper.RecordType.CreateMessageBuffer_RESPONSE)[ CD ]
Line_53 $$ StringBuilder responseXML = new StringBuilder()-->Line_56 $$ SDKLoggerHelper.logMessage(URLEncoder.encode(responseXML.toString(), "UTF-8"), SDKLoggerHelper.RecordType.CreateMessageBuffer_RESPONSE)[ FD ]
Line_42 $$ if ((connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_ACCEPTED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_CREATED) || (connection.getResponseCode() == MessageBufferConstants.HTTP_STATUS_CODE_OK)) -->Line_59 $$ if (LoggerUtil.getIsLoggingOn())[ CD ]
Line_59 $$ if (LoggerUtil.getIsLoggingOn())-->Line_59 $$ if (LoggerUtil.getIsLoggingOn())[ CD ]
Line_59 $$ if (LoggerUtil.getIsLoggingOn())-->Line_59 $$ SDKLoggerHelper.logMessage(URLEncoder.encode(responseCode, "UTF-8"), SDKLoggerHelper.RecordType.CreateMessageBuffer_RESPONSE)[ CD ]
Line_41 $$ String responseCode = "<responseCode>" + connection.getResponseCode() + "</responseCode>"-->Line_59 $$ SDKLoggerHelper.logMessage(URLEncoder.encode(responseCode, "UTF-8"), SDKLoggerHelper.RecordType.CreateMessageBuffer_RESPONSE)[ FD ]
Line_25 $$ HttpURLConnection connection-->Line_60 $$ throw new AppFabricException("MessageBuffer could not be created or updated. Error. Response code:  " + connection.getResponseCode())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection(httpWebProxy_)-->Line_60 $$ throw new AppFabricException("MessageBuffer could not be created or updated. Error. Response code:  " + connection.getResponseCode())[ FD ]
Line_26 $$ connection = (HttpURLConnection) urlConn.openConnection()-->Line_60 $$ throw new AppFabricException("MessageBuffer could not be created or updated. Error. Response code:  " + connection.getResponseCode())[ FD ]
Line_47 $$ while ((line = rd.readLine()) != null) -->Line_48 $$ response.append(line)[ FD ]
