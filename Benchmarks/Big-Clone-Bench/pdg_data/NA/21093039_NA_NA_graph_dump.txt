Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ArrayList parseFile(File newfile) throws IOException [ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_3 $$ String s[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_4 $$ String firstname[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_5 $$ String secondname[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_6 $$ String direction[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_7 $$ String header[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_8 $$ String name = null[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_9 $$ String[] tokens[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_10 $$ boolean readingHArrays = false[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_11 $$ boolean readingVArrays = false[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_12 $$ boolean readingAArrays = false[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_13 $$ ArrayList xturndat = new ArrayList()[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_14 $$ ArrayList yturndat = new ArrayList()[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_15 $$ ArrayList ampturndat = new ArrayList()[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_16 $$ int nvalues[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_17 $$ URL url = newfile.toURI().toURL()[ CD ]
Line_17 $$ URL url = newfile.toURI().toURL()-->Line_17 $$ URL url = newfile.toURI().toURL()[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_17 $$ URL url = newfile.toURI().toURL()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_18 $$ InputStream is = url.openStream()[ CD ]
Line_18 $$ InputStream is = url.openStream()-->Line_18 $$ InputStream is = url.openStream()[ CD ]
Line_17 $$ URL url = newfile.toURI().toURL()-->Line_18 $$ InputStream is = url.openStream()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_19 $$ InputStreamReader isr = new InputStreamReader(is)[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_20 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_21 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_21 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_21 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_21 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_21 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_22 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_22 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_22 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_22 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_22 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_22 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_23 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_23 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_23 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_23 $$ s = br.readLine()[ FD ]
Line_23 $$ s = br.readLine()-->Line_23 $$ s = br.readLine()[ FD ]
Line_23 $$ s = br.readLine()-->Line_23 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_23 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_24 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_24 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_24 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_24 $$ s = br.readLine()[ FD ]
Line_23 $$ s = br.readLine()-->Line_24 $$ s = br.readLine()[ FD ]
Line_24 $$ s = br.readLine()-->Line_24 $$ s = br.readLine()[ FD ]
Line_24 $$ s = br.readLine()-->Line_24 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_24 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_25 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_25 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_25 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_25 $$ s = br.readLine()[ FD ]
Line_23 $$ s = br.readLine()-->Line_25 $$ s = br.readLine()[ FD ]
Line_24 $$ s = br.readLine()-->Line_25 $$ s = br.readLine()[ FD ]
Line_25 $$ s = br.readLine()-->Line_25 $$ s = br.readLine()[ FD ]
Line_25 $$ s = br.readLine()-->Line_25 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_25 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_26 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_26 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ FD ]
Line_23 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ FD ]
Line_24 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ FD ]
Line_25 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ FD ]
Line_26 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ FD ]
Line_26 $$ s = br.readLine()-->Line_26 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_26 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_27 $$ s = br.readLine()[ CD ]
Line_3 $$ String s-->Line_27 $$ s = br.readLine()[ FD ]
Line_21 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_22 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_23 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_24 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_25 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_26 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_27 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ FD ]
Line_27 $$ s = br.readLine()-->Line_27 $$ s = br.readLine()[ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_27 $$ s = br.readLine()[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_28 $$ while ((s = br.readLine()) != null) [ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_2 $$ public ArrayList parseFile(File newfile) throws IOException [ CD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_3 $$ String s-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_21 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_22 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_23 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_24 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_25 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_26 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_27 $$ s = br.readLine()-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_28 $$ while ((s = br.readLine()) != null) [ CD ]
Line_20 $$ BufferedReader br = new BufferedReader(isr)-->Line_28 $$ while ((s = br.readLine()) != null) [ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_29 $$ tokens = s.split("\\s+")[ CD ]
Line_29 $$ tokens = s.split("\\s+")-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_9 $$ String[] tokens-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_29 $$ tokens = s.split("\\s+")-->Line_29 $$ tokens = s.split("\\s+")[ CD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_3 $$ String s-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_21 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_22 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_23 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_24 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_25 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_26 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_27 $$ s = br.readLine()-->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_30 $$ nvalues = tokens.length[ CD ]
Line_30 $$ nvalues = tokens.length-->Line_30 $$ nvalues = tokens.length[ FD ]
Line_16 $$ int nvalues-->Line_30 $$ nvalues = tokens.length[ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_31 $$ if (nvalues < 1)[ CD ]
Line_30 $$ nvalues = tokens.length-->Line_31 $$ if (nvalues < 1)[ FD ]
Line_16 $$ int nvalues-->Line_31 $$ if (nvalues < 1)[ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_32 $$ firstname = tokens[0][ CD ]
Line_32 $$ firstname = tokens[0]-->Line_32 $$ firstname = tokens[0][ FD ]
Line_4 $$ String firstname-->Line_32 $$ firstname = tokens[0][ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_33 $$ secondname = tokens[1][ CD ]
Line_33 $$ secondname = tokens[1]-->Line_33 $$ secondname = tokens[1][ FD ]
Line_5 $$ String secondname-->Line_33 $$ secondname = tokens[1][ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_34 $$ if (secondname.startsWith("BPM")) [ CD ]
Line_33 $$ secondname = tokens[1]-->Line_34 $$ if (secondname.startsWith("BPM")) [ FD ]
Line_5 $$ String secondname-->Line_34 $$ if (secondname.startsWith("BPM")) [ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_34 $$ if (secondname.startsWith("BPM")) [ CD ]
Line_33 $$ secondname = tokens[1]-->Line_34 $$ if (secondname.startsWith("BPM")) [ FD ]
Line_5 $$ String secondname-->Line_34 $$ if (secondname.startsWith("BPM")) [ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_35 $$ if (readingHArrays)[ CD ]
Line_11 $$ boolean readingVArrays = false-->Line_35 $$ if (readingHArrays)[ FD ]
Line_35 $$ if (readingHArrays)-->Line_35 $$ dumpxData(name, xturndat)[ CD ]
Line_8 $$ String name = null-->Line_35 $$ dumpxData(name, xturndat)[ FD ]
Line_13 $$ ArrayList xturndat = new ArrayList()-->Line_35 $$ dumpxData(name, xturndat)[ FD ]
Line_35 $$ if (readingHArrays)-->Line_35 $$ if (readingVArrays)[ CD ]
Line_12 $$ boolean readingAArrays = false-->Line_35 $$ if (readingVArrays)[ FD ]
Line_35 $$ if (readingVArrays)-->Line_35 $$ dumpyData(name, yturndat)[ CD ]
Line_8 $$ String name = null-->Line_35 $$ dumpyData(name, yturndat)[ FD ]
Line_14 $$ ArrayList yturndat = new ArrayList()-->Line_35 $$ dumpyData(name, yturndat)[ FD ]
Line_35 $$ if (readingVArrays)-->Line_35 $$ if (readingAArrays)[ CD ]
Line_35 $$ if (readingAArrays)-->Line_35 $$ dumpampData(name, ampturndat)[ CD ]
Line_8 $$ String name = null-->Line_35 $$ dumpampData(name, ampturndat)[ FD ]
Line_15 $$ ArrayList ampturndat = new ArrayList()-->Line_35 $$ dumpampData(name, ampturndat)[ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_36 $$ direction = tokens[4][ CD ]
Line_36 $$ direction = tokens[4]-->Line_36 $$ direction = tokens[4][ FD ]
Line_6 $$ String direction-->Line_36 $$ direction = tokens[4][ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_37 $$ if (direction.equals("HORIZONTAL")) [ CD ]
Line_36 $$ direction = tokens[4]-->Line_37 $$ if (direction.equals("HORIZONTAL")) [ FD ]
Line_6 $$ String direction-->Line_37 $$ if (direction.equals("HORIZONTAL")) [ FD ]
Line_37 $$ if (direction.equals("HORIZONTAL")) -->Line_37 $$ if (direction.equals("HORIZONTAL")) [ CD ]
Line_36 $$ direction = tokens[4]-->Line_37 $$ if (direction.equals("HORIZONTAL")) [ FD ]
Line_6 $$ String direction-->Line_37 $$ if (direction.equals("HORIZONTAL")) [ FD ]
Line_37 $$ if (direction.equals("HORIZONTAL")) -->Line_38 $$ readingHArrays = true[ CD ]
Line_38 $$ readingHArrays = true-->Line_38 $$ readingHArrays = true[ FD ]
Line_10 $$ boolean readingHArrays = false-->Line_38 $$ readingHArrays = true[ FD ]
Line_37 $$ if (direction.equals("HORIZONTAL")) -->Line_39 $$ readingVArrays = false[ CD ]
Line_39 $$ readingVArrays = false-->Line_39 $$ readingVArrays = false[ FD ]
Line_11 $$ boolean readingVArrays = false-->Line_39 $$ readingVArrays = false[ FD ]
Line_37 $$ if (direction.equals("HORIZONTAL")) -->Line_40 $$ readingAArrays = false[ CD ]
Line_40 $$ readingAArrays = false-->Line_40 $$ readingAArrays = false[ FD ]
Line_12 $$ boolean readingAArrays = false-->Line_40 $$ readingAArrays = false[ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_42 $$ if (direction.equals("VERTICAL")) [ CD ]
Line_36 $$ direction = tokens[4]-->Line_42 $$ if (direction.equals("VERTICAL")) [ FD ]
Line_6 $$ String direction-->Line_42 $$ if (direction.equals("VERTICAL")) [ FD ]
Line_42 $$ if (direction.equals("VERTICAL")) -->Line_42 $$ if (direction.equals("VERTICAL")) [ CD ]
Line_36 $$ direction = tokens[4]-->Line_42 $$ if (direction.equals("VERTICAL")) [ FD ]
Line_6 $$ String direction-->Line_42 $$ if (direction.equals("VERTICAL")) [ FD ]
Line_42 $$ if (direction.equals("VERTICAL")) -->Line_43 $$ readingVArrays = true[ CD ]
Line_39 $$ readingVArrays = false-->Line_43 $$ readingVArrays = true[ FD ]
Line_43 $$ readingVArrays = true-->Line_43 $$ readingVArrays = true[ FD ]
Line_11 $$ boolean readingVArrays = false-->Line_43 $$ readingVArrays = true[ FD ]
Line_42 $$ if (direction.equals("VERTICAL")) -->Line_44 $$ readingHArrays = false[ CD ]
Line_38 $$ readingHArrays = true-->Line_44 $$ readingHArrays = false[ FD ]
Line_44 $$ readingHArrays = false-->Line_44 $$ readingHArrays = false[ FD ]
Line_10 $$ boolean readingHArrays = false-->Line_44 $$ readingHArrays = false[ FD ]
Line_42 $$ if (direction.equals("VERTICAL")) -->Line_45 $$ readingAArrays = false[ CD ]
Line_40 $$ readingAArrays = false-->Line_45 $$ readingAArrays = false[ FD ]
Line_45 $$ readingAArrays = false-->Line_45 $$ readingAArrays = false[ FD ]
Line_12 $$ boolean readingAArrays = false-->Line_45 $$ readingAArrays = false[ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_47 $$ if (direction.equals("AMPLITUDE")) [ CD ]
Line_36 $$ direction = tokens[4]-->Line_47 $$ if (direction.equals("AMPLITUDE")) [ FD ]
Line_6 $$ String direction-->Line_47 $$ if (direction.equals("AMPLITUDE")) [ FD ]
Line_47 $$ if (direction.equals("AMPLITUDE")) -->Line_47 $$ if (direction.equals("AMPLITUDE")) [ CD ]
Line_36 $$ direction = tokens[4]-->Line_47 $$ if (direction.equals("AMPLITUDE")) [ FD ]
Line_6 $$ String direction-->Line_47 $$ if (direction.equals("AMPLITUDE")) [ FD ]
Line_47 $$ if (direction.equals("AMPLITUDE")) -->Line_48 $$ readingVArrays = false[ CD ]
Line_39 $$ readingVArrays = false-->Line_48 $$ readingVArrays = false[ FD ]
Line_43 $$ readingVArrays = true-->Line_48 $$ readingVArrays = false[ FD ]
Line_48 $$ readingVArrays = false-->Line_48 $$ readingVArrays = false[ FD ]
Line_11 $$ boolean readingVArrays = false-->Line_48 $$ readingVArrays = false[ FD ]
Line_47 $$ if (direction.equals("AMPLITUDE")) -->Line_49 $$ readingHArrays = false[ CD ]
Line_38 $$ readingHArrays = true-->Line_49 $$ readingHArrays = false[ FD ]
Line_44 $$ readingHArrays = false-->Line_49 $$ readingHArrays = false[ FD ]
Line_49 $$ readingHArrays = false-->Line_49 $$ readingHArrays = false[ FD ]
Line_10 $$ boolean readingHArrays = false-->Line_49 $$ readingHArrays = false[ FD ]
Line_47 $$ if (direction.equals("AMPLITUDE")) -->Line_50 $$ readingAArrays = true[ CD ]
Line_40 $$ readingAArrays = false-->Line_50 $$ readingAArrays = true[ FD ]
Line_45 $$ readingAArrays = false-->Line_50 $$ readingAArrays = true[ FD ]
Line_50 $$ readingAArrays = true-->Line_50 $$ readingAArrays = true[ FD ]
Line_12 $$ boolean readingAArrays = false-->Line_50 $$ readingAArrays = true[ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_52 $$ name = tokens[3][ CD ]
Line_52 $$ name = tokens[3]-->Line_52 $$ name = tokens[3][ FD ]
Line_8 $$ String name = null-->Line_52 $$ name = tokens[3][ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_53 $$ xturndat.clear()[ CD ]
Line_13 $$ ArrayList xturndat = new ArrayList()-->Line_53 $$ xturndat.clear()[ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_54 $$ yturndat.clear()[ CD ]
Line_14 $$ ArrayList yturndat = new ArrayList()-->Line_54 $$ yturndat.clear()[ FD ]
Line_34 $$ if (secondname.startsWith("BPM")) -->Line_55 $$ ampturndat.clear()[ CD ]
Line_15 $$ ArrayList ampturndat = new ArrayList()-->Line_55 $$ ampturndat.clear()[ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ CD ]
Line_33 $$ secondname = tokens[1]-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ FD ]
Line_5 $$ String secondname-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ FD ]
Line_57 $$ if (secondname.startsWith("WAVEFORM"))-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ CD ]
Line_33 $$ secondname = tokens[1]-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ FD ]
Line_5 $$ String secondname-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ FD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_58 $$ if (nvalues == 3) [ CD ]
Line_30 $$ nvalues = tokens.length-->Line_58 $$ if (nvalues == 3) [ FD ]
Line_16 $$ int nvalues-->Line_58 $$ if (nvalues == 3) [ FD ]
Line_58 $$ if (nvalues == 3) -->Line_59 $$ if (readingHArrays)[ CD ]
Line_39 $$ readingVArrays = false-->Line_59 $$ if (readingHArrays)[ FD ]
Line_43 $$ readingVArrays = true-->Line_59 $$ if (readingHArrays)[ FD ]
Line_48 $$ readingVArrays = false-->Line_59 $$ if (readingHArrays)[ FD ]
Line_11 $$ boolean readingVArrays = false-->Line_59 $$ if (readingHArrays)[ FD ]
Line_59 $$ if (readingHArrays)-->Line_59 $$ xturndat.add(new Double(Double.parseDouble(tokens[2])))[ CD ]
Line_13 $$ ArrayList xturndat = new ArrayList()-->Line_59 $$ xturndat.add(new Double(Double.parseDouble(tokens[2])))[ FD ]
Line_59 $$ if (readingHArrays)-->Line_59 $$ if (readingVArrays)[ CD ]
Line_40 $$ readingAArrays = false-->Line_59 $$ if (readingVArrays)[ FD ]
Line_45 $$ readingAArrays = false-->Line_59 $$ if (readingVArrays)[ FD ]
Line_50 $$ readingAArrays = true-->Line_59 $$ if (readingVArrays)[ FD ]
Line_12 $$ boolean readingAArrays = false-->Line_59 $$ if (readingVArrays)[ FD ]
Line_59 $$ if (readingVArrays)-->Line_59 $$ yturndat.add(new Double(Double.parseDouble(tokens[2])))[ CD ]
Line_14 $$ ArrayList yturndat = new ArrayList()-->Line_59 $$ yturndat.add(new Double(Double.parseDouble(tokens[2])))[ FD ]
Line_59 $$ if (readingVArrays)-->Line_59 $$ if (readingAArrays)[ CD ]
Line_59 $$ if (readingAArrays)-->Line_59 $$ ampturndat.add(new Double(Double.parseDouble(tokens[2])))[ CD ]
Line_15 $$ ArrayList ampturndat = new ArrayList()-->Line_59 $$ ampturndat.add(new Double(Double.parseDouble(tokens[2])))[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_62 $$ dumpampData(name, ampturndat)[ CD ]
Line_52 $$ name = tokens[3]-->Line_62 $$ dumpampData(name, ampturndat)[ FD ]
Line_8 $$ String name = null-->Line_62 $$ dumpampData(name, ampturndat)[ FD ]
Line_15 $$ ArrayList ampturndat = new ArrayList()-->Line_62 $$ dumpampData(name, ampturndat)[ FD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_63 $$ data.add(xdatamap)[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_64 $$ data.add(ydatamap)[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_65 $$ data.add(ampdatamap)[ CD ]
Line_2 $$ public ArrayList parseFile(File newfile) throws IOException -->Line_66 $$ return data[ CD ]
Line_28 $$ while ((s = br.readLine()) != null) -->Line_29 $$ tokens = s.split("\\s+")[ FD ]
Line_30 $$ nvalues = tokens.length-->Line_31 $$ if (nvalues < 1)[ FD ]
Line_33 $$ secondname = tokens[1]-->Line_34 $$ if (secondname.startsWith("BPM")) [ FD ]
Line_33 $$ secondname = tokens[1]-->Line_34 $$ if (secondname.startsWith("BPM")) [ FD ]
Line_39 $$ readingVArrays = false-->Line_35 $$ if (readingHArrays)[ FD ]
Line_43 $$ readingVArrays = true-->Line_35 $$ if (readingHArrays)[ FD ]
Line_48 $$ readingVArrays = false-->Line_35 $$ if (readingHArrays)[ FD ]
Line_52 $$ name = tokens[3]-->Line_35 $$ dumpxData(name, xturndat)[ FD ]
Line_40 $$ readingAArrays = false-->Line_35 $$ if (readingVArrays)[ FD ]
Line_45 $$ readingAArrays = false-->Line_35 $$ if (readingVArrays)[ FD ]
Line_50 $$ readingAArrays = true-->Line_35 $$ if (readingVArrays)[ FD ]
Line_52 $$ name = tokens[3]-->Line_35 $$ dumpyData(name, yturndat)[ FD ]
Line_52 $$ name = tokens[3]-->Line_35 $$ dumpampData(name, ampturndat)[ FD ]
Line_36 $$ direction = tokens[4]-->Line_37 $$ if (direction.equals("HORIZONTAL")) [ FD ]
Line_36 $$ direction = tokens[4]-->Line_37 $$ if (direction.equals("HORIZONTAL")) [ FD ]
Line_36 $$ direction = tokens[4]-->Line_42 $$ if (direction.equals("VERTICAL")) [ FD ]
Line_36 $$ direction = tokens[4]-->Line_42 $$ if (direction.equals("VERTICAL")) [ FD ]
Line_36 $$ direction = tokens[4]-->Line_47 $$ if (direction.equals("AMPLITUDE")) [ FD ]
Line_36 $$ direction = tokens[4]-->Line_47 $$ if (direction.equals("AMPLITUDE")) [ FD ]
Line_33 $$ secondname = tokens[1]-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ FD ]
Line_33 $$ secondname = tokens[1]-->Line_57 $$ if (secondname.startsWith("WAVEFORM"))[ FD ]
Line_30 $$ nvalues = tokens.length-->Line_58 $$ if (nvalues == 3) [ FD ]
Line_39 $$ readingVArrays = false-->Line_59 $$ if (readingHArrays)[ FD ]
Line_43 $$ readingVArrays = true-->Line_59 $$ if (readingHArrays)[ FD ]
Line_48 $$ readingVArrays = false-->Line_59 $$ if (readingHArrays)[ FD ]
Line_40 $$ readingAArrays = false-->Line_59 $$ if (readingVArrays)[ FD ]
Line_45 $$ readingAArrays = false-->Line_59 $$ if (readingVArrays)[ FD ]
Line_50 $$ readingAArrays = true-->Line_59 $$ if (readingVArrays)[ FD ]
