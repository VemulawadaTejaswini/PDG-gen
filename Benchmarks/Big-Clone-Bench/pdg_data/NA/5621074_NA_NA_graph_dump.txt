Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void upper() throws Exception [ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_3 $$ TrustManager[] trustAllCerts = new TrustManager[] [ CD ]
Line_3 $$ TrustManager[] trustAllCerts = new TrustManager[] -->Line_5 $$ return null[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_12 $$ SSLContext sc = SSLContext.getInstance("SSL")[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_13 $$ sc.init(null, trustAllCerts, new java.security.SecureRandom())[ CD ]
Line_3 $$ TrustManager[] trustAllCerts = new TrustManager[] -->Line_13 $$ sc.init(null, trustAllCerts, new java.security.SecureRandom())[ FD ]
Line_2 $$ public static void upper() throws Exception -->Line_14 $$ HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory())[ CD ]
Line_15 $$ HostnameVerifier hv = new HostnameVerifier() -->Line_17 $$ System.out.println("Warning: URL Host: " + urlHostName + " vs. " + session.getPeerHost())[ CD ]
Line_15 $$ HostnameVerifier hv = new HostnameVerifier() -->Line_17 $$ System.out.println("Warning: URL Host: " + urlHostName + " vs. " + session.getPeerHost())[ FD ]
Line_15 $$ HostnameVerifier hv = new HostnameVerifier() -->Line_18 $$ return true[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_21 $$ HttpsURLConnection.setDefaultHostnameVerifier(hv)[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_23 $$ URLConnection conn = url.openConnection()[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_25 $$ conn.setDoOutput(true)[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_27 $$ wr.write("load=" + data)[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_28 $$ wr.flush()[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_29 $$ wr.close()[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_32 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_2 $$ public static void upper() throws Exception [ CD ]
Line_32 $$ while ((line = rd.readLine()) != null) -->Line_33 $$ System.out.println(line)[ CD ]
Line_2 $$ public static void upper() throws Exception -->Line_35 $$ rd.close()[ CD ]
