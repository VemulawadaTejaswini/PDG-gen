Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException [ CD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_3 $$ if ((name == null) || name.trim().equals("")) [ CD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_3 $$ if ((name == null) || name.trim().equals("")) [ FD ]
Line_3 $$ if ((name == null) || name.trim().equals("")) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_6 $$ if (name.trim().equals("System.in")) [ CD ]
Line_6 $$ if (name.trim().equals("System.in")) -->Line_6 $$ if (name.trim().equals("System.in")) [ CD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_6 $$ if (name.trim().equals("System.in")) [ FD ]
Line_6 $$ if (name.trim().equals("System.in")) -->Line_7 $$ if (STD_IN == null) [ CD ]
Line_6 $$ if (name.trim().equals("System.in")) -->Line_10 $$ return STD_IN[ CD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_12 $$ URL url = nameToURL(name, base, classLoader)[ CD ]
Line_12 $$ URL url = nameToURL(name, base, classLoader)-->Line_12 $$ URL url = nameToURL(name, base, classLoader)[ CD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_12 $$ URL url = nameToURL(name, base, classLoader)[ FD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_12 $$ URL url = nameToURL(name, base, classLoader)[ FD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_12 $$ URL url = nameToURL(name, base, classLoader)[ FD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_13 $$ if (url == null) [ CD ]
Line_12 $$ URL url = nameToURL(name, base, classLoader)-->Line_13 $$ if (url == null) [ FD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_16 $$ InputStreamReader inputStreamReader = null[ CD ]
Line_16 $$ InputStreamReader inputStreamReader = null-->Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())[ FD ]
Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())-->Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())[ FD ]
Line_12 $$ URL url = nameToURL(name, base, classLoader)-->Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())[ FD ]
Line_21 $$ URL possibleJarURL = ClassUtilities.jarURLEntryResource(url.toString())-->Line_21 $$ URL possibleJarURL = ClassUtilities.jarURLEntryResource(url.toString())[ CD ]
Line_12 $$ URL url = nameToURL(name, base, classLoader)-->Line_21 $$ URL possibleJarURL = ClassUtilities.jarURLEntryResource(url.toString())[ FD ]
Line_21 $$ URL possibleJarURL = ClassUtilities.jarURLEntryResource(url.toString())-->Line_22 $$ if (possibleJarURL != null) [ FD ]
Line_22 $$ if (possibleJarURL != null) -->Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())[ CD ]
Line_16 $$ InputStreamReader inputStreamReader = null-->Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())[ FD ]
Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())-->Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())[ FD ]
Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())-->Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())[ FD ]
Line_21 $$ URL possibleJarURL = ClassUtilities.jarURLEntryResource(url.toString())-->Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())[ FD ]
Line_16 $$ InputStreamReader inputStreamReader = null-->Line_28 $$ if (inputStreamReader != null) [ FD ]
Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())-->Line_28 $$ if (inputStreamReader != null) [ FD ]
Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())-->Line_28 $$ if (inputStreamReader != null) [ FD ]
Line_28 $$ if (inputStreamReader != null) -->Line_29 $$ inputStreamReader.close()[ CD ]
Line_16 $$ InputStreamReader inputStreamReader = null-->Line_29 $$ inputStreamReader.close()[ FD ]
Line_18 $$ inputStreamReader = new InputStreamReader(url.openStream())-->Line_29 $$ inputStreamReader.close()[ FD ]
Line_23 $$ inputStreamReader = new InputStreamReader(possibleJarURL.openStream())-->Line_29 $$ inputStreamReader.close()[ FD ]
Line_33 $$ IOException ioException = new IOException("Failed to open \"" + url + "\".")-->Line_34 $$ ioException.initCause(ex)[ FD ]
Line_2 $$ public static BufferedReader openForReading(String name, URI base, ClassLoader classLoader) throws IOException -->Line_38 $$ return new BufferedReader(inputStreamReader)[ CD ]
