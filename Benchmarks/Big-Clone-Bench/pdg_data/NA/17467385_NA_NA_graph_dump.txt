Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void moveFile(File orig, File target) throws IOException [ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_3 $$ byte buffer[] = new byte[1000][ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_4 $$ int bread = 0[ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_5 $$ FileInputStream fis = new FileInputStream(orig)[ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_6 $$ FileOutputStream fos = new FileOutputStream(target)[ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_7 $$ while (bread != -1) [ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_2 $$ private void moveFile(File orig, File target) throws IOException [ CD ]
Line_4 $$ int bread = 0-->Line_7 $$ while (bread != -1) [ FD ]
Line_7 $$ while (bread != -1) -->Line_8 $$ bread = fis.read(buffer)[ CD ]
Line_8 $$ bread = fis.read(buffer)-->Line_8 $$ bread = fis.read(buffer)[ FD ]
Line_4 $$ int bread = 0-->Line_8 $$ bread = fis.read(buffer)[ FD ]
Line_8 $$ bread = fis.read(buffer)-->Line_8 $$ bread = fis.read(buffer)[ CD ]
Line_5 $$ FileInputStream fis = new FileInputStream(orig)-->Line_8 $$ bread = fis.read(buffer)[ FD ]
Line_7 $$ while (bread != -1) -->Line_9 $$ if (bread != -1)[ CD ]
Line_8 $$ bread = fis.read(buffer)-->Line_9 $$ if (bread != -1)[ FD ]
Line_4 $$ int bread = 0-->Line_9 $$ if (bread != -1)[ FD ]
Line_9 $$ if (bread != -1)-->Line_9 $$ fos.write(buffer, 0, bread)[ CD ]
Line_6 $$ FileOutputStream fos = new FileOutputStream(target)-->Line_9 $$ fos.write(buffer, 0, bread)[ FD ]
Line_8 $$ bread = fis.read(buffer)-->Line_9 $$ fos.write(buffer, 0, bread)[ FD ]
Line_4 $$ int bread = 0-->Line_9 $$ fos.write(buffer, 0, bread)[ FD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_11 $$ fis.close()[ CD ]
Line_5 $$ FileInputStream fis = new FileInputStream(orig)-->Line_11 $$ fis.close()[ FD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_12 $$ fos.close()[ CD ]
Line_6 $$ FileOutputStream fos = new FileOutputStream(target)-->Line_12 $$ fos.close()[ FD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_13 $$ orig.delete()[ CD ]
Line_2 $$ private void moveFile(File orig, File target) throws IOException -->Line_13 $$ orig.delete()[ FD ]
Line_8 $$ bread = fis.read(buffer)-->Line_7 $$ while (bread != -1) [ FD ]
Line_8 $$ bread = fis.read(buffer)-->Line_7 $$ while (bread != -1) [ FD ]
Line_8 $$ bread = fis.read(buffer)-->Line_9 $$ if (bread != -1)[ FD ]
Line_8 $$ bread = fis.read(buffer)-->Line_9 $$ fos.write(buffer, 0, bread)[ FD ]
