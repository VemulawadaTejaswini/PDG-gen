Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException [ CD ]
Line_4 $$ File temporaryFile = File.createTempFile("pmMDA_zargo", ".zargo")-->Line_4 $$ File temporaryFile = File.createTempFile("pmMDA_zargo", ".zargo")[ CD ]
Line_4 $$ File temporaryFile = File.createTempFile("pmMDA_zargo", ".zargo")-->Line_5 $$ temporaryFile.deleteOnExit()[ FD ]
Line_9 $$ ZipEntry entry = input.getNextEntry()-->Line_9 $$ ZipEntry entry = input.getNextEntry()[ CD ]
Line_7 $$ ZipInputStream input = new ZipInputStream(inputStream)-->Line_9 $$ ZipEntry entry = input.getNextEntry()[ FD ]
Line_9 $$ ZipEntry entry = input.getNextEntry()-->Line_10 $$ while (entry != null) [ FD ]
Line_10 $$ while (entry != null) -->Line_11 $$ ZipEntry zipEntry = new ZipEntry(entry)[ CD ]
Line_10 $$ while (entry != null) -->Line_12 $$ zipEntry.setCompressedSize(-1)[ CD ]
Line_11 $$ ZipEntry zipEntry = new ZipEntry(entry)-->Line_12 $$ zipEntry.setCompressedSize(-1)[ FD ]
Line_10 $$ while (entry != null) -->Line_13 $$ output.putNextEntry(zipEntry)[ CD ]
Line_8 $$ ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile))-->Line_13 $$ output.putNextEntry(zipEntry)[ FD ]
Line_11 $$ ZipEntry zipEntry = new ZipEntry(entry)-->Line_13 $$ output.putNextEntry(zipEntry)[ FD ]
Line_10 $$ while (entry != null) -->Line_14 $$ if (!entry.getName().equals(entryName)) [ CD ]
Line_14 $$ if (!entry.getName().equals(entryName)) -->Line_14 $$ if (!entry.getName().equals(entryName)) [ CD ]
Line_14 $$ if (!entry.getName().equals(entryName)) -->Line_14 $$ if (!entry.getName().equals(entryName)) [ CD ]
Line_2 $$ public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException -->Line_14 $$ if (!entry.getName().equals(entryName)) [ FD ]
Line_9 $$ ZipEntry entry = input.getNextEntry()-->Line_14 $$ if (!entry.getName().equals(entryName)) [ FD ]
Line_14 $$ if (!entry.getName().equals(entryName)) -->Line_15 $$ IOUtils.copy(input, output)[ CD ]
Line_7 $$ ZipInputStream input = new ZipInputStream(inputStream)-->Line_15 $$ IOUtils.copy(input, output)[ FD ]
Line_8 $$ ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile))-->Line_15 $$ IOUtils.copy(input, output)[ FD ]
Line_14 $$ if (!entry.getName().equals(entryName)) -->Line_17 $$ IOUtils.copy(stream, output)[ CD ]
Line_2 $$ public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException -->Line_17 $$ IOUtils.copy(stream, output)[ FD ]
Line_8 $$ ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile))-->Line_17 $$ IOUtils.copy(stream, output)[ FD ]
Line_10 $$ while (entry != null) -->Line_19 $$ input.closeEntry()[ CD ]
Line_7 $$ ZipInputStream input = new ZipInputStream(inputStream)-->Line_19 $$ input.closeEntry()[ FD ]
Line_10 $$ while (entry != null) -->Line_20 $$ output.closeEntry()[ CD ]
Line_8 $$ ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile))-->Line_20 $$ output.closeEntry()[ FD ]
Line_10 $$ while (entry != null) -->Line_21 $$ entry = input.getNextEntry()[ CD ]
Line_21 $$ entry = input.getNextEntry()-->Line_21 $$ entry = input.getNextEntry()[ FD ]
Line_9 $$ ZipEntry entry = input.getNextEntry()-->Line_21 $$ entry = input.getNextEntry()[ FD ]
Line_21 $$ entry = input.getNextEntry()-->Line_21 $$ entry = input.getNextEntry()[ CD ]
Line_7 $$ ZipInputStream input = new ZipInputStream(inputStream)-->Line_21 $$ entry = input.getNextEntry()[ FD ]
Line_7 $$ ZipInputStream input = new ZipInputStream(inputStream)-->Line_23 $$ input.close()[ FD ]
Line_6 $$ FileInputStream inputStream = new FileInputStream(file)-->Line_24 $$ inputStream.close()[ FD ]
Line_8 $$ ZipOutputStream output = new ZipOutputStream(new FileOutputStream(temporaryFile))-->Line_25 $$ output.close()[ FD ]
Line_27 $$ boolean isSuccess = file.delete()-->Line_27 $$ boolean isSuccess = file.delete()[ CD ]
Line_2 $$ public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException -->Line_27 $$ boolean isSuccess = file.delete()[ FD ]
Line_27 $$ boolean isSuccess = file.delete()-->Line_28 $$ if (!isSuccess) [ FD ]
Line_28 $$ if (!isSuccess) -->Line_28 $$ if (!isSuccess) [ CD ]
Line_27 $$ boolean isSuccess = file.delete()-->Line_28 $$ if (!isSuccess) [ FD ]
Line_27 $$ boolean isSuccess = file.delete()-->Line_31 $$ isSuccess = temporaryFile.renameTo(file)[ FD ]
Line_31 $$ isSuccess = temporaryFile.renameTo(file)-->Line_31 $$ isSuccess = temporaryFile.renameTo(file)[ FD ]
Line_31 $$ isSuccess = temporaryFile.renameTo(file)-->Line_31 $$ isSuccess = temporaryFile.renameTo(file)[ CD ]
Line_4 $$ File temporaryFile = File.createTempFile("pmMDA_zargo", ".zargo")-->Line_31 $$ isSuccess = temporaryFile.renameTo(file)[ FD ]
Line_2 $$ public static void replaceEntry(File file, String entryName, InputStream stream) throws PersistenceException -->Line_31 $$ isSuccess = temporaryFile.renameTo(file)[ FD ]
Line_27 $$ boolean isSuccess = file.delete()-->Line_32 $$ if (!isSuccess) [ FD ]
Line_31 $$ isSuccess = temporaryFile.renameTo(file)-->Line_32 $$ if (!isSuccess) [ FD ]
Line_32 $$ if (!isSuccess) -->Line_32 $$ if (!isSuccess) [ CD ]
Line_27 $$ boolean isSuccess = file.delete()-->Line_32 $$ if (!isSuccess) [ FD ]
Line_31 $$ isSuccess = temporaryFile.renameTo(file)-->Line_32 $$ if (!isSuccess) [ FD ]
Line_21 $$ entry = input.getNextEntry()-->Line_10 $$ while (entry != null) [ FD ]
Line_21 $$ entry = input.getNextEntry()-->Line_10 $$ while (entry != null) [ FD ]
Line_11 $$ ZipEntry zipEntry = new ZipEntry(entry)-->Line_12 $$ zipEntry.setCompressedSize(-1)[ FD ]
Line_11 $$ ZipEntry zipEntry = new ZipEntry(entry)-->Line_13 $$ output.putNextEntry(zipEntry)[ FD ]
Line_21 $$ entry = input.getNextEntry()-->Line_14 $$ if (!entry.getName().equals(entryName)) [ FD ]
