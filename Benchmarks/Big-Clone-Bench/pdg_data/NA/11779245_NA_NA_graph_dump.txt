Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void zip(String input, OutputStream out) [ CD ]
Line_2 $$ public static void zip(String input, OutputStream out) -->Line_3 $$ File file = new File(input)[ CD ]
Line_2 $$ public static void zip(String input, OutputStream out) -->Line_4 $$ ZipOutputStream zip = null[ CD ]
Line_2 $$ public static void zip(String input, OutputStream out) -->Line_5 $$ FileInputStream in = null[ CD ]
Line_3 $$ File file = new File(input)-->Line_7 $$ if (file.exists()) [ FD ]
Line_7 $$ if (file.exists()) -->Line_7 $$ if (file.exists()) [ CD ]
Line_3 $$ File file = new File(input)-->Line_7 $$ if (file.exists()) [ FD ]
Line_7 $$ if (file.exists()) -->Line_8 $$ Collection<File> items = new ArrayList()[ CD ]
Line_7 $$ if (file.exists()) -->Line_9 $$ if (file.isDirectory()) [ CD ]
Line_3 $$ File file = new File(input)-->Line_9 $$ if (file.isDirectory()) [ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_9 $$ if (file.isDirectory()) [ CD ]
Line_3 $$ File file = new File(input)-->Line_9 $$ if (file.isDirectory()) [ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)[ CD ]
Line_8 $$ Collection<File> items = new ArrayList()-->Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)[ FD ]
Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)-->Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)[ FD ]
Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)-->Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)[ CD ]
Line_3 $$ File file = new File(input)-->Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)[ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_11 $$ zip = new ZipOutputStream(out)[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_11 $$ zip = new ZipOutputStream(out)[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_11 $$ zip = new ZipOutputStream(out)[ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_12 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/"))[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_12 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/"))[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_12 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/"))[ FD ]
Line_3 $$ File file = new File(input)-->Line_12 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/"))[ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_13 $$ Iterator iter = items.iterator()[ CD ]
Line_13 $$ Iterator iter = items.iterator()-->Line_13 $$ Iterator iter = items.iterator()[ CD ]
Line_8 $$ Collection<File> items = new ArrayList()-->Line_13 $$ Iterator iter = items.iterator()[ FD ]
Line_10 $$ items = FileUtils.listFiles(file, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE)-->Line_13 $$ Iterator iter = items.iterator()[ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_14 $$ while (iter.hasNext()) [ CD ]
Line_9 $$ if (file.isDirectory()) -->Line_9 $$ if (file.isDirectory()) [ CD ]
Line_14 $$ while (iter.hasNext()) -->Line_14 $$ while (iter.hasNext()) [ CD ]
Line_13 $$ Iterator iter = items.iterator()-->Line_14 $$ while (iter.hasNext()) [ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_15 $$ File item = (File) iter.next()[ CD ]
Line_13 $$ Iterator iter = items.iterator()-->Line_15 $$ File item = (File) iter.next()[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_16 $$ in = new FileInputStream(item)[ CD ]
Line_16 $$ in = new FileInputStream(item)-->Line_16 $$ in = new FileInputStream(item)[ FD ]
Line_5 $$ FileInputStream in = null-->Line_16 $$ in = new FileInputStream(item)[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_17 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/" + item.getName()))[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_17 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/" + item.getName()))[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_17 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/" + item.getName()))[ FD ]
Line_3 $$ File file = new File(input)-->Line_17 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/" + item.getName()))[ FD ]
Line_15 $$ File item = (File) iter.next()-->Line_17 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/" + item.getName()))[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_18 $$ IOUtils.copy(in, zip)[ CD ]
Line_16 $$ in = new FileInputStream(item)-->Line_18 $$ IOUtils.copy(in, zip)[ FD ]
Line_5 $$ FileInputStream in = null-->Line_18 $$ IOUtils.copy(in, zip)[ FD ]
Line_4 $$ ZipOutputStream zip = null-->Line_18 $$ IOUtils.copy(in, zip)[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_18 $$ IOUtils.copy(in, zip)[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_19 $$ IOUtils.closeQuietly(in)[ CD ]
Line_16 $$ in = new FileInputStream(item)-->Line_19 $$ IOUtils.closeQuietly(in)[ FD ]
Line_5 $$ FileInputStream in = null-->Line_19 $$ IOUtils.closeQuietly(in)[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_20 $$ zip.closeEntry()[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_20 $$ zip.closeEntry()[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_20 $$ zip.closeEntry()[ FD ]
Line_9 $$ if (file.isDirectory()) -->Line_22 $$ IOUtils.closeQuietly(zip)[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_22 $$ IOUtils.closeQuietly(zip)[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_22 $$ IOUtils.closeQuietly(zip)[ FD ]
Line_7 $$ if (file.exists()) -->Line_25 $$ log.info("-->>���ļ���û���ļ�")[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_32 $$ if (null != zip) [ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_32 $$ if (null != zip) [ FD ]
Line_32 $$ if (null != zip) -->Line_33 $$ zip.close()[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_33 $$ zip.close()[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_33 $$ zip.close()[ FD ]
Line_32 $$ if (null != zip) -->Line_34 $$ zip = null[ CD ]
Line_4 $$ ZipOutputStream zip = null-->Line_34 $$ zip = null[ FD ]
Line_11 $$ zip = new ZipOutputStream(out)-->Line_34 $$ zip = null[ FD ]
Line_34 $$ zip = null-->Line_34 $$ zip = null[ FD ]
Line_16 $$ in = new FileInputStream(item)-->Line_36 $$ if (null != in) [ FD ]
Line_5 $$ FileInputStream in = null-->Line_36 $$ if (null != in) [ FD ]
Line_36 $$ if (null != in) -->Line_37 $$ in.close()[ CD ]
Line_16 $$ in = new FileInputStream(item)-->Line_37 $$ in.close()[ FD ]
Line_5 $$ FileInputStream in = null-->Line_37 $$ in.close()[ FD ]
Line_36 $$ if (null != in) -->Line_38 $$ in = null[ CD ]
Line_16 $$ in = new FileInputStream(item)-->Line_38 $$ in = null[ FD ]
Line_5 $$ FileInputStream in = null-->Line_38 $$ in = null[ FD ]
Line_38 $$ in = null-->Line_38 $$ in = null[ FD ]
Line_15 $$ File item = (File) iter.next()-->Line_17 $$ zip.putNextEntry(new ZipEntry(file.getName() + "/" + item.getName()))[ FD ]
Line_16 $$ in = new FileInputStream(item)-->Line_18 $$ IOUtils.copy(in, zip)[ FD ]
Line_16 $$ in = new FileInputStream(item)-->Line_19 $$ IOUtils.closeQuietly(in)[ FD ]
