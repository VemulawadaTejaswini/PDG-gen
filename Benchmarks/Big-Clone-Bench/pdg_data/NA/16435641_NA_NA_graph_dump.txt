Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static <T> List<T> getServices(String service) [ CD ]
Line_2 $$ public static <T> List<T> getServices(String service) -->Line_3 $$ String serviceUri = "META-INF/services/" + service[ CD ]
Line_2 $$ public static <T> List<T> getServices(String service) -->Line_4 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_4 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_4 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)-->Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)[ CD ]
Line_4 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)[ FD ]
Line_3 $$ String serviceUri = "META-INF/services/" + service-->Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)[ FD ]
Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)-->Line_7 $$ if (urls.hasMoreElements()) [ FD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_7 $$ if (urls.hasMoreElements()) [ CD ]
Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)-->Line_7 $$ if (urls.hasMoreElements()) [ FD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_8 $$ List<T> services = new ArrayList<T>(1)[ CD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_9 $$ Set<String> keys = new HashSet<String>(20)[ CD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_10 $$ do [ CD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_7 $$ if (urls.hasMoreElements()) [ CD ]
Line_10 $$ do -->Line_11 $$ URL url = urls.nextElement()[ CD ]
Line_11 $$ URL url = urls.nextElement()-->Line_11 $$ URL url = urls.nextElement()[ CD ]
Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)-->Line_11 $$ URL url = urls.nextElement()[ FD ]
Line_10 $$ do -->Line_12 $$ if (_LOG.isLoggable(Level.FINEST)) [ CD ]
Line_12 $$ if (_LOG.isLoggable(Level.FINEST)) -->Line_12 $$ if (_LOG.isLoggable(Level.FINEST)) [ CD ]
Line_12 $$ if (_LOG.isLoggable(Level.FINEST)) -->Line_13 $$ _LOG.finest("Processing: " + url)[ CD ]
Line_11 $$ URL url = urls.nextElement()-->Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_18 $$ while (true) -->Line_19 $$ String line = in.readLine()[ CD ]
Line_19 $$ String line = in.readLine()-->Line_19 $$ String line = in.readLine()[ CD ]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_19 $$ String line = in.readLine()[ FD ]
Line_18 $$ while (true) -->Line_20 $$ if (line == null)[ CD ]
Line_19 $$ String line = in.readLine()-->Line_20 $$ if (line == null)[ FD ]
Line_18 $$ while (true) -->Line_21 $$ String className = _parseLine(line)[ CD ]
Line_21 $$ String className = _parseLine(line)-->Line_21 $$ String className = _parseLine(line)[ CD ]
Line_19 $$ String line = in.readLine()-->Line_21 $$ String className = _parseLine(line)[ FD ]
Line_18 $$ while (true) -->Line_22 $$ if (className != null && keys.add(className)) [ CD ]
Line_9 $$ Set<String> keys = new HashSet<String>(20)-->Line_22 $$ if (className != null && keys.add(className)) [ FD ]
Line_21 $$ String className = _parseLine(line)-->Line_22 $$ if (className != null && keys.add(className)) [ FD ]
Line_22 $$ if (className != null && keys.add(className)) -->Line_23 $$ T instance = (T) _getClass(loader, className)[ CD ]
Line_4 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_23 $$ T instance = (T) _getClass(loader, className)[ FD ]
Line_21 $$ String className = _parseLine(line)-->Line_23 $$ T instance = (T) _getClass(loader, className)[ FD ]
Line_22 $$ if (className != null && keys.add(className)) -->Line_24 $$ services.add(instance)[ CD ]
Line_8 $$ List<T> services = new ArrayList<T>(1)-->Line_24 $$ services.add(instance)[ FD ]
Line_23 $$ T instance = (T) _getClass(loader, className)-->Line_24 $$ services.add(instance)[ FD ]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_28 $$ in.close()[ FD ]
Line_31 $$ if (_LOG.isLoggable(Level.WARNING)) -->Line_31 $$ if (_LOG.isLoggable(Level.WARNING)) [ CD ]
Line_31 $$ if (_LOG.isLoggable(Level.WARNING)) -->Line_32 $$ _LOG.log(Level.WARNING, "Error parsing URL: " + url, e)[ CD ]
Line_10 $$ do -->Line_10 $$ do [ CD ]
Line_6 $$ Enumeration<URL> urls = loader.getResources(serviceUri)-->Line_10 $$ do [ FD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_36 $$ if (services.size() == 1)[ CD ]
Line_8 $$ List<T> services = new ArrayList<T>(1)-->Line_36 $$ if (services.size() == 1)[ FD ]
Line_36 $$ if (services.size() == 1)-->Line_36 $$ return Collections.singletonList(services.get(0))[ CD ]
Line_36 $$ return Collections.singletonList(services.get(0))-->Line_36 $$ return Collections.singletonList(services.get(0))[ CD ]
Line_8 $$ List<T> services = new ArrayList<T>(1)-->Line_36 $$ return Collections.singletonList(services.get(0))[ FD ]
Line_7 $$ if (urls.hasMoreElements()) -->Line_37 $$ return Collections.unmodifiableList(services)[ CD ]
Line_37 $$ return Collections.unmodifiableList(services)-->Line_37 $$ return Collections.unmodifiableList(services)[ CD ]
Line_8 $$ List<T> services = new ArrayList<T>(1)-->Line_37 $$ return Collections.unmodifiableList(services)[ FD ]
Line_40 $$ if (_LOG.isLoggable(Level.SEVERE)) -->Line_40 $$ if (_LOG.isLoggable(Level.SEVERE)) [ CD ]
Line_40 $$ if (_LOG.isLoggable(Level.SEVERE)) -->Line_41 $$ _LOG.log(Level.SEVERE, "Error loading Resource: " + serviceUri, e)[ CD ]
Line_2 $$ public static <T> List<T> getServices(String service) -->Line_44 $$ return Collections.emptyList()[ CD ]
Line_44 $$ return Collections.emptyList()-->Line_44 $$ return Collections.emptyList()[ CD ]
Line_11 $$ URL url = urls.nextElement()-->Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_28 $$ in.close()[ FD ]
Line_19 $$ String line = in.readLine()-->Line_20 $$ if (line == null)[ FD ]
Line_19 $$ String line = in.readLine()-->Line_21 $$ String className = _parseLine(line)[ FD ]
Line_21 $$ String className = _parseLine(line)-->Line_22 $$ if (className != null && keys.add(className)) [ FD ]
Line_21 $$ String className = _parseLine(line)-->Line_23 $$ T instance = (T) _getClass(loader, className)[ FD ]
Line_23 $$ T instance = (T) _getClass(loader, className)-->Line_24 $$ services.add(instance)[ FD ]
