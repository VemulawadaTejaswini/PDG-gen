Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException [ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_3 $$ URL url = new URL(u)[ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_4 $$ Authenticator.setDefault(new HTTPResourceAuthenticator())[ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_5 $$ HTTPResourceAuthenticator.addURL(url)[ CD ]
Line_3 $$ URL url = new URL(u)-->Line_5 $$ HTTPResourceAuthenticator.addURL(url)[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_6 $$ logger.debug("Retrieving " + url.toString())[ CD ]
Line_3 $$ URL url = new URL(u)-->Line_6 $$ logger.debug("Retrieving " + url.toString())[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_7 $$ ByteArrayOutputStream bytes = new ByteArrayOutputStream()[ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_8 $$ URLConnection conn = url.openConnection()[ CD ]
Line_8 $$ URLConnection conn = url.openConnection()-->Line_8 $$ URLConnection conn = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(u)-->Line_8 $$ URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_9 $$ conn.setRequestProperty("User-agent", "PS3 Media Server " + PMS.getVersion())[ CD ]
Line_8 $$ URLConnection conn = url.openConnection()-->Line_9 $$ conn.setRequestProperty("User-agent", "PS3 Media Server " + PMS.getVersion())[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_10 $$ InputStream in = conn.getInputStream()[ CD ]
Line_10 $$ InputStream in = conn.getInputStream()-->Line_10 $$ InputStream in = conn.getInputStream()[ CD ]
Line_8 $$ URLConnection conn = url.openConnection()-->Line_10 $$ InputStream in = conn.getInputStream()[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_11 $$ FileOutputStream fOUT = null[ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_12 $$ if (saveOnDisk && f != null) [ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_12 $$ if (saveOnDisk && f != null) [ FD ]
Line_12 $$ if (saveOnDisk && f != null) -->Line_13 $$ fOUT = new FileOutputStream(f)[ CD ]
Line_11 $$ FileOutputStream fOUT = null-->Line_13 $$ fOUT = new FileOutputStream(f)[ FD ]
Line_13 $$ fOUT = new FileOutputStream(f)-->Line_13 $$ fOUT = new FileOutputStream(f)[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_15 $$ byte buf[] = new byte[4096][ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_16 $$ int n = -1[ CD ]
Line_16 $$ int n = -1-->Line_16 $$ int n = -1[ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_17 $$ while ((n = in.read(buf)) > -1) [ CD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException [ CD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_17 $$ while ((n = in.read(buf)) > -1) [ FD ]
Line_16 $$ int n = -1-->Line_17 $$ while ((n = in.read(buf)) > -1) [ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_17 $$ while ((n = in.read(buf)) > -1) [ CD ]
Line_10 $$ InputStream in = conn.getInputStream()-->Line_17 $$ while ((n = in.read(buf)) > -1) [ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_18 $$ bytes.write(buf, 0, n)[ CD ]
Line_7 $$ ByteArrayOutputStream bytes = new ByteArrayOutputStream()-->Line_18 $$ bytes.write(buf, 0, n)[ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_18 $$ bytes.write(buf, 0, n)[ FD ]
Line_16 $$ int n = -1-->Line_18 $$ bytes.write(buf, 0, n)[ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_19 $$ if (fOUT != null) [ CD ]
Line_11 $$ FileOutputStream fOUT = null-->Line_19 $$ if (fOUT != null) [ FD ]
Line_13 $$ fOUT = new FileOutputStream(f)-->Line_19 $$ if (fOUT != null) [ FD ]
Line_19 $$ if (fOUT != null) -->Line_20 $$ fOUT.write(buf, 0, n)[ CD ]
Line_11 $$ FileOutputStream fOUT = null-->Line_20 $$ fOUT.write(buf, 0, n)[ FD ]
Line_13 $$ fOUT = new FileOutputStream(f)-->Line_20 $$ fOUT.write(buf, 0, n)[ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_20 $$ fOUT.write(buf, 0, n)[ FD ]
Line_16 $$ int n = -1-->Line_20 $$ fOUT.write(buf, 0, n)[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_23 $$ in.close()[ CD ]
Line_10 $$ InputStream in = conn.getInputStream()-->Line_23 $$ in.close()[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_24 $$ if (fOUT != null) [ CD ]
Line_11 $$ FileOutputStream fOUT = null-->Line_24 $$ if (fOUT != null) [ FD ]
Line_13 $$ fOUT = new FileOutputStream(f)-->Line_24 $$ if (fOUT != null) [ FD ]
Line_24 $$ if (fOUT != null) -->Line_25 $$ fOUT.close()[ CD ]
Line_11 $$ FileOutputStream fOUT = null-->Line_25 $$ fOUT.close()[ FD ]
Line_13 $$ fOUT = new FileOutputStream(f)-->Line_25 $$ fOUT.close()[ FD ]
Line_2 $$ protected static byte[] downloadAndSendBinary(String u, boolean saveOnDisk, File f) throws IOException -->Line_27 $$ return bytes.toByteArray()[ CD ]
Line_27 $$ return bytes.toByteArray()-->Line_27 $$ return bytes.toByteArray()[ CD ]
Line_7 $$ ByteArrayOutputStream bytes = new ByteArrayOutputStream()-->Line_27 $$ return bytes.toByteArray()[ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_18 $$ bytes.write(buf, 0, n)[ FD ]
Line_17 $$ while ((n = in.read(buf)) > -1) -->Line_20 $$ fOUT.write(buf, 0, n)[ FD ]
