Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException [ CD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_3 $$ String SEPARATOR = System.getProperty("file.separator")[ CD ]
Line_3 $$ String SEPARATOR = System.getProperty("file.separator")-->Line_3 $$ String SEPARATOR = System.getProperty("file.separator")[ CD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_4 $$ if (lngFileSize > (10 * 1024 * 1024)) [ CD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_4 $$ if (lngFileSize > (10 * 1024 * 1024)) [ FD ]
Line_4 $$ if (lngFileSize > (10 * 1024 * 1024)) -->Line_5 $$ return -1[ CD ]
Line_5 $$ return -1-->Line_5 $$ return -1[ CD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_7 $$ InputStream is = null[ CD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_8 $$ FileOutputStream fos = null[ CD ]
Line_11 $$ if (!dir.exists())-->Line_11 $$ if (!dir.exists())[ CD ]
Line_11 $$ if (!dir.exists())-->Line_11 $$ if (!dir.exists())[ CD ]
Line_10 $$ File dir = new File(strFilePath)-->Line_11 $$ if (!dir.exists())[ FD ]
Line_11 $$ if (!dir.exists())-->Line_11 $$ dir.mkdirs()[ CD ]
Line_10 $$ File dir = new File(strFilePath)-->Line_11 $$ dir.mkdirs()[ FD ]
Line_7 $$ InputStream is = null-->Line_12 $$ is = inputStream[ FD ]
Line_12 $$ is = inputStream-->Line_12 $$ is = inputStream[ FD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_12 $$ is = inputStream[ FD ]
Line_8 $$ FileOutputStream fos = null-->Line_13 $$ fos = new FileOutputStream(new File(strFilePath + SEPARATOR + strFileName))[ FD ]
Line_13 $$ fos = new FileOutputStream(new File(strFilePath + SEPARATOR + strFileName))-->Line_13 $$ fos = new FileOutputStream(new File(strFilePath + SEPARATOR + strFileName))[ FD ]
Line_7 $$ InputStream is = null-->Line_14 $$ IOUtils.copy(is, fos)[ FD ]
Line_12 $$ is = inputStream-->Line_14 $$ IOUtils.copy(is, fos)[ FD ]
Line_8 $$ FileOutputStream fos = null-->Line_14 $$ IOUtils.copy(is, fos)[ FD ]
Line_13 $$ fos = new FileOutputStream(new File(strFilePath + SEPARATOR + strFileName))-->Line_14 $$ IOUtils.copy(is, fos)[ FD ]
Line_16 $$ return -2-->Line_16 $$ return -2[ CD ]
Line_8 $$ FileOutputStream fos = null-->Line_19 $$ fos.close()[ FD ]
Line_13 $$ fos = new FileOutputStream(new File(strFilePath + SEPARATOR + strFileName))-->Line_19 $$ fos.close()[ FD ]
Line_7 $$ InputStream is = null-->Line_20 $$ is.close()[ FD ]
Line_12 $$ is = inputStream-->Line_20 $$ is.close()[ FD ]
Line_2 $$ public static int fileUpload(long lngFileSize, InputStream inputStream, String strFilePath, String strFileName) throws IOException -->Line_24 $$ return 0[ CD ]
