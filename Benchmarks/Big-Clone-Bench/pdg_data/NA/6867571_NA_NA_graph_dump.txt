Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_4 $$ if (started) -->Line_5 $$ return[ CD ]
Line_2 $$ public void run() -->Line_11 $$ BufferedInputStream bis = null[ CD ]
Line_2 $$ public void run() -->Line_12 $$ BufferedOutputStream bos = null[ CD ]
Line_2 $$ public void run() -->Line_13 $$ BufferedReader br = null[ CD ]
Line_18 $$ final URLConnection link-->Line_20 $$ link = url.openConnection()[ FD ]
Line_20 $$ link = url.openConnection()-->Line_20 $$ link = url.openConnection()[ FD ]
Line_20 $$ link = url.openConnection()-->Line_20 $$ link = url.openConnection()[ CD ]
Line_18 $$ final URLConnection link-->Line_21 $$ link.connect()[ FD ]
Line_20 $$ link = url.openConnection()-->Line_21 $$ link.connect()[ FD ]
Line_30 $$ final int length = link.getContentLength()-->Line_30 $$ final int length = link.getContentLength()[ CD ]
Line_18 $$ final URLConnection link-->Line_30 $$ final int length = link.getContentLength()[ FD ]
Line_20 $$ link = url.openConnection()-->Line_30 $$ final int length = link.getContentLength()[ FD ]
Line_39 $$ final InputStream input = link.getInputStream()-->Line_39 $$ final InputStream input = link.getInputStream()[ CD ]
Line_18 $$ final URLConnection link-->Line_39 $$ final InputStream input = link.getInputStream()[ FD ]
Line_20 $$ link = url.openConnection()-->Line_39 $$ final InputStream input = link.getInputStream()[ FD ]
Line_40 $$ if (target instanceof File) -->Line_41 $$ bis = new BufferedInputStream(input)[ CD ]
Line_11 $$ BufferedInputStream bis = null-->Line_41 $$ bis = new BufferedInputStream(input)[ FD ]
Line_41 $$ bis = new BufferedInputStream(input)-->Line_41 $$ bis = new BufferedInputStream(input)[ FD ]
Line_40 $$ if (target instanceof File) -->Line_42 $$ if (target instanceof StringBuilder) [ CD ]
Line_42 $$ if (target instanceof StringBuilder) -->Line_43 $$ final String contentType = link.getContentType().toLowerCase(Locale.ENGLISH)[ CD ]
Line_43 $$ final String contentType = link.getContentType().toLowerCase(Locale.ENGLISH)-->Line_43 $$ final String contentType = link.getContentType().toLowerCase(Locale.ENGLISH)[ CD ]
Line_18 $$ final URLConnection link-->Line_43 $$ final String contentType = link.getContentType().toLowerCase(Locale.ENGLISH)[ FD ]
Line_20 $$ link = url.openConnection()-->Line_43 $$ final String contentType = link.getContentType().toLowerCase(Locale.ENGLISH)[ FD ]
Line_42 $$ if (target instanceof StringBuilder) -->Line_44 $$ String charset = null[ CD ]
Line_42 $$ if (target instanceof StringBuilder) -->Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)[ CD ]
Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)-->Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)[ CD ]
Line_43 $$ final String contentType = link.getContentType().toLowerCase(Locale.ENGLISH)-->Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)[ FD ]
Line_42 $$ if (target instanceof StringBuilder) -->Line_46 $$ if (m.find()) [ CD ]
Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)-->Line_46 $$ if (m.find()) [ FD ]
Line_46 $$ if (m.find()) -->Line_46 $$ if (m.find()) [ CD ]
Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)-->Line_46 $$ if (m.find()) [ FD ]
Line_46 $$ if (m.find()) -->Line_47 $$ charset = m.group(1).trim()[ CD ]
Line_44 $$ String charset = null-->Line_47 $$ charset = m.group(1).trim()[ FD ]
Line_47 $$ charset = m.group(1).trim()-->Line_47 $$ charset = m.group(1).trim()[ FD ]
Line_47 $$ charset = m.group(1).trim()-->Line_47 $$ charset = m.group(1).trim()[ CD ]
Line_45 $$ final Matcher m = Pattern.compile(".*charset[\\s]*=([^;]++).*").matcher(contentType)-->Line_47 $$ charset = m.group(1).trim()[ FD ]
Line_42 $$ if (target instanceof StringBuilder) -->Line_49 $$ if ((charset != null) && !charset.isEmpty()) [ CD ]
Line_49 $$ if ((charset != null) && !charset.isEmpty()) -->Line_49 $$ if ((charset != null) && !charset.isEmpty()) [ CD ]
Line_44 $$ String charset = null-->Line_49 $$ if ((charset != null) && !charset.isEmpty()) [ FD ]
Line_47 $$ charset = m.group(1).trim()-->Line_49 $$ if ((charset != null) && !charset.isEmpty()) [ FD ]
Line_13 $$ BufferedReader br = null-->Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))[ FD ]
Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))-->Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))[ FD ]
Line_13 $$ BufferedReader br = null-->Line_53 $$ br = null[ FD ]
Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))-->Line_53 $$ br = null[ FD ]
Line_53 $$ br = null-->Line_53 $$ br = null[ FD ]
Line_42 $$ if (target instanceof StringBuilder) -->Line_56 $$ if (br == null) [ CD ]
Line_13 $$ BufferedReader br = null-->Line_56 $$ if (br == null) [ FD ]
Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))-->Line_56 $$ if (br == null) [ FD ]
Line_53 $$ br = null-->Line_56 $$ if (br == null) [ FD ]
Line_56 $$ if (br == null) -->Line_57 $$ br = new BufferedReader(new InputStreamReader(input))[ CD ]
Line_13 $$ BufferedReader br = null-->Line_57 $$ br = new BufferedReader(new InputStreamReader(input))[ FD ]
Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))-->Line_57 $$ br = new BufferedReader(new InputStreamReader(input))[ FD ]
Line_53 $$ br = null-->Line_57 $$ br = new BufferedReader(new InputStreamReader(input))[ FD ]
Line_57 $$ br = new BufferedReader(new InputStreamReader(input))-->Line_57 $$ br = new BufferedReader(new InputStreamReader(input))[ FD ]
Line_65 $$ if (target instanceof File) -->Line_66 $$ checkState()[ CD ]
Line_71 $$ final File parent = f.getParentFile()-->Line_71 $$ final File parent = f.getParentFile()[ CD ]
Line_70 $$ final File f = (File) target-->Line_71 $$ final File parent = f.getParentFile()[ FD ]
Line_72 $$ if ((parent != null) && !parent.exists()) -->Line_72 $$ if ((parent != null) && !parent.exists()) [ CD ]
Line_71 $$ final File parent = f.getParentFile()-->Line_72 $$ if ((parent != null) && !parent.exists()) [ FD ]
Line_72 $$ if ((parent != null) && !parent.exists()) -->Line_73 $$ parent.mkdirs()[ CD ]
Line_71 $$ final File parent = f.getParentFile()-->Line_73 $$ parent.mkdirs()[ FD ]
Line_12 $$ BufferedOutputStream bos = null-->Line_75 $$ bos = new BufferedOutputStream(new FileOutputStream(f))[ FD ]
Line_75 $$ bos = new BufferedOutputStream(new FileOutputStream(f))-->Line_75 $$ bos = new BufferedOutputStream(new FileOutputStream(f))[ FD ]
Line_85 $$ if (target instanceof File) -->Line_86 $$ final byte[] byteBuffer = new byte[BUFFER_SIZE][ CD ]
Line_85 $$ if (target instanceof File) -->Line_87 $$ while (true) [ CD ]
Line_85 $$ if (target instanceof File) -->Line_85 $$ if (target instanceof File) [ CD ]
Line_87 $$ while (true) -->Line_88 $$ checkState()[ CD ]
Line_87 $$ while (true) -->Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)[ CD ]
Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)-->Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)[ CD ]
Line_11 $$ BufferedInputStream bis = null-->Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)[ FD ]
Line_41 $$ bis = new BufferedInputStream(input)-->Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)[ FD ]
Line_86 $$ final byte[] byteBuffer = new byte[BUFFER_SIZE]-->Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)[ FD ]
Line_87 $$ while (true) -->Line_90 $$ if (byteCount == -1) [ CD ]
Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)-->Line_90 $$ if (byteCount == -1) [ FD ]
Line_87 $$ while (true) -->Line_93 $$ bos.write(byteBuffer, 0, byteCount)[ CD ]
Line_12 $$ BufferedOutputStream bos = null-->Line_93 $$ bos.write(byteBuffer, 0, byteCount)[ FD ]
Line_75 $$ bos = new BufferedOutputStream(new FileOutputStream(f))-->Line_93 $$ bos.write(byteBuffer, 0, byteCount)[ FD ]
Line_86 $$ final byte[] byteBuffer = new byte[BUFFER_SIZE]-->Line_93 $$ bos.write(byteBuffer, 0, byteCount)[ FD ]
Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)-->Line_93 $$ bos.write(byteBuffer, 0, byteCount)[ FD ]
Line_85 $$ if (target instanceof File) -->Line_99 $$ if (target instanceof StringBuilder) [ CD ]
Line_99 $$ if (target instanceof StringBuilder) -->Line_100 $$ final char[] charBuffer = new char[BUFFER_SIZE][ CD ]
Line_99 $$ if (target instanceof StringBuilder) -->Line_101 $$ final StringBuilder sb = (StringBuilder) target[ CD ]
Line_99 $$ if (target instanceof StringBuilder) -->Line_102 $$ while (true) [ CD ]
Line_99 $$ if (target instanceof StringBuilder) -->Line_99 $$ if (target instanceof StringBuilder) [ CD ]
Line_102 $$ while (true) -->Line_103 $$ checkState()[ CD ]
Line_102 $$ while (true) -->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ CD ]
Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)-->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ CD ]
Line_13 $$ BufferedReader br = null-->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ FD ]
Line_51 $$ br = new BufferedReader(new InputStreamReader(input, charset))-->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ FD ]
Line_53 $$ br = null-->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ FD ]
Line_57 $$ br = new BufferedReader(new InputStreamReader(input))-->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ FD ]
Line_100 $$ final char[] charBuffer = new char[BUFFER_SIZE]-->Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)[ FD ]
Line_102 $$ while (true) -->Line_105 $$ if (charCount == -1) [ CD ]
Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)-->Line_105 $$ if (charCount == -1) [ FD ]
Line_102 $$ while (true) -->Line_108 $$ sb.append(charBuffer, 0, charCount)[ CD ]
Line_101 $$ final StringBuilder sb = (StringBuilder) target-->Line_108 $$ sb.append(charBuffer, 0, charCount)[ FD ]
Line_100 $$ final char[] charBuffer = new char[BUFFER_SIZE]-->Line_108 $$ sb.append(charBuffer, 0, charCount)[ FD ]
Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)-->Line_108 $$ sb.append(charBuffer, 0, charCount)[ FD ]
Line_125 $$ for (Closeable c : new Closeable[] -->Line_126 $$ if (c != null) [ FD ]
Line_125 $$ for (Closeable c : new Closeable[] -->Line_128 $$ c.close()[ FD ]
Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)-->Line_90 $$ if (byteCount == -1) [ FD ]
Line_89 $$ final int byteCount = bis.read(byteBuffer, 0, BUFFER_SIZE)-->Line_93 $$ bos.write(byteBuffer, 0, byteCount)[ FD ]
Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)-->Line_105 $$ if (charCount == -1) [ FD ]
Line_104 $$ final int charCount = br.read(charBuffer, 0, BUFFER_SIZE)-->Line_108 $$ sb.append(charBuffer, 0, charCount)[ FD ]
