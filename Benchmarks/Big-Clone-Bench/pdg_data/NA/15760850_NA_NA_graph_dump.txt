Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ File container = new File(ArchiveFeature.class.getProtectionDomain().getCodeSource().getLocation().toURI())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ if (container == null) [ CD ]
Line_3 $$ File container = new File(ArchiveFeature.class.getProtectionDomain().getCodeSource().getLocation().toURI())-->Line_4 $$ if (container == null) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ JarFile jarFile = new JarFile(container)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ String artifactName = PROJECT_DIST_ARCHIVE + ".tar.gz"[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ File artifactFile = new File(".", artifactName)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ ZipEntry artifactEntry = jarFile.getEntry(artifactName)[ CD ]
Line_10 $$ ZipEntry artifactEntry = jarFile.getEntry(artifactName)-->Line_10 $$ ZipEntry artifactEntry = jarFile.getEntry(artifactName)[ CD ]
Line_7 $$ JarFile jarFile = new JarFile(container)-->Line_10 $$ ZipEntry artifactEntry = jarFile.getEntry(artifactName)[ FD ]
Line_8 $$ String artifactName = PROJECT_DIST_ARCHIVE + ".tar.gz"-->Line_10 $$ ZipEntry artifactEntry = jarFile.getEntry(artifactName)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)[ CD ]
Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)-->Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)[ CD ]
Line_7 $$ JarFile jarFile = new JarFile(container)-->Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)[ FD ]
Line_10 $$ ZipEntry artifactEntry = jarFile.getEntry(artifactName)-->Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)[ FD ]
Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)-->Line_15 $$ IOUtils.copy(source, dest)[ FD ]
Line_13 $$ FileOutputStream dest = new FileOutputStream(artifactFile)-->Line_15 $$ IOUtils.copy(source, dest)[ FD ]
Line_13 $$ FileOutputStream dest = new FileOutputStream(artifactFile)-->Line_17 $$ IOUtils.closeQuietly(dest)[ FD ]
Line_11 $$ InputStream source = jarFile.getInputStream(artifactEntry)-->Line_20 $$ IOUtils.closeQuietly(source)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ Project project = new Project()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ project.setName("project")[ CD ]
Line_22 $$ Project project = new Project()-->Line_23 $$ project.setName("project")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ project.init()[ CD ]
Line_22 $$ Project project = new Project()-->Line_24 $$ project.init()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_25 $$ Target target = new Target()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_26 $$ target.setName("target")[ CD ]
Line_25 $$ Target target = new Target()-->Line_26 $$ target.setName("target")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_27 $$ project.addTarget(target)[ CD ]
Line_22 $$ Project project = new Project()-->Line_27 $$ project.addTarget(target)[ FD ]
Line_25 $$ Target target = new Target()-->Line_27 $$ project.addTarget(target)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_28 $$ project.addBuildListener(new Log4jListener())[ CD ]
Line_22 $$ Project project = new Project()-->Line_28 $$ project.addBuildListener(new Log4jListener())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_29 $$ Untar untar = new Untar()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_30 $$ untar.setTaskName("untar")[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_30 $$ untar.setTaskName("untar")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_31 $$ untar.setSrc(artifactFile)[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_31 $$ untar.setSrc(artifactFile)[ FD ]
Line_9 $$ File artifactFile = new File(".", artifactName)-->Line_31 $$ untar.setSrc(artifactFile)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_32 $$ untar.setDest(new File("."))[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_32 $$ untar.setDest(new File("."))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_33 $$ Untar.UntarCompressionMethod method = new Untar.UntarCompressionMethod()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_34 $$ method.setValue("gzip")[ CD ]
Line_33 $$ Untar.UntarCompressionMethod method = new Untar.UntarCompressionMethod()-->Line_34 $$ method.setValue("gzip")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_35 $$ untar.setCompression(method)[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_35 $$ untar.setCompression(method)[ FD ]
Line_33 $$ Untar.UntarCompressionMethod method = new Untar.UntarCompressionMethod()-->Line_35 $$ untar.setCompression(method)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_36 $$ untar.setProject(project)[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_36 $$ untar.setProject(project)[ FD ]
Line_22 $$ Project project = new Project()-->Line_36 $$ untar.setProject(project)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_37 $$ untar.setOwningTarget(target)[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_37 $$ untar.setOwningTarget(target)[ FD ]
Line_25 $$ Target target = new Target()-->Line_37 $$ untar.setOwningTarget(target)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_38 $$ target.addTask(untar)[ CD ]
Line_25 $$ Target target = new Target()-->Line_38 $$ target.addTask(untar)[ FD ]
Line_29 $$ Untar untar = new Untar()-->Line_38 $$ target.addTask(untar)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_39 $$ untar.execute()[ CD ]
Line_29 $$ Untar untar = new Untar()-->Line_39 $$ untar.execute()[ FD ]
