Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private byte[] loadResourceFromCodeBase(String name) [ CD ]
Line_2 $$ private byte[] loadResourceFromCodeBase(String name) -->Line_3 $$ byte[] bytecode[ CD ]
Line_2 $$ private byte[] loadResourceFromCodeBase(String name) -->Line_4 $$ InputStream is = null[ CD ]
Line_2 $$ private byte[] loadResourceFromCodeBase(String name) -->Line_5 $$ logger.debug("LoadResourceFromCodeBase()++")[ CD ]
Line_8 $$ int content_length = -1-->Line_8 $$ int content_length = -1[ CD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_9 $$ URLConnection connection = url.openConnection()[ CD ]
Line_7 $$ URL url = new URL(this._codeBase, name)-->Line_9 $$ URLConnection connection = url.openConnection()[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_10 $$ connection.setRequestProperty("user-agent", "Aglets/1.1")[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_11 $$ connection.setRequestProperty("agent-system", "aglets")[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_12 $$ connection.setRequestProperty("agent-language", "java")[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_13 $$ connection.setDoInput(true)[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_14 $$ connection.setUseCaches(false)[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_15 $$ connection.connect()[ FD ]
Line_4 $$ InputStream is = null-->Line_16 $$ is = connection.getInputStream()[ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_16 $$ is = connection.getInputStream()[ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_16 $$ is = connection.getInputStream()[ CD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_16 $$ is = connection.getInputStream()[ FD ]
Line_8 $$ int content_length = -1-->Line_17 $$ content_length = connection.getContentLength()[ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_17 $$ content_length = connection.getContentLength()[ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_17 $$ content_length = connection.getContentLength()[ CD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_17 $$ content_length = connection.getContentLength()[ FD ]
Line_8 $$ int content_length = -1-->Line_18 $$ if (content_length < 0) [ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_18 $$ if (content_length < 0) [ FD ]
Line_18 $$ if (content_length < 0) -->Line_19 $$ content_length = is.available()[ CD ]
Line_8 $$ int content_length = -1-->Line_19 $$ content_length = is.available()[ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_19 $$ content_length = is.available()[ FD ]
Line_19 $$ content_length = is.available()-->Line_19 $$ content_length = is.available()[ FD ]
Line_19 $$ content_length = is.available()-->Line_19 $$ content_length = is.available()[ CD ]
Line_4 $$ InputStream is = null-->Line_19 $$ content_length = is.available()[ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_19 $$ content_length = is.available()[ FD ]
Line_8 $$ int content_length = -1-->Line_21 $$ if (content_length == 0) [ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_21 $$ if (content_length == 0) [ FD ]
Line_19 $$ content_length = is.available()-->Line_21 $$ if (content_length == 0) [ FD ]
Line_21 $$ if (content_length == 0) -->Line_22 $$ return null[ CD ]
Line_3 $$ byte[] bytecode-->Line_24 $$ bytecode = new byte[content_length][ FD ]
Line_24 $$ bytecode = new byte[content_length]-->Line_24 $$ bytecode = new byte[content_length][ FD ]
Line_8 $$ int content_length = -1-->Line_26 $$ while (content_length > 0) [ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_26 $$ while (content_length > 0) [ FD ]
Line_19 $$ content_length = is.available()-->Line_26 $$ while (content_length > 0) [ FD ]
Line_26 $$ while (content_length > 0) -->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ CD ]
Line_27 $$ int read = is.read(bytecode, offset, content_length)-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ CD ]
Line_4 $$ InputStream is = null-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_3 $$ byte[] bytecode-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_24 $$ bytecode = new byte[content_length]-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_25 $$ int offset = 0-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_8 $$ int content_length = -1-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_19 $$ content_length = is.available()-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_26 $$ while (content_length > 0) -->Line_28 $$ offset += read[ CD ]
Line_28 $$ offset += read-->Line_28 $$ offset += read[ FD ]
Line_25 $$ int offset = 0-->Line_28 $$ offset += read[ FD ]
Line_27 $$ int read = is.read(bytecode, offset, content_length)-->Line_28 $$ offset += read[ FD ]
Line_26 $$ while (content_length > 0) -->Line_29 $$ content_length -= read[ CD ]
Line_29 $$ content_length -= read-->Line_29 $$ content_length -= read[ FD ]
Line_8 $$ int content_length = -1-->Line_29 $$ content_length -= read[ FD ]
Line_17 $$ content_length = connection.getContentLength()-->Line_29 $$ content_length -= read[ FD ]
Line_19 $$ content_length = is.available()-->Line_29 $$ content_length -= read[ FD ]
Line_27 $$ int read = is.read(bytecode, offset, content_length)-->Line_29 $$ content_length -= read[ FD ]
Line_4 $$ InputStream is = null-->Line_31 $$ is.close()[ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_31 $$ is.close()[ FD ]
Line_3 $$ byte[] bytecode-->Line_34 $$ bytecode = null[ FD ]
Line_24 $$ bytecode = new byte[content_length]-->Line_34 $$ bytecode = null[ FD ]
Line_34 $$ bytecode = null-->Line_34 $$ bytecode = null[ FD ]
Line_4 $$ InputStream is = null-->Line_36 $$ if (is != null) [ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_36 $$ if (is != null) [ FD ]
Line_4 $$ InputStream is = null-->Line_38 $$ is.close()[ FD ]
Line_16 $$ is = connection.getInputStream()-->Line_38 $$ is.close()[ FD ]
Line_2 $$ private byte[] loadResourceFromCodeBase(String name) -->Line_44 $$ logger.debug("LoadResourceFromCodeBase()--")[ CD ]
Line_2 $$ private byte[] loadResourceFromCodeBase(String name) -->Line_45 $$ return bytecode[ CD ]
Line_29 $$ content_length -= read-->Line_26 $$ while (content_length > 0) [ FD ]
Line_29 $$ content_length -= read-->Line_26 $$ while (content_length > 0) [ FD ]
Line_28 $$ offset += read-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_29 $$ content_length -= read-->Line_27 $$ int read = is.read(bytecode, offset, content_length)[ FD ]
Line_27 $$ int read = is.read(bytecode, offset, content_length)-->Line_28 $$ offset += read[ FD ]
Line_27 $$ int read = is.read(bytecode, offset, content_length)-->Line_29 $$ content_length -= read[ FD ]
