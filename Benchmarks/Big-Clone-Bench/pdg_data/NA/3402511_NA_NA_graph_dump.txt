Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) [ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_3 $$ InputStream in = null[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_4 $$ EntryOutputStream out = null[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_5 $$ processAndCreateFolderEntries(zip64File, parseTargetPath(targetPath.getName(), toWrite), compress)[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_5 $$ processAndCreateFolderEntries(zip64File, parseTargetPath(targetPath.getName(), toWrite), compress)[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_5 $$ processAndCreateFolderEntries(zip64File, parseTargetPath(targetPath.getName(), toWrite), compress)[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_5 $$ processAndCreateFolderEntries(zip64File, parseTargetPath(targetPath.getName(), toWrite), compress)[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_5 $$ processAndCreateFolderEntries(zip64File, parseTargetPath(targetPath.getName(), toWrite), compress)[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_7 $$ if (!compress) [ FD ]
Line_7 $$ if (!compress) -->Line_7 $$ if (!compress) [ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_7 $$ if (!compress) [ FD ]
Line_7 $$ if (!compress) -->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ CD ]
Line_4 $$ EntryOutputStream out = null-->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ FD ]
Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))-->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ FD ]
Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))-->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))[ FD ]
Line_7 $$ if (!compress) -->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ CD ]
Line_4 $$ EntryOutputStream out = null-->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ FD ]
Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))-->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ FD ]
Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))-->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ FD ]
Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))-->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))[ FD ]
Line_12 $$ if (!targetPath.isDirectory()) -->Line_12 $$ if (!targetPath.isDirectory()) [ CD ]
Line_12 $$ if (!targetPath.isDirectory()) -->Line_12 $$ if (!targetPath.isDirectory()) [ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_12 $$ if (!targetPath.isDirectory()) [ FD ]
Line_12 $$ if (!targetPath.isDirectory()) -->Line_13 $$ in = new FileInputStream(toWrite)[ CD ]
Line_3 $$ InputStream in = null-->Line_13 $$ in = new FileInputStream(toWrite)[ FD ]
Line_13 $$ in = new FileInputStream(toWrite)-->Line_13 $$ in = new FileInputStream(toWrite)[ FD ]
Line_12 $$ if (!targetPath.isDirectory()) -->Line_14 $$ IOUtils.copyLarge(in, out)[ CD ]
Line_3 $$ InputStream in = null-->Line_14 $$ IOUtils.copyLarge(in, out)[ FD ]
Line_13 $$ in = new FileInputStream(toWrite)-->Line_14 $$ IOUtils.copyLarge(in, out)[ FD ]
Line_4 $$ EntryOutputStream out = null-->Line_14 $$ IOUtils.copyLarge(in, out)[ FD ]
Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))-->Line_14 $$ IOUtils.copyLarge(in, out)[ FD ]
Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))-->Line_14 $$ IOUtils.copyLarge(in, out)[ FD ]
Line_12 $$ if (!targetPath.isDirectory()) -->Line_15 $$ in.close()[ CD ]
Line_3 $$ InputStream in = null-->Line_15 $$ in.close()[ FD ]
Line_13 $$ in = new FileInputStream(toWrite)-->Line_15 $$ in.close()[ FD ]
Line_4 $$ EntryOutputStream out = null-->Line_17 $$ out.flush()[ FD ]
Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))-->Line_17 $$ out.flush()[ FD ]
Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))-->Line_17 $$ out.flush()[ FD ]
Line_4 $$ EntryOutputStream out = null-->Line_18 $$ out.close()[ FD ]
Line_8 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_STORED, getFileDate(toWrite))-->Line_18 $$ out.close()[ FD ]
Line_10 $$ out = zip64File.openEntryOutputStream(targetPath.getName(), FileEntry.iMETHOD_DEFLATED, getFileDate(toWrite))-->Line_18 $$ out.close()[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_19 $$ if (targetPath.isDirectory()) [ FD ]
Line_19 $$ if (targetPath.isDirectory()) -->Line_19 $$ if (targetPath.isDirectory()) [ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_19 $$ if (targetPath.isDirectory()) [ FD ]
Line_19 $$ if (targetPath.isDirectory()) -->Line_20 $$ log.info("[createZip] Written folder entry to zip: " + targetPath.getName())[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_20 $$ log.info("[createZip] Written folder entry to zip: " + targetPath.getName())[ FD ]
Line_19 $$ if (targetPath.isDirectory()) -->Line_22 $$ log.info("[createZip] Written file entry to zip: " + targetPath.getName())[ CD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_22 $$ log.info("[createZip] Written file entry to zip: " + targetPath.getName())[ FD ]
Line_2 $$ private static FileEntry writeEntry(Zip64File zip64File, FileEntry targetPath, File toWrite, boolean compress) -->Line_31 $$ return targetPath[ CD ]
