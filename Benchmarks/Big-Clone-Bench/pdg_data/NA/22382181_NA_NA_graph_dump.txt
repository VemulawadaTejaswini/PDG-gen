Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean copy(File src, File dest, byte[] b) [ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_3 $$ if (src.isDirectory()) [ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_3 $$ if (src.isDirectory()) [ FD ]
Line_3 $$ if (src.isDirectory()) -->Line_3 $$ if (src.isDirectory()) [ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_3 $$ if (src.isDirectory()) [ FD ]
Line_3 $$ if (src.isDirectory()) -->Line_4 $$ String[] ss = src.list()[ CD ]
Line_4 $$ String[] ss = src.list()-->Line_4 $$ String[] ss = src.list()[ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_4 $$ String[] ss = src.list()[ FD ]
Line_3 $$ if (src.isDirectory()) -->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ CD ]
Line_3 $$ if (src.isDirectory()) -->Line_3 $$ if (src.isDirectory()) [ CD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ CD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ CD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ FD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ CD ]
Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ CD ]
Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ FD ]
Line_5 $$ if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ return false[ CD ]
Line_3 $$ if (src.isDirectory()) -->Line_6 $$ return true[ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_8 $$ delete(dest)[ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_8 $$ delete(dest)[ FD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_9 $$ dest.getParentFile().mkdirs()[ CD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_9 $$ dest.getParentFile().mkdirs()[ FD ]
Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)-->Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)[ FD ]
Line_15 $$ int read-->Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)[ FD ]
Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)-->Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)[ CD ]
Line_11 $$ FileInputStream fis = new FileInputStream(src)-->Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)[ FD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)[ FD ]
Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)-->Line_16 $$ fos.write(b, 0, read)[ CD ]
Line_13 $$ FileOutputStream fos = new FileOutputStream(dest)-->Line_16 $$ fos.write(b, 0, read)[ FD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_16 $$ fos.write(b, 0, read)[ FD ]
Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)-->Line_16 $$ fos.write(b, 0, read)[ FD ]
Line_15 $$ int read-->Line_16 $$ fos.write(b, 0, read)[ FD ]
Line_13 $$ FileOutputStream fos = new FileOutputStream(dest)-->Line_19 $$ fos.close()[ FD ]
Line_2 $$ public boolean copy(File src, File dest, byte[] b) -->Line_22 $$ register(dest)[ FD ]
Line_11 $$ FileInputStream fis = new FileInputStream(src)-->Line_25 $$ fis.close()[ FD ]
Line_27 $$ if (log.isDebugEnabled())-->Line_27 $$ if (log.isDebugEnabled())[ CD ]
Line_27 $$ if (log.isDebugEnabled())-->Line_27 $$ log.debug("Success: M-COPY " + src + " -> " + dest)[ CD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ FD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ FD ]
Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))-->Line_5 $$ for (int i = 0; i < ss.length; i++) if (!copy(new File(src, ss[i]), new File(dest, ss[i]), b))[ FD ]
Line_16 $$ while ((read = fis.read(b)) != -1) fos.write(b, 0, read)-->Line_16 $$ fos.write(b, 0, read)[ FD ]
