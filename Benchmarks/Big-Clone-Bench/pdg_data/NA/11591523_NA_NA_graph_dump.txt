Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException [ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_3 $$ if (version < 0 || version > 1)[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_4 $$ if (value < 0 || value > hashLength)[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_5 $$ if (resource.contains(":"))[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_5 $$ if (resource.contains(":"))[ FD ]
Line_5 $$ if (resource.contains(":"))-->Line_5 $$ if (resource.contains(":"))[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_5 $$ if (resource.contains(":"))[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_6 $$ HashCash result = new HashCash()[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")[ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")-->Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_8 $$ result.myResource = resource[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_8 $$ result.myResource = resource[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_9 $$ result.myExtensions = (null == extensions ? new HashMap<String, List<String>>() : extensions)[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_10 $$ result.myDate = date[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_10 $$ result.myDate = date[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_11 $$ result.myVersion = version[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_11 $$ result.myVersion = version[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_12 $$ String prefix[ CD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_13 $$ SimpleDateFormat dateFormat = new SimpleDateFormat(dateFormatString)[ CD ]
Line_12 $$ String prefix-->Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"-->Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_13 $$ SimpleDateFormat dateFormat = new SimpleDateFormat(dateFormatString)-->Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_17 $$ result.myToken = generateCash(prefix, value, md)-->Line_17 $$ result.myToken = generateCash(prefix, value, md)[ CD ]
Line_12 $$ String prefix-->Line_17 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"-->Line_17 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_17 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")-->Line_17 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")-->Line_18 $$ md.reset()[ FD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")-->Line_19 $$ md.update(result.myToken.getBytes())[ FD ]
Line_20 $$ result.myValue = numberOfLeadingZeros(md.digest())-->Line_20 $$ result.myValue = numberOfLeadingZeros(md.digest())[ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")-->Line_20 $$ result.myValue = numberOfLeadingZeros(md.digest())[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_23 $$ result.myValue = value[ FD ]
Line_12 $$ String prefix-->Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"-->Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"-->Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_13 $$ SimpleDateFormat dateFormat = new SimpleDateFormat(dateFormatString)-->Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"[ FD ]
Line_25 $$ result.myToken = generateCash(prefix, value, md)-->Line_25 $$ result.myToken = generateCash(prefix, value, md)[ CD ]
Line_12 $$ String prefix-->Line_25 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_16 $$ prefix = version + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"-->Line_25 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_24 $$ prefix = version + ":" + value + ":" + dateFormat.format(date.getTime()) + ":" + resource + ":" + serializeExtensions(extensions) + ":"-->Line_25 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_25 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("SHA1")-->Line_25 $$ result.myToken = generateCash(prefix, value, md)[ FD ]
Line_2 $$ public static HashCash mintCash(String resource, Map<String, List<String>> extensions, Calendar date, int value, int version) throws NoSuchAlgorithmException -->Line_30 $$ return result[ CD ]
