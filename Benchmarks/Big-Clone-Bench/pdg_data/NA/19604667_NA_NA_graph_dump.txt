Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String saveFile(URL url) [ CD ]
Line_2 $$ public String saveFile(URL url) -->Line_3 $$ String newUrlToReturn = url.toString()[ CD ]
Line_3 $$ String newUrlToReturn = url.toString()-->Line_3 $$ String newUrlToReturn = url.toString()[ CD ]
Line_2 $$ public String saveFile(URL url) -->Line_3 $$ String newUrlToReturn = url.toString()[ FD ]
Line_5 $$ String directory = Util.appendDirPath(targetDirectory, OBJ_REPOSITORY)-->Line_5 $$ String directory = Util.appendDirPath(targetDirectory, OBJ_REPOSITORY)[ CD ]
Line_6 $$ String category = url.openConnection().getContentType()-->Line_6 $$ String category = url.openConnection().getContentType()[ CD ]
Line_2 $$ public String saveFile(URL url) -->Line_6 $$ String category = url.openConnection().getContentType()[ FD ]
Line_6 $$ String category = url.openConnection().getContentType()-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ FD ]
Line_7 $$ category = category.substring(0, category.indexOf("/"))-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ FD ]
Line_7 $$ category = category.substring(0, category.indexOf("/"))-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ CD ]
Line_6 $$ String category = url.openConnection().getContentType()-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ FD ]
Line_7 $$ category = category.substring(0, category.indexOf("/"))-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ FD ]
Line_6 $$ String category = url.openConnection().getContentType()-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ FD ]
Line_7 $$ category = category.substring(0, category.indexOf("/"))-->Line_7 $$ category = category.substring(0, category.indexOf("/"))[ FD ]
Line_8 $$ String fileUrl = Util.transformUrlToPath(url.toString())-->Line_8 $$ String fileUrl = Util.transformUrlToPath(url.toString())[ CD ]
Line_2 $$ public String saveFile(URL url) -->Line_8 $$ String fileUrl = Util.transformUrlToPath(url.toString())[ FD ]
Line_5 $$ String directory = Util.appendDirPath(targetDirectory, OBJ_REPOSITORY)-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ FD ]
Line_9 $$ directory = Util.appendDirPath(directory, category)-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ FD ]
Line_9 $$ directory = Util.appendDirPath(directory, category)-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ CD ]
Line_5 $$ String directory = Util.appendDirPath(targetDirectory, OBJ_REPOSITORY)-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ FD ]
Line_9 $$ directory = Util.appendDirPath(directory, category)-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ FD ]
Line_6 $$ String category = url.openConnection().getContentType()-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ FD ]
Line_7 $$ category = category.substring(0, category.indexOf("/"))-->Line_9 $$ directory = Util.appendDirPath(directory, category)[ FD ]
Line_5 $$ String directory = Util.appendDirPath(targetDirectory, OBJ_REPOSITORY)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_9 $$ directory = Util.appendDirPath(directory, category)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ CD ]
Line_5 $$ String directory = Util.appendDirPath(targetDirectory, OBJ_REPOSITORY)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_9 $$ directory = Util.appendDirPath(directory, category)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_8 $$ String fileUrl = Util.transformUrlToPath(url.toString())-->Line_10 $$ directory = Util.appendDirPath(directory, fileUrl)[ FD ]
Line_11 $$ String objectFileName = url.toString().substring(url.toString().lastIndexOf('/') + 1)-->Line_11 $$ String objectFileName = url.toString().substring(url.toString().lastIndexOf('/') + 1)[ CD ]
Line_2 $$ public String saveFile(URL url) -->Line_11 $$ String objectFileName = url.toString().substring(url.toString().lastIndexOf('/') + 1)[ FD ]
Line_2 $$ public String saveFile(URL url) -->Line_11 $$ String objectFileName = url.toString().substring(url.toString().lastIndexOf('/') + 1)[ FD ]
Line_2 $$ public String saveFile(URL url) -->Line_12 $$ BufferedInputStream in = new java.io.BufferedInputStream(url.openStream())[ FD ]
Line_14 $$ if (!dir.exists()) -->Line_14 $$ if (!dir.exists()) [ CD ]
Line_14 $$ if (!dir.exists()) -->Line_14 $$ if (!dir.exists()) [ CD ]
Line_13 $$ File dir = new File(directory)-->Line_14 $$ if (!dir.exists()) [ FD ]
Line_14 $$ if (!dir.exists()) -->Line_15 $$ dir.mkdirs()[ CD ]
Line_13 $$ File dir = new File(directory)-->Line_15 $$ dir.mkdirs()[ FD ]
Line_11 $$ String objectFileName = url.toString().substring(url.toString().lastIndexOf('/') + 1)-->Line_17 $$ File file = new File(Util.appendDirPath(dir.getPath(), objectFileName))[ FD ]
Line_13 $$ File dir = new File(directory)-->Line_17 $$ File file = new File(Util.appendDirPath(dir.getPath(), objectFileName))[ FD ]
Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) -->Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) [ FD ]
Line_21 $$ int count-->Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) [ FD ]
Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) -->Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) [ CD ]
Line_12 $$ BufferedInputStream in = new java.io.BufferedInputStream(url.openStream())-->Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) [ FD ]
Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) -->Line_23 $$ bout.write(data, 0, count)[ CD ]
Line_19 $$ BufferedOutputStream bout = new BufferedOutputStream(fos, 1024)-->Line_23 $$ bout.write(data, 0, count)[ FD ]
Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) -->Line_23 $$ bout.write(data, 0, count)[ FD ]
Line_21 $$ int count-->Line_23 $$ bout.write(data, 0, count)[ FD ]
Line_19 $$ BufferedOutputStream bout = new BufferedOutputStream(fos, 1024)-->Line_25 $$ bout.close()[ FD ]
Line_18 $$ FileOutputStream fos = new FileOutputStream(file)-->Line_26 $$ fos.close()[ FD ]
Line_12 $$ BufferedInputStream in = new java.io.BufferedInputStream(url.openStream())-->Line_27 $$ in.close()[ FD ]
Line_3 $$ String newUrlToReturn = url.toString()-->Line_28 $$ newUrlToReturn = Util.getRelativePath(file.getAbsolutePath(), targetDirectory)[ FD ]
Line_28 $$ newUrlToReturn = Util.getRelativePath(file.getAbsolutePath(), targetDirectory)-->Line_28 $$ newUrlToReturn = Util.getRelativePath(file.getAbsolutePath(), targetDirectory)[ FD ]
Line_28 $$ newUrlToReturn = Util.getRelativePath(file.getAbsolutePath(), targetDirectory)-->Line_28 $$ newUrlToReturn = Util.getRelativePath(file.getAbsolutePath(), targetDirectory)[ CD ]
Line_17 $$ File file = new File(Util.appendDirPath(dir.getPath(), objectFileName))-->Line_28 $$ newUrlToReturn = Util.getRelativePath(file.getAbsolutePath(), targetDirectory)[ FD ]
Line_2 $$ public String saveFile(URL url) -->Line_32 $$ return newUrlToReturn[ CD ]
Line_22 $$ while ((count = in.read(data, 0, 1024)) != -1) -->Line_23 $$ bout.write(data, 0, count)[ FD ]
