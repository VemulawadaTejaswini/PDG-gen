Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException [ CD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_3 $$ String uniqueName = path.getBaseName()[ CD ]
Line_3 $$ String uniqueName = path.getBaseName()-->Line_3 $$ String uniqueName = path.getBaseName()[ CD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_3 $$ String uniqueName = path.getBaseName()[ FD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_4 $$ URL url = buildURL(uniqueName)[ CD ]
Line_4 $$ URL url = buildURL(uniqueName)-->Line_4 $$ URL url = buildURL(uniqueName)[ CD ]
Line_3 $$ String uniqueName = path.getBaseName()-->Line_4 $$ URL url = buildURL(uniqueName)[ FD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)[ CD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_6 $$ content.setUniqueName(uniqueName)[ CD ]
Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)-->Line_6 $$ content.setUniqueName(uniqueName)[ FD ]
Line_3 $$ String uniqueName = path.getBaseName()-->Line_6 $$ content.setUniqueName(uniqueName)[ FD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_7 $$ content.setReadable(true)[ CD ]
Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)-->Line_7 $$ content.setReadable(true)[ FD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_8 $$ content.setWritable(writable)[ CD ]
Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)-->Line_8 $$ content.setWritable(writable)[ FD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_9 $$ content.setExists(true)[ CD ]
Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)-->Line_9 $$ content.setExists(true)[ FD ]
Line_11 $$ URLConnection connection = url.openConnection()-->Line_11 $$ URLConnection connection = url.openConnection()[ CD ]
Line_4 $$ URL url = buildURL(uniqueName)-->Line_11 $$ URLConnection connection = url.openConnection()[ FD ]
Line_12 $$ String mimeType = connection.getContentType()-->Line_12 $$ String mimeType = connection.getContentType()[ CD ]
Line_11 $$ URLConnection connection = url.openConnection()-->Line_12 $$ String mimeType = connection.getContentType()[ FD ]
Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)-->Line_13 $$ content.setMimeType(mimeType)[ FD ]
Line_12 $$ String mimeType = connection.getContentType()-->Line_13 $$ content.setMimeType(mimeType)[ FD ]
Line_5 $$ URLContent content = new URLContent(url, this.getName(), uniqueName)-->Line_14 $$ content.setWritable(true)[ FD ]
Line_2 $$ public Content getContent(Object principal, ContentPath path, Version version, Map<String, Object> properties) throws ContentException -->Line_18 $$ return content[ CD ]
