Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void downloadFiles() throws SocketException, IOException [ CD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_3 $$ HashSet<String> files_set = new HashSet<String>()[ CD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_4 $$ boolean hasWildcarts = false[ CD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_5 $$ FTPClient client = new FTPClient()[ CD ]
Line_3 $$ HashSet<String> files_set = new HashSet<String>()-->Line_7 $$ files_set.add(file)[ FD ]
Line_6 $$ for (String file : downloadFiles) -->Line_7 $$ files_set.add(file)[ FD ]
Line_6 $$ for (String file : downloadFiles) -->Line_8 $$ if (file.contains(WILDCARD_WORD) || file.contains(WILDCARD_DIGIT))[ FD ]
Line_6 $$ for (String file : downloadFiles) -->Line_8 $$ if (file.contains(WILDCARD_WORD) || file.contains(WILDCARD_DIGIT))[ FD ]
Line_8 $$ if (file.contains(WILDCARD_WORD) || file.contains(WILDCARD_DIGIT))-->Line_8 $$ hasWildcarts = true[ CD ]
Line_4 $$ boolean hasWildcarts = false-->Line_8 $$ hasWildcarts = true[ FD ]
Line_8 $$ hasWildcarts = true-->Line_8 $$ hasWildcarts = true[ FD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_10 $$ client.connect(source.getHost())[ CD ]
Line_5 $$ FTPClient client = new FTPClient()-->Line_10 $$ client.connect(source.getHost())[ FD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_11 $$ client.login(username, password)[ CD ]
Line_5 $$ FTPClient client = new FTPClient()-->Line_11 $$ client.login(username, password)[ FD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_12 $$ FTPFile[] files = client.listFiles(source.getPath())[ CD ]
Line_12 $$ FTPFile[] files = client.listFiles(source.getPath())-->Line_12 $$ FTPFile[] files = client.listFiles(source.getPath())[ CD ]
Line_5 $$ FTPClient client = new FTPClient()-->Line_12 $$ FTPFile[] files = client.listFiles(source.getPath())[ FD ]
Line_2 $$ private void downloadFiles() throws SocketException, IOException -->Line_13 $$ if (!hasWildcarts) [ CD ]
Line_4 $$ boolean hasWildcarts = false-->Line_13 $$ if (!hasWildcarts) [ FD ]
Line_8 $$ hasWildcarts = true-->Line_13 $$ if (!hasWildcarts) [ FD ]
Line_13 $$ if (!hasWildcarts) -->Line_13 $$ if (!hasWildcarts) [ CD ]
Line_4 $$ boolean hasWildcarts = false-->Line_13 $$ if (!hasWildcarts) [ FD ]
Line_8 $$ hasWildcarts = true-->Line_13 $$ if (!hasWildcarts) [ FD ]
Line_15 $$ String filename = file.getName()-->Line_15 $$ String filename = file.getName()[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_15 $$ String filename = file.getName()[ FD ]
Line_3 $$ HashSet<String> files_set = new HashSet<String>()-->Line_16 $$ if (files_set.contains(filename)) [ FD ]
Line_15 $$ String filename = file.getName()-->Line_16 $$ if (files_set.contains(filename)) [ FD ]
Line_16 $$ if (files_set.contains(filename)) -->Line_16 $$ if (files_set.contains(filename)) [ CD ]
Line_3 $$ HashSet<String> files_set = new HashSet<String>()-->Line_16 $$ if (files_set.contains(filename)) [ FD ]
Line_15 $$ String filename = file.getName()-->Line_16 $$ if (files_set.contains(filename)) [ FD ]
Line_16 $$ if (files_set.contains(filename)) -->Line_17 $$ long file_size = file.getSize() / 1024[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_17 $$ long file_size = file.getSize() / 1024[ FD ]
Line_16 $$ if (files_set.contains(filename)) -->Line_18 $$ Calendar cal = file.getTimestamp()[ CD ]
Line_18 $$ Calendar cal = file.getTimestamp()-->Line_18 $$ Calendar cal = file.getTimestamp()[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_18 $$ Calendar cal = file.getTimestamp()[ FD ]
Line_16 $$ if (files_set.contains(filename)) -->Line_19 $$ URL source_file = new File(source + file.getName()).toURI().toURL()[ CD ]
Line_19 $$ URL source_file = new File(source + file.getName()).toURI().toURL()-->Line_19 $$ URL source_file = new File(source + file.getName()).toURI().toURL()[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_19 $$ URL source_file = new File(source + file.getName()).toURI().toURL()[ FD ]
Line_16 $$ if (files_set.contains(filename)) -->Line_20 $$ DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()))[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_20 $$ DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()))[ FD ]
Line_6 $$ for (String file : downloadFiles) -->Line_25 $$ String filename = file.getName()[ FD ]
Line_27 $$ for (String db_filename : downloadFiles) -->Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)[ FD ]
Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)-->Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)[ FD ]
Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)-->Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)[ CD ]
Line_27 $$ for (String db_filename : downloadFiles) -->Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)[ FD ]
Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)-->Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)[ FD ]
Line_27 $$ for (String db_filename : downloadFiles) -->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ FD ]
Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)-->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ FD ]
Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)-->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ FD ]
Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)-->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ CD ]
Line_27 $$ for (String db_filename : downloadFiles) -->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ FD ]
Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)-->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ FD ]
Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)-->Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)[ FD ]
Line_30 $$ Pattern p = Pattern.compile(db_filename)-->Line_30 $$ Pattern p = Pattern.compile(db_filename)[ CD ]
Line_27 $$ for (String db_filename : downloadFiles) -->Line_30 $$ Pattern p = Pattern.compile(db_filename)[ FD ]
Line_28 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_WORD, WILDCARD_WORD_PATTERN)-->Line_30 $$ Pattern p = Pattern.compile(db_filename)[ FD ]
Line_29 $$ db_filename = db_filename.replaceAll("\\" + WILDCARD_DIGIT, WILDCARD_DIGIT_PATTERN)-->Line_30 $$ Pattern p = Pattern.compile(db_filename)[ FD ]
Line_31 $$ Matcher m = p.matcher(filename)-->Line_31 $$ Matcher m = p.matcher(filename)[ CD ]
Line_30 $$ Pattern p = Pattern.compile(db_filename)-->Line_31 $$ Matcher m = p.matcher(filename)[ FD ]
Line_15 $$ String filename = file.getName()-->Line_31 $$ Matcher m = p.matcher(filename)[ FD ]
Line_26 $$ boolean match = false-->Line_32 $$ match = m.matches()[ FD ]
Line_32 $$ match = m.matches()-->Line_32 $$ match = m.matches()[ FD ]
Line_32 $$ match = m.matches()-->Line_32 $$ match = m.matches()[ CD ]
Line_31 $$ Matcher m = p.matcher(filename)-->Line_32 $$ match = m.matches()[ FD ]
Line_6 $$ for (String file : downloadFiles) -->Line_35 $$ long file_size = file.getSize() / 1024[ FD ]
Line_34 $$ if (match) -->Line_36 $$ Calendar cal = file.getTimestamp()[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_36 $$ Calendar cal = file.getTimestamp()[ FD ]
Line_34 $$ if (match) -->Line_37 $$ URL source_file = new File(source + file.getName()).toURI().toURL()[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_37 $$ URL source_file = new File(source + file.getName()).toURI().toURL()[ FD ]
Line_34 $$ if (match) -->Line_38 $$ DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()))[ CD ]
Line_6 $$ for (String file : downloadFiles) -->Line_38 $$ DownloadQueue.add(new Download(projectName, parser.getParserID(), source_file, file_size, cal, target + file.getName()))[ FD ]
