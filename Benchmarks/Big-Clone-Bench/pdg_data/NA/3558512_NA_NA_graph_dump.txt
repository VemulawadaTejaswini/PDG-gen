Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException [ CD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_3 $$ ensureParsed()[ CD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_4 $$ ZipFilePackageParser parser = utils.getIMSCPParserFactory().createParser()[ CD ]
Line_4 $$ ZipFilePackageParser parser = utils.getIMSCPParserFactory().createParser()-->Line_4 $$ ZipFilePackageParser parser = utils.getIMSCPParserFactory().createParser()[ CD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_5 $$ parser.setContentPackage(cp)[ CD ]
Line_4 $$ ZipFilePackageParser parser = utils.getIMSCPParserFactory().createParser()-->Line_5 $$ parser.setContentPackage(cp)[ FD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_6 $$ if (on_disk != null)[ CD ]
Line_6 $$ if (on_disk != null)-->Line_6 $$ on_disk.delete()[ CD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_7 $$ on_disk = createTemporaryFile()[ CD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_8 $$ parser.serialize(on_disk)[ CD ]
Line_4 $$ ZipFilePackageParser parser = utils.getIMSCPParserFactory().createParser()-->Line_8 $$ parser.serialize(on_disk)[ FD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_9 $$ InputStream in = new FileInputStream(on_disk)[ CD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_10 $$ IOUtils.copy(in, out)[ CD ]
Line_9 $$ InputStream in = new FileInputStream(on_disk)-->Line_10 $$ IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void serialize(OutputStream out) throws IOException, BadIMSCPException -->Line_10 $$ IOUtils.copy(in, out)[ FD ]
