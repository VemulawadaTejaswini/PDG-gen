Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception [ CD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_3 $$ List<String> urls = (List<String>) context.get(getContextKeyFileUrls(), List.class, true)[ CD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_3 $$ List<String> urls = (List<String>) context.get(getContextKeyFileUrls(), List.class, true)[ FD ]
Line_5 $$ long time = System.currentTimeMillis()-->Line_5 $$ long time = System.currentTimeMillis()[ CD ]
Line_4 $$ for (String url : urls) -->Line_8 $$ if (url.startsWith("http://") || url.startsWith("ftp://")) [ FD ]
Line_4 $$ for (String url : urls) -->Line_8 $$ if (url.startsWith("http://") || url.startsWith("ftp://")) [ FD ]
Line_8 $$ if (url.startsWith("http://") || url.startsWith("ftp://")) -->Line_9 $$ is = new URL(url).openStream()[ CD ]
Line_7 $$ InputStream is = null-->Line_9 $$ is = new URL(url).openStream()[ FD ]
Line_9 $$ is = new URL(url).openStream()-->Line_9 $$ is = new URL(url).openStream()[ FD ]
Line_9 $$ is = new URL(url).openStream()-->Line_9 $$ is = new URL(url).openStream()[ CD ]
Line_8 $$ if (url.startsWith("http://") || url.startsWith("ftp://")) -->Line_11 $$ is = new FileInputStream(url)[ CD ]
Line_7 $$ InputStream is = null-->Line_11 $$ is = new FileInputStream(url)[ FD ]
Line_9 $$ is = new URL(url).openStream()-->Line_11 $$ is = new FileInputStream(url)[ FD ]
Line_11 $$ is = new FileInputStream(url)-->Line_11 $$ is = new FileInputStream(url)[ FD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_13 $$ String separator = (String) context.get(getContextKeySeparator(), String.class, false)[ FD ]
Line_13 $$ String separator = (String) context.get(getContextKeySeparator(), String.class, false)-->Line_14 $$ if (separator == null) [ FD ]
Line_14 $$ if (separator == null) -->Line_15 $$ separator = "\t"[ CD ]
Line_13 $$ String separator = (String) context.get(getContextKeySeparator(), String.class, false)-->Line_15 $$ separator = "\t"[ FD ]
Line_15 $$ separator = "\t"-->Line_15 $$ separator = "\t"[ FD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_17 $$ String quoteCharacter = (String) context.get(getContextKeyQuoteCharacter(), String.class, false)[ FD ]
Line_19 $$ Set<String> columns = reader.getColumnHeaders()-->Line_19 $$ Set<String> columns = reader.getColumnHeaders()[ CD ]
Line_18 $$ DelimitedFileReader reader = new DelimitedFileReader(is, separator, quoteCharacter, true)-->Line_19 $$ Set<String> columns = reader.getColumnHeaders()[ FD ]
Line_20 $$ while (reader.next()) -->Line_20 $$ while (reader.next()) [ CD ]
Line_18 $$ DelimitedFileReader reader = new DelimitedFileReader(is, separator, quoteCharacter, true)-->Line_20 $$ while (reader.next()) [ FD ]
Line_20 $$ while (reader.next()) -->Line_21 $$ logger.debug("Starting row: " + reader.getRowNumber())[ CD ]
Line_18 $$ DelimitedFileReader reader = new DelimitedFileReader(is, separator, quoteCharacter, true)-->Line_21 $$ logger.debug("Starting row: " + reader.getRowNumber())[ FD ]
Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))-->Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))[ CD ]
Line_18 $$ DelimitedFileReader reader = new DelimitedFileReader(is, separator, quoteCharacter, true)-->Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))[ FD ]
Line_22 $$ for (String column : columns) -->Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_25 $$ if (lowerCaseFirstLetterForContext && key.length() > 1) [ FD ]
Line_25 $$ if (lowerCaseFirstLetterForContext && key.length() > 1) -->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ CD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_25 $$ if (lowerCaseFirstLetterForContext && key.length() > 1) -->Line_27 $$ if (lowerCaseFirstLetterForContext) [ CD ]
Line_27 $$ if (lowerCaseFirstLetterForContext) -->Line_28 $$ key = key.toLowerCase()[ CD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_28 $$ key = key.toLowerCase()[ CD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_30 $$ context.put(key, value)[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_30 $$ context.put(key, value)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_30 $$ context.put(key, value)[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_30 $$ context.put(key, value)[ FD ]
Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))-->Line_30 $$ context.put(key, value)[ FD ]
Line_20 $$ while (reader.next()) -->Line_33 $$ launchWorkflow(context, null)[ CD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_33 $$ launchWorkflow(context, null)[ FD ]
Line_2 $$ public ProcessContext execute(ProcessContext context) throws Exception -->Line_37 $$ return context[ CD ]
Line_22 $$ for (String column : columns) -->Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_25 $$ if (lowerCaseFirstLetterForContext && key.length() > 1) [ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_25 $$ if (lowerCaseFirstLetterForContext && key.length() > 1) [ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_25 $$ if (lowerCaseFirstLetterForContext && key.length() > 1) [ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_28 $$ key = key.toLowerCase()[ FD ]
Line_24 $$ String key = getContextKeyPrefix() + column-->Line_30 $$ context.put(key, value)[ FD ]
Line_26 $$ key = key.substring(0, 1).toLowerCase() + key.substring(1)-->Line_30 $$ context.put(key, value)[ FD ]
Line_28 $$ key = key.toLowerCase()-->Line_30 $$ context.put(key, value)[ FD ]
Line_23 $$ String value = StringUtils.trimToNull(reader.get(column))-->Line_30 $$ context.put(key, value)[ FD ]
