Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean sendInformation(String reportType, HashMap<String, String> data) [ CD ]
Line_2 $$ public static boolean sendInformation(String reportType, HashMap<String, String> data) -->Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) [ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) [ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_4 $$ logger.debug("Report usage information to devs...")[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_5 $$ String transferData = "reportType=" + reportType[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")[ CD ]
Line_5 $$ String transferData = "reportType=" + reportType-->Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")[ FD ]
Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ CD ]
Line_5 $$ String transferData = "reportType=" + reportType-->Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_2 $$ public static boolean sendInformation(String reportType, HashMap<String, String> data) -->Line_8 $$ for (String key : data.keySet()) [ FD ]
Line_5 $$ String transferData = "reportType=" + reportType-->Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)[ FD ]
Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)[ FD ]
Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)[ FD ]
Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)-->Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)[ FD ]
Line_2 $$ public static boolean sendInformation(String reportType, HashMap<String, String> data) -->Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)[ FD ]
Line_8 $$ for (String key : data.keySet()) -->Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_13 $$ URLConnection conn = url.openConnection()[ CD ]
Line_12 $$ URL url = new URL("http://www.merobase.com:7777/org.code_conjurer.udc/UsageReport")-->Line_13 $$ URLConnection conn = url.openConnection()[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_14 $$ conn.setDoOutput(true)[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_16 $$ writer.write(transferData)[ FD ]
Line_5 $$ String transferData = "reportType=" + reportType-->Line_16 $$ writer.write(transferData)[ FD ]
Line_6 $$ transferData += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_16 $$ writer.write(transferData)[ FD ]
Line_7 $$ transferData += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_16 $$ writer.write(transferData)[ FD ]
Line_9 $$ transferData += "&Suppl-" + key + "=" + data.get(key)-->Line_16 $$ writer.write(transferData)[ FD ]
Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_17 $$ writer.flush()[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_19 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_21 $$ while ((line = reader.readLine()) != null) -->Line_21 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_20 $$ String line-->Line_21 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_21 $$ while ((line = reader.readLine()) != null) -->Line_21 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_19 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_21 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_21 $$ while ((line = reader.readLine()) != null) -->Line_22 $$ answer.append(line + "\r\n")[ CD ]
Line_18 $$ StringBuffer answer = new StringBuffer()-->Line_22 $$ answer.append(line + "\r\n")[ FD ]
Line_15 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_24 $$ writer.close()[ FD ]
Line_19 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_25 $$ reader.close()[ FD ]
Line_18 $$ StringBuffer answer = new StringBuffer()-->Line_26 $$ logger.debug("UDC Server answer: " + answer.toString())[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_32 $$ return true[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_34 $$ logger.debug("Reporting not wished!")[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_UDC)) -->Line_35 $$ return false[ CD ]
