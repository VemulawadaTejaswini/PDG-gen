Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected String determineDataType() [ CD ]
Line_2 $$ protected String determineDataType() -->Line_3 $$ final String spec = getSpec()[ CD ]
Line_3 $$ final String spec = getSpec()-->Line_3 $$ final String spec = getSpec()[ CD ]
Line_2 $$ protected String determineDataType() -->Line_4 $$ if (spec.endsWith("=jpeg")) [ CD ]
Line_3 $$ final String spec = getSpec()-->Line_4 $$ if (spec.endsWith("=jpeg")) [ FD ]
Line_4 $$ if (spec.endsWith("=jpeg")) -->Line_4 $$ if (spec.endsWith("=jpeg")) [ CD ]
Line_3 $$ final String spec = getSpec()-->Line_4 $$ if (spec.endsWith("=jpeg")) [ FD ]
Line_4 $$ if (spec.endsWith("=jpeg")) -->Line_5 $$ return "jpeg"[ CD ]
Line_4 $$ if (spec.endsWith("=jpeg")) -->Line_6 $$ if (mimeType != UNSET) [ CD ]
Line_6 $$ if (mimeType != UNSET) -->Line_7 $$ return mimeType[ CD ]
Line_6 $$ if (mimeType != UNSET) -->Line_8 $$ if (spec != SPEC_UNSET && spec.startsWith("http") && spec.contains("fedora")) [ CD ]
Line_3 $$ final String spec = getSpec()-->Line_8 $$ if (spec != SPEC_UNSET && spec.startsWith("http") && spec.contains("fedora")) [ FD ]
Line_3 $$ final String spec = getSpec()-->Line_8 $$ if (spec != SPEC_UNSET && spec.startsWith("http") && spec.contains("fedora")) [ FD ]
Line_8 $$ if (spec != SPEC_UNSET && spec.startsWith("http") && spec.contains("fedora")) -->Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) [ CD ]
Line_3 $$ final String spec = getSpec()-->Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) [ FD ]
Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) -->Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) [ CD ]
Line_3 $$ final String spec = getSpec()-->Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) [ FD ]
Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) -->Line_10 $$ return "html"[ CD ]
Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) -->Line_12 $$ String type = getProperty(CONTENT_TYPE)[ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_12 $$ String type = getProperty(CONTENT_TYPE)[ CD ]
Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) -->Line_13 $$ if (type == null || type.length() < 1) [ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_13 $$ if (type == null || type.length() < 1) [ FD ]
Line_16 $$ if (DEBUG.Enabled)-->Line_16 $$ out("polling actual HTTP server for content-type: " + url)[ CD ]
Line_17 $$ if (!VUE.isApplet())-->Line_17 $$ if (!VUE.isApplet())[ CD ]
Line_17 $$ if (!VUE.isApplet())-->Line_17 $$ if (!VUE.isApplet())[ CD ]
Line_17 $$ if (!VUE.isApplet())-->Line_17 $$ type = url.openConnection().getHeaderField("Content-type")[ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_17 $$ type = url.openConnection().getHeaderField("Content-type")[ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_17 $$ type = url.openConnection().getHeaderField("Content-type")[ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_17 $$ type = url.openConnection().getHeaderField("Content-type")[ CD ]
Line_15 $$ final URL url = (mURL != null ? mURL : new URL(getSpec()))-->Line_17 $$ type = url.openConnection().getHeaderField("Content-type")[ FD ]
Line_17 $$ if (!VUE.isApplet())-->Line_17 $$ type = null[ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_17 $$ type = null[ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_17 $$ type = null[ FD ]
Line_17 $$ type = null-->Line_17 $$ type = null[ FD ]
Line_18 $$ if (DEBUG.Enabled) -->Line_19 $$ out("got contentType " + url + " [" + type + "]")[ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_21 $$ if (type != null && type.length() > 0)[ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_21 $$ if (type != null && type.length() > 0)[ FD ]
Line_17 $$ type = null-->Line_21 $$ if (type != null && type.length() > 0)[ FD ]
Line_21 $$ if (type != null && type.length() > 0)-->Line_21 $$ setProperty(CONTENT_TYPE, type)[ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_21 $$ setProperty(CONTENT_TYPE, type)[ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_21 $$ setProperty(CONTENT_TYPE, type)[ FD ]
Line_17 $$ type = null-->Line_21 $$ setProperty(CONTENT_TYPE, type)[ FD ]
Line_9 $$ if (spec.endsWith("bdef:AssetDef/getFullView/")) -->Line_26 $$ if (type != null && type.contains("/")) [ CD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_26 $$ if (type != null && type.contains("/")) [ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_26 $$ if (type != null && type.contains("/")) [ FD ]
Line_17 $$ type = null-->Line_26 $$ if (type != null && type.contains("/")) [ FD ]
Line_12 $$ String type = getProperty(CONTENT_TYPE)-->Line_27 $$ mimeType = type.split("/")[1][ FD ]
Line_17 $$ type = url.openConnection().getHeaderField("Content-type")-->Line_27 $$ mimeType = type.split("/")[1][ FD ]
Line_17 $$ type = null-->Line_27 $$ mimeType = type.split("/")[1][ FD ]
Line_26 $$ if (type != null && type.contains("/")) -->Line_28 $$ if (mimeType.indexOf(';') > 0) [ CD ]
Line_28 $$ if (mimeType.indexOf(';') > 0) -->Line_29 $$ mimeType = mimeType.substring(0, mimeType.indexOf(';'))[ CD ]
Line_26 $$ if (type != null && type.contains("/")) -->Line_31 $$ return mimeType[ CD ]
Line_2 $$ protected String determineDataType() -->Line_35 $$ return super.determineDataType()[ CD ]
Line_35 $$ return super.determineDataType()-->Line_35 $$ return super.determineDataType()[ CD ]
