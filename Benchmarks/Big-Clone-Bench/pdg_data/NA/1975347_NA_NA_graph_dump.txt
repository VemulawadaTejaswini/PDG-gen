Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected Properties loadFile(String fileName) [ CD ]
Line_2 $$ protected Properties loadFile(String fileName) -->Line_3 $$ Properties prop = new Properties()[ CD ]
Line_5 $$ String packageName = getClass().getName()-->Line_5 $$ String packageName = getClass().getName()[ CD ]
Line_5 $$ String packageName = getClass().getName()-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ CD ]
Line_5 $$ String packageName = getClass().getName()-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ FD ]
Line_5 $$ String packageName = getClass().getName()-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))[ FD ]
Line_8 $$ if (mavenBuild) -->Line_9 $$ src = src + File.separator + "test" + File.separator + "resources"[ CD ]
Line_7 $$ String src = "src"-->Line_9 $$ src = src + File.separator + "test" + File.separator + "resources"[ FD ]
Line_9 $$ src = src + File.separator + "test" + File.separator + "resources"-->Line_9 $$ src = src + File.separator + "test" + File.separator + "resources"[ FD ]
Line_5 $$ String packageName = getClass().getName()-->Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)[ FD ]
Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)-->Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)[ FD ]
Line_5 $$ String packageName = getClass().getName()-->Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)[ FD ]
Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)-->Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)[ FD ]
Line_5 $$ String packageName = getClass().getName()-->Line_12 $$ packageName += File.separator[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_12 $$ packageName += File.separator[ FD ]
Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)-->Line_12 $$ packageName += File.separator[ FD ]
Line_12 $$ packageName += File.separator-->Line_12 $$ packageName += File.separator[ FD ]
Line_5 $$ String packageName = getClass().getName()-->Line_13 $$ packageName += fileName[ FD ]
Line_6 $$ packageName = packageName.substring(0, packageName.lastIndexOf("."))-->Line_13 $$ packageName += fileName[ FD ]
Line_11 $$ packageName = src + File.separator + packageName.replace('.', File.separatorChar)-->Line_13 $$ packageName += fileName[ FD ]
Line_12 $$ packageName += File.separator-->Line_13 $$ packageName += fileName[ FD ]
Line_13 $$ packageName += fileName-->Line_13 $$ packageName += fileName[ FD ]
Line_2 $$ protected Properties loadFile(String fileName) -->Line_13 $$ packageName += fileName[ FD ]
Line_14 $$ URL url0 = new File(packageName).toURI().toURL()-->Line_14 $$ URL url0 = new File(packageName).toURI().toURL()[ CD ]
Line_15 $$ final InputStream input = url0.openStream()-->Line_15 $$ final InputStream input = url0.openStream()[ CD ]
Line_14 $$ URL url0 = new File(packageName).toURI().toURL()-->Line_15 $$ final InputStream input = url0.openStream()[ FD ]
Line_3 $$ Properties prop = new Properties()-->Line_16 $$ prop.load(input)[ FD ]
Line_15 $$ final InputStream input = url0.openStream()-->Line_16 $$ prop.load(input)[ FD ]
Line_2 $$ protected Properties loadFile(String fileName) -->Line_22 $$ return prop[ CD ]
