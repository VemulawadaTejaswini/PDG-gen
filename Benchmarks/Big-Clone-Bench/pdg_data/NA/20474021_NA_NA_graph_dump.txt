Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) [ CD ]
Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) -->Line_3 $$ assert data.isDirect() == false : "must not a direct ByteBuffer"[ FD ]
Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) -->Line_4 $$ int pos = data.position()[ CD ]
Line_4 $$ int pos = data.position()-->Line_4 $$ int pos = data.position()[ CD ]
Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) -->Line_4 $$ int pos = data.position()[ FD ]
Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) -->Line_5 $$ if (pos < RadiusPacket.MIN_PACKET_LENGTH) [ CD ]
Line_4 $$ int pos = data.position()-->Line_5 $$ if (pos < RadiusPacket.MIN_PACKET_LENGTH) [ FD ]
Line_5 $$ if (pos < RadiusPacket.MIN_PACKET_LENGTH) -->Line_6 $$ System.err.println("packet too small")[ CD ]
Line_5 $$ if (pos < RadiusPacket.MIN_PACKET_LENGTH) -->Line_7 $$ return null[ CD ]
Line_10 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_10 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_11 $$ byte[] arr = data.array()-->Line_11 $$ byte[] arr = data.array()[ CD ]
Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) -->Line_11 $$ byte[] arr = data.array()[ FD ]
Line_10 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_12 $$ md5.reset()[ FD ]
Line_10 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_13 $$ md5.update(arr, 0, pos)[ FD ]
Line_11 $$ byte[] arr = data.array()-->Line_13 $$ md5.update(arr, 0, pos)[ FD ]
Line_4 $$ int pos = data.position()-->Line_13 $$ md5.update(arr, 0, pos)[ FD ]
Line_10 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_14 $$ md5.update(secret.getBytes())[ FD ]
Line_2 $$ public static byte[] createAuthenticator(ByteBuffer data, String secret) -->Line_14 $$ md5.update(secret.getBytes())[ FD ]
Line_15 $$ return md5.digest()-->Line_15 $$ return md5.digest()[ CD ]
Line_10 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_15 $$ return md5.digest()[ FD ]
