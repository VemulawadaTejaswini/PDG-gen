Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void runDBUpdate() [ CD ]
Line_2 $$ public static void runDBUpdate() -->Line_3 $$ if (!updateRunning) [ CD ]
Line_3 $$ if (!updateRunning) -->Line_4 $$ if (updateJob != null)[ CD ]
Line_4 $$ if (updateJob != null)-->Line_4 $$ updateJob.cancel()[ CD ]
Line_12 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) -->Line_12 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) [ CD ]
Line_12 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) -->Line_26 $$ readXML()[ CD ]
Line_12 $$ if (MAC.equals("not_found") || serial.equals("not_found") || !serial.startsWith(distributor)) -->Line_27 $$ if (htmlMessage.contains("error")) [ CD ]
Line_27 $$ if (htmlMessage.contains("error")) -->Line_27 $$ if (htmlMessage.contains("error")) [ CD ]
Line_29 $$ PrintWriter pw = new PrintWriter(getAppPath() + "/register.ini")-->Line_30 $$ pw.write("")[ FD ]
Line_29 $$ PrintWriter pw = new PrintWriter(getAppPath() + "/register.ini")-->Line_31 $$ pw.close()[ FD ]
Line_27 $$ if (htmlMessage.contains("error")) -->Line_35 $$ setProperty(IProgressConstants.ICON_PROPERTY, IconImg.liveUpIco)[ CD ]
Line_27 $$ if (htmlMessage.contains("error")) -->Line_36 $$ if (isModal(this)) [ CD ]
Line_36 $$ if (isModal(this)) -->Line_36 $$ if (isModal(this)) [ CD ]
Line_36 $$ if (isModal(this)) -->Line_37 $$ showResults2()[ CD ]
Line_36 $$ if (isModal(this)) -->Line_39 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_36 $$ if (isModal(this)) -->Line_40 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction2())[ CD ]
Line_27 $$ if (htmlMessage.contains("error")) -->Line_43 $$ if (!getDBVersion().equals(latestVersion)) [ CD ]
Line_43 $$ if (!getDBVersion().equals(latestVersion)) -->Line_43 $$ if (!getDBVersion().equals(latestVersion)) [ CD ]
Line_43 $$ if (!getDBVersion().equals(latestVersion)) -->Line_43 $$ if (!getDBVersion().equals(latestVersion)) [ CD ]
Line_50 $$ URL url = new URL(fileLoc)-->Line_51 $$ String outFile = getAppPath() + "/temp/" + getFileName(url)[ FD ]
Line_52 $$ File oFile = new File(outFile)-->Line_53 $$ oFile.delete()[ FD ]
Line_45 $$ OutputStream out = null-->Line_54 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))[ FD ]
Line_54 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_54 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_55 $$ monitor.beginTask("Connecting to NWD Server", 100)[ FD ]
Line_46 $$ HttpURLConnection conn = null-->Line_56 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_56 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_50 $$ URL url = new URL(fileLoc)-->Line_56 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_46 $$ HttpURLConnection conn = null-->Line_57 $$ conn.setConnectTimeout(20000)[ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_57 $$ conn.setConnectTimeout(20000)[ FD ]
Line_46 $$ HttpURLConnection conn = null-->Line_58 $$ conn.connect()[ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_58 $$ conn.connect()[ FD ]
Line_46 $$ HttpURLConnection conn = null-->Line_59 $$ if (conn.getResponseCode() / 100 != 2) [ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_59 $$ if (conn.getResponseCode() / 100 != 2) [ FD ]
Line_59 $$ if (conn.getResponseCode() / 100 != 2) -->Line_60 $$ System.out.println("Error: " + conn.getResponseCode())[ CD ]
Line_46 $$ HttpURLConnection conn = null-->Line_60 $$ System.out.println("Error: " + conn.getResponseCode())[ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_60 $$ System.out.println("Error: " + conn.getResponseCode())[ FD ]
Line_59 $$ if (conn.getResponseCode() / 100 != 2) -->Line_61 $$ return null[ CD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_63 $$ monitor.worked(100)[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_64 $$ monitor.done()[ FD ]
Line_48 $$ int size-->Line_65 $$ size = conn.getContentLength()[ FD ]
Line_65 $$ size = conn.getContentLength()-->Line_65 $$ size = conn.getContentLength()[ FD ]
Line_65 $$ size = conn.getContentLength()-->Line_65 $$ size = conn.getContentLength()[ CD ]
Line_46 $$ HttpURLConnection conn = null-->Line_65 $$ size = conn.getContentLength()[ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_65 $$ size = conn.getContentLength()[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_66 $$ monitor.beginTask("Download Worm Definition", size)[ FD ]
Line_48 $$ int size-->Line_66 $$ monitor.beginTask("Download Worm Definition", size)[ FD ]
Line_65 $$ size = conn.getContentLength()-->Line_66 $$ monitor.beginTask("Download Worm Definition", size)[ FD ]
Line_47 $$ InputStream in = null-->Line_67 $$ in = conn.getInputStream()[ FD ]
Line_67 $$ in = conn.getInputStream()-->Line_67 $$ in = conn.getInputStream()[ FD ]
Line_67 $$ in = conn.getInputStream()-->Line_67 $$ in = conn.getInputStream()[ CD ]
Line_46 $$ HttpURLConnection conn = null-->Line_67 $$ in = conn.getInputStream()[ FD ]
Line_56 $$ conn = (HttpURLConnection) url.openConnection()-->Line_67 $$ in = conn.getInputStream()[ FD ]
Line_72 $$ while (status) -->Line_73 $$ if (size - numWritten > 1024) [ CD ]
Line_73 $$ if (size - numWritten > 1024) -->Line_74 $$ buffer = new byte[1024][ CD ]
Line_74 $$ buffer = new byte[1024]-->Line_74 $$ buffer = new byte[1024][ FD ]
Line_68 $$ byte[] buffer-->Line_74 $$ buffer = new byte[1024][ FD ]
Line_73 $$ if (size - numWritten > 1024) -->Line_76 $$ buffer = new byte[(int) (size - numWritten)][ CD ]
Line_74 $$ buffer = new byte[1024]-->Line_76 $$ buffer = new byte[(int) (size - numWritten)][ FD ]
Line_76 $$ buffer = new byte[(int) (size - numWritten)]-->Line_76 $$ buffer = new byte[(int) (size - numWritten)][ FD ]
Line_68 $$ byte[] buffer-->Line_76 $$ buffer = new byte[(int) (size - numWritten)][ FD ]
Line_72 $$ while (status) -->Line_78 $$ int read = in.read(buffer)[ CD ]
Line_78 $$ int read = in.read(buffer)-->Line_78 $$ int read = in.read(buffer)[ CD ]
Line_47 $$ InputStream in = null-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_67 $$ in = conn.getInputStream()-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_74 $$ buffer = new byte[1024]-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_76 $$ buffer = new byte[(int) (size - numWritten)]-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_68 $$ byte[] buffer-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_72 $$ while (status) -->Line_79 $$ if (read == -1) [ CD ]
Line_78 $$ int read = in.read(buffer)-->Line_79 $$ if (read == -1) [ FD ]
Line_72 $$ while (status) -->Line_82 $$ out.write(buffer, 0, read)[ CD ]
Line_45 $$ OutputStream out = null-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_54 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_74 $$ buffer = new byte[1024]-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_76 $$ buffer = new byte[(int) (size - numWritten)]-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_68 $$ byte[] buffer-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_72 $$ while (status) -->Line_83 $$ numWritten += read[ CD ]
Line_83 $$ numWritten += read-->Line_83 $$ numWritten += read[ FD ]
Line_70 $$ long numWritten = 0-->Line_83 $$ numWritten += read[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_83 $$ numWritten += read[ FD ]
Line_72 $$ while (status) -->Line_84 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"[ CD ]
Line_84 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"-->Line_84 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"[ FD ]
Line_69 $$ String downloadedSize-->Line_84 $$ downloadedSize = Long.toString(numWritten / 1024) + " KB"[ FD ]
Line_72 $$ while (status) -->Line_85 $$ monitor.worked(read)[ CD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_85 $$ monitor.worked(read)[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_85 $$ monitor.worked(read)[ FD ]
Line_72 $$ while (status) -->Line_86 $$ monitor.subTask(downloadedSize + " of " + Integer.toString(size / 1024) + " KB")[ CD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_86 $$ monitor.subTask(downloadedSize + " of " + Integer.toString(size / 1024) + " KB")[ FD ]
Line_72 $$ while (status) -->Line_87 $$ if (size == numWritten) [ CD ]
Line_48 $$ int size-->Line_87 $$ if (size == numWritten) [ FD ]
Line_65 $$ size = conn.getContentLength()-->Line_87 $$ if (size == numWritten) [ FD ]
Line_83 $$ numWritten += read-->Line_87 $$ if (size == numWritten) [ FD ]
Line_70 $$ long numWritten = 0-->Line_87 $$ if (size == numWritten) [ FD ]
Line_87 $$ if (size == numWritten) -->Line_88 $$ status = false[ CD ]
Line_88 $$ status = false-->Line_88 $$ status = false[ FD ]
Line_71 $$ boolean status = true-->Line_88 $$ status = false[ FD ]
Line_72 $$ while (status) -->Line_90 $$ if (monitor.isCanceled())[ CD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_90 $$ if (monitor.isCanceled())[ FD ]
Line_90 $$ if (monitor.isCanceled())-->Line_90 $$ if (monitor.isCanceled())[ CD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_90 $$ if (monitor.isCanceled())[ FD ]
Line_90 $$ if (monitor.isCanceled())-->Line_90 $$ return Status.CANCEL_STATUS[ CD ]
Line_47 $$ InputStream in = null-->Line_92 $$ if (in != null) [ FD ]
Line_67 $$ in = conn.getInputStream()-->Line_92 $$ if (in != null) [ FD ]
Line_92 $$ if (in != null) -->Line_93 $$ in.close()[ CD ]
Line_47 $$ InputStream in = null-->Line_93 $$ in.close()[ FD ]
Line_67 $$ in = conn.getInputStream()-->Line_93 $$ in.close()[ FD ]
Line_45 $$ OutputStream out = null-->Line_95 $$ if (out != null) [ FD ]
Line_54 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_95 $$ if (out != null) [ FD ]
Line_95 $$ if (out != null) -->Line_96 $$ out.close()[ CD ]
Line_45 $$ OutputStream out = null-->Line_96 $$ out.close()[ FD ]
Line_54 $$ out = new BufferedOutputStream(new FileOutputStream(outFile))-->Line_96 $$ out.close()[ FD ]
Line_100 $$ Enumeration all = zFile.entries()-->Line_100 $$ Enumeration all = zFile.entries()[ CD ]
Line_99 $$ ZipFile zFile = new ZipFile(outFile)-->Line_100 $$ Enumeration all = zFile.entries()[ FD ]
Line_101 $$ while (all.hasMoreElements()) -->Line_101 $$ while (all.hasMoreElements()) [ CD ]
Line_100 $$ Enumeration all = zFile.entries()-->Line_101 $$ while (all.hasMoreElements()) [ FD ]
Line_101 $$ while (all.hasMoreElements()) -->Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()[ CD ]
Line_100 $$ Enumeration all = zFile.entries()-->Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()[ FD ]
Line_101 $$ while (all.hasMoreElements()) -->Line_103 $$ long zSize = zEntry.getSize()[ CD ]
Line_103 $$ long zSize = zEntry.getSize()-->Line_103 $$ long zSize = zEntry.getSize()[ CD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_103 $$ long zSize = zEntry.getSize()[ FD ]
Line_101 $$ while (all.hasMoreElements()) -->Line_104 $$ if (zSize > 0) [ CD ]
Line_103 $$ long zSize = zEntry.getSize()-->Line_104 $$ if (zSize > 0) [ FD ]
Line_104 $$ if (zSize > 0) -->Line_105 $$ if (zEntry.getName().endsWith("script")) [ CD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_105 $$ if (zEntry.getName().endsWith("script")) [ CD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_105 $$ if (zEntry.getName().endsWith("script")) [ FD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)[ CD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)[ CD ]
Line_99 $$ ZipFile zFile = new ZipFile(outFile)-->Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])[ CD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_108 $$ int ch[ CD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_109 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_105 $$ if (zEntry.getName().endsWith("script")) [ CD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_109 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_108 $$ int ch-->Line_109 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_109 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_109 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_110 $$ fos.write(ch)[ CD ]
Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_110 $$ fos.write(ch)[ FD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_110 $$ fos.write(ch)[ FD ]
Line_108 $$ int ch-->Line_110 $$ fos.write(ch)[ FD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_112 $$ instream.close()[ CD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_112 $$ instream.close()[ FD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_113 $$ fos.close()[ CD ]
Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_113 $$ fos.close()[ FD ]
Line_105 $$ if (zEntry.getName().endsWith("script")) -->Line_114 $$ if (zEntry.getName().endsWith("data")) [ CD ]
Line_114 $$ if (zEntry.getName().endsWith("data")) -->Line_114 $$ if (zEntry.getName().endsWith("data")) [ CD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_114 $$ if (zEntry.getName().endsWith("data")) [ FD ]
Line_114 $$ if (zEntry.getName().endsWith("data")) -->Line_115 $$ InputStream instream = zFile.getInputStream(zEntry)[ CD ]
Line_99 $$ ZipFile zFile = new ZipFile(outFile)-->Line_115 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_115 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_114 $$ if (zEntry.getName().endsWith("data")) -->Line_118 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_114 $$ if (zEntry.getName().endsWith("data")) -->Line_114 $$ if (zEntry.getName().endsWith("data")) [ CD ]
Line_118 $$ while ((ch = instream.read()) != -1) -->Line_118 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_118 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_108 $$ int ch-->Line_118 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_118 $$ while ((ch = instream.read()) != -1) -->Line_118 $$ while ((ch = instream.read()) != -1) [ CD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_118 $$ while ((ch = instream.read()) != -1) [ FD ]
Line_118 $$ while ((ch = instream.read()) != -1) -->Line_119 $$ fos.write(ch)[ CD ]
Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_119 $$ fos.write(ch)[ FD ]
Line_118 $$ while ((ch = instream.read()) != -1) -->Line_119 $$ fos.write(ch)[ FD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_119 $$ fos.write(ch)[ FD ]
Line_108 $$ int ch-->Line_119 $$ fos.write(ch)[ FD ]
Line_114 $$ if (zEntry.getName().endsWith("data")) -->Line_121 $$ instream.close()[ CD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_121 $$ instream.close()[ FD ]
Line_114 $$ if (zEntry.getName().endsWith("data")) -->Line_122 $$ fos.close()[ CD ]
Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_122 $$ fos.close()[ FD ]
Line_126 $$ File xFile = new File(outFile)-->Line_127 $$ xFile.deleteOnExit()[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_132 $$ monitor.done()[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_133 $$ monitor.beginTask("Install Worm Definition", 10000)[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_134 $$ monitor.worked(2500)[ FD ]
Line_137 $$ if (!wormDB.getConn().isClosed()) -->Line_137 $$ if (!wormDB.getConn().isClosed()) [ CD ]
Line_137 $$ if (!wormDB.getConn().isClosed()) -->Line_137 $$ if (!wormDB.getConn().isClosed()) [ CD ]
Line_137 $$ if (!wormDB.getConn().isClosed()) -->Line_138 $$ shutdownDB()[ CD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_141 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_141 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_141 $$ for (int i = 0; i < 2; i++) [ FD ]
Line_143 $$ Process pid = Runtime.getRuntime().exec("cmd /c copy \"" + oldLoc[i].replace("/", "\\") + "\" \"" + newLoc[i].replace("/", "\\") + "\"/y")-->Line_143 $$ Process pid = Runtime.getRuntime().exec("cmd /c copy \"" + oldLoc[i].replace("/", "\\") + "\" \"" + newLoc[i].replace("/", "\\") + "\"/y")[ CD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_147 $$ new File(oldLoc[i]).deleteOnExit()[ CD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_149 $$ monitor.worked(2500)[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_153 $$ monitor.worked(2500)[ FD ]
Line_5 $$ updateJob = new Job("Worm Database Update") -->Line_154 $$ monitor.done()[ FD ]
Line_156 $$ if (isModal(this)) -->Line_156 $$ if (isModal(this)) [ CD ]
Line_156 $$ if (isModal(this)) -->Line_157 $$ showResults()[ CD ]
Line_156 $$ if (isModal(this)) -->Line_159 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_156 $$ if (isModal(this)) -->Line_160 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction())[ CD ]
Line_164 $$ if (isModal(this)) -->Line_164 $$ if (isModal(this)) [ CD ]
Line_164 $$ if (isModal(this)) -->Line_165 $$ showResults2()[ CD ]
Line_164 $$ if (isModal(this)) -->Line_167 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_164 $$ if (isModal(this)) -->Line_168 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction2())[ CD ]
Line_178 $$ if (isModal(this)) -->Line_178 $$ if (isModal(this)) [ CD ]
Line_178 $$ if (isModal(this)) -->Line_179 $$ showResults2()[ CD ]
Line_178 $$ if (isModal(this)) -->Line_181 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_178 $$ if (isModal(this)) -->Line_182 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction2())[ CD ]
Line_43 $$ if (!getDBVersion().equals(latestVersion)) -->Line_187 $$ cancel()[ CD ]
Line_43 $$ if (!getDBVersion().equals(latestVersion)) -->Line_188 $$ setProperty(IProgressConstants.ICON_PROPERTY, IconImg.liveUpIco)[ CD ]
Line_43 $$ if (!getDBVersion().equals(latestVersion)) -->Line_189 $$ if (isModal(this)) [ CD ]
Line_189 $$ if (isModal(this)) -->Line_189 $$ if (isModal(this)) [ CD ]
Line_189 $$ if (isModal(this)) -->Line_190 $$ showResults1()[ CD ]
Line_189 $$ if (isModal(this)) -->Line_192 $$ setProperty(IProgressConstants.KEEP_PROPERTY, Boolean.TRUE)[ CD ]
Line_189 $$ if (isModal(this)) -->Line_193 $$ setProperty(IProgressConstants.ACTION_PROPERTY, getUpdateCompletedAction1())[ CD ]
Line_205 $$ if (getValue("AUTO_UPDATE"))-->Line_205 $$ if (getValue("AUTO_UPDATE"))[ CD ]
Line_205 $$ if (getValue("AUTO_UPDATE"))-->Line_205 $$ schedule(10800000)[ CD ]
Line_3 $$ if (!updateRunning) -->Line_209 $$ updateJob.schedule()[ CD ]
Line_74 $$ buffer = new byte[1024]-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_76 $$ buffer = new byte[(int) (size - numWritten)]-->Line_78 $$ int read = in.read(buffer)[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_79 $$ if (read == -1) [ FD ]
Line_74 $$ buffer = new byte[1024]-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_76 $$ buffer = new byte[(int) (size - numWritten)]-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_82 $$ out.write(buffer, 0, read)[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_83 $$ numWritten += read[ FD ]
Line_78 $$ int read = in.read(buffer)-->Line_85 $$ monitor.worked(read)[ FD ]
Line_83 $$ numWritten += read-->Line_87 $$ if (size == numWritten) [ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_103 $$ long zSize = zEntry.getSize()[ FD ]
Line_103 $$ long zSize = zEntry.getSize()-->Line_104 $$ if (zSize > 0) [ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_105 $$ if (zEntry.getName().endsWith("script")) [ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_112 $$ instream.close()[ FD ]
Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_113 $$ fos.close()[ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_114 $$ if (zEntry.getName().endsWith("data")) [ FD ]
Line_102 $$ ZipEntry zEntry = (ZipEntry) all.nextElement()-->Line_115 $$ InputStream instream = zFile.getInputStream(zEntry)[ FD ]
Line_106 $$ InputStream instream = zFile.getInputStream(zEntry)-->Line_121 $$ instream.close()[ FD ]
Line_107 $$ FileOutputStream fos = new FileOutputStream(oldLoc[0])-->Line_122 $$ fos.close()[ FD ]
Line_109 $$ while ((ch = instream.read()) != -1) -->Line_110 $$ fos.write(ch)[ FD ]
Line_118 $$ while ((ch = instream.read()) != -1) -->Line_119 $$ fos.write(ch)[ FD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_141 $$ for (int i = 0; i < 2; i++) [ FD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_141 $$ for (int i = 0; i < 2; i++) [ FD ]
Line_141 $$ for (int i = 0; i < 2; i++) -->Line_141 $$ for (int i = 0; i < 2; i++) [ FD ]
