Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ String s[ CD ]
Line_2 $$ public void run() -->Line_4 $$ s = ""[ CD ]
Line_3 $$ String s-->Line_4 $$ s = ""[ FD ]
Line_4 $$ s = ""-->Line_4 $$ s = ""[ FD ]
Line_6 $$ URL url = new URL("http://www.m-w.com/dictionary/" + word)-->Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) -->Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) [ FD ]
Line_8 $$ String str-->Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) [ FD ]
Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) -->Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) [ CD ]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) [ FD ]
Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) -->Line_10 $$ s = s + str[ CD ]
Line_10 $$ s = s + str-->Line_10 $$ s = s + str[ FD ]
Line_3 $$ String s-->Line_10 $$ s = s + str[ FD ]
Line_4 $$ s = ""-->Line_10 $$ s = s + str[ FD ]
Line_10 $$ s = s + str-->Line_10 $$ s = s + str[ FD ]
Line_3 $$ String s-->Line_10 $$ s = s + str[ FD ]
Line_4 $$ s = ""-->Line_10 $$ s = s + str[ FD ]
Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) -->Line_10 $$ s = s + str[ FD ]
Line_8 $$ String str-->Line_10 $$ s = s + str[ FD ]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_12 $$ in.close()[ FD ]
Line_2 $$ public void run() -->Line_16 $$ Pattern pattern = Pattern.compile("Main Entry:.+?<br>(.+?)</td>", Pattern.CASE_INSENSITIVE | Pattern.DOTALL)[ CD ]
Line_16 $$ Pattern pattern = Pattern.compile("Main Entry:.+?<br>(.+?)</td>", Pattern.CASE_INSENSITIVE | Pattern.DOTALL)-->Line_16 $$ Pattern pattern = Pattern.compile("Main Entry:.+?<br>(.+?)</td>", Pattern.CASE_INSENSITIVE | Pattern.DOTALL)[ CD ]
Line_2 $$ public void run() -->Line_17 $$ Matcher matcher = pattern.matcher(s)[ CD ]
Line_17 $$ Matcher matcher = pattern.matcher(s)-->Line_17 $$ Matcher matcher = pattern.matcher(s)[ CD ]
Line_16 $$ Pattern pattern = Pattern.compile("Main Entry:.+?<br>(.+?)</td>", Pattern.CASE_INSENSITIVE | Pattern.DOTALL)-->Line_17 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_10 $$ s = s + str-->Line_17 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_3 $$ String s-->Line_17 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_4 $$ s = ""-->Line_17 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_2 $$ public void run() -->Line_18 $$ java.io.StringWriter wr = new java.io.StringWriter()[ CD ]
Line_2 $$ public void run() -->Line_19 $$ HTMLDocument doc = null[ CD ]
Line_2 $$ public void run() -->Line_20 $$ HTMLEditorKit kit = (HTMLEditorKit) editor.getEditorKit()[ CD ]
Line_19 $$ HTMLDocument doc = null-->Line_22 $$ doc = (HTMLDocument) editor.getDocument()[ FD ]
Line_22 $$ doc = (HTMLDocument) editor.getDocument()-->Line_22 $$ doc = (HTMLDocument) editor.getDocument()[ FD ]
Line_2 $$ public void run() -->Line_25 $$ System.out.println(wr)[ CD ]
Line_18 $$ java.io.StringWriter wr = new java.io.StringWriter()-->Line_25 $$ System.out.println(wr)[ FD ]
Line_2 $$ public void run() -->Line_26 $$ editor.setContentType("text/html")[ CD ]
Line_2 $$ public void run() -->Line_27 $$ if (matcher.find())[ CD ]
Line_17 $$ Matcher matcher = pattern.matcher(s)-->Line_27 $$ if (matcher.find())[ FD ]
Line_27 $$ if (matcher.find())-->Line_27 $$ if (matcher.find())[ CD ]
Line_17 $$ Matcher matcher = pattern.matcher(s)-->Line_27 $$ if (matcher.find())[ FD ]
Line_20 $$ HTMLEditorKit kit = (HTMLEditorKit) editor.getEditorKit()-->Line_28 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR>" + matcher.group(1) + "<HR>", 0, 0, null)[ FD ]
Line_19 $$ HTMLDocument doc = null-->Line_28 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR>" + matcher.group(1) + "<HR>", 0, 0, null)[ FD ]
Line_22 $$ doc = (HTMLDocument) editor.getDocument()-->Line_28 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR>" + matcher.group(1) + "<HR>", 0, 0, null)[ FD ]
Line_17 $$ Matcher matcher = pattern.matcher(s)-->Line_28 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR>" + matcher.group(1) + "<HR>", 0, 0, null)[ FD ]
Line_20 $$ HTMLEditorKit kit = (HTMLEditorKit) editor.getEditorKit()-->Line_32 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR><FONT COLOR='RED'>NOT FOUND!!</FONT><HR>", 0, 0, null)[ FD ]
Line_19 $$ HTMLDocument doc = null-->Line_32 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR><FONT COLOR='RED'>NOT FOUND!!</FONT><HR>", 0, 0, null)[ FD ]
Line_22 $$ doc = (HTMLDocument) editor.getDocument()-->Line_32 $$ kit.insertHTML(doc, editor.getCaretPosition(), "<HR><FONT COLOR='RED'>NOT FOUND!!</FONT><HR>", 0, 0, null)[ FD ]
Line_2 $$ public void run() -->Line_36 $$ button.setEnabled(true)[ CD ]
Line_10 $$ s = s + str-->Line_10 $$ s = s + str[ FD ]
Line_9 $$ while (((str = in.readLine()) != null) && (!stopped)) -->Line_10 $$ s = s + str[ FD ]
