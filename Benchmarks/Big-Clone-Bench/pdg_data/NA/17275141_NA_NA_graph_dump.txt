Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException [ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_3 $$ File src = new File(sourceName)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_4 $$ File dest = new File(destName)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_5 $$ BufferedInputStream source = null[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_6 $$ BufferedOutputStream destination = null[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_7 $$ byte[] buffer[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_8 $$ int bytes_read[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_9 $$ long byteCount = 0[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_10 $$ if (!src.exists())[ CD ]
Line_10 $$ if (!src.exists())-->Line_10 $$ if (!src.exists())[ CD ]
Line_10 $$ if (!src.exists())-->Line_10 $$ if (!src.exists())[ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_10 $$ if (!src.exists())[ FD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_11 $$ if (!src.canRead())[ CD ]
Line_11 $$ if (!src.canRead())-->Line_11 $$ if (!src.canRead())[ CD ]
Line_11 $$ if (!src.canRead())-->Line_11 $$ if (!src.canRead())[ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_11 $$ if (!src.canRead())[ FD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_12 $$ if (src.isFile()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_12 $$ if (src.isFile()) [ FD ]
Line_12 $$ if (src.isFile()) -->Line_12 $$ if (src.isFile()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_12 $$ if (src.isFile()) [ FD ]
Line_12 $$ if (src.isFile()) -->Line_13 $$ if (!dest.exists()) [ CD ]
Line_13 $$ if (!dest.exists()) -->Line_13 $$ if (!dest.exists()) [ CD ]
Line_13 $$ if (!dest.exists()) -->Line_13 $$ if (!dest.exists()) [ CD ]
Line_4 $$ File dest = new File(destName)-->Line_13 $$ if (!dest.exists()) [ FD ]
Line_13 $$ if (!dest.exists()) -->Line_14 $$ File parentdir = Utils.parent(dest)[ CD ]
Line_14 $$ File parentdir = Utils.parent(dest)-->Line_14 $$ File parentdir = Utils.parent(dest)[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_14 $$ File parentdir = Utils.parent(dest)[ FD ]
Line_13 $$ if (!dest.exists()) -->Line_15 $$ if (!parentdir.exists())[ CD ]
Line_15 $$ if (!parentdir.exists())-->Line_15 $$ if (!parentdir.exists())[ CD ]
Line_15 $$ if (!parentdir.exists())-->Line_15 $$ if (!parentdir.exists())[ CD ]
Line_14 $$ File parentdir = Utils.parent(dest)-->Line_15 $$ if (!parentdir.exists())[ FD ]
Line_15 $$ if (!parentdir.exists())-->Line_15 $$ parentdir.mkdir()[ CD ]
Line_14 $$ File parentdir = Utils.parent(dest)-->Line_15 $$ parentdir.mkdir()[ FD ]
Line_13 $$ if (!dest.exists()) -->Line_16 $$ if (dest.isDirectory()) [ CD ]
Line_4 $$ File dest = new File(destName)-->Line_16 $$ if (dest.isDirectory()) [ FD ]
Line_16 $$ if (dest.isDirectory()) -->Line_16 $$ if (dest.isDirectory()) [ CD ]
Line_4 $$ File dest = new File(destName)-->Line_16 $$ if (dest.isDirectory()) [ FD ]
Line_16 $$ if (dest.isDirectory()) -->Line_17 $$ if (src.isDirectory())[ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_17 $$ if (src.isDirectory())[ FD ]
Line_17 $$ if (src.isDirectory())-->Line_17 $$ if (src.isDirectory())[ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_17 $$ if (src.isDirectory())[ FD ]
Line_17 $$ if (src.isDirectory())-->Line_17 $$ dest = new File(dest + File.separator + src)[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_17 $$ dest = new File(dest + File.separator + src)[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_17 $$ dest = new File(dest + File.separator + src)[ FD ]
Line_17 $$ if (src.isDirectory())-->Line_17 $$ dest = new File(dest + File.separator + src.getName())[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_17 $$ dest = new File(dest + File.separator + src.getName())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_17 $$ dest = new File(dest + File.separator + src.getName())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_17 $$ dest = new File(dest + File.separator + src.getName())[ FD ]
Line_3 $$ File src = new File(sourceName)-->Line_17 $$ dest = new File(dest + File.separator + src.getName())[ FD ]
Line_12 $$ if (src.isFile()) -->Line_19 $$ if (src.isDirectory()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_19 $$ if (src.isDirectory()) [ FD ]
Line_19 $$ if (src.isDirectory()) -->Line_19 $$ if (src.isDirectory()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_19 $$ if (src.isDirectory()) [ FD ]
Line_19 $$ if (src.isDirectory()) -->Line_20 $$ if (dest.isFile())[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_20 $$ if (dest.isFile())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_20 $$ if (dest.isFile())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_20 $$ if (dest.isFile())[ FD ]
Line_20 $$ if (dest.isFile())-->Line_20 $$ if (dest.isFile())[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_20 $$ if (dest.isFile())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_20 $$ if (dest.isFile())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_20 $$ if (dest.isFile())[ FD ]
Line_19 $$ if (src.isDirectory()) -->Line_21 $$ if (!dest.exists())[ CD ]
Line_21 $$ if (!dest.exists())-->Line_21 $$ if (!dest.exists())[ CD ]
Line_21 $$ if (!dest.exists())-->Line_21 $$ if (!dest.exists())[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_21 $$ if (!dest.exists())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_21 $$ if (!dest.exists())[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_21 $$ if (!dest.exists())[ FD ]
Line_21 $$ if (!dest.exists())-->Line_21 $$ dest.mkdir()[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_21 $$ dest.mkdir()[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_21 $$ dest.mkdir()[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_21 $$ dest.mkdir()[ FD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ CD ]
Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ CD ]
Line_4 $$ File dest = new File(destName)-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ FD ]
Line_4 $$ File dest = new File(destName)-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src)-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ FD ]
Line_17 $$ dest = new File(dest + File.separator + src.getName())-->Line_23 $$ if ((!dest.canWrite()) && (dest.exists()))[ FD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_24 $$ if (src.isFile()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_24 $$ if (src.isFile()) [ FD ]
Line_24 $$ if (src.isFile()) -->Line_24 $$ if (src.isFile()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_24 $$ if (src.isFile()) [ FD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_26 $$ if (status != null) [ FD ]
Line_26 $$ if (status != null) -->Line_27 $$ status.setMaximum(100)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_27 $$ status.setMaximum(100)[ FD ]
Line_26 $$ if (status != null) -->Line_28 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), 50)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_28 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), 50)[ FD ]
Line_3 $$ File src = new File(sourceName)-->Line_28 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), 50)[ FD ]
Line_5 $$ BufferedInputStream source = null-->Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))[ FD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))[ FD ]
Line_7 $$ byte[] buffer-->Line_32 $$ buffer = new byte[4096][ FD ]
Line_32 $$ buffer = new byte[4096]-->Line_32 $$ buffer = new byte[4096][ FD ]
Line_9 $$ long byteCount = 0-->Line_33 $$ byteCount = 0[ FD ]
Line_33 $$ byteCount = 0-->Line_33 $$ byteCount = 0[ FD ]
Line_34 $$ while (true) -->Line_35 $$ bytes_read = source.read(buffer)[ CD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_35 $$ bytes_read = source.read(buffer)[ FD ]
Line_8 $$ int bytes_read-->Line_35 $$ bytes_read = source.read(buffer)[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_35 $$ bytes_read = source.read(buffer)[ CD ]
Line_5 $$ BufferedInputStream source = null-->Line_35 $$ bytes_read = source.read(buffer)[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_35 $$ bytes_read = source.read(buffer)[ FD ]
Line_7 $$ byte[] buffer-->Line_35 $$ bytes_read = source.read(buffer)[ FD ]
Line_32 $$ buffer = new byte[4096]-->Line_35 $$ bytes_read = source.read(buffer)[ FD ]
Line_34 $$ while (true) -->Line_36 $$ if (bytes_read == -1)[ CD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_36 $$ if (bytes_read == -1)[ FD ]
Line_8 $$ int bytes_read-->Line_36 $$ if (bytes_read == -1)[ FD ]
Line_34 $$ while (true) -->Line_37 $$ destination.write(buffer, 0, bytes_read)[ CD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_7 $$ byte[] buffer-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_32 $$ buffer = new byte[4096]-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_8 $$ int bytes_read-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_34 $$ while (true) -->Line_38 $$ byteCount = byteCount + bytes_read[ CD ]
Line_38 $$ byteCount = byteCount + bytes_read-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_9 $$ long byteCount = 0-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_33 $$ byteCount = 0-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_38 $$ byteCount = byteCount + bytes_read-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_9 $$ long byteCount = 0-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_33 $$ byteCount = 0-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_8 $$ int bytes_read-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_41 $$ if (status != null) [ FD ]
Line_41 $$ if (status != null) -->Line_42 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), 100)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_42 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), 100)[ FD ]
Line_3 $$ File src = new File(sourceName)-->Line_42 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), 100)[ FD ]
Line_5 $$ BufferedInputStream source = null-->Line_44 $$ if (source != null)[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_44 $$ if (source != null)[ FD ]
Line_44 $$ if (source != null)-->Line_44 $$ source.close()[ CD ]
Line_5 $$ BufferedInputStream source = null-->Line_44 $$ source.close()[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_44 $$ source.close()[ FD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_45 $$ if (destination != null)[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_45 $$ if (destination != null)[ FD ]
Line_45 $$ if (destination != null)-->Line_45 $$ destination.close()[ CD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_45 $$ destination.close()[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_45 $$ destination.close()[ FD ]
Line_24 $$ if (src.isFile()) -->Line_47 $$ if (src.isDirectory()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_47 $$ if (src.isDirectory()) [ FD ]
Line_47 $$ if (src.isDirectory()) -->Line_47 $$ if (src.isDirectory()) [ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_47 $$ if (src.isDirectory()) [ FD ]
Line_47 $$ if (src.isDirectory()) -->Line_48 $$ String targetfile, target, targetdest[ CD ]
Line_47 $$ if (src.isDirectory()) -->Line_49 $$ String[] files = src.list()[ CD ]
Line_49 $$ String[] files = src.list()-->Line_49 $$ String[] files = src.list()[ CD ]
Line_3 $$ File src = new File(sourceName)-->Line_49 $$ String[] files = src.list()[ FD ]
Line_47 $$ if (src.isDirectory()) -->Line_50 $$ if (status != null) [ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_50 $$ if (status != null) [ FD ]
Line_50 $$ if (status != null) -->Line_51 $$ status.setMaximum(files.length)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_51 $$ status.setMaximum(files.length)[ FD ]
Line_47 $$ if (src.isDirectory()) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_47 $$ if (src.isDirectory()) -->Line_47 $$ if (src.isDirectory()) [ CD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_54 $$ if (status != null) [ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_54 $$ if (status != null) [ FD ]
Line_54 $$ if (status != null) -->Line_55 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), i)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_55 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), i)[ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_55 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), i)[ FD ]
Line_3 $$ File src = new File(sourceName)-->Line_55 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), i)[ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_57 $$ targetfile = files[i][ CD ]
Line_57 $$ targetfile = files[i]-->Line_57 $$ targetfile = files[i][ FD ]
Line_48 $$ String targetfile, target, targetdest-->Line_57 $$ targetfile = files[i][ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_58 $$ target = src + File.separator + targetfile[ CD ]
Line_58 $$ target = src + File.separator + targetfile-->Line_58 $$ target = src + File.separator + targetfile[ FD ]
Line_48 $$ String targetfile, target, targetdest-->Line_58 $$ target = src + File.separator + targetfile[ FD ]
Line_57 $$ targetfile = files[i]-->Line_58 $$ target = src + File.separator + targetfile[ FD ]
Line_48 $$ String targetfile, target, targetdest-->Line_58 $$ target = src + File.separator + targetfile[ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_59 $$ targetdest = dest + File.separator + targetfile[ CD ]
Line_59 $$ targetdest = dest + File.separator + targetfile-->Line_59 $$ targetdest = dest + File.separator + targetfile[ FD ]
Line_48 $$ String targetfile, target, targetdest-->Line_59 $$ targetdest = dest + File.separator + targetfile[ FD ]
Line_57 $$ targetfile = files[i]-->Line_59 $$ targetdest = dest + File.separator + targetfile[ FD ]
Line_48 $$ String targetfile, target, targetdest-->Line_59 $$ targetdest = dest + File.separator + targetfile[ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_60 $$ if ((new File(target)).isDirectory()) [ CD ]
Line_60 $$ if ((new File(target)).isDirectory()) -->Line_60 $$ if ((new File(target)).isDirectory()) [ CD ]
Line_60 $$ if ((new File(target)).isDirectory()) -->Line_61 $$ copy(new File(target).getCanonicalPath(), new File(targetdest).getCanonicalPath(), status)[ CD ]
Line_2 $$ public static void copy(String sourceName, String destName, StatusWindow status) throws IOException -->Line_61 $$ copy(new File(target).getCanonicalPath(), new File(targetdest).getCanonicalPath(), status)[ FD ]
Line_64 $$ byteCount = 0-->Line_64 $$ byteCount = 0[ FD ]
Line_38 $$ byteCount = byteCount + bytes_read-->Line_64 $$ byteCount = 0[ FD ]
Line_9 $$ long byteCount = 0-->Line_64 $$ byteCount = 0[ FD ]
Line_33 $$ byteCount = 0-->Line_64 $$ byteCount = 0[ FD ]
Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))-->Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))[ FD ]
Line_5 $$ BufferedInputStream source = null-->Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))[ FD ]
Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))-->Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))[ FD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))[ FD ]
Line_67 $$ buffer = new byte[4096]-->Line_67 $$ buffer = new byte[4096][ FD ]
Line_7 $$ byte[] buffer-->Line_67 $$ buffer = new byte[4096][ FD ]
Line_32 $$ buffer = new byte[4096]-->Line_67 $$ buffer = new byte[4096][ FD ]
Line_68 $$ while (true) -->Line_69 $$ bytes_read = source.read(buffer)[ CD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_8 $$ int bytes_read-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_69 $$ bytes_read = source.read(buffer)[ CD ]
Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_5 $$ BufferedInputStream source = null-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_67 $$ buffer = new byte[4096]-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_7 $$ byte[] buffer-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_32 $$ buffer = new byte[4096]-->Line_69 $$ bytes_read = source.read(buffer)[ FD ]
Line_68 $$ while (true) -->Line_70 $$ if (bytes_read == -1)[ CD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_70 $$ if (bytes_read == -1)[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_70 $$ if (bytes_read == -1)[ FD ]
Line_8 $$ int bytes_read-->Line_70 $$ if (bytes_read == -1)[ FD ]
Line_68 $$ while (true) -->Line_71 $$ destination.write(buffer, 0, bytes_read)[ CD ]
Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_67 $$ buffer = new byte[4096]-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_7 $$ byte[] buffer-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_32 $$ buffer = new byte[4096]-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_8 $$ int bytes_read-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_68 $$ while (true) -->Line_72 $$ byteCount = byteCount + bytes_read[ CD ]
Line_72 $$ byteCount = byteCount + bytes_read-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_64 $$ byteCount = 0-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_38 $$ byteCount = byteCount + bytes_read-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_9 $$ long byteCount = 0-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_33 $$ byteCount = 0-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_72 $$ byteCount = byteCount + bytes_read-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_64 $$ byteCount = 0-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_38 $$ byteCount = byteCount + bytes_read-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_9 $$ long byteCount = 0-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_33 $$ byteCount = 0-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_8 $$ int bytes_read-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))-->Line_75 $$ if (source != null)[ FD ]
Line_5 $$ BufferedInputStream source = null-->Line_75 $$ if (source != null)[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_75 $$ if (source != null)[ FD ]
Line_75 $$ if (source != null)-->Line_75 $$ source.close()[ CD ]
Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))-->Line_75 $$ source.close()[ FD ]
Line_5 $$ BufferedInputStream source = null-->Line_75 $$ source.close()[ FD ]
Line_30 $$ source = new BufferedInputStream(new FileInputStream(src))-->Line_75 $$ source.close()[ FD ]
Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))-->Line_76 $$ if (destination != null)[ FD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_76 $$ if (destination != null)[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_76 $$ if (destination != null)[ FD ]
Line_76 $$ if (destination != null)-->Line_76 $$ destination.close()[ CD ]
Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))-->Line_76 $$ destination.close()[ FD ]
Line_6 $$ BufferedOutputStream destination = null-->Line_76 $$ destination.close()[ FD ]
Line_31 $$ destination = new BufferedOutputStream(new FileOutputStream(dest))-->Line_76 $$ destination.close()[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_36 $$ if (bytes_read == -1)[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_37 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_38 $$ byteCount = byteCount + bytes_read-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_35 $$ bytes_read = source.read(buffer)-->Line_38 $$ byteCount = byteCount + bytes_read[ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_53 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_53 $$ for (int i = 0; i < files.length; i++) -->Line_55 $$ status.setMessage(Utils.trimFileName(src.toString(), 40), i)[ FD ]
Line_57 $$ targetfile = files[i]-->Line_58 $$ target = src + File.separator + targetfile[ FD ]
Line_57 $$ targetfile = files[i]-->Line_59 $$ targetdest = dest + File.separator + targetfile[ FD ]
Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))-->Line_75 $$ if (source != null)[ FD ]
Line_65 $$ source = new BufferedInputStream(new FileInputStream(target))-->Line_75 $$ source.close()[ FD ]
Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))-->Line_76 $$ if (destination != null)[ FD ]
Line_66 $$ destination = new BufferedOutputStream(new FileOutputStream(targetdest))-->Line_76 $$ destination.close()[ FD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_70 $$ if (bytes_read == -1)[ FD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_71 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_72 $$ byteCount = byteCount + bytes_read-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
Line_69 $$ bytes_read = source.read(buffer)-->Line_72 $$ byteCount = byteCount + bytes_read[ FD ]
