Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testWriteAndReadBigger() throws Exception [ CD ]
Line_2 $$ public void testWriteAndReadBigger() throws Exception -->Line_3 $$ JCFSFileServer server = new JCFSFileServer(defaultTcpPort, defaultTcpAddress, defaultUdpPort, defaultUdpAddress, dir, 0, 0)[ CD ]
Line_2 $$ public void testWriteAndReadBigger() throws Exception -->Line_4 $$ JCFS.configureDiscovery(defaultUdpAddress, defaultUdpPort)[ CD ]
Line_3 $$ JCFSFileServer server = new JCFSFileServer(defaultTcpPort, defaultTcpAddress, defaultUdpPort, defaultUdpAddress, dir, 0, 0)-->Line_6 $$ server.start()[ FD ]
Line_10 $$ int size = 50 * 1024-->Line_11 $$ for (int i = 0; i < size; i++) [ FD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_11 $$ for (int i = 0; i < size; i++) [ CD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_11 $$ for (int i = 0; i < size; i++) [ CD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_11 $$ for (int i = 0; i < size; i++) [ FD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_12 $$ body = body + "a"[ CD ]
Line_12 $$ body = body + "a"-->Line_12 $$ body = body + "a"[ FD ]
Line_9 $$ String body = ""-->Line_12 $$ body = body + "a"[ FD ]
Line_12 $$ body = body + "a"-->Line_12 $$ body = body + "a"[ FD ]
Line_9 $$ String body = ""-->Line_12 $$ body = body + "a"[ FD ]
Line_8 $$ RFileOutputStream out = new RFileOutputStream(file)-->Line_14 $$ out.write(body.getBytes("utf-8"))[ FD ]
Line_12 $$ body = body + "a"-->Line_14 $$ out.write(body.getBytes("utf-8"))[ FD ]
Line_9 $$ String body = ""-->Line_14 $$ out.write(body.getBytes("utf-8"))[ FD ]
Line_8 $$ RFileOutputStream out = new RFileOutputStream(file)-->Line_15 $$ out.close()[ FD ]
Line_16 $$ File expected = new File(dir, "testreadwrite.txt")-->Line_17 $$ assertTrue(expected.isFile())[ FD ]
Line_12 $$ body = body + "a"-->Line_18 $$ assertEquals(body.length(), expected.length())[ FD ]
Line_9 $$ String body = ""-->Line_18 $$ assertEquals(body.length(), expected.length())[ FD ]
Line_16 $$ File expected = new File(dir, "testreadwrite.txt")-->Line_18 $$ assertEquals(body.length(), expected.length())[ FD ]
Line_12 $$ body = body + "a"-->Line_20 $$ byte[] buffer = new byte[body.length()][ FD ]
Line_9 $$ String body = ""-->Line_20 $$ byte[] buffer = new byte[body.length()][ FD ]
Line_21 $$ int readCount = in.read(buffer)-->Line_21 $$ int readCount = in.read(buffer)[ CD ]
Line_19 $$ RFileInputStream in = new RFileInputStream(file)-->Line_21 $$ int readCount = in.read(buffer)[ FD ]
Line_20 $$ byte[] buffer = new byte[body.length()]-->Line_21 $$ int readCount = in.read(buffer)[ FD ]
Line_19 $$ RFileInputStream in = new RFileInputStream(file)-->Line_22 $$ in.close()[ FD ]
Line_21 $$ int readCount = in.read(buffer)-->Line_23 $$ assertEquals(body.length(), readCount)[ FD ]
Line_12 $$ body = body + "a"-->Line_23 $$ assertEquals(body.length(), readCount)[ FD ]
Line_9 $$ String body = ""-->Line_23 $$ assertEquals(body.length(), readCount)[ FD ]
Line_12 $$ body = body + "a"-->Line_25 $$ assertEquals(body, resultRead)[ FD ]
Line_9 $$ String body = ""-->Line_25 $$ assertEquals(body, resultRead)[ FD ]
Line_24 $$ String resultRead = new String(buffer, "utf-8")-->Line_25 $$ assertEquals(body, resultRead)[ FD ]
Line_3 $$ JCFSFileServer server = new JCFSFileServer(defaultTcpPort, defaultTcpAddress, defaultUdpPort, defaultUdpAddress, dir, 0, 0)-->Line_27 $$ server.stop()[ FD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_11 $$ for (int i = 0; i < size; i++) [ FD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_11 $$ for (int i = 0; i < size; i++) [ FD ]
Line_11 $$ for (int i = 0; i < size; i++) -->Line_11 $$ for (int i = 0; i < size; i++) [ FD ]
Line_12 $$ body = body + "a"-->Line_12 $$ body = body + "a"[ FD ]
