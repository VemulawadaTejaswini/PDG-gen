Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException [ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_3 $$ String url = properties.getValue(propUrl)[ CD ]
Line_3 $$ String url = properties.getValue(propUrl)-->Line_3 $$ String url = properties.getValue(propUrl)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_3 $$ String url = properties.getValue(propUrl)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_4 $$ URI uri[ CD ]
Line_4 $$ URI uri-->Line_6 $$ uri = new URI(url)[ FD ]
Line_6 $$ uri = new URI(url)-->Line_6 $$ uri = new URI(url)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_10 $$ String login = properties.getValue(propLogin)[ CD ]
Line_10 $$ String login = properties.getValue(propLogin)-->Line_10 $$ String login = properties.getValue(propLogin)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_10 $$ String login = properties.getValue(propLogin)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_11 $$ String password = properties.getValue(propPassword)[ CD ]
Line_11 $$ String password = properties.getValue(propPassword)-->Line_11 $$ String password = properties.getValue(propPassword)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_11 $$ String password = properties.getValue(propPassword)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_12 $$ String instanceId = properties.getValue(propInstanceId)[ CD ]
Line_12 $$ String instanceId = properties.getValue(propInstanceId)-->Line_12 $$ String instanceId = properties.getValue(propInstanceId)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_12 $$ String instanceId = properties.getValue(propInstanceId)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_13 $$ HttpParams params = new BasicHttpParams()[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_14 $$ HttpProtocolParamBean paramsBean = new HttpProtocolParamBean(params)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_15 $$ paramsBean.setVersion(HttpVersion.HTTP_1_1)[ CD ]
Line_14 $$ HttpProtocolParamBean paramsBean = new HttpProtocolParamBean(params)-->Line_15 $$ paramsBean.setVersion(HttpVersion.HTTP_1_1)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_16 $$ paramsBean.setContentCharset("UTF-8")[ CD ]
Line_14 $$ HttpProtocolParamBean paramsBean = new HttpProtocolParamBean(params)-->Line_16 $$ paramsBean.setContentCharset("UTF-8")[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_17 $$ HttpClientParams.setRedirecting(params, true)[ CD ]
Line_13 $$ HttpParams params = new BasicHttpParams()-->Line_17 $$ HttpClientParams.setRedirecting(params, true)[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_18 $$ DefaultHttpClient httpClient = new DefaultHttpClient(params)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_19 $$ CredentialsProvider credential = httpClient.getCredentialsProvider()[ CD ]
Line_19 $$ CredentialsProvider credential = httpClient.getCredentialsProvider()-->Line_19 $$ CredentialsProvider credential = httpClient.getCredentialsProvider()[ CD ]
Line_18 $$ DefaultHttpClient httpClient = new DefaultHttpClient(params)-->Line_19 $$ CredentialsProvider credential = httpClient.getCredentialsProvider()[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_20 $$ if (login != null && login.length() > 0 && password != null && password.length() > 0)[ CD ]
Line_10 $$ String login = properties.getValue(propLogin)-->Line_20 $$ if (login != null && login.length() > 0 && password != null && password.length() > 0)[ FD ]
Line_11 $$ String password = properties.getValue(propPassword)-->Line_20 $$ if (login != null && login.length() > 0 && password != null && password.length() > 0)[ FD ]
Line_20 $$ if (login != null && login.length() > 0 && password != null && password.length() > 0)-->Line_20 $$ credential.setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ CD ]
Line_19 $$ CredentialsProvider credential = httpClient.getCredentialsProvider()-->Line_20 $$ credential.setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_4 $$ URI uri-->Line_20 $$ credential.setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_6 $$ uri = new URI(url)-->Line_20 $$ credential.setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_4 $$ URI uri-->Line_20 $$ credential.setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_6 $$ uri = new URI(url)-->Line_20 $$ credential.setCredentials(new AuthScope(uri.getHost(), uri.getPort()), new UsernamePasswordCredentials(login, password))[ FD ]
Line_20 $$ if (login != null && login.length() > 0 && password != null && password.length() > 0)-->Line_20 $$ credential.clear()[ CD ]
Line_19 $$ CredentialsProvider credential = httpClient.getCredentialsProvider()-->Line_20 $$ credential.clear()[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_21 $$ HttpPost httpPost = new HttpPost(uri)[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_22 $$ MultipartEntity reqEntity = new MultipartEntity()[ CD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_23 $$ new Monitor().writeToPost(reqEntity)[ CD ]
Line_22 $$ MultipartEntity reqEntity = new MultipartEntity()-->Line_23 $$ new Monitor().writeToPost(reqEntity)[ FD ]
Line_22 $$ MultipartEntity reqEntity = new MultipartEntity()-->Line_25 $$ reqEntity.addPart("instanceId", new StringBody(instanceId))[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_29 $$ httpPost.setEntity(reqEntity)[ CD ]
Line_21 $$ HttpPost httpPost = new HttpPost(uri)-->Line_29 $$ httpPost.setEntity(reqEntity)[ FD ]
Line_22 $$ MultipartEntity reqEntity = new MultipartEntity()-->Line_29 $$ httpPost.setEntity(reqEntity)[ FD ]
Line_31 $$ HttpResponse httpResponse = httpClient.execute(httpPost)-->Line_31 $$ HttpResponse httpResponse = httpClient.execute(httpPost)[ CD ]
Line_18 $$ DefaultHttpClient httpClient = new DefaultHttpClient(params)-->Line_31 $$ HttpResponse httpResponse = httpClient.execute(httpPost)[ FD ]
Line_21 $$ HttpPost httpPost = new HttpPost(uri)-->Line_31 $$ HttpResponse httpResponse = httpClient.execute(httpPost)[ FD ]
Line_32 $$ HttpEntity resEntity = httpResponse.getEntity()-->Line_32 $$ HttpEntity resEntity = httpResponse.getEntity()[ CD ]
Line_31 $$ HttpResponse httpResponse = httpClient.execute(httpPost)-->Line_32 $$ HttpEntity resEntity = httpResponse.getEntity()[ FD ]
Line_33 $$ StatusLine statusLine = httpResponse.getStatusLine()-->Line_33 $$ StatusLine statusLine = httpResponse.getStatusLine()[ CD ]
Line_31 $$ HttpResponse httpResponse = httpClient.execute(httpPost)-->Line_33 $$ StatusLine statusLine = httpResponse.getStatusLine()[ FD ]
Line_32 $$ HttpEntity resEntity = httpResponse.getEntity()-->Line_34 $$ EntityUtils.consume(resEntity)[ FD ]
Line_33 $$ StatusLine statusLine = httpResponse.getStatusLine()-->Line_35 $$ if (statusLine.getStatusCode() != 200)[ FD ]
Line_33 $$ StatusLine statusLine = httpResponse.getStatusLine()-->Line_35 $$ throw new SearchLibException("Wrong code status:" + statusLine.getStatusCode() + " " + statusLine.getReasonPhrase())[ FD ]
Line_33 $$ StatusLine statusLine = httpResponse.getStatusLine()-->Line_35 $$ throw new SearchLibException("Wrong code status:" + statusLine.getStatusCode() + " " + statusLine.getReasonPhrase())[ FD ]
Line_2 $$ public void execute(Client client, TaskProperties properties, TaskLog taskLog) throws SearchLibException -->Line_36 $$ taskLog.setInfo("Monitoring data uploaded")[ FD ]
Line_42 $$ ClientConnectionManager connectionManager = httpClient.getConnectionManager()-->Line_42 $$ ClientConnectionManager connectionManager = httpClient.getConnectionManager()[ CD ]
Line_18 $$ DefaultHttpClient httpClient = new DefaultHttpClient(params)-->Line_42 $$ ClientConnectionManager connectionManager = httpClient.getConnectionManager()[ FD ]
Line_42 $$ ClientConnectionManager connectionManager = httpClient.getConnectionManager()-->Line_43 $$ if (connectionManager != null)[ FD ]
Line_43 $$ if (connectionManager != null)-->Line_43 $$ connectionManager.shutdown()[ CD ]
Line_42 $$ ClientConnectionManager connectionManager = httpClient.getConnectionManager()-->Line_43 $$ connectionManager.shutdown()[ FD ]
