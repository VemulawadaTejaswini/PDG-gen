Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int extract() throws Exception [ CD ]
Line_2 $$ public int extract() throws Exception -->Line_3 $$ int count = 0[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_4 $$ if (VERBOSE)[ CD ]
Line_4 $$ if (VERBOSE)-->Line_4 $$ System.out.println("IAAE:Extractr.extract: getting ready to extract " + getArtDir().toString())[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_5 $$ ITCFileFilter iff = new ITCFileFilter()[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_6 $$ RecursiveFileIterator rfi = new RecursiveFileIterator(getArtDir(), iff)[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_7 $$ FileTypeDeterminer ftd = new FileTypeDeterminer()[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_8 $$ File artFile = null[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_9 $$ File targetFile = null[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_10 $$ broadcastStart()[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_11 $$ while (rfi.hasMoreElements()) [ CD ]
Line_2 $$ public int extract() throws Exception -->Line_2 $$ public int extract() throws Exception [ CD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_11 $$ while (rfi.hasMoreElements()) [ CD ]
Line_6 $$ RecursiveFileIterator rfi = new RecursiveFileIterator(getArtDir(), iff)-->Line_11 $$ while (rfi.hasMoreElements()) [ FD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_12 $$ artFile = (File) rfi.nextElement()[ CD ]
Line_12 $$ artFile = (File) rfi.nextElement()-->Line_12 $$ artFile = (File) rfi.nextElement()[ FD ]
Line_8 $$ File artFile = null-->Line_12 $$ artFile = (File) rfi.nextElement()[ FD ]
Line_6 $$ RecursiveFileIterator rfi = new RecursiveFileIterator(getArtDir(), iff)-->Line_12 $$ artFile = (File) rfi.nextElement()[ FD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_13 $$ targetFile = getTargetFile(artFile)[ CD ]
Line_13 $$ targetFile = getTargetFile(artFile)-->Line_13 $$ targetFile = getTargetFile(artFile)[ FD ]
Line_9 $$ File targetFile = null-->Line_13 $$ targetFile = getTargetFile(artFile)[ FD ]
Line_13 $$ targetFile = getTargetFile(artFile)-->Line_13 $$ targetFile = getTargetFile(artFile)[ CD ]
Line_12 $$ artFile = (File) rfi.nextElement()-->Line_13 $$ targetFile = getTargetFile(artFile)[ FD ]
Line_8 $$ File artFile = null-->Line_13 $$ targetFile = getTargetFile(artFile)[ FD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_14 $$ if (VERBOSE)[ CD ]
Line_14 $$ if (VERBOSE)-->Line_14 $$ System.out.println("IAAE:Extractr.extract: working ont " + artFile.toString())[ CD ]
Line_12 $$ artFile = (File) rfi.nextElement()-->Line_14 $$ System.out.println("IAAE:Extractr.extract: working ont " + artFile.toString())[ FD ]
Line_8 $$ File artFile = null-->Line_14 $$ System.out.println("IAAE:Extractr.extract: working ont " + artFile.toString())[ FD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_15 $$ BufferedInputStream in = null[ CD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_16 $$ BufferedOutputStream out = null[ CD ]
Line_15 $$ BufferedInputStream in = null-->Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))[ FD ]
Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))-->Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))[ FD ]
Line_16 $$ BufferedOutputStream out = null-->Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))[ FD ]
Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))-->Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))[ FD ]
Line_21 $$ int read = 0-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_23 $$ read = in.read(buffer)-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_23 $$ read = in.read(buffer)-->Line_23 $$ read = in.read(buffer)[ CD ]
Line_15 $$ BufferedInputStream in = null-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_20 $$ byte[] buffer = new byte[10240]-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_21 $$ int read = 0-->Line_24 $$ while (read != -1) [ FD ]
Line_23 $$ read = in.read(buffer)-->Line_24 $$ while (read != -1) [ FD ]
Line_24 $$ while (read != -1) -->Line_25 $$ if ((total <= 491) && (read > 491)) [ CD ]
Line_25 $$ if ((total <= 491) && (read > 491)) -->Line_26 $$ out.write(buffer, 492, (read - 492))[ CD ]
Line_16 $$ BufferedOutputStream out = null-->Line_26 $$ out.write(buffer, 492, (read - 492))[ FD ]
Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))-->Line_26 $$ out.write(buffer, 492, (read - 492))[ FD ]
Line_20 $$ byte[] buffer = new byte[10240]-->Line_26 $$ out.write(buffer, 492, (read - 492))[ FD ]
Line_25 $$ if ((total <= 491) && (read > 491)) -->Line_27 $$ if ((total <= 491) && (read <= 491)) [ CD ]
Line_27 $$ if ((total <= 491) && (read <= 491)) -->Line_29 $$ out.write(buffer, 0, read)[ CD ]
Line_16 $$ BufferedOutputStream out = null-->Line_29 $$ out.write(buffer, 0, read)[ FD ]
Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))-->Line_29 $$ out.write(buffer, 0, read)[ FD ]
Line_20 $$ byte[] buffer = new byte[10240]-->Line_29 $$ out.write(buffer, 0, read)[ FD ]
Line_21 $$ int read = 0-->Line_29 $$ out.write(buffer, 0, read)[ FD ]
Line_23 $$ read = in.read(buffer)-->Line_29 $$ out.write(buffer, 0, read)[ FD ]
Line_24 $$ while (read != -1) -->Line_31 $$ total = total + read[ CD ]
Line_31 $$ total = total + read-->Line_31 $$ total = total + read[ FD ]
Line_22 $$ int total = 0-->Line_31 $$ total = total + read[ FD ]
Line_31 $$ total = total + read-->Line_31 $$ total = total + read[ FD ]
Line_22 $$ int total = 0-->Line_31 $$ total = total + read[ FD ]
Line_21 $$ int read = 0-->Line_31 $$ total = total + read[ FD ]
Line_23 $$ read = in.read(buffer)-->Line_31 $$ total = total + read[ FD ]
Line_24 $$ while (read != -1) -->Line_32 $$ read = in.read(buffer)[ CD ]
Line_32 $$ read = in.read(buffer)-->Line_32 $$ read = in.read(buffer)[ FD ]
Line_21 $$ int read = 0-->Line_32 $$ read = in.read(buffer)[ FD ]
Line_23 $$ read = in.read(buffer)-->Line_32 $$ read = in.read(buffer)[ FD ]
Line_32 $$ read = in.read(buffer)-->Line_32 $$ read = in.read(buffer)[ CD ]
Line_15 $$ BufferedInputStream in = null-->Line_32 $$ read = in.read(buffer)[ FD ]
Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))-->Line_32 $$ read = in.read(buffer)[ FD ]
Line_20 $$ byte[] buffer = new byte[10240]-->Line_32 $$ read = in.read(buffer)[ FD ]
Line_15 $$ BufferedInputStream in = null-->Line_38 $$ in.close()[ FD ]
Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))-->Line_38 $$ in.close()[ FD ]
Line_16 $$ BufferedOutputStream out = null-->Line_39 $$ out.close()[ FD ]
Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))-->Line_39 $$ out.close()[ FD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_41 $$ broadcastSuccess()[ CD ]
Line_11 $$ while (rfi.hasMoreElements()) -->Line_42 $$ count++[ CD ]
Line_3 $$ int count = 0-->Line_42 $$ count++[ FD ]
Line_2 $$ public int extract() throws Exception -->Line_44 $$ broadcastDone()[ CD ]
Line_2 $$ public int extract() throws Exception -->Line_45 $$ return count[ CD ]
Line_12 $$ artFile = (File) rfi.nextElement()-->Line_13 $$ targetFile = getTargetFile(artFile)[ FD ]
Line_12 $$ artFile = (File) rfi.nextElement()-->Line_14 $$ System.out.println("IAAE:Extractr.extract: working ont " + artFile.toString())[ FD ]
Line_15 $$ BufferedInputStream in = null-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_20 $$ byte[] buffer = new byte[10240]-->Line_23 $$ read = in.read(buffer)[ FD ]
Line_15 $$ BufferedInputStream in = null-->Line_38 $$ in.close()[ FD ]
Line_18 $$ in = new BufferedInputStream((new FileInputStream(artFile)))-->Line_38 $$ in.close()[ FD ]
Line_16 $$ BufferedOutputStream out = null-->Line_39 $$ out.close()[ FD ]
Line_19 $$ out = new BufferedOutputStream((new FileOutputStream(targetFile)))-->Line_39 $$ out.close()[ FD ]
Line_32 $$ read = in.read(buffer)-->Line_24 $$ while (read != -1) [ FD ]
Line_32 $$ read = in.read(buffer)-->Line_24 $$ while (read != -1) [ FD ]
Line_32 $$ read = in.read(buffer)-->Line_29 $$ out.write(buffer, 0, read)[ FD ]
Line_31 $$ total = total + read-->Line_31 $$ total = total + read[ FD ]
Line_32 $$ read = in.read(buffer)-->Line_31 $$ total = total + read[ FD ]
