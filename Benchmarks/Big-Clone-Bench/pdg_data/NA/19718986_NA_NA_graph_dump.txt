Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException [ CD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_3 $$ if (!destFile.exists()) [ CD ]
Line_3 $$ if (!destFile.exists()) -->Line_3 $$ if (!destFile.exists()) [ CD ]
Line_3 $$ if (!destFile.exists()) -->Line_3 $$ if (!destFile.exists()) [ CD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_3 $$ if (!destFile.exists()) [ FD ]
Line_3 $$ if (!destFile.exists()) -->Line_4 $$ if (!destFile.createNewFile()) [ CD ]
Line_4 $$ if (!destFile.createNewFile()) -->Line_4 $$ if (!destFile.createNewFile()) [ CD ]
Line_4 $$ if (!destFile.createNewFile()) -->Line_4 $$ if (!destFile.createNewFile()) [ CD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_4 $$ if (!destFile.createNewFile()) [ FD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_5 $$ throw new IllegalArgumentException("Could not create destination file:" + destFile.getName())[ FD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_8 $$ BufferedOutputStream bufferedOutputStream = null[ CD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_9 $$ BufferedInputStream bufferedInputStream = null[ CD ]
Line_2 $$ public static void concatenateToDestFile(File sourceFile, File destFile) throws IOException -->Line_10 $$ byte[] buffer = new byte[1024][ CD ]
Line_8 $$ BufferedOutputStream bufferedOutputStream = null-->Line_12 $$ bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(destFile, true))[ FD ]
Line_12 $$ bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(destFile, true))-->Line_12 $$ bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(destFile, true))[ FD ]
Line_9 $$ BufferedInputStream bufferedInputStream = null-->Line_13 $$ bufferedInputStream = new BufferedInputStream(new FileInputStream(sourceFile))[ FD ]
Line_13 $$ bufferedInputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_13 $$ bufferedInputStream = new BufferedInputStream(new FileInputStream(sourceFile))[ FD ]
Line_14 $$ while (true) -->Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)[ CD ]
Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)-->Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)[ CD ]
Line_9 $$ BufferedInputStream bufferedInputStream = null-->Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)[ FD ]
Line_13 $$ bufferedInputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)[ FD ]
Line_10 $$ byte[] buffer = new byte[1024]-->Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)[ FD ]
Line_14 $$ while (true) -->Line_16 $$ if (readByte == -1) [ CD ]
Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)-->Line_16 $$ if (readByte == -1) [ FD ]
Line_14 $$ while (true) -->Line_19 $$ bufferedOutputStream.write(buffer, 0, readByte)[ CD ]
Line_8 $$ BufferedOutputStream bufferedOutputStream = null-->Line_19 $$ bufferedOutputStream.write(buffer, 0, readByte)[ FD ]
Line_12 $$ bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(destFile, true))-->Line_19 $$ bufferedOutputStream.write(buffer, 0, readByte)[ FD ]
Line_10 $$ byte[] buffer = new byte[1024]-->Line_19 $$ bufferedOutputStream.write(buffer, 0, readByte)[ FD ]
Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)-->Line_19 $$ bufferedOutputStream.write(buffer, 0, readByte)[ FD ]
Line_8 $$ BufferedOutputStream bufferedOutputStream = null-->Line_22 $$ if (bufferedOutputStream != null) [ FD ]
Line_12 $$ bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(destFile, true))-->Line_22 $$ if (bufferedOutputStream != null) [ FD ]
Line_22 $$ if (bufferedOutputStream != null) -->Line_23 $$ bufferedOutputStream.close()[ CD ]
Line_8 $$ BufferedOutputStream bufferedOutputStream = null-->Line_23 $$ bufferedOutputStream.close()[ FD ]
Line_12 $$ bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(destFile, true))-->Line_23 $$ bufferedOutputStream.close()[ FD ]
Line_9 $$ BufferedInputStream bufferedInputStream = null-->Line_25 $$ if (bufferedInputStream != null) [ FD ]
Line_13 $$ bufferedInputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_25 $$ if (bufferedInputStream != null) [ FD ]
Line_25 $$ if (bufferedInputStream != null) -->Line_26 $$ bufferedInputStream.close()[ CD ]
Line_9 $$ BufferedInputStream bufferedInputStream = null-->Line_26 $$ bufferedInputStream.close()[ FD ]
Line_13 $$ bufferedInputStream = new BufferedInputStream(new FileInputStream(sourceFile))-->Line_26 $$ bufferedInputStream.close()[ FD ]
Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)-->Line_16 $$ if (readByte == -1) [ FD ]
Line_15 $$ int readByte = bufferedInputStream.read(buffer, 0, buffer.length)-->Line_19 $$ bufferedOutputStream.write(buffer, 0, readByte)[ FD ]
