Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException [ CD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_3 $$ EXISchemaFactory schemaCompiler = new EXISchemaFactory()[ CD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_4 $$ schemaCompiler.setCompilerErrorHandler(compilerErrorHandler)[ CD ]
Line_3 $$ EXISchemaFactory schemaCompiler = new EXISchemaFactory()-->Line_4 $$ schemaCompiler.setCompilerErrorHandler(compilerErrorHandler)[ FD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_4 $$ schemaCompiler.setCompilerErrorHandler(compilerErrorHandler)[ FD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_5 $$ InputSource inputSource = null[ CD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_6 $$ if (fileName != null) [ CD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_6 $$ if (fileName != null) [ FD ]
Line_6 $$ if (fileName != null) -->Line_7 $$ URL url[ CD ]
Line_6 $$ if (fileName != null) -->Line_8 $$ if ((url = cls.getResource(fileName)) != null) [ CD ]
Line_7 $$ URL url-->Line_8 $$ if ((url = cls.getResource(fileName)) != null) [ FD ]
Line_8 $$ if ((url = cls.getResource(fileName)) != null) -->Line_8 $$ if ((url = cls.getResource(fileName)) != null) [ FD ]
Line_8 $$ if ((url = cls.getResource(fileName)) != null) -->Line_8 $$ if ((url = cls.getResource(fileName)) != null) [ CD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_8 $$ if ((url = cls.getResource(fileName)) != null) [ FD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_8 $$ if ((url = cls.getResource(fileName)) != null) [ FD ]
Line_8 $$ if ((url = cls.getResource(fileName)) != null) -->Line_9 $$ inputSource = new InputSource(url.openStream())[ CD ]
Line_5 $$ InputSource inputSource = null-->Line_9 $$ inputSource = new InputSource(url.openStream())[ FD ]
Line_9 $$ inputSource = new InputSource(url.openStream())-->Line_9 $$ inputSource = new InputSource(url.openStream())[ FD ]
Line_7 $$ URL url-->Line_9 $$ inputSource = new InputSource(url.openStream())[ FD ]
Line_8 $$ if ((url = cls.getResource(fileName)) != null) -->Line_9 $$ inputSource = new InputSource(url.openStream())[ FD ]
Line_8 $$ if ((url = cls.getResource(fileName)) != null) -->Line_10 $$ inputSource.setSystemId(url.toString())[ CD ]
Line_5 $$ InputSource inputSource = null-->Line_10 $$ inputSource.setSystemId(url.toString())[ FD ]
Line_9 $$ inputSource = new InputSource(url.openStream())-->Line_10 $$ inputSource.setSystemId(url.toString())[ FD ]
Line_7 $$ URL url-->Line_10 $$ inputSource.setSystemId(url.toString())[ FD ]
Line_8 $$ if ((url = cls.getResource(fileName)) != null) -->Line_10 $$ inputSource.setSystemId(url.toString())[ FD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)[ CD ]
Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)-->Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)[ CD ]
Line_3 $$ EXISchemaFactory schemaCompiler = new EXISchemaFactory()-->Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)[ FD ]
Line_5 $$ InputSource inputSource = null-->Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)[ FD ]
Line_9 $$ inputSource = new InputSource(url.openStream())-->Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)[ FD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_14 $$ InputStream serialized = serializeSchema(compiled)[ CD ]
Line_14 $$ InputStream serialized = serializeSchema(compiled)-->Line_14 $$ InputStream serialized = serializeSchema(compiled)[ CD ]
Line_13 $$ EXISchema compiled = schemaCompiler.compile(inputSource)-->Line_14 $$ InputStream serialized = serializeSchema(compiled)[ FD ]
Line_2 $$ public static EXISchema getEXISchema(String fileName, Class<?> cls, EXISchemaFactoryErrorHandler compilerErrorHandler) throws IOException, ClassNotFoundException, EXISchemaFactoryException -->Line_15 $$ return loadSchema(serialized)[ CD ]
Line_15 $$ return loadSchema(serialized)-->Line_15 $$ return loadSchema(serialized)[ CD ]
Line_14 $$ InputStream serialized = serializeSchema(compiled)-->Line_15 $$ return loadSchema(serialized)[ FD ]
