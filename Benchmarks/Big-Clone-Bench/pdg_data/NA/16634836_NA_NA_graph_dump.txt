Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void mockingURLWorks() throws Exception [ CD ]
Line_2 $$ public void mockingURLWorks() throws Exception -->Line_3 $$ URL url = mock(URL.class)[ CD ]
Line_3 $$ URL url = mock(URL.class)-->Line_3 $$ URL url = mock(URL.class)[ CD ]
Line_2 $$ public void mockingURLWorks() throws Exception -->Line_4 $$ URLConnection urlConnectionMock = mock(URLConnection.class)[ CD ]
Line_4 $$ URLConnection urlConnectionMock = mock(URLConnection.class)-->Line_4 $$ URLConnection urlConnectionMock = mock(URLConnection.class)[ CD ]
Line_2 $$ public void mockingURLWorks() throws Exception -->Line_5 $$ when(url.openConnection()).thenReturn(urlConnectionMock)[ CD ]
Line_4 $$ URLConnection urlConnectionMock = mock(URLConnection.class)-->Line_5 $$ when(url.openConnection()).thenReturn(urlConnectionMock)[ FD ]
Line_3 $$ URL url = mock(URL.class)-->Line_5 $$ when(url.openConnection()).thenReturn(urlConnectionMock)[ FD ]
Line_2 $$ public void mockingURLWorks() throws Exception -->Line_6 $$ URLConnection openConnection = url.openConnection()[ CD ]
Line_6 $$ URLConnection openConnection = url.openConnection()-->Line_6 $$ URLConnection openConnection = url.openConnection()[ CD ]
Line_3 $$ URL url = mock(URL.class)-->Line_6 $$ URLConnection openConnection = url.openConnection()[ FD ]
Line_2 $$ public void mockingURLWorks() throws Exception -->Line_7 $$ assertSame(openConnection, urlConnectionMock)[ CD ]
Line_6 $$ URLConnection openConnection = url.openConnection()-->Line_7 $$ assertSame(openConnection, urlConnectionMock)[ FD ]
Line_4 $$ URLConnection urlConnectionMock = mock(URLConnection.class)-->Line_7 $$ assertSame(openConnection, urlConnectionMock)[ FD ]
