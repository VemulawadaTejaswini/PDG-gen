Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void runTask(HashMap jobStack) throws Exception [ CD ]
Line_2 $$ public void runTask(HashMap jobStack) throws Exception -->Line_3 $$ String lstrFilter = (String) getResources().get("filter")[ CD ]
Line_2 $$ public void runTask(HashMap jobStack) throws Exception -->Line_4 $$ String lstrTarget = (String) getResources().get("target")[ CD ]
Line_2 $$ public void runTask(HashMap jobStack) throws Exception -->Line_5 $$ String lstrSource = (String) getResources().get("source")[ CD ]
Line_2 $$ public void runTask(HashMap jobStack) throws Exception -->Line_6 $$ String[] lstrFilesFound = null[ CD ]
Line_2 $$ public void runTask(HashMap jobStack) throws Exception -->Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)[ CD ]
Line_6 $$ String[] lstrFilesFound = null-->Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)[ FD ]
Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)-->Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)[ FD ]
Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)-->Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)[ CD ]
Line_5 $$ String lstrSource = (String) getResources().get("source")-->Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)[ FD ]
Line_3 $$ String lstrFilter = (String) getResources().get("filter")-->Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)[ FD ]
Line_2 $$ public void runTask(HashMap jobStack) throws Exception -->Line_8 $$ if (lstrFilesFound != null) [ CD ]
Line_6 $$ String[] lstrFilesFound = null-->Line_8 $$ if (lstrFilesFound != null) [ FD ]
Line_7 $$ lstrFilesFound = searchForFiles(lstrSource, lstrFilter)-->Line_8 $$ if (lstrFilesFound != null) [ FD ]
Line_8 $$ if (lstrFilesFound != null) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ CD ]
Line_8 $$ if (lstrFilesFound != null) -->Line_8 $$ if (lstrFilesFound != null) [ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_10 $$ getLog().debug("Found match [" + lstrSource + File.separator + lstrFilesFound[i] + "]")[ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_11 $$ File lfileSource = new File(lstrSource + File.separator + lstrFilesFound[i])[ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_12 $$ File lfileTarget = new File(lstrTarget + File.separator + lstrFilesFound[i])[ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_13 $$ FileChannel lfisInput = null[ CD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_14 $$ FileChannel lfosOutput = null[ CD ]
Line_13 $$ FileChannel lfisInput = null-->Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()[ CD ]
Line_14 $$ FileChannel lfosOutput = null-->Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()[ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()[ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()[ CD ]
Line_19 $$ long size = lfisInput.size()-->Line_19 $$ long size = lfisInput.size()[ CD ]
Line_13 $$ FileChannel lfisInput = null-->Line_19 $$ long size = lfisInput.size()[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_19 $$ long size = lfisInput.size()[ FD ]
Line_20 $$ long position = 0-->Line_21 $$ while (position < size) [ FD ]
Line_19 $$ long size = lfisInput.size()-->Line_21 $$ while (position < size) [ FD ]
Line_21 $$ while (position < size) -->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ CD ]
Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_20 $$ long position = 0-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ CD ]
Line_13 $$ FileChannel lfisInput = null-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_20 $$ long position = 0-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_18 $$ int maxCount = (32 * 1024 * 1024) - (32 * 1024)-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_14 $$ FileChannel lfosOutput = null-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
Line_13 $$ FileChannel lfisInput = null-->Line_25 $$ if (lfisInput != null) [ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_25 $$ if (lfisInput != null) [ FD ]
Line_25 $$ if (lfisInput != null) -->Line_26 $$ lfisInput.close()[ CD ]
Line_13 $$ FileChannel lfisInput = null-->Line_26 $$ lfisInput.close()[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_26 $$ lfisInput.close()[ FD ]
Line_14 $$ FileChannel lfosOutput = null-->Line_28 $$ if (lfosOutput != null) [ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_28 $$ if (lfosOutput != null) [ FD ]
Line_28 $$ if (lfosOutput != null) -->Line_29 $$ lfosOutput.close()[ CD ]
Line_14 $$ FileChannel lfosOutput = null-->Line_29 $$ lfosOutput.close()[ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_29 $$ lfosOutput.close()[ FD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) -->Line_9 $$ for (int i = 0; i < lstrFilesFound.length; i++) [ FD ]
Line_13 $$ FileChannel lfisInput = null-->Line_19 $$ long size = lfisInput.size()[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_19 $$ long size = lfisInput.size()[ FD ]
Line_13 $$ FileChannel lfisInput = null-->Line_25 $$ if (lfisInput != null) [ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_25 $$ if (lfisInput != null) [ FD ]
Line_13 $$ FileChannel lfisInput = null-->Line_26 $$ lfisInput.close()[ FD ]
Line_16 $$ lfisInput = new FileInputStream(lfileSource).getChannel()-->Line_26 $$ lfisInput.close()[ FD ]
Line_14 $$ FileChannel lfosOutput = null-->Line_28 $$ if (lfosOutput != null) [ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_28 $$ if (lfosOutput != null) [ FD ]
Line_14 $$ FileChannel lfosOutput = null-->Line_29 $$ lfosOutput.close()[ FD ]
Line_17 $$ lfosOutput = new FileOutputStream(lfileTarget).getChannel()-->Line_29 $$ lfosOutput.close()[ FD ]
Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)-->Line_21 $$ while (position < size) [ FD ]
Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)-->Line_21 $$ while (position < size) [ FD ]
Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)-->Line_22 $$ position += lfisInput.transferTo(position, maxCount, lfosOutput)[ FD ]
