Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String md5(String str) [ CD ]
Line_2 $$ public static String md5(String str) -->Line_3 $$ if (str == null) [ CD ]
Line_2 $$ public static String md5(String str) -->Line_3 $$ if (str == null) [ FD ]
Line_3 $$ if (str == null) -->Line_4 $$ System.err.println("Stringx.md5 (String) : null string.")[ CD ]
Line_3 $$ if (str == null) -->Line_5 $$ return ""[ CD ]
Line_2 $$ public static String md5(String str) -->Line_7 $$ String rt = ""[ CD ]
Line_9 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_9 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_9 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_10 $$ md5.update(str.getBytes("gb2312"))[ FD ]
Line_2 $$ public static String md5(String str) -->Line_10 $$ md5.update(str.getBytes("gb2312"))[ FD ]
Line_11 $$ byte[] bt = md5.digest()-->Line_11 $$ byte[] bt = md5.digest()[ CD ]
Line_9 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_11 $$ byte[] bt = md5.digest()[ FD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_14 $$ for (int i = 0; i < bt.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_14 $$ for (int i = 0; i < bt.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_14 $$ for (int i = 0; i < bt.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_15 $$ s = Integer.toHexString(bt[i])[ CD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_15 $$ s = Integer.toHexString(bt[i])[ FD ]
Line_12 $$ String s = null-->Line_15 $$ s = Integer.toHexString(bt[i])[ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_15 $$ s = Integer.toHexString(bt[i])[ CD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_16 $$ l = s.length()[ CD ]
Line_16 $$ l = s.length()-->Line_16 $$ l = s.length()[ FD ]
Line_13 $$ int l = 0-->Line_16 $$ l = s.length()[ FD ]
Line_16 $$ l = s.length()-->Line_16 $$ l = s.length()[ CD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_16 $$ l = s.length()[ FD ]
Line_12 $$ String s = null-->Line_16 $$ l = s.length()[ FD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_17 $$ if (l > 2)[ CD ]
Line_16 $$ l = s.length()-->Line_17 $$ if (l > 2)[ FD ]
Line_13 $$ int l = 0-->Line_17 $$ if (l > 2)[ FD ]
Line_17 $$ if (l > 2)-->Line_17 $$ s = s.substring(l - 2, l)[ CD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_12 $$ String s = null-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = s.substring(l - 2, l)[ CD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_12 $$ String s = null-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_16 $$ l = s.length()-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_13 $$ int l = 0-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_17 $$ if (l > 2)-->Line_17 $$ if (l == 1)[ CD ]
Line_16 $$ l = s.length()-->Line_17 $$ if (l == 1)[ FD ]
Line_13 $$ int l = 0-->Line_17 $$ if (l == 1)[ FD ]
Line_17 $$ if (l == 1)-->Line_17 $$ s = "0" + s[ CD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_17 $$ s = "0" + s[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = "0" + s[ FD ]
Line_17 $$ s = "0" + s-->Line_17 $$ s = "0" + s[ FD ]
Line_12 $$ String s = null-->Line_17 $$ s = "0" + s[ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_17 $$ s = "0" + s[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = "0" + s[ FD ]
Line_17 $$ s = "0" + s-->Line_17 $$ s = "0" + s[ FD ]
Line_12 $$ String s = null-->Line_17 $$ s = "0" + s[ FD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_18 $$ rt += s[ CD ]
Line_18 $$ rt += s-->Line_18 $$ rt += s[ FD ]
Line_7 $$ String rt = ""-->Line_18 $$ rt += s[ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_18 $$ rt += s[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_18 $$ rt += s[ FD ]
Line_17 $$ s = "0" + s-->Line_18 $$ rt += s[ FD ]
Line_12 $$ String s = null-->Line_18 $$ rt += s[ FD ]
Line_2 $$ public static String md5(String str) -->Line_25 $$ return rt[ CD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_14 $$ for (int i = 0; i < bt.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_14 $$ for (int i = 0; i < bt.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < bt.length; i++) -->Line_14 $$ for (int i = 0; i < bt.length; i++) [ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_16 $$ l = s.length()[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_16 $$ l = s.length()[ FD ]
Line_17 $$ s = "0" + s-->Line_16 $$ l = s.length()[ FD ]
Line_16 $$ l = s.length()-->Line_17 $$ if (l > 2)[ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_17 $$ s = "0" + s-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_16 $$ l = s.length()-->Line_17 $$ s = s.substring(l - 2, l)[ FD ]
Line_16 $$ l = s.length()-->Line_17 $$ if (l == 1)[ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_17 $$ s = "0" + s[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_17 $$ s = "0" + s[ FD ]
Line_17 $$ s = "0" + s-->Line_17 $$ s = "0" + s[ FD ]
Line_15 $$ s = Integer.toHexString(bt[i])-->Line_18 $$ rt += s[ FD ]
Line_17 $$ s = s.substring(l - 2, l)-->Line_18 $$ rt += s[ FD ]
Line_17 $$ s = "0" + s-->Line_18 $$ rt += s[ FD ]
