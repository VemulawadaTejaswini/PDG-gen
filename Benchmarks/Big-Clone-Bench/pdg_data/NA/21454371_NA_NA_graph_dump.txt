Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void compressZip(String source, String dest) throws Exception [ CD ]
Line_2 $$ private static void compressZip(String source, String dest) throws Exception -->Line_3 $$ File baseFolder = new File(source)[ CD ]
Line_2 $$ private static void compressZip(String source, String dest) throws Exception -->Line_4 $$ if (baseFolder.exists()) [ CD ]
Line_3 $$ File baseFolder = new File(source)-->Line_4 $$ if (baseFolder.exists()) [ FD ]
Line_4 $$ if (baseFolder.exists()) -->Line_4 $$ if (baseFolder.exists()) [ CD ]
Line_3 $$ File baseFolder = new File(source)-->Line_4 $$ if (baseFolder.exists()) [ FD ]
Line_4 $$ if (baseFolder.exists()) -->Line_5 $$ if (baseFolder.isDirectory()) [ CD ]
Line_3 $$ File baseFolder = new File(source)-->Line_5 $$ if (baseFolder.isDirectory()) [ FD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_5 $$ if (baseFolder.isDirectory()) [ CD ]
Line_3 $$ File baseFolder = new File(source)-->Line_5 $$ if (baseFolder.isDirectory()) [ FD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_6 $$ List<File> fileList = getSubFiles(new File(source))[ CD ]
Line_6 $$ List<File> fileList = getSubFiles(new File(source))-->Line_6 $$ List<File> fileList = getSubFiles(new File(source))[ CD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dest))[ CD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_8 $$ zos.setEncoding("GBK")[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dest))-->Line_8 $$ zos.setEncoding("GBK")[ FD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_9 $$ ZipEntry entry = null[ CD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_10 $$ byte[] buf = new byte[2048][ CD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_11 $$ int readLen = 0[ CD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_5 $$ if (baseFolder.isDirectory()) [ CD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_6 $$ List<File> fileList = getSubFiles(new File(source))-->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_13 $$ File file = fileList.get(i)[ CD ]
Line_13 $$ File file = fileList.get(i)-->Line_13 $$ File file = fileList.get(i)[ CD ]
Line_6 $$ List<File> fileList = getSubFiles(new File(source))-->Line_13 $$ File file = fileList.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_13 $$ File file = fileList.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_14 $$ if (file.isDirectory()) [ CD ]
Line_13 $$ File file = fileList.get(i)-->Line_14 $$ if (file.isDirectory()) [ FD ]
Line_14 $$ if (file.isDirectory()) -->Line_14 $$ if (file.isDirectory()) [ CD ]
Line_13 $$ File file = fileList.get(i)-->Line_14 $$ if (file.isDirectory()) [ FD ]
Line_14 $$ if (file.isDirectory()) -->Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")[ CD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")[ FD ]
Line_9 $$ ZipEntry entry = null-->Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")[ FD ]
Line_2 $$ private static void compressZip(String source, String dest) throws Exception -->Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")[ FD ]
Line_14 $$ if (file.isDirectory()) -->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ CD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ FD ]
Line_9 $$ ZipEntry entry = null-->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ FD ]
Line_2 $$ private static void compressZip(String source, String dest) throws Exception -->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_19 $$ entry.setSize(file.length())[ CD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_9 $$ ZipEntry entry = null-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_20 $$ entry.setTime(file.lastModified())[ CD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_9 $$ ZipEntry entry = null-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_21 $$ zos.putNextEntry(entry)[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dest))-->Line_21 $$ zos.putNextEntry(entry)[ FD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_21 $$ zos.putNextEntry(entry)[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_21 $$ zos.putNextEntry(entry)[ FD ]
Line_9 $$ ZipEntry entry = null-->Line_21 $$ zos.putNextEntry(entry)[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_22 $$ if (file.isFile()) [ CD ]
Line_13 $$ File file = fileList.get(i)-->Line_22 $$ if (file.isFile()) [ FD ]
Line_22 $$ if (file.isFile()) -->Line_22 $$ if (file.isFile()) [ CD ]
Line_13 $$ File file = fileList.get(i)-->Line_22 $$ if (file.isFile()) [ FD ]
Line_22 $$ if (file.isFile()) -->Line_23 $$ InputStream in = new BufferedInputStream(new FileInputStream(file))[ CD ]
Line_22 $$ if (file.isFile()) -->Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) [ CD ]
Line_22 $$ if (file.isFile()) -->Line_22 $$ if (file.isFile()) [ CD ]
Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) -->Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) [ FD ]
Line_11 $$ int readLen = 0-->Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) [ FD ]
Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) -->Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) [ CD ]
Line_23 $$ InputStream in = new BufferedInputStream(new FileInputStream(file))-->Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) [ FD ]
Line_10 $$ byte[] buf = new byte[2048]-->Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) [ FD ]
Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) -->Line_25 $$ zos.write(buf, 0, readLen)[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dest))-->Line_25 $$ zos.write(buf, 0, readLen)[ FD ]
Line_10 $$ byte[] buf = new byte[2048]-->Line_25 $$ zos.write(buf, 0, readLen)[ FD ]
Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) -->Line_25 $$ zos.write(buf, 0, readLen)[ FD ]
Line_11 $$ int readLen = 0-->Line_25 $$ zos.write(buf, 0, readLen)[ FD ]
Line_22 $$ if (file.isFile()) -->Line_27 $$ in.close()[ CD ]
Line_23 $$ InputStream in = new BufferedInputStream(new FileInputStream(file))-->Line_27 $$ in.close()[ FD ]
Line_5 $$ if (baseFolder.isDirectory()) -->Line_30 $$ zos.close()[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(dest))-->Line_30 $$ zos.close()[ FD ]
Line_4 $$ if (baseFolder.exists()) -->Line_35 $$ baseFolder.mkdirs()[ CD ]
Line_3 $$ File baseFolder = new File(source)-->Line_35 $$ baseFolder.mkdirs()[ FD ]
Line_4 $$ if (baseFolder.exists()) -->Line_36 $$ compressZip(source, dest)[ CD ]
Line_2 $$ private static void compressZip(String source, String dest) throws Exception -->Line_36 $$ compressZip(source, dest)[ FD ]
Line_2 $$ private static void compressZip(String source, String dest) throws Exception -->Line_36 $$ compressZip(source, dest)[ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_12 $$ for (int i = 0; i < fileList.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < fileList.size(); i++) -->Line_13 $$ File file = fileList.get(i)[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_14 $$ if (file.isDirectory()) [ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_14 $$ if (file.isDirectory()) [ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))[ FD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_19 $$ entry.setSize(file.length())[ FD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_20 $$ entry.setTime(file.lastModified())[ FD ]
Line_15 $$ entry = new ZipEntry(getAbsFileName(source, file) + "/")-->Line_21 $$ zos.putNextEntry(entry)[ FD ]
Line_17 $$ entry = new ZipEntry(getAbsFileName(source, file))-->Line_21 $$ zos.putNextEntry(entry)[ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_22 $$ if (file.isFile()) [ FD ]
Line_13 $$ File file = fileList.get(i)-->Line_22 $$ if (file.isFile()) [ FD ]
Line_23 $$ InputStream in = new BufferedInputStream(new FileInputStream(file))-->Line_27 $$ in.close()[ FD ]
Line_24 $$ while ((readLen = in.read(buf, 0, 1024)) != -1) -->Line_25 $$ zos.write(buf, 0, readLen)[ FD ]
