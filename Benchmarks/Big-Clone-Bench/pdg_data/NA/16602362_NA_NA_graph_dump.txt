Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static LinkedList Import(String url) throws Exception [ CD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_3 $$ LinkedList data = new LinkedList()[ CD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()))[ CD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_5 $$ String csvLine[ CD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_6 $$ while ((csvLine = in.readLine()) != null) [ CD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_2 $$ public static LinkedList Import(String url) throws Exception [ CD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_6 $$ while ((csvLine = in.readLine()) != null) [ FD ]
Line_5 $$ String csvLine-->Line_6 $$ while ((csvLine = in.readLine()) != null) [ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_6 $$ while ((csvLine = in.readLine()) != null) [ CD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()))-->Line_6 $$ while ((csvLine = in.readLine()) != null) [ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")[ CD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_8 $$ CSVData cd = new CSVData()[ CD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_9 $$ st.nextToken()[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_9 $$ st.nextToken()[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_10 $$ st.nextToken()[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_10 $$ st.nextToken()[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_11 $$ cd.matrNumber = Integer.parseInt(st.nextToken().trim())[ CD ]
Line_11 $$ cd.matrNumber = Integer.parseInt(st.nextToken().trim())-->Line_11 $$ cd.matrNumber = Integer.parseInt(st.nextToken().trim())[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_11 $$ cd.matrNumber = Integer.parseInt(st.nextToken().trim())[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_12 $$ cd.fName = st.nextToken().trim()[ CD ]
Line_12 $$ cd.fName = st.nextToken().trim()-->Line_12 $$ cd.fName = st.nextToken().trim()[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_12 $$ cd.fName = st.nextToken().trim()[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_13 $$ cd.lName = st.nextToken().trim()[ CD ]
Line_13 $$ cd.lName = st.nextToken().trim()-->Line_13 $$ cd.lName = st.nextToken().trim()[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_13 $$ cd.lName = st.nextToken().trim()[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_14 $$ cd.email = st.nextToken().trim()[ CD ]
Line_14 $$ cd.email = st.nextToken().trim()-->Line_14 $$ cd.email = st.nextToken().trim()[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_14 $$ cd.email = st.nextToken().trim()[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_15 $$ cd.stdyPath = st.nextToken().trim()[ CD ]
Line_15 $$ cd.stdyPath = st.nextToken().trim()-->Line_15 $$ cd.stdyPath = st.nextToken().trim()[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_15 $$ cd.stdyPath = st.nextToken().trim()[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_16 $$ cd.sem = Integer.parseInt(st.nextToken().trim())[ CD ]
Line_16 $$ cd.sem = Integer.parseInt(st.nextToken().trim())-->Line_16 $$ cd.sem = Integer.parseInt(st.nextToken().trim())[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_16 $$ cd.sem = Integer.parseInt(st.nextToken().trim())[ FD ]
Line_6 $$ while ((csvLine = in.readLine()) != null) -->Line_17 $$ data.add(cd)[ CD ]
Line_3 $$ LinkedList data = new LinkedList()-->Line_17 $$ data.add(cd)[ FD ]
Line_8 $$ CSVData cd = new CSVData()-->Line_17 $$ data.add(cd)[ FD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_19 $$ in.close()[ CD ]
Line_4 $$ BufferedReader in = new BufferedReader(new InputStreamReader((new URL(url)).openStream()))-->Line_19 $$ in.close()[ FD ]
Line_2 $$ public static LinkedList Import(String url) throws Exception -->Line_20 $$ return data[ CD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_9 $$ st.nextToken()[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_10 $$ st.nextToken()[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_11 $$ cd.matrNumber = Integer.parseInt(st.nextToken().trim())[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_12 $$ cd.fName = st.nextToken().trim()[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_13 $$ cd.lName = st.nextToken().trim()[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_14 $$ cd.email = st.nextToken().trim()[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_15 $$ cd.stdyPath = st.nextToken().trim()[ FD ]
Line_7 $$ StringTokenizer st = new StringTokenizer(csvLine, ",")-->Line_16 $$ cd.sem = Integer.parseInt(st.nextToken().trim())[ FD ]
Line_8 $$ CSVData cd = new CSVData()-->Line_17 $$ data.add(cd)[ FD ]
