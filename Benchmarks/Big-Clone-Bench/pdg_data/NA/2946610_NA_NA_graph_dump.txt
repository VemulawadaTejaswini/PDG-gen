Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException [ CD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()[ CD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_4 $$ huc.setConnectTimeout(1000 * timeOut)[ CD ]
Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()-->Line_4 $$ huc.setConnectTimeout(1000 * timeOut)[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_5 $$ huc.setRequestMethod("GET")[ CD ]
Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()-->Line_5 $$ huc.setRequestMethod("GET")[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_6 $$ if (addHeader) [ CD ]
Line_6 $$ if (addHeader) -->Line_7 $$ huc.setRequestProperty("JavaPEG-Version", applicationVersion)[ CD ]
Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()-->Line_7 $$ huc.setRequestProperty("JavaPEG-Version", applicationVersion)[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_7 $$ huc.setRequestProperty("JavaPEG-Version", applicationVersion)[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_9 $$ huc.connect()[ CD ]
Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()-->Line_9 $$ huc.connect()[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_10 $$ int code = huc.getResponseCode()[ CD ]
Line_10 $$ int code = huc.getResponseCode()-->Line_10 $$ int code = huc.getResponseCode()[ CD ]
Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()-->Line_10 $$ int code = huc.getResponseCode()[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_11 $$ if (code != HttpURLConnection.HTTP_OK) [ CD ]
Line_10 $$ int code = huc.getResponseCode()-->Line_11 $$ if (code != HttpURLConnection.HTTP_OK) [ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_14 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()[ CD ]
Line_14 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_14 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()[ CD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_15 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ CD ]
Line_15 $$ DocumentBuilder db = dbf.newDocumentBuilder()-->Line_15 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ CD ]
Line_14 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_15 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ FD ]
Line_2 $$ private static Document getDocument(URL url, String applicationVersion, boolean addHeader, int timeOut) throws IOException, ParserConfigurationException, SAXException -->Line_16 $$ return db.parse(huc.getInputStream())[ CD ]
Line_16 $$ return db.parse(huc.getInputStream())-->Line_16 $$ return db.parse(huc.getInputStream())[ CD ]
Line_15 $$ DocumentBuilder db = dbf.newDocumentBuilder()-->Line_16 $$ return db.parse(huc.getInputStream())[ FD ]
Line_3 $$ HttpURLConnection huc = (HttpURLConnection) url.openConnection()-->Line_16 $$ return db.parse(huc.getInputStream())[ FD ]
