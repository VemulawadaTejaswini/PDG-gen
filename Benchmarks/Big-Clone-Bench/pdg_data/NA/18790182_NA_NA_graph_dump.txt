Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testAddingEntries() throws Exception [ CD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_3 $$ DiskCache c = new DiskCache()[ CD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_5 $$ c.setRoot(rootFolder.getAbsolutePath())[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_5 $$ c.setRoot(rootFolder.getAbsolutePath())[ FD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_6 $$ c.setHtmlExtension("htm")[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_6 $$ c.setHtmlExtension("htm")[ FD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_7 $$ c.setPropertiesExtension("txt")[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_7 $$ c.setPropertiesExtension("txt")[ FD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_8 $$ assertEquals("htm", c.getHtmlExtension())[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_8 $$ assertEquals("htm", c.getHtmlExtension())[ FD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_9 $$ assertEquals("txt", c.getPropertiesExtension())[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_9 $$ assertEquals("txt", c.getPropertiesExtension())[ FD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_10 $$ assertEquals(rootFolder.getAbsolutePath(), c.getRoot())[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_10 $$ assertEquals(rootFolder.getAbsolutePath(), c.getRoot())[ FD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_12 $$ String key1 = "cat1/key1"[ CD ]
Line_2 $$ public void testAddingEntries() throws Exception -->Line_13 $$ String key2 = "cat1/key2"[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_17 $$ c.removeCacheEntry(key1, null)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_17 $$ c.removeCacheEntry(key1, null)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ CD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_19 $$ assertNull(i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_20 $$ assertEquals(-1L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_21 $$ assertEquals(-1, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_22 $$ assertFalse(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_23 $$ assertNull(i.getHeaders())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_24 $$ i.setLastModified(300005L)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_25 $$ i.setTranslationCount(10)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_26 $$ i.setEncoding("ISO-8859-7")[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_27 $$ i.setHeader(new ResponseHeaderImpl("Test2", new String[] [ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_28 $$ i.setHeader(new ResponseHeaderImpl("Test1", new String[] [ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_34 $$ i.setContentAsStream(input)[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_34 $$ i.setContentAsStream(input)[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_36 $$ input.close()[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_39 $$ assertEquals("ISO-8859-7", i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_40 $$ assertEquals(300005L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_41 $$ assertEquals(10, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_42 $$ assertFalse(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_43 $$ i.updateAfterAllContentUpdated(null, null)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_45 $$ assertEquals(3, i.getHeaders().size())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_47 $$ for (ResponseHeader h : i.getHeaders()) [ FD ]
Line_46 $$ int ii = 0-->Line_48 $$ ii++[ FD ]
Line_46 $$ int ii = 0-->Line_49 $$ if (ii == 1) [ FD ]
Line_49 $$ if (ii == 1) -->Line_50 $$ assertEquals("Content-Length", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_50 $$ assertEquals("Content-Length", h.getName())[ FD ]
Line_49 $$ if (ii == 1) -->Line_51 $$ assertEquals("[97]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_51 $$ assertEquals("[97]", Arrays.toString(h.getValues()))[ FD ]
Line_49 $$ if (ii == 1) -->Line_52 $$ if (ii == 2) [ CD ]
Line_46 $$ int ii = 0-->Line_52 $$ if (ii == 2) [ FD ]
Line_52 $$ if (ii == 2) -->Line_53 $$ assertEquals("Test1", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_53 $$ assertEquals("Test1", h.getName())[ FD ]
Line_52 $$ if (ii == 2) -->Line_54 $$ assertEquals("[Value1, Value2]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_54 $$ assertEquals("[Value1, Value2]", Arrays.toString(h.getValues()))[ FD ]
Line_52 $$ if (ii == 2) -->Line_55 $$ if (ii == 3) [ CD ]
Line_46 $$ int ii = 0-->Line_55 $$ if (ii == 3) [ FD ]
Line_55 $$ if (ii == 3) -->Line_56 $$ assertEquals("Test2", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_56 $$ assertEquals("Test2", h.getName())[ FD ]
Line_55 $$ if (ii == 3) -->Line_57 $$ assertEquals("[Value3, Value4]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_57 $$ assertEquals("[Value3, Value4]", Arrays.toString(h.getValues()))[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_61 $$ c.storeInCache(key1, i)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_61 $$ c.storeInCache(key1, i)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_61 $$ c.storeInCache(key1, i)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_62 $$ assertEquals("ISO-8859-7", i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_63 $$ assertEquals(300005L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_64 $$ assertEquals(10, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_65 $$ assertTrue(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_67 $$ InputStream input = i.getContentAsStream()[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_69 $$ IOUtils.copy(input, w, "ISO-8859-7")[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_69 $$ IOUtils.copy(input, w, "ISO-8859-7")[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_70 $$ IOUtils.closeQuietly(input)[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_71 $$ IOUtils.closeQuietly(w)[ FD ]
Line_30 $$ String greekText = new String(greekTextBytes, "ISO-8859-7")-->Line_72 $$ assertEquals(greekText, w.toString())[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_72 $$ assertEquals(greekText, w.toString())[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_76 $$ c.removeCacheEntry(key2, null)[ FD ]
Line_13 $$ String key2 = "cat1/key2"-->Line_76 $$ c.removeCacheEntry(key2, null)[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_77 $$ CacheItem i = c.getOrCreateCacheEntry(key2)[ FD ]
Line_13 $$ String key2 = "cat1/key2"-->Line_77 $$ CacheItem i = c.getOrCreateCacheEntry(key2)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_78 $$ assertNull(i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_79 $$ assertEquals(-1L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_80 $$ assertEquals(-1, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_81 $$ assertFalse(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_82 $$ assertNull(i.getHeaders())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_83 $$ i.setLastModified(350000L)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_84 $$ i.setTranslationCount(11)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_85 $$ i.setEncoding("ISO-8859-1")[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_86 $$ i.setHeader(new ResponseHeaderImpl("Test3", new String[] [ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_87 $$ i.setHeader(new ResponseHeaderImpl("Test4", new String[] [ FD ]
Line_88 $$ String englishText = "Hello this is another example"-->Line_90 $$ InputStream input = new ByteArrayInputStream(englishText.getBytes("ISO-8859-1"))[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_92 $$ i.setContentAsStream(input)[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_92 $$ i.setContentAsStream(input)[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_94 $$ input.close()[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_97 $$ assertEquals("ISO-8859-1", i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_98 $$ assertEquals(350000L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_99 $$ assertEquals(11, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_100 $$ assertFalse(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_101 $$ i.updateAfterAllContentUpdated(null, null)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_103 $$ assertEquals(3, i.getHeaders().size())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_105 $$ for (ResponseHeader h : i.getHeaders()) [ FD ]
Line_46 $$ int ii = 0-->Line_106 $$ ii++[ FD ]
Line_46 $$ int ii = 0-->Line_107 $$ if (ii == 1) [ FD ]
Line_107 $$ if (ii == 1) -->Line_108 $$ assertEquals("Content-Length", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_108 $$ assertEquals("Content-Length", h.getName())[ FD ]
Line_107 $$ if (ii == 1) -->Line_109 $$ assertEquals("[29]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_109 $$ assertEquals("[29]", Arrays.toString(h.getValues()))[ FD ]
Line_107 $$ if (ii == 1) -->Line_110 $$ if (ii == 2) [ CD ]
Line_46 $$ int ii = 0-->Line_110 $$ if (ii == 2) [ FD ]
Line_110 $$ if (ii == 2) -->Line_111 $$ assertEquals("Test3", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_111 $$ assertEquals("Test3", h.getName())[ FD ]
Line_110 $$ if (ii == 2) -->Line_112 $$ assertEquals("[Value3, Value4]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_112 $$ assertEquals("[Value3, Value4]", Arrays.toString(h.getValues()))[ FD ]
Line_110 $$ if (ii == 2) -->Line_113 $$ if (ii == 3) [ CD ]
Line_46 $$ int ii = 0-->Line_113 $$ if (ii == 3) [ FD ]
Line_113 $$ if (ii == 3) -->Line_114 $$ assertEquals("Test4", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_114 $$ assertEquals("Test4", h.getName())[ FD ]
Line_113 $$ if (ii == 3) -->Line_115 $$ assertEquals("[Value1]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_115 $$ assertEquals("[Value1]", Arrays.toString(h.getValues()))[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_119 $$ c.storeInCache(key2, i)[ FD ]
Line_13 $$ String key2 = "cat1/key2"-->Line_119 $$ c.storeInCache(key2, i)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_119 $$ c.storeInCache(key2, i)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_120 $$ assertEquals("ISO-8859-1", i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_121 $$ assertEquals(350000L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_122 $$ assertEquals(11, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_123 $$ assertTrue(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_125 $$ InputStream input = i.getContentAsStream()[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_127 $$ IOUtils.copy(input, w, "ISO-8859-1")[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_127 $$ IOUtils.copy(input, w, "ISO-8859-1")[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_128 $$ IOUtils.closeQuietly(input)[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_129 $$ IOUtils.closeQuietly(w)[ FD ]
Line_88 $$ String englishText = "Hello this is another example"-->Line_130 $$ assertEquals(englishText, w.toString())[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_130 $$ assertEquals(englishText, w.toString())[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_134 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_134 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_135 $$ assertEquals("ISO-8859-7", i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_136 $$ assertEquals(300005L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_137 $$ assertEquals(10, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_138 $$ assertTrue(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_140 $$ assertEquals(3, i.getHeaders().size())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_142 $$ for (ResponseHeader h : i.getHeaders()) [ FD ]
Line_46 $$ int ii = 0-->Line_143 $$ ii++[ FD ]
Line_46 $$ int ii = 0-->Line_144 $$ if (ii == 1) [ FD ]
Line_144 $$ if (ii == 1) -->Line_145 $$ assertEquals("Content-Length", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_145 $$ assertEquals("Content-Length", h.getName())[ FD ]
Line_144 $$ if (ii == 1) -->Line_146 $$ assertEquals("[97]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_146 $$ assertEquals("[97]", Arrays.toString(h.getValues()))[ FD ]
Line_144 $$ if (ii == 1) -->Line_147 $$ if (ii == 2) [ CD ]
Line_46 $$ int ii = 0-->Line_147 $$ if (ii == 2) [ FD ]
Line_147 $$ if (ii == 2) -->Line_148 $$ assertEquals("Test1", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_148 $$ assertEquals("Test1", h.getName())[ FD ]
Line_147 $$ if (ii == 2) -->Line_149 $$ assertEquals("[Value1, Value2]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_149 $$ assertEquals("[Value1, Value2]", Arrays.toString(h.getValues()))[ FD ]
Line_147 $$ if (ii == 2) -->Line_150 $$ if (ii == 3) [ CD ]
Line_46 $$ int ii = 0-->Line_150 $$ if (ii == 3) [ FD ]
Line_150 $$ if (ii == 3) -->Line_151 $$ assertEquals("Test2", h.getName())[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_151 $$ assertEquals("Test2", h.getName())[ FD ]
Line_150 $$ if (ii == 3) -->Line_152 $$ assertEquals("[Value3, Value4]", Arrays.toString(h.getValues()))[ CD ]
Line_47 $$ for (ResponseHeader h : i.getHeaders()) -->Line_152 $$ assertEquals("[Value3, Value4]", Arrays.toString(h.getValues()))[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_159 $$ InputStream input = i.getContentAsStream()[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_161 $$ IOUtils.copy(input, w, "ISO-8859-7")[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_161 $$ IOUtils.copy(input, w, "ISO-8859-7")[ FD ]
Line_32 $$ InputStream input = new ByteArrayInputStream(greekTextBytes)-->Line_162 $$ IOUtils.closeQuietly(input)[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_163 $$ IOUtils.closeQuietly(w)[ FD ]
Line_30 $$ String greekText = new String(greekTextBytes, "ISO-8859-7")-->Line_164 $$ assertEquals(greekText, w.toString())[ FD ]
Line_68 $$ StringWriter w = new StringWriter()-->Line_164 $$ assertEquals(greekText, w.toString())[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_168 $$ c.removeCacheEntry(key1, null)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_168 $$ c.removeCacheEntry(key1, null)[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_169 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_169 $$ CacheItem i = c.getOrCreateCacheEntry(key1)[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_170 $$ assertNull(i.getEncoding())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_171 $$ assertEquals(-1L, i.getLastModified())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_172 $$ assertEquals(-1, i.getTranslationCount())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_173 $$ assertFalse(i.isCached())[ FD ]
Line_18 $$ CacheItem i = c.getOrCreateCacheEntry(key1)-->Line_174 $$ assertNull(i.getHeaders())[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_177 $$ c.removeCacheEntry(key1, null)[ FD ]
Line_12 $$ String key1 = "cat1/key1"-->Line_177 $$ c.removeCacheEntry(key1, null)[ FD ]
Line_3 $$ DiskCache c = new DiskCache()-->Line_180 $$ c.removeCacheEntry(key2, null)[ FD ]
Line_13 $$ String key2 = "cat1/key2"-->Line_180 $$ c.removeCacheEntry(key2, null)[ FD ]
