Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String[][] getProjectTreeData() [ CD ]
Line_2 $$ public String[][] getProjectTreeData() -->Line_3 $$ String[][] treeData = null[ CD ]
Line_2 $$ public String[][] getProjectTreeData() -->Line_4 $$ String filename = dms_home + FS + "temp" + FS + username + "adminprojects.xml"[ CD ]
Line_2 $$ public String[][] getProjectTreeData() -->Line_5 $$ String urlString = dms_url + "/servlet/com.ufnasoft.dms.server.ServerGetAdminProjects"[ CD ]
Line_8 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_8 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()[ CD ]
Line_8 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_9 $$ factory.setValidating(false)[ FD ]
Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()-->Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()[ CD ]
Line_8 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()[ FD ]
Line_11 $$ URL u = new URL(urldata)-->Line_12 $$ DataInputStream is = new DataInputStream(u.openStream())[ FD ]
Line_14 $$ int iBufSize = is.available()-->Line_14 $$ int iBufSize = is.available()[ CD ]
Line_12 $$ DataInputStream is = new DataInputStream(u.openStream())-->Line_14 $$ int iBufSize = is.available()[ FD ]
Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)-->Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)[ FD ]
Line_16 $$ int iNumRead-->Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)[ FD ]
Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)-->Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)[ CD ]
Line_12 $$ DataInputStream is = new DataInputStream(u.openStream())-->Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)[ FD ]
Line_14 $$ int iBufSize = is.available()-->Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)[ FD ]
Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)-->Line_17 $$ os.write(inBuf, 0, iNumRead)[ CD ]
Line_13 $$ FileOutputStream os = new FileOutputStream(filename)-->Line_17 $$ os.write(inBuf, 0, iNumRead)[ FD ]
Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)-->Line_17 $$ os.write(inBuf, 0, iNumRead)[ FD ]
Line_16 $$ int iNumRead-->Line_17 $$ os.write(inBuf, 0, iNumRead)[ FD ]
Line_13 $$ FileOutputStream os = new FileOutputStream(filename)-->Line_18 $$ os.close()[ FD ]
Line_12 $$ DataInputStream is = new DataInputStream(u.openStream())-->Line_19 $$ is.close()[ FD ]
Line_22 $$ Document document = parser.parse(inputstream)-->Line_22 $$ Document document = parser.parse(inputstream)[ CD ]
Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()-->Line_22 $$ Document document = parser.parse(inputstream)[ FD ]
Line_21 $$ InputStream inputstream = new FileInputStream(f)-->Line_22 $$ Document document = parser.parse(inputstream)[ FD ]
Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")-->Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")[ CD ]
Line_22 $$ Document document = parser.parse(inputstream)-->Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")[ FD ]
Line_24 $$ int num = nodelist.getLength()-->Line_24 $$ int num = nodelist.getLength()[ CD ]
Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")-->Line_24 $$ int num = nodelist.getLength()[ FD ]
Line_3 $$ String[][] treeData = null-->Line_25 $$ treeData = new String[num][3][ FD ]
Line_25 $$ treeData = new String[num][3]-->Line_25 $$ treeData = new String[num][3][ FD ]
Line_24 $$ int num = nodelist.getLength()-->Line_26 $$ for (int i = 0; i < num; i++) [ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_26 $$ for (int i = 0; i < num; i++) [ CD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_26 $$ for (int i = 0; i < num; i++) [ CD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_26 $$ for (int i = 0; i < num; i++) [ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_27 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pid"))[ CD ]
Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")-->Line_27 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pid"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_27 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pid"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_28 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "ppid"))[ CD ]
Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")-->Line_28 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "ppid"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_28 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "ppid"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_29 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p"))[ CD ]
Line_23 $$ NodeList nodelist = document.getElementsByTagName("proj")-->Line_29 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_29 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p"))[ FD ]
Line_2 $$ public String[][] getProjectTreeData() -->Line_39 $$ return treeData[ CD ]
Line_17 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead)-->Line_17 $$ os.write(inBuf, 0, iNumRead)[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_26 $$ for (int i = 0; i < num; i++) [ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_26 $$ for (int i = 0; i < num; i++) [ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_26 $$ for (int i = 0; i < num; i++) [ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_27 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pid"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_28 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "ppid"))[ FD ]
Line_26 $$ for (int i = 0; i < num; i++) -->Line_29 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p"))[ FD ]
