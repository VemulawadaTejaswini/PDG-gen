Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected static Parser buildParser(URL url) throws IOException, ParserException [ CD ]
Line_2 $$ protected static Parser buildParser(URL url) throws IOException, ParserException -->Line_3 $$ Parser parser[ CD ]
Line_2 $$ protected static Parser buildParser(URL url) throws IOException, ParserException -->Line_4 $$ URLConnection connection = openConnection(url)[ CD ]
Line_4 $$ URLConnection connection = openConnection(url)-->Line_4 $$ URLConnection connection = openConnection(url)[ CD ]
Line_2 $$ protected static Parser buildParser(URL url) throws IOException, ParserException -->Line_4 $$ URLConnection connection = openConnection(url)[ FD ]
Line_2 $$ protected static Parser buildParser(URL url) throws IOException, ParserException -->Line_5 $$ if (!(connection instanceof HttpURLConnection) || ((HttpURLConnection) connection).getResponseCode() == 200) [ CD ]
Line_5 $$ if (!(connection instanceof HttpURLConnection) || ((HttpURLConnection) connection).getResponseCode() == 200) -->Line_6 $$ parser = new Parser(connection)[ CD ]
Line_3 $$ Parser parser-->Line_6 $$ parser = new Parser(connection)[ FD ]
Line_6 $$ parser = new Parser(connection)-->Line_6 $$ parser = new Parser(connection)[ FD ]
Line_5 $$ if (!(connection instanceof HttpURLConnection) || ((HttpURLConnection) connection).getResponseCode() == 200) -->Line_8 $$ parser = null[ CD ]
Line_3 $$ Parser parser-->Line_8 $$ parser = null[ FD ]
Line_6 $$ parser = new Parser(connection)-->Line_8 $$ parser = null[ FD ]
Line_8 $$ parser = null-->Line_8 $$ parser = null[ FD ]
Line_2 $$ protected static Parser buildParser(URL url) throws IOException, ParserException -->Line_10 $$ return parser[ CD ]
