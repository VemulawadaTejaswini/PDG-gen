Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException [ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_3 $$ Runtime.getRuntime().addShutdownHook(new Thread() [ CD ]
Line_3 $$ Runtime.getRuntime().addShutdownHook(new Thread() -->Line_5 $$ terminate()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_8 $$ System.out.println("loading jar file " + jarFileURI + " ...")[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_10 $$ InputStream is = url.openStream()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_11 $$ jarFile = QAUtil.createTempfile()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_15 $$ while ((bytes_read = is.read(buffer)) != -1) [ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException [ CD ]
Line_15 $$ while ((bytes_read = is.read(buffer)) != -1) -->Line_16 $$ fos.write(buffer, 0, bytes_read)[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_18 $$ fos.close()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_19 $$ is.close()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_21 $$ args[0] = "java"[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_22 $$ args[1] = "-cp"[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_23 $$ args[2] = jarFile.getAbsolutePath()[ CD ]
Line_23 $$ args[2] = jarFile.getAbsolutePath()-->Line_23 $$ args[2] = jarFile.getAbsolutePath()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_25 $$ System.arraycopy(params, 0, args, 4, params.length)[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_25 $$ System.arraycopy(params, 0, args, 4, params.length)[ FD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_30 $$ System.out.println("execute " + sb)[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_32 $$ p = pb.start()[ CD ]
Line_2 $$ public InputStream start(String classname, String jarFileURI, String... params) throws IOException -->Line_33 $$ return p.getInputStream()[ CD ]
Line_33 $$ return p.getInputStream()-->Line_33 $$ return p.getInputStream()[ CD ]
