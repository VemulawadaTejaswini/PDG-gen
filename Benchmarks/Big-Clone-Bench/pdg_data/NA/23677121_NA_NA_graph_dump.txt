Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException [ CD ]
Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException -->Line_4 $$ //Buffer for extracting files[ CD ]
Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException -->Line_6 $$ //Zip file[ CD ]
Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException -->Line_8 $$ //Get entries[ CD ]
Line_8 $$ //Get entries-->Line_8 $$ //Get entries[ CD ]
Line_6 $$ //Zip file-->Line_8 $$ //Get entries[ FD ]
Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException -->Line_10 $$ //Iterate through the entries[ CD ]
Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException -->Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException [ CD ]
Line_10 $$ //Iterate through the entries-->Line_10 $$ //Iterate through the entries[ CD ]
Line_8 $$ //Get entries-->Line_10 $$ //Iterate through the entries[ FD ]
Line_10 $$ //Iterate through the entries-->Line_12 $$ //Get entry[ CD ]
Line_12 $$ //Get entry-->Line_12 $$ //Get entry[ CD ]
Line_8 $$ //Get entries-->Line_12 $$ //Get entry[ FD ]
Line_10 $$ //Iterate through the entries-->Line_14 $$ //Resolve entry file[ CD ]
Line_12 $$ //Get entry-->Line_14 $$ //Resolve entry file[ FD ]
Line_10 $$ //Iterate through the entries-->Line_16 $$ //Make parent directories[ CD ]
Line_14 $$ //Resolve entry file-->Line_16 $$ //Make parent directories[ FD ]
Line_10 $$ //Iterate through the entries-->Line_17 $$ if (//If directory, create it[ CD ]
Line_12 $$ //Get entry-->Line_17 $$ if (//If directory, create it[ FD ]
Line_17 $$ if (//If directory, create it-->Line_17 $$ if (//If directory, create it[ CD ]
Line_12 $$ //Get entry-->Line_17 $$ if (//If directory, create it[ FD ]
Line_17 $$ if (//If directory, create it-->Line_18 $$ newFile.mkdir()[ CD ]
Line_14 $$ //Resolve entry file-->Line_18 $$ newFile.mkdir()[ FD ]
Line_17 $$ if (//If directory, create it-->Line_20 $$ InputStream is = zip.getInputStream(ze)[ CD ]
Line_20 $$ InputStream is = zip.getInputStream(ze)-->Line_20 $$ InputStream is = zip.getInputStream(ze)[ CD ]
Line_6 $$ //Zip file-->Line_20 $$ InputStream is = zip.getInputStream(ze)[ FD ]
Line_12 $$ //Get entry-->Line_20 $$ InputStream is = zip.getInputStream(ze)[ FD ]
Line_17 $$ if (//If directory, create it-->Line_21 $$ FileOutputStream fos = new FileOutputStream(newFile)[ CD ]
Line_17 $$ if (//If directory, create it-->Line_22 $$ int len[ CD ]
Line_17 $$ if (//If directory, create it-->Line_23 $$ while ((len = is.read(buffer)) > 0) [ CD ]
Line_17 $$ if (//If directory, create it-->Line_17 $$ if (//If directory, create it[ CD ]
Line_23 $$ while ((len = is.read(buffer)) > 0) -->Line_23 $$ while ((len = is.read(buffer)) > 0) [ FD ]
Line_22 $$ int len-->Line_23 $$ while ((len = is.read(buffer)) > 0) [ FD ]
Line_23 $$ while ((len = is.read(buffer)) > 0) -->Line_23 $$ while ((len = is.read(buffer)) > 0) [ CD ]
Line_20 $$ InputStream is = zip.getInputStream(ze)-->Line_23 $$ while ((len = is.read(buffer)) > 0) [ FD ]
Line_4 $$ //Buffer for extracting files-->Line_23 $$ while ((len = is.read(buffer)) > 0) [ FD ]
Line_23 $$ while ((len = is.read(buffer)) > 0) -->Line_24 $$ fos.write(buffer, 0, len)[ CD ]
Line_21 $$ FileOutputStream fos = new FileOutputStream(newFile)-->Line_24 $$ fos.write(buffer, 0, len)[ FD ]
Line_4 $$ //Buffer for extracting files-->Line_24 $$ fos.write(buffer, 0, len)[ FD ]
Line_23 $$ while ((len = is.read(buffer)) > 0) -->Line_24 $$ fos.write(buffer, 0, len)[ FD ]
Line_22 $$ int len-->Line_24 $$ fos.write(buffer, 0, len)[ FD ]
Line_17 $$ if (//If directory, create it-->Line_26 $$ fos.close()[ CD ]
Line_21 $$ FileOutputStream fos = new FileOutputStream(newFile)-->Line_26 $$ fos.close()[ FD ]
Line_17 $$ if (//If directory, create it-->Line_27 $$ is.close()[ CD ]
Line_20 $$ InputStream is = zip.getInputStream(ze)-->Line_27 $$ is.close()[ FD ]
Line_2 $$ public static void unzip2(File zipfile, File outputdir) throws IOException -->Line_31 $$ //Cleanup[ CD ]
Line_6 $$ //Zip file-->Line_31 $$ //Cleanup[ FD ]
Line_12 $$ //Get entry-->Line_14 $$ //Resolve entry file[ FD ]
Line_14 $$ //Resolve entry file-->Line_16 $$ //Make parent directories[ FD ]
Line_12 $$ //Get entry-->Line_17 $$ if (//If directory, create it[ FD ]
Line_12 $$ //Get entry-->Line_17 $$ if (//If directory, create it[ FD ]
Line_14 $$ //Resolve entry file-->Line_18 $$ newFile.mkdir()[ FD ]
Line_12 $$ //Get entry-->Line_20 $$ InputStream is = zip.getInputStream(ze)[ FD ]
Line_21 $$ FileOutputStream fos = new FileOutputStream(newFile)-->Line_26 $$ fos.close()[ FD ]
Line_20 $$ InputStream is = zip.getInputStream(ze)-->Line_27 $$ is.close()[ FD ]
Line_23 $$ while ((len = is.read(buffer)) > 0) -->Line_24 $$ fos.write(buffer, 0, len)[ FD ]
