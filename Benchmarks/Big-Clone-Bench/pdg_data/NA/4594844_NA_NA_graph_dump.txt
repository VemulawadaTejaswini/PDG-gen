Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute() throws BuildException [ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_3 $$ final String GC_USERNAME = "google-code-username"[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_4 $$ final String GC_PASSWORD = "google-code-password"[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_5 $$ if (StringUtils.isBlank(this.projectName))[ CD ]
Line_5 $$ if (StringUtils.isBlank(this.projectName))-->Line_5 $$ if (StringUtils.isBlank(this.projectName))[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_6 $$ if (this.file == null)[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_7 $$ if (!this.file.exists())[ CD ]
Line_7 $$ if (!this.file.exists())-->Line_7 $$ if (!this.file.exists())[ CD ]
Line_7 $$ if (!this.file.exists())-->Line_7 $$ if (!this.file.exists())[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_8 $$ if (!this.file.isFile())[ CD ]
Line_8 $$ if (!this.file.isFile())-->Line_8 $$ if (!this.file.isFile())[ CD ]
Line_8 $$ if (!this.file.isFile())-->Line_8 $$ if (!this.file.isFile())[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_9 $$ if (this.config == null)[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_10 $$ if (!this.config.exists())[ CD ]
Line_10 $$ if (!this.config.exists())-->Line_10 $$ if (!this.config.exists())[ CD ]
Line_10 $$ if (!this.config.exists())-->Line_10 $$ if (!this.config.exists())[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_11 $$ if (!this.config.isFile())[ CD ]
Line_11 $$ if (!this.config.isFile())-->Line_11 $$ if (!this.config.isFile())[ CD ]
Line_11 $$ if (!this.config.isFile())-->Line_11 $$ if (!this.config.isFile())[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_12 $$ PostMethod post = null[ CD ]
Line_14 $$ Properties cfg = new Properties()-->Line_16 $$ cfg.loadFromXML(fin)[ FD ]
Line_15 $$ FileInputStream fin = new FileInputStream(this.config)-->Line_16 $$ cfg.loadFromXML(fin)[ FD ]
Line_15 $$ FileInputStream fin = new FileInputStream(this.config)-->Line_17 $$ fin.close()[ FD ]
Line_18 $$ if (!cfg.containsKey(GC_USERNAME))-->Line_18 $$ if (!cfg.containsKey(GC_USERNAME))[ CD ]
Line_18 $$ if (!cfg.containsKey(GC_USERNAME))-->Line_18 $$ if (!cfg.containsKey(GC_USERNAME))[ CD ]
Line_14 $$ Properties cfg = new Properties()-->Line_18 $$ if (!cfg.containsKey(GC_USERNAME))[ FD ]
Line_3 $$ final String GC_USERNAME = "google-code-username"-->Line_18 $$ if (!cfg.containsKey(GC_USERNAME))[ FD ]
Line_19 $$ if (!cfg.containsKey(GC_PASSWORD))-->Line_19 $$ if (!cfg.containsKey(GC_PASSWORD))[ CD ]
Line_19 $$ if (!cfg.containsKey(GC_PASSWORD))-->Line_19 $$ if (!cfg.containsKey(GC_PASSWORD))[ CD ]
Line_14 $$ Properties cfg = new Properties()-->Line_19 $$ if (!cfg.containsKey(GC_PASSWORD))[ FD ]
Line_4 $$ final String GC_PASSWORD = "google-code-password"-->Line_19 $$ if (!cfg.containsKey(GC_PASSWORD))[ FD ]
Line_12 $$ PostMethod post = null-->Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")[ FD ]
Line_12 $$ PostMethod post = null-->Line_22 $$ post.addRequestHeader("User-Agent", getClass().getName())[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_22 $$ post.addRequestHeader("User-Agent", getClass().getName())[ FD ]
Line_12 $$ PostMethod post = null-->Line_23 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(cfg.getProperty(GC_USERNAME) + ":" + cfg.getProperty(GC_PASSWORD)))[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_23 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(cfg.getProperty(GC_USERNAME) + ":" + cfg.getProperty(GC_PASSWORD)))[ FD ]
Line_14 $$ Properties cfg = new Properties()-->Line_23 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(cfg.getProperty(GC_USERNAME) + ":" + cfg.getProperty(GC_PASSWORD)))[ FD ]
Line_3 $$ final String GC_USERNAME = "google-code-username"-->Line_23 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(cfg.getProperty(GC_USERNAME) + ":" + cfg.getProperty(GC_PASSWORD)))[ FD ]
Line_14 $$ Properties cfg = new Properties()-->Line_23 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(cfg.getProperty(GC_USERNAME) + ":" + cfg.getProperty(GC_PASSWORD)))[ FD ]
Line_4 $$ final String GC_PASSWORD = "google-code-password"-->Line_23 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(cfg.getProperty(GC_USERNAME) + ":" + cfg.getProperty(GC_PASSWORD)))[ FD ]
Line_25 $$ String s = this.summary-->Line_26 $$ if (StringUtils.isBlank(s)) [ FD ]
Line_26 $$ if (StringUtils.isBlank(s)) -->Line_26 $$ if (StringUtils.isBlank(s)) [ CD ]
Line_25 $$ String s = this.summary-->Line_26 $$ if (StringUtils.isBlank(s)) [ FD ]
Line_26 $$ if (StringUtils.isBlank(s)) -->Line_27 $$ s = this.file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ CD ]
Line_25 $$ String s = this.summary-->Line_27 $$ s = this.file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ FD ]
Line_27 $$ s = this.file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"-->Line_27 $$ s = this.file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ FD ]
Line_24 $$ List<Part> parts = new ArrayList<Part>()-->Line_29 $$ parts.add(new StringPart("summary", s))[ FD ]
Line_30 $$ for (String lbl : this.labels.split("[, \t\n]+")) -->Line_31 $$ if (StringUtils.isBlank(lbl))[ FD ]
Line_31 $$ if (StringUtils.isBlank(lbl))-->Line_31 $$ if (StringUtils.isBlank(lbl))[ CD ]
Line_30 $$ for (String lbl : this.labels.split("[, \t\n]+")) -->Line_31 $$ if (StringUtils.isBlank(lbl))[ FD ]
Line_24 $$ List<Part> parts = new ArrayList<Part>()-->Line_32 $$ parts.add(new StringPart("label", lbl.trim()))[ FD ]
Line_30 $$ for (String lbl : this.labels.split("[, \t\n]+")) -->Line_32 $$ parts.add(new StringPart("label", lbl.trim()))[ FD ]
Line_24 $$ List<Part> parts = new ArrayList<Part>()-->Line_34 $$ parts.add(new FilePart("filename", this.file))[ FD ]
Line_24 $$ List<Part> parts = new ArrayList<Part>()-->Line_35 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_24 $$ List<Part> parts = new ArrayList<Part>()-->Line_35 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_12 $$ PostMethod post = null-->Line_35 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_35 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_12 $$ PostMethod post = null-->Line_36 $$ post.setRequestEntity(requestEntity)[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_36 $$ post.setRequestEntity(requestEntity)[ FD ]
Line_35 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())-->Line_36 $$ post.setRequestEntity(requestEntity)[ FD ]
Line_37 $$ int status = client.executeMethod(post)-->Line_37 $$ int status = client.executeMethod(post)[ CD ]
Line_20 $$ HttpClient client = new HttpClient()-->Line_37 $$ int status = client.executeMethod(post)[ FD ]
Line_12 $$ PostMethod post = null-->Line_37 $$ int status = client.executeMethod(post)[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_37 $$ int status = client.executeMethod(post)[ FD ]
Line_37 $$ int status = client.executeMethod(post)-->Line_38 $$ if (status != 201) [ FD ]
Line_12 $$ PostMethod post = null-->Line_39 $$ throw new BuildException("http status !=201 : " + post.getResponseBodyAsString())[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_39 $$ throw new BuildException("http status !=201 : " + post.getResponseBodyAsString())[ FD ]
Line_38 $$ if (status != 201) -->Line_41 $$ IOUtils.copyTo(post.getResponseBodyAsStream(), new NullOutputStream())[ CD ]
Line_12 $$ PostMethod post = null-->Line_41 $$ IOUtils.copyTo(post.getResponseBodyAsStream(), new NullOutputStream())[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_41 $$ IOUtils.copyTo(post.getResponseBodyAsStream(), new NullOutputStream())[ FD ]
Line_12 $$ PostMethod post = null-->Line_48 $$ if (post != null)[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_48 $$ if (post != null)[ FD ]
Line_48 $$ if (post != null)-->Line_48 $$ post.releaseConnection()[ CD ]
Line_12 $$ PostMethod post = null-->Line_48 $$ post.releaseConnection()[ FD ]
Line_21 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_48 $$ post.releaseConnection()[ FD ]
