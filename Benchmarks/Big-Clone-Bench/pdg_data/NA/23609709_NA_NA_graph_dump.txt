Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private File downloadPDB(String pdbId) [ CD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_3 $$ File tempFile = new File(path + "/" + pdbId + ".pdb.gz")[ CD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_4 $$ File pdbHome = new File(path)[ CD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_5 $$ if (!pdbHome.canWrite()) [ CD ]
Line_5 $$ if (!pdbHome.canWrite()) -->Line_5 $$ if (!pdbHome.canWrite()) [ CD ]
Line_5 $$ if (!pdbHome.canWrite()) -->Line_5 $$ if (!pdbHome.canWrite()) [ CD ]
Line_4 $$ File pdbHome = new File(path)-->Line_5 $$ if (!pdbHome.canWrite()) [ FD ]
Line_5 $$ if (!pdbHome.canWrite()) -->Line_6 $$ System.err.println("can not write to " + pdbHome)[ CD ]
Line_5 $$ if (!pdbHome.canWrite()) -->Line_7 $$ return null[ CD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_9 $$ String ftp = String.format("ftp://ftp.ebi.ac.uk/pub/databases/msd/pdb_uncompressed/pdb%s.ent", pdbId.toLowerCase())[ CD ]
Line_9 $$ String ftp = String.format("ftp://ftp.ebi.ac.uk/pub/databases/msd/pdb_uncompressed/pdb%s.ent", pdbId.toLowerCase())-->Line_9 $$ String ftp = String.format("ftp://ftp.ebi.ac.uk/pub/databases/msd/pdb_uncompressed/pdb%s.ent", pdbId.toLowerCase())[ CD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_9 $$ String ftp = String.format("ftp://ftp.ebi.ac.uk/pub/databases/msd/pdb_uncompressed/pdb%s.ent", pdbId.toLowerCase())[ FD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_10 $$ System.out.println("Fetching " + ftp)[ CD ]
Line_13 $$ InputStream conn = url.openStream()-->Line_13 $$ InputStream conn = url.openStream()[ CD ]
Line_12 $$ URL url = new URL(ftp)-->Line_13 $$ InputStream conn = url.openStream()[ FD ]
Line_20 $$ while ((line = fileBuffer.readLine()) != null) -->Line_20 $$ while ((line = fileBuffer.readLine()) != null) [ FD ]
Line_19 $$ String line-->Line_20 $$ while ((line = fileBuffer.readLine()) != null) [ FD ]
Line_20 $$ while ((line = fileBuffer.readLine()) != null) -->Line_20 $$ while ((line = fileBuffer.readLine()) != null) [ CD ]
Line_18 $$ BufferedReader fileBuffer = new BufferedReader(new InputStreamReader(conn))-->Line_20 $$ while ((line = fileBuffer.readLine()) != null) [ FD ]
Line_20 $$ while ((line = fileBuffer.readLine()) != null) -->Line_21 $$ pw.println(line)[ CD ]
Line_17 $$ PrintWriter pw = new PrintWriter(gzOutPut)-->Line_21 $$ pw.println(line)[ FD ]
Line_20 $$ while ((line = fileBuffer.readLine()) != null) -->Line_21 $$ pw.println(line)[ FD ]
Line_19 $$ String line-->Line_21 $$ pw.println(line)[ FD ]
Line_17 $$ PrintWriter pw = new PrintWriter(gzOutPut)-->Line_23 $$ pw.flush()[ FD ]
Line_17 $$ PrintWriter pw = new PrintWriter(gzOutPut)-->Line_24 $$ pw.close()[ FD ]
Line_15 $$ FileOutputStream outPut = new FileOutputStream(tempFile)-->Line_25 $$ outPut.close()[ FD ]
Line_13 $$ InputStream conn = url.openStream()-->Line_26 $$ conn.close()[ FD ]
Line_2 $$ private File downloadPDB(String pdbId) -->Line_31 $$ return tempFile[ CD ]
Line_20 $$ while ((line = fileBuffer.readLine()) != null) -->Line_21 $$ pw.println(line)[ FD ]
