Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) [ CD ]
Line_6 $$ String moviehash = getHash(movieFile)-->Line_6 $$ String moviehash = getHash(movieFile)[ CD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_6 $$ String moviehash = getHash(movieFile)[ FD ]
Line_7 $$ String moviebytesize = String.valueOf(movieFile.length())-->Line_7 $$ String moviebytesize = String.valueOf(movieFile.length())[ CD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_7 $$ String moviebytesize = String.valueOf(movieFile.length())[ FD ]
Line_5 $$ String xml-->Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)[ FD ]
Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)-->Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)[ FD ]
Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)-->Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)[ CD ]
Line_6 $$ String moviehash = getHash(movieFile)-->Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)[ FD ]
Line_7 $$ String moviebytesize = String.valueOf(movieFile.length())-->Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)[ FD ]
Line_4 $$ String ret-->Line_9 $$ ret = sendRPC(xml)[ FD ]
Line_9 $$ ret = sendRPC(xml)-->Line_9 $$ ret = sendRPC(xml)[ FD ]
Line_9 $$ ret = sendRPC(xml)-->Line_9 $$ ret = sendRPC(xml)[ CD ]
Line_5 $$ String xml-->Line_9 $$ ret = sendRPC(xml)[ FD ]
Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)-->Line_9 $$ ret = sendRPC(xml)[ FD ]
Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)-->Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)[ CD ]
Line_4 $$ String ret-->Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_9 $$ ret = sendRPC(xml)-->Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)-->Line_11 $$ if (subDownloadLink.equals("")) [ FD ]
Line_11 $$ if (subDownloadLink.equals("")) -->Line_11 $$ if (subDownloadLink.equals("")) [ CD ]
Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)-->Line_11 $$ if (subDownloadLink.equals("")) [ FD ]
Line_11 $$ if (subDownloadLink.equals("")) -->Line_12 $$ String moviefilename = movieFile.getName()[ CD ]
Line_12 $$ String moviefilename = movieFile.getName()-->Line_12 $$ String moviefilename = movieFile.getName()[ CD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_12 $$ String moviefilename = movieFile.getName()[ FD ]
Line_11 $$ if (subDownloadLink.equals("")) -->Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) [ CD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) [ CD ]
Line_12 $$ String moviefilename = movieFile.getName()-->Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) [ FD ]
Line_12 $$ String moviefilename = movieFile.getName()-->Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) [ FD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_14 $$ String subfilename = subtitleFile.getName()[ CD ]
Line_14 $$ String subfilename = subtitleFile.getName()-->Line_14 $$ String subfilename = subtitleFile.getName()[ CD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_14 $$ String subfilename = subtitleFile.getName()[ FD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_15 $$ int index = subfilename.lastIndexOf(".")[ CD ]
Line_15 $$ int index = subfilename.lastIndexOf(".")-->Line_15 $$ int index = subfilename.lastIndexOf(".")[ CD ]
Line_14 $$ String subfilename = subtitleFile.getName()-->Line_15 $$ int index = subfilename.lastIndexOf(".")[ FD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_16 $$ String query = subfilename.substring(0, index)[ CD ]
Line_16 $$ String query = subfilename.substring(0, index)-->Line_16 $$ String query = subfilename.substring(0, index)[ CD ]
Line_14 $$ String subfilename = subtitleFile.getName()-->Line_16 $$ String query = subfilename.substring(0, index)[ FD ]
Line_15 $$ int index = subfilename.lastIndexOf(".")-->Line_16 $$ String query = subfilename.substring(0, index)[ FD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_17 $$ xml = generateXMLRPCSS(query)[ CD ]
Line_5 $$ String xml-->Line_17 $$ xml = generateXMLRPCSS(query)[ FD ]
Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)-->Line_17 $$ xml = generateXMLRPCSS(query)[ FD ]
Line_17 $$ xml = generateXMLRPCSS(query)-->Line_17 $$ xml = generateXMLRPCSS(query)[ FD ]
Line_17 $$ xml = generateXMLRPCSS(query)-->Line_17 $$ xml = generateXMLRPCSS(query)[ CD ]
Line_16 $$ String query = subfilename.substring(0, index)-->Line_17 $$ xml = generateXMLRPCSS(query)[ FD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_18 $$ ret = sendRPC(xml)[ CD ]
Line_4 $$ String ret-->Line_18 $$ ret = sendRPC(xml)[ FD ]
Line_9 $$ ret = sendRPC(xml)-->Line_18 $$ ret = sendRPC(xml)[ FD ]
Line_18 $$ ret = sendRPC(xml)-->Line_18 $$ ret = sendRPC(xml)[ FD ]
Line_18 $$ ret = sendRPC(xml)-->Line_18 $$ ret = sendRPC(xml)[ CD ]
Line_5 $$ String xml-->Line_18 $$ ret = sendRPC(xml)[ FD ]
Line_8 $$ xml = generateXMLRPCSS(moviehash, moviebytesize)-->Line_18 $$ ret = sendRPC(xml)[ FD ]
Line_17 $$ xml = generateXMLRPCSS(query)-->Line_18 $$ ret = sendRPC(xml)[ FD ]
Line_13 $$ if (!(moviefilename.toUpperCase().endsWith(".M2TS") && moviefilename.startsWith("0"))) -->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ CD ]
Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)-->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)-->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)-->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ CD ]
Line_4 $$ String ret-->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_9 $$ ret = sendRPC(xml)-->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_18 $$ ret = sendRPC(xml)-->Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)[ FD ]
Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)-->Line_22 $$ if (subDownloadLink.equals("")) [ FD ]
Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)-->Line_22 $$ if (subDownloadLink.equals("")) [ FD ]
Line_22 $$ if (subDownloadLink.equals("")) -->Line_22 $$ if (subDownloadLink.equals("")) [ CD ]
Line_10 $$ String subDownloadLink = getValue("SubDownloadLink", ret)-->Line_22 $$ if (subDownloadLink.equals("")) [ FD ]
Line_19 $$ subDownloadLink = getValue("SubDownloadLink", ret)-->Line_22 $$ if (subDownloadLink.equals("")) [ FD ]
Line_22 $$ if (subDownloadLink.equals("")) -->Line_23 $$ logger.finer("OpenSubtitles Plugin: Subtitle not found for " + movie.getBaseName())[ CD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_23 $$ logger.finer("OpenSubtitles Plugin: Subtitle not found for " + movie.getBaseName())[ FD ]
Line_22 $$ if (subDownloadLink.equals("")) -->Line_24 $$ return false[ CD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_26 $$ logger.finer("OpenSubtitles Plugin: Download subtitle for " + movie.getBaseName())[ FD ]
Line_27 $$ URL url = new URL(subDownloadLink)-->Line_28 $$ HttpURLConnection connection = (HttpURLConnection) (url.openConnection())[ FD ]
Line_28 $$ HttpURLConnection connection = (HttpURLConnection) (url.openConnection())-->Line_29 $$ connection.setRequestProperty("Connection", "Close")[ FD ]
Line_30 $$ InputStream inputStream = connection.getInputStream()-->Line_30 $$ InputStream inputStream = connection.getInputStream()[ CD ]
Line_28 $$ HttpURLConnection connection = (HttpURLConnection) (url.openConnection())-->Line_30 $$ InputStream inputStream = connection.getInputStream()[ FD ]
Line_31 $$ int code = connection.getResponseCode()-->Line_31 $$ int code = connection.getResponseCode()[ CD ]
Line_28 $$ HttpURLConnection connection = (HttpURLConnection) (url.openConnection())-->Line_31 $$ int code = connection.getResponseCode()[ FD ]
Line_31 $$ int code = connection.getResponseCode()-->Line_32 $$ if (code != HttpURLConnection.HTTP_OK) [ FD ]
Line_32 $$ if (code != HttpURLConnection.HTTP_OK) -->Line_33 $$ logger.severe("OpenSubtitles Plugin: Download Failed")[ CD ]
Line_32 $$ if (code != HttpURLConnection.HTTP_OK) -->Line_34 $$ return false[ CD ]
Line_40 $$ while ((len = a.read(buf)) > 0) -->Line_40 $$ while ((len = a.read(buf)) > 0) [ FD ]
Line_39 $$ int len-->Line_40 $$ while ((len = a.read(buf)) > 0) [ FD ]
Line_40 $$ while ((len = a.read(buf)) > 0) -->Line_40 $$ while ((len = a.read(buf)) > 0) [ CD ]
Line_36 $$ GZIPInputStream a = new GZIPInputStream(inputStream)-->Line_40 $$ while ((len = a.read(buf)) > 0) [ FD ]
Line_40 $$ while ((len = a.read(buf)) > 0) -->Line_41 $$ out.write(buf, 0, len)[ CD ]
Line_37 $$ OutputStream out = new FileOutputStream(subtitleFile)-->Line_41 $$ out.write(buf, 0, len)[ FD ]
Line_40 $$ while ((len = a.read(buf)) > 0) -->Line_41 $$ out.write(buf, 0, len)[ FD ]
Line_39 $$ int len-->Line_41 $$ out.write(buf, 0, len)[ FD ]
Line_37 $$ OutputStream out = new FileOutputStream(subtitleFile)-->Line_43 $$ out.close()[ FD ]
Line_2 $$ private boolean subtitleDownload(Movie movie, File movieFile, File subtitleFile) -->Line_44 $$ movie.setSubtitles(true)[ FD ]
Line_40 $$ while ((len = a.read(buf)) > 0) -->Line_41 $$ out.write(buf, 0, len)[ FD ]
