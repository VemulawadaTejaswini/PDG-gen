Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void runTask(HashMap pjobParms) throws Exception [ CD ]
Line_2 $$ public void runTask(HashMap pjobParms) throws Exception -->Line_3 $$ FTPClient lftpClient = null[ CD ]
Line_2 $$ public void runTask(HashMap pjobParms) throws Exception -->Line_4 $$ FileOutputStream lfosTargetFile = null[ CD ]
Line_2 $$ public void runTask(HashMap pjobParms) throws Exception -->Line_5 $$ JBJFPluginDefinition lpluginCipher = null[ CD ]
Line_2 $$ public void runTask(HashMap pjobParms) throws Exception -->Line_6 $$ IJBJFPluginCipher theCipher = null[ CD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_10 $$ lxmlFTP = getFTPDefinition()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_10 $$ lxmlFTP = getFTPDefinition()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_10 $$ lxmlFTP = getFTPDefinition()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_10 $$ lxmlFTP = getFTPDefinition()[ CD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_11 $$ this.mstrSourceDirectory = lxmlFTP.getSourceDirectory()[ CD ]
Line_11 $$ this.mstrSourceDirectory = lxmlFTP.getSourceDirectory()-->Line_11 $$ this.mstrSourceDirectory = lxmlFTP.getSourceDirectory()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_11 $$ this.mstrSourceDirectory = lxmlFTP.getSourceDirectory()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_11 $$ this.mstrSourceDirectory = lxmlFTP.getSourceDirectory()[ FD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_12 $$ this.mstrTargetDirectory = lxmlFTP.getTargetDirectory()[ CD ]
Line_12 $$ this.mstrTargetDirectory = lxmlFTP.getTargetDirectory()-->Line_12 $$ this.mstrTargetDirectory = lxmlFTP.getTargetDirectory()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_12 $$ this.mstrTargetDirectory = lxmlFTP.getTargetDirectory()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_12 $$ this.mstrTargetDirectory = lxmlFTP.getTargetDirectory()[ FD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_13 $$ this.mstrFilename = lxmlFTP.getFilename()[ CD ]
Line_13 $$ this.mstrFilename = lxmlFTP.getFilename()-->Line_13 $$ this.mstrFilename = lxmlFTP.getFilename()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_13 $$ this.mstrFilename = lxmlFTP.getFilename()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_13 $$ this.mstrFilename = lxmlFTP.getFilename()[ FD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_14 $$ this.mstrRemoteServer = lxmlFTP.getServer()[ CD ]
Line_14 $$ this.mstrRemoteServer = lxmlFTP.getServer()-->Line_14 $$ this.mstrRemoteServer = lxmlFTP.getServer()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_14 $$ this.mstrRemoteServer = lxmlFTP.getServer()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_14 $$ this.mstrRemoteServer = lxmlFTP.getServer()[ FD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_15 $$ if (getResources().containsKey("plugin-cipher")) [ CD ]
Line_15 $$ if (getResources().containsKey("plugin-cipher")) -->Line_15 $$ if (getResources().containsKey("plugin-cipher")) [ CD ]
Line_15 $$ if (getResources().containsKey("plugin-cipher")) -->Line_16 $$ lpluginCipher = (JBJFPluginDefinition) getResources().get("plugin-cipher")[ CD ]
Line_5 $$ JBJFPluginDefinition lpluginCipher = null-->Line_16 $$ lpluginCipher = (JBJFPluginDefinition) getResources().get("plugin-cipher")[ FD ]
Line_16 $$ lpluginCipher = (JBJFPluginDefinition) getResources().get("plugin-cipher")-->Line_16 $$ lpluginCipher = (JBJFPluginDefinition) getResources().get("plugin-cipher")[ FD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_18 $$ if (lpluginCipher != null) [ CD ]
Line_5 $$ JBJFPluginDefinition lpluginCipher = null-->Line_18 $$ if (lpluginCipher != null) [ FD ]
Line_16 $$ lpluginCipher = (JBJFPluginDefinition) getResources().get("plugin-cipher")-->Line_18 $$ if (lpluginCipher != null) [ FD ]
Line_18 $$ if (lpluginCipher != null) -->Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())[ CD ]
Line_6 $$ IJBJFPluginCipher theCipher = null-->Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())[ FD ]
Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())-->Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())[ FD ]
Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())-->Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())[ CD ]
Line_5 $$ JBJFPluginDefinition lpluginCipher = null-->Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())[ FD ]
Line_16 $$ lpluginCipher = (JBJFPluginDefinition) getResources().get("plugin-cipher")-->Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())[ FD ]
Line_9 $$ if (getFTPDefinition() != null) -->Line_21 $$ if (theCipher != null) [ CD ]
Line_6 $$ IJBJFPluginCipher theCipher = null-->Line_21 $$ if (theCipher != null) [ FD ]
Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())-->Line_21 $$ if (theCipher != null) [ FD ]
Line_21 $$ if (theCipher != null) -->Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())[ CD ]
Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())-->Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())[ CD ]
Line_6 $$ IJBJFPluginCipher theCipher = null-->Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())[ FD ]
Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())-->Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())[ FD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_22 $$ this.mstrServerUsr = theCipher.decryptString(lxmlFTP.getUser())[ FD ]
Line_21 $$ if (theCipher != null) -->Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())[ CD ]
Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())-->Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())[ CD ]
Line_6 $$ IJBJFPluginCipher theCipher = null-->Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())[ FD ]
Line_19 $$ theCipher = getTaskPlugins().getCipherPlugin(lpluginCipher.getPluginId())-->Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())[ FD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_23 $$ this.mstrServerPwd = theCipher.decryptString(lxmlFTP.getPass())[ FD ]
Line_21 $$ if (theCipher != null) -->Line_25 $$ this.mstrServerUsr = lxmlFTP.getUser()[ CD ]
Line_25 $$ this.mstrServerUsr = lxmlFTP.getUser()-->Line_25 $$ this.mstrServerUsr = lxmlFTP.getUser()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_25 $$ this.mstrServerUsr = lxmlFTP.getUser()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_25 $$ this.mstrServerUsr = lxmlFTP.getUser()[ FD ]
Line_21 $$ if (theCipher != null) -->Line_26 $$ this.mstrServerPwd = lxmlFTP.getPass()[ CD ]
Line_26 $$ this.mstrServerPwd = lxmlFTP.getPass()-->Line_26 $$ this.mstrServerPwd = lxmlFTP.getPass()[ CD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_26 $$ this.mstrServerPwd = lxmlFTP.getPass()[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_26 $$ this.mstrServerPwd = lxmlFTP.getPass()[ FD ]
Line_4 $$ FileOutputStream lfosTargetFile = null-->Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)[ FD ]
Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)-->Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)[ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_32 $$ lftpClient = new FTPClient()[ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_32 $$ lftpClient = new FTPClient()[ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_33 $$ lftpClient.connect(mstrRemoteServer)[ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_33 $$ lftpClient.connect(mstrRemoteServer)[ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_34 $$ lftpClient.setFileType(lxmlFTP.getFileTransferType())[ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_34 $$ lftpClient.setFileType(lxmlFTP.getFileTransferType())[ FD ]
Line_8 $$ JBJFFTPDefinition lxmlFTP = null-->Line_34 $$ lftpClient.setFileType(lxmlFTP.getFileTransferType())[ FD ]
Line_10 $$ lxmlFTP = getFTPDefinition()-->Line_34 $$ lftpClient.setFileType(lxmlFTP.getFileTransferType())[ FD ]
Line_35 $$ if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) -->Line_35 $$ if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) [ CD ]
Line_35 $$ if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) -->Line_35 $$ if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) [ CD ]
Line_3 $$ FTPClient lftpClient = null-->Line_35 $$ if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) [ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_35 $$ if (!FTPReply.isPositiveCompletion(lftpClient.getReplyCode())) [ FD ]
Line_38 $$ if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) -->Line_38 $$ if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) [ CD ]
Line_38 $$ if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) -->Line_38 $$ if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) [ CD ]
Line_3 $$ FTPClient lftpClient = null-->Line_38 $$ if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) [ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_38 $$ if (!lftpClient.login(mstrServerUsr, mstrServerPwd)) [ FD ]
Line_41 $$ if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) -->Line_41 $$ if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) [ CD ]
Line_41 $$ if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) -->Line_41 $$ if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) [ CD ]
Line_3 $$ FTPClient lftpClient = null-->Line_41 $$ if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) [ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_41 $$ if (!lftpClient.changeWorkingDirectory(mstrSourceDirectory)) [ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_44 $$ lftpClient.enterLocalPassiveMode()[ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_44 $$ lftpClient.enterLocalPassiveMode()[ FD ]
Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) -->Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) [ CD ]
Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) -->Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) [ CD ]
Line_3 $$ FTPClient lftpClient = null-->Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) [ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) [ FD ]
Line_4 $$ FileOutputStream lfosTargetFile = null-->Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) [ FD ]
Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)-->Line_45 $$ if (!lftpClient.retrieveFile(mstrFilename, lfosTargetFile)) [ FD ]
Line_4 $$ FileOutputStream lfosTargetFile = null-->Line_48 $$ lfosTargetFile.close()[ FD ]
Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)-->Line_48 $$ lfosTargetFile.close()[ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_49 $$ lftpClient.logout()[ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_49 $$ lftpClient.logout()[ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_53 $$ if (lftpClient != null && lftpClient.isConnected()) [ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_53 $$ if (lftpClient != null && lftpClient.isConnected()) [ FD ]
Line_3 $$ FTPClient lftpClient = null-->Line_55 $$ lftpClient.disconnect()[ FD ]
Line_32 $$ lftpClient = new FTPClient()-->Line_55 $$ lftpClient.disconnect()[ FD ]
Line_4 $$ FileOutputStream lfosTargetFile = null-->Line_59 $$ if (lfosTargetFile != null) [ FD ]
Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)-->Line_59 $$ if (lfosTargetFile != null) [ FD ]
Line_4 $$ FileOutputStream lfosTargetFile = null-->Line_61 $$ lfosTargetFile.close()[ FD ]
Line_31 $$ lfosTargetFile = new FileOutputStream(mstrTargetDirectory + File.separator + mstrFilename)-->Line_61 $$ lfosTargetFile.close()[ FD ]
