Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) [ CD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_3 $$ String newKeywords = keywords[ CD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_4 $$ if (keywords == null || keywords.trim().length() == 0) [ CD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_4 $$ if (keywords == null || keywords.trim().length() == 0) [ FD ]
Line_4 $$ if (keywords == null || keywords.trim().length() == 0) -->Line_5 $$ newKeywords = TemplateService.NO_KEYWORDS[ CD ]
Line_3 $$ String newKeywords = keywords-->Line_5 $$ newKeywords = TemplateService.NO_KEYWORDS[ FD ]
Line_5 $$ newKeywords = TemplateService.NO_KEYWORDS-->Line_5 $$ newKeywords = TemplateService.NO_KEYWORDS[ FD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_7 $$ List<Template> templates = new ArrayList<Template>()[ CD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_8 $$ String restURL = configuration.getBeehiveRESTRootUrl() + "templates/keywords/" + newKeywords + "/page/" + page[ CD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_9 $$ HttpGet httpGet = new HttpGet(restURL)[ CD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_10 $$ httpGet.setHeader("Accept", "application/json")[ CD ]
Line_9 $$ HttpGet httpGet = new HttpGet(restURL)-->Line_10 $$ httpGet.setHeader("Accept", "application/json")[ FD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_11 $$ this.addAuthentication(httpGet)[ CD ]
Line_9 $$ HttpGet httpGet = new HttpGet(restURL)-->Line_11 $$ this.addAuthentication(httpGet)[ FD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_12 $$ HttpClient httpClient = new DefaultHttpClient()[ CD ]
Line_14 $$ HttpResponse response = httpClient.execute(httpGet)-->Line_14 $$ HttpResponse response = httpClient.execute(httpGet)[ CD ]
Line_12 $$ HttpClient httpClient = new DefaultHttpClient()-->Line_14 $$ HttpResponse response = httpClient.execute(httpGet)[ FD ]
Line_9 $$ HttpGet httpGet = new HttpGet(restURL)-->Line_14 $$ HttpResponse response = httpClient.execute(httpGet)[ FD ]
Line_14 $$ HttpResponse response = httpClient.execute(httpGet)-->Line_15 $$ if (response.getStatusLine().getStatusCode() != HttpServletResponse.SC_OK) [ FD ]
Line_15 $$ if (response.getStatusLine().getStatusCode() != HttpServletResponse.SC_OK) -->Line_16 $$ if (response.getStatusLine().getStatusCode() == HttpServletResponse.SC_UNAUTHORIZED) [ CD ]
Line_14 $$ HttpResponse response = httpClient.execute(httpGet)-->Line_16 $$ if (response.getStatusLine().getStatusCode() == HttpServletResponse.SC_UNAUTHORIZED) [ FD ]
Line_14 $$ HttpResponse response = httpClient.execute(httpGet)-->Line_21 $$ InputStreamReader reader = new InputStreamReader(response.getEntity().getContent())[ FD ]
Line_25 $$ while ((line = buffReader.readLine()) != null) -->Line_25 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_24 $$ String line = ""-->Line_25 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_25 $$ while ((line = buffReader.readLine()) != null) -->Line_25 $$ while ((line = buffReader.readLine()) != null) [ CD ]
Line_22 $$ BufferedReader buffReader = new BufferedReader(reader)-->Line_25 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_25 $$ while ((line = buffReader.readLine()) != null) -->Line_26 $$ sb.append(line)[ CD ]
Line_23 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append(line)[ FD ]
Line_25 $$ while ((line = buffReader.readLine()) != null) -->Line_26 $$ sb.append(line)[ FD ]
Line_24 $$ String line = ""-->Line_26 $$ sb.append(line)[ FD ]
Line_25 $$ while ((line = buffReader.readLine()) != null) -->Line_27 $$ sb.append("\n")[ CD ]
Line_23 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ sb.append("\n")[ FD ]
Line_29 $$ String result = sb.toString()-->Line_29 $$ String result = sb.toString()[ CD ]
Line_23 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ String result = sb.toString()[ FD ]
Line_30 $$ TemplateList templateList = buildTemplateListFromJson(result)-->Line_30 $$ TemplateList templateList = buildTemplateListFromJson(result)[ CD ]
Line_29 $$ String result = sb.toString()-->Line_30 $$ TemplateList templateList = buildTemplateListFromJson(result)[ FD ]
Line_31 $$ List<TemplateDTO> dtoes = templateList.getTemplates()-->Line_31 $$ List<TemplateDTO> dtoes = templateList.getTemplates()[ CD ]
Line_30 $$ TemplateList templateList = buildTemplateListFromJson(result)-->Line_31 $$ List<TemplateDTO> dtoes = templateList.getTemplates()[ FD ]
Line_7 $$ List<Template> templates = new ArrayList<Template>()-->Line_33 $$ templates.add(dto.toTemplate())[ FD ]
Line_32 $$ for (TemplateDTO dto : dtoes) -->Line_33 $$ templates.add(dto.toTemplate())[ FD ]
Line_2 $$ public List<Template> getTemplatesByKeywordsAndPage(String keywords, int page) -->Line_38 $$ return templates[ CD ]
Line_25 $$ while ((line = buffReader.readLine()) != null) -->Line_26 $$ sb.append(line)[ FD ]
