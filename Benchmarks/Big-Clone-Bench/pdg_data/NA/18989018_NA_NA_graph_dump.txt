Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException [ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_3 $$ IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot()[ CD ]
Line_3 $$ IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot()-->Line_3 $$ IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot()[ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_4 $$ IFileFormat format = null[ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_5 $$ Object source = null[ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_6 $$ InputStream in = null[ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_9 $$ if (input instanceof IStorageEditorInput) [ FD ]
Line_9 $$ if (input instanceof IStorageEditorInput) -->Line_10 $$ IStorage s = ((IStorageEditorInput) input).getStorage()[ CD ]
Line_10 $$ IStorage s = ((IStorageEditorInput) input).getStorage()-->Line_10 $$ IStorage s = ((IStorageEditorInput) input).getStorage()[ CD ]
Line_9 $$ if (input instanceof IStorageEditorInput) -->Line_11 $$ in = s.getContents()[ CD ]
Line_6 $$ InputStream in = null-->Line_11 $$ in = s.getContents()[ FD ]
Line_11 $$ in = s.getContents()-->Line_11 $$ in = s.getContents()[ FD ]
Line_11 $$ in = s.getContents()-->Line_11 $$ in = s.getContents()[ CD ]
Line_10 $$ IStorage s = ((IStorageEditorInput) input).getStorage()-->Line_11 $$ in = s.getContents()[ FD ]
Line_9 $$ if (input instanceof IStorageEditorInput) -->Line_12 $$ if (s instanceof IFile) [ CD ]
Line_10 $$ IStorage s = ((IStorageEditorInput) input).getStorage()-->Line_12 $$ if (s instanceof IFile) [ FD ]
Line_12 $$ if (s instanceof IFile) -->Line_13 $$ IFile file = (IFile) s[ CD ]
Line_12 $$ if (s instanceof IFile) -->Line_14 $$ path = file.getRawLocation()[ CD ]
Line_8 $$ IPath path-->Line_14 $$ path = file.getRawLocation()[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_14 $$ path = file.getRawLocation()[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_14 $$ path = file.getRawLocation()[ CD ]
Line_13 $$ IFile file = (IFile) s-->Line_14 $$ path = file.getRawLocation()[ FD ]
Line_12 $$ if (s instanceof IFile) -->Line_15 $$ if (root.exists(path)) [ CD ]
Line_3 $$ IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot()-->Line_15 $$ if (root.exists(path)) [ FD ]
Line_8 $$ IPath path-->Line_15 $$ if (root.exists(path)) [ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_15 $$ if (root.exists(path)) [ FD ]
Line_15 $$ if (root.exists(path)) -->Line_15 $$ if (root.exists(path)) [ CD ]
Line_3 $$ IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot()-->Line_15 $$ if (root.exists(path)) [ FD ]
Line_8 $$ IPath path-->Line_15 $$ if (root.exists(path)) [ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_15 $$ if (root.exists(path)) [ FD ]
Line_15 $$ if (root.exists(path)) -->Line_16 $$ path = root.getLocation().append(path)[ CD ]
Line_8 $$ IPath path-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_16 $$ path = root.getLocation().append(path)-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_16 $$ path = root.getLocation().append(path)-->Line_16 $$ path = root.getLocation().append(path)[ CD ]
Line_8 $$ IPath path-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_16 $$ path = root.getLocation().append(path)-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_3 $$ IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot()-->Line_16 $$ path = root.getLocation().append(path)[ FD ]
Line_12 $$ if (s instanceof IFile) -->Line_18 $$ source = path.toFile()[ CD ]
Line_5 $$ Object source = null-->Line_18 $$ source = path.toFile()[ FD ]
Line_18 $$ source = path.toFile()-->Line_18 $$ source = path.toFile()[ FD ]
Line_18 $$ source = path.toFile()-->Line_18 $$ source = path.toFile()[ CD ]
Line_8 $$ IPath path-->Line_18 $$ source = path.toFile()[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_18 $$ source = path.toFile()[ FD ]
Line_16 $$ path = root.getLocation().append(path)-->Line_18 $$ source = path.toFile()[ FD ]
Line_9 $$ if (input instanceof IStorageEditorInput) -->Line_20 $$ if (input instanceof IPathEditorInput) [ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_20 $$ if (input instanceof IPathEditorInput) [ FD ]
Line_20 $$ if (input instanceof IPathEditorInput) -->Line_21 $$ path = ((IPathEditorInput) input).getPath()[ CD ]
Line_8 $$ IPath path-->Line_21 $$ path = ((IPathEditorInput) input).getPath()[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_21 $$ path = ((IPathEditorInput) input).getPath()[ FD ]
Line_16 $$ path = root.getLocation().append(path)-->Line_21 $$ path = ((IPathEditorInput) input).getPath()[ FD ]
Line_21 $$ path = ((IPathEditorInput) input).getPath()-->Line_21 $$ path = ((IPathEditorInput) input).getPath()[ FD ]
Line_21 $$ path = ((IPathEditorInput) input).getPath()-->Line_21 $$ path = ((IPathEditorInput) input).getPath()[ CD ]
Line_20 $$ if (input instanceof IPathEditorInput) -->Line_22 $$ source = path.toFile()[ CD ]
Line_5 $$ Object source = null-->Line_22 $$ source = path.toFile()[ FD ]
Line_18 $$ source = path.toFile()-->Line_22 $$ source = path.toFile()[ FD ]
Line_22 $$ source = path.toFile()-->Line_22 $$ source = path.toFile()[ FD ]
Line_22 $$ source = path.toFile()-->Line_22 $$ source = path.toFile()[ CD ]
Line_8 $$ IPath path-->Line_22 $$ source = path.toFile()[ FD ]
Line_14 $$ path = file.getRawLocation()-->Line_22 $$ source = path.toFile()[ FD ]
Line_16 $$ path = root.getLocation().append(path)-->Line_22 $$ source = path.toFile()[ FD ]
Line_21 $$ path = ((IPathEditorInput) input).getPath()-->Line_22 $$ source = path.toFile()[ FD ]
Line_20 $$ if (input instanceof IPathEditorInput) -->Line_23 $$ if (input instanceof IURIEditorInput) [ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_23 $$ if (input instanceof IURIEditorInput) [ FD ]
Line_23 $$ if (input instanceof IURIEditorInput) -->Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()[ CD ]
Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()-->Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()[ CD ]
Line_23 $$ if (input instanceof IURIEditorInput) -->Line_25 $$ if (URIUtil.isFileURI(uri)) [ CD ]
Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()-->Line_25 $$ if (URIUtil.isFileURI(uri)) [ FD ]
Line_25 $$ if (URIUtil.isFileURI(uri)) -->Line_25 $$ if (URIUtil.isFileURI(uri)) [ CD ]
Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()-->Line_25 $$ if (URIUtil.isFileURI(uri)) [ FD ]
Line_25 $$ if (URIUtil.isFileURI(uri)) -->Line_26 $$ source = URIUtil.toFile(uri)[ CD ]
Line_5 $$ Object source = null-->Line_26 $$ source = URIUtil.toFile(uri)[ FD ]
Line_18 $$ source = path.toFile()-->Line_26 $$ source = URIUtil.toFile(uri)[ FD ]
Line_22 $$ source = path.toFile()-->Line_26 $$ source = URIUtil.toFile(uri)[ FD ]
Line_26 $$ source = URIUtil.toFile(uri)-->Line_26 $$ source = URIUtil.toFile(uri)[ FD ]
Line_26 $$ source = URIUtil.toFile(uri)-->Line_26 $$ source = URIUtil.toFile(uri)[ CD ]
Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()-->Line_26 $$ source = URIUtil.toFile(uri)[ FD ]
Line_25 $$ if (URIUtil.isFileURI(uri)) -->Line_28 $$ URL url = URIUtil.toURL(uri)[ CD ]
Line_28 $$ URL url = URIUtil.toURL(uri)-->Line_28 $$ URL url = URIUtil.toURL(uri)[ CD ]
Line_24 $$ URI uri = ((IURIEditorInput) input).getURI()-->Line_28 $$ URL url = URIUtil.toURL(uri)[ FD ]
Line_25 $$ if (URIUtil.isFileURI(uri)) -->Line_29 $$ in = url.openStream()[ CD ]
Line_6 $$ InputStream in = null-->Line_29 $$ in = url.openStream()[ FD ]
Line_11 $$ in = s.getContents()-->Line_29 $$ in = url.openStream()[ FD ]
Line_29 $$ in = url.openStream()-->Line_29 $$ in = url.openStream()[ FD ]
Line_29 $$ in = url.openStream()-->Line_29 $$ in = url.openStream()[ CD ]
Line_28 $$ URL url = URIUtil.toURL(uri)-->Line_29 $$ in = url.openStream()[ FD ]
Line_5 $$ Object source = null-->Line_32 $$ if (source == null) [ FD ]
Line_18 $$ source = path.toFile()-->Line_32 $$ if (source == null) [ FD ]
Line_22 $$ source = path.toFile()-->Line_32 $$ if (source == null) [ FD ]
Line_26 $$ source = URIUtil.toFile(uri)-->Line_32 $$ if (source == null) [ FD ]
Line_32 $$ if (source == null) -->Line_33 $$ if (!in.markSupported()) [ CD ]
Line_33 $$ if (!in.markSupported()) -->Line_33 $$ if (!in.markSupported()) [ CD ]
Line_33 $$ if (!in.markSupported()) -->Line_33 $$ if (!in.markSupported()) [ CD ]
Line_6 $$ InputStream in = null-->Line_33 $$ if (!in.markSupported()) [ FD ]
Line_11 $$ in = s.getContents()-->Line_33 $$ if (!in.markSupported()) [ FD ]
Line_29 $$ in = url.openStream()-->Line_33 $$ if (!in.markSupported()) [ FD ]
Line_33 $$ if (!in.markSupported()) -->Line_34 $$ in = new BufferedInputStream(in)[ CD ]
Line_6 $$ InputStream in = null-->Line_34 $$ in = new BufferedInputStream(in)[ FD ]
Line_11 $$ in = s.getContents()-->Line_34 $$ in = new BufferedInputStream(in)[ FD ]
Line_29 $$ in = url.openStream()-->Line_34 $$ in = new BufferedInputStream(in)[ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_34 $$ in = new BufferedInputStream(in)[ FD ]
Line_32 $$ if (source == null) -->Line_36 $$ in.mark(10)[ CD ]
Line_6 $$ InputStream in = null-->Line_36 $$ in.mark(10)[ FD ]
Line_11 $$ in = s.getContents()-->Line_36 $$ in.mark(10)[ FD ]
Line_29 $$ in = url.openStream()-->Line_36 $$ in.mark(10)[ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_36 $$ in.mark(10)[ FD ]
Line_32 $$ if (source == null) -->Line_37 $$ source = in[ CD ]
Line_5 $$ Object source = null-->Line_37 $$ source = in[ FD ]
Line_18 $$ source = path.toFile()-->Line_37 $$ source = in[ FD ]
Line_22 $$ source = path.toFile()-->Line_37 $$ source = in[ FD ]
Line_26 $$ source = URIUtil.toFile(uri)-->Line_37 $$ source = in[ FD ]
Line_37 $$ source = in-->Line_37 $$ source = in[ FD ]
Line_6 $$ InputStream in = null-->Line_37 $$ source = in[ FD ]
Line_11 $$ in = s.getContents()-->Line_37 $$ source = in[ FD ]
Line_29 $$ in = url.openStream()-->Line_37 $$ source = in[ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_37 $$ source = in[ FD ]
Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] -->Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] [ CD ]
Line_6 $$ InputStream in = null-->Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] [ FD ]
Line_11 $$ in = s.getContents()-->Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] [ FD ]
Line_29 $$ in = url.openStream()-->Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] [ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] [ FD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] [ FD ]
Line_6 $$ InputStream in = null-->Line_40 $$ if (in != null) [ FD ]
Line_11 $$ in = s.getContents()-->Line_40 $$ if (in != null) [ FD ]
Line_29 $$ in = url.openStream()-->Line_40 $$ if (in != null) [ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_40 $$ if (in != null) [ FD ]
Line_40 $$ if (in != null) -->Line_41 $$ in.reset()[ CD ]
Line_6 $$ InputStream in = null-->Line_41 $$ in.reset()[ FD ]
Line_11 $$ in = s.getContents()-->Line_41 $$ in.reset()[ FD ]
Line_29 $$ in = url.openStream()-->Line_41 $$ in.reset()[ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_41 $$ in.reset()[ FD ]
Line_39 $$ IContentDescription cd = Platform.getContentTypeManager().getDescriptionFor(in, input.getName(), new QualifiedName[] -->Line_43 $$ Collection<?> valid = (Collection<?>) cd.getProperty(ImageCore.VALID_FORMATS)[ FD ]
Line_43 $$ Collection<?> valid = (Collection<?>) cd.getProperty(ImageCore.VALID_FORMATS)-->Line_44 $$ if (valid.isEmpty())[ FD ]
Line_44 $$ if (valid.isEmpty())-->Line_44 $$ if (valid.isEmpty())[ CD ]
Line_43 $$ Collection<?> valid = (Collection<?>) cd.getProperty(ImageCore.VALID_FORMATS)-->Line_44 $$ if (valid.isEmpty())[ FD ]
Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)-->Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)[ CD ]
Line_5 $$ Object source = null-->Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)[ FD ]
Line_18 $$ source = path.toFile()-->Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)[ FD ]
Line_22 $$ source = path.toFile()-->Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)[ FD ]
Line_26 $$ source = URIUtil.toFile(uri)-->Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)[ FD ]
Line_37 $$ source = in-->Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)[ FD ]
Line_4 $$ IFileFormat format = null-->Line_46 $$ format = (IFileFormat) valid.iterator().next()[ FD ]
Line_46 $$ format = (IFileFormat) valid.iterator().next()-->Line_46 $$ format = (IFileFormat) valid.iterator().next()[ FD ]
Line_43 $$ Collection<?> valid = (Collection<?>) cd.getProperty(ImageCore.VALID_FORMATS)-->Line_46 $$ format = (IFileFormat) valid.iterator().next()[ FD ]
Line_47 $$ IDocument document = format.decode(stream, monitor)-->Line_47 $$ IDocument document = format.decode(stream, monitor)[ CD ]
Line_4 $$ IFileFormat format = null-->Line_47 $$ IDocument document = format.decode(stream, monitor)[ FD ]
Line_46 $$ format = (IFileFormat) valid.iterator().next()-->Line_47 $$ IDocument document = format.decode(stream, monitor)[ FD ]
Line_45 $$ ImageInputStream stream = ImageIO.createImageInputStream(source)-->Line_47 $$ IDocument document = format.decode(stream, monitor)[ FD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_47 $$ IDocument document = format.decode(stream, monitor)[ FD ]
Line_47 $$ IDocument document = format.decode(stream, monitor)-->Line_48 $$ setDocument(document)[ FD ]
Line_6 $$ InputStream in = null-->Line_53 $$ if (in != null) [ FD ]
Line_11 $$ in = s.getContents()-->Line_53 $$ if (in != null) [ FD ]
Line_29 $$ in = url.openStream()-->Line_53 $$ if (in != null) [ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_53 $$ if (in != null) [ FD ]
Line_6 $$ InputStream in = null-->Line_55 $$ in.close()[ FD ]
Line_11 $$ in = s.getContents()-->Line_55 $$ in.close()[ FD ]
Line_29 $$ in = url.openStream()-->Line_55 $$ in.close()[ FD ]
Line_34 $$ in = new BufferedInputStream(in)-->Line_55 $$ in.close()[ FD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_60 $$ super.setInput(input)[ CD ]
Line_2 $$ protected void doSetInput(IEditorInput input, IProgressMonitor monitor) throws CoreException -->Line_60 $$ super.setInput(input)[ FD ]
