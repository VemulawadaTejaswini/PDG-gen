Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void updateFile(File file) throws FileNotFoundException, IOException [ CD ]
Line_2 $$ private void updateFile(File file) throws FileNotFoundException, IOException -->Line_3 $$ File destFile = new File(file.getPath().replace(URL_UNZIPPED_PREFIX + latestVersion, ""))[ CD ]
Line_2 $$ private void updateFile(File file) throws FileNotFoundException, IOException -->Line_3 $$ File destFile = new File(file.getPath().replace(URL_UNZIPPED_PREFIX + latestVersion, ""))[ FD ]
Line_2 $$ private void updateFile(File file) throws FileNotFoundException, IOException -->Line_4 $$ FileChannel in = null[ CD ]
Line_2 $$ private void updateFile(File file) throws FileNotFoundException, IOException -->Line_5 $$ FileChannel out = null[ CD ]
Line_7 $$ if (!destFile.exists()) -->Line_7 $$ if (!destFile.exists()) [ CD ]
Line_7 $$ if (!destFile.exists()) -->Line_7 $$ if (!destFile.exists()) [ CD ]
Line_3 $$ File destFile = new File(file.getPath().replace(URL_UNZIPPED_PREFIX + latestVersion, ""))-->Line_7 $$ if (!destFile.exists()) [ FD ]
Line_7 $$ if (!destFile.exists()) -->Line_8 $$ destFile.getParentFile().mkdirs()[ CD ]
Line_3 $$ File destFile = new File(file.getPath().replace(URL_UNZIPPED_PREFIX + latestVersion, ""))-->Line_8 $$ destFile.getParentFile().mkdirs()[ FD ]
Line_7 $$ if (!destFile.exists()) -->Line_9 $$ destFile.createNewFile()[ CD ]
Line_3 $$ File destFile = new File(file.getPath().replace(URL_UNZIPPED_PREFIX + latestVersion, ""))-->Line_9 $$ destFile.createNewFile()[ FD ]
Line_4 $$ FileChannel in = null-->Line_11 $$ in = new FileInputStream(file).getChannel()[ FD ]
Line_11 $$ in = new FileInputStream(file).getChannel()-->Line_11 $$ in = new FileInputStream(file).getChannel()[ FD ]
Line_11 $$ in = new FileInputStream(file).getChannel()-->Line_11 $$ in = new FileInputStream(file).getChannel()[ CD ]
Line_5 $$ FileChannel out = null-->Line_12 $$ out = new FileOutputStream(destFile).getChannel()[ FD ]
Line_12 $$ out = new FileOutputStream(destFile).getChannel()-->Line_12 $$ out = new FileOutputStream(destFile).getChannel()[ FD ]
Line_12 $$ out = new FileOutputStream(destFile).getChannel()-->Line_12 $$ out = new FileOutputStream(destFile).getChannel()[ CD ]
Line_4 $$ FileChannel in = null-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_11 $$ in = new FileInputStream(file).getChannel()-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_5 $$ FileChannel out = null-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_12 $$ out = new FileOutputStream(destFile).getChannel()-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_4 $$ FileChannel in = null-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_11 $$ in = new FileInputStream(file).getChannel()-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_5 $$ FileChannel out = null-->Line_15 $$ if (out != null)[ FD ]
Line_12 $$ out = new FileOutputStream(destFile).getChannel()-->Line_15 $$ if (out != null)[ FD ]
Line_15 $$ if (out != null)-->Line_15 $$ out.close()[ CD ]
Line_5 $$ FileChannel out = null-->Line_15 $$ out.close()[ FD ]
Line_12 $$ out = new FileOutputStream(destFile).getChannel()-->Line_15 $$ out.close()[ FD ]
Line_4 $$ FileChannel in = null-->Line_16 $$ if (in != null)[ FD ]
Line_11 $$ in = new FileInputStream(file).getChannel()-->Line_16 $$ if (in != null)[ FD ]
Line_16 $$ if (in != null)-->Line_16 $$ in.close()[ CD ]
Line_4 $$ FileChannel in = null-->Line_16 $$ in.close()[ FD ]
Line_11 $$ in = new FileInputStream(file).getChannel()-->Line_16 $$ in.close()[ FD ]
