Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException [ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_3 $$ CryptoClient c = getNode().getCryptoClientByID(PiggybackCrypto)[ CD ]
Line_3 $$ CryptoClient c = getNode().getCryptoClientByID(PiggybackCrypto)-->Line_3 $$ CryptoClient c = getNode().getCryptoClientByID(PiggybackCrypto)[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_4 $$ File tmpf = getNode().getTempFM().createNewFile("encodereturn", "download")[ CD ]
Line_4 $$ File tmpf = getNode().getTempFM().createNewFile("encodereturn", "download")-->Line_4 $$ File tmpf = getNode().getTempFM().createNewFile("encodereturn", "download")[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_5 $$ ChannelWriter cw = new ChannelWriter(tmpf)[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_6 $$ cw.putLongFile(DownloadData)[ CD ]
Line_5 $$ ChannelWriter cw = new ChannelWriter(tmpf)-->Line_6 $$ cw.putLongFile(DownloadData)[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_7 $$ cw.close()[ CD ]
Line_5 $$ ChannelWriter cw = new ChannelWriter(tmpf)-->Line_7 $$ cw.close()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)[ CD ]
Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)-->Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)[ CD ]
Line_3 $$ CryptoClient c = getNode().getCryptoClientByID(PiggybackCrypto)-->Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)[ FD ]
Line_4 $$ File tmpf = getNode().getTempFM().createNewFile("encodereturn", "download")-->Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_9 $$ File pigdata = PigData.EncodeData(encdata)[ CD ]
Line_9 $$ File pigdata = PigData.EncodeData(encdata)-->Line_9 $$ File pigdata = PigData.EncodeData(encdata)[ CD ]
Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)-->Line_9 $$ File pigdata = PigData.EncodeData(encdata)[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_10 $$ File pigroute = ReturnPigRoute.EncodeData(ReturnRouteFile)[ CD ]
Line_10 $$ File pigroute = ReturnPigRoute.EncodeData(ReturnRouteFile)-->Line_10 $$ File pigroute = ReturnPigRoute.EncodeData(ReturnRouteFile)[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_11 $$ FileOutputStream fos = new FileOutputStream(pigroute, true)[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_12 $$ FileChannel foc = fos.getChannel()[ CD ]
Line_12 $$ FileChannel foc = fos.getChannel()-->Line_12 $$ FileChannel foc = fos.getChannel()[ CD ]
Line_11 $$ FileOutputStream fos = new FileOutputStream(pigroute, true)-->Line_12 $$ FileChannel foc = fos.getChannel()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_13 $$ FileInputStream fis = new FileInputStream(pigdata)[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_14 $$ FileChannel fic = fis.getChannel()[ CD ]
Line_14 $$ FileChannel fic = fis.getChannel()-->Line_14 $$ FileChannel fic = fis.getChannel()[ CD ]
Line_13 $$ FileInputStream fis = new FileInputStream(pigdata)-->Line_14 $$ FileChannel fic = fis.getChannel()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_15 $$ fic.transferTo(0, fic.size(), foc)[ CD ]
Line_14 $$ FileChannel fic = fis.getChannel()-->Line_15 $$ fic.transferTo(0, fic.size(), foc)[ FD ]
Line_12 $$ FileChannel foc = fos.getChannel()-->Line_15 $$ fic.transferTo(0, fic.size(), foc)[ FD ]
Line_14 $$ FileChannel fic = fis.getChannel()-->Line_15 $$ fic.transferTo(0, fic.size(), foc)[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_16 $$ foc.close()[ CD ]
Line_12 $$ FileChannel foc = fos.getChannel()-->Line_16 $$ foc.close()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_17 $$ fic.close()[ CD ]
Line_14 $$ FileChannel fic = fis.getChannel()-->Line_17 $$ fic.close()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_18 $$ pigdata.delete()[ CD ]
Line_9 $$ File pigdata = PigData.EncodeData(encdata)-->Line_18 $$ pigdata.delete()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_19 $$ ReturnRouteFile.delete()[ CD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_20 $$ encdata.delete()[ CD ]
Line_8 $$ File encdata = c.RawEncode(tmpf, RawKey)-->Line_20 $$ encdata.delete()[ FD ]
Line_2 $$ protected File EncodeReturn() throws EncodeFailedException, IOException -->Line_21 $$ return pigroute[ CD ]
