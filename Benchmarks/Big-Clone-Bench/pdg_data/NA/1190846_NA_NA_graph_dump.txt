Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private HttpURLConnection connect() throws MalformedURLException, IOException [ CD ]
Line_2 $$ private HttpURLConnection connect() throws MalformedURLException, IOException -->Line_3 $$ HttpURLConnection connection = null[ CD ]
Line_2 $$ private HttpURLConnection connect() throws MalformedURLException, IOException -->Line_4 $$ if (repositoryLocation == null) [ CD ]
Line_4 $$ if (repositoryLocation == null) -->Line_5 $$ Utils.debug("RemoteRepository", "repository Location unspecified")[ CD ]
Line_4 $$ if (repositoryLocation == null) -->Line_6 $$ return null[ CD ]
Line_2 $$ private HttpURLConnection connect() throws MalformedURLException, IOException -->Line_8 $$ URL url = new URL(repositoryLocation)[ CD ]
Line_2 $$ private HttpURLConnection connect() throws MalformedURLException, IOException -->Line_9 $$ connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ HttpURLConnection connection = null-->Line_9 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_9 $$ connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_8 $$ URL url = new URL(repositoryLocation)-->Line_9 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private HttpURLConnection connect() throws MalformedURLException, IOException -->Line_10 $$ return connection[ CD ]
