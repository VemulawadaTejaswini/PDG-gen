Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) [ CD ]
Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) -->Line_3 $$ Runnable run = new Runnable() [ CD ]
Line_6 $$ if (sync == SyncType.SyncSpaced || sync == SyncType.Spaced) -->Line_7 $$ Thread.sleep(spaceMillis)[ CD ]
Line_10 $$ long t0 = System.currentTimeMillis()-->Line_10 $$ long t0 = System.currentTimeMillis()[ CD ]
Line_11 $$ InputStream in = url.openStream()-->Line_11 $$ InputStream in = url.openStream()[ CD ]
Line_9 $$ URL url = new URL(surl + "&requestId=" + runnumber)-->Line_11 $$ InputStream in = url.openStream()[ FD ]
Line_11 $$ InputStream in = url.openStream()-->Line_12 $$ transfer(in, new FileOutputStream(new File(outputFolder, "" + runnumber + ".png")))[ FD ]
Line_13 $$ BufferedImage image = ImageIO.read(new File(outputFolder, "" + runnumber + ".png"))-->Line_13 $$ BufferedImage image = ImageIO.read(new File(outputFolder, "" + runnumber + ".png"))[ CD ]
Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) -->Line_14 $$ status.score(runnumber, System.currentTimeMillis() - t0)[ FD ]
Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) -->Line_14 $$ status.score(runnumber, System.currentTimeMillis() - t0)[ FD ]
Line_13 $$ BufferedImage image = ImageIO.read(new File(outputFolder, "" + runnumber + ".png"))-->Line_15 $$ ImageIO.write(image, "png", new FileOutputStream(new File(outputFolder, "" + runnumber + ".png")))[ FD ]
Line_16 $$ if (false) -->Line_17 $$ int whiteCount = 0[ CD ]
Line_16 $$ if (false) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ CD ]
Line_16 $$ if (false) -->Line_16 $$ if (false) [ CD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ CD ]
Line_13 $$ BufferedImage image = ImageIO.read(new File(outputFolder, "" + runnumber + ".png"))-->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ CD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ CD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ CD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ CD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ CD ]
Line_13 $$ BufferedImage image = ImageIO.read(new File(outputFolder, "" + runnumber + ".png"))-->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ CD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ CD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ CD ]
Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0-->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ FD ]
Line_17 $$ int whiteCount = 0-->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ FD ]
Line_13 $$ BufferedImage image = ImageIO.read(new File(outputFolder, "" + runnumber + ".png"))-->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ FD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ FD ]
Line_16 $$ if (false) -->Line_23 $$ System.err.println("##" + runnumber + "#: " + whiteCount)[ CD ]
Line_16 $$ if (false) -->Line_24 $$ if (whiteCount < 227564) [ CD ]
Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0-->Line_24 $$ if (whiteCount < 227564) [ FD ]
Line_17 $$ int whiteCount = 0-->Line_24 $$ if (whiteCount < 227564) [ FD ]
Line_24 $$ if (whiteCount < 227564) -->Line_25 $$ System.err.println("whiteCount fails!!!!")[ CD ]
Line_24 $$ if (whiteCount < 227564) -->Line_26 $$ System.err.println("whiteCount fails!!!!")[ CD ]
Line_24 $$ if (whiteCount < 227564) -->Line_27 $$ System.exit(0)[ CD ]
Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) -->Line_33 $$ status.score(runnumber, -999)[ FD ]
Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) -->Line_33 $$ status.score(runnumber, -999)[ FD ]
Line_2 $$ void loadImage(final int runnumber, final String surl, final StatusCallback status) -->Line_37 $$ if (sync == SyncType.SyncSpaced || sync == SyncType.Sync) [ CD ]
Line_37 $$ if (sync == SyncType.SyncSpaced || sync == SyncType.Sync) -->Line_38 $$ run.run()[ CD ]
Line_3 $$ Runnable run = new Runnable() -->Line_38 $$ run.run()[ FD ]
Line_37 $$ if (sync == SyncType.SyncSpaced || sync == SyncType.Sync) -->Line_40 $$ new Thread(run).start()[ CD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < image.getWidth(); i++) -->Line_18 $$ for (int i = 0; i < image.getWidth(); i++) [ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_19 $$ for (int j = 0; j < image.getHeight(); j++) [ FD ]
Line_19 $$ for (int j = 0; j < image.getHeight(); j++) -->Line_20 $$ whiteCount += image.getRGB(i, j) == -1 ? 1 : 0[ FD ]
