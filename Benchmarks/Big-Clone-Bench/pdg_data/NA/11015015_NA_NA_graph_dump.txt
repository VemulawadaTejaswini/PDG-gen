Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Bits write(Map data) throws IOException [ CD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_3 $$ String pictureurl = (String) data.get("pictureurl")[ CD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_3 $$ String pictureurl = (String) data.get("pictureurl")[ FD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_4 $$ URL url = new URL(pictureurl)[ CD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_5 $$ InputStream is = url.openStream()[ CD ]
Line_5 $$ InputStream is = url.openStream()-->Line_5 $$ InputStream is = url.openStream()[ CD ]
Line_4 $$ URL url = new URL(pictureurl)-->Line_5 $$ InputStream is = url.openStream()[ FD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_6 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_7 $$ int buf = is.read()[ CD ]
Line_7 $$ int buf = is.read()-->Line_7 $$ int buf = is.read()[ CD ]
Line_5 $$ InputStream is = url.openStream()-->Line_7 $$ int buf = is.read()[ FD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_8 $$ while (buf >= 0) [ CD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_2 $$ public Bits write(Map data) throws IOException [ CD ]
Line_7 $$ int buf = is.read()-->Line_8 $$ while (buf >= 0) [ FD ]
Line_8 $$ while (buf >= 0) -->Line_9 $$ baos.write(buf)[ CD ]
Line_6 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_9 $$ baos.write(buf)[ FD ]
Line_7 $$ int buf = is.read()-->Line_9 $$ baos.write(buf)[ FD ]
Line_8 $$ while (buf >= 0) -->Line_10 $$ buf = is.read()[ CD ]
Line_10 $$ buf = is.read()-->Line_10 $$ buf = is.read()[ FD ]
Line_7 $$ int buf = is.read()-->Line_10 $$ buf = is.read()[ FD ]
Line_10 $$ buf = is.read()-->Line_10 $$ buf = is.read()[ CD ]
Line_5 $$ InputStream is = url.openStream()-->Line_10 $$ buf = is.read()[ FD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_12 $$ return BitUtils._concat(BitUtils._bitsUI16(TypeUtils.toLong(data.get("shapeId"))), BitUtils._bytesToBits(baos.toByteArray()))[ CD ]
Line_12 $$ return BitUtils._concat(BitUtils._bitsUI16(TypeUtils.toLong(data.get("shapeId"))), BitUtils._bytesToBits(baos.toByteArray()))-->Line_12 $$ return BitUtils._concat(BitUtils._bitsUI16(TypeUtils.toLong(data.get("shapeId"))), BitUtils._bytesToBits(baos.toByteArray()))[ CD ]
Line_2 $$ public Bits write(Map data) throws IOException -->Line_12 $$ return BitUtils._concat(BitUtils._bitsUI16(TypeUtils.toLong(data.get("shapeId"))), BitUtils._bytesToBits(baos.toByteArray()))[ FD ]
Line_6 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_12 $$ return BitUtils._concat(BitUtils._bitsUI16(TypeUtils.toLong(data.get("shapeId"))), BitUtils._bytesToBits(baos.toByteArray()))[ FD ]
Line_10 $$ buf = is.read()-->Line_8 $$ while (buf >= 0) [ FD ]
Line_10 $$ buf = is.read()-->Line_8 $$ while (buf >= 0) [ FD ]
Line_10 $$ buf = is.read()-->Line_9 $$ baos.write(buf)[ FD ]
