Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File destFile, File src) throws IOException [ CD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_3 $$ File destDir = destFile.getParentFile()[ CD ]
Line_3 $$ File destDir = destFile.getParentFile()-->Line_3 $$ File destDir = destFile.getParentFile()[ CD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_3 $$ File destDir = destFile.getParentFile()[ FD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_4 $$ File tempFile = new File(destFile + "_tmp")[ CD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_5 $$ destDir.mkdirs()[ CD ]
Line_3 $$ File destDir = destFile.getParentFile()-->Line_5 $$ destDir.mkdirs()[ FD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_6 $$ InputStream is = new FileInputStream(src)[ CD ]
Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_11 $$ int len-->Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ CD ]
Line_6 $$ InputStream is = new FileInputStream(src)-->Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_10 $$ byte[] buf = new byte[8192]-->Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ os.write(buf, 0, len)[ CD ]
Line_8 $$ FileOutputStream os = new FileOutputStream(tempFile)-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_10 $$ byte[] buf = new byte[8192]-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_11 $$ int len-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_8 $$ FileOutputStream os = new FileOutputStream(tempFile)-->Line_14 $$ os.close()[ FD ]
Line_6 $$ InputStream is = new FileInputStream(src)-->Line_17 $$ is.close()[ FD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_19 $$ destFile.delete()[ CD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_19 $$ destFile.delete()[ FD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_20 $$ if (!tempFile.renameTo(destFile))[ CD ]
Line_20 $$ if (!tempFile.renameTo(destFile))-->Line_20 $$ if (!tempFile.renameTo(destFile))[ CD ]
Line_20 $$ if (!tempFile.renameTo(destFile))-->Line_20 $$ if (!tempFile.renameTo(destFile))[ CD ]
Line_4 $$ File tempFile = new File(destFile + "_tmp")-->Line_20 $$ if (!tempFile.renameTo(destFile))[ FD ]
Line_2 $$ public static void copyFile(File destFile, File src) throws IOException -->Line_20 $$ if (!tempFile.renameTo(destFile))[ FD ]
Line_12 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ os.write(buf, 0, len)[ FD ]
