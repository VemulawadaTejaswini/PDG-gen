Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException [ CD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_3 $$ MessageDigest md = MessageDigest.getInstance("SHA-1")[ CD ]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("SHA-1")-->Line_3 $$ MessageDigest md = MessageDigest.getInstance("SHA-1")[ CD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_4 $$ byte[] sha1hash = new byte[40][ CD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_5 $$ md.update(text.getBytes("iso-8859-1"), 0, text.length())[ CD ]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("SHA-1")-->Line_5 $$ md.update(text.getBytes("iso-8859-1"), 0, text.length())[ FD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_5 $$ md.update(text.getBytes("iso-8859-1"), 0, text.length())[ FD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_5 $$ md.update(text.getBytes("iso-8859-1"), 0, text.length())[ FD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_6 $$ sha1hash = md.digest()[ CD ]
Line_4 $$ byte[] sha1hash = new byte[40]-->Line_6 $$ sha1hash = md.digest()[ FD ]
Line_6 $$ sha1hash = md.digest()-->Line_6 $$ sha1hash = md.digest()[ FD ]
Line_6 $$ sha1hash = md.digest()-->Line_6 $$ sha1hash = md.digest()[ CD ]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("SHA-1")-->Line_6 $$ sha1hash = md.digest()[ FD ]
Line_2 $$ public static String hash(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_7 $$ return SHA1.convertToHex(sha1hash)[ CD ]
Line_7 $$ return SHA1.convertToHex(sha1hash)-->Line_7 $$ return SHA1.convertToHex(sha1hash)[ CD ]
Line_4 $$ byte[] sha1hash = new byte[40]-->Line_7 $$ return SHA1.convertToHex(sha1hash)[ FD ]
Line_6 $$ sha1hash = md.digest()-->Line_7 $$ return SHA1.convertToHex(sha1hash)[ FD ]
