Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_4 $$ if (LOGGER.isDebugEnabled()) -->Line_4 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_4 $$ if (LOGGER.isDebugEnabled()) -->Line_5 $$ LOGGER.debug("Checking for updates at " + checkUrl)[ CD ]
Line_7 $$ URL url = new URL(checkUrl)-->Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.connect()[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) [ FD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ CD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_12 $$ StringBuffer content = new StringBuffer()[ CD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_13 $$ String s = reader.readLine()[ CD ]
Line_13 $$ String s = reader.readLine()-->Line_13 $$ String s = reader.readLine()[ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_13 $$ String s = reader.readLine()[ FD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_14 $$ while (s != null) [ CD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) [ CD ]
Line_13 $$ String s = reader.readLine()-->Line_14 $$ while (s != null) [ FD ]
Line_14 $$ while (s != null) -->Line_15 $$ content.append(s)[ CD ]
Line_12 $$ StringBuffer content = new StringBuffer()-->Line_15 $$ content.append(s)[ FD ]
Line_13 $$ String s = reader.readLine()-->Line_15 $$ content.append(s)[ FD ]
Line_14 $$ while (s != null) -->Line_16 $$ s = reader.readLine()[ CD ]
Line_16 $$ s = reader.readLine()-->Line_16 $$ s = reader.readLine()[ FD ]
Line_13 $$ String s = reader.readLine()-->Line_16 $$ s = reader.readLine()[ FD ]
Line_16 $$ s = reader.readLine()-->Line_16 $$ s = reader.readLine()[ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_16 $$ s = reader.readLine()[ FD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_18 $$ LOGGER.info("update-available", content.toString())[ CD ]
Line_12 $$ StringBuffer content = new StringBuffer()-->Line_18 $$ LOGGER.info("update-available", content.toString())[ FD ]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_19 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_19 $$ if (LOGGER.isDebugEnabled()) -->Line_19 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_19 $$ if (LOGGER.isDebugEnabled()) -->Line_20 $$ LOGGER.debug("No update available (Response code " + connection.getResponseCode() + ")")[ CD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_20 $$ LOGGER.debug("No update available (Response code " + connection.getResponseCode() + ")")[ FD ]
Line_23 $$ if (LOGGER.isDebugEnabled()) -->Line_23 $$ if (LOGGER.isDebugEnabled()) [ CD ]
Line_23 $$ if (LOGGER.isDebugEnabled()) -->Line_24 $$ LOGGER.debug("Update check failed", e)[ CD ]
Line_16 $$ s = reader.readLine()-->Line_14 $$ while (s != null) [ FD ]
Line_16 $$ s = reader.readLine()-->Line_14 $$ while (s != null) [ FD ]
Line_16 $$ s = reader.readLine()-->Line_15 $$ content.append(s)[ FD ]
