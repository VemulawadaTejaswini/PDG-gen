Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void login() throws LoginException [ CD ]
Line_2 $$ private void login() throws LoginException -->Line_3 $$ log.info("# iモード.netにログイン")[ CD ]
Line_7 $$ List<NameValuePair> formparams = new ArrayList<NameValuePair>()-->Line_8 $$ formparams.add(new BasicNameValuePair("HIDEURL", "?WM_AK=https%3a%2f%2fimode.net%2fag&path=%2fimail%2ftop&query="))[ FD ]
Line_7 $$ List<NameValuePair> formparams = new ArrayList<NameValuePair>()-->Line_9 $$ formparams.add(new BasicNameValuePair("LOGIN", "WM_LOGIN"))[ FD ]
Line_7 $$ List<NameValuePair> formparams = new ArrayList<NameValuePair>()-->Line_10 $$ formparams.add(new BasicNameValuePair("WM_KEY", "0"))[ FD ]
Line_7 $$ List<NameValuePair> formparams = new ArrayList<NameValuePair>()-->Line_11 $$ formparams.add(new BasicNameValuePair("MDCM_UID", this.name))[ FD ]
Line_7 $$ List<NameValuePair> formparams = new ArrayList<NameValuePair>()-->Line_12 $$ formparams.add(new BasicNameValuePair("MDCM_PWD", this.pass))[ FD ]
Line_13 $$ UrlEncodedFormEntity entity = null-->Line_15 $$ entity = new UrlEncodedFormEntity(formparams, "UTF-8")[ FD ]
Line_15 $$ entity = new UrlEncodedFormEntity(formparams, "UTF-8")-->Line_15 $$ entity = new UrlEncodedFormEntity(formparams, "UTF-8")[ FD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_18 $$ post.setHeader("User-Agent", "Mozilla/4.0 (compatible;MSIE 7.0; Windows NT 6.0;)")[ FD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_19 $$ post.setEntity(entity)[ FD ]
Line_13 $$ UrlEncodedFormEntity entity = null-->Line_19 $$ post.setEntity(entity)[ FD ]
Line_15 $$ entity = new UrlEncodedFormEntity(formparams, "UTF-8")-->Line_19 $$ post.setEntity(entity)[ FD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_21 $$ HttpResponse res = this.executeHttp(post)[ CD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_21 $$ HttpResponse res = this.executeHttp(post)[ FD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_22 $$ if (res == null) [ FD ]
Line_22 $$ if (res == null) -->Line_23 $$ this.logined = Boolean.FALSE[ CD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_26 $$ if (res.getStatusLine().getStatusCode() != 200) [ FD ]
Line_26 $$ if (res.getStatusLine().getStatusCode() != 200) -->Line_27 $$ this.logined = Boolean.FALSE[ CD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_28 $$ throw new IOException("http login response bad status code " + res.getStatusLine().getStatusCode())[ FD ]
Line_30 $$ String body = toStringBody(res)-->Line_30 $$ String body = toStringBody(res)[ CD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_30 $$ String body = toStringBody(res)[ FD ]
Line_30 $$ String body = toStringBody(res)-->Line_31 $$ if (body.indexOf("<title>認証エラー") > 0) [ FD ]
Line_31 $$ if (body.indexOf("<title>認証エラー") > 0) -->Line_32 $$ this.logined = Boolean.FALSE[ CD ]
Line_31 $$ if (body.indexOf("<title>認証エラー") > 0) -->Line_33 $$ log.info("認証エラー")[ CD ]
Line_31 $$ if (body.indexOf("<title>認証エラー") > 0) -->Line_34 $$ log.debug(body)[ CD ]
Line_30 $$ String body = toStringBody(res)-->Line_34 $$ log.debug(body)[ FD ]
Line_31 $$ if (body.indexOf("<title>認証エラー") > 0) -->Line_35 $$ this.clearCookie()[ CD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_39 $$ post.abort()[ FD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_41 $$ post = new HttpPost(JsonUrl + "login")[ FD ]
Line_41 $$ post = new HttpPost(JsonUrl + "login")-->Line_41 $$ post = new HttpPost(JsonUrl + "login")[ FD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_43 $$ HttpResponse res = this.requestPost(post, null)[ FD ]
Line_41 $$ post = new HttpPost(JsonUrl + "login")-->Line_43 $$ HttpResponse res = this.requestPost(post, null)[ FD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_44 $$ if (res == null) [ FD ]
Line_44 $$ if (res == null) -->Line_45 $$ this.logined = Boolean.FALSE[ CD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_48 $$ if (res.getStatusLine().getStatusCode() != 200) [ FD ]
Line_48 $$ if (res.getStatusLine().getStatusCode() != 200) -->Line_49 $$ this.logined = Boolean.FALSE[ CD ]
Line_21 $$ HttpResponse res = this.executeHttp(post)-->Line_50 $$ throw new IOException("http login2 response bad status code " + res.getStatusLine().getStatusCode())[ FD ]
Line_6 $$ HttpPost post = new HttpPost(LoginUrl)-->Line_54 $$ post.abort()[ FD ]
Line_41 $$ post = new HttpPost(JsonUrl + "login")-->Line_54 $$ post.abort()[ FD ]
