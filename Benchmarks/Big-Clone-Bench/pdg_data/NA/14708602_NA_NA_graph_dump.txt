Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void gerarFaturamento() [ CD ]
Line_2 $$ private void gerarFaturamento() -->Line_3 $$ int opt = Funcoes.mensagemConfirma(null, "Confirma o faturamento?")[ CD ]
Line_3 $$ int opt = Funcoes.mensagemConfirma(null, "Confirma o faturamento?")-->Line_3 $$ int opt = Funcoes.mensagemConfirma(null, "Confirma o faturamento?")[ CD ]
Line_2 $$ private void gerarFaturamento() -->Line_4 $$ if (opt == JOptionPane.OK_OPTION) [ CD ]
Line_3 $$ int opt = Funcoes.mensagemConfirma(null, "Confirma o faturamento?")-->Line_4 $$ if (opt == JOptionPane.OK_OPTION) [ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_5 $$ StringBuilder insert = new StringBuilder()[ CD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_6 $$ insert.append("INSERT INTO RPFATURAMENTO ")[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_6 $$ insert.append("INSERT INTO RPFATURAMENTO ")[ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_7 $$ insert.append("(CODEMP, CODFILIAL, CODPED, CODITPED, ")[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_7 $$ insert.append("(CODEMP, CODFILIAL, CODPED, CODITPED, ")[ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_8 $$ insert.append("QTDFATURADO, VLRFATURADO, QTDPENDENTE, ")[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_8 $$ insert.append("QTDFATURADO, VLRFATURADO, QTDPENDENTE, ")[ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_9 $$ insert.append("PERCCOMISFAT, VLRCOMISFAT, DTFATURADO ) ")[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_9 $$ insert.append("PERCCOMISFAT, VLRCOMISFAT, DTFATURADO ) ")[ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_10 $$ insert.append("VALUES")[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_10 $$ insert.append("VALUES")[ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_11 $$ insert.append("(?,?,?,?,?,?,?,?,?,?)")[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_11 $$ insert.append("(?,?,?,?,?,?,?,?,?,?)")[ FD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_12 $$ PreparedStatement ps[ CD ]
Line_4 $$ if (opt == JOptionPane.OK_OPTION) -->Line_13 $$ int parameterIndex[ CD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ CD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ CD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ CD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_16 $$ parameterIndex = 1[ CD ]
Line_16 $$ parameterIndex = 1-->Line_16 $$ parameterIndex = 1[ FD ]
Line_13 $$ int parameterIndex-->Line_16 $$ parameterIndex = 1[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_17 $$ ps = con.prepareStatement(insert.toString())[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_17 $$ ps = con.prepareStatement(insert.toString())[ FD ]
Line_12 $$ PreparedStatement ps-->Line_17 $$ ps = con.prepareStatement(insert.toString())[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_17 $$ ps = con.prepareStatement(insert.toString())[ CD ]
Line_5 $$ StringBuilder insert = new StringBuilder()-->Line_17 $$ ps = con.prepareStatement(insert.toString())[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ FD ]
Line_12 $$ PreparedStatement ps-->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ FD ]
Line_16 $$ parameterIndex = 1-->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ FD ]
Line_13 $$ int parameterIndex-->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ FD ]
Line_13 $$ int parameterIndex-->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ FD ]
Line_12 $$ PreparedStatement ps-->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ FD ]
Line_16 $$ parameterIndex = 1-->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ FD ]
Line_13 $$ int parameterIndex-->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_13 $$ int parameterIndex-->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_13 $$ int parameterIndex-->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_13 $$ int parameterIndex-->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_13 $$ int parameterIndex-->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_13 $$ int parameterIndex-->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_13 $$ int parameterIndex-->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ FD ]
Line_12 $$ PreparedStatement ps-->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ FD ]
Line_13 $$ int parameterIndex-->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_28 $$ ps.executeUpdate()[ CD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_28 $$ ps.executeUpdate()[ FD ]
Line_12 $$ PreparedStatement ps-->Line_28 $$ ps.executeUpdate()[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) [ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ FD ]
Line_16 $$ parameterIndex = 1-->Line_18 $$ ps.setInt(parameterIndex++, AplicativoRep.iCodEmp)[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_19 $$ ps.setInt(parameterIndex++, ListaCampos.getMasterFilial("RPFATURAMENTO"))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ FD ]
Line_16 $$ parameterIndex = 1-->Line_20 $$ ps.setInt(parameterIndex++, txtCodPed.getVlrInteger())[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_21 $$ ps.setInt(parameterIndex++, (Integer) tab.getValor(i, ETabNota.ITEM.ordinal()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_22 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QTDFATURADA.ordinal()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_23 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRFATURADO.ordinal()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_24 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.QDTPENDENTE.ordinal()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_25 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.PERCCOMIS.ordinal()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_15 $$ for (int i = 0; i < tab.getNumLinhas(); i++) -->Line_26 $$ ps.setBigDecimal(parameterIndex++, (BigDecimal) tab.getValor(i, ETabNota.VLRCOMIS.ordinal()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ FD ]
Line_16 $$ parameterIndex = 1-->Line_27 $$ ps.setDate(parameterIndex++, Funcoes.dateToSQLDate(Calendar.getInstance().getTime()))[ FD ]
Line_17 $$ ps = con.prepareStatement(insert.toString())-->Line_28 $$ ps.executeUpdate()[ FD ]
