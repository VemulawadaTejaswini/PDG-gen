Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean setFavBoard(List<BoardObject> list) throws NetworkException, ContentException [ CD ]
Line_2 $$ public boolean setFavBoard(List<BoardObject> list) throws NetworkException, ContentException -->Line_3 $$ HttpClient client = HttpConfig.newInstance()[ CD ]
Line_3 $$ HttpClient client = HttpConfig.newInstance()-->Line_3 $$ HttpClient client = HttpConfig.newInstance()[ CD ]
Line_2 $$ public boolean setFavBoard(List<BoardObject> list) throws NetworkException, ContentException -->Line_4 $$ HttpPost post = new HttpPost(HttpConfig.bbsURL() + HttpConfig.BBS_FAV_SETTING)[ CD ]
Line_2 $$ public boolean setFavBoard(List<BoardObject> list) throws NetworkException, ContentException -->Line_5 $$ List<NameValuePair> nvps = new ArrayList<NameValuePair>()[ CD ]
Line_5 $$ List<NameValuePair> nvps = new ArrayList<NameValuePair>()-->Line_6 $$ nvps.add(new BasicNameValuePair(board.getId(), "on"))[ FD ]
Line_6 $$ for (BoardObject board : list) nvps.add(new BasicNameValuePair(board.getId(), "on"))-->Line_6 $$ nvps.add(new BasicNameValuePair(board.getId(), "on"))[ FD ]
Line_4 $$ HttpPost post = new HttpPost(HttpConfig.bbsURL() + HttpConfig.BBS_FAV_SETTING)-->Line_8 $$ post.setEntity(new UrlEncodedFormEntity(nvps, BBSBodyParseHelper.BBS_CHARSET))[ FD ]
Line_9 $$ HttpResponse response = client.execute(post)-->Line_9 $$ HttpResponse response = client.execute(post)[ CD ]
Line_3 $$ HttpClient client = HttpConfig.newInstance()-->Line_9 $$ HttpResponse response = client.execute(post)[ FD ]
Line_4 $$ HttpPost post = new HttpPost(HttpConfig.bbsURL() + HttpConfig.BBS_FAV_SETTING)-->Line_9 $$ HttpResponse response = client.execute(post)[ FD ]
Line_10 $$ HttpEntity entity = response.getEntity()-->Line_10 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_9 $$ HttpResponse response = client.execute(post)-->Line_10 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_9 $$ HttpResponse response = client.execute(post)-->Line_11 $$ if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) [ FD ]
Line_9 $$ HttpResponse response = client.execute(post)-->Line_11 $$ if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) [ FD ]
Line_11 $$ if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) -->Line_12 $$ HTTPUtil.consume(response.getEntity())[ CD ]
Line_9 $$ HttpResponse response = client.execute(post)-->Line_12 $$ HTTPUtil.consume(response.getEntity())[ FD ]
Line_11 $$ if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) -->Line_13 $$ return true[ CD ]
Line_11 $$ if (HTTPUtil.isHttp200(response) && HTTPUtil.isXmlContentType(response)) -->Line_15 $$ String msg = BBSBodyParseHelper.parseFailMsg(entity)[ CD ]
Line_15 $$ String msg = BBSBodyParseHelper.parseFailMsg(entity)-->Line_15 $$ String msg = BBSBodyParseHelper.parseFailMsg(entity)[ CD ]
Line_10 $$ HttpEntity entity = response.getEntity()-->Line_15 $$ String msg = BBSBodyParseHelper.parseFailMsg(entity)[ FD ]
