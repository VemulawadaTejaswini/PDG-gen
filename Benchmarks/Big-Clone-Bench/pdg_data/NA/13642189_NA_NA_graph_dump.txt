Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean extract(File f, String folder) [ CD ]
Line_2 $$ public boolean extract(File f, String folder) -->Line_3 $$ Enumeration entries[ CD ]
Line_2 $$ public boolean extract(File f, String folder) -->Line_4 $$ ZipFile zipFile[ CD ]
Line_4 $$ ZipFile zipFile-->Line_6 $$ zipFile = new ZipFile(f)[ FD ]
Line_6 $$ zipFile = new ZipFile(f)-->Line_6 $$ zipFile = new ZipFile(f)[ FD ]
Line_3 $$ Enumeration entries-->Line_7 $$ entries = zipFile.getEntries()[ FD ]
Line_7 $$ entries = zipFile.getEntries()-->Line_7 $$ entries = zipFile.getEntries()[ FD ]
Line_7 $$ entries = zipFile.getEntries()-->Line_7 $$ entries = zipFile.getEntries()[ CD ]
Line_4 $$ ZipFile zipFile-->Line_7 $$ entries = zipFile.getEntries()[ FD ]
Line_6 $$ zipFile = new ZipFile(f)-->Line_7 $$ entries = zipFile.getEntries()[ FD ]
Line_8 $$ while (entries.hasMoreElements()) -->Line_8 $$ while (entries.hasMoreElements()) [ CD ]
Line_3 $$ Enumeration entries-->Line_8 $$ while (entries.hasMoreElements()) [ FD ]
Line_7 $$ entries = zipFile.getEntries()-->Line_8 $$ while (entries.hasMoreElements()) [ FD ]
Line_8 $$ while (entries.hasMoreElements()) -->Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()[ CD ]
Line_3 $$ Enumeration entries-->Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()[ FD ]
Line_7 $$ entries = zipFile.getEntries()-->Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()[ FD ]
Line_8 $$ while (entries.hasMoreElements()) -->Line_10 $$ if (entry == null)[ CD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_10 $$ if (entry == null)[ FD ]
Line_8 $$ while (entries.hasMoreElements()) -->Line_11 $$ String path = folder + "/" + entry.getName().replace('\\', '/')[ CD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_11 $$ String path = folder + "/" + entry.getName().replace('\\', '/')[ FD ]
Line_8 $$ while (entries.hasMoreElements()) -->Line_12 $$ if (!entry.isDirectory()) [ CD ]
Line_12 $$ if (!entry.isDirectory()) -->Line_12 $$ if (!entry.isDirectory()) [ CD ]
Line_12 $$ if (!entry.isDirectory()) -->Line_12 $$ if (!entry.isDirectory()) [ CD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_12 $$ if (!entry.isDirectory()) [ FD ]
Line_12 $$ if (!entry.isDirectory()) -->Line_13 $$ File destFile = new File(path)[ CD ]
Line_12 $$ if (!entry.isDirectory()) -->Line_14 $$ String parent = destFile.getParent()[ CD ]
Line_14 $$ String parent = destFile.getParent()-->Line_14 $$ String parent = destFile.getParent()[ CD ]
Line_13 $$ File destFile = new File(path)-->Line_14 $$ String parent = destFile.getParent()[ FD ]
Line_12 $$ if (!entry.isDirectory()) -->Line_15 $$ if (parent != null) [ CD ]
Line_14 $$ String parent = destFile.getParent()-->Line_15 $$ if (parent != null) [ FD ]
Line_15 $$ if (parent != null) -->Line_16 $$ File parentFile = new File(parent)[ CD ]
Line_15 $$ if (parent != null) -->Line_17 $$ if (!parentFile.exists()) [ CD ]
Line_17 $$ if (!parentFile.exists()) -->Line_17 $$ if (!parentFile.exists()) [ CD ]
Line_17 $$ if (!parentFile.exists()) -->Line_17 $$ if (!parentFile.exists()) [ CD ]
Line_16 $$ File parentFile = new File(parent)-->Line_17 $$ if (!parentFile.exists()) [ FD ]
Line_17 $$ if (!parentFile.exists()) -->Line_18 $$ parentFile.mkdirs()[ CD ]
Line_16 $$ File parentFile = new File(parent)-->Line_18 $$ parentFile.mkdirs()[ FD ]
Line_12 $$ if (!entry.isDirectory()) -->Line_21 $$ copyInputStream(zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(destFile)))[ CD ]
Line_4 $$ ZipFile zipFile-->Line_21 $$ copyInputStream(zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(destFile)))[ FD ]
Line_6 $$ zipFile = new ZipFile(f)-->Line_21 $$ copyInputStream(zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(destFile)))[ FD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_21 $$ copyInputStream(zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(destFile)))[ FD ]
Line_4 $$ ZipFile zipFile-->Line_24 $$ zipFile.close()[ FD ]
Line_6 $$ zipFile = new ZipFile(f)-->Line_24 $$ zipFile.close()[ FD ]
Line_26 $$ this.errMsg = ioe.getMessage()-->Line_26 $$ this.errMsg = ioe.getMessage()[ CD ]
Line_2 $$ public boolean extract(File f, String folder) -->Line_30 $$ return true[ CD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_10 $$ if (entry == null)[ FD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_11 $$ String path = folder + "/" + entry.getName().replace('\\', '/')[ FD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_12 $$ if (!entry.isDirectory()) [ FD ]
Line_13 $$ File destFile = new File(path)-->Line_14 $$ String parent = destFile.getParent()[ FD ]
Line_14 $$ String parent = destFile.getParent()-->Line_15 $$ if (parent != null) [ FD ]
Line_16 $$ File parentFile = new File(parent)-->Line_17 $$ if (!parentFile.exists()) [ FD ]
Line_16 $$ File parentFile = new File(parent)-->Line_18 $$ parentFile.mkdirs()[ FD ]
Line_9 $$ ZipArchiveEntry entry = (ZipArchiveEntry) entries.nextElement()-->Line_21 $$ copyInputStream(zipFile.getInputStream(entry), new BufferedOutputStream(new FileOutputStream(destFile)))[ FD ]
