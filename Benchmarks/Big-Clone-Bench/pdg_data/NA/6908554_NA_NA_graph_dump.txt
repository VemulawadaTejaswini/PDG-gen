Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException [ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_3 $$ int fd = env.getIntField(objref, "fd")[ CD ]
Line_3 $$ int fd = env.getIntField(objref, "fd")-->Line_3 $$ int fd = env.getIntField(objref, "fd")[ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_3 $$ int fd = env.getIntField(objref, "fd")[ FD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_3 $$ int fd = env.getIntField(objref, "fd")[ FD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_4 $$ long off = env.getLongField(objref, "off")[ CD ]
Line_4 $$ long off = env.getLongField(objref, "off")-->Line_4 $$ long off = env.getLongField(objref, "off")[ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_4 $$ long off = env.getLongField(objref, "off")[ FD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_4 $$ long off = env.getLongField(objref, "off")[ FD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_5 $$ if (content.get(fd) == null) [ CD ]
Line_3 $$ int fd = env.getIntField(objref, "fd")-->Line_5 $$ if (content.get(fd) == null) [ FD ]
Line_5 $$ if (content.get(fd) == null) -->Line_6 $$ int mode = env.getIntField(objref, "mode")[ CD ]
Line_6 $$ int mode = env.getIntField(objref, "mode")-->Line_6 $$ int mode = env.getIntField(objref, "mode")[ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_6 $$ int mode = env.getIntField(objref, "mode")[ FD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_6 $$ int mode = env.getIntField(objref, "mode")[ FD ]
Line_5 $$ if (content.get(fd) == null) -->Line_7 $$ int fnRef = env.getReferenceField(objref, "fileName")[ CD ]
Line_7 $$ int fnRef = env.getReferenceField(objref, "fileName")-->Line_7 $$ int fnRef = env.getReferenceField(objref, "fileName")[ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_7 $$ int fnRef = env.getReferenceField(objref, "fileName")[ FD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_7 $$ int fnRef = env.getReferenceField(objref, "fileName")[ FD ]
Line_5 $$ if (content.get(fd) == null) -->Line_8 $$ String fname = env.getStringObject(fnRef)[ CD ]
Line_8 $$ String fname = env.getStringObject(fnRef)-->Line_8 $$ String fname = env.getStringObject(fnRef)[ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_8 $$ String fname = env.getStringObject(fnRef)[ FD ]
Line_7 $$ int fnRef = env.getReferenceField(objref, "fileName")-->Line_8 $$ String fname = env.getStringObject(fnRef)[ FD ]
Line_5 $$ if (content.get(fd) == null) -->Line_9 $$ if (mode == FD_READ) [ CD ]
Line_6 $$ int mode = env.getIntField(objref, "mode")-->Line_9 $$ if (mode == FD_READ) [ FD ]
Line_9 $$ if (mode == FD_READ) -->Line_10 $$ FileInputStream fis = new FileInputStream(fname)[ CD ]
Line_9 $$ if (mode == FD_READ) -->Line_11 $$ FileChannel fc = fis.getChannel()[ CD ]
Line_11 $$ FileChannel fc = fis.getChannel()-->Line_11 $$ FileChannel fc = fis.getChannel()[ CD ]
Line_10 $$ FileInputStream fis = new FileInputStream(fname)-->Line_11 $$ FileChannel fc = fis.getChannel()[ FD ]
Line_9 $$ if (mode == FD_READ) -->Line_12 $$ fc.position(off)[ CD ]
Line_11 $$ FileChannel fc = fis.getChannel()-->Line_12 $$ fc.position(off)[ FD ]
Line_4 $$ long off = env.getLongField(objref, "off")-->Line_12 $$ fc.position(off)[ FD ]
Line_9 $$ if (mode == FD_READ) -->Line_13 $$ content.set(fd, fis)[ CD ]
Line_3 $$ int fd = env.getIntField(objref, "fd")-->Line_13 $$ content.set(fd, fis)[ FD ]
Line_10 $$ FileInputStream fis = new FileInputStream(fname)-->Line_13 $$ content.set(fd, fis)[ FD ]
Line_9 $$ if (mode == FD_READ) -->Line_14 $$ if (mode == FD_WRITE) [ CD ]
Line_6 $$ int mode = env.getIntField(objref, "mode")-->Line_14 $$ if (mode == FD_WRITE) [ FD ]
Line_14 $$ if (mode == FD_WRITE) -->Line_15 $$ FileOutputStream fos = new FileOutputStream(fname)[ CD ]
Line_14 $$ if (mode == FD_WRITE) -->Line_16 $$ FileChannel fc = fos.getChannel()[ CD ]
Line_15 $$ FileOutputStream fos = new FileOutputStream(fname)-->Line_16 $$ FileChannel fc = fos.getChannel()[ FD ]
Line_14 $$ if (mode == FD_WRITE) -->Line_17 $$ fc.position(off)[ CD ]
Line_11 $$ FileChannel fc = fis.getChannel()-->Line_17 $$ fc.position(off)[ FD ]
Line_4 $$ long off = env.getLongField(objref, "off")-->Line_17 $$ fc.position(off)[ FD ]
Line_14 $$ if (mode == FD_WRITE) -->Line_18 $$ content.set(fd, fos)[ CD ]
Line_3 $$ int fd = env.getIntField(objref, "fd")-->Line_18 $$ content.set(fd, fos)[ FD ]
Line_15 $$ FileOutputStream fos = new FileOutputStream(fname)-->Line_18 $$ content.set(fd, fos)[ FD ]
Line_14 $$ if (mode == FD_WRITE) -->Line_20 $$ env.throwException("java.io.IOException", "illegal mode: " + mode)[ CD ]
Line_2 $$ static void reopen(MJIEnv env, int objref) throws IOException -->Line_20 $$ env.throwException("java.io.IOException", "illegal mode: " + mode)[ FD ]
