Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void copy(File source, File destination) throws PackageException [ CD ]
Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)-->Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)[ FD ]
Line_7 $$ int len-->Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)[ FD ]
Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)-->Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)[ CD ]
Line_4 $$ FileInputStream in = new FileInputStream(source)-->Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)[ FD ]
Line_6 $$ byte[] buff = new byte[1024]-->Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)[ FD ]
Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)-->Line_8 $$ out.write(buff, 0, len)[ CD ]
Line_5 $$ FileOutputStream out = new FileOutputStream(destination)-->Line_8 $$ out.write(buff, 0, len)[ FD ]
Line_6 $$ byte[] buff = new byte[1024]-->Line_8 $$ out.write(buff, 0, len)[ FD ]
Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)-->Line_8 $$ out.write(buff, 0, len)[ FD ]
Line_7 $$ int len-->Line_8 $$ out.write(buff, 0, len)[ FD ]
Line_4 $$ FileInputStream in = new FileInputStream(source)-->Line_9 $$ in.close()[ FD ]
Line_5 $$ FileOutputStream out = new FileOutputStream(destination)-->Line_10 $$ out.close()[ FD ]
Line_2 $$ private void copy(File source, File destination) throws PackageException -->Line_12 $$ throw new PackageException("Unable to copy " + source.getPath() + " to " + destination.getPath() + " :: " + e.toString())[ FD ]
Line_2 $$ private void copy(File source, File destination) throws PackageException -->Line_12 $$ throw new PackageException("Unable to copy " + source.getPath() + " to " + destination.getPath() + " :: " + e.toString())[ FD ]
Line_8 $$ while ((len = in.read(buff)) > 0) out.write(buff, 0, len)-->Line_8 $$ out.write(buff, 0, len)[ FD ]
