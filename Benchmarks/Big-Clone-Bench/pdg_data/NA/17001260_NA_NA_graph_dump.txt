Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void getGPX(String gpxURL, String fName) [ CD ]
Line_4 $$ URL url = new URL(gpxURL)-->Line_5 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_5 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection()-->Line_6 $$ urlConnection.setRequestMethod("GET")[ FD ]
Line_5 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection()-->Line_7 $$ urlConnection.setDoOutput(true)[ FD ]
Line_5 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection()-->Line_8 $$ urlConnection.connect()[ FD ]
Line_9 $$ File storage = mContext.getExternalFilesDir(null)-->Line_9 $$ File storage = mContext.getExternalFilesDir(null)[ CD ]
Line_12 $$ InputStream is = urlConnection.getInputStream()-->Line_12 $$ InputStream is = urlConnection.getInputStream()[ CD ]
Line_5 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection()-->Line_12 $$ InputStream is = urlConnection.getInputStream()[ FD ]
Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) -->Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) [ FD ]
Line_14 $$ int bufferLength = 0-->Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) [ FD ]
Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) -->Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) [ CD ]
Line_12 $$ InputStream is = urlConnection.getInputStream()-->Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) [ FD ]
Line_13 $$ byte[] buffer = new byte[1024]-->Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) [ FD ]
Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) -->Line_16 $$ os.write(buffer, 0, bufferLength)[ CD ]
Line_11 $$ FileOutputStream os = new FileOutputStream(file)-->Line_16 $$ os.write(buffer, 0, bufferLength)[ FD ]
Line_13 $$ byte[] buffer = new byte[1024]-->Line_16 $$ os.write(buffer, 0, bufferLength)[ FD ]
Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) -->Line_16 $$ os.write(buffer, 0, bufferLength)[ FD ]
Line_14 $$ int bufferLength = 0-->Line_16 $$ os.write(buffer, 0, bufferLength)[ FD ]
Line_11 $$ FileOutputStream os = new FileOutputStream(file)-->Line_18 $$ os.close()[ FD ]
Line_15 $$ while ((bufferLength = is.read(buffer)) > 0) -->Line_16 $$ os.write(buffer, 0, bufferLength)[ FD ]
