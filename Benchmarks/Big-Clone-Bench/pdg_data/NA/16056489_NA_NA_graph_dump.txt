Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) [ CD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_3 $$ String ErrorStr = null[ CD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_5 $$ resp.setContentType(getMimeType(format))[ FD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_5 $$ resp.setContentType(getMimeType(format))[ FD ]
Line_10 $$ URLConnection urlc = url.openConnection()-->Line_10 $$ URLConnection urlc = url.openConnection()[ CD ]
Line_9 $$ URL url = new URL(urlstr)-->Line_10 $$ URLConnection urlc = url.openConnection()[ FD ]
Line_11 $$ int length = urlc.getContentLength()-->Line_11 $$ int length = urlc.getContentLength()[ CD ]
Line_10 $$ URLConnection urlc = url.openConnection()-->Line_11 $$ int length = urlc.getContentLength()[ FD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_12 $$ resp.setContentLength(length)[ FD ]
Line_11 $$ int length = urlc.getContentLength()-->Line_12 $$ resp.setContentLength(length)[ FD ]
Line_13 $$ InputStream in = urlc.getInputStream()-->Line_13 $$ InputStream in = urlc.getInputStream()[ CD ]
Line_10 $$ URLConnection urlc = url.openConnection()-->Line_13 $$ InputStream in = urlc.getInputStream()[ FD ]
Line_6 $$ BufferedInputStream bis = null-->Line_14 $$ bis = new BufferedInputStream(in)[ FD ]
Line_14 $$ bis = new BufferedInputStream(in)-->Line_14 $$ bis = new BufferedInputStream(in)[ FD ]
Line_7 $$ BufferedOutputStream bos = null-->Line_15 $$ bos = new BufferedOutputStream(outstr)[ FD ]
Line_15 $$ bos = new BufferedOutputStream(outstr)-->Line_15 $$ bos = new BufferedOutputStream(outstr)[ FD ]
Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) -->Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) [ FD ]
Line_17 $$ int bytesRead-->Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) [ FD ]
Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) -->Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) [ CD ]
Line_6 $$ BufferedInputStream bis = null-->Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) [ FD ]
Line_14 $$ bis = new BufferedInputStream(in)-->Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) [ FD ]
Line_16 $$ byte[] buff = new byte[length]-->Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) [ FD ]
Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) -->Line_19 $$ bos.write(buff, 0, bytesRead)[ CD ]
Line_7 $$ BufferedOutputStream bos = null-->Line_19 $$ bos.write(buff, 0, bytesRead)[ FD ]
Line_15 $$ bos = new BufferedOutputStream(outstr)-->Line_19 $$ bos.write(buff, 0, bytesRead)[ FD ]
Line_16 $$ byte[] buff = new byte[length]-->Line_19 $$ bos.write(buff, 0, bytesRead)[ FD ]
Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) -->Line_19 $$ bos.write(buff, 0, bytesRead)[ FD ]
Line_17 $$ int bytesRead-->Line_19 $$ bos.write(buff, 0, bytesRead)[ FD ]
Line_3 $$ String ErrorStr = null-->Line_23 $$ ErrorStr = "Error Streaming the Data"[ FD ]
Line_23 $$ ErrorStr = "Error Streaming the Data"-->Line_23 $$ ErrorStr = "Error Streaming the Data"[ FD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_24 $$ outstr.print(ErrorStr)[ FD ]
Line_3 $$ String ErrorStr = null-->Line_24 $$ outstr.print(ErrorStr)[ FD ]
Line_23 $$ ErrorStr = "Error Streaming the Data"-->Line_24 $$ outstr.print(ErrorStr)[ FD ]
Line_6 $$ BufferedInputStream bis = null-->Line_26 $$ if (bis != null) [ FD ]
Line_14 $$ bis = new BufferedInputStream(in)-->Line_26 $$ if (bis != null) [ FD ]
Line_26 $$ if (bis != null) -->Line_27 $$ bis.close()[ CD ]
Line_6 $$ BufferedInputStream bis = null-->Line_27 $$ bis.close()[ FD ]
Line_14 $$ bis = new BufferedInputStream(in)-->Line_27 $$ bis.close()[ FD ]
Line_7 $$ BufferedOutputStream bos = null-->Line_29 $$ if (bos != null) [ FD ]
Line_15 $$ bos = new BufferedOutputStream(outstr)-->Line_29 $$ if (bos != null) [ FD ]
Line_29 $$ if (bos != null) -->Line_30 $$ bos.close()[ CD ]
Line_7 $$ BufferedOutputStream bos = null-->Line_30 $$ bos.close()[ FD ]
Line_15 $$ bos = new BufferedOutputStream(outstr)-->Line_30 $$ bos.close()[ FD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_32 $$ if (outstr != null) [ FD ]
Line_32 $$ if (outstr != null) -->Line_33 $$ outstr.flush()[ CD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_33 $$ outstr.flush()[ FD ]
Line_32 $$ if (outstr != null) -->Line_34 $$ outstr.close()[ CD ]
Line_2 $$ private void streamBinaryData(String urlstr, String format, ServletOutputStream outstr, HttpServletResponse resp) -->Line_34 $$ outstr.close()[ FD ]
Line_18 $$ while (-1 != (bytesRead = bis.read(buff, 0, buff.length))) -->Line_19 $$ bos.write(buff, 0, bytesRead)[ FD ]
