Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void greatestIncrease(int maxIterations) [ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_3 $$ double[] increase = new double[numModels][ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_4 $$ int[] id = new int[numModels][ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_5 $$ Model md = new Model()[ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_6 $$ double oldPerf = 1[ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_2 $$ public void greatestIncrease(int maxIterations) [ CD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_8 $$ md.addModel(models[i], false)[ CD ]
Line_5 $$ Model md = new Model()-->Line_8 $$ md.addModel(models[i], false)[ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_9 $$ increase[i] = oldPerf - md.getLoss()[ CD ]
Line_6 $$ double oldPerf = 1-->Line_9 $$ increase[i] = oldPerf - md.getLoss()[ FD ]
Line_5 $$ Model md = new Model()-->Line_9 $$ increase[i] = oldPerf - md.getLoss()[ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_10 $$ id[i] = i[ CD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_10 $$ id[i] = i[ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_11 $$ oldPerf = md.getLoss()[ CD ]
Line_11 $$ oldPerf = md.getLoss()-->Line_11 $$ oldPerf = md.getLoss()[ FD ]
Line_6 $$ double oldPerf = 1-->Line_11 $$ oldPerf = md.getLoss()[ FD ]
Line_11 $$ oldPerf = md.getLoss()-->Line_11 $$ oldPerf = md.getLoss()[ CD ]
Line_5 $$ Model md = new Model()-->Line_11 $$ oldPerf = md.getLoss()[ FD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_2 $$ public void greatestIncrease(int maxIterations) [ CD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ CD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ CD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ CD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ CD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ FD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_15 $$ if (increase[j] < increase[j + 1]) [ CD ]
Line_15 $$ if (increase[j] < increase[j + 1]) -->Line_16 $$ double increasetemp = increase[j][ CD ]
Line_15 $$ if (increase[j] < increase[j + 1]) -->Line_17 $$ int temp = id[j][ CD ]
Line_15 $$ if (increase[j] < increase[j + 1]) -->Line_18 $$ increase[j] = increase[j + 1][ CD ]
Line_15 $$ if (increase[j] < increase[j + 1]) -->Line_19 $$ id[j] = id[j + 1][ CD ]
Line_15 $$ if (increase[j] < increase[j + 1]) -->Line_20 $$ increase[j + 1] = increasetemp[ CD ]
Line_16 $$ double increasetemp = increase[j]-->Line_20 $$ increase[j + 1] = increasetemp[ FD ]
Line_15 $$ if (increase[j] < increase[j + 1]) -->Line_21 $$ id[j + 1] = temp[ CD ]
Line_17 $$ int temp = id[j]-->Line_21 $$ id[j + 1] = temp[ FD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ CD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_2 $$ public void greatestIncrease(int maxIterations) [ CD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_2 $$ public void greatestIncrease(int maxIterations) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ CD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ CD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_26 $$ addToEnsemble(models[id[i]])[ CD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_27 $$ if (report)[ CD ]
Line_27 $$ if (report)-->Line_27 $$ ensemble.report(models[id[i]].getName(), allSets)[ CD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_28 $$ updateBestModel()[ CD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_7 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_11 $$ oldPerf = md.getLoss()-->Line_9 $$ increase[i] = oldPerf - md.getLoss()[ FD ]
Line_7 $$ for (int i = 0; i < numModels; i++) -->Line_10 $$ id[i] = i[ FD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_13 $$ for (int i = 0; i < numModels; i++) -->Line_13 $$ for (int i = 0; i < numModels; i++) [ FD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ FD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ FD ]
Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) -->Line_14 $$ for (int j = 0; j < numModels - 1 - i; j++) [ FD ]
Line_16 $$ double increasetemp = increase[j]-->Line_20 $$ increase[j + 1] = increasetemp[ FD ]
Line_17 $$ int temp = id[j]-->Line_21 $$ id[j + 1] = temp[ FD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
Line_25 $$ for (int i = 0; i < maxIterations; i++) -->Line_25 $$ for (int i = 0; i < maxIterations; i++) [ FD ]
