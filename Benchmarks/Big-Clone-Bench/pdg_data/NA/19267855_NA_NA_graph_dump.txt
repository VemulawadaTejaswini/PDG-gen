Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception [ CD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_3 $$ PreparedStatement ps = null[ CD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_5 $$ dest.setAutoCommit(false)[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) [ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_8 $$ sql += columnName + " = ? ,"[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_8 $$ sql += columnName + " = ? ,"[ FD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_8 $$ sql += columnName + " = ? ,"[ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ CD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_10 $$ sql = sql.substring(0, sql.length() - 1)[ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_11 $$ sql += " WHERE "[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_11 $$ sql += " WHERE "[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_11 $$ sql += " WHERE "[ FD ]
Line_11 $$ sql += " WHERE "-->Line_11 $$ sql += " WHERE "[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_12 $$ for (String pkColumnName : tableMetaData.getPkColumns()) [ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_13 $$ sql += pkColumnName + " = ? AND "[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_13 $$ sql += pkColumnName + " = ? AND "[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_13 $$ sql += pkColumnName + " = ? AND "[ FD ]
Line_11 $$ sql += " WHERE "-->Line_13 $$ sql += pkColumnName + " = ? AND "[ FD ]
Line_13 $$ sql += pkColumnName + " = ? AND "-->Line_13 $$ sql += pkColumnName + " = ? AND "[ FD ]
Line_12 $$ for (String pkColumnName : tableMetaData.getPkColumns()) -->Line_13 $$ sql += pkColumnName + " = ? AND "[ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_11 $$ sql += " WHERE "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_13 $$ sql += pkColumnName + " = ? AND "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_15 $$ sql = sql.substring(0, sql.length() - 4)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_15 $$ sql = sql.substring(0, sql.length() - 4)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ CD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_11 $$ sql += " WHERE "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_13 $$ sql += pkColumnName + " = ? AND "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_15 $$ sql = sql.substring(0, sql.length() - 4)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_11 $$ sql += " WHERE "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_13 $$ sql += pkColumnName + " = ? AND "-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_15 $$ sql = sql.substring(0, sql.length() - 4)-->Line_15 $$ sql = sql.substring(0, sql.length() - 4)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_16 $$ ps = dest.prepareStatement(sql)[ CD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_6 $$ String sql = "UPDATE " + tableMetaData.getSchema() + "." + tableMetaData.getTableName() + " SET "-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_8 $$ sql += columnName + " = ? ,"-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_10 $$ sql = sql.substring(0, sql.length() - 1)-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_11 $$ sql += " WHERE "-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_13 $$ sql += pkColumnName + " = ? AND "-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_15 $$ sql = sql.substring(0, sql.length() - 4)-->Line_16 $$ ps = dest.prepareStatement(sql)[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_17 $$ for (Row r : tableMetaData.getData()) [ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_19 $$ for (String columnName : tableMetaData.getColumnsNames()) [ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_20 $$ if (dest instanceof OracleConnection) [ FD ]
Line_20 $$ if (dest instanceof OracleConnection) -->Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [ CD ]
Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) -->Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [ CD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) [ FD ]
Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) -->Line_22 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName))[ CD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_22 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_17 $$ for (Row r : tableMetaData.getData()) -->Line_22 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) -->Line_23 $$ ((OraclePreparedStatement) ps).setBLOB(param, blob)[ CD ]
Line_18 $$ int param = 1-->Line_23 $$ ((OraclePreparedStatement) ps).setBLOB(param, blob)[ FD ]
Line_22 $$ BLOB blob = new BLOB((OracleConnection) dest, (byte[]) r.getRowData().get(columnName))-->Line_23 $$ ((OraclePreparedStatement) ps).setBLOB(param, blob)[ FD ]
Line_21 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("BLOB")) -->Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [ CD ]
Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) -->Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [ CD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) [ FD ]
Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) -->Line_25 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName))[ CD ]
Line_18 $$ int param = 1-->Line_25 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName))[ FD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_25 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName))[ FD ]
Line_17 $$ for (Row r : tableMetaData.getData()) -->Line_25 $$ ((OraclePreparedStatement) ps).setStringForClob(param, (String) r.getRowData().get(columnName))[ FD ]
Line_24 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("CLOB")) -->Line_26 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [ CD ]
Line_26 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) -->Line_26 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [ CD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_26 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_26 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) [ FD ]
Line_26 $$ if (tableMetaData.getColumnsTypes().get(columnName).equalsIgnoreCase("LONG")) -->Line_27 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName))[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_27 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_27 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_18 $$ int param = 1-->Line_27 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_27 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_17 $$ for (Row r : tableMetaData.getData()) -->Line_27 $$ ps.setBytes(param, (byte[]) r.getRowData().get(columnName))[ FD ]
Line_20 $$ if (dest instanceof OracleConnection) -->Line_30 $$ ps.setObject(param, r.getRowData().get(columnName))[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_30 $$ ps.setObject(param, r.getRowData().get(columnName))[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_30 $$ ps.setObject(param, r.getRowData().get(columnName))[ FD ]
Line_18 $$ int param = 1-->Line_30 $$ ps.setObject(param, r.getRowData().get(columnName))[ FD ]
Line_7 $$ for (String columnName : tableMetaData.getColumnsNames()) -->Line_30 $$ ps.setObject(param, r.getRowData().get(columnName))[ FD ]
Line_17 $$ for (Row r : tableMetaData.getData()) -->Line_30 $$ ps.setObject(param, r.getRowData().get(columnName))[ FD ]
Line_18 $$ int param = 1-->Line_32 $$ param++[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_34 $$ for (String pkColumnName : tableMetaData.getPkColumns()) [ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_35 $$ ps.setObject(param, r.getRowData().get(pkColumnName))[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_35 $$ ps.setObject(param, r.getRowData().get(pkColumnName))[ FD ]
Line_18 $$ int param = 1-->Line_35 $$ ps.setObject(param, r.getRowData().get(pkColumnName))[ FD ]
Line_12 $$ for (String pkColumnName : tableMetaData.getPkColumns()) -->Line_35 $$ ps.setObject(param, r.getRowData().get(pkColumnName))[ FD ]
Line_17 $$ for (Row r : tableMetaData.getData()) -->Line_35 $$ ps.setObject(param, r.getRowData().get(pkColumnName))[ FD ]
Line_18 $$ int param = 1-->Line_36 $$ param++[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_38 $$ if (ps.executeUpdate() != 1) [ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_38 $$ if (ps.executeUpdate() != 1) [ FD ]
Line_38 $$ if (ps.executeUpdate() != 1) -->Line_39 $$ dest.rollback()[ CD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_39 $$ dest.rollback()[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_42 $$ ps.clearParameters()[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_42 $$ ps.clearParameters()[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_44 $$ dest.commit()[ FD ]
Line_2 $$ public static void updateTableData(Connection dest, TableMetaData tableMetaData) throws Exception -->Line_45 $$ dest.setAutoCommit(true)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_47 $$ if (ps != null)[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_47 $$ if (ps != null)[ FD ]
Line_47 $$ if (ps != null)-->Line_47 $$ ps.close()[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_47 $$ ps.close()[ FD ]
Line_16 $$ ps = dest.prepareStatement(sql)-->Line_47 $$ ps.close()[ FD ]
