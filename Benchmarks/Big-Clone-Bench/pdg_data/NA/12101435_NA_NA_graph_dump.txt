Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void invokeTest(String queryfile, String target) [ CD ]
Line_4 $$ String query = IOUtils.toString(XPathMarkBenchmarkTest.class.getResourceAsStream(queryfile)).trim()-->Line_4 $$ String query = IOUtils.toString(XPathMarkBenchmarkTest.class.getResourceAsStream(queryfile)).trim()[ CD ]
Line_2 $$ private void invokeTest(String queryfile, String target) -->Line_4 $$ String query = IOUtils.toString(XPathMarkBenchmarkTest.class.getResourceAsStream(queryfile)).trim()[ FD ]
Line_7 $$ Process proc = Runtime.getRuntime().exec(args, null, benchmarkDir)-->Line_7 $$ Process proc = Runtime.getRuntime().exec(args, null, benchmarkDir)[ CD ]
Line_5 $$ String args = EXEC_CMD + " \"" + query + "\" \"" + target + '"'-->Line_7 $$ Process proc = Runtime.getRuntime().exec(args, null, benchmarkDir)[ FD ]
Line_8 $$ InputStream is = proc.getInputStream()-->Line_8 $$ InputStream is = proc.getInputStream()[ CD ]
Line_7 $$ Process proc = Runtime.getRuntime().exec(args, null, benchmarkDir)-->Line_8 $$ InputStream is = proc.getInputStream()[ FD ]
Line_8 $$ InputStream is = proc.getInputStream()-->Line_10 $$ IOUtils.copy(is, new FileOutputStream(outFile))[ FD ]
Line_8 $$ InputStream is = proc.getInputStream()-->Line_11 $$ is.close()[ FD ]
Line_12 $$ int ret = proc.waitFor()-->Line_12 $$ int ret = proc.waitFor()[ CD ]
Line_7 $$ Process proc = Runtime.getRuntime().exec(args, null, benchmarkDir)-->Line_12 $$ int ret = proc.waitFor()[ FD ]
Line_12 $$ int ret = proc.waitFor()-->Line_13 $$ if (ret != 0) [ FD ]
Line_13 $$ if (ret != 0) -->Line_14 $$ System.out.println("process exited with value : " + ret)[ CD ]
