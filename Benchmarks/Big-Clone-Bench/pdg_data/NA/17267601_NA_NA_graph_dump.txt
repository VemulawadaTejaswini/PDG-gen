Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void setBckImg(String newPath) [ CD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) [ CD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) [ CD ]
Line_4 $$ File inputFile = new File(getPath())-->Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) [ FD ]
Line_5 $$ File outputFile = new File(newPath)-->Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) [ FD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_7 $$ FileInputStream in = new FileInputStream(inputFile)[ CD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_8 $$ FileOutputStream out = null[ CD ]
Line_8 $$ FileOutputStream out = null-->Line_10 $$ out = new FileOutputStream(outputFile)[ FD ]
Line_10 $$ out = new FileOutputStream(outputFile)-->Line_10 $$ out = new FileOutputStream(outputFile)[ FD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_15 $$ int c[ CD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_16 $$ if (out != null) [ CD ]
Line_8 $$ FileOutputStream out = null-->Line_16 $$ if (out != null) [ FD ]
Line_10 $$ out = new FileOutputStream(outputFile)-->Line_16 $$ if (out != null) [ FD ]
Line_16 $$ if (out != null) -->Line_17 $$ while ((c = in.read()) != -1) out.write(c)[ CD ]
Line_16 $$ if (out != null) -->Line_16 $$ if (out != null) [ CD ]
Line_17 $$ while ((c = in.read()) != -1) out.write(c)-->Line_17 $$ while ((c = in.read()) != -1) out.write(c)[ FD ]
Line_15 $$ int c-->Line_17 $$ while ((c = in.read()) != -1) out.write(c)[ FD ]
Line_17 $$ while ((c = in.read()) != -1) out.write(c)-->Line_17 $$ while ((c = in.read()) != -1) out.write(c)[ CD ]
Line_7 $$ FileInputStream in = new FileInputStream(inputFile)-->Line_17 $$ while ((c = in.read()) != -1) out.write(c)[ FD ]
Line_17 $$ while ((c = in.read()) != -1) out.write(c)-->Line_17 $$ out.write(c)[ CD ]
Line_8 $$ FileOutputStream out = null-->Line_17 $$ out.write(c)[ FD ]
Line_10 $$ out = new FileOutputStream(outputFile)-->Line_17 $$ out.write(c)[ FD ]
Line_17 $$ while ((c = in.read()) != -1) out.write(c)-->Line_17 $$ out.write(c)[ FD ]
Line_15 $$ int c-->Line_17 $$ out.write(c)[ FD ]
Line_16 $$ if (out != null) -->Line_18 $$ out.close()[ CD ]
Line_8 $$ FileOutputStream out = null-->Line_18 $$ out.close()[ FD ]
Line_10 $$ out = new FileOutputStream(outputFile)-->Line_18 $$ out.close()[ FD ]
Line_6 $$ if (!inputFile.getCanonicalPath().equals(outputFile.getCanonicalPath())) -->Line_20 $$ in.close()[ CD ]
Line_7 $$ FileInputStream in = new FileInputStream(inputFile)-->Line_20 $$ in.close()[ FD ]
Line_2 $$ public void setBckImg(String newPath) -->Line_27 $$ setPath(newPath)[ CD ]
Line_2 $$ public void setBckImg(String newPath) -->Line_27 $$ setPath(newPath)[ FD ]
Line_17 $$ while ((c = in.read()) != -1) out.write(c)-->Line_17 $$ out.write(c)[ FD ]
