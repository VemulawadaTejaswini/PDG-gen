Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyFile(File source, File destination, boolean lazy) [ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_3 $$ if (!source.exists()) [ CD ]
Line_3 $$ if (!source.exists()) -->Line_3 $$ if (!source.exists()) [ CD ]
Line_3 $$ if (!source.exists()) -->Line_3 $$ if (!source.exists()) [ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_3 $$ if (!source.exists()) [ FD ]
Line_3 $$ if (!source.exists()) -->Line_4 $$ return[ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_6 $$ if (lazy) [ CD ]
Line_6 $$ if (lazy) -->Line_7 $$ String oldContent = null[ CD ]
Line_7 $$ String oldContent = null-->Line_9 $$ oldContent = read(source)[ FD ]
Line_9 $$ oldContent = read(source)-->Line_9 $$ oldContent = read(source)[ FD ]
Line_9 $$ oldContent = read(source)-->Line_9 $$ oldContent = read(source)[ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_9 $$ oldContent = read(source)[ FD ]
Line_6 $$ if (lazy) -->Line_13 $$ String newContent = null[ CD ]
Line_13 $$ String newContent = null-->Line_15 $$ newContent = read(destination)[ FD ]
Line_15 $$ newContent = read(destination)-->Line_15 $$ newContent = read(destination)[ FD ]
Line_15 $$ newContent = read(destination)-->Line_15 $$ newContent = read(destination)[ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_15 $$ newContent = read(destination)[ FD ]
Line_6 $$ if (lazy) -->Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) [ CD ]
Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) -->Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) [ CD ]
Line_7 $$ String oldContent = null-->Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) [ FD ]
Line_9 $$ oldContent = read(source)-->Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) [ FD ]
Line_13 $$ String newContent = null-->Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) [ FD ]
Line_15 $$ newContent = read(destination)-->Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) [ FD ]
Line_18 $$ if ((oldContent == null) || !oldContent.equals(newContent)) -->Line_19 $$ copyFile(source, destination, false)[ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_19 $$ copyFile(source, destination, false)[ FD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_19 $$ copyFile(source, destination, false)[ FD ]
Line_6 $$ if (lazy) -->Line_22 $$ if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) [ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_22 $$ if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) [ FD ]
Line_22 $$ if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) -->Line_22 $$ if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) [ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_22 $$ if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) [ FD ]
Line_22 $$ if ((destination.getParentFile() != null) && (!destination.getParentFile().exists())) -->Line_23 $$ destination.getParentFile().mkdirs()[ CD ]
Line_2 $$ public void copyFile(File source, File destination, boolean lazy) -->Line_23 $$ destination.getParentFile().mkdirs()[ FD ]
Line_26 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_26 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()[ CD ]
Line_27 $$ FileChannel dstChannel = new FileOutputStream(destination).getChannel()-->Line_27 $$ FileChannel dstChannel = new FileOutputStream(destination).getChannel()[ CD ]
Line_27 $$ FileChannel dstChannel = new FileOutputStream(destination).getChannel()-->Line_28 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_26 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_28 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_26 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_28 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_26 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_29 $$ srcChannel.close()[ FD ]
Line_27 $$ FileChannel dstChannel = new FileOutputStream(destination).getChannel()-->Line_30 $$ dstChannel.close()[ FD ]
