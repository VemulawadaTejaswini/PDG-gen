Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException [ CD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_3 $$ byte[] buf = new byte[BUFFER_SIZE][ CD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_4 $$ StringBuffer str = new StringBuffer("http://" + fsName + "/getimage?")[ CD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_5 $$ str.append(id)[ CD ]
Line_4 $$ StringBuffer str = new StringBuffer("http://" + fsName + "/getimage?")-->Line_5 $$ str.append(id)[ FD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_5 $$ str.append(id)[ FD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_6 $$ URL url = new URL(str.toString())[ CD ]
Line_4 $$ StringBuffer str = new StringBuffer("http://" + fsName + "/getimage?")-->Line_6 $$ URL url = new URL(str.toString())[ FD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_6 $$ URL url = new URL(str.toString())-->Line_7 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_8 $$ InputStream stream = connection.getInputStream()[ CD ]
Line_8 $$ InputStream stream = connection.getInputStream()-->Line_8 $$ InputStream stream = connection.getInputStream()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_8 $$ InputStream stream = connection.getInputStream()[ FD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_9 $$ FileOutputStream[] output = null[ CD ]
Line_2 $$ static void getFileClient(String fsName, String id, File[] localPath) throws IOException -->Line_11 $$ if (localPath != null) [ FD ]
Line_11 $$ if (localPath != null) -->Line_12 $$ output = new FileOutputStream[localPath.length][ CD ]
Line_9 $$ FileOutputStream[] output = null-->Line_12 $$ output = new FileOutputStream[localPath.length][ FD ]
Line_12 $$ output = new FileOutputStream[localPath.length]-->Line_12 $$ output = new FileOutputStream[localPath.length][ FD ]
Line_11 $$ if (localPath != null) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_11 $$ if (localPath != null) -->Line_11 $$ if (localPath != null) [ CD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_14 $$ output[i] = new FileOutputStream(localPath[i])[ CD ]
Line_17 $$ int num = 1-->Line_18 $$ while (num > 0) [ FD ]
Line_18 $$ while (num > 0) -->Line_19 $$ num = stream.read(buf)[ CD ]
Line_19 $$ num = stream.read(buf)-->Line_19 $$ num = stream.read(buf)[ FD ]
Line_17 $$ int num = 1-->Line_19 $$ num = stream.read(buf)[ FD ]
Line_19 $$ num = stream.read(buf)-->Line_19 $$ num = stream.read(buf)[ CD ]
Line_8 $$ InputStream stream = connection.getInputStream()-->Line_19 $$ num = stream.read(buf)[ FD ]
Line_3 $$ byte[] buf = new byte[BUFFER_SIZE]-->Line_19 $$ num = stream.read(buf)[ FD ]
Line_18 $$ while (num > 0) -->Line_20 $$ if (num > 0 && localPath != null) [ CD ]
Line_20 $$ if (num > 0 && localPath != null) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_20 $$ if (num > 0 && localPath != null) -->Line_20 $$ if (num > 0 && localPath != null) [ CD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_22 $$ output[i].write(buf, 0, num)[ CD ]
Line_3 $$ byte[] buf = new byte[BUFFER_SIZE]-->Line_22 $$ output[i].write(buf, 0, num)[ FD ]
Line_19 $$ num = stream.read(buf)-->Line_22 $$ output[i].write(buf, 0, num)[ FD ]
Line_17 $$ int num = 1-->Line_22 $$ output[i].write(buf, 0, num)[ FD ]
Line_8 $$ InputStream stream = connection.getInputStream()-->Line_27 $$ stream.close()[ FD ]
Line_9 $$ FileOutputStream[] output = null-->Line_28 $$ if (output != null) [ FD ]
Line_12 $$ output = new FileOutputStream[localPath.length]-->Line_28 $$ if (output != null) [ FD ]
Line_28 $$ if (output != null) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_28 $$ if (output != null) -->Line_28 $$ if (output != null) [ CD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_30 $$ if (output[i] != null) [ CD ]
Line_30 $$ if (output[i] != null) -->Line_31 $$ output[i].close()[ CD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < output.length; i++) -->Line_13 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_19 $$ num = stream.read(buf)-->Line_18 $$ while (num > 0) [ FD ]
Line_19 $$ num = stream.read(buf)-->Line_18 $$ while (num > 0) [ FD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < output.length; i++) -->Line_21 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < output.length; i++) -->Line_29 $$ for (int i = 0; i < output.length; i++) [ FD ]
