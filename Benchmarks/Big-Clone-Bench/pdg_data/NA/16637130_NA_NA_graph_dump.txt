Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void readDocument(URL url) [ CD ]
Line_2 $$ public void readDocument(URL url) -->Line_3 $$ stopTiming()[ CD ]
Line_2 $$ public void readDocument(URL url) -->Line_6 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_9 $$ while (cont) -->Line_10 $$ line = in.readLine()[ CD ]
Line_10 $$ line = in.readLine()-->Line_10 $$ line = in.readLine()[ FD ]
Line_7 $$ String line = ""-->Line_10 $$ line = in.readLine()[ FD ]
Line_10 $$ line = in.readLine()-->Line_10 $$ line = in.readLine()[ CD ]
Line_6 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_10 $$ line = in.readLine()[ FD ]
Line_9 $$ while (cont) -->Line_11 $$ if (line == null) [ CD ]
Line_10 $$ line = in.readLine()-->Line_11 $$ if (line == null) [ FD ]
Line_7 $$ String line = ""-->Line_11 $$ if (line == null) [ FD ]
Line_9 $$ while (cont) -->Line_14 $$ line = line.trim()[ CD ]
Line_10 $$ line = in.readLine()-->Line_14 $$ line = line.trim()[ FD ]
Line_14 $$ line = line.trim()-->Line_14 $$ line = line.trim()[ FD ]
Line_7 $$ String line = ""-->Line_14 $$ line = line.trim()[ FD ]
Line_14 $$ line = line.trim()-->Line_14 $$ line = line.trim()[ CD ]
Line_10 $$ line = in.readLine()-->Line_14 $$ line = line.trim()[ FD ]
Line_14 $$ line = line.trim()-->Line_14 $$ line = line.trim()[ FD ]
Line_7 $$ String line = ""-->Line_14 $$ line = line.trim()[ FD ]
Line_9 $$ while (cont) -->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ CD ]
Line_10 $$ line = in.readLine()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_14 $$ line = line.trim()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_7 $$ String line = ""-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_10 $$ line = in.readLine()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_14 $$ line = line.trim()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_7 $$ String line = ""-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') -->Line_16 $$ xmlData = xmlData + line + System.getProperty("line.separator")[ CD ]
Line_16 $$ xmlData = xmlData + line + System.getProperty("line.separator")-->Line_16 $$ xmlData = xmlData + line + System.getProperty("line.separator")[ FD ]
Line_5 $$ String xmlData = ""-->Line_16 $$ xmlData = xmlData + line + System.getProperty("line.separator")[ FD ]
Line_9 $$ while (cont) -->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ CD ]
Line_10 $$ line = in.readLine()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_14 $$ line = line.trim()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_7 $$ String line = ""-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_10 $$ line = in.readLine()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_14 $$ line = line.trim()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_7 $$ String line = ""-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_10 $$ line = in.readLine()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_14 $$ line = line.trim()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_7 $$ String line = ""-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') -->Line_19 $$ cont = false[ CD ]
Line_19 $$ cont = false-->Line_19 $$ cont = false[ FD ]
Line_8 $$ boolean cont = true-->Line_19 $$ cont = false[ FD ]
Line_22 $$ XmlDataAdaptor readAdp = null-->Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)[ FD ]
Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)-->Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)[ FD ]
Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)-->Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)[ CD ]
Line_16 $$ xmlData = xmlData + line + System.getProperty("line.separator")-->Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)[ FD ]
Line_5 $$ String xmlData = ""-->Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)[ FD ]
Line_22 $$ XmlDataAdaptor readAdp = null-->Line_24 $$ if (readAdp != null) [ FD ]
Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)-->Line_24 $$ if (readAdp != null) [ FD ]
Line_24 $$ if (readAdp != null) -->Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)[ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)[ CD ]
Line_22 $$ XmlDataAdaptor readAdp = null-->Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)[ FD ]
Line_23 $$ readAdp = XmlDataAdaptor.adaptorForString(xmlData, false)-->Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)[ FD ]
Line_24 $$ if (readAdp != null) -->Line_26 $$ if (mpsfileData_Adaptor != null) [ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_26 $$ if (mpsfileData_Adaptor != null) [ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_27 $$ setTitle(mpsfileData_Adaptor.stringValue("title"))[ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_27 $$ setTitle(mpsfileData_Adaptor.stringValue("title"))[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_28 $$ java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator("Plot")[ CD ]
Line_28 $$ java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator("Plot")-->Line_28 $$ java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator("Plot")[ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_28 $$ java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator("Plot")[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_29 $$ while (plotIt.hasNext()) [ CD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_26 $$ if (mpsfileData_Adaptor != null) [ CD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_29 $$ while (plotIt.hasNext()) [ CD ]
Line_28 $$ java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator("Plot")-->Line_29 $$ while (plotIt.hasNext()) [ FD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()[ CD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()[ CD ]
Line_28 $$ java.util.Iterator<XmlDataAdaptor> plotIt = mpsfileData_Adaptor.childAdaptorIterator("Plot")-->Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()[ FD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_31 $$ String name = pvDA.stringValue("name")[ CD ]
Line_31 $$ String name = pvDA.stringValue("name")-->Line_31 $$ String name = pvDA.stringValue("name")[ CD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_31 $$ String name = pvDA.stringValue("name")[ FD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_32 $$ String xMin = pvDA.stringValue("xmin")[ CD ]
Line_32 $$ String xMin = pvDA.stringValue("xmin")-->Line_32 $$ String xMin = pvDA.stringValue("xmin")[ CD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_32 $$ String xMin = pvDA.stringValue("xmin")[ FD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_33 $$ String xMax = pvDA.stringValue("xmax")[ CD ]
Line_33 $$ String xMax = pvDA.stringValue("xmax")-->Line_33 $$ String xMax = pvDA.stringValue("xmax")[ CD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_33 $$ String xMax = pvDA.stringValue("xmax")[ FD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_34 $$ String step = pvDA.stringValue("step")[ CD ]
Line_34 $$ String step = pvDA.stringValue("step")-->Line_34 $$ String step = pvDA.stringValue("step")[ CD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_34 $$ String step = pvDA.stringValue("step")[ FD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_35 $$ System.out.println(name + " " + xMax + " " + xMin + " " + step)[ CD ]
Line_29 $$ while (plotIt.hasNext()) -->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ CD ]
Line_31 $$ String name = pvDA.stringValue("name")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_32 $$ String xMin = pvDA.stringValue("xmin")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_33 $$ String xMax = pvDA.stringValue("xmax")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_34 $$ String step = pvDA.stringValue("step")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_38 $$ java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator("TimingPV")[ CD ]
Line_38 $$ java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator("TimingPV")-->Line_38 $$ java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator("TimingPV")[ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_38 $$ java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator("TimingPV")[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_39 $$ while (timingIt.hasNext()) [ CD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_26 $$ if (mpsfileData_Adaptor != null) [ CD ]
Line_39 $$ while (timingIt.hasNext()) -->Line_39 $$ while (timingIt.hasNext()) [ CD ]
Line_38 $$ java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator("TimingPV")-->Line_39 $$ while (timingIt.hasNext()) [ FD ]
Line_39 $$ while (timingIt.hasNext()) -->Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()[ CD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()[ CD ]
Line_38 $$ java.util.Iterator<XmlDataAdaptor> timingIt = mpsfileData_Adaptor.childAdaptorIterator("TimingPV")-->Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()[ FD ]
Line_39 $$ while (timingIt.hasNext()) -->Line_41 $$ String name = pvDA.stringValue("name")[ CD ]
Line_41 $$ String name = pvDA.stringValue("name")-->Line_41 $$ String name = pvDA.stringValue("name")[ CD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_41 $$ String name = pvDA.stringValue("name")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_41 $$ String name = pvDA.stringValue("name")[ FD ]
Line_39 $$ while (timingIt.hasNext()) -->Line_42 $$ bModel.setTimingPVName(name)[ CD ]
Line_41 $$ String name = pvDA.stringValue("name")-->Line_42 $$ bModel.setTimingPVName(name)[ FD ]
Line_31 $$ String name = pvDA.stringValue("name")-->Line_42 $$ bModel.setTimingPVName(name)[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_44 $$ java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator("Trigger")[ CD ]
Line_44 $$ java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator("Trigger")-->Line_44 $$ java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator("Trigger")[ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_44 $$ java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator("Trigger")[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_45 $$ while (trigIt.hasNext()) [ CD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_26 $$ if (mpsfileData_Adaptor != null) [ CD ]
Line_45 $$ while (trigIt.hasNext()) -->Line_45 $$ while (trigIt.hasNext()) [ CD ]
Line_44 $$ java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator("Trigger")-->Line_45 $$ while (trigIt.hasNext()) [ FD ]
Line_45 $$ while (trigIt.hasNext()) -->Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()[ CD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()[ CD ]
Line_44 $$ java.util.Iterator<XmlDataAdaptor> trigIt = mpsfileData_Adaptor.childAdaptorIterator("Trigger")-->Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()[ FD ]
Line_45 $$ while (trigIt.hasNext()) -->Line_47 $$ String name = pvDA.stringValue("name")[ CD ]
Line_47 $$ String name = pvDA.stringValue("name")-->Line_47 $$ String name = pvDA.stringValue("name")[ CD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_47 $$ String name = pvDA.stringValue("name")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_47 $$ String name = pvDA.stringValue("name")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_47 $$ String name = pvDA.stringValue("name")[ FD ]
Line_45 $$ while (trigIt.hasNext()) -->Line_48 $$ String type = pvDA.stringValue("type")[ CD ]
Line_48 $$ String type = pvDA.stringValue("type")-->Line_48 $$ String type = pvDA.stringValue("type")[ CD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_48 $$ String type = pvDA.stringValue("type")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_48 $$ String type = pvDA.stringValue("type")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_48 $$ String type = pvDA.stringValue("type")[ FD ]
Line_45 $$ while (trigIt.hasNext()) -->Line_49 $$ bModel.addTrigger(name, type)[ CD ]
Line_47 $$ String name = pvDA.stringValue("name")-->Line_49 $$ bModel.addTrigger(name, type)[ FD ]
Line_41 $$ String name = pvDA.stringValue("name")-->Line_49 $$ bModel.addTrigger(name, type)[ FD ]
Line_31 $$ String name = pvDA.stringValue("name")-->Line_49 $$ bModel.addTrigger(name, type)[ FD ]
Line_48 $$ String type = pvDA.stringValue("type")-->Line_49 $$ bModel.addTrigger(name, type)[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_51 $$ java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator("BLMdevice")[ CD ]
Line_51 $$ java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator("BLMdevice")-->Line_51 $$ java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator("BLMdevice")[ CD ]
Line_25 $$ XmlDataAdaptor mpsfileData_Adaptor = readAdp.childAdaptor(dataRootName)-->Line_51 $$ java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator("BLMdevice")[ FD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_52 $$ while (blmIt.hasNext()) [ CD ]
Line_26 $$ if (mpsfileData_Adaptor != null) -->Line_26 $$ if (mpsfileData_Adaptor != null) [ CD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_52 $$ while (blmIt.hasNext()) [ CD ]
Line_51 $$ java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator("BLMdevice")-->Line_52 $$ while (blmIt.hasNext()) [ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()[ CD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()[ CD ]
Line_51 $$ java.util.Iterator<XmlDataAdaptor> blmIt = mpsfileData_Adaptor.childAdaptorIterator("BLMdevice")-->Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_54 $$ String name = pvDA.stringValue("name")[ CD ]
Line_54 $$ String name = pvDA.stringValue("name")-->Line_54 $$ String name = pvDA.stringValue("name")[ CD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_54 $$ String name = pvDA.stringValue("name")[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_54 $$ String name = pvDA.stringValue("name")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_54 $$ String name = pvDA.stringValue("name")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_54 $$ String name = pvDA.stringValue("name")[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_55 $$ String section = pvDA.stringValue("section")[ CD ]
Line_55 $$ String section = pvDA.stringValue("section")-->Line_55 $$ String section = pvDA.stringValue("section")[ CD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_55 $$ String section = pvDA.stringValue("section")[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_55 $$ String section = pvDA.stringValue("section")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_55 $$ String section = pvDA.stringValue("section")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_55 $$ String section = pvDA.stringValue("section")[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ CD ]
Line_56 $$ String mpschan = pvDA.stringValue("mpschan")-->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ CD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ CD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ CD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_58 $$ String location = pvDA.stringValue("locationz")[ CD ]
Line_58 $$ String location = pvDA.stringValue("locationz")-->Line_58 $$ String location = pvDA.stringValue("locationz")[ CD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_58 $$ String location = pvDA.stringValue("locationz")[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_58 $$ String location = pvDA.stringValue("locationz")[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_58 $$ String location = pvDA.stringValue("locationz")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_58 $$ String location = pvDA.stringValue("locationz")[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_59 $$ double locz = 0[ CD ]
Line_59 $$ double locz = 0-->Line_61 $$ locz = Double.parseDouble(location)[ FD ]
Line_61 $$ locz = Double.parseDouble(location)-->Line_61 $$ locz = Double.parseDouble(location)[ FD ]
Line_61 $$ locz = Double.parseDouble(location)-->Line_61 $$ locz = Double.parseDouble(location)[ CD ]
Line_58 $$ String location = pvDA.stringValue("locationz")-->Line_61 $$ locz = Double.parseDouble(location)[ FD ]
Line_59 $$ double locz = 0-->Line_63 $$ locz = 0.0[ FD ]
Line_61 $$ locz = Double.parseDouble(location)-->Line_63 $$ locz = 0.0[ FD ]
Line_63 $$ locz = 0.0-->Line_63 $$ locz = 0.0[ FD ]
Line_52 $$ while (blmIt.hasNext()) -->Line_65 $$ if (devType == null)[ CD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType == null)[ FD ]
Line_65 $$ if (devType == null)-->Line_65 $$ bModel.addBLM(new IonizationChamber(name, section, mpschan, locz))[ CD ]
Line_65 $$ if (devType == null)-->Line_65 $$ if (devType.equals("ND"))[ CD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("ND"))[ FD ]
Line_65 $$ if (devType.equals("ND"))-->Line_65 $$ if (devType.equals("ND"))[ CD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("ND"))[ FD ]
Line_65 $$ if (devType.equals("ND"))-->Line_65 $$ bModel.addBLM(new NeutronDetector(name, section, mpschan, locz))[ CD ]
Line_65 $$ if (devType.equals("ND"))-->Line_65 $$ if (devType.equals("IC"))[ CD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("IC"))[ FD ]
Line_65 $$ if (devType.equals("IC"))-->Line_65 $$ if (devType.equals("IC"))[ CD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("IC"))[ FD ]
Line_65 $$ if (devType.equals("IC"))-->Line_65 $$ bModel.addBLM(new IonizationChamber(name, section, mpschan, locz))[ CD ]
Line_6 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_69 $$ in.close()[ FD ]
Line_2 $$ public void readDocument(URL url) -->Line_73 $$ startTiming()[ CD ]
Line_10 $$ line = in.readLine()-->Line_11 $$ if (line == null) [ FD ]
Line_14 $$ line = line.trim()-->Line_11 $$ if (line == null) [ FD ]
Line_10 $$ line = in.readLine()-->Line_14 $$ line = line.trim()[ FD ]
Line_14 $$ line = line.trim()-->Line_14 $$ line = line.trim()[ FD ]
Line_10 $$ line = in.readLine()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_14 $$ line = line.trim()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_10 $$ line = in.readLine()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_14 $$ line = line.trim()-->Line_15 $$ if (line.length() > 0 && line.charAt(0) != '%') [ FD ]
Line_10 $$ line = in.readLine()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_14 $$ line = line.trim()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_10 $$ line = in.readLine()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_14 $$ line = line.trim()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_10 $$ line = in.readLine()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_14 $$ line = line.trim()-->Line_18 $$ if (line.length() > 1 && line.charAt(0) == '%' && line.charAt(1) == '=') [ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_31 $$ String name = pvDA.stringValue("name")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_32 $$ String xMin = pvDA.stringValue("xmin")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_33 $$ String xMax = pvDA.stringValue("xmax")[ FD ]
Line_30 $$ XmlDataAdaptor pvDA = plotIt.next()-->Line_34 $$ String step = pvDA.stringValue("step")[ FD ]
Line_31 $$ String name = pvDA.stringValue("name")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_32 $$ String xMin = pvDA.stringValue("xmin")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_33 $$ String xMax = pvDA.stringValue("xmax")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_34 $$ String step = pvDA.stringValue("step")-->Line_36 $$ bModel.setPlotAxes(name, xMin, xMax, step)[ FD ]
Line_40 $$ XmlDataAdaptor pvDA = timingIt.next()-->Line_41 $$ String name = pvDA.stringValue("name")[ FD ]
Line_41 $$ String name = pvDA.stringValue("name")-->Line_42 $$ bModel.setTimingPVName(name)[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_47 $$ String name = pvDA.stringValue("name")[ FD ]
Line_46 $$ XmlDataAdaptor pvDA = trigIt.next()-->Line_48 $$ String type = pvDA.stringValue("type")[ FD ]
Line_47 $$ String name = pvDA.stringValue("name")-->Line_49 $$ bModel.addTrigger(name, type)[ FD ]
Line_48 $$ String type = pvDA.stringValue("type")-->Line_49 $$ bModel.addTrigger(name, type)[ FD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_54 $$ String name = pvDA.stringValue("name")[ FD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_55 $$ String section = pvDA.stringValue("section")[ FD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_56 $$ String mpschan = pvDA.stringValue("mpschan")[ FD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_57 $$ String devType = pvDA.stringValue("devicetype")[ FD ]
Line_53 $$ XmlDataAdaptor pvDA = blmIt.next()-->Line_58 $$ String location = pvDA.stringValue("locationz")[ FD ]
Line_58 $$ String location = pvDA.stringValue("locationz")-->Line_61 $$ locz = Double.parseDouble(location)[ FD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType == null)[ FD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("ND"))[ FD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("ND"))[ FD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("IC"))[ FD ]
Line_57 $$ String devType = pvDA.stringValue("devicetype")-->Line_65 $$ if (devType.equals("IC"))[ FD ]
