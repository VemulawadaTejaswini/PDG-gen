Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void read(Model model, String url) [ CD ]
Line_4 $$ URLConnection conn = new URL(url).openConnection()-->Line_4 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_5 $$ String encoding = conn.getContentEncoding()-->Line_5 $$ String encoding = conn.getContentEncoding()[ CD ]
Line_4 $$ URLConnection conn = new URL(url).openConnection()-->Line_5 $$ String encoding = conn.getContentEncoding()[ FD ]
Line_5 $$ String encoding = conn.getContentEncoding()-->Line_6 $$ if (encoding == null) [ FD ]
Line_6 $$ if (encoding == null) -->Line_7 $$ read(model, conn.getInputStream(), url)[ CD ]
Line_2 $$ public void read(Model model, String url) -->Line_7 $$ read(model, conn.getInputStream(), url)[ FD ]
Line_2 $$ public void read(Model model, String url) -->Line_7 $$ read(model, conn.getInputStream(), url)[ FD ]
Line_6 $$ if (encoding == null) -->Line_7 $$ read(model, conn.getInputStream(), url)[ CD ]
Line_4 $$ URLConnection conn = new URL(url).openConnection()-->Line_7 $$ read(model, conn.getInputStream(), url)[ FD ]
Line_6 $$ if (encoding == null) -->Line_9 $$ read(model, new InputStreamReader(conn.getInputStream(), encoding), url)[ CD ]
Line_2 $$ public void read(Model model, String url) -->Line_9 $$ read(model, new InputStreamReader(conn.getInputStream(), encoding), url)[ FD ]
Line_2 $$ public void read(Model model, String url) -->Line_9 $$ read(model, new InputStreamReader(conn.getInputStream(), encoding), url)[ FD ]
Line_4 $$ URLConnection conn = new URL(url).openConnection()-->Line_9 $$ read(model, new InputStreamReader(conn.getInputStream(), encoding), url)[ FD ]
