Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ PrintWriter out = response.getWriter()[ CD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_3 $$ PrintWriter out = response.getWriter()[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ PrintWriter out = response.getWriter()[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ response.setContentType("text/html")[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ response.setContentType("text/html")[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_5 $$ HttpSession session = request.getSession()[ CD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_5 $$ HttpSession session = request.getSession()[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_5 $$ HttpSession session = request.getSession()[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ String session_id = session.getId()[ CD ]
Line_6 $$ String session_id = session.getId()-->Line_6 $$ String session_id = session.getId()[ CD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_6 $$ String session_id = session.getId()[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_7 $$ File session_fileDir = new File(destinationDir + java.io.File.separator + session_id)[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_8 $$ session_fileDir.mkdir()[ CD ]
Line_7 $$ File session_fileDir = new File(destinationDir + java.io.File.separator + session_id)-->Line_8 $$ session_fileDir.mkdir()[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_9 $$ DiskFileItemFactory fileItemFactory = new DiskFileItemFactory()[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_10 $$ fileItemFactory.setSizeThreshold(1 * 1024 * 1024)[ CD ]
Line_9 $$ DiskFileItemFactory fileItemFactory = new DiskFileItemFactory()-->Line_10 $$ fileItemFactory.setSizeThreshold(1 * 1024 * 1024)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_11 $$ fileItemFactory.setRepository(tmpDir)[ CD ]
Line_9 $$ DiskFileItemFactory fileItemFactory = new DiskFileItemFactory()-->Line_11 $$ fileItemFactory.setRepository(tmpDir)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_12 $$ ServletFileUpload uploadHandler = new ServletFileUpload(fileItemFactory)[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_13 $$ String pathToFile = new String()[ CD ]
Line_15 $$ List items = uploadHandler.parseRequest(request)-->Line_15 $$ List items = uploadHandler.parseRequest(request)[ CD ]
Line_12 $$ ServletFileUpload uploadHandler = new ServletFileUpload(fileItemFactory)-->Line_15 $$ List items = uploadHandler.parseRequest(request)[ FD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_15 $$ List items = uploadHandler.parseRequest(request)[ FD ]
Line_16 $$ Iterator itr = items.iterator()-->Line_16 $$ Iterator itr = items.iterator()[ CD ]
Line_15 $$ List items = uploadHandler.parseRequest(request)-->Line_16 $$ Iterator itr = items.iterator()[ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_17 $$ while (itr.hasNext()) [ CD ]
Line_16 $$ Iterator itr = items.iterator()-->Line_17 $$ while (itr.hasNext()) [ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_18 $$ FileItem item = (FileItem) itr.next()[ CD ]
Line_16 $$ Iterator itr = items.iterator()-->Line_18 $$ FileItem item = (FileItem) itr.next()[ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_19 $$ if (item.isFormField()) [ CD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_19 $$ if (item.isFormField()) [ FD ]
Line_19 $$ if (item.isFormField()) -->Line_19 $$ if (item.isFormField()) [ CD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_19 $$ if (item.isFormField()) [ FD ]
Line_19 $$ if (item.isFormField()) -->Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id[ CD ]
Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id-->Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id[ FD ]
Line_13 $$ String pathToFile = new String()-->Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id[ FD ]
Line_6 $$ String session_id = session.getId()-->Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id[ FD ]
Line_19 $$ if (item.isFormField()) -->Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())[ CD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())[ FD ]
Line_19 $$ if (item.isFormField()) -->Line_24 $$ item.write(file)[ CD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_24 $$ item.write(file)[ FD ]
Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())-->Line_24 $$ item.write(file)[ FD ]
Line_19 $$ if (item.isFormField()) -->Line_25 $$ getContents(file, pathToFile)[ CD ]
Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())-->Line_25 $$ getContents(file, pathToFile)[ FD ]
Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id-->Line_25 $$ getContents(file, pathToFile)[ FD ]
Line_13 $$ String pathToFile = new String()-->Line_25 $$ getContents(file, pathToFile)[ FD ]
Line_19 $$ if (item.isFormField()) -->Line_26 $$ ComtorStandAlone.setMode(Mode.CLOUD)[ CD ]
Line_19 $$ if (item.isFormField()) -->Line_27 $$ Comtor.start(pathToFile)[ CD ]
Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id-->Line_27 $$ Comtor.start(pathToFile)[ FD ]
Line_13 $$ String pathToFile = new String()-->Line_27 $$ Comtor.start(pathToFile)[ FD ]
Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()-->Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()[ CD ]
Line_31 $$ File reportFile = new File(pathToFile + java.io.File.separator + "comtorReport.txt")-->Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()[ FD ]
Line_6 $$ String session_id = session.getId()-->Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()[ FD ]
Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()-->Line_33 $$ if (reportURLString.startsWith("https"))[ FD ]
Line_33 $$ if (reportURLString.startsWith("https"))-->Line_33 $$ if (reportURLString.startsWith("https"))[ CD ]
Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()-->Line_33 $$ if (reportURLString.startsWith("https"))[ FD ]
Line_33 $$ if (reportURLString.startsWith("https"))-->Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")[ CD ]
Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()-->Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")[ FD ]
Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")-->Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")[ FD ]
Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")-->Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")[ CD ]
Line_32 $$ String reportURLString = AWSServices.storeReportS3(reportFile, session_id).toString()-->Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")[ FD ]
Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")-->Line_33 $$ reportURLString = reportURLString.replaceFirst("https", "http")[ FD ]
Line_34 $$ String requestURL = request.getRequestURL().toString()-->Line_34 $$ String requestURL = request.getRequestURL().toString()[ CD ]
Line_2 $$ public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_34 $$ String requestURL = request.getRequestURL().toString()[ FD ]
Line_35 $$ String url = requestURL.substring(0, requestURL.lastIndexOf("/"))-->Line_35 $$ String url = requestURL.substring(0, requestURL.lastIndexOf("/"))[ CD ]
Line_34 $$ String requestURL = request.getRequestURL().toString()-->Line_35 $$ String url = requestURL.substring(0, requestURL.lastIndexOf("/"))[ FD ]
Line_34 $$ String requestURL = request.getRequestURL().toString()-->Line_35 $$ String url = requestURL.substring(0, requestURL.lastIndexOf("/"))[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_36 $$ out.println("<html><head/><body>")[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_37 $$ out.println("<a href=\"" + url + "\">Return to home</a>&nbsp;&nbsp;")[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_38 $$ out.println("<a href=\"" + reportURLString + "\">Report URL</a><br/><hr/>")[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_40 $$ out.println("<pre>")[ FD ]
Line_41 $$ while (scan.hasNextLine()) out.println(scan.nextLine())-->Line_41 $$ while (scan.hasNextLine()) out.println(scan.nextLine())[ CD ]
Line_39 $$ Scanner scan = new Scanner(reportFile)-->Line_41 $$ while (scan.hasNextLine()) out.println(scan.nextLine())[ FD ]
Line_41 $$ while (scan.hasNextLine()) out.println(scan.nextLine())-->Line_41 $$ out.println(scan.nextLine())[ CD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_41 $$ out.println(scan.nextLine())[ FD ]
Line_39 $$ Scanner scan = new Scanner(reportFile)-->Line_41 $$ out.println(scan.nextLine())[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_42 $$ out.println("</pre><hr/>")[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_43 $$ out.println("<a href=\"" + url + "\">Return to home</a>&nbsp;&nbsp;")[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_44 $$ out.println("<a href=\"" + reportURLString + "\">Report URL</a><br/>")[ FD ]
Line_3 $$ PrintWriter out = response.getWriter()-->Line_45 $$ out.println("</body></html>")[ FD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_19 $$ if (item.isFormField()) [ FD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_19 $$ if (item.isFormField()) [ FD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())[ FD ]
Line_18 $$ FileItem item = (FileItem) itr.next()-->Line_24 $$ item.write(file)[ FD ]
Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())-->Line_24 $$ item.write(file)[ FD ]
Line_23 $$ File file = new File(pathToFile + java.io.File.separator + item.getName())-->Line_25 $$ getContents(file, pathToFile)[ FD ]
Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id-->Line_25 $$ getContents(file, pathToFile)[ FD ]
Line_22 $$ pathToFile = getServletContext().getRealPath("/") + "files" + java.io.File.separator + session_id-->Line_27 $$ Comtor.start(pathToFile)[ FD ]
