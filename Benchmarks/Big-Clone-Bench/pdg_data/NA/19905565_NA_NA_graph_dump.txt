Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String sha1(String in) [ CD ]
Line_2 $$ public static String sha1(String in) -->Line_3 $$ MessageDigest md = null[ CD ]
Line_3 $$ MessageDigest md = null-->Line_5 $$ md = MessageDigest.getInstance("SHA-1")[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA-1")-->Line_5 $$ md = MessageDigest.getInstance("SHA-1")[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA-1")-->Line_5 $$ md = MessageDigest.getInstance("SHA-1")[ CD ]
Line_2 $$ public static String sha1(String in) -->Line_9 $$ byte[] data = new byte[40][ CD ]
Line_3 $$ MessageDigest md = null-->Line_11 $$ md.update(in.getBytes("iso-8859-1"), 0, in.length())[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA-1")-->Line_11 $$ md.update(in.getBytes("iso-8859-1"), 0, in.length())[ FD ]
Line_2 $$ public static String sha1(String in) -->Line_11 $$ md.update(in.getBytes("iso-8859-1"), 0, in.length())[ FD ]
Line_2 $$ public static String sha1(String in) -->Line_11 $$ md.update(in.getBytes("iso-8859-1"), 0, in.length())[ FD ]
Line_2 $$ public static String sha1(String in) -->Line_15 $$ data = md.digest()[ CD ]
Line_9 $$ byte[] data = new byte[40]-->Line_15 $$ data = md.digest()[ FD ]
Line_15 $$ data = md.digest()-->Line_15 $$ data = md.digest()[ FD ]
Line_15 $$ data = md.digest()-->Line_15 $$ data = md.digest()[ CD ]
Line_3 $$ MessageDigest md = null-->Line_15 $$ data = md.digest()[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA-1")-->Line_15 $$ data = md.digest()[ FD ]
Line_2 $$ public static String sha1(String in) -->Line_16 $$ return HexidecimalUtilities.convertFromByteArrayToHex(data)[ CD ]
Line_16 $$ return HexidecimalUtilities.convertFromByteArrayToHex(data)-->Line_16 $$ return HexidecimalUtilities.convertFromByteArrayToHex(data)[ CD ]
Line_9 $$ byte[] data = new byte[40]-->Line_16 $$ return HexidecimalUtilities.convertFromByteArrayToHex(data)[ FD ]
Line_15 $$ data = md.digest()-->Line_16 $$ return HexidecimalUtilities.convertFromByteArrayToHex(data)[ FD ]
