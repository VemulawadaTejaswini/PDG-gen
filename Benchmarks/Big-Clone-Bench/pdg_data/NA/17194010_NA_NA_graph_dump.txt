Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void compareResult(String path, String expected) throws IOException [ CD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_3 $$ if (path.length() == 0 || path.charAt(0) != '/')[ CD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_3 $$ if (path.length() == 0 || path.charAt(0) != '/')[ FD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_3 $$ if (path.length() == 0 || path.charAt(0) != '/')[ FD ]
Line_3 $$ if (path.length() == 0 || path.charAt(0) != '/')-->Line_3 $$ path = "/" + path[ CD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_3 $$ path = "/" + path[ FD ]
Line_3 $$ path = "/" + path-->Line_3 $$ path = "/" + path[ FD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_3 $$ path = "/" + path[ FD ]
Line_3 $$ path = "/" + path-->Line_3 $$ path = "/" + path[ FD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_4 $$ URL url = new URL(getBase() + path)[ CD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_5 $$ String actual = IOUtils.toString(url.openStream())[ CD ]
Line_5 $$ String actual = IOUtils.toString(url.openStream())-->Line_5 $$ String actual = IOUtils.toString(url.openStream())[ CD ]
Line_4 $$ URL url = new URL(getBase() + path)-->Line_5 $$ String actual = IOUtils.toString(url.openStream())[ FD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_6 $$ Assert.assertEquals(url.toString(), expected, actual)[ CD ]
Line_2 $$ public void compareResult(String path, String expected) throws IOException -->Line_6 $$ Assert.assertEquals(url.toString(), expected, actual)[ FD ]
Line_5 $$ String actual = IOUtils.toString(url.openStream())-->Line_6 $$ Assert.assertEquals(url.toString(), expected, actual)[ FD ]
Line_4 $$ URL url = new URL(getBase() + path)-->Line_6 $$ Assert.assertEquals(url.toString(), expected, actual)[ FD ]
