Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void addUrl(URL url) throws IOException, SAXException [ CD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_3 $$ InputStream inStream = url.openStream()[ CD ]
Line_3 $$ InputStream inStream = url.openStream()-->Line_3 $$ InputStream inStream = url.openStream()[ CD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_3 $$ InputStream inStream = url.openStream()[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_4 $$ String path = url.getPath()[ CD ]
Line_4 $$ String path = url.getPath()-->Line_4 $$ String path = url.getPath()[ CD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_4 $$ String path = url.getPath()[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_5 $$ int slashInx = path.lastIndexOf('/')[ CD ]
Line_5 $$ int slashInx = path.lastIndexOf('/')-->Line_5 $$ int slashInx = path.lastIndexOf('/')[ CD ]
Line_4 $$ String path = url.getPath()-->Line_5 $$ int slashInx = path.lastIndexOf('/')[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_6 $$ String name = path.substring(slashInx + 1)[ CD ]
Line_6 $$ String name = path.substring(slashInx + 1)-->Line_6 $$ String name = path.substring(slashInx + 1)[ CD ]
Line_4 $$ String path = url.getPath()-->Line_6 $$ String name = path.substring(slashInx + 1)[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_7 $$ Document doc = docBuild.parse(inStream)[ CD ]
Line_7 $$ Document doc = docBuild.parse(inStream)-->Line_7 $$ Document doc = docBuild.parse(inStream)[ CD ]
Line_3 $$ InputStream inStream = url.openStream()-->Line_7 $$ Document doc = docBuild.parse(inStream)[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_8 $$ Element root = doc.getDocumentElement()[ CD ]
Line_8 $$ Element root = doc.getDocumentElement()-->Line_8 $$ Element root = doc.getDocumentElement()[ CD ]
Line_7 $$ Document doc = docBuild.parse(inStream)-->Line_8 $$ Element root = doc.getDocumentElement()[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_9 $$ String rootTag = root.getTagName()[ CD ]
Line_9 $$ String rootTag = root.getTagName()-->Line_9 $$ String rootTag = root.getTagName()[ CD ]
Line_8 $$ Element root = doc.getDocumentElement()-->Line_9 $$ String rootTag = root.getTagName()[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_10 $$ if (rootTag.equals("graphml")) [ CD ]
Line_9 $$ String rootTag = root.getTagName()-->Line_10 $$ if (rootTag.equals("graphml")) [ FD ]
Line_10 $$ if (rootTag.equals("graphml")) -->Line_10 $$ if (rootTag.equals("graphml")) [ CD ]
Line_9 $$ String rootTag = root.getTagName()-->Line_10 $$ if (rootTag.equals("graphml")) [ FD ]
Line_10 $$ if (rootTag.equals("graphml")) -->Line_11 $$ NodeList graphNodes = root.getElementsByTagName("graph")[ CD ]
Line_11 $$ NodeList graphNodes = root.getElementsByTagName("graph")-->Line_11 $$ NodeList graphNodes = root.getElementsByTagName("graph")[ CD ]
Line_8 $$ Element root = doc.getDocumentElement()-->Line_11 $$ NodeList graphNodes = root.getElementsByTagName("graph")[ FD ]
Line_10 $$ if (rootTag.equals("graphml")) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ CD ]
Line_10 $$ if (rootTag.equals("graphml")) -->Line_10 $$ if (rootTag.equals("graphml")) [ CD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ CD ]
Line_11 $$ NodeList graphNodes = root.getElementsByTagName("graph")-->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_13 $$ Element elem = (Element) graphNodes.item(i)[ CD ]
Line_11 $$ NodeList graphNodes = root.getElementsByTagName("graph")-->Line_13 $$ Element elem = (Element) graphNodes.item(i)[ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_13 $$ Element elem = (Element) graphNodes.item(i)[ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_14 $$ String graphName = elem.getAttribute("id")[ CD ]
Line_14 $$ String graphName = elem.getAttribute("id")-->Line_14 $$ String graphName = elem.getAttribute("id")[ CD ]
Line_13 $$ Element elem = (Element) graphNodes.item(i)-->Line_14 $$ String graphName = elem.getAttribute("id")[ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_15 $$ if (graphName == null) [ CD ]
Line_14 $$ String graphName = elem.getAttribute("id")-->Line_15 $$ if (graphName == null) [ FD ]
Line_15 $$ if (graphName == null) -->Line_16 $$ graphName = name[ CD ]
Line_14 $$ String graphName = elem.getAttribute("id")-->Line_16 $$ graphName = name[ FD ]
Line_16 $$ graphName = name-->Line_16 $$ graphName = name[ FD ]
Line_6 $$ String name = path.substring(slashInx + 1)-->Line_16 $$ graphName = name[ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_18 $$ addStructure(new GraphSpec(graphName))[ CD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_19 $$ urlRefs.put(graphName, url)[ CD ]
Line_14 $$ String graphName = elem.getAttribute("id")-->Line_19 $$ urlRefs.put(graphName, url)[ FD ]
Line_16 $$ graphName = name-->Line_19 $$ urlRefs.put(graphName, url)[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_19 $$ urlRefs.put(graphName, url)[ FD ]
Line_10 $$ if (rootTag.equals("graphml")) -->Line_21 $$ if (rootTag.equals("tree")) [ CD ]
Line_9 $$ String rootTag = root.getTagName()-->Line_21 $$ if (rootTag.equals("tree")) [ FD ]
Line_21 $$ if (rootTag.equals("tree")) -->Line_21 $$ if (rootTag.equals("tree")) [ CD ]
Line_9 $$ String rootTag = root.getTagName()-->Line_21 $$ if (rootTag.equals("tree")) [ FD ]
Line_21 $$ if (rootTag.equals("tree")) -->Line_22 $$ addStructure(new TreeSpec(name))[ CD ]
Line_21 $$ if (rootTag.equals("tree")) -->Line_23 $$ urlRefs.put(name, url)[ CD ]
Line_6 $$ String name = path.substring(slashInx + 1)-->Line_23 $$ urlRefs.put(name, url)[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_23 $$ urlRefs.put(name, url)[ FD ]
Line_2 $$ public void addUrl(URL url) throws IOException, SAXException -->Line_27 $$ inStream.close()[ CD ]
Line_3 $$ InputStream inStream = url.openStream()-->Line_27 $$ inStream.close()[ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < graphNodes.getLength(); i++) -->Line_13 $$ Element elem = (Element) graphNodes.item(i)[ FD ]
Line_13 $$ Element elem = (Element) graphNodes.item(i)-->Line_14 $$ String graphName = elem.getAttribute("id")[ FD ]
Line_14 $$ String graphName = elem.getAttribute("id")-->Line_15 $$ if (graphName == null) [ FD ]
Line_16 $$ graphName = name-->Line_15 $$ if (graphName == null) [ FD ]
Line_14 $$ String graphName = elem.getAttribute("id")-->Line_19 $$ urlRefs.put(graphName, url)[ FD ]
Line_16 $$ graphName = name-->Line_19 $$ urlRefs.put(graphName, url)[ FD ]
