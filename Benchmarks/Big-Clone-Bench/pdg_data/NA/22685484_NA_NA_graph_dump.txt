Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) [ CD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_6 $$ if (JGloss.messages.getString("encodings.default").equals(encoding))[ FD ]
Line_6 $$ if (JGloss.messages.getString("encodings.default").equals(encoding))-->Line_6 $$ if (JGloss.messages.getString("encodings.default").equals(encoding))[ CD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_6 $$ if (JGloss.messages.getString("encodings.default").equals(encoding))[ FD ]
Line_6 $$ if (JGloss.messages.getString("encodings.default").equals(encoding))-->Line_6 $$ encoding = null[ CD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_6 $$ encoding = null[ FD ]
Line_6 $$ encoding = null-->Line_6 $$ encoding = null[ FD ]
Line_10 $$ URLConnection c = url.openConnection()-->Line_10 $$ URLConnection c = url.openConnection()[ CD ]
Line_9 $$ URL url = new URL(path)-->Line_10 $$ URLConnection c = url.openConnection()[ FD ]
Line_5 $$ int contentlength = 0-->Line_11 $$ contentlength = c.getContentLength()[ FD ]
Line_11 $$ contentlength = c.getContentLength()-->Line_11 $$ contentlength = c.getContentLength()[ FD ]
Line_11 $$ contentlength = c.getContentLength()-->Line_11 $$ contentlength = c.getContentLength()[ CD ]
Line_10 $$ URLConnection c = url.openConnection()-->Line_11 $$ contentlength = c.getContentLength()[ FD ]
Line_12 $$ String enc = c.getContentEncoding()-->Line_12 $$ String enc = c.getContentEncoding()[ CD ]
Line_10 $$ URLConnection c = url.openConnection()-->Line_12 $$ String enc = c.getContentEncoding()[ FD ]
Line_10 $$ URLConnection c = url.openConnection()-->Line_13 $$ InputStream is = new BufferedInputStream(c.getInputStream())[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_14 $$ if (encoding != null)[ FD ]
Line_6 $$ encoding = null-->Line_14 $$ if (encoding != null)[ FD ]
Line_14 $$ if (encoding != null)-->Line_14 $$ in = new InputStreamReader(is, encoding)[ CD ]
Line_4 $$ Reader in = null-->Line_14 $$ in = new InputStreamReader(is, encoding)[ FD ]
Line_14 $$ in = new InputStreamReader(is, encoding)-->Line_14 $$ in = new InputStreamReader(is, encoding)[ FD ]
Line_14 $$ if (encoding != null)-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ CD ]
Line_4 $$ Reader in = null-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ FD ]
Line_14 $$ in = new InputStreamReader(is, encoding)-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ FD ]
Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ FD ]
Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ CD ]
Line_13 $$ InputStream is = new BufferedInputStream(c.getInputStream())-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ FD ]
Line_12 $$ String enc = c.getContentEncoding()-->Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)[ FD ]
Line_14 $$ if (encoding != null)-->Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()[ CD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_6 $$ encoding = null-->Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()[ CD ]
Line_7 $$ String title = ""-->Line_18 $$ title = url.getFile()[ FD ]
Line_18 $$ title = url.getFile()-->Line_18 $$ title = url.getFile()[ FD ]
Line_18 $$ title = url.getFile()-->Line_18 $$ title = url.getFile()[ CD ]
Line_9 $$ URL url = new URL(path)-->Line_18 $$ title = url.getFile()[ FD ]
Line_7 $$ String title = ""-->Line_19 $$ if (title == null || title.length() == 0)[ FD ]
Line_18 $$ title = url.getFile()-->Line_19 $$ if (title == null || title.length() == 0)[ FD ]
Line_19 $$ if (title == null || title.length() == 0)-->Line_19 $$ title = path[ CD ]
Line_7 $$ String title = ""-->Line_19 $$ title = path[ FD ]
Line_18 $$ title = url.getFile()-->Line_19 $$ title = path[ FD ]
Line_19 $$ title = path-->Line_19 $$ title = path[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_19 $$ title = path[ FD ]
Line_5 $$ int contentlength = 0-->Line_22 $$ contentlength = (int) f.length()[ FD ]
Line_11 $$ contentlength = c.getContentLength()-->Line_22 $$ contentlength = (int) f.length()[ FD ]
Line_22 $$ contentlength = (int) f.length()-->Line_22 $$ contentlength = (int) f.length()[ FD ]
Line_21 $$ File f = new File(path)-->Line_22 $$ contentlength = (int) f.length()[ FD ]
Line_7 $$ String title = ""-->Line_23 $$ title = f.getName()[ FD ]
Line_18 $$ title = url.getFile()-->Line_23 $$ title = f.getName()[ FD ]
Line_19 $$ title = path-->Line_23 $$ title = f.getName()[ FD ]
Line_23 $$ title = f.getName()-->Line_23 $$ title = f.getName()[ FD ]
Line_23 $$ title = f.getName()-->Line_23 $$ title = f.getName()[ CD ]
Line_21 $$ File f = new File(path)-->Line_23 $$ title = f.getName()[ FD ]
Line_7 $$ String title = ""-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_18 $$ title = url.getFile()-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_19 $$ title = path-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_23 $$ title = f.getName()-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_7 $$ String title = ""-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_18 $$ title = url.getFile()-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_19 $$ title = path-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_23 $$ title = f.getName()-->Line_24 $$ if (title.toLowerCase().endsWith("htm") || title.toLowerCase().endsWith("html")) [ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_27 $$ if (encoding != null)[ FD ]
Line_6 $$ encoding = null-->Line_27 $$ if (encoding != null)[ FD ]
Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_27 $$ if (encoding != null)[ FD ]
Line_27 $$ if (encoding != null)-->Line_27 $$ in = new InputStreamReader(is, encoding)[ CD ]
Line_4 $$ Reader in = null-->Line_27 $$ in = new InputStreamReader(is, encoding)[ FD ]
Line_14 $$ in = new InputStreamReader(is, encoding)-->Line_27 $$ in = new InputStreamReader(is, encoding)[ FD ]
Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)-->Line_27 $$ in = new InputStreamReader(is, encoding)[ FD ]
Line_27 $$ in = new InputStreamReader(is, encoding)-->Line_27 $$ in = new InputStreamReader(is, encoding)[ FD ]
Line_27 $$ if (encoding != null)-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ CD ]
Line_4 $$ Reader in = null-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ FD ]
Line_14 $$ in = new InputStreamReader(is, encoding)-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ FD ]
Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ FD ]
Line_27 $$ in = new InputStreamReader(is, encoding)-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ FD ]
Line_28 $$ in = CharacterEncodingDetector.getReader(is)-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ FD ]
Line_28 $$ in = CharacterEncodingDetector.getReader(is)-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ CD ]
Line_13 $$ InputStream is = new BufferedInputStream(c.getInputStream())-->Line_28 $$ in = CharacterEncodingDetector.getReader(is)[ FD ]
Line_27 $$ if (encoding != null)-->Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()[ CD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_6 $$ encoding = null-->Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()[ FD ]
Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()[ CD ]
Line_4 $$ Reader in = null-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_14 $$ in = new InputStreamReader(is, encoding)-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_15 $$ in = CharacterEncodingDetector.getReader(is, enc)-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_27 $$ in = new InputStreamReader(is, encoding)-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_28 $$ in = CharacterEncodingDetector.getReader(is)-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_7 $$ String title = ""-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_18 $$ title = url.getFile()-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_19 $$ title = path-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_23 $$ title = f.getName()-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_5 $$ int contentlength = 0-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_11 $$ contentlength = c.getContentLength()-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_22 $$ contentlength = (int) f.length()-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_2 $$ private void importDocument(String path, boolean detectParagraphs, Parser parser, ReadingAnnotationFilter filter, String encoding) -->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_6 $$ encoding = null-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_16 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_29 $$ encoding = ((InputStreamReader) in).getEncoding()-->Line_32 $$ importFromReader(in, detectParagraphs, path, title, filter, parser, CharacterEncodingDetector.guessLength(contentlength, encoding))[ FD ]
Line_36 $$ if (model.getDocumentName() == null)-->Line_36 $$ this.dispose()[ CD ]
