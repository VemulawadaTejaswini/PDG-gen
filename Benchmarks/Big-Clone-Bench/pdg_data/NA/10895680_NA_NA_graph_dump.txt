Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private DefaultMutableTreeNode parseTree() [ CD ]
Line_5 $$ URL url = RebusHelp.class.getResource("/org/olga/rebus/gui/help/html/content.xml")-->Line_5 $$ URL url = RebusHelp.class.getResource("/org/olga/rebus/gui/help/html/content.xml")[ CD ]
Line_6 $$ InputStream is = url.openStream()-->Line_6 $$ InputStream is = url.openStream()[ CD ]
Line_5 $$ URL url = RebusHelp.class.getResource("/org/olga/rebus/gui/help/html/content.xml")-->Line_6 $$ InputStream is = url.openStream()[ FD ]
Line_7 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_7 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()[ CD ]
Line_7 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_8 $$ factory.setIgnoringComments(true)[ FD ]
Line_7 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_9 $$ factory.setValidating(false)[ FD ]
Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()-->Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()[ CD ]
Line_7 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()-->Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()[ FD ]
Line_11 $$ Document document = parser.parse(is)-->Line_11 $$ Document document = parser.parse(is)[ CD ]
Line_10 $$ DocumentBuilder parser = factory.newDocumentBuilder()-->Line_11 $$ Document document = parser.parse(is)[ FD ]
Line_6 $$ InputStream is = url.openStream()-->Line_11 $$ Document document = parser.parse(is)[ FD ]
Line_12 $$ NodeList elements = document.getElementsByTagName("help")-->Line_12 $$ NodeList elements = document.getElementsByTagName("help")[ CD ]
Line_11 $$ Document document = parser.parse(is)-->Line_12 $$ NodeList elements = document.getElementsByTagName("help")[ FD ]
Line_12 $$ NodeList elements = document.getElementsByTagName("help")-->Line_13 $$ Element element = (Element) elements.item(0)[ FD ]
Line_4 $$ DefaultMutableTreeNode root-->Line_14 $$ root = createTreeContent(element)[ FD ]
Line_14 $$ root = createTreeContent(element)-->Line_14 $$ root = createTreeContent(element)[ FD ]
Line_14 $$ root = createTreeContent(element)-->Line_14 $$ root = createTreeContent(element)[ CD ]
Line_13 $$ Element element = (Element) elements.item(0)-->Line_14 $$ root = createTreeContent(element)[ FD ]
Line_6 $$ InputStream is = url.openStream()-->Line_15 $$ is.close()[ FD ]
