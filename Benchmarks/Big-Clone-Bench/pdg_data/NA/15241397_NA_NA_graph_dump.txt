Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ String rewrittenQueryString = URLDecoder.decode(request.getRequestURI(), "UTF-8").replaceFirst("^.*?\\/(id:.*)\\/.*?$", "$1")[ CD ]
Line_3 $$ String rewrittenQueryString = URLDecoder.decode(request.getRequestURI(), "UTF-8").replaceFirst("^.*?\\/(id:.*)\\/.*?$", "$1")-->Line_3 $$ String rewrittenQueryString = URLDecoder.decode(request.getRequestURI(), "UTF-8").replaceFirst("^.*?\\/(id:.*)\\/.*?$", "$1")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ String rewrittenQueryString = URLDecoder.decode(request.getRequestURI(), "UTF-8").replaceFirst("^.*?\\/(id:.*)\\/.*?$", "$1")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ logger.debug("rewrittenQueryString: " + rewrittenQueryString)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_5 $$ URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ logger.debug("rewrittenUrl: " + rewrittenUrl.getProtocol() + "://" + rewrittenUrl.getHost() + ":" + rewrittenUrl.getPort() + rewrittenUrl.getFile())[ CD ]
Line_5 $$ URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString)-->Line_6 $$ logger.debug("rewrittenUrl: " + rewrittenUrl.getProtocol() + "://" + rewrittenUrl.getHost() + ":" + rewrittenUrl.getPort() + rewrittenUrl.getFile())[ FD ]
Line_5 $$ URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString)-->Line_6 $$ logger.debug("rewrittenUrl: " + rewrittenUrl.getProtocol() + "://" + rewrittenUrl.getHost() + ":" + rewrittenUrl.getPort() + rewrittenUrl.getFile())[ FD ]
Line_5 $$ URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString)-->Line_6 $$ logger.debug("rewrittenUrl: " + rewrittenUrl.getProtocol() + "://" + rewrittenUrl.getHost() + ":" + rewrittenUrl.getPort() + rewrittenUrl.getFile())[ FD ]
Line_5 $$ URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString)-->Line_6 $$ logger.debug("rewrittenUrl: " + rewrittenUrl.getProtocol() + "://" + rewrittenUrl.getHost() + ":" + rewrittenUrl.getPort() + rewrittenUrl.getFile())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()[ CD ]
Line_5 $$ URL rewrittenUrl = new URL(fedoraUrl + rewrittenQueryString)-->Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_8 $$ HttpURLConnection.setFollowRedirects(false)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_9 $$ httpURLConnection.connect()[ CD ]
Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()-->Line_9 $$ httpURLConnection.connect()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_10 $$ response.setStatus(httpURLConnection.getResponseCode())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_10 $$ response.setStatus(httpURLConnection.getResponseCode())[ FD ]
Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()-->Line_10 $$ response.setStatus(httpURLConnection.getResponseCode())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_11 $$ logger.debug("[status=" + httpURLConnection.getResponseCode() + "]")[ CD ]
Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()-->Line_11 $$ logger.debug("[status=" + httpURLConnection.getResponseCode() + "]")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_12 $$ logger.debug("[headers]")[ CD ]
Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()-->Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) [ FD ]
Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) -->Line_14 $$ if (header.getKey() != null) [ FD ]
Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) -->Line_15 $$ for (String value : header.getValue()) [ FD ]
Line_15 $$ for (String value : header.getValue()) -->Line_16 $$ if (value != null) [ FD ]
Line_16 $$ if (value != null) -->Line_17 $$ logger.debug(header.getKey() + ": " + value)[ CD ]
Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) -->Line_17 $$ logger.debug(header.getKey() + ": " + value)[ FD ]
Line_16 $$ if (value != null) -->Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) [ CD ]
Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) -->Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) [ CD ]
Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) -->Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) [ FD ]
Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) -->Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) [ CD ]
Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) -->Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) [ FD ]
Line_18 $$ if (!header.getKey().equals("Server") && !header.getKey().equals("Transfer-Encoding")) -->Line_19 $$ response.addHeader(header.getKey(), value)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_19 $$ response.addHeader(header.getKey(), value)[ FD ]
Line_15 $$ for (String value : header.getValue()) -->Line_19 $$ response.addHeader(header.getKey(), value)[ FD ]
Line_13 $$ for (Entry<String, List<String>> header : httpURLConnection.getHeaderFields().entrySet()) -->Line_19 $$ response.addHeader(header.getKey(), value)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_25 $$ logger.debug("[/headers]")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_26 $$ InputStream inputStream = httpURLConnection.getInputStream()[ CD ]
Line_26 $$ InputStream inputStream = httpURLConnection.getInputStream()-->Line_26 $$ InputStream inputStream = httpURLConnection.getInputStream()[ CD ]
Line_7 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) rewrittenUrl.openConnection()-->Line_26 $$ InputStream inputStream = httpURLConnection.getInputStream()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_27 $$ OutputStream outputStream = response.getOutputStream()[ CD ]
Line_27 $$ OutputStream outputStream = response.getOutputStream()-->Line_27 $$ OutputStream outputStream = response.getOutputStream()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_27 $$ OutputStream outputStream = response.getOutputStream()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_28 $$ IOUtils.copy(inputStream, outputStream)[ CD ]
Line_26 $$ InputStream inputStream = httpURLConnection.getInputStream()-->Line_28 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_27 $$ OutputStream outputStream = response.getOutputStream()-->Line_28 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
