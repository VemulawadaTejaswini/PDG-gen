Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static InputStream getInputStream(URL url) throws IOException [ CD ]
Line_2 $$ public static InputStream getInputStream(URL url) throws IOException -->Line_3 $$ if (url.getProtocol().equals("resource")) [ CD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_3 $$ if (url.getProtocol().equals("resource")) [ CD ]
Line_2 $$ public static InputStream getInputStream(URL url) throws IOException -->Line_3 $$ if (url.getProtocol().equals("resource")) [ FD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_4 $$ Resources res = SpeakReceiver._context.getResources()[ CD ]
Line_4 $$ Resources res = SpeakReceiver._context.getResources()-->Line_4 $$ Resources res = SpeakReceiver._context.getResources()[ CD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_5 $$ String resname = url.getFile()[ CD ]
Line_5 $$ String resname = url.getFile()-->Line_5 $$ String resname = url.getFile()[ CD ]
Line_2 $$ public static InputStream getInputStream(URL url) throws IOException -->Line_5 $$ String resname = url.getFile()[ FD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_6 $$ resname = resname.split("\\.[a-z0-9][ CD ]
Line_5 $$ String resname = url.getFile()-->Line_6 $$ resname = resname.split("\\.[a-z0-9][ FD ]
Line_6 $$ resname = resname.split("\\.[a-z0-9]-->Line_6 $$ resname = resname.split("\\.[a-z0-9][ FD ]
Line_5 $$ String resname = url.getFile()-->Line_6 $$ resname = resname.split("\\.[a-z0-9][ FD ]
Line_6 $$ resname = resname.split("\\.[a-z0-9]-->Line_6 $$ resname = resname.split("\\.[a-z0-9][ FD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")[ CD ]
Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")-->Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")[ CD ]
Line_4 $$ Resources res = SpeakReceiver._context.getResources()-->Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")[ FD ]
Line_5 $$ String resname = url.getFile()-->Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")[ FD ]
Line_6 $$ resname = resname.split("\\.[a-z0-9]-->Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")[ FD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_8 $$ if (id == 0) [ CD ]
Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")-->Line_8 $$ if (id == 0) [ FD ]
Line_8 $$ if (id == 0) -->Line_10 $$ return res.openRawResource(id)[ CD ]
Line_10 $$ return res.openRawResource(id)-->Line_10 $$ return res.openRawResource(id)[ CD ]
Line_4 $$ Resources res = SpeakReceiver._context.getResources()-->Line_10 $$ return res.openRawResource(id)[ FD ]
Line_7 $$ int id = res.getIdentifier(resname, "raw", "com.l1ghtm4n.text2speech")-->Line_10 $$ return res.openRawResource(id)[ FD ]
Line_3 $$ if (url.getProtocol().equals("resource")) -->Line_12 $$ return url.openStream()[ CD ]
Line_12 $$ return url.openStream()-->Line_12 $$ return url.openStream()[ CD ]
Line_2 $$ public static InputStream getInputStream(URL url) throws IOException -->Line_12 $$ return url.openStream()[ FD ]
