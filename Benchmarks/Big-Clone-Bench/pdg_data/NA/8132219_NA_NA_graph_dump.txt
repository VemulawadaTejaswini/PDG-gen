Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(String inFile, String outFile) [ CD ]
Line_2 $$ public static void copyFile(String inFile, String outFile) -->Line_3 $$ File in = new File(inFile)[ CD ]
Line_2 $$ public static void copyFile(String inFile, String outFile) -->Line_4 $$ File out = new File(outFile)[ CD ]
Line_6 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_6 $$ FileChannel inChannel = new FileInputStream(in).getChannel()[ CD ]
Line_7 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_7 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()[ CD ]
Line_6 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_7 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_6 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_9 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_6 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_11 $$ if (inChannel != null)[ FD ]
Line_11 $$ if (inChannel != null)-->Line_11 $$ inChannel.close()[ CD ]
Line_6 $$ FileChannel inChannel = new FileInputStream(in).getChannel()-->Line_11 $$ inChannel.close()[ FD ]
Line_7 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_12 $$ if (outChannel != null)[ FD ]
Line_12 $$ if (outChannel != null)-->Line_12 $$ outChannel.close()[ CD ]
Line_7 $$ FileChannel outChannel = new FileOutputStream(out).getChannel()-->Line_12 $$ outChannel.close()[ FD ]
