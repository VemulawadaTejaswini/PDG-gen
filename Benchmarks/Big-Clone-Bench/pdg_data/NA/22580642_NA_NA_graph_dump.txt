Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_3 $$ long startTime = System.currentTimeMillis()-->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ boolean validClient = true[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_5 $$ boolean validSession = false[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_6 $$ String sessionKey = req.getParameter("sid")[ CD ]
Line_6 $$ String sessionKey = req.getParameter("sid")-->Line_6 $$ String sessionKey = req.getParameter("sid")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_6 $$ String sessionKey = req.getParameter("sid")[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_7 $$ String storedKey = CLIENT_SESSION_KEYS.get(req.getRemoteAddr())[ CD ]
Line_7 $$ String storedKey = CLIENT_SESSION_KEYS.get(req.getRemoteAddr())-->Line_7 $$ String storedKey = CLIENT_SESSION_KEYS.get(req.getRemoteAddr())[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_7 $$ String storedKey = CLIENT_SESSION_KEYS.get(req.getRemoteAddr())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_8 $$ if (sessionKey != null && storedKey != null && sessionKey.equals(storedKey))[ CD ]
Line_6 $$ String sessionKey = req.getParameter("sid")-->Line_8 $$ if (sessionKey != null && storedKey != null && sessionKey.equals(storedKey))[ FD ]
Line_7 $$ String storedKey = CLIENT_SESSION_KEYS.get(req.getRemoteAddr())-->Line_8 $$ if (sessionKey != null && storedKey != null && sessionKey.equals(storedKey))[ FD ]
Line_8 $$ if (sessionKey != null && storedKey != null && sessionKey.equals(storedKey))-->Line_8 $$ validSession = true[ CD ]
Line_5 $$ boolean validSession = false-->Line_8 $$ validSession = true[ FD ]
Line_8 $$ validSession = true-->Line_8 $$ validSession = true[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_9 $$ DataStore ds = DataStore.getConnection()[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_9 $$ DataStore ds = DataStore.getConnection()[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_10 $$ if (IPV6_DETECTED) [ CD ]
Line_10 $$ if (IPV6_DETECTED) -->Line_11 $$ boolean doneWarning[ CD ]
Line_11 $$ boolean doneWarning-->Line_13 $$ doneWarning = IPV6_WARNED[ FD ]
Line_13 $$ doneWarning = IPV6_WARNED-->Line_13 $$ doneWarning = IPV6_WARNED[ FD ]
Line_10 $$ if (IPV6_DETECTED) -->Line_16 $$ if (!doneWarning)[ CD ]
Line_11 $$ boolean doneWarning-->Line_16 $$ if (!doneWarning)[ FD ]
Line_13 $$ doneWarning = IPV6_WARNED-->Line_16 $$ if (!doneWarning)[ FD ]
Line_16 $$ if (!doneWarning)-->Line_16 $$ if (!doneWarning)[ CD ]
Line_11 $$ boolean doneWarning-->Line_16 $$ if (!doneWarning)[ FD ]
Line_13 $$ doneWarning = IPV6_WARNED-->Line_16 $$ if (!doneWarning)[ FD ]
Line_16 $$ if (!doneWarning)-->Line_16 $$ LOG.warn("IPv6 interface detected; client restriction settings ignored [restrictions do not support IPv6 addresses]")[ CD ]
Line_10 $$ if (IPV6_DETECTED) -->Line_18 $$ String[] clntRestrictions = ds.getSetting("ValidClients", "").split(";")[ CD ]
Line_18 $$ String[] clntRestrictions = ds.getSetting("ValidClients", "").split(";")-->Line_18 $$ String[] clntRestrictions = ds.getSetting("ValidClients", "").split(";")[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_18 $$ String[] clntRestrictions = ds.getSetting("ValidClients", "").split(";")[ FD ]
Line_10 $$ if (IPV6_DETECTED) -->Line_19 $$ List<IPMatcher> matchers = new ArrayList<IPMatcher>()[ CD ]
Line_10 $$ if (IPV6_DETECTED) -->Line_20 $$ if (clntRestrictions.length == 1 && clntRestrictions[0].trim().length() == 0) [ CD ]
Line_20 $$ if (clntRestrictions.length == 1 && clntRestrictions[0].trim().length() == 0) -->Line_21 $$ LOG.warn("All client connections are being accepted and processed, please consider setting up client restrictions in SJQ settings")[ CD ]
Line_23 $$ for (String s : clntRestrictions) -->Line_24 $$ s = s.trim()[ FD ]
Line_24 $$ s = s.trim()-->Line_24 $$ s = s.trim()[ FD ]
Line_24 $$ s = s.trim()-->Line_24 $$ s = s.trim()[ CD ]
Line_23 $$ for (String s : clntRestrictions) -->Line_24 $$ s = s.trim()[ FD ]
Line_24 $$ s = s.trim()-->Line_24 $$ s = s.trim()[ FD ]
Line_19 $$ List<IPMatcher> matchers = new ArrayList<IPMatcher>()-->Line_26 $$ matchers.add(new IPMatcher(s))[ FD ]
Line_19 $$ List<IPMatcher> matchers = new ArrayList<IPMatcher>()-->Line_29 $$ matchers.clear()[ FD ]
Line_20 $$ if (clntRestrictions.length == 1 && clntRestrictions[0].trim().length() == 0) -->Line_33 $$ validClient = matchers.size() > 0 ? false : true[ CD ]
Line_4 $$ boolean validClient = true-->Line_33 $$ validClient = matchers.size() > 0 ? false : true[ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_33 $$ validClient = matchers.size() > 0 ? false : true[ FD ]
Line_19 $$ List<IPMatcher> matchers = new ArrayList<IPMatcher>()-->Line_33 $$ validClient = matchers.size() > 0 ? false : true[ FD ]
Line_34 $$ for (IPMatcher m : matchers) -->Line_36 $$ if (m.match(req.getRemoteAddr())) [ FD ]
Line_36 $$ if (m.match(req.getRemoteAddr())) -->Line_36 $$ if (m.match(req.getRemoteAddr())) [ CD ]
Line_34 $$ for (IPMatcher m : matchers) -->Line_36 $$ if (m.match(req.getRemoteAddr())) [ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_36 $$ if (m.match(req.getRemoteAddr())) [ FD ]
Line_36 $$ if (m.match(req.getRemoteAddr())) -->Line_37 $$ validClient = true[ CD ]
Line_4 $$ boolean validClient = true-->Line_37 $$ validClient = true[ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_37 $$ validClient = true[ FD ]
Line_37 $$ validClient = true-->Line_37 $$ validClient = true[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_46 $$ String clntProto = req.getParameter("proto")[ CD ]
Line_46 $$ String clntProto = req.getParameter("proto")-->Line_46 $$ String clntProto = req.getParameter("proto")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_46 $$ String clntProto = req.getParameter("proto")[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_47 $$ if (clntProto == null || Integer.parseInt(clntProto) != SJQ_PROTO)[ CD ]
Line_46 $$ String clntProto = req.getParameter("proto")-->Line_47 $$ if (clntProto == null || Integer.parseInt(clntProto) != SJQ_PROTO)[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_48 $$ resp.setHeader("Content-Type", "text/plain")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_48 $$ resp.setHeader("Content-Type", "text/plain")[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_49 $$ resp.setDateHeader("Expires", 0)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_49 $$ resp.setDateHeader("Expires", 0)[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_50 $$ resp.setDateHeader("Last-Modified", System.currentTimeMillis())[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_50 $$ resp.setDateHeader("Last-Modified", System.currentTimeMillis())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_51 $$ resp.setHeader("Cache-Control", "no-store, no-cache, must-revalidate")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_51 $$ resp.setHeader("Cache-Control", "no-store, no-cache, must-revalidate")[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_52 $$ resp.setHeader("Pragma", "no-cache")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_52 $$ resp.setHeader("Pragma", "no-cache")[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_53 $$ String cmd = req.getParameter("cmd")[ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_53 $$ String cmd = req.getParameter("cmd")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_53 $$ String cmd = req.getParameter("cmd")[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_54 $$ if (cmd == null) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_54 $$ if (cmd == null) [ FD ]
Line_54 $$ if (cmd == null) -->Line_55 $$ DataStore.returnConnection(ds)[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_55 $$ DataStore.returnConnection(ds)[ FD ]
Line_54 $$ if (cmd == null) -->Line_56 $$ return[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_58 $$ ActiveClientList list = ActiveClientList.getInstance()[ CD ]
Line_58 $$ ActiveClientList list = ActiveClientList.getInstance()-->Line_58 $$ ActiveClientList list = ActiveClientList.getInstance()[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_60 $$ if (cmd.equals("pop")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_60 $$ if (cmd.equals("pop")) [ FD ]
Line_60 $$ if (cmd.equals("pop")) -->Line_60 $$ if (cmd.equals("pop")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_60 $$ if (cmd.equals("pop")) [ FD ]
Line_60 $$ if (cmd.equals("pop")) -->Line_61 $$ if (!validClient) [ CD ]
Line_4 $$ boolean validClient = true-->Line_61 $$ if (!validClient) [ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_61 $$ if (!validClient) [ FD ]
Line_37 $$ validClient = true-->Line_61 $$ if (!validClient) [ FD ]
Line_61 $$ if (!validClient) -->Line_61 $$ if (!validClient) [ CD ]
Line_4 $$ boolean validClient = true-->Line_61 $$ if (!validClient) [ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_61 $$ if (!validClient) [ FD ]
Line_37 $$ validClient = true-->Line_61 $$ if (!validClient) [ FD ]
Line_61 $$ if (!validClient) -->Line_62 $$ LOG.warn("Client IP rejected: " + req.getRemoteAddr())[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_62 $$ LOG.warn("Client IP rejected: " + req.getRemoteAddr())[ FD ]
Line_61 $$ if (!validClient) -->Line_63 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_63 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_63 $$ notAuthorized(resp, bw)[ FD ]
Line_61 $$ if (!validClient) -->Line_65 $$ list.add(req.getRemoteHost())[ CD ]
Line_58 $$ ActiveClientList list = ActiveClientList.getInstance()-->Line_65 $$ list.add(req.getRemoteHost())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_65 $$ list.add(req.getRemoteHost())[ FD ]
Line_61 $$ if (!validClient) -->Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))[ FD ]
Line_61 $$ if (!validClient) -->Line_67 $$ String offDay = clnt.getGlobalOption("OFFDAY")[ CD ]
Line_67 $$ String offDay = clnt.getGlobalOption("OFFDAY")-->Line_67 $$ String offDay = clnt.getGlobalOption("OFFDAY")[ CD ]
Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))-->Line_67 $$ String offDay = clnt.getGlobalOption("OFFDAY")[ FD ]
Line_61 $$ if (!validClient) -->Line_68 $$ String offHour = clnt.getGlobalOption("OFFHOUR")[ CD ]
Line_68 $$ String offHour = clnt.getGlobalOption("OFFHOUR")-->Line_68 $$ String offHour = clnt.getGlobalOption("OFFHOUR")[ CD ]
Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))-->Line_68 $$ String offHour = clnt.getGlobalOption("OFFHOUR")[ FD ]
Line_61 $$ if (!validClient) -->Line_69 $$ Calendar now = Calendar.getInstance()[ CD ]
Line_69 $$ Calendar now = Calendar.getInstance()-->Line_69 $$ Calendar now = Calendar.getInstance()[ CD ]
Line_61 $$ if (!validClient) -->Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) [ CD ]
Line_67 $$ String offDay = clnt.getGlobalOption("OFFDAY")-->Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) [ FD ]
Line_69 $$ Calendar now = Calendar.getInstance()-->Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) [ FD ]
Line_68 $$ String offHour = clnt.getGlobalOption("OFFHOUR")-->Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) [ FD ]
Line_69 $$ Calendar now = Calendar.getInstance()-->Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) [ FD ]
Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) -->Line_71 $$ LOG.warn("Client '" + req.getRemoteAddr() + "' currently disabled via OFFDAY/OFFHOUR settings.")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_71 $$ LOG.warn("Client '" + req.getRemoteAddr() + "' currently disabled via OFFDAY/OFFHOUR settings.")[ FD ]
Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) -->Line_72 $$ bw.write("null")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_72 $$ bw.write("null")[ FD ]
Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) -->Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))[ FD ]
Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))-->Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))[ FD ]
Line_70 $$ if (RangeInterpreter.inRange(now.get(Calendar.DAY_OF_WEEK), 1, 7, offDay) || RangeInterpreter.inRange(now.get(Calendar.HOUR_OF_DAY), 0, 23, offHour)) -->Line_75 $$ if (t == null)[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_75 $$ if (t == null)[ FD ]
Line_75 $$ if (t == null)-->Line_75 $$ bw.write("null")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_75 $$ bw.write("null")[ FD ]
Line_75 $$ if (t == null)-->Line_76 $$ t.setResourcesUsed(Integer.parseInt(clnt.getTask(t.getTaskId()).getOption("RESOURCES")))[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_76 $$ t.setResourcesUsed(Integer.parseInt(clnt.getTask(t.getTaskId()).getOption("RESOURCES")))[ FD ]
Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))-->Line_76 $$ t.setResourcesUsed(Integer.parseInt(clnt.getTask(t.getTaskId()).getOption("RESOURCES")))[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_76 $$ t.setResourcesUsed(Integer.parseInt(clnt.getTask(t.getTaskId()).getOption("RESOURCES")))[ FD ]
Line_75 $$ if (t == null)-->Line_77 $$ Object obj = null[ CD ]
Line_75 $$ if (t == null)-->Line_78 $$ if (t.getObjType().equals("media"))[ CD ]
Line_78 $$ if (t.getObjType().equals("media"))-->Line_78 $$ if (t.getObjType().equals("media"))[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_78 $$ if (t.getObjType().equals("media"))[ FD ]
Line_78 $$ if (t.getObjType().equals("media"))-->Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))[ CD ]
Line_77 $$ Object obj = null-->Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))[ FD ]
Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))-->Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))[ FD ]
Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))-->Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))[ FD ]
Line_78 $$ if (t.getObjType().equals("media"))-->Line_78 $$ if (t.getObjType().equals("sysmsg"))[ CD ]
Line_78 $$ if (t.getObjType().equals("sysmsg"))-->Line_78 $$ if (t.getObjType().equals("sysmsg"))[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_78 $$ if (t.getObjType().equals("sysmsg"))[ FD ]
Line_78 $$ if (t.getObjType().equals("sysmsg"))-->Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())[ CD ]
Line_77 $$ Object obj = null-->Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())[ FD ]
Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))-->Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())[ FD ]
Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())-->Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())[ FD ]
Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())-->Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())[ FD ]
Line_75 $$ if (t == null)-->Line_79 $$ ClientTask cTask = clnt.getTask(t.getTaskId())[ CD ]
Line_79 $$ ClientTask cTask = clnt.getTask(t.getTaskId())-->Line_79 $$ ClientTask cTask = clnt.getTask(t.getTaskId())[ CD ]
Line_66 $$ ClientParser clnt = new ClientParser(new StringReader(ds.getClientConf(req.getRemoteHost())))-->Line_79 $$ ClientTask cTask = clnt.getTask(t.getTaskId())[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_79 $$ ClientTask cTask = clnt.getTask(t.getTaskId())[ FD ]
Line_75 $$ if (t == null)-->Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)[ CD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)[ CD ]
Line_79 $$ ClientTask cTask = clnt.getTask(t.getTaskId())-->Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)[ FD ]
Line_77 $$ Object obj = null-->Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)[ FD ]
Line_78 $$ obj = Butler.SageApi.mediaFileAPI.GetMediaFileForID(Integer.parseInt(t.getObjId()))-->Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)[ FD ]
Line_78 $$ obj = SystemMessageUtils.getSysMsg(t.getObjId())-->Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)[ FD ]
Line_75 $$ if (t == null)-->Line_81 $$ String objType = null[ CD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_83 $$ if (jobj != null)[ FD ]
Line_83 $$ if (jobj != null)-->Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)[ CD ]
Line_81 $$ String objType = null-->Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)[ FD ]
Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)-->Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)[ FD ]
Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)-->Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)[ CD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)[ FD ]
Line_75 $$ if (t == null)-->Line_87 $$ if (obj == null || jobj == null) [ CD ]
Line_87 $$ if (obj == null || jobj == null) -->Line_88 $$ LOG.error("Source object has disappeared! [" + t.getObjType() + "/" + t.getObjId() + "]")[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_88 $$ LOG.error("Source object has disappeared! [" + t.getObjType() + "/" + t.getObjId() + "]")[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_88 $$ LOG.error("Source object has disappeared! [" + t.getObjType() + "/" + t.getObjId() + "]")[ FD ]
Line_87 $$ if (obj == null || jobj == null) -->Line_89 $$ TaskQueue.getInstance().updateTask(t.getObjId(), t.getTaskId(), Task.State.FAILED, t.getObjType())[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_89 $$ TaskQueue.getInstance().updateTask(t.getObjId(), t.getTaskId(), Task.State.FAILED, t.getObjType())[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_89 $$ TaskQueue.getInstance().updateTask(t.getObjId(), t.getTaskId(), Task.State.FAILED, t.getObjType())[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_89 $$ TaskQueue.getInstance().updateTask(t.getObjId(), t.getTaskId(), Task.State.FAILED, t.getObjType())[ FD ]
Line_87 $$ if (obj == null || jobj == null) -->Line_90 $$ bw.write("null")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_90 $$ bw.write("null")[ FD ]
Line_87 $$ if (obj == null || jobj == null) -->Line_91 $$ if (objType.equals("media")) [ CD ]
Line_81 $$ String objType = null-->Line_91 $$ if (objType.equals("media")) [ FD ]
Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)-->Line_91 $$ if (objType.equals("media")) [ FD ]
Line_91 $$ if (objType.equals("media")) -->Line_91 $$ if (objType.equals("media")) [ CD ]
Line_81 $$ String objType = null-->Line_91 $$ if (objType.equals("media")) [ FD ]
Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)-->Line_91 $$ if (objType.equals("media")) [ FD ]
Line_93 $$ long ratio = calcRatio(jobj.getString(Task.JSON_OBJ_ID), jobj.getString(Task.JSON_NORECORDING))-->Line_93 $$ long ratio = calcRatio(jobj.getString(Task.JSON_OBJ_ID), jobj.getString(Task.JSON_NORECORDING))[ CD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_93 $$ long ratio = calcRatio(jobj.getString(Task.JSON_OBJ_ID), jobj.getString(Task.JSON_NORECORDING))[ FD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_93 $$ long ratio = calcRatio(jobj.getString(Task.JSON_OBJ_ID), jobj.getString(Task.JSON_NORECORDING))[ FD ]
Line_94 $$ if (ratio > 0 && new FieldTimeUntilNextRecording(null, "<=", ratio + "S").run()) -->Line_95 $$ LOG.info("Client '" + req.getRemoteAddr() + "' cannot pop task '" + t.getObjType() + "/" + t.getTaskId() + "/" + t.getObjId() + "'; :NORECORDING option prevents running of this task")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_95 $$ LOG.info("Client '" + req.getRemoteAddr() + "' cannot pop task '" + t.getObjType() + "/" + t.getTaskId() + "/" + t.getObjId() + "'; :NORECORDING option prevents running of this task")[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_95 $$ LOG.info("Client '" + req.getRemoteAddr() + "' cannot pop task '" + t.getObjType() + "/" + t.getTaskId() + "/" + t.getObjId() + "'; :NORECORDING option prevents running of this task")[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_95 $$ LOG.info("Client '" + req.getRemoteAddr() + "' cannot pop task '" + t.getObjType() + "/" + t.getTaskId() + "/" + t.getObjId() + "'; :NORECORDING option prevents running of this task")[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_95 $$ LOG.info("Client '" + req.getRemoteAddr() + "' cannot pop task '" + t.getObjType() + "/" + t.getTaskId() + "/" + t.getObjId() + "'; :NORECORDING option prevents running of this task")[ FD ]
Line_94 $$ if (ratio > 0 && new FieldTimeUntilNextRecording(null, "<=", ratio + "S").run()) -->Line_96 $$ TaskQueue.getInstance().pushBack(t)[ CD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_96 $$ TaskQueue.getInstance().pushBack(t)[ FD ]
Line_94 $$ if (ratio > 0 && new FieldTimeUntilNextRecording(null, "<=", ratio + "S").run()) -->Line_97 $$ bw.write("null")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_97 $$ bw.write("null")[ FD ]
Line_94 $$ if (ratio > 0 && new FieldTimeUntilNextRecording(null, "<=", ratio + "S").run()) -->Line_98 $$ bw.write(jobj.toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_98 $$ bw.write(jobj.toString())[ FD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_98 $$ bw.write(jobj.toString())[ FD ]
Line_91 $$ if (objType.equals("media")) -->Line_102 $$ bw.write(jobj.toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_102 $$ bw.write(jobj.toString())[ FD ]
Line_80 $$ JSONObject jobj = cTask.toJSONObject(obj)-->Line_102 $$ bw.write(jobj.toString())[ FD ]
Line_60 $$ if (cmd.equals("pop")) -->Line_106 $$ if (cmd.equals("update")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_106 $$ if (cmd.equals("update")) [ FD ]
Line_106 $$ if (cmd.equals("update")) -->Line_106 $$ if (cmd.equals("update")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_106 $$ if (cmd.equals("update")) [ FD ]
Line_106 $$ if (cmd.equals("update")) -->Line_107 $$ if (!validClient) [ CD ]
Line_4 $$ boolean validClient = true-->Line_107 $$ if (!validClient) [ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_107 $$ if (!validClient) [ FD ]
Line_37 $$ validClient = true-->Line_107 $$ if (!validClient) [ FD ]
Line_107 $$ if (!validClient) -->Line_107 $$ if (!validClient) [ CD ]
Line_4 $$ boolean validClient = true-->Line_107 $$ if (!validClient) [ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_107 $$ if (!validClient) [ FD ]
Line_37 $$ validClient = true-->Line_107 $$ if (!validClient) [ FD ]
Line_107 $$ if (!validClient) -->Line_108 $$ LOG.warn("Client IP rejected: " + req.getRemoteAddr())[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_108 $$ LOG.warn("Client IP rejected: " + req.getRemoteAddr())[ FD ]
Line_107 $$ if (!validClient) -->Line_109 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_109 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_109 $$ notAuthorized(resp, bw)[ FD ]
Line_107 $$ if (!validClient) -->Line_111 $$ list.add(req.getRemoteHost())[ CD ]
Line_58 $$ ActiveClientList list = ActiveClientList.getInstance()-->Line_111 $$ list.add(req.getRemoteHost())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_111 $$ list.add(req.getRemoteHost())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_113 $$ Task t = new Task(new JSONObject(req.getParameter("data")))[ FD ]
Line_74 $$ Task t = TaskQueue.getInstance().pop(req.getRemoteHost(), getPopCandidates(req.getRemoteHost(), clnt))-->Line_114 $$ TaskQueue.getInstance().updateTask(t)[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_116 $$ throw new RuntimeException("Input error; client '" + req.getRemoteHost() + "', CMD: update", e)[ FD ]
Line_106 $$ if (cmd.equals("update")) -->Line_119 $$ if (cmd.equals("showQ")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_119 $$ if (cmd.equals("showQ")) [ FD ]
Line_119 $$ if (cmd.equals("showQ")) -->Line_119 $$ if (cmd.equals("showQ")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_119 $$ if (cmd.equals("showQ")) [ FD ]
Line_119 $$ if (cmd.equals("showQ")) -->Line_120 $$ if (validSession)[ CD ]
Line_120 $$ if (validSession)-->Line_120 $$ bw.write(TaskQueue.getInstance().toJSONArray().toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_120 $$ bw.write(TaskQueue.getInstance().toJSONArray().toString())[ FD ]
Line_120 $$ if (validSession)-->Line_120 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_120 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_120 $$ notAuthorized(resp, bw)[ FD ]
Line_119 $$ if (cmd.equals("showQ")) -->Line_121 $$ if (cmd.equals("log")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_121 $$ if (cmd.equals("log")) [ FD ]
Line_121 $$ if (cmd.equals("log")) -->Line_121 $$ if (cmd.equals("log")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_121 $$ if (cmd.equals("log")) [ FD ]
Line_121 $$ if (cmd.equals("log")) -->Line_122 $$ if (validSession) [ CD ]
Line_122 $$ if (validSession) -->Line_123 $$ String mediaId = req.getParameter("m")[ CD ]
Line_123 $$ String mediaId = req.getParameter("m")-->Line_123 $$ String mediaId = req.getParameter("m")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_123 $$ String mediaId = req.getParameter("m")[ FD ]
Line_122 $$ if (validSession) -->Line_124 $$ String taskId = req.getParameter("t")[ CD ]
Line_124 $$ String taskId = req.getParameter("t")-->Line_124 $$ String taskId = req.getParameter("t")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_124 $$ String taskId = req.getParameter("t")[ FD ]
Line_122 $$ if (validSession) -->Line_125 $$ String objType = req.getParameter("o")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_125 $$ String objType = req.getParameter("o")[ FD ]
Line_122 $$ if (validSession) -->Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))[ CD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))[ CD ]
Line_123 $$ String mediaId = req.getParameter("m")-->Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))[ FD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))[ CD ]
Line_124 $$ String taskId = req.getParameter("t")-->Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))[ FD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ FD ]
Line_123 $$ String mediaId = req.getParameter("m")-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ FD ]
Line_124 $$ String taskId = req.getParameter("t")-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ FD ]
Line_81 $$ String objType = null-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ FD ]
Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)-->Line_126 $$ bw.write(ds.readLog(mediaId, taskId, objType))[ FD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_127 $$ BufferedReader r = new BufferedReader(new FileReader("sjq.log"))[ CD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_128 $$ String line[ CD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")[ CD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))[ CD ]
Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")-->Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")[ FD ]
Line_128 $$ String line-->Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")[ FD ]
Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")-->Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")[ CD ]
Line_127 $$ BufferedReader r = new BufferedReader(new FileReader("sjq.log"))-->Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")[ FD ]
Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")-->Line_129 $$ bw.write(line + "\n")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_129 $$ bw.write(line + "\n")[ FD ]
Line_126 $$ if ((mediaId != null && !mediaId.equals("0")) && (taskId != null && !taskId.equals("0")))-->Line_130 $$ r.close()[ CD ]
Line_127 $$ BufferedReader r = new BufferedReader(new FileReader("sjq.log"))-->Line_130 $$ r.close()[ FD ]
Line_122 $$ if (validSession) -->Line_132 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_132 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_132 $$ notAuthorized(resp, bw)[ FD ]
Line_121 $$ if (cmd.equals("log")) -->Line_133 $$ if (cmd.equals("appState")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_133 $$ if (cmd.equals("appState")) [ FD ]
Line_133 $$ if (cmd.equals("appState")) -->Line_133 $$ if (cmd.equals("appState")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_133 $$ if (cmd.equals("appState")) [ FD ]
Line_133 $$ if (cmd.equals("appState")) -->Line_134 $$ if (validSession)[ CD ]
Line_134 $$ if (validSession)-->Line_134 $$ bw.write(Butler.dumpAppTrace())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_134 $$ bw.write(Butler.dumpAppTrace())[ FD ]
Line_134 $$ if (validSession)-->Line_134 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_134 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_134 $$ notAuthorized(resp, bw)[ FD ]
Line_133 $$ if (cmd.equals("appState")) -->Line_135 $$ if (cmd.equals("writeLog")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_135 $$ if (cmd.equals("writeLog")) [ FD ]
Line_135 $$ if (cmd.equals("writeLog")) -->Line_135 $$ if (cmd.equals("writeLog")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_135 $$ if (cmd.equals("writeLog")) [ FD ]
Line_135 $$ if (cmd.equals("writeLog")) -->Line_136 $$ if (!validClient) [ CD ]
Line_4 $$ boolean validClient = true-->Line_136 $$ if (!validClient) [ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_136 $$ if (!validClient) [ FD ]
Line_37 $$ validClient = true-->Line_136 $$ if (!validClient) [ FD ]
Line_136 $$ if (!validClient) -->Line_136 $$ if (!validClient) [ CD ]
Line_4 $$ boolean validClient = true-->Line_136 $$ if (!validClient) [ FD ]
Line_33 $$ validClient = matchers.size() > 0 ? false : true-->Line_136 $$ if (!validClient) [ FD ]
Line_37 $$ validClient = true-->Line_136 $$ if (!validClient) [ FD ]
Line_136 $$ if (!validClient) -->Line_137 $$ LOG.warn("Client IP reject: " + req.getRemoteAddr())[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_137 $$ LOG.warn("Client IP reject: " + req.getRemoteAddr())[ FD ]
Line_136 $$ if (!validClient) -->Line_138 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_138 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_138 $$ notAuthorized(resp, bw)[ FD ]
Line_136 $$ if (!validClient) -->Line_140 $$ String mediaId = req.getParameter("m")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_140 $$ String mediaId = req.getParameter("m")[ FD ]
Line_136 $$ if (!validClient) -->Line_142 $$ if (!mediaId.equals("-1"))[ CD ]
Line_142 $$ if (!mediaId.equals("-1"))-->Line_142 $$ if (!mediaId.equals("-1"))[ CD ]
Line_142 $$ if (!mediaId.equals("-1"))-->Line_142 $$ if (!mediaId.equals("-1"))[ CD ]
Line_123 $$ String mediaId = req.getParameter("m")-->Line_142 $$ if (!mediaId.equals("-1"))[ FD ]
Line_142 $$ if (!mediaId.equals("-1"))-->Line_142 $$ taskId = req.getParameter("t")[ CD ]
Line_124 $$ String taskId = req.getParameter("t")-->Line_142 $$ taskId = req.getParameter("t")[ FD ]
Line_142 $$ taskId = req.getParameter("t")-->Line_142 $$ taskId = req.getParameter("t")[ FD ]
Line_142 $$ taskId = req.getParameter("t")-->Line_142 $$ taskId = req.getParameter("t")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_142 $$ taskId = req.getParameter("t")[ FD ]
Line_142 $$ if (!mediaId.equals("-1"))-->Line_142 $$ taskId = req.getRemoteHost()[ CD ]
Line_124 $$ String taskId = req.getParameter("t")-->Line_142 $$ taskId = req.getRemoteHost()[ FD ]
Line_142 $$ taskId = req.getParameter("t")-->Line_142 $$ taskId = req.getRemoteHost()[ FD ]
Line_142 $$ taskId = req.getRemoteHost()-->Line_142 $$ taskId = req.getRemoteHost()[ FD ]
Line_142 $$ taskId = req.getRemoteHost()-->Line_142 $$ taskId = req.getRemoteHost()[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_142 $$ taskId = req.getRemoteHost()[ FD ]
Line_136 $$ if (!validClient) -->Line_143 $$ String objType = req.getParameter("o")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_143 $$ String objType = req.getParameter("o")[ FD ]
Line_136 $$ if (!validClient) -->Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) [ CD ]
Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) -->Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) [ CD ]
Line_123 $$ String mediaId = req.getParameter("m")-->Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) [ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) [ FD ]
Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) -->Line_145 $$ LOG.info("Dropping task output as per settings")[ CD ]
Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) -->Line_146 $$ DataStore.returnConnection(ds)[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_146 $$ DataStore.returnConnection(ds)[ FD ]
Line_144 $$ if (!mediaId.equals("0") && Boolean.parseBoolean(ds.getSetting("IgnoreTaskOutput", "false"))) -->Line_147 $$ return[ CD ]
Line_136 $$ if (!validClient) -->Line_149 $$ String data = req.getParameter("data")[ CD ]
Line_149 $$ String data = req.getParameter("data")-->Line_149 $$ String data = req.getParameter("data")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_149 $$ String data = req.getParameter("data")[ FD ]
Line_136 $$ if (!validClient) -->Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")[ CD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")[ CD ]
Line_149 $$ String data = req.getParameter("data")-->Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")[ FD ]
Line_136 $$ if (!validClient) -->Line_151 $$ if (msg == null || msg.length == 1)[ CD ]
Line_151 $$ if (msg == null || msg.length == 1)-->Line_151 $$ msg = StringUtils.split(data, '\r')[ CD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_151 $$ msg = StringUtils.split(data, '\r')[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_151 $$ msg = StringUtils.split(data, '\r')[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_151 $$ msg = StringUtils.split(data, '\r')[ CD ]
Line_149 $$ String data = req.getParameter("data")-->Line_151 $$ msg = StringUtils.split(data, '\r')[ FD ]
Line_136 $$ if (!validClient) -->Line_152 $$ if (msg == null || msg.length == 1)[ CD ]
Line_152 $$ if (msg == null || msg.length == 1)-->Line_152 $$ msg = StringUtils.split(data, '\n')[ CD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_152 $$ msg = StringUtils.split(data, '\n')[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_152 $$ msg = StringUtils.split(data, '\n')[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_152 $$ msg = StringUtils.split(data, '\n')[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_152 $$ msg = StringUtils.split(data, '\n')[ CD ]
Line_149 $$ String data = req.getParameter("data")-->Line_152 $$ msg = StringUtils.split(data, '\n')[ FD ]
Line_136 $$ if (!validClient) -->Line_153 $$ long now = System.currentTimeMillis()[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_123 $$ String mediaId = req.getParameter("m")-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_124 $$ String taskId = req.getParameter("t")-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_142 $$ taskId = req.getParameter("t")-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_142 $$ taskId = req.getRemoteHost()-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_129 $$ while ((line = r.readLine()) != null) bw.write(line + "\n")-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_128 $$ String line-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_69 $$ Calendar now = Calendar.getInstance()-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_81 $$ String objType = null-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_83 $$ objType = jobj.getString(Task.JSON_OBJ_TYPE)-->Line_154 $$ ds.logForTaskClient(mediaId, taskId, line, now, objType)[ FD ]
Line_136 $$ if (!validClient) -->Line_155 $$ if (msg.length > 0)[ CD ]
Line_155 $$ if (msg.length > 0)-->Line_155 $$ ds.flushLogs()[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_155 $$ ds.flushLogs()[ FD ]
Line_135 $$ if (cmd.equals("writeLog")) -->Line_157 $$ if (cmd.equals("ruleset")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_157 $$ if (cmd.equals("ruleset")) [ FD ]
Line_157 $$ if (cmd.equals("ruleset")) -->Line_157 $$ if (cmd.equals("ruleset")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_157 $$ if (cmd.equals("ruleset")) [ FD ]
Line_157 $$ if (cmd.equals("ruleset")) -->Line_158 $$ if (validSession)[ CD ]
Line_158 $$ if (validSession)-->Line_158 $$ bw.write(ds.getSetting("ruleset", ""))[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_158 $$ bw.write(ds.getSetting("ruleset", ""))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_158 $$ bw.write(ds.getSetting("ruleset", ""))[ FD ]
Line_158 $$ if (validSession)-->Line_158 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_158 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_158 $$ notAuthorized(resp, bw)[ FD ]
Line_157 $$ if (cmd.equals("ruleset")) -->Line_159 $$ if (cmd.equals("saveRuleset")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_159 $$ if (cmd.equals("saveRuleset")) [ FD ]
Line_159 $$ if (cmd.equals("saveRuleset")) -->Line_159 $$ if (cmd.equals("saveRuleset")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_159 $$ if (cmd.equals("saveRuleset")) [ FD ]
Line_159 $$ if (cmd.equals("saveRuleset")) -->Line_160 $$ if (validSession) [ CD ]
Line_160 $$ if (validSession) -->Line_161 $$ ds.setSetting("ruleset", req.getParameter("data"))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_161 $$ ds.setSetting("ruleset", req.getParameter("data"))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_161 $$ ds.setSetting("ruleset", req.getParameter("data"))[ FD ]
Line_160 $$ if (validSession) -->Line_162 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_162 $$ bw.write("Success")[ FD ]
Line_160 $$ if (validSession) -->Line_163 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_163 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_163 $$ notAuthorized(resp, bw)[ FD ]
Line_159 $$ if (cmd.equals("saveRuleset")) -->Line_164 $$ if (cmd.equals("getClients")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_164 $$ if (cmd.equals("getClients")) [ FD ]
Line_164 $$ if (cmd.equals("getClients")) -->Line_164 $$ if (cmd.equals("getClients")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_164 $$ if (cmd.equals("getClients")) [ FD ]
Line_164 $$ if (cmd.equals("getClients")) -->Line_165 $$ if (validSession)[ CD ]
Line_165 $$ if (validSession)-->Line_165 $$ bw.write(ActiveClientList.getInstance().toJSONArray().toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_165 $$ bw.write(ActiveClientList.getInstance().toJSONArray().toString())[ FD ]
Line_165 $$ if (validSession)-->Line_165 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_165 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_165 $$ notAuthorized(resp, bw)[ FD ]
Line_164 $$ if (cmd.equals("getClients")) -->Line_166 $$ if (cmd.equals("loadClnt")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_166 $$ if (cmd.equals("loadClnt")) [ FD ]
Line_166 $$ if (cmd.equals("loadClnt")) -->Line_166 $$ if (cmd.equals("loadClnt")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_166 $$ if (cmd.equals("loadClnt")) [ FD ]
Line_166 $$ if (cmd.equals("loadClnt")) -->Line_167 $$ if (validSession)[ CD ]
Line_167 $$ if (validSession)-->Line_167 $$ bw.write(ds.getClientConf(req.getParameter("id")))[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_167 $$ bw.write(ds.getClientConf(req.getParameter("id")))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_167 $$ bw.write(ds.getClientConf(req.getParameter("id")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_167 $$ bw.write(ds.getClientConf(req.getParameter("id")))[ FD ]
Line_167 $$ if (validSession)-->Line_167 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_167 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_167 $$ notAuthorized(resp, bw)[ FD ]
Line_166 $$ if (cmd.equals("loadClnt")) -->Line_168 $$ if (cmd.equals("saveClnt")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_168 $$ if (cmd.equals("saveClnt")) [ FD ]
Line_168 $$ if (cmd.equals("saveClnt")) -->Line_168 $$ if (cmd.equals("saveClnt")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_168 $$ if (cmd.equals("saveClnt")) [ FD ]
Line_168 $$ if (cmd.equals("saveClnt")) -->Line_169 $$ if (validSession) [ CD ]
Line_169 $$ if (validSession) -->Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))[ FD ]
Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))-->Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))[ FD ]
Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))-->Line_170 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_170 $$ bw.write("Success")[ FD ]
Line_170 $$ if (ds.saveClientConf(req.getParameter("id"), req.getParameter("data")))-->Line_170 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_170 $$ bw.write("Failed")[ FD ]
Line_169 $$ if (validSession) -->Line_171 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_171 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_171 $$ notAuthorized(resp, bw)[ FD ]
Line_168 $$ if (cmd.equals("saveClnt")) -->Line_172 $$ if (cmd.equals("history")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_172 $$ if (cmd.equals("history")) [ FD ]
Line_172 $$ if (cmd.equals("history")) -->Line_172 $$ if (cmd.equals("history")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_172 $$ if (cmd.equals("history")) [ FD ]
Line_172 $$ if (cmd.equals("history")) -->Line_173 $$ if (validSession) [ CD ]
Line_173 $$ if (validSession) -->Line_174 $$ int start, limit[ CD ]
Line_174 $$ int start, limit-->Line_176 $$ start = Integer.parseInt(req.getParameter("start"))[ FD ]
Line_176 $$ start = Integer.parseInt(req.getParameter("start"))-->Line_176 $$ start = Integer.parseInt(req.getParameter("start"))[ FD ]
Line_176 $$ start = Integer.parseInt(req.getParameter("start"))-->Line_176 $$ start = Integer.parseInt(req.getParameter("start"))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_176 $$ start = Integer.parseInt(req.getParameter("start"))[ FD ]
Line_174 $$ int start, limit-->Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))[ FD ]
Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))-->Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))[ FD ]
Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))-->Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))[ FD ]
Line_174 $$ int start, limit-->Line_179 $$ start = 0[ FD ]
Line_176 $$ start = Integer.parseInt(req.getParameter("start"))-->Line_179 $$ start = 0[ FD ]
Line_179 $$ start = 0-->Line_179 $$ start = 0[ FD ]
Line_174 $$ int start, limit-->Line_180 $$ limit = -1[ FD ]
Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))-->Line_180 $$ limit = -1[ FD ]
Line_180 $$ limit = -1-->Line_180 $$ limit = -1[ FD ]
Line_180 $$ limit = -1-->Line_180 $$ limit = -1[ CD ]
Line_173 $$ if (validSession) -->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_174 $$ int start, limit-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_176 $$ start = Integer.parseInt(req.getParameter("start"))-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_179 $$ start = 0-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_174 $$ int start, limit-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_177 $$ limit = Integer.parseInt(req.getParameter("limit"))-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_180 $$ limit = -1-->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_182 $$ bw.write(ds.getJobHistory(Integer.parseInt(req.getParameter("t")), start, limit, req.getParameter("sort")).toString())[ FD ]
Line_173 $$ if (validSession) -->Line_183 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_183 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_183 $$ notAuthorized(resp, bw)[ FD ]
Line_172 $$ if (cmd.equals("history")) -->Line_184 $$ if (cmd.equals("getSrvSetting")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_184 $$ if (cmd.equals("getSrvSetting")) [ FD ]
Line_184 $$ if (cmd.equals("getSrvSetting")) -->Line_184 $$ if (cmd.equals("getSrvSetting")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_184 $$ if (cmd.equals("getSrvSetting")) [ FD ]
Line_184 $$ if (cmd.equals("getSrvSetting")) -->Line_185 $$ if (validSession)[ CD ]
Line_185 $$ if (validSession)-->Line_185 $$ bw.write(ds.getSetting(req.getParameter("var"), ""))[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_185 $$ bw.write(ds.getSetting(req.getParameter("var"), ""))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_185 $$ bw.write(ds.getSetting(req.getParameter("var"), ""))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_185 $$ bw.write(ds.getSetting(req.getParameter("var"), ""))[ FD ]
Line_185 $$ if (validSession)-->Line_185 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_185 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_185 $$ notAuthorized(resp, bw)[ FD ]
Line_184 $$ if (cmd.equals("getSrvSetting")) -->Line_186 $$ if (cmd.equals("setSrvSetting")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_186 $$ if (cmd.equals("setSrvSetting")) [ FD ]
Line_186 $$ if (cmd.equals("setSrvSetting")) -->Line_186 $$ if (cmd.equals("setSrvSetting")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_186 $$ if (cmd.equals("setSrvSetting")) [ FD ]
Line_186 $$ if (cmd.equals("setSrvSetting")) -->Line_187 $$ if (validSession) [ CD ]
Line_187 $$ if (validSession) -->Line_188 $$ ds.setSetting(req.getParameter("var"), req.getParameter("val"))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_188 $$ ds.setSetting(req.getParameter("var"), req.getParameter("val"))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_188 $$ ds.setSetting(req.getParameter("var"), req.getParameter("val"))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_188 $$ ds.setSetting(req.getParameter("var"), req.getParameter("val"))[ FD ]
Line_187 $$ if (validSession) -->Line_189 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_189 $$ bw.write("Success")[ FD ]
Line_187 $$ if (validSession) -->Line_190 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_190 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_190 $$ notAuthorized(resp, bw)[ FD ]
Line_186 $$ if (cmd.equals("setSrvSetting")) -->Line_191 $$ if (cmd.equals("setFileCleaner")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_191 $$ if (cmd.equals("setFileCleaner")) [ FD ]
Line_191 $$ if (cmd.equals("setFileCleaner")) -->Line_191 $$ if (cmd.equals("setFileCleaner")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_191 $$ if (cmd.equals("setFileCleaner")) [ FD ]
Line_191 $$ if (cmd.equals("setFileCleaner")) -->Line_192 $$ if (validSession) [ CD ]
Line_192 $$ if (validSession) -->Line_193 $$ ds.setSetting("DelRegex", req.getParameter("orphan"))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_193 $$ ds.setSetting("DelRegex", req.getParameter("orphan"))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_193 $$ ds.setSetting("DelRegex", req.getParameter("orphan"))[ FD ]
Line_192 $$ if (validSession) -->Line_194 $$ ds.setSetting("IfRegex", req.getParameter("parent"))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_194 $$ ds.setSetting("IfRegex", req.getParameter("parent"))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_194 $$ ds.setSetting("IfRegex", req.getParameter("parent"))[ FD ]
Line_192 $$ if (validSession) -->Line_195 $$ ds.setSetting("IgnoreRegex", req.getParameter("ignore"))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_195 $$ ds.setSetting("IgnoreRegex", req.getParameter("ignore"))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_195 $$ ds.setSetting("IgnoreRegex", req.getParameter("ignore"))[ FD ]
Line_192 $$ if (validSession) -->Line_196 $$ new Thread(new FileCleaner()).start()[ CD ]
Line_192 $$ if (validSession) -->Line_197 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_197 $$ bw.write("Success")[ FD ]
Line_192 $$ if (validSession) -->Line_198 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_198 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_198 $$ notAuthorized(resp, bw)[ FD ]
Line_191 $$ if (cmd.equals("setFileCleaner")) -->Line_199 $$ if (cmd.equals("getFileCleanerSettings")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_199 $$ if (cmd.equals("getFileCleanerSettings")) [ FD ]
Line_199 $$ if (cmd.equals("getFileCleanerSettings")) -->Line_199 $$ if (cmd.equals("getFileCleanerSettings")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_199 $$ if (cmd.equals("getFileCleanerSettings")) [ FD ]
Line_199 $$ if (cmd.equals("getFileCleanerSettings")) -->Line_200 $$ if (validSession) [ CD ]
Line_200 $$ if (validSession) -->Line_201 $$ bw.write(ds.getSetting("DelRegex", "") + "\n")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_201 $$ bw.write(ds.getSetting("DelRegex", "") + "\n")[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_201 $$ bw.write(ds.getSetting("DelRegex", "") + "\n")[ FD ]
Line_200 $$ if (validSession) -->Line_202 $$ bw.write(ds.getSetting("IfRegex", "") + "\n")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_202 $$ bw.write(ds.getSetting("IfRegex", "") + "\n")[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_202 $$ bw.write(ds.getSetting("IfRegex", "") + "\n")[ FD ]
Line_200 $$ if (validSession) -->Line_203 $$ bw.write(ds.getSetting("IgnoreRegex", ""))[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_203 $$ bw.write(ds.getSetting("IgnoreRegex", ""))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_203 $$ bw.write(ds.getSetting("IgnoreRegex", ""))[ FD ]
Line_200 $$ if (validSession) -->Line_204 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_204 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_204 $$ notAuthorized(resp, bw)[ FD ]
Line_199 $$ if (cmd.equals("getFileCleanerSettings")) -->Line_205 $$ if (cmd.equals("writeSrvSettings")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_205 $$ if (cmd.equals("writeSrvSettings")) [ FD ]
Line_205 $$ if (cmd.equals("writeSrvSettings")) -->Line_205 $$ if (cmd.equals("writeSrvSettings")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_205 $$ if (cmd.equals("writeSrvSettings")) [ FD ]
Line_205 $$ if (cmd.equals("writeSrvSettings")) -->Line_206 $$ if (validSession) [ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_208 $$ ds.setSettings(new JSONObject(req.getParameter("data")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_208 $$ ds.setSettings(new JSONObject(req.getParameter("data")))[ FD ]
Line_206 $$ if (validSession) -->Line_212 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_212 $$ bw.write("Success")[ FD ]
Line_206 $$ if (validSession) -->Line_213 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_213 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_213 $$ notAuthorized(resp, bw)[ FD ]
Line_205 $$ if (cmd.equals("writeSrvSettings")) -->Line_214 $$ if (cmd.equals("readSrvSettings")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_214 $$ if (cmd.equals("readSrvSettings")) [ FD ]
Line_214 $$ if (cmd.equals("readSrvSettings")) -->Line_214 $$ if (cmd.equals("readSrvSettings")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_214 $$ if (cmd.equals("readSrvSettings")) [ FD ]
Line_214 $$ if (cmd.equals("readSrvSettings")) -->Line_215 $$ if (validSession)[ CD ]
Line_215 $$ if (validSession)-->Line_215 $$ bw.write(ds.readSettings().toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_215 $$ bw.write(ds.readSettings().toString())[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_215 $$ bw.write(ds.readSettings().toString())[ FD ]
Line_215 $$ if (validSession)-->Line_215 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_215 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_215 $$ notAuthorized(resp, bw)[ FD ]
Line_214 $$ if (cmd.equals("readSrvSettings")) -->Line_216 $$ if (cmd.equals("login")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_216 $$ if (cmd.equals("login")) [ FD ]
Line_216 $$ if (cmd.equals("login")) -->Line_216 $$ if (cmd.equals("login")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_216 $$ if (cmd.equals("login")) [ FD ]
Line_216 $$ if (cmd.equals("login")) -->Line_217 $$ String pwd = ds.getSetting("password", "")[ CD ]
Line_217 $$ String pwd = ds.getSetting("password", "")-->Line_217 $$ String pwd = ds.getSetting("password", "")[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_217 $$ String pwd = ds.getSetting("password", "")[ FD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_220 $$ msg.update(req.getParameter("password").getBytes())[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_220 $$ msg.update(req.getParameter("password").getBytes())[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_220 $$ msg.update(req.getParameter("password").getBytes())[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_220 $$ msg.update(req.getParameter("password").getBytes())[ FD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_221 $$ String userPwd = new String(msg.digest())[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_221 $$ String userPwd = new String(msg.digest())[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_221 $$ String userPwd = new String(msg.digest())[ FD ]
Line_217 $$ String pwd = ds.getSetting("password", "")-->Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) [ FD ]
Line_217 $$ String pwd = ds.getSetting("password", "")-->Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) [ FD ]
Line_221 $$ String userPwd = new String(msg.digest())-->Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) [ FD ]
Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) -->Line_223 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_223 $$ bw.write("Success")[ FD ]
Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) -->Line_224 $$ int key = new java.util.Random().nextInt()[ CD ]
Line_224 $$ int key = new java.util.Random().nextInt()-->Line_224 $$ int key = new java.util.Random().nextInt()[ CD ]
Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) -->Line_225 $$ resp.addHeader("SJQ-Session-Token", Integer.toString(key))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_225 $$ resp.addHeader("SJQ-Session-Token", Integer.toString(key))[ FD ]
Line_224 $$ int key = new java.util.Random().nextInt()-->Line_225 $$ resp.addHeader("SJQ-Session-Token", Integer.toString(key))[ FD ]
Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) -->Line_226 $$ CLIENT_SESSION_KEYS.put(req.getRemoteAddr(), Integer.toString(key))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_226 $$ CLIENT_SESSION_KEYS.put(req.getRemoteAddr(), Integer.toString(key))[ FD ]
Line_224 $$ int key = new java.util.Random().nextInt()-->Line_226 $$ CLIENT_SESSION_KEYS.put(req.getRemoteAddr(), Integer.toString(key))[ FD ]
Line_222 $$ if (pwd.length() > 0 && pwd.equals(userPwd)) -->Line_227 $$ bw.write("BadPassword")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_227 $$ bw.write("BadPassword")[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_229 $$ bw.write(e.getLocalizedMessage())[ FD ]
Line_216 $$ if (cmd.equals("login")) -->Line_231 $$ if (cmd.equals("editPwd")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_231 $$ if (cmd.equals("editPwd")) [ FD ]
Line_231 $$ if (cmd.equals("editPwd")) -->Line_231 $$ if (cmd.equals("editPwd")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_231 $$ if (cmd.equals("editPwd")) [ FD ]
Line_234 $$ String curPwd = ds.getSetting("password", "")-->Line_234 $$ String curPwd = ds.getSetting("password", "")[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_234 $$ String curPwd = ds.getSetting("password", "")[ FD ]
Line_235 $$ String oldPwd = req.getParameter("old")-->Line_235 $$ String oldPwd = req.getParameter("old")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_235 $$ String oldPwd = req.getParameter("old")[ FD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_236 $$ msg.update(oldPwd.getBytes())[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_236 $$ msg.update(oldPwd.getBytes())[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_236 $$ msg.update(oldPwd.getBytes())[ FD ]
Line_235 $$ String oldPwd = req.getParameter("old")-->Line_236 $$ msg.update(oldPwd.getBytes())[ FD ]
Line_235 $$ String oldPwd = req.getParameter("old")-->Line_237 $$ oldPwd = new String(msg.digest())[ FD ]
Line_237 $$ oldPwd = new String(msg.digest())-->Line_237 $$ oldPwd = new String(msg.digest())[ FD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_237 $$ oldPwd = new String(msg.digest())[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_237 $$ oldPwd = new String(msg.digest())[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_237 $$ oldPwd = new String(msg.digest())[ FD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_238 $$ msg.reset()[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_238 $$ msg.reset()[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_238 $$ msg.reset()[ FD ]
Line_239 $$ String newPwd = req.getParameter("new")-->Line_239 $$ String newPwd = req.getParameter("new")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_239 $$ String newPwd = req.getParameter("new")[ FD ]
Line_240 $$ String confPwd = req.getParameter("conf")-->Line_240 $$ String confPwd = req.getParameter("conf")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_240 $$ String confPwd = req.getParameter("conf")[ FD ]
Line_241 $$ if (!curPwd.equals(oldPwd))-->Line_241 $$ if (!curPwd.equals(oldPwd))[ CD ]
Line_241 $$ if (!curPwd.equals(oldPwd))-->Line_241 $$ if (!curPwd.equals(oldPwd))[ CD ]
Line_234 $$ String curPwd = ds.getSetting("password", "")-->Line_241 $$ if (!curPwd.equals(oldPwd))[ FD ]
Line_235 $$ String oldPwd = req.getParameter("old")-->Line_241 $$ if (!curPwd.equals(oldPwd))[ FD ]
Line_237 $$ oldPwd = new String(msg.digest())-->Line_241 $$ if (!curPwd.equals(oldPwd))[ FD ]
Line_241 $$ if (!curPwd.equals(oldPwd))-->Line_241 $$ bw.write("BadOld")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_241 $$ bw.write("BadOld")[ FD ]
Line_241 $$ if (!curPwd.equals(oldPwd))-->Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)[ CD ]
Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)-->Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)[ CD ]
Line_239 $$ String newPwd = req.getParameter("new")-->Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)[ FD ]
Line_240 $$ String confPwd = req.getParameter("conf")-->Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)[ FD ]
Line_239 $$ String newPwd = req.getParameter("new")-->Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)[ FD ]
Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)-->Line_241 $$ bw.write("BadNew")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_241 $$ bw.write("BadNew")[ FD ]
Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)-->Line_242 $$ msg.update(newPwd.getBytes())[ CD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_242 $$ msg.update(newPwd.getBytes())[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_242 $$ msg.update(newPwd.getBytes())[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_242 $$ msg.update(newPwd.getBytes())[ FD ]
Line_239 $$ String newPwd = req.getParameter("new")-->Line_242 $$ msg.update(newPwd.getBytes())[ FD ]
Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)-->Line_243 $$ newPwd = new String(msg.digest())[ CD ]
Line_239 $$ String newPwd = req.getParameter("new")-->Line_243 $$ newPwd = new String(msg.digest())[ FD ]
Line_243 $$ newPwd = new String(msg.digest())-->Line_243 $$ newPwd = new String(msg.digest())[ FD ]
Line_150 $$ String[] msg = StringUtils.splitByWholeSeparator(data, "\r\n")-->Line_243 $$ newPwd = new String(msg.digest())[ FD ]
Line_151 $$ msg = StringUtils.split(data, '\r')-->Line_243 $$ newPwd = new String(msg.digest())[ FD ]
Line_152 $$ msg = StringUtils.split(data, '\n')-->Line_243 $$ newPwd = new String(msg.digest())[ FD ]
Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)-->Line_244 $$ ds.setSetting("password", newPwd)[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_244 $$ ds.setSetting("password", newPwd)[ FD ]
Line_239 $$ String newPwd = req.getParameter("new")-->Line_244 $$ ds.setSetting("password", newPwd)[ FD ]
Line_243 $$ newPwd = new String(msg.digest())-->Line_244 $$ ds.setSetting("password", newPwd)[ FD ]
Line_241 $$ if (!newPwd.equals(confPwd) || newPwd.length() == 0)-->Line_245 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_245 $$ bw.write("Success")[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_248 $$ bw.write(e.getLocalizedMessage())[ FD ]
Line_231 $$ if (cmd.equals("editPwd")) -->Line_250 $$ if (cmd.equals("runStats")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_250 $$ if (cmd.equals("runStats")) [ FD ]
Line_250 $$ if (cmd.equals("runStats")) -->Line_250 $$ if (cmd.equals("runStats")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_250 $$ if (cmd.equals("runStats")) [ FD ]
Line_250 $$ if (cmd.equals("runStats")) -->Line_251 $$ if (validSession) [ CD ]
Line_251 $$ if (validSession) -->Line_252 $$ JSONObject o = new JSONObject()[ CD ]
Line_252 $$ JSONObject o = new JSONObject()-->Line_254 $$ o.put("last", Long.parseLong(ds.getSetting("LastRun", "0")))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_254 $$ o.put("last", Long.parseLong(ds.getSetting("LastRun", "0")))[ FD ]
Line_252 $$ JSONObject o = new JSONObject()-->Line_255 $$ o.put("next", Long.parseLong(ds.getSetting("NextRun", "0")))[ FD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_255 $$ o.put("next", Long.parseLong(ds.getSetting("NextRun", "0")))[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_256 $$ bw.write(o.toString())[ FD ]
Line_252 $$ JSONObject o = new JSONObject()-->Line_256 $$ bw.write(o.toString())[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_258 $$ bw.write(e.getLocalizedMessage())[ FD ]
Line_251 $$ if (validSession) -->Line_260 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_260 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_260 $$ notAuthorized(resp, bw)[ FD ]
Line_250 $$ if (cmd.equals("runStats")) -->Line_261 $$ if (cmd.equals("runQLoader")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_261 $$ if (cmd.equals("runQLoader")) [ FD ]
Line_261 $$ if (cmd.equals("runQLoader")) -->Line_261 $$ if (cmd.equals("runQLoader")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_261 $$ if (cmd.equals("runQLoader")) [ FD ]
Line_261 $$ if (cmd.equals("runQLoader")) -->Line_262 $$ if (validSession) [ CD ]
Line_262 $$ if (validSession) -->Line_263 $$ Butler.wakeQueueLoader()[ CD ]
Line_262 $$ if (validSession) -->Line_264 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_264 $$ bw.write("Success")[ FD ]
Line_262 $$ if (validSession) -->Line_265 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_265 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_265 $$ notAuthorized(resp, bw)[ FD ]
Line_261 $$ if (cmd.equals("runQLoader")) -->Line_266 $$ if (cmd.equals("delActiveQ")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_266 $$ if (cmd.equals("delActiveQ")) [ FD ]
Line_266 $$ if (cmd.equals("delActiveQ")) -->Line_266 $$ if (cmd.equals("delActiveQ")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_266 $$ if (cmd.equals("delActiveQ")) [ FD ]
Line_266 $$ if (cmd.equals("delActiveQ")) -->Line_267 $$ if (validSession) [ CD ]
Line_267 $$ if (validSession) -->Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))[ CD ]
Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))-->Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))[ FD ]
Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))-->Line_268 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_268 $$ bw.write("Success")[ FD ]
Line_268 $$ if (TaskQueue.getInstance().delete(req.getParameter("m"), req.getParameter("t")))-->Line_268 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_268 $$ bw.write("Failed")[ FD ]
Line_267 $$ if (validSession) -->Line_269 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_269 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_269 $$ notAuthorized(resp, bw)[ FD ]
Line_266 $$ if (cmd.equals("delActiveQ")) -->Line_270 $$ if (cmd.equals("clearActiveQ")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_270 $$ if (cmd.equals("clearActiveQ")) [ FD ]
Line_270 $$ if (cmd.equals("clearActiveQ")) -->Line_270 $$ if (cmd.equals("clearActiveQ")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_270 $$ if (cmd.equals("clearActiveQ")) [ FD ]
Line_270 $$ if (cmd.equals("clearActiveQ")) -->Line_271 $$ if (validSession) [ CD ]
Line_271 $$ if (validSession) -->Line_272 $$ if (TaskQueue.getInstance().clear())[ CD ]
Line_272 $$ if (TaskQueue.getInstance().clear())-->Line_272 $$ if (TaskQueue.getInstance().clear())[ CD ]
Line_272 $$ if (TaskQueue.getInstance().clear())-->Line_272 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_272 $$ bw.write("Success")[ FD ]
Line_272 $$ if (TaskQueue.getInstance().clear())-->Line_272 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_272 $$ bw.write("Failed")[ FD ]
Line_271 $$ if (validSession) -->Line_273 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_273 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_273 $$ notAuthorized(resp, bw)[ FD ]
Line_270 $$ if (cmd.equals("clearActiveQ")) -->Line_274 $$ if (cmd.equals("editPri")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_274 $$ if (cmd.equals("editPri")) [ FD ]
Line_274 $$ if (cmd.equals("editPri")) -->Line_274 $$ if (cmd.equals("editPri")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_274 $$ if (cmd.equals("editPri")) [ FD ]
Line_274 $$ if (cmd.equals("editPri")) -->Line_275 $$ if (validSession) [ CD ]
Line_277 $$ int priority = Integer.parseInt(req.getParameter("p"))-->Line_277 $$ int priority = Integer.parseInt(req.getParameter("p"))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_277 $$ int priority = Integer.parseInt(req.getParameter("p"))[ FD ]
Line_277 $$ int priority = Integer.parseInt(req.getParameter("p"))-->Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))[ FD ]
Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))-->Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))[ CD ]
Line_277 $$ int priority = Integer.parseInt(req.getParameter("p"))-->Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))[ FD ]
Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))-->Line_278 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_278 $$ bw.write("Success")[ FD ]
Line_278 $$ if (TaskQueue.getInstance().editPriority(req.getParameter("m"), req.getParameter("t"), priority))-->Line_278 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_278 $$ bw.write("Failed")[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_280 $$ bw.write("Failed")[ FD ]
Line_275 $$ if (validSession) -->Line_282 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_282 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_282 $$ notAuthorized(resp, bw)[ FD ]
Line_274 $$ if (cmd.equals("editPri")) -->Line_283 $$ if (cmd.equals("clearHistory")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_283 $$ if (cmd.equals("clearHistory")) [ FD ]
Line_283 $$ if (cmd.equals("clearHistory")) -->Line_283 $$ if (cmd.equals("clearHistory")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_283 $$ if (cmd.equals("clearHistory")) [ FD ]
Line_283 $$ if (cmd.equals("clearHistory")) -->Line_284 $$ if (validSession) [ CD ]
Line_284 $$ if (validSession) -->Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))[ FD ]
Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))-->Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))[ FD ]
Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))-->Line_285 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_285 $$ bw.write("Success")[ FD ]
Line_285 $$ if (ds.clear(Integer.parseInt(req.getParameter("t"))))-->Line_285 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_285 $$ bw.write("Failed")[ FD ]
Line_284 $$ if (validSession) -->Line_286 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_286 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_286 $$ notAuthorized(resp, bw)[ FD ]
Line_283 $$ if (cmd.equals("clearHistory")) -->Line_287 $$ if (cmd.equals("delHistRow")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_287 $$ if (cmd.equals("delHistRow")) [ FD ]
Line_287 $$ if (cmd.equals("delHistRow")) -->Line_287 $$ if (cmd.equals("delHistRow")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_287 $$ if (cmd.equals("delHistRow")) [ FD ]
Line_287 $$ if (cmd.equals("delHistRow")) -->Line_288 $$ if (validSession) [ CD ]
Line_288 $$ if (validSession) -->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ FD ]
Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))-->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))[ FD ]
Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))-->Line_289 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_289 $$ bw.write("Success")[ FD ]
Line_289 $$ if (ds.delTask(req.getParameter("m"), req.getParameter("t"), Integer.parseInt(req.getParameter("y")), req.getParameter("o")))-->Line_289 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_289 $$ bw.write("Failed")[ FD ]
Line_288 $$ if (validSession) -->Line_290 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_290 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_290 $$ notAuthorized(resp, bw)[ FD ]
Line_287 $$ if (cmd.equals("delHistRow")) -->Line_291 $$ if (cmd.equals("rmLog")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_291 $$ if (cmd.equals("rmLog")) [ FD ]
Line_291 $$ if (cmd.equals("rmLog")) -->Line_291 $$ if (cmd.equals("rmLog")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_291 $$ if (cmd.equals("rmLog")) [ FD ]
Line_291 $$ if (cmd.equals("rmLog")) -->Line_292 $$ if (validSession) [ CD ]
Line_292 $$ if (validSession) -->Line_293 $$ String mid = req.getParameter("m")[ CD ]
Line_293 $$ String mid = req.getParameter("m")-->Line_293 $$ String mid = req.getParameter("m")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_293 $$ String mid = req.getParameter("m")[ FD ]
Line_292 $$ if (validSession) -->Line_294 $$ String tid = req.getParameter("t")[ CD ]
Line_294 $$ String tid = req.getParameter("t")-->Line_294 $$ String tid = req.getParameter("t")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_294 $$ String tid = req.getParameter("t")[ FD ]
Line_292 $$ if (validSession) -->Line_295 $$ String oid = req.getParameter("o")[ CD ]
Line_295 $$ String oid = req.getParameter("o")-->Line_295 $$ String oid = req.getParameter("o")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_295 $$ String oid = req.getParameter("o")[ FD ]
Line_292 $$ if (validSession) -->Line_296 $$ if (mid.equals("0") && tid.equals("0") && oid.equals("null")) [ CD ]
Line_293 $$ String mid = req.getParameter("m")-->Line_296 $$ if (mid.equals("0") && tid.equals("0") && oid.equals("null")) [ FD ]
Line_294 $$ String tid = req.getParameter("t")-->Line_296 $$ if (mid.equals("0") && tid.equals("0") && oid.equals("null")) [ FD ]
Line_295 $$ String oid = req.getParameter("o")-->Line_296 $$ if (mid.equals("0") && tid.equals("0") && oid.equals("null")) [ FD ]
Line_296 $$ if (mid.equals("0") && tid.equals("0") && oid.equals("null")) -->Line_297 $$ bw.write("Failed: Can't delete server log file (sjq.log) while SageTV is running!")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_297 $$ bw.write("Failed: Can't delete server log file (sjq.log) while SageTV is running!")[ FD ]
Line_296 $$ if (mid.equals("0") && tid.equals("0") && oid.equals("null")) -->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_293 $$ String mid = req.getParameter("m")-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_294 $$ String tid = req.getParameter("t")-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_295 $$ String oid = req.getParameter("o")-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_298 $$ if (ds.clearLog(mid, tid, oid))-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_293 $$ String mid = req.getParameter("m")-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_294 $$ String tid = req.getParameter("t")-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_295 $$ String oid = req.getParameter("o")-->Line_298 $$ if (ds.clearLog(mid, tid, oid))[ FD ]
Line_298 $$ if (ds.clearLog(mid, tid, oid))-->Line_298 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_298 $$ bw.write("Success")[ FD ]
Line_298 $$ if (ds.clearLog(mid, tid, oid))-->Line_298 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_298 $$ bw.write("Failed")[ FD ]
Line_292 $$ if (validSession) -->Line_299 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_299 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_299 $$ notAuthorized(resp, bw)[ FD ]
Line_291 $$ if (cmd.equals("rmLog")) -->Line_300 $$ if (cmd.equals("qryMediaFile")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_300 $$ if (cmd.equals("qryMediaFile")) [ FD ]
Line_300 $$ if (cmd.equals("qryMediaFile")) -->Line_300 $$ if (cmd.equals("qryMediaFile")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_300 $$ if (cmd.equals("qryMediaFile")) [ FD ]
Line_300 $$ if (cmd.equals("qryMediaFile")) -->Line_301 $$ if (validSession) [ CD ]
Line_301 $$ if (validSession) -->Line_302 $$ JSONArray jarr = new JSONArray()[ CD ]
Line_301 $$ if (validSession) -->Line_303 $$ MediaFileAPI.List mediaList = Butler.SageApi.mediaFileAPI.GetMediaFiles(ds.getMediaMask())[ CD ]
Line_303 $$ MediaFileAPI.List mediaList = Butler.SageApi.mediaFileAPI.GetMediaFiles(ds.getMediaMask())-->Line_303 $$ MediaFileAPI.List mediaList = Butler.SageApi.mediaFileAPI.GetMediaFiles(ds.getMediaMask())[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_303 $$ MediaFileAPI.List mediaList = Butler.SageApi.mediaFileAPI.GetMediaFiles(ds.getMediaMask())[ FD ]
Line_301 $$ if (validSession) -->Line_304 $$ String qry = req.getParameter("q")[ CD ]
Line_304 $$ String qry = req.getParameter("q")-->Line_304 $$ String qry = req.getParameter("q")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_304 $$ String qry = req.getParameter("q")[ FD ]
Line_301 $$ if (validSession) -->Line_305 $$ int max = Integer.parseInt(req.getParameter("m"))[ CD ]
Line_305 $$ int max = Integer.parseInt(req.getParameter("m"))-->Line_305 $$ int max = Integer.parseInt(req.getParameter("m"))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_305 $$ int max = Integer.parseInt(req.getParameter("m"))[ FD ]
Line_304 $$ String qry = req.getParameter("q")-->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_304 $$ String qry = req.getParameter("q")-->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_304 $$ String qry = req.getParameter("q")-->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_304 $$ String qry = req.getParameter("q")-->Line_307 $$ if ((qry.matches("\\d+") && Integer.toString(mf.GetMediaFileID()).startsWith(qry)) || mf.GetMediaTitle().matches(".*" + Pattern.quote(qry) + ".*") || fileSegmentMatches(mf, qry)) [ FD ]
Line_252 $$ JSONObject o = new JSONObject()-->Line_310 $$ o.put("value", mf.GetFileForSegment(0).getAbsolutePath())[ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_310 $$ o.put("value", mf.GetFileForSegment(0).getAbsolutePath())[ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_312 $$ if (mf.GetMediaFileAiring() != null && mf.GetMediaFileAiring().GetShow() != null)[ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_312 $$ if (mf.GetMediaFileAiring() != null && mf.GetMediaFileAiring().GetShow() != null)[ FD ]
Line_312 $$ if (mf.GetMediaFileAiring() != null && mf.GetMediaFileAiring().GetShow() != null)-->Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()[ CD ]
Line_311 $$ String subtitle = null-->Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()[ FD ]
Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()-->Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()[ FD ]
Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()-->Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()[ CD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()[ FD ]
Line_311 $$ String subtitle = null-->Line_314 $$ if (subtitle != null && subtitle.length() > 0)[ FD ]
Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()-->Line_314 $$ if (subtitle != null && subtitle.length() > 0)[ FD ]
Line_314 $$ if (subtitle != null && subtitle.length() > 0)-->Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle[ CD ]
Line_313 $$ String display-->Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle[ FD ]
Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle-->Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle[ FD ]
Line_311 $$ String subtitle = null-->Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle[ FD ]
Line_312 $$ subtitle = mf.GetMediaFileAiring().GetShow().GetShowEpisode()-->Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle[ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle[ FD ]
Line_314 $$ if (subtitle != null && subtitle.length() > 0)-->Line_314 $$ display = mf.GetMediaTitle()[ CD ]
Line_313 $$ String display-->Line_314 $$ display = mf.GetMediaTitle()[ FD ]
Line_314 $$ display = mf.GetMediaTitle() + ": " + subtitle-->Line_314 $$ display = mf.GetMediaTitle()[ FD ]
Line_314 $$ display = mf.GetMediaTitle()-->Line_314 $$ display = mf.GetMediaTitle()[ FD ]
Line_314 $$ display = mf.GetMediaTitle()-->Line_314 $$ display = mf.GetMediaTitle()[ CD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_314 $$ display = mf.GetMediaTitle()[ FD ]
Line_252 $$ JSONObject o = new JSONObject()-->Line_315 $$ o.put("display", mf.GetMediaFileID() + " - " + display)[ FD ]
Line_306 $$ for (MediaFileAPI.MediaFile mf : mediaList) -->Line_315 $$ o.put("display", mf.GetMediaFileID() + " - " + display)[ FD ]
Line_302 $$ JSONArray jarr = new JSONArray()-->Line_316 $$ jarr.put(o)[ FD ]
Line_252 $$ JSONObject o = new JSONObject()-->Line_316 $$ jarr.put(o)[ FD ]
Line_305 $$ int max = Integer.parseInt(req.getParameter("m"))-->Line_317 $$ if (jarr.length() >= max)[ FD ]
Line_302 $$ JSONArray jarr = new JSONArray()-->Line_317 $$ if (jarr.length() >= max)[ FD ]
Line_301 $$ if (validSession) -->Line_323 $$ bw.write(jarr.toString())[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_323 $$ bw.write(jarr.toString())[ FD ]
Line_302 $$ JSONArray jarr = new JSONArray()-->Line_323 $$ bw.write(jarr.toString())[ FD ]
Line_301 $$ if (validSession) -->Line_324 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_324 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_324 $$ notAuthorized(resp, bw)[ FD ]
Line_300 $$ if (cmd.equals("qryMediaFile")) -->Line_325 $$ if (cmd.equals("debugMediaFile")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_325 $$ if (cmd.equals("debugMediaFile")) [ FD ]
Line_325 $$ if (cmd.equals("debugMediaFile")) -->Line_325 $$ if (cmd.equals("debugMediaFile")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_325 $$ if (cmd.equals("debugMediaFile")) [ FD ]
Line_325 $$ if (cmd.equals("debugMediaFile")) -->Line_326 $$ if (validSession) [ CD ]
Line_326 $$ if (validSession) -->Line_327 $$ if (Butler.debugQueueLoader(req.getParameter("f")))[ CD ]
Line_327 $$ if (Butler.debugQueueLoader(req.getParameter("f")))-->Line_327 $$ if (Butler.debugQueueLoader(req.getParameter("f")))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_327 $$ if (Butler.debugQueueLoader(req.getParameter("f")))[ FD ]
Line_327 $$ if (Butler.debugQueueLoader(req.getParameter("f")))-->Line_327 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_327 $$ bw.write("Success")[ FD ]
Line_327 $$ if (Butler.debugQueueLoader(req.getParameter("f")))-->Line_327 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_327 $$ bw.write("Failed")[ FD ]
Line_326 $$ if (validSession) -->Line_328 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_328 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_328 $$ notAuthorized(resp, bw)[ FD ]
Line_325 $$ if (cmd.equals("debugMediaFile")) -->Line_329 $$ if (cmd.equals("killTask")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_329 $$ if (cmd.equals("killTask")) [ FD ]
Line_329 $$ if (cmd.equals("killTask")) -->Line_329 $$ if (cmd.equals("killTask")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_329 $$ if (cmd.equals("killTask")) [ FD ]
Line_329 $$ if (cmd.equals("killTask")) -->Line_330 $$ if (validSession) [ CD ]
Line_330 $$ if (validSession) -->Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))[ CD ]
Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))-->Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))[ FD ]
Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))-->Line_331 $$ bw.write("Success")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_331 $$ bw.write("Success")[ FD ]
Line_331 $$ if (TaskQueue.getInstance().killTask(req.getParameter("m"), req.getParameter("t"), req.getParameter("o")))-->Line_331 $$ bw.write("Failed")[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_331 $$ bw.write("Failed")[ FD ]
Line_330 $$ if (validSession) -->Line_332 $$ notAuthorized(resp, bw)[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_332 $$ notAuthorized(resp, bw)[ FD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_332 $$ notAuthorized(resp, bw)[ FD ]
Line_329 $$ if (cmd.equals("killTask")) -->Line_333 $$ if (cmd.equals("keepAlive")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_333 $$ if (cmd.equals("keepAlive")) [ FD ]
Line_333 $$ if (cmd.equals("keepAlive")) -->Line_333 $$ if (cmd.equals("keepAlive")) [ CD ]
Line_53 $$ String cmd = req.getParameter("cmd")-->Line_333 $$ if (cmd.equals("keepAlive")) [ FD ]
Line_333 $$ if (cmd.equals("keepAlive")) -->Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))[ FD ]
Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))-->Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_334 $$ bw.write(Boolean.toString(!TaskQueue.getInstance().isTaskKilled(req.getParameter("m"), req.getParameter("t"), req.getParameter("o"))))[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_336 $$ bw.close()[ CD ]
Line_59 $$ BufferedWriter bw = new BufferedWriter(resp.getWriter())-->Line_336 $$ bw.close()[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_337 $$ DataStore.returnConnection(ds)[ CD ]
Line_9 $$ DataStore ds = DataStore.getConnection()-->Line_337 $$ DataStore.returnConnection(ds)[ FD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_338 $$ LOG.info("Servlet POST request completed [" + (System.currentTimeMillis() - startTime) + "ms]")[ CD ]
Line_2 $$ protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_339 $$ return[ CD ]
