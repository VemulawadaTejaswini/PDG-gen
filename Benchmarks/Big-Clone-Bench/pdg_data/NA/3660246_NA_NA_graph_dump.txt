Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Object query(String json) throws IOException, ParseException [ CD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_3 $$ String envelope = "[ CD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_4 $$ String urlStr = MQLREADURL + "?queries=" + URLEncoder.encode(envelope, "UTF-8")[ CD ]
Line_3 $$ String envelope = "-->Line_4 $$ String urlStr = MQLREADURL + "?queries=" + URLEncoder.encode(envelope, "UTF-8")[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_5 $$ if (isDebugging()) [ CD ]
Line_5 $$ if (isDebugging()) -->Line_5 $$ if (isDebugging()) [ CD ]
Line_5 $$ if (isDebugging()) -->Line_6 $$ if (echoRequest)[ CD ]
Line_6 $$ if (echoRequest)-->Line_6 $$ System.err.println("Sending:" + envelope)[ CD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_8 $$ URL url = new URL(urlStr)[ CD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_9 $$ URLConnection con = url.openConnection()[ CD ]
Line_9 $$ URLConnection con = url.openConnection()-->Line_9 $$ URLConnection con = url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(urlStr)-->Line_9 $$ URLConnection con = url.openConnection()[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_10 $$ con.setRequestProperty("Cookie", COOKIE + "=" + "\"" + getMetawebCookie() + "\"")[ CD ]
Line_9 $$ URLConnection con = url.openConnection()-->Line_10 $$ con.setRequestProperty("Cookie", COOKIE + "=" + "\"" + getMetawebCookie() + "\"")[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_11 $$ con.connect()[ CD ]
Line_9 $$ URLConnection con = url.openConnection()-->Line_11 $$ con.connect()[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_12 $$ InputStream in = con.getInputStream()[ CD ]
Line_12 $$ InputStream in = con.getInputStream()-->Line_12 $$ InputStream in = con.getInputStream()[ CD ]
Line_9 $$ URLConnection con = url.openConnection()-->Line_12 $$ InputStream in = con.getInputStream()[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_13 $$ Object item = new JSONParser(echoRequest ? new EchoReader(in) : in).object()[ CD ]
Line_13 $$ Object item = new JSONParser(echoRequest ? new EchoReader(in) : in).object()-->Line_13 $$ Object item = new JSONParser(echoRequest ? new EchoReader(in) : in).object()[ CD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_14 $$ in.close()[ CD ]
Line_12 $$ InputStream in = con.getInputStream()-->Line_14 $$ in.close()[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_15 $$ String code = getString(item, "code")[ CD ]
Line_15 $$ String code = getString(item, "code")-->Line_15 $$ String code = getString(item, "code")[ CD ]
Line_13 $$ Object item = new JSONParser(echoRequest ? new EchoReader(in) : in).object()-->Line_15 $$ String code = getString(item, "code")[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_16 $$ if (!"/api/status/ok".equals(code)) [ CD ]
Line_16 $$ if (!"/api/status/ok".equals(code)) -->Line_16 $$ if (!"/api/status/ok".equals(code)) [ CD ]
Line_16 $$ if (!"/api/status/ok".equals(code)) -->Line_16 $$ if (!"/api/status/ok".equals(code)) [ CD ]
Line_15 $$ String code = getString(item, "code")-->Line_16 $$ if (!"/api/status/ok".equals(code)) [ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_19 $$ code = getString(item, "qname1.code")[ CD ]
Line_15 $$ String code = getString(item, "code")-->Line_19 $$ code = getString(item, "qname1.code")[ FD ]
Line_19 $$ code = getString(item, "qname1.code")-->Line_19 $$ code = getString(item, "qname1.code")[ FD ]
Line_19 $$ code = getString(item, "qname1.code")-->Line_19 $$ code = getString(item, "qname1.code")[ CD ]
Line_13 $$ Object item = new JSONParser(echoRequest ? new EchoReader(in) : in).object()-->Line_19 $$ code = getString(item, "qname1.code")[ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_20 $$ if (!"/api/status/ok".equals(code)) [ CD ]
Line_20 $$ if (!"/api/status/ok".equals(code)) -->Line_20 $$ if (!"/api/status/ok".equals(code)) [ CD ]
Line_20 $$ if (!"/api/status/ok".equals(code)) -->Line_20 $$ if (!"/api/status/ok".equals(code)) [ CD ]
Line_15 $$ String code = getString(item, "code")-->Line_20 $$ if (!"/api/status/ok".equals(code)) [ FD ]
Line_19 $$ code = getString(item, "qname1.code")-->Line_20 $$ if (!"/api/status/ok".equals(code)) [ FD ]
Line_2 $$ private Object query(String json) throws IOException, ParseException -->Line_23 $$ return item[ CD ]
