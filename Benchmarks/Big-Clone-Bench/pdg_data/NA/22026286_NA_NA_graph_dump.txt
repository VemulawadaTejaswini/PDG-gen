Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ int i, j, l[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ short NUMNUMBERS = 100[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ short numbers[] = new short[NUMNUMBERS][ CD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ printIntro()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ int time = (int) System.currentTimeMillis()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_3 $$ int i, j, l-->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_4 $$ short NUMNUMBERS = 100-->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_3 $$ int i, j, l-->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_3 $$ int i, j, l-->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_9 $$ numbers[i] = (short) (NUMNUMBERS - 1 - i)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_3 $$ int i, j, l-->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_4 $$ short NUMNUMBERS = 100-->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_3 $$ int i, j, l-->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_3 $$ int i, j, l-->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ CD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ CD ]
Line_3 $$ int i, j, l-->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ CD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_3 $$ int i, j, l-->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ CD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_3 $$ int i, j, l-->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_13 $$ if (numbers[j] > numbers[j + 1]) [ CD ]
Line_13 $$ if (numbers[j] > numbers[j + 1]) -->Line_14 $$ short temp = numbers[j][ CD ]
Line_13 $$ if (numbers[j] > numbers[j + 1]) -->Line_15 $$ numbers[j] = numbers[j + 1][ CD ]
Line_13 $$ if (numbers[j] > numbers[j + 1]) -->Line_16 $$ numbers[j + 1] = temp[ CD ]
Line_14 $$ short temp = numbers[j]-->Line_16 $$ numbers[j + 1] = temp[ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_19 $$ if (WANT_PROGRESS) [ CD ]
Line_19 $$ if (WANT_PROGRESS) -->Line_20 $$ printProgress()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_23 $$ time = (int) System.currentTimeMillis() - time[ CD ]
Line_7 $$ int time = (int) System.currentTimeMillis()-->Line_23 $$ time = (int) System.currentTimeMillis() - time[ FD ]
Line_23 $$ time = (int) System.currentTimeMillis() - time-->Line_23 $$ time = (int) System.currentTimeMillis() - time[ FD ]
Line_7 $$ int time = (int) System.currentTimeMillis()-->Line_23 $$ time = (int) System.currentTimeMillis() - time[ FD ]
Line_23 $$ time = (int) System.currentTimeMillis() - time-->Line_23 $$ time = (int) System.currentTimeMillis() - time[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_24 $$ System.out.print(time)[ CD ]
Line_7 $$ int time = (int) System.currentTimeMillis()-->Line_24 $$ System.out.print(time)[ FD ]
Line_23 $$ time = (int) System.currentTimeMillis() - time-->Line_24 $$ System.out.print(time)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_25 $$ System.out.print("End\n")[ CD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_8 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) -->Line_11 $$ for (i = 0; i < NUMNUMBERS; i++) [ FD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) -->Line_12 $$ for (j = 0; j < NUMNUMBERS - i - 1; j++) [ FD ]
Line_14 $$ short temp = numbers[j]-->Line_16 $$ numbers[j + 1] = temp[ FD ]
