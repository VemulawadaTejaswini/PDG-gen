Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException [ CD ]
Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException -->Line_3 $$ log.info("Copying natives from " + jarPath.getName())[ CD ]
Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException -->Line_3 $$ log.info("Copying natives from " + jarPath.getName())[ FD ]
Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException -->Line_4 $$ JarFile jar = new JarFile(jarPath)[ CD ]
Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException -->Line_5 $$ Enumeration<JarEntry> entries = jar.entries()[ CD ]
Line_5 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_5 $$ Enumeration<JarEntry> entries = jar.entries()[ CD ]
Line_4 $$ JarFile jar = new JarFile(jarPath)-->Line_5 $$ Enumeration<JarEntry> entries = jar.entries()[ FD ]
Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException -->Line_6 $$ while (entries.hasMoreElements()) [ CD ]
Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException -->Line_2 $$ public void copyJarContent(File jarPath, File targetDir) throws IOException [ CD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_6 $$ while (entries.hasMoreElements()) [ CD ]
Line_5 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_6 $$ while (entries.hasMoreElements()) [ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_7 $$ JarEntry file = entries.nextElement()[ CD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_7 $$ JarEntry file = entries.nextElement()[ CD ]
Line_5 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_7 $$ JarEntry file = entries.nextElement()[ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_8 $$ File f = new File(targetDir, file.getName())[ CD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_8 $$ File f = new File(targetDir, file.getName())[ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_9 $$ log.info("Copying native - " + file.getName())[ CD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_9 $$ log.info("Copying native - " + file.getName())[ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_10 $$ File parentFile = f.getParentFile()[ CD ]
Line_10 $$ File parentFile = f.getParentFile()-->Line_10 $$ File parentFile = f.getParentFile()[ CD ]
Line_8 $$ File f = new File(targetDir, file.getName())-->Line_10 $$ File parentFile = f.getParentFile()[ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_11 $$ parentFile.mkdirs()[ CD ]
Line_10 $$ File parentFile = f.getParentFile()-->Line_11 $$ parentFile.mkdirs()[ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_12 $$ if (file.isDirectory()) [ CD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_12 $$ if (file.isDirectory()) [ FD ]
Line_12 $$ if (file.isDirectory()) -->Line_12 $$ if (file.isDirectory()) [ CD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_12 $$ if (file.isDirectory()) [ FD ]
Line_12 $$ if (file.isDirectory()) -->Line_13 $$ f.mkdir()[ CD ]
Line_8 $$ File f = new File(targetDir, file.getName())-->Line_13 $$ f.mkdir()[ FD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_16 $$ InputStream is = null[ CD ]
Line_6 $$ while (entries.hasMoreElements()) -->Line_17 $$ FileOutputStream fos = null[ CD ]
Line_16 $$ InputStream is = null-->Line_19 $$ is = jar.getInputStream(file)[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_19 $$ is = jar.getInputStream(file)[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_19 $$ is = jar.getInputStream(file)[ CD ]
Line_4 $$ JarFile jar = new JarFile(jarPath)-->Line_19 $$ is = jar.getInputStream(file)[ FD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_19 $$ is = jar.getInputStream(file)[ FD ]
Line_17 $$ FileOutputStream fos = null-->Line_20 $$ fos = new FileOutputStream(f)[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_20 $$ fos = new FileOutputStream(f)[ FD ]
Line_16 $$ InputStream is = null-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_17 $$ FileOutputStream fos = null-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_17 $$ FileOutputStream fos = null-->Line_23 $$ if (fos != null)[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_23 $$ if (fos != null)[ FD ]
Line_23 $$ if (fos != null)-->Line_23 $$ fos.close()[ CD ]
Line_17 $$ FileOutputStream fos = null-->Line_23 $$ fos.close()[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_23 $$ fos.close()[ FD ]
Line_16 $$ InputStream is = null-->Line_24 $$ if (is != null)[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_24 $$ if (is != null)[ FD ]
Line_24 $$ if (is != null)-->Line_24 $$ is.close()[ CD ]
Line_16 $$ InputStream is = null-->Line_24 $$ is.close()[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_24 $$ is.close()[ FD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_8 $$ File f = new File(targetDir, file.getName())[ FD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_9 $$ log.info("Copying native - " + file.getName())[ FD ]
Line_8 $$ File f = new File(targetDir, file.getName())-->Line_10 $$ File parentFile = f.getParentFile()[ FD ]
Line_10 $$ File parentFile = f.getParentFile()-->Line_11 $$ parentFile.mkdirs()[ FD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_12 $$ if (file.isDirectory()) [ FD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_12 $$ if (file.isDirectory()) [ FD ]
Line_8 $$ File f = new File(targetDir, file.getName())-->Line_13 $$ f.mkdir()[ FD ]
Line_7 $$ JarEntry file = entries.nextElement()-->Line_19 $$ is = jar.getInputStream(file)[ FD ]
Line_16 $$ InputStream is = null-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_17 $$ FileOutputStream fos = null-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_21 $$ IOUtils.copy(is, fos)[ FD ]
Line_17 $$ FileOutputStream fos = null-->Line_23 $$ if (fos != null)[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_23 $$ if (fos != null)[ FD ]
Line_17 $$ FileOutputStream fos = null-->Line_23 $$ fos.close()[ FD ]
Line_20 $$ fos = new FileOutputStream(f)-->Line_23 $$ fos.close()[ FD ]
Line_16 $$ InputStream is = null-->Line_24 $$ if (is != null)[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_24 $$ if (is != null)[ FD ]
Line_16 $$ InputStream is = null-->Line_24 $$ is.close()[ FD ]
Line_19 $$ is = jar.getInputStream(file)-->Line_24 $$ is.close()[ FD ]
