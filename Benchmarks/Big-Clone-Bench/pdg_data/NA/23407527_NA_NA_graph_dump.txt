Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void downgradeHistory(Collection<String> versions) [ CD ]
Line_2 $$ protected void downgradeHistory(Collection<String> versions) -->Line_3 $$ Assert.notEmpty(versions)[ CD ]
Line_2 $$ protected void downgradeHistory(Collection<String> versions) -->Line_3 $$ Assert.notEmpty(versions)[ FD ]
Line_5 $$ Connection connection = this.database.getDefaultConnection()-->Line_5 $$ Connection connection = this.database.getDefaultConnection()[ CD ]
Line_6 $$ PreparedStatement statement = connection.prepareStatement("UPDATE " + this.logTableName + " SET RESULT = 'DOWNGRADED' WHERE TYPE = 'B' AND TARGET = ? AND RESULT = 'COMPLETE'")-->Line_6 $$ PreparedStatement statement = connection.prepareStatement("UPDATE " + this.logTableName + " SET RESULT = 'DOWNGRADED' WHERE TYPE = 'B' AND TARGET = ? AND RESULT = 'COMPLETE'")[ CD ]
Line_5 $$ Connection connection = this.database.getDefaultConnection()-->Line_6 $$ PreparedStatement statement = connection.prepareStatement("UPDATE " + this.logTableName + " SET RESULT = 'DOWNGRADED' WHERE TYPE = 'B' AND TARGET = ? AND RESULT = 'COMPLETE'")[ FD ]
Line_6 $$ PreparedStatement statement = connection.prepareStatement("UPDATE " + this.logTableName + " SET RESULT = 'DOWNGRADED' WHERE TYPE = 'B' AND TARGET = ? AND RESULT = 'COMPLETE'")-->Line_10 $$ statement.setString(1, version)[ FD ]
Line_9 $$ for (String version : versions) -->Line_10 $$ statement.setString(1, version)[ FD ]
Line_11 $$ int modified = statement.executeUpdate()-->Line_11 $$ int modified = statement.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement statement = connection.prepareStatement("UPDATE " + this.logTableName + " SET RESULT = 'DOWNGRADED' WHERE TYPE = 'B' AND TARGET = ? AND RESULT = 'COMPLETE'")-->Line_11 $$ int modified = statement.executeUpdate()[ FD ]
Line_7 $$ boolean commit = false-->Line_14 $$ commit = true[ FD ]
Line_14 $$ commit = true-->Line_14 $$ commit = true[ FD ]
Line_6 $$ PreparedStatement statement = connection.prepareStatement("UPDATE " + this.logTableName + " SET RESULT = 'DOWNGRADED' WHERE TYPE = 'B' AND TARGET = ? AND RESULT = 'COMPLETE'")-->Line_16 $$ statement.close()[ FD ]
Line_17 $$ if (commit)-->Line_17 $$ connection.commit()[ CD ]
Line_5 $$ Connection connection = this.database.getDefaultConnection()-->Line_17 $$ connection.commit()[ FD ]
Line_17 $$ if (commit)-->Line_17 $$ connection.rollback()[ CD ]
Line_5 $$ Connection connection = this.database.getDefaultConnection()-->Line_17 $$ connection.rollback()[ FD ]
