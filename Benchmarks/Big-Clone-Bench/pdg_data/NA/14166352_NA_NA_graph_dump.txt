Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) [ CD ]
Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) -->Line_3 $$ InputStream is = null[ CD ]
Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) -->Line_4 $$ File file = new File(outputFile)[ CD ]
Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) -->Line_5 $$ FileOutputStream fos = null[ CD ]
Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) -->Line_6 $$ if (protocol == HTTP_PROTOCOL) [ CD ]
Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) -->Line_6 $$ if (protocol == HTTP_PROTOCOL) [ FD ]
Line_8 $$ URL url = new URL(urlString)-->Line_10 $$ if (BlueXStatics.proxy == null || url.getProtocol().equals("file"))[ FD ]
Line_10 $$ if (BlueXStatics.proxy == null || url.getProtocol().equals("file"))-->Line_10 $$ ucnn = url.openConnection()[ CD ]
Line_9 $$ URLConnection ucnn = null-->Line_10 $$ ucnn = url.openConnection()[ FD ]
Line_10 $$ ucnn = url.openConnection()-->Line_10 $$ ucnn = url.openConnection()[ FD ]
Line_10 $$ ucnn = url.openConnection()-->Line_10 $$ ucnn = url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(urlString)-->Line_10 $$ ucnn = url.openConnection()[ FD ]
Line_10 $$ if (BlueXStatics.proxy == null || url.getProtocol().equals("file"))-->Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)[ CD ]
Line_9 $$ URLConnection ucnn = null-->Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)[ FD ]
Line_10 $$ ucnn = url.openConnection()-->Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)[ FD ]
Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)-->Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)[ FD ]
Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)-->Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)[ CD ]
Line_8 $$ URL url = new URL(urlString)-->Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)[ FD ]
Line_3 $$ InputStream is = null-->Line_11 $$ is = ucnn.getInputStream()[ FD ]
Line_11 $$ is = ucnn.getInputStream()-->Line_11 $$ is = ucnn.getInputStream()[ FD ]
Line_11 $$ is = ucnn.getInputStream()-->Line_11 $$ is = ucnn.getInputStream()[ CD ]
Line_9 $$ URLConnection ucnn = null-->Line_11 $$ is = ucnn.getInputStream()[ FD ]
Line_10 $$ ucnn = url.openConnection()-->Line_11 $$ is = ucnn.getInputStream()[ FD ]
Line_10 $$ ucnn = url.openConnection(BlueXStatics.proxy)-->Line_11 $$ is = ucnn.getInputStream()[ FD ]
Line_5 $$ FileOutputStream fos = null-->Line_12 $$ fos = new FileOutputStream(file)[ FD ]
Line_12 $$ fos = new FileOutputStream(file)-->Line_12 $$ fos = new FileOutputStream(file)[ FD ]
Line_15 $$ while ((offset = is.read(data)) != -1) -->Line_15 $$ while ((offset = is.read(data)) != -1) [ FD ]
Line_14 $$ int offset-->Line_15 $$ while ((offset = is.read(data)) != -1) [ FD ]
Line_15 $$ while ((offset = is.read(data)) != -1) -->Line_15 $$ while ((offset = is.read(data)) != -1) [ CD ]
Line_3 $$ InputStream is = null-->Line_15 $$ while ((offset = is.read(data)) != -1) [ FD ]
Line_11 $$ is = ucnn.getInputStream()-->Line_15 $$ while ((offset = is.read(data)) != -1) [ FD ]
Line_13 $$ byte[] data = new byte[4096]-->Line_15 $$ while ((offset = is.read(data)) != -1) [ FD ]
Line_15 $$ while ((offset = is.read(data)) != -1) -->Line_16 $$ fos.write(data, 0, offset)[ CD ]
Line_5 $$ FileOutputStream fos = null-->Line_16 $$ fos.write(data, 0, offset)[ FD ]
Line_12 $$ fos = new FileOutputStream(file)-->Line_16 $$ fos.write(data, 0, offset)[ FD ]
Line_13 $$ byte[] data = new byte[4096]-->Line_16 $$ fos.write(data, 0, offset)[ FD ]
Line_15 $$ while ((offset = is.read(data)) != -1) -->Line_16 $$ fos.write(data, 0, offset)[ FD ]
Line_14 $$ int offset-->Line_16 $$ fos.write(data, 0, offset)[ FD ]
Line_3 $$ InputStream is = null-->Line_22 $$ is.close()[ FD ]
Line_11 $$ is = ucnn.getInputStream()-->Line_22 $$ is.close()[ FD ]
Line_5 $$ FileOutputStream fos = null-->Line_26 $$ fos.close()[ FD ]
Line_12 $$ fos = new FileOutputStream(file)-->Line_26 $$ fos.close()[ FD ]
Line_2 $$ public static boolean downloadFile(String urlString, String outputFile, int protocol) -->Line_31 $$ return false[ CD ]
Line_15 $$ while ((offset = is.read(data)) != -1) -->Line_16 $$ fos.write(data, 0, offset)[ FD ]
