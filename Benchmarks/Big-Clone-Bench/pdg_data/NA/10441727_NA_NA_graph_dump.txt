Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void downloadFile(String url, File destFile) [ CD ]
Line_2 $$ private void downloadFile(String url, File destFile) -->Line_5 $$ destFile.getParentFile().mkdirs()[ FD ]
Line_7 $$ URLConnection conn = new URL(url).openConnection()-->Line_7 $$ URLConnection conn = new URL(url).openConnection()[ CD ]
Line_8 $$ InputStream in = conn.getInputStream()-->Line_8 $$ InputStream in = conn.getInputStream()[ CD ]
Line_7 $$ URLConnection conn = new URL(url).openConnection()-->Line_8 $$ InputStream in = conn.getInputStream()[ FD ]
Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size-->Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size[ CD ]
Line_7 $$ URLConnection conn = new URL(url).openConnection()-->Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size[ FD ]
Line_11 $$ ProgressMonitor pm = new ProgressMonitor(null, "Downloading " + url, "", 0, totalSize)-->Line_12 $$ pm.setMillisToDecideToPopup(100)[ FD ]
Line_11 $$ ProgressMonitor pm = new ProgressMonitor(null, "Downloading " + url, "", 0, totalSize)-->Line_13 $$ pm.setMillisToPopup(500)[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size-->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ CD ]
Line_8 $$ InputStream in = conn.getInputStream()-->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_10 $$ byte[] buffer = new byte[32768]-->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_14 $$ boolean canceled = false-->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ CD ]
Line_11 $$ ProgressMonitor pm = new ProgressMonitor(null, "Downloading " + url, "", 0, totalSize)-->Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) [ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_16 $$ out.write(buffer, 0, size)[ CD ]
Line_6 $$ OutputStream out = new FileOutputStream(destFile)-->Line_16 $$ out.write(buffer, 0, size)[ FD ]
Line_10 $$ byte[] buffer = new byte[32768]-->Line_16 $$ out.write(buffer, 0, size)[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_16 $$ out.write(buffer, 0, size)[ FD ]
Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size-->Line_16 $$ out.write(buffer, 0, size)[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_17 $$ pm.setProgress(downloadedSize += size)[ CD ]
Line_11 $$ ProgressMonitor pm = new ProgressMonitor(null, "Downloading " + url, "", 0, totalSize)-->Line_17 $$ pm.setProgress(downloadedSize += size)[ FD ]
Line_17 $$ pm.setProgress(downloadedSize += size)-->Line_17 $$ pm.setProgress(downloadedSize += size)[ FD ]
Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size-->Line_17 $$ pm.setProgress(downloadedSize += size)[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_17 $$ pm.setProgress(downloadedSize += size)[ FD ]
Line_9 $$ int totalSize = conn.getContentLength(), downloadedSize = 0, size-->Line_17 $$ pm.setProgress(downloadedSize += size)[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_18 $$ pm.setNote((100 * downloadedSize / totalSize) + "% finished")[ CD ]
Line_11 $$ ProgressMonitor pm = new ProgressMonitor(null, "Downloading " + url, "", 0, totalSize)-->Line_18 $$ pm.setNote((100 * downloadedSize / totalSize) + "% finished")[ FD ]
Line_8 $$ InputStream in = conn.getInputStream()-->Line_20 $$ in.close()[ FD ]
Line_6 $$ OutputStream out = new FileOutputStream(destFile)-->Line_21 $$ out.close()[ FD ]
Line_22 $$ if (canceled) -->Line_23 $$ destFile.delete()[ CD ]
Line_2 $$ private void downloadFile(String url, File destFile) -->Line_23 $$ destFile.delete()[ FD ]
Line_22 $$ if (canceled) -->Line_24 $$ fatalError("Starting canceled", "Downloading canceled. Exiting...")[ CD ]
Line_11 $$ ProgressMonitor pm = new ProgressMonitor(null, "Downloading " + url, "", 0, totalSize)-->Line_26 $$ pm.close()[ FD ]
Line_2 $$ private void downloadFile(String url, File destFile) -->Line_29 $$ destFile.delete()[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_16 $$ out.write(buffer, 0, size)[ FD ]
Line_15 $$ while ((size = in.read(buffer)) > 0 && !(canceled = pm.isCanceled())) -->Line_17 $$ pm.setProgress(downloadedSize += size)[ FD ]
