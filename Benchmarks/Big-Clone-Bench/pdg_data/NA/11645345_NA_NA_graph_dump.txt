Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException [ CD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_3 $$ FTPClient client = new FTPClient()[ CD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_4 $$ Set<String> projects = new HashSet<String>()[ CD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_5 $$ client.connect("ftp.drupal.org")[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_5 $$ client.connect("ftp.drupal.org")[ FD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_6 $$ System.out.println("Connected to ftp.drupal.org")[ CD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_7 $$ System.out.println(client.getReplyString())[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_7 $$ System.out.println(client.getReplyString())[ FD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_8 $$ boolean loggedIn = client.login("anonymous", "info@regilo.org")[ CD ]
Line_8 $$ boolean loggedIn = client.login("anonymous", "info@regilo.org")-->Line_8 $$ boolean loggedIn = client.login("anonymous", "info@regilo.org")[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_8 $$ boolean loggedIn = client.login("anonymous", "info@regilo.org")[ FD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_9 $$ if (loggedIn) [ CD ]
Line_9 $$ if (loggedIn) -->Line_10 $$ FTPFile[] files = client.listFiles("pub/drupal/files/projects")[ CD ]
Line_10 $$ FTPFile[] files = client.listFiles("pub/drupal/files/projects")-->Line_10 $$ FTPFile[] files = client.listFiles("pub/drupal/files/projects")[ CD ]
Line_3 $$ FTPClient client = new FTPClient()-->Line_10 $$ FTPFile[] files = client.listFiles("pub/drupal/files/projects")[ FD ]
Line_12 $$ String name = file.getName()-->Line_12 $$ String name = file.getName()[ CD ]
Line_11 $$ for (FTPFile file : files) -->Line_12 $$ String name = file.getName()[ FD ]
Line_13 $$ Pattern p = Pattern.compile("([a-zAZ_]*)-(\\d.x)-(.*)")-->Line_13 $$ Pattern p = Pattern.compile("([a-zAZ_]*)-(\\d.x)-(.*)")[ CD ]
Line_14 $$ Matcher m = p.matcher(name)-->Line_14 $$ Matcher m = p.matcher(name)[ CD ]
Line_13 $$ Pattern p = Pattern.compile("([a-zAZ_]*)-(\\d.x)-(.*)")-->Line_14 $$ Matcher m = p.matcher(name)[ FD ]
Line_12 $$ String name = file.getName()-->Line_14 $$ Matcher m = p.matcher(name)[ FD ]
Line_14 $$ Matcher m = p.matcher(name)-->Line_15 $$ if (m.matches()) [ FD ]
Line_15 $$ if (m.matches()) -->Line_15 $$ if (m.matches()) [ CD ]
Line_14 $$ Matcher m = p.matcher(name)-->Line_15 $$ if (m.matches()) [ FD ]
Line_15 $$ if (m.matches()) -->Line_16 $$ String projectName = m.group(1)[ CD ]
Line_16 $$ String projectName = m.group(1)-->Line_16 $$ String projectName = m.group(1)[ CD ]
Line_14 $$ Matcher m = p.matcher(name)-->Line_16 $$ String projectName = m.group(1)[ FD ]
Line_15 $$ if (m.matches()) -->Line_17 $$ String version = m.group(2)[ CD ]
Line_17 $$ String version = m.group(2)-->Line_17 $$ String version = m.group(2)[ CD ]
Line_14 $$ Matcher m = p.matcher(name)-->Line_17 $$ String version = m.group(2)[ FD ]
Line_15 $$ if (m.matches()) -->Line_18 $$ if (version.equals("6.x")) [ CD ]
Line_17 $$ String version = m.group(2)-->Line_18 $$ if (version.equals("6.x")) [ FD ]
Line_18 $$ if (version.equals("6.x")) -->Line_18 $$ if (version.equals("6.x")) [ CD ]
Line_17 $$ String version = m.group(2)-->Line_18 $$ if (version.equals("6.x")) [ FD ]
Line_18 $$ if (version.equals("6.x")) -->Line_19 $$ projects.add(projectName)[ CD ]
Line_4 $$ Set<String> projects = new HashSet<String>()-->Line_19 $$ projects.add(projectName)[ FD ]
Line_16 $$ String projectName = m.group(1)-->Line_19 $$ projects.add(projectName)[ FD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_24 $$ List<String> projectList = new ArrayList<String>()[ CD ]
Line_24 $$ List<String> projectList = new ArrayList<String>()-->Line_26 $$ projectList.add(project)[ FD ]
Line_25 $$ for (String project : projects) -->Line_26 $$ projectList.add(project)[ FD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_28 $$ Collections.sort(projectList)[ CD ]
Line_24 $$ List<String> projectList = new ArrayList<String>()-->Line_28 $$ Collections.sort(projectList)[ FD ]
Line_2 $$ private List<String> createProjectInfoFile() throws SocketException, IOException -->Line_29 $$ return projectList[ CD ]
