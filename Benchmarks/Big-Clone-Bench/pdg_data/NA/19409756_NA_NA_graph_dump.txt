Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void extract(final File destDir, final Collection<ZipEntryInfo> entryInfos) throws IOException [ CD ]
Line_2 $$ public static void extract(final File destDir, final Collection<ZipEntryInfo> entryInfos) throws IOException -->Line_3 $$ if (destDir == null || CollectionUtils.isEmpty(entryInfos))[ CD ]
Line_2 $$ public static void extract(final File destDir, final Collection<ZipEntryInfo> entryInfos) throws IOException -->Line_3 $$ if (destDir == null || CollectionUtils.isEmpty(entryInfos))[ FD ]
Line_2 $$ public static void extract(final File destDir, final Collection<ZipEntryInfo> entryInfos) throws IOException -->Line_4 $$ if (!destDir.exists())[ CD ]
Line_4 $$ if (!destDir.exists())-->Line_4 $$ if (!destDir.exists())[ CD ]
Line_4 $$ if (!destDir.exists())-->Line_4 $$ if (!destDir.exists())[ CD ]
Line_2 $$ public static void extract(final File destDir, final Collection<ZipEntryInfo> entryInfos) throws IOException -->Line_4 $$ if (!destDir.exists())[ FD ]
Line_4 $$ if (!destDir.exists())-->Line_4 $$ destDir.mkdirs()[ CD ]
Line_2 $$ public static void extract(final File destDir, final Collection<ZipEntryInfo> entryInfos) throws IOException -->Line_4 $$ destDir.mkdirs()[ FD ]
Line_6 $$ ZipEntry entry = entryInfo.getZipEntry()-->Line_6 $$ ZipEntry entry = entryInfo.getZipEntry()[ CD ]
Line_5 $$ for (ZipEntryInfo entryInfo : entryInfos) -->Line_6 $$ ZipEntry entry = entryInfo.getZipEntry()[ FD ]
Line_7 $$ InputStream in = entryInfo.getInputStream()-->Line_7 $$ InputStream in = entryInfo.getInputStream()[ CD ]
Line_5 $$ for (ZipEntryInfo entryInfo : entryInfos) -->Line_7 $$ InputStream in = entryInfo.getInputStream()[ FD ]
Line_6 $$ ZipEntry entry = entryInfo.getZipEntry()-->Line_8 $$ File entryDest = new File(destDir, entry.getName())[ FD ]
Line_8 $$ File entryDest = new File(destDir, entry.getName())-->Line_9 $$ entryDest.getParentFile().mkdirs()[ FD ]
Line_10 $$ if (!entry.isDirectory()) -->Line_10 $$ if (!entry.isDirectory()) [ CD ]
Line_10 $$ if (!entry.isDirectory()) -->Line_10 $$ if (!entry.isDirectory()) [ CD ]
Line_6 $$ ZipEntry entry = entryInfo.getZipEntry()-->Line_10 $$ if (!entry.isDirectory()) [ FD ]
Line_10 $$ if (!entry.isDirectory()) -->Line_11 $$ OutputStream out = new FileOutputStream(new File(destDir, entry.getName()))[ CD ]
Line_6 $$ ZipEntry entry = entryInfo.getZipEntry()-->Line_11 $$ OutputStream out = new FileOutputStream(new File(destDir, entry.getName()))[ FD ]
Line_7 $$ InputStream in = entryInfo.getInputStream()-->Line_13 $$ IOUtils.copy(in, out)[ FD ]
Line_11 $$ OutputStream out = new FileOutputStream(new File(destDir, entry.getName()))-->Line_13 $$ IOUtils.copy(in, out)[ FD ]
Line_11 $$ OutputStream out = new FileOutputStream(new File(destDir, entry.getName()))-->Line_14 $$ out.flush()[ FD ]
Line_7 $$ InputStream in = entryInfo.getInputStream()-->Line_16 $$ IOUtils.closeQuietly(in)[ FD ]
Line_11 $$ OutputStream out = new FileOutputStream(new File(destDir, entry.getName()))-->Line_17 $$ IOUtils.closeQuietly(out)[ FD ]
