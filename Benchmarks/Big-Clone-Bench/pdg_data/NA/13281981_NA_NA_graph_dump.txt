Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void bokActionPerformed(java.awt.event.ActionEvent evt) [ CD ]
Line_2 $$ private void bokActionPerformed(java.awt.event.ActionEvent evt) -->Line_3 $$ Vector vret = this.uniformtitlepanel.getEnteredValuesKeys()[ CD ]
Line_3 $$ Vector vret = this.uniformtitlepanel.getEnteredValuesKeys()-->Line_3 $$ Vector vret = this.uniformtitlepanel.getEnteredValuesKeys()[ CD ]
Line_2 $$ private void bokActionPerformed(java.awt.event.ActionEvent evt) -->Line_4 $$ String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds()[ CD ]
Line_4 $$ String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds()-->Line_4 $$ String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds()[ CD ]
Line_2 $$ private void bokActionPerformed(java.awt.event.ActionEvent evt) -->Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)[ CD ]
Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)-->Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)[ CD ]
Line_3 $$ Vector vret = this.uniformtitlepanel.getEnteredValuesKeys()-->Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)[ FD ]
Line_4 $$ String[] patlib = newgen.presentation.NewGenMain.getAppletInstance().getPatronLibraryIds()-->Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)[ FD ]
Line_2 $$ private void bokActionPerformed(java.awt.event.ActionEvent evt) -->Line_6 $$ System.out.println(xmlreq)[ CD ]
Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)-->Line_6 $$ System.out.println(xmlreq)[ FD ]
Line_8 $$ java.net.URL url = new java.net.URL(ResourceBundle.getBundle("Administration").getString("ServerURL") + ResourceBundle.getBundle("Administration").getString("ServletSubPath") + "UniformTitleSubjectHeadingServlet")-->Line_9 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()[ FD ]
Line_9 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_10 $$ urlconn.setDoOutput(true)[ FD ]
Line_11 $$ java.io.OutputStream dos = urlconn.getOutputStream()-->Line_11 $$ java.io.OutputStream dos = urlconn.getOutputStream()[ CD ]
Line_9 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_11 $$ java.io.OutputStream dos = urlconn.getOutputStream()[ FD ]
Line_11 $$ java.io.OutputStream dos = urlconn.getOutputStream()-->Line_12 $$ dos.write(xmlreq.getBytes())[ FD ]
Line_5 $$ String xmlreq = newgen.presentation.administration.AdministrationXMLGenerator.getInstance().saveUniformTitleSH("2", vret, patlib)-->Line_12 $$ dos.write(xmlreq.getBytes())[ FD ]
Line_13 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_13 $$ java.io.InputStream ios = urlconn.getInputStream()[ CD ]
Line_9 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_13 $$ java.io.InputStream ios = urlconn.getInputStream()[ FD ]
Line_15 $$ Document retdoc = saxb.build(ios)-->Line_15 $$ Document retdoc = saxb.build(ios)[ CD ]
Line_14 $$ SAXBuilder saxb = new SAXBuilder()-->Line_15 $$ Document retdoc = saxb.build(ios)[ FD ]
Line_13 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_15 $$ Document retdoc = saxb.build(ios)[ FD ]
Line_16 $$ Element rootelement = retdoc.getRootElement()-->Line_16 $$ Element rootelement = retdoc.getRootElement()[ CD ]
Line_15 $$ Document retdoc = saxb.build(ios)-->Line_16 $$ Element rootelement = retdoc.getRootElement()[ FD ]
Line_16 $$ Element rootelement = retdoc.getRootElement()-->Line_17 $$ if (rootelement.getChild("Error") == null) [ FD ]
Line_17 $$ if (rootelement.getChild("Error") == null) -->Line_18 $$ this.showInformationMessage(ResourceBundle.getBundle("Administration").getString("DataSavedInDatabase"))[ CD ]
Line_17 $$ if (rootelement.getChild("Error") == null) -->Line_20 $$ this.showErrorMessage(ResourceBundle.getBundle("Administration").getString("ErrorPleaseContactTheVendor"))[ CD ]
