Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void fileCopy(File filename) throws IOException [ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_3 $$ if (this.stdOut) [ CD ]
Line_3 $$ if (this.stdOut) -->Line_4 $$ this.fileDump(filename)[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_4 $$ this.fileDump(filename)[ FD ]
Line_3 $$ if (this.stdOut) -->Line_5 $$ return[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_7 $$ File source_file = new File(spoolPath + "/" + filename)[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_8 $$ File destination_file = new File(copyPath + "/" + filename)[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_9 $$ FileInputStream source = null[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_10 $$ FileOutputStream destination = null[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_11 $$ byte[] buffer[ CD ]
Line_2 $$ private void fileCopy(File filename) throws IOException -->Line_12 $$ int bytes_read[ CD ]
Line_14 $$ if (!source_file.exists() || !source_file.isFile())-->Line_14 $$ if (!source_file.exists() || !source_file.isFile())[ CD ]
Line_7 $$ File source_file = new File(spoolPath + "/" + filename)-->Line_14 $$ if (!source_file.exists() || !source_file.isFile())[ FD ]
Line_14 $$ if (!source_file.exists() || !source_file.isFile())-->Line_14 $$ if (!source_file.exists() || !source_file.isFile())[ CD ]
Line_7 $$ File source_file = new File(spoolPath + "/" + filename)-->Line_14 $$ if (!source_file.exists() || !source_file.isFile())[ FD ]
Line_15 $$ if (!source_file.canRead())-->Line_15 $$ if (!source_file.canRead())[ CD ]
Line_15 $$ if (!source_file.canRead())-->Line_15 $$ if (!source_file.canRead())[ CD ]
Line_7 $$ File source_file = new File(spoolPath + "/" + filename)-->Line_15 $$ if (!source_file.canRead())[ FD ]
Line_8 $$ File destination_file = new File(copyPath + "/" + filename)-->Line_16 $$ if (destination_file.exists()) [ FD ]
Line_16 $$ if (destination_file.exists()) -->Line_16 $$ if (destination_file.exists()) [ CD ]
Line_8 $$ File destination_file = new File(copyPath + "/" + filename)-->Line_16 $$ if (destination_file.exists()) [ FD ]
Line_16 $$ if (destination_file.exists()) -->Line_17 $$ if (destination_file.isFile()) [ CD ]
Line_8 $$ File destination_file = new File(copyPath + "/" + filename)-->Line_17 $$ if (destination_file.isFile()) [ FD ]
Line_17 $$ if (destination_file.isFile()) -->Line_17 $$ if (destination_file.isFile()) [ CD ]
Line_8 $$ File destination_file = new File(copyPath + "/" + filename)-->Line_17 $$ if (destination_file.isFile()) [ FD ]
Line_17 $$ if (destination_file.isFile()) -->Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_17 $$ if (destination_file.isFile()) -->Line_19 $$ if (!destination_file.canWrite())[ CD ]
Line_19 $$ if (!destination_file.canWrite())-->Line_19 $$ if (!destination_file.canWrite())[ CD ]
Line_19 $$ if (!destination_file.canWrite())-->Line_19 $$ if (!destination_file.canWrite())[ CD ]
Line_8 $$ File destination_file = new File(copyPath + "/" + filename)-->Line_19 $$ if (!destination_file.canWrite())[ FD ]
Line_17 $$ if (destination_file.isFile()) -->Line_20 $$ if (!this.overwrite) [ CD ]
Line_20 $$ if (!this.overwrite) -->Line_20 $$ if (!this.overwrite) [ CD ]
Line_20 $$ if (!this.overwrite) -->Line_21 $$ System.out.print("File " + destination_file + " already exists. Overwrite? (Y/N): ")[ CD ]
Line_20 $$ if (!this.overwrite) -->Line_22 $$ System.out.flush()[ CD ]
Line_20 $$ if (!this.overwrite) -->Line_23 $$ if (!in.readLine().toUpperCase().equals("Y"))[ CD ]
Line_23 $$ if (!in.readLine().toUpperCase().equals("Y"))-->Line_23 $$ if (!in.readLine().toUpperCase().equals("Y"))[ CD ]
Line_23 $$ if (!in.readLine().toUpperCase().equals("Y"))-->Line_23 $$ if (!in.readLine().toUpperCase().equals("Y"))[ CD ]
Line_18 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_23 $$ if (!in.readLine().toUpperCase().equals("Y"))[ FD ]
Line_16 $$ if (destination_file.exists()) -->Line_27 $$ File parentdir = parent(destination_file)[ CD ]
Line_27 $$ File parentdir = parent(destination_file)-->Line_27 $$ File parentdir = parent(destination_file)[ CD ]
Line_8 $$ File destination_file = new File(copyPath + "/" + filename)-->Line_27 $$ File parentdir = parent(destination_file)[ FD ]
Line_16 $$ if (destination_file.exists()) -->Line_28 $$ if (!parentdir.exists())[ CD ]
Line_28 $$ if (!parentdir.exists())-->Line_28 $$ if (!parentdir.exists())[ CD ]
Line_28 $$ if (!parentdir.exists())-->Line_28 $$ if (!parentdir.exists())[ CD ]
Line_27 $$ File parentdir = parent(destination_file)-->Line_28 $$ if (!parentdir.exists())[ FD ]
Line_16 $$ if (destination_file.exists()) -->Line_29 $$ if (!parentdir.canWrite())[ CD ]
Line_29 $$ if (!parentdir.canWrite())-->Line_29 $$ if (!parentdir.canWrite())[ CD ]
Line_29 $$ if (!parentdir.canWrite())-->Line_29 $$ if (!parentdir.canWrite())[ CD ]
Line_27 $$ File parentdir = parent(destination_file)-->Line_29 $$ if (!parentdir.canWrite())[ FD ]
Line_9 $$ FileInputStream source = null-->Line_31 $$ source = new FileInputStream(source_file)[ FD ]
Line_31 $$ source = new FileInputStream(source_file)-->Line_31 $$ source = new FileInputStream(source_file)[ FD ]
Line_10 $$ FileOutputStream destination = null-->Line_32 $$ destination = new FileOutputStream(destination_file)[ FD ]
Line_32 $$ destination = new FileOutputStream(destination_file)-->Line_32 $$ destination = new FileOutputStream(destination_file)[ FD ]
Line_11 $$ byte[] buffer-->Line_33 $$ buffer = new byte[1024][ FD ]
Line_33 $$ buffer = new byte[1024]-->Line_33 $$ buffer = new byte[1024][ FD ]
Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) -->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ FD ]
Line_12 $$ int bytes_read-->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ FD ]
Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) -->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ CD ]
Line_9 $$ FileInputStream source = null-->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ FD ]
Line_31 $$ source = new FileInputStream(source_file)-->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ FD ]
Line_11 $$ byte[] buffer-->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ FD ]
Line_33 $$ buffer = new byte[1024]-->Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) [ FD ]
Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) -->Line_35 $$ destination.write(buffer, 0, bytes_read)[ CD ]
Line_10 $$ FileOutputStream destination = null-->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_32 $$ destination = new FileOutputStream(destination_file)-->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_11 $$ byte[] buffer-->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_33 $$ buffer = new byte[1024]-->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) -->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_12 $$ int bytes_read-->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
Line_7 $$ File source_file = new File(spoolPath + "/" + filename)-->Line_38 $$ if (this.keep == false && source_file.isFile()) [ FD ]
Line_9 $$ FileInputStream source = null-->Line_40 $$ source.close()[ FD ]
Line_31 $$ source = new FileInputStream(source_file)-->Line_40 $$ source.close()[ FD ]
Line_38 $$ if (this.keep == false && source_file.isFile()) -->Line_43 $$ if (source_file.delete()) [ CD ]
Line_7 $$ File source_file = new File(spoolPath + "/" + filename)-->Line_43 $$ if (source_file.delete()) [ FD ]
Line_43 $$ if (source_file.delete()) -->Line_43 $$ if (source_file.delete()) [ CD ]
Line_7 $$ File source_file = new File(spoolPath + "/" + filename)-->Line_43 $$ if (source_file.delete()) [ FD ]
Line_43 $$ if (source_file.delete()) -->Line_44 $$ new File(this.spoolPath + "/info/" + filename + ".desc").delete()[ CD ]
Line_9 $$ FileInputStream source = null-->Line_48 $$ if (source != null)[ FD ]
Line_31 $$ source = new FileInputStream(source_file)-->Line_48 $$ if (source != null)[ FD ]
Line_9 $$ FileInputStream source = null-->Line_49 $$ source.close()[ FD ]
Line_31 $$ source = new FileInputStream(source_file)-->Line_49 $$ source.close()[ FD ]
Line_10 $$ FileOutputStream destination = null-->Line_52 $$ if (destination != null)[ FD ]
Line_32 $$ destination = new FileOutputStream(destination_file)-->Line_52 $$ if (destination != null)[ FD ]
Line_10 $$ FileOutputStream destination = null-->Line_53 $$ destination.flush()[ FD ]
Line_32 $$ destination = new FileOutputStream(destination_file)-->Line_53 $$ destination.flush()[ FD ]
Line_10 $$ FileOutputStream destination = null-->Line_56 $$ if (destination != null)[ FD ]
Line_32 $$ destination = new FileOutputStream(destination_file)-->Line_56 $$ if (destination != null)[ FD ]
Line_10 $$ FileOutputStream destination = null-->Line_57 $$ destination.close()[ FD ]
Line_32 $$ destination = new FileOutputStream(destination_file)-->Line_57 $$ destination.close()[ FD ]
Line_34 $$ while ((bytes_read = source.read(buffer)) != -1) -->Line_35 $$ destination.write(buffer, 0, bytes_read)[ FD ]
