Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException [ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_3 $$ InputSource retval[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_4 $$ String mappedURI = name2uri(name)[ CD ]
Line_4 $$ String mappedURI = name2uri(name)-->Line_4 $$ String mappedURI = name2uri(name)[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_4 $$ String mappedURI = name2uri(name)[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_5 $$ InputStream stream[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) [ CD ]
Line_5 $$ InputStream stream-->Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) [ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) [ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) [ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) [ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)[ FD ]
Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)-->Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)[ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))[ CD ]
Line_3 $$ InputSource retval-->Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))[ FD ]
Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))-->Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))[ FD ]
Line_5 $$ InputStream stream-->Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))[ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))[ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_10 $$ URL url[ CD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_11 $$ URLConnection conn[ CD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_12 $$ if (mappedURI != null)[ CD ]
Line_4 $$ String mappedURI = name2uri(name)-->Line_12 $$ if (mappedURI != null)[ FD ]
Line_12 $$ if (mappedURI != null)-->Line_12 $$ uri = mappedURI[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_12 $$ uri = mappedURI[ FD ]
Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)-->Line_12 $$ uri = mappedURI[ FD ]
Line_12 $$ uri = mappedURI-->Line_12 $$ uri = mappedURI[ FD ]
Line_4 $$ String mappedURI = name2uri(name)-->Line_12 $$ uri = mappedURI[ FD ]
Line_12 $$ if (mappedURI != null)-->Line_12 $$ if (uri == null)[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_12 $$ if (uri == null)[ FD ]
Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)-->Line_12 $$ if (uri == null)[ FD ]
Line_12 $$ uri = mappedURI-->Line_12 $$ if (uri == null)[ FD ]
Line_12 $$ if (uri == null)-->Line_12 $$ return null[ CD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_13 $$ url = new URL(uri)[ CD ]
Line_10 $$ URL url-->Line_13 $$ url = new URL(uri)[ FD ]
Line_13 $$ url = new URL(uri)-->Line_13 $$ url = new URL(uri)[ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_14 $$ conn = url.openConnection()[ CD ]
Line_11 $$ URLConnection conn-->Line_14 $$ conn = url.openConnection()[ FD ]
Line_14 $$ conn = url.openConnection()-->Line_14 $$ conn = url.openConnection()[ FD ]
Line_14 $$ conn = url.openConnection()-->Line_14 $$ conn = url.openConnection()[ CD ]
Line_10 $$ URL url-->Line_14 $$ conn = url.openConnection()[ FD ]
Line_13 $$ url = new URL(uri)-->Line_14 $$ conn = url.openConnection()[ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_15 $$ uri = conn.getURL().toString()[ CD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_15 $$ uri = conn.getURL().toString()[ FD ]
Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)-->Line_15 $$ uri = conn.getURL().toString()[ FD ]
Line_12 $$ uri = mappedURI-->Line_15 $$ uri = conn.getURL().toString()[ FD ]
Line_15 $$ uri = conn.getURL().toString()-->Line_15 $$ uri = conn.getURL().toString()[ FD ]
Line_15 $$ uri = conn.getURL().toString()-->Line_15 $$ uri = conn.getURL().toString()[ CD ]
Line_11 $$ URLConnection conn-->Line_15 $$ uri = conn.getURL().toString()[ FD ]
Line_14 $$ conn = url.openConnection()-->Line_15 $$ uri = conn.getURL().toString()[ FD ]
Line_6 $$ if (mappedURI == null && (stream = mapResource(name)) != null) -->Line_16 $$ if (ignoringMIME)[ CD ]
Line_16 $$ if (ignoringMIME)-->Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))[ CD ]
Line_3 $$ InputSource retval-->Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))[ FD ]
Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))-->Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))[ FD ]
Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))-->Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))[ FD ]
Line_11 $$ URLConnection conn-->Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))[ FD ]
Line_14 $$ conn = url.openConnection()-->Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))[ FD ]
Line_16 $$ if (ignoringMIME)-->Line_17 $$ String contentType = conn.getContentType()[ CD ]
Line_17 $$ String contentType = conn.getContentType()-->Line_17 $$ String contentType = conn.getContentType()[ CD ]
Line_11 $$ URLConnection conn-->Line_17 $$ String contentType = conn.getContentType()[ FD ]
Line_14 $$ conn = url.openConnection()-->Line_17 $$ String contentType = conn.getContentType()[ FD ]
Line_16 $$ if (ignoringMIME)-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ CD ]
Line_3 $$ InputSource retval-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ CD ]
Line_17 $$ String contentType = conn.getContentType()-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_11 $$ URLConnection conn-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_14 $$ conn = url.openConnection()-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_10 $$ URL url-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_13 $$ url = new URL(uri)-->Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_21 $$ retval.setSystemId(uri)[ CD ]
Line_3 $$ InputSource retval-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_7 $$ uri = "java:resource:" + (String) id2resource.get(name)-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_12 $$ uri = mappedURI-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_15 $$ uri = conn.getURL().toString()-->Line_21 $$ retval.setSystemId(uri)[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_22 $$ retval.setPublicId(name)[ CD ]
Line_3 $$ InputSource retval-->Line_22 $$ retval.setPublicId(name)[ FD ]
Line_8 $$ retval = new InputSource(XmlReader.createReader(stream))-->Line_22 $$ retval.setPublicId(name)[ FD ]
Line_16 $$ retval = new InputSource(XmlReader.createReader(conn.getInputStream()))-->Line_22 $$ retval.setPublicId(name)[ FD ]
Line_18 $$ retval = createInputSource(contentType, conn.getInputStream(), false, url.getProtocol())-->Line_22 $$ retval.setPublicId(name)[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_22 $$ retval.setPublicId(name)[ FD ]
Line_2 $$ public InputSource resolveEntity(String name, String uri) throws IOException, SAXException -->Line_23 $$ return retval[ CD ]
