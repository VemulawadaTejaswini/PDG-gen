Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) [ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_3 $$ final StringBuffer buffer = new StringBuffer()[ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_4 $$ MessageDigest digest = null[ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_5 $$ int size = 0[ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_6 $$ if ("CRYPT".equalsIgnoreCase(algorithm)) [ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_6 $$ if ("CRYPT".equalsIgnoreCase(algorithm)) [ FD ]
Line_6 $$ if ("CRYPT".equalsIgnoreCase(algorithm)) -->Line_6 $$ if ("CRYPT".equalsIgnoreCase(algorithm)) [ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_6 $$ if ("CRYPT".equalsIgnoreCase(algorithm)) [ FD ]
Line_6 $$ if ("CRYPT".equalsIgnoreCase(algorithm)) -->Line_8 $$ if ("SHA".equalsIgnoreCase(algorithm) || "SSHA".equalsIgnoreCase(algorithm)) [ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_8 $$ if ("SHA".equalsIgnoreCase(algorithm) || "SSHA".equalsIgnoreCase(algorithm)) [ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_8 $$ if ("SHA".equalsIgnoreCase(algorithm) || "SSHA".equalsIgnoreCase(algorithm)) [ FD ]
Line_8 $$ if ("SHA".equalsIgnoreCase(algorithm) || "SSHA".equalsIgnoreCase(algorithm)) -->Line_9 $$ size = 20[ CD ]
Line_5 $$ int size = 0-->Line_9 $$ size = 20[ FD ]
Line_9 $$ size = 20-->Line_9 $$ size = 20[ FD ]
Line_8 $$ if ("SHA".equalsIgnoreCase(algorithm) || "SSHA".equalsIgnoreCase(algorithm)) -->Line_10 $$ if (salt != null && salt.length > 0) [ CD ]
Line_10 $$ if (salt != null && salt.length > 0) -->Line_11 $$ buffer.append("[ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_11 $$ buffer.append("[ FD ]
Line_10 $$ if (salt != null && salt.length > 0) -->Line_13 $$ buffer.append("[ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_13 $$ buffer.append("[ FD ]
Line_4 $$ MessageDigest digest = null-->Line_16 $$ digest = MessageDigest.getInstance("SHA-1")[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_16 $$ digest = MessageDigest.getInstance("SHA-1")[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_16 $$ digest = MessageDigest.getInstance("SHA-1")[ CD ]
Line_8 $$ if ("SHA".equalsIgnoreCase(algorithm) || "SSHA".equalsIgnoreCase(algorithm)) -->Line_20 $$ if ("MD5".equalsIgnoreCase(algorithm) || "SMD5".equalsIgnoreCase(algorithm)) [ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_20 $$ if ("MD5".equalsIgnoreCase(algorithm) || "SMD5".equalsIgnoreCase(algorithm)) [ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_20 $$ if ("MD5".equalsIgnoreCase(algorithm) || "SMD5".equalsIgnoreCase(algorithm)) [ FD ]
Line_20 $$ if ("MD5".equalsIgnoreCase(algorithm) || "SMD5".equalsIgnoreCase(algorithm)) -->Line_21 $$ size = 16[ CD ]
Line_5 $$ int size = 0-->Line_21 $$ size = 16[ FD ]
Line_9 $$ size = 20-->Line_21 $$ size = 16[ FD ]
Line_21 $$ size = 16-->Line_21 $$ size = 16[ FD ]
Line_20 $$ if ("MD5".equalsIgnoreCase(algorithm) || "SMD5".equalsIgnoreCase(algorithm)) -->Line_22 $$ if (salt != null && salt.length > 0) [ CD ]
Line_22 $$ if (salt != null && salt.length > 0) -->Line_23 $$ buffer.append("[ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_23 $$ buffer.append("[ FD ]
Line_22 $$ if (salt != null && salt.length > 0) -->Line_25 $$ buffer.append("[ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_25 $$ buffer.append("[ FD ]
Line_4 $$ MessageDigest digest = null-->Line_28 $$ digest = MessageDigest.getInstance("MD5")[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_28 $$ digest = MessageDigest.getInstance("MD5")[ FD ]
Line_28 $$ digest = MessageDigest.getInstance("MD5")-->Line_28 $$ digest = MessageDigest.getInstance("MD5")[ FD ]
Line_28 $$ digest = MessageDigest.getInstance("MD5")-->Line_28 $$ digest = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_33 $$ int outSize = size[ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_34 $$ digest.reset()[ CD ]
Line_4 $$ MessageDigest digest = null-->Line_34 $$ digest.reset()[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_34 $$ digest.reset()[ FD ]
Line_28 $$ digest = MessageDigest.getInstance("MD5")-->Line_34 $$ digest.reset()[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_35 $$ digest.update(password.getBytes())[ CD ]
Line_4 $$ MessageDigest digest = null-->Line_35 $$ digest.update(password.getBytes())[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_35 $$ digest.update(password.getBytes())[ FD ]
Line_28 $$ digest = MessageDigest.getInstance("MD5")-->Line_35 $$ digest.update(password.getBytes())[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_35 $$ digest.update(password.getBytes())[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_36 $$ if (salt != null && salt.length > 0) [ CD ]
Line_36 $$ if (salt != null && salt.length > 0) -->Line_37 $$ digest.update(salt)[ CD ]
Line_4 $$ MessageDigest digest = null-->Line_37 $$ digest.update(salt)[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_37 $$ digest.update(salt)[ FD ]
Line_28 $$ digest = MessageDigest.getInstance("MD5")-->Line_37 $$ digest.update(salt)[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_37 $$ digest.update(salt)[ FD ]
Line_36 $$ if (salt != null && salt.length > 0) -->Line_38 $$ outSize += salt.length[ CD ]
Line_33 $$ int outSize = size-->Line_38 $$ outSize += salt.length[ FD ]
Line_38 $$ outSize += salt.length-->Line_38 $$ outSize += salt.length[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_40 $$ final byte[] out = new byte[outSize][ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ CD ]
Line_40 $$ final byte[] out = new byte[outSize]-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_5 $$ int size = 0-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_9 $$ size = 20-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_21 $$ size = 16-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_4 $$ MessageDigest digest = null-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_16 $$ digest = MessageDigest.getInstance("SHA-1")-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_28 $$ digest = MessageDigest.getInstance("MD5")-->Line_41 $$ System.arraycopy(digest.digest(), 0, out, 0, size)[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_42 $$ if (salt != null && salt.length > 0) [ CD ]
Line_42 $$ if (salt != null && salt.length > 0) -->Line_43 $$ System.arraycopy(salt, 0, out, size, salt.length)[ CD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_43 $$ System.arraycopy(salt, 0, out, size, salt.length)[ FD ]
Line_40 $$ final byte[] out = new byte[outSize]-->Line_43 $$ System.arraycopy(salt, 0, out, size, salt.length)[ FD ]
Line_5 $$ int size = 0-->Line_43 $$ System.arraycopy(salt, 0, out, size, salt.length)[ FD ]
Line_9 $$ size = 20-->Line_43 $$ System.arraycopy(salt, 0, out, size, salt.length)[ FD ]
Line_21 $$ size = 16-->Line_43 $$ System.arraycopy(salt, 0, out, size, salt.length)[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_45 $$ buffer.append(Base64.encode(out))[ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_45 $$ buffer.append(Base64.encode(out))[ FD ]
Line_40 $$ final byte[] out = new byte[outSize]-->Line_45 $$ buffer.append(Base64.encode(out))[ FD ]
Line_2 $$ public static String encrypt(final String password, final String algorithm, final byte[] salt) -->Line_46 $$ return buffer.toString()[ CD ]
Line_46 $$ return buffer.toString()-->Line_46 $$ return buffer.toString()[ CD ]
Line_3 $$ final StringBuffer buffer = new StringBuffer()-->Line_46 $$ return buffer.toString()[ FD ]
