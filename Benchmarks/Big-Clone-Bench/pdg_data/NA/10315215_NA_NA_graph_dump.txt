Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public final void testT4CClientWriter() throws Exception [ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_3 $$ InputStream is = ClassLoader.getSystemResourceAsStream(this.testFileName)[ CD ]
Line_3 $$ InputStream is = ClassLoader.getSystemResourceAsStream(this.testFileName)-->Line_3 $$ InputStream is = ClassLoader.getSystemResourceAsStream(this.testFileName)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_4 $$ T4CClientReader reader = new T4CClientReader(is, rc)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_5 $$ File tmpFile = File.createTempFile("barde", ".log", this.tmpDir)[ CD ]
Line_5 $$ File tmpFile = File.createTempFile("barde", ".log", this.tmpDir)-->Line_5 $$ File tmpFile = File.createTempFile("barde", ".log", this.tmpDir)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_6 $$ System.out.println("tmp=" + tmpFile.getAbsolutePath())[ CD ]
Line_5 $$ File tmpFile = File.createTempFile("barde", ".log", this.tmpDir)-->Line_6 $$ System.out.println("tmp=" + tmpFile.getAbsolutePath())[ FD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_7 $$ T4CClientWriter writer = new T4CClientWriter(new FileOutputStream(tmpFile), rc)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_2 $$ public final void testT4CClientWriter() throws Exception [ CD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ CD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ CD ]
Line_4 $$ T4CClientReader reader = new T4CClientReader(is, rc)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ CD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ CD ]
Line_4 $$ T4CClientReader reader = new T4CClientReader(is, rc)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ writer.write(m)[ CD ]
Line_7 $$ T4CClientWriter writer = new T4CClientWriter(new FileOutputStream(tmpFile), rc)-->Line_8 $$ writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ writer.write(m)[ FD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_9 $$ writer.close()[ CD ]
Line_7 $$ T4CClientWriter writer = new T4CClientWriter(new FileOutputStream(tmpFile), rc)-->Line_9 $$ writer.close()[ FD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_10 $$ InputStream fa = ClassLoader.getSystemResourceAsStream(this.testFileName)[ CD ]
Line_10 $$ InputStream fa = ClassLoader.getSystemResourceAsStream(this.testFileName)-->Line_10 $$ InputStream fa = ClassLoader.getSystemResourceAsStream(this.testFileName)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_11 $$ FileInputStream fb = new FileInputStream(tmpFile)[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ CD ]
Line_2 $$ public final void testT4CClientWriter() throws Exception -->Line_2 $$ public final void testT4CClientWriter() throws Exception [ CD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ CD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ CD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ CD ]
Line_10 $$ InputStream fa = ClassLoader.getSystemResourceAsStream(this.testFileName)-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ CD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ CD ]
Line_10 $$ InputStream fa = ClassLoader.getSystemResourceAsStream(this.testFileName)-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ assertEquals(ba, fb.read())[ CD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ assertEquals(ba, fb.read())[ FD ]
Line_11 $$ FileInputStream fb = new FileInputStream(tmpFile)-->Line_12 $$ assertEquals(ba, fb.read())[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ writer.write(m)[ FD ]
Line_8 $$ for (Message m = reader.read(); m != null; m = reader.read()) writer.write(m)-->Line_8 $$ writer.write(m)[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ assertEquals(ba, fb.read())[ FD ]
Line_12 $$ for (int ba = fa.read(); ba != -1; ba = fa.read()) assertEquals(ba, fb.read())-->Line_12 $$ assertEquals(ba, fb.read())[ FD ]
