Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public DownloadObject download() throws IOException [ CD ]
Line_2 $$ public DownloadObject download() throws IOException -->Line_3 $$ final HttpGet findLink = new HttpGet(url.toString())[ CD ]
Line_2 $$ public DownloadObject download() throws IOException -->Line_4 $$ final HttpResponse response = this.client.execute(findLink)[ CD ]
Line_4 $$ final HttpResponse response = this.client.execute(findLink)-->Line_4 $$ final HttpResponse response = this.client.execute(findLink)[ CD ]
Line_3 $$ final HttpGet findLink = new HttpGet(url.toString())-->Line_4 $$ final HttpResponse response = this.client.execute(findLink)[ FD ]
Line_2 $$ public DownloadObject download() throws IOException -->Line_5 $$ final String body = IOUtil.getString(response)[ CD ]
Line_5 $$ final String body = IOUtil.getString(response)-->Line_5 $$ final String body = IOUtil.getString(response)[ CD ]
Line_4 $$ final HttpResponse response = this.client.execute(findLink)-->Line_5 $$ final String body = IOUtil.getString(response)[ FD ]
Line_2 $$ public DownloadObject download() throws IOException -->Line_6 $$ LinkTag linkTag = null[ CD ]
Line_6 $$ LinkTag linkTag = null-->Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)[ FD ]
Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)-->Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)[ FD ]
Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)-->Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)[ CD ]
Line_5 $$ final String body = IOUtil.getString(response)-->Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)[ FD ]
Line_2 $$ public DownloadObject download() throws IOException -->Line_11 $$ if (linkTag != null) [ CD ]
Line_6 $$ LinkTag linkTag = null-->Line_11 $$ if (linkTag != null) [ FD ]
Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)-->Line_11 $$ if (linkTag != null) [ FD ]
Line_11 $$ if (linkTag != null) -->Line_12 $$ String link = linkTag.extractLink()[ CD ]
Line_12 $$ String link = linkTag.extractLink()-->Line_12 $$ String link = linkTag.extractLink()[ CD ]
Line_6 $$ LinkTag linkTag = null-->Line_12 $$ String link = linkTag.extractLink()[ FD ]
Line_8 $$ linkTag = HtmlParserUtil.findLink(MegaUploadDownloader.DOWNLOAD_LINK_PATTERN, body)-->Line_12 $$ String link = linkTag.extractLink()[ FD ]
Line_11 $$ if (linkTag != null) -->Line_13 $$ final String filename = IOUtil.getBaseName(link).trim()[ CD ]
Line_13 $$ final String filename = IOUtil.getBaseName(link).trim()-->Line_13 $$ final String filename = IOUtil.getBaseName(link).trim()[ CD ]
Line_12 $$ String link = linkTag.extractLink()-->Line_13 $$ final String filename = IOUtil.getBaseName(link).trim()[ FD ]
Line_11 $$ if (linkTag != null) -->Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")[ CD ]
Line_12 $$ String link = linkTag.extractLink()-->Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")[ FD ]
Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")-->Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")[ FD ]
Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")-->Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")[ CD ]
Line_12 $$ String link = linkTag.extractLink()-->Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")[ FD ]
Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")-->Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")[ FD ]
Line_11 $$ if (linkTag != null) -->Line_15 $$ final URL url = new URL(link)[ CD ]
Line_11 $$ if (linkTag != null) -->Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))[ CD ]
Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))-->Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))[ CD ]
Line_12 $$ String link = linkTag.extractLink()-->Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))[ FD ]
Line_14 $$ link = link.replaceAll("&#[0-9]*;", "_")-->Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))[ FD ]
Line_15 $$ final URL url = new URL(link)-->Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))[ FD ]
Line_15 $$ final URL url = new URL(link)-->Line_16 $$ final String newLink = link.replaceAll(Pattern.quote(IOUtil.getBaseName(url.getPath())), URLEncoder.encode(IOUtil.getBaseName(url.getPath()), "UTF-8"))[ FD ]
Line_11 $$ if (linkTag != null) -->Line_17 $$ final HttpGet download = new HttpGet(newLink)[ CD ]
Line_11 $$ if (linkTag != null) -->Line_18 $$ final HttpResponse downloadResponse = this.client.execute(download)[ CD ]
Line_18 $$ final HttpResponse downloadResponse = this.client.execute(download)-->Line_18 $$ final HttpResponse downloadResponse = this.client.execute(download)[ CD ]
Line_17 $$ final HttpGet download = new HttpGet(newLink)-->Line_18 $$ final HttpResponse downloadResponse = this.client.execute(download)[ FD ]
Line_11 $$ if (linkTag != null) -->Line_19 $$ final HttpEntity downloadEntity = downloadResponse.getEntity()[ CD ]
Line_19 $$ final HttpEntity downloadEntity = downloadResponse.getEntity()-->Line_19 $$ final HttpEntity downloadEntity = downloadResponse.getEntity()[ CD ]
Line_18 $$ final HttpResponse downloadResponse = this.client.execute(download)-->Line_19 $$ final HttpEntity downloadEntity = downloadResponse.getEntity()[ FD ]
Line_11 $$ if (linkTag != null) -->Line_20 $$ final long filesize = downloadEntity.getContentLength()[ CD ]
Line_20 $$ final long filesize = downloadEntity.getContentLength()-->Line_20 $$ final long filesize = downloadEntity.getContentLength()[ CD ]
Line_19 $$ final HttpEntity downloadEntity = downloadResponse.getEntity()-->Line_20 $$ final long filesize = downloadEntity.getContentLength()[ FD ]
Line_11 $$ if (linkTag != null) -->Line_21 $$ return createObject(downloadEntity.getContent(), filename, filesize)[ CD ]
Line_21 $$ return createObject(downloadEntity.getContent(), filename, filesize)-->Line_21 $$ return createObject(downloadEntity.getContent(), filename, filesize)[ CD ]
Line_13 $$ final String filename = IOUtil.getBaseName(link).trim()-->Line_21 $$ return createObject(downloadEntity.getContent(), filename, filesize)[ FD ]
Line_20 $$ final long filesize = downloadEntity.getContentLength()-->Line_21 $$ return createObject(downloadEntity.getContent(), filename, filesize)[ FD ]
Line_19 $$ final HttpEntity downloadEntity = downloadResponse.getEntity()-->Line_21 $$ return createObject(downloadEntity.getContent(), filename, filesize)[ FD ]
