Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String hmacSHA256(String message, byte[] key) [ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_3 $$ MessageDigest sha256 = null[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_9 $$ if (key.length > 64) [ CD ]
Line_9 $$ if (key.length > 64) -->Line_10 $$ sha256.update(key)[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_10 $$ sha256.update(key)[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_10 $$ sha256.update(key)[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_10 $$ sha256.update(key)[ FD ]
Line_9 $$ if (key.length > 64) -->Line_11 $$ key = sha256.digest()[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_11 $$ key = sha256.digest()[ FD ]
Line_11 $$ key = sha256.digest()-->Line_11 $$ key = sha256.digest()[ FD ]
Line_11 $$ key = sha256.digest()-->Line_11 $$ key = sha256.digest()[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_11 $$ key = sha256.digest()[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_11 $$ key = sha256.digest()[ FD ]
Line_9 $$ if (key.length > 64) -->Line_12 $$ sha256.reset()[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_12 $$ sha256.reset()[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_12 $$ sha256.reset()[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_14 $$ byte block[] = new byte[64][ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_2 $$ public String hmacSHA256(String message, byte[] key) [ CD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ CD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ CD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ block[i] = key[i][ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_2 $$ public String hmacSHA256(String message, byte[] key) [ CD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ CD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ CD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ block[i] = 0[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_2 $$ public String hmacSHA256(String message, byte[] key) [ CD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ CD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ CD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ block[i] ^= 0x36[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_18 $$ sha256.update(block)[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_18 $$ sha256.update(block)[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_18 $$ sha256.update(block)[ FD ]
Line_3 $$ MessageDigest sha256 = null-->Line_20 $$ sha256.update(message.getBytes("UTF-8"))[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_20 $$ sha256.update(message.getBytes("UTF-8"))[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_20 $$ sha256.update(message.getBytes("UTF-8"))[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_24 $$ byte[] hash = sha256.digest()[ CD ]
Line_24 $$ byte[] hash = sha256.digest()-->Line_24 $$ byte[] hash = sha256.digest()[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_24 $$ byte[] hash = sha256.digest()[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_24 $$ byte[] hash = sha256.digest()[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_25 $$ sha256.reset()[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_25 $$ sha256.reset()[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_25 $$ sha256.reset()[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_2 $$ public String hmacSHA256(String message, byte[] key) [ CD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ CD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ CD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ block[i] ^= (0x36 ^ 0x5c)[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_27 $$ sha256.update(block)[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_27 $$ sha256.update(block)[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_27 $$ sha256.update(block)[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_28 $$ sha256.update(hash)[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_28 $$ sha256.update(hash)[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_28 $$ sha256.update(hash)[ FD ]
Line_24 $$ byte[] hash = sha256.digest()-->Line_28 $$ sha256.update(hash)[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_29 $$ hash = sha256.digest()[ CD ]
Line_24 $$ byte[] hash = sha256.digest()-->Line_29 $$ hash = sha256.digest()[ FD ]
Line_29 $$ hash = sha256.digest()-->Line_29 $$ hash = sha256.digest()[ FD ]
Line_29 $$ hash = sha256.digest()-->Line_29 $$ hash = sha256.digest()[ CD ]
Line_3 $$ MessageDigest sha256 = null-->Line_29 $$ hash = sha256.digest()[ FD ]
Line_5 $$ sha256 = MessageDigest.getInstance("SHA-256")-->Line_29 $$ hash = sha256.digest()[ FD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_30 $$ char[] hexadecimals = new char[hash.length * 2][ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_2 $$ public String hmacSHA256(String message, byte[] key) [ CD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ CD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ CD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ CD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ CD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ CD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ CD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ FD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_33 $$ int value = (hash[i] >> (4 - 4 * j)) & 0xf[ CD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_34 $$ char base = (value < 10) ? ('0') : ('a' - 10)[ CD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_35 $$ hexadecimals[i * 2 + j] = (char) (base + value)[ CD ]
Line_2 $$ public String hmacSHA256(String message, byte[] key) -->Line_38 $$ return new String(hexadecimals)[ CD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ FD ]
Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i]-->Line_15 $$ for (int i = 0; i < key.length; ++i) block[i] = key[i][ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ FD ]
Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0-->Line_16 $$ for (int i = key.length; i < block.length; ++i) block[i] = 0[ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36-->Line_17 $$ for (int i = 0; i < 64; ++i) block[i] ^= 0x36[ FD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)-->Line_26 $$ for (int i = 0; i < 64; ++i) block[i] ^= (0x36 ^ 0x5c)[ FD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_31 $$ for (int i = 0; i < hash.length; ++i) -->Line_31 $$ for (int i = 0; i < hash.length; ++i) [ FD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ FD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ FD ]
Line_32 $$ for (int j = 0; j < 2; ++j) -->Line_32 $$ for (int j = 0; j < 2; ++j) [ FD ]
