Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException [ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_3 $$ File tempFile = TempFileHandler.getTempFile()[ CD ]
Line_3 $$ File tempFile = TempFileHandler.getTempFile()-->Line_3 $$ File tempFile = TempFileHandler.getTempFile()[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_5 $$ BufferedReader in = new BufferedReader(new FileReader(data.realPath))[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_6 $$ String[] env = getEnvironmentVariables(data)[ CD ]
Line_6 $$ String[] env = getEnvironmentVariables(data)-->Line_6 $$ String[] env = getEnvironmentVariables(data)[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_6 $$ String[] env = getEnvironmentVariables(data)[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_7 $$ if (ssi == null) [ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_10 $$ ssi.addEnvironment(env)[ CD ]
Line_6 $$ String[] env = getEnvironmentVariables(data)-->Line_10 $$ ssi.addEnvironment(env)[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_11 $$ if (data.resp == null) [ CD ]
Line_11 $$ if (data.resp == null) -->Line_12 $$ SimpleResponse resp = new SimpleResponse()[ CD ]
Line_11 $$ if (data.resp == null) -->Line_13 $$ resp.setHeader("Content-Type", "text/html")[ CD ]
Line_12 $$ SimpleResponse resp = new SimpleResponse()-->Line_13 $$ resp.setHeader("Content-Type", "text/html")[ FD ]
Line_11 $$ if (data.resp == null) -->Line_14 $$ moreHeaders(resp)[ CD ]
Line_12 $$ SimpleResponse resp = new SimpleResponse()-->Line_14 $$ moreHeaders(resp)[ FD ]
Line_11 $$ if (data.resp == null) -->Line_15 $$ resp.setHeader("Connection", "close")[ CD ]
Line_12 $$ SimpleResponse resp = new SimpleResponse()-->Line_15 $$ resp.setHeader("Connection", "close")[ FD ]
Line_11 $$ if (data.resp == null) -->Line_16 $$ data.resp = resp[ CD ]
Line_12 $$ SimpleResponse resp = new SimpleResponse()-->Line_16 $$ data.resp = resp[ FD ]
Line_11 $$ if (data.resp == null) -->Line_17 $$ resp.write(data.out)[ CD ]
Line_12 $$ SimpleResponse resp = new SimpleResponse()-->Line_17 $$ resp.write(data.out)[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_19 $$ String t[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_20 $$ int start[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_21 $$ Enumeration en[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_22 $$ boolean anIfCondition = true[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_23 $$ while ((t = in.readLine()) != null) [ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException [ CD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_23 $$ while ((t = in.readLine()) != null) [ FD ]
Line_19 $$ String t-->Line_23 $$ while ((t = in.readLine()) != null) [ FD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_23 $$ while ((t = in.readLine()) != null) [ CD ]
Line_5 $$ BufferedReader in = new BufferedReader(new FileReader(data.realPath))-->Line_23 $$ while ((t = in.readLine()) != null) [ FD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ CD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ FD ]
Line_20 $$ int start-->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ CD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ FD ]
Line_19 $$ String t-->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_25 $$ if (anIfCondition)[ CD ]
Line_25 $$ if (anIfCondition)-->Line_25 $$ out.write(t.substring(0, start).getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_19 $$ String t-->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_20 $$ int start-->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_27 $$ en = ssi.parse(t.substring(start)).elements()-->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_21 $$ Enumeration en-->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_27 $$ en = ssi.parse(t.substring(start)).elements()-->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ CD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_19 $$ String t-->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_20 $$ int start-->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_29 $$ while (en.hasMoreElements()) -->Line_29 $$ while (en.hasMoreElements()) [ CD ]
Line_27 $$ en = ssi.parse(t.substring(start)).elements()-->Line_29 $$ while (en.hasMoreElements()) [ FD ]
Line_21 $$ Enumeration en-->Line_29 $$ while (en.hasMoreElements()) [ FD ]
Line_29 $$ while (en.hasMoreElements()) -->Line_30 $$ command = (SSICommand) en.nextElement()[ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_30 $$ command = (SSICommand) en.nextElement()[ FD ]
Line_28 $$ SSICommand command-->Line_30 $$ command = (SSICommand) en.nextElement()[ FD ]
Line_27 $$ en = ssi.parse(t.substring(start)).elements()-->Line_30 $$ command = (SSICommand) en.nextElement()[ FD ]
Line_21 $$ Enumeration en-->Line_30 $$ command = (SSICommand) en.nextElement()[ FD ]
Line_29 $$ while (en.hasMoreElements()) -->Line_31 $$ logger.fine("Command=" + command)[ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_32 $$ switch(command.getCommand()) [ FD ]
Line_28 $$ SSICommand command-->Line_32 $$ switch(command.getCommand()) [ FD ]
Line_34 $$ anIfCondition = true-->Line_34 $$ anIfCondition = true[ FD ]
Line_22 $$ boolean anIfCondition = true-->Line_34 $$ anIfCondition = true[ FD ]
Line_34 $$ anIfCondition = true-->Line_37 $$ anIfCondition = false[ FD ]
Line_37 $$ anIfCondition = false-->Line_37 $$ anIfCondition = false[ FD ]
Line_22 $$ boolean anIfCondition = true-->Line_37 $$ anIfCondition = false[ FD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_40 $$ out.flush()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) [ FD ]
Line_28 $$ SSICommand command-->Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) [ FD ]
Line_28 $$ SSICommand command-->Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) [ FD ]
Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) -->Line_42 $$ HttpData d = newHttpData(data)[ CD ]
Line_42 $$ HttpData d = newHttpData(data)-->Line_42 $$ HttpData d = newHttpData(data)[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_42 $$ HttpData d = newHttpData(data)[ FD ]
Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) -->Line_43 $$ d.out = out[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_43 $$ d.out = out[ FD ]
Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) -->Line_44 $$ d.realPath = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())[ CD ]
Line_44 $$ d.realPath = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())-->Line_44 $$ d.realPath = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())[ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_44 $$ d.realPath = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())[ FD ]
Line_28 $$ SSICommand command-->Line_44 $$ d.realPath = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())[ FD ]
Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) -->Line_45 $$ new SsiHandler(d, ssi).perform()[ CD ]
Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) -->Line_47 $$ String application = getExtension(command.getFileType())[ CD ]
Line_47 $$ String application = getExtension(command.getFileType())-->Line_47 $$ String application = getExtension(command.getFileType())[ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_47 $$ String application = getExtension(command.getFileType())[ FD ]
Line_28 $$ SSICommand command-->Line_47 $$ String application = getExtension(command.getFileType())[ FD ]
Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) -->Line_48 $$ if (application == null) [ CD ]
Line_47 $$ String application = getExtension(command.getFileType())-->Line_48 $$ if (application == null) [ FD ]
Line_48 $$ if (application == null) -->Line_49 $$ writePaused(new FileInputStream(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())), out, pause)[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_49 $$ writePaused(new FileInputStream(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())), out, pause)[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_49 $$ writePaused(new FileInputStream(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())), out, pause)[ FD ]
Line_28 $$ SSICommand command-->Line_49 $$ writePaused(new FileInputStream(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())), out, pause)[ FD ]
Line_48 $$ if (application == null) -->Line_51 $$ String parameter = ""[ CD ]
Line_48 $$ if (application == null) -->Line_52 $$ if (command.getMessage().indexOf("php") >= 0) [ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_52 $$ if (command.getMessage().indexOf("php") >= 0) [ FD ]
Line_28 $$ SSICommand command-->Line_52 $$ if (command.getMessage().indexOf("php") >= 0) [ FD ]
Line_52 $$ if (command.getMessage().indexOf("php") >= 0) -->Line_53 $$ parameter = "-f "[ CD ]
Line_51 $$ String parameter = ""-->Line_53 $$ parameter = "-f "[ FD ]
Line_53 $$ parameter = "-f "-->Line_53 $$ parameter = "-f "[ FD ]
Line_48 $$ if (application == null) -->Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))[ CD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))[ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))[ FD ]
Line_28 $$ SSICommand command-->Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))[ FD ]
Line_48 $$ if (application == null) -->Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))[ CD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))[ FD ]
Line_48 $$ if (application == null) -->Line_57 $$ String aLine[ CD ]
Line_48 $$ if (application == null) -->Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ CD ]
Line_48 $$ if (application == null) -->Line_48 $$ if (application == null) [ CD ]
Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_57 $$ String aLine-->Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ CD ]
Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_58 $$ out.write((aLine + "\n").getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_58 $$ out.write((aLine + "\n").getBytes())[ FD ]
Line_48 $$ if (application == null) -->Line_59 $$ pIn.close()[ CD ]
Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_59 $$ pIn.close()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_64 $$ Process p = Runtime.getRuntime().exec(command.getMessage())[ FD ]
Line_28 $$ SSICommand command-->Line_64 $$ Process p = Runtime.getRuntime().exec(command.getMessage())[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_65 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))[ FD ]
Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_57 $$ String aLine-->Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ CD ]
Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_67 $$ out.write((aLine + "\n").getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_67 $$ out.write((aLine + "\n").getBytes())[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_68 $$ BufferedReader pErr = new BufferedReader(new InputStreamReader(p.getErrorStream()))[ FD ]
Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_67 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_58 $$ while ((aLine = pIn.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_57 $$ String aLine-->Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())[ FD ]
Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())[ CD ]
Line_69 $$ while ((aLine = pErr.readLine()) != null) out.write((aLine + "\n").getBytes())-->Line_69 $$ out.write((aLine + "\n").getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_69 $$ out.write((aLine + "\n").getBytes())[ FD ]
Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_70 $$ pIn.close()[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_72 $$ p.destroy()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_75 $$ File incFile = HttpThread.getMappedFilename(command.getMessage())[ FD ]
Line_28 $$ SSICommand command-->Line_75 $$ File incFile = HttpThread.getMappedFilename(command.getMessage())[ FD ]
Line_76 $$ if (incFile.exists() && incFile.canRead()) -->Line_77 $$ writePaused(new FileInputStream(incFile), out, pause)[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_77 $$ writePaused(new FileInputStream(incFile), out, pause)[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_81 $$ long sizeBytes = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).length()[ FD ]
Line_28 $$ SSICommand command-->Line_81 $$ long sizeBytes = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).length()[ FD ]
Line_84 $$ if (command.getFileType().trim().equals("abbrev")) -->Line_84 $$ if (command.getFileType().trim().equals("abbrev")) [ CD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_84 $$ if (command.getFileType().trim().equals("abbrev")) [ FD ]
Line_28 $$ SSICommand command-->Line_84 $$ if (command.getFileType().trim().equals("abbrev")) [ FD ]
Line_84 $$ if (command.getFileType().trim().equals("abbrev")) -->Line_85 $$ if (sizeBytes > 1000000) [ CD ]
Line_85 $$ if (sizeBytes > 1000000) -->Line_88 $$ if (sizeBytes > 1000) [ CD ]
Line_84 $$ if (command.getFileType().trim().equals("abbrev")) -->Line_96 $$ out.write((numberFormat.format(smartSize) + "" + unit).getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_96 $$ out.write((numberFormat.format(smartSize) + "" + unit).getBytes())[ FD ]
Line_84 $$ if (command.getFileType().trim().equals("abbrev")) -->Line_99 $$ out.write((numberFormat.format(sizeBytes) + " " + unit).getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_99 $$ out.write((numberFormat.format(sizeBytes) + " " + unit).getBytes())[ FD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_103 $$ out.write(ssi.format(new Date(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).lastModified()), TimeZone.getTimeZone("GMT")).getBytes())[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_103 $$ out.write(ssi.format(new Date(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).lastModified()), TimeZone.getTimeZone("GMT")).getBytes())[ FD ]
Line_28 $$ SSICommand command-->Line_103 $$ out.write(ssi.format(new Date(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).lastModified()), TimeZone.getTimeZone("GMT")).getBytes())[ FD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_109 $$ out.write(command.getMessage().getBytes())[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_109 $$ out.write(command.getMessage().getBytes())[ FD ]
Line_28 $$ SSICommand command-->Line_109 $$ out.write(command.getMessage().getBytes())[ FD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_115 $$ out.write((ssi.getErrorMessage() + " " + e.getMessage()).getBytes())[ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_117 $$ if (anIfCondition)[ CD ]
Line_117 $$ if (anIfCondition)-->Line_117 $$ out.write("\n".getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_117 $$ out.write("\n".getBytes())[ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_119 $$ if (anIfCondition)[ CD ]
Line_119 $$ if (anIfCondition)-->Line_119 $$ out.write((t + "\n").getBytes())[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_119 $$ out.write((t + "\n").getBytes())[ FD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_121 $$ out.flush()[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_121 $$ out.flush()[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_123 $$ in.close()[ CD ]
Line_5 $$ BufferedReader in = new BufferedReader(new FileReader(data.realPath))-->Line_123 $$ in.close()[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_124 $$ out.close()[ CD ]
Line_4 $$ FileOutputStream out = new FileOutputStream(tempFile)-->Line_124 $$ out.close()[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_125 $$ data.fileData.setContentType("text/html")[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_126 $$ data.fileData.setFile(tempFile)[ CD ]
Line_3 $$ File tempFile = TempFileHandler.getTempFile()-->Line_126 $$ data.fileData.setFile(tempFile)[ FD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_127 $$ writePaused(new FileInputStream(tempFile), data.out, pause)[ CD ]
Line_2 $$ private void handleSSI(HttpData data) throws HttpError, IOException -->Line_128 $$ logger.fine("HandleSSI done for " + data.resp)[ CD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) [ FD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_25 $$ out.write(t.substring(0, start).getBytes())[ FD ]
Line_23 $$ while ((t = in.readLine()) != null) -->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_24 $$ if ((start = t.indexOf("<!--#")) > -1) -->Line_27 $$ en = ssi.parse(t.substring(start)).elements()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_32 $$ switch(command.getCommand()) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_41 $$ if (command.getFileType() != null && command.getFileType().startsWith("shtm")) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_44 $$ d.realPath = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_47 $$ String application = getExtension(command.getFileType())[ FD ]
Line_47 $$ String application = getExtension(command.getFileType())-->Line_48 $$ if (application == null) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_49 $$ writePaused(new FileInputStream(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl())), out, pause)[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_52 $$ if (command.getMessage().indexOf("php") >= 0) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))[ FD ]
Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_59 $$ pIn.close()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_64 $$ Process p = Runtime.getRuntime().exec(command.getMessage())[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_65 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_68 $$ BufferedReader pErr = new BufferedReader(new InputStreamReader(p.getErrorStream()))[ FD ]
Line_56 $$ BufferedReader pIn = new BufferedReader(new InputStreamReader(p.getInputStream()))-->Line_70 $$ pIn.close()[ FD ]
Line_55 $$ Process p = Runtime.getRuntime().exec(application + " " + parameter + HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()))-->Line_72 $$ p.destroy()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_75 $$ File incFile = HttpThread.getMappedFilename(command.getMessage())[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_81 $$ long sizeBytes = HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).length()[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_84 $$ if (command.getFileType().trim().equals("abbrev")) [ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_103 $$ out.write(ssi.format(new Date(HttpThread.getMappedFilename(command.getMessage(), data.req.getUrl()).lastModified()), TimeZone.getTimeZone("GMT")).getBytes())[ FD ]
Line_30 $$ command = (SSICommand) en.nextElement()-->Line_109 $$ out.write(command.getMessage().getBytes())[ FD ]
