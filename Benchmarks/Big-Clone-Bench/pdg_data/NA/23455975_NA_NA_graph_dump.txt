Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized boolean storePipeline() [ CD ]
Line_2 $$ public synchronized boolean storePipeline() -->Line_3 $$ if (logDebugEnabled)[ CD ]
Line_3 $$ if (logDebugEnabled)-->Line_3 $$ log.debug("Storing pipeline " + this.getName() + " with " + this.size() + " elements")[ CD ]
Line_2 $$ public synchronized boolean storePipeline() -->Line_4 $$ boolean retVal = false[ CD ]
Line_2 $$ public synchronized boolean storePipeline() -->Line_5 $$ Connection conn = null[ CD ]
Line_5 $$ Connection conn = null-->Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)[ CD ]
Line_5 $$ Connection conn = null-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_9 $$ PreparedStatement ps = conn.prepareStatement("DELETE from PipelineBlackboard where pipelineid=" + this.getId())-->Line_9 $$ PreparedStatement ps = conn.prepareStatement("DELETE from PipelineBlackboard where pipelineid=" + this.getId())[ CD ]
Line_5 $$ Connection conn = null-->Line_9 $$ PreparedStatement ps = conn.prepareStatement("DELETE from PipelineBlackboard where pipelineid=" + this.getId())[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_9 $$ PreparedStatement ps = conn.prepareStatement("DELETE from PipelineBlackboard where pipelineid=" + this.getId())[ FD ]
Line_10 $$ int rowCount = ps.executeUpdate()-->Line_10 $$ int rowCount = ps.executeUpdate()[ CD ]
Line_9 $$ PreparedStatement ps = conn.prepareStatement("DELETE from PipelineBlackboard where pipelineid=" + this.getId())-->Line_10 $$ int rowCount = ps.executeUpdate()[ FD ]
Line_11 $$ if (logDebugEnabled)-->Line_11 $$ log.debug("Removed old data (" + rowCount + " rows)")[ CD ]
Line_13 $$ Iterator i = super.iterator()-->Line_13 $$ Iterator i = super.iterator()[ CD ]
Line_14 $$ while (i.hasNext()) -->Line_14 $$ while (i.hasNext()) [ CD ]
Line_13 $$ Iterator i = super.iterator()-->Line_14 $$ while (i.hasNext()) [ FD ]
Line_14 $$ while (i.hasNext()) -->Line_15 $$ pe = (TrackSourcePipelineElement) i.next()[ CD ]
Line_15 $$ pe = (TrackSourcePipelineElement) i.next()-->Line_15 $$ pe = (TrackSourcePipelineElement) i.next()[ FD ]
Line_12 $$ TrackSourcePipelineElement pe = null-->Line_15 $$ pe = (TrackSourcePipelineElement) i.next()[ FD ]
Line_13 $$ Iterator i = super.iterator()-->Line_15 $$ pe = (TrackSourcePipelineElement) i.next()[ FD ]
Line_14 $$ while (i.hasNext()) -->Line_16 $$ retVal = pe.storeState(conn)[ CD ]
Line_16 $$ retVal = pe.storeState(conn)-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_4 $$ boolean retVal = false-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_16 $$ retVal = pe.storeState(conn)-->Line_16 $$ retVal = pe.storeState(conn)[ CD ]
Line_15 $$ pe = (TrackSourcePipelineElement) i.next()-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_12 $$ TrackSourcePipelineElement pe = null-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_5 $$ Connection conn = null-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_14 $$ while (i.hasNext()) -->Line_17 $$ if (!retVal) [ CD ]
Line_16 $$ retVal = pe.storeState(conn)-->Line_17 $$ if (!retVal) [ FD ]
Line_4 $$ boolean retVal = false-->Line_17 $$ if (!retVal) [ FD ]
Line_17 $$ if (!retVal) -->Line_17 $$ if (!retVal) [ CD ]
Line_16 $$ retVal = pe.storeState(conn)-->Line_17 $$ if (!retVal) [ FD ]
Line_4 $$ boolean retVal = false-->Line_17 $$ if (!retVal) [ FD ]
Line_21 $$ if (retVal) -->Line_22 $$ conn.commit()[ CD ]
Line_5 $$ Connection conn = null-->Line_22 $$ conn.commit()[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_22 $$ conn.commit()[ FD ]
Line_21 $$ if (retVal) -->Line_24 $$ conn.rollback()[ CD ]
Line_5 $$ Connection conn = null-->Line_24 $$ conn.rollback()[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_24 $$ conn.rollback()[ FD ]
Line_5 $$ Connection conn = null-->Line_26 $$ conn.setAutoCommit(true)[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_26 $$ conn.setAutoCommit(true)[ FD ]
Line_5 $$ Connection conn = null-->Line_29 $$ conn.rollback()[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_29 $$ conn.rollback()[ FD ]
Line_5 $$ Connection conn = null-->Line_35 $$ conn.close()[ FD ]
Line_7 $$ conn = PoolManager.getInstance().getConnection(JukeXTrackStore.DB_NAME)-->Line_35 $$ conn.close()[ FD ]
Line_2 $$ public synchronized boolean storePipeline() -->Line_39 $$ return retVal[ CD ]
Line_15 $$ pe = (TrackSourcePipelineElement) i.next()-->Line_16 $$ retVal = pe.storeState(conn)[ FD ]
Line_16 $$ retVal = pe.storeState(conn)-->Line_17 $$ if (!retVal) [ FD ]
Line_16 $$ retVal = pe.storeState(conn)-->Line_17 $$ if (!retVal) [ FD ]
