Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void checkForUpgrade(Event event) throws Exception [ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_3 $$ ((Component) UiUtil.findComponent("downloadUpgrade")).setVisible(false)[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_4 $$ ((Component) UiUtil.findComponent("applyUpgrade")).setVisible(false)[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_5 $$ ((Component) UiUtil.findComponent("restartRequiredHbox")).setVisible(false)[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_6 $$ ((Component) UiUtil.findComponent("restartRequiredAlert")).setVisible(false)[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_7 $$ new Command("DELETE FROM TBLINSTALLATION WHERE STATUS<>'APPLIED'").executeNonQuery()[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_8 $$ String clientAppliedVersion = new Command("SELECT MAX(VERSION) FROM TBLINSTALLATION WHERE STATUS='APPLIED'").executeScalarAsString()[ CD ]
Line_8 $$ String clientAppliedVersion = new Command("SELECT MAX(VERSION) FROM TBLINSTALLATION WHERE STATUS='APPLIED'").executeScalarAsString()-->Line_8 $$ String clientAppliedVersion = new Command("SELECT MAX(VERSION) FROM TBLINSTALLATION WHERE STATUS='APPLIED'").executeScalarAsString()[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_9 $$ if (NullStatus.isNull(clientAppliedVersion)) [ CD ]
Line_8 $$ String clientAppliedVersion = new Command("SELECT MAX(VERSION) FROM TBLINSTALLATION WHERE STATUS='APPLIED'").executeScalarAsString()-->Line_9 $$ if (NullStatus.isNull(clientAppliedVersion)) [ FD ]
Line_9 $$ if (NullStatus.isNull(clientAppliedVersion)) -->Line_9 $$ if (NullStatus.isNull(clientAppliedVersion)) [ CD ]
Line_8 $$ String clientAppliedVersion = new Command("SELECT MAX(VERSION) FROM TBLINSTALLATION WHERE STATUS='APPLIED'").executeScalarAsString()-->Line_9 $$ if (NullStatus.isNull(clientAppliedVersion)) [ FD ]
Line_9 $$ if (NullStatus.isNull(clientAppliedVersion)) -->Line_10 $$ clientAppliedVersion = "20050101"[ CD ]
Line_8 $$ String clientAppliedVersion = new Command("SELECT MAX(VERSION) FROM TBLINSTALLATION WHERE STATUS='APPLIED'").executeScalarAsString()-->Line_10 $$ clientAppliedVersion = "20050101"[ FD ]
Line_10 $$ clientAppliedVersion = "20050101"-->Line_10 $$ clientAppliedVersion = "20050101"[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_12 $$ String macquery = ""[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_13 $$ String clientMAC = ""[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_14 $$ String clientUNITID = UiUtil.getUNITUID()[ CD ]
Line_14 $$ String clientUNITID = UiUtil.getUNITUID()-->Line_14 $$ String clientUNITID = UiUtil.getUNITUID()[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_15 $$ ArrayList<String> macList = getMacList()[ CD ]
Line_15 $$ ArrayList<String> macList = getMacList()-->Line_15 $$ ArrayList<String> macList = getMacList()[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_2 $$ public static void checkForUpgrade(Event event) throws Exception [ CD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ CD ]
Line_15 $$ ArrayList<String> macList = getMacList()-->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ CD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ CD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_17 $$ clientMAC += macList.get(i) + ","[ CD ]
Line_17 $$ clientMAC += macList.get(i) + ","-->Line_17 $$ clientMAC += macList.get(i) + ","[ FD ]
Line_13 $$ String clientMAC = ""-->Line_17 $$ clientMAC += macList.get(i) + ","[ FD ]
Line_15 $$ ArrayList<String> macList = getMacList()-->Line_17 $$ clientMAC += macList.get(i) + ","[ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_17 $$ clientMAC += macList.get(i) + ","[ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_18 $$ macquery += "'" + macList.get(i) + "'"[ CD ]
Line_18 $$ macquery += "'" + macList.get(i) + "'"-->Line_18 $$ macquery += "'" + macList.get(i) + "'"[ FD ]
Line_12 $$ String macquery = ""-->Line_18 $$ macquery += "'" + macList.get(i) + "'"[ FD ]
Line_15 $$ ArrayList<String> macList = getMacList()-->Line_18 $$ macquery += "'" + macList.get(i) + "'"[ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_18 $$ macquery += "'" + macList.get(i) + "'"[ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_19 $$ if (i < macList.size() - 1) [ CD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_19 $$ if (i < macList.size() - 1) [ FD ]
Line_15 $$ ArrayList<String> macList = getMacList()-->Line_19 $$ if (i < macList.size() - 1) [ FD ]
Line_19 $$ if (i < macList.size() - 1) -->Line_20 $$ macquery += ","[ CD ]
Line_18 $$ macquery += "'" + macList.get(i) + "'"-->Line_20 $$ macquery += ","[ FD ]
Line_20 $$ macquery += ","-->Line_20 $$ macquery += ","[ FD ]
Line_12 $$ String macquery = ""-->Line_20 $$ macquery += ","[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_23 $$ URL urlLICENSEQUERY = new URL("http://www.tegsoft.com/Tobe/forms/TobeOS/upgrade/upgrade_current.jsp?tegsoftCLIENTVERSION=" + clientAppliedVersion + "&tegsoftCLIENTUNITID=" + clientUNITID + "&tegsoftCLIENTMAC=" + clientMAC + "&tegsoftCOMMAND=LICENSEQUERY")[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()[ CD ]
Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()-->Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()[ CD ]
Line_23 $$ URL urlLICENSEQUERY = new URL("http://www.tegsoft.com/Tobe/forms/TobeOS/upgrade/upgrade_current.jsp?tegsoftCLIENTVERSION=" + clientAppliedVersion + "&tegsoftCLIENTUNITID=" + clientUNITID + "&tegsoftCLIENTMAC=" + clientMAC + "&tegsoftCOMMAND=LICENSEQUERY")-->Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ CD ]
Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()-->Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_26 $$ String commingList = ""[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_27 $$ String line[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_28 $$ while ((line = in.readLine()) != null) [ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_2 $$ public static void checkForUpgrade(Event event) throws Exception [ CD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_28 $$ while ((line = in.readLine()) != null) [ FD ]
Line_27 $$ String line-->Line_28 $$ while ((line = in.readLine()) != null) [ FD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_28 $$ while ((line = in.readLine()) != null) [ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_28 $$ while ((line = in.readLine()) != null) [ FD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_29 $$ commingList += line[ CD ]
Line_29 $$ commingList += line-->Line_29 $$ commingList += line[ FD ]
Line_26 $$ String commingList = ""-->Line_29 $$ commingList += line[ FD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_29 $$ commingList += line[ FD ]
Line_27 $$ String line-->Line_29 $$ commingList += line[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_31 $$ in.close()[ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_31 $$ in.close()[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_32 $$ String licenseArray[] = commingList.split("</ROW>")[ CD ]
Line_32 $$ String licenseArray[] = commingList.split("</ROW>")-->Line_32 $$ String licenseArray[] = commingList.split("</ROW>")[ CD ]
Line_29 $$ commingList += line-->Line_32 $$ String licenseArray[] = commingList.split("</ROW>")[ FD ]
Line_26 $$ String commingList = ""-->Line_32 $$ String licenseArray[] = commingList.split("</ROW>")[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_33 $$ if (licenseArray.length > 0) [ CD ]
Line_33 $$ if (licenseArray.length > 0) -->Line_34 $$ String fields[] = licenseArray[0].split("</FLD>")[ CD ]
Line_34 $$ String fields[] = licenseArray[0].split("</FLD>")-->Line_34 $$ String fields[] = licenseArray[0].split("</FLD>")[ CD ]
Line_33 $$ if (licenseArray.length > 0) -->Line_35 $$ String STATUS = fields[0][ CD ]
Line_33 $$ if (licenseArray.length > 0) -->Line_36 $$ String ERRORMSG = fields[1][ CD ]
Line_33 $$ if (licenseArray.length > 0) -->Line_37 $$ if ("FAIL".equals(STATUS)) [ CD ]
Line_35 $$ String STATUS = fields[0]-->Line_37 $$ if ("FAIL".equals(STATUS)) [ FD ]
Line_37 $$ if ("FAIL".equals(STATUS)) -->Line_37 $$ if ("FAIL".equals(STATUS)) [ CD ]
Line_35 $$ String STATUS = fields[0]-->Line_37 $$ if ("FAIL".equals(STATUS)) [ FD ]
Line_37 $$ if ("FAIL".equals(STATUS)) -->Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) [ FD ]
Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) -->Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) [ FD ]
Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) -->Line_39 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_1))[ CD ]
Line_38 $$ if ("NOUNITID".equals(ERRORMSG)) -->Line_40 $$ return[ CD ]
Line_37 $$ if ("FAIL".equals(STATUS)) -->Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ FD ]
Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) -->Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ FD ]
Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) -->Line_43 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_1))[ CD ]
Line_42 $$ if ("NOCUSTOMER".equals(ERRORMSG)) -->Line_44 $$ return[ CD ]
Line_37 $$ if ("FAIL".equals(STATUS)) -->Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ FD ]
Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) -->Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ FD ]
Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) -->Line_47 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_2))[ CD ]
Line_46 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) -->Line_48 $$ return[ CD ]
Line_37 $$ if ("FAIL".equals(STATUS)) -->Line_50 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_3))[ CD ]
Line_37 $$ if ("FAIL".equals(STATUS)) -->Line_51 $$ return[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_54 $$ Dataset TBLLICENSE = new Dataset("TBLLICENSE", "TBLLICENSE")[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_55 $$ Command command = new Command("DELETE FROM TBLLICENSE WHERE UNITUID=[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_56 $$ command.append(macquery)[ CD ]
Line_55 $$ Command command = new Command("DELETE FROM TBLLICENSE WHERE UNITUID=-->Line_56 $$ command.append(macquery)[ FD ]
Line_18 $$ macquery += "'" + macList.get(i) + "'"-->Line_56 $$ command.append(macquery)[ FD ]
Line_20 $$ macquery += ","-->Line_56 $$ command.append(macquery)[ FD ]
Line_12 $$ String macquery = ""-->Line_56 $$ command.append(macquery)[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_57 $$ command.append(") OR NOTES IS NULL) ")[ CD ]
Line_55 $$ Command command = new Command("DELETE FROM TBLLICENSE WHERE UNITUID=-->Line_57 $$ command.append(") OR NOTES IS NULL) ")[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_58 $$ command.executeNonQuery()[ CD ]
Line_55 $$ Command command = new Command("DELETE FROM TBLLICENSE WHERE UNITUID=-->Line_58 $$ command.executeNonQuery()[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_2 $$ public static void checkForUpgrade(Event event) throws Exception [ CD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_60 $$ String fields[] = licenseArray[i].split("</FLD>")[ CD ]
Line_60 $$ String fields[] = licenseArray[i].split("</FLD>")-->Line_60 $$ String fields[] = licenseArray[i].split("</FLD>")[ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_61 $$ String LICTYPE = fields[0][ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_62 $$ String UNIQUEKEY = fields[1][ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_63 $$ String LICKEY = fields[2][ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()[ CD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()[ CD ]
Line_54 $$ Dataset TBLLICENSE = new Dataset("TBLLICENSE", "TBLLICENSE")-->Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()[ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_65 $$ dataRow.set("LICENSENAME", LICTYPE)[ CD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_65 $$ dataRow.set("LICENSENAME", LICTYPE)[ FD ]
Line_61 $$ String LICTYPE = fields[0]-->Line_65 $$ dataRow.set("LICENSENAME", LICTYPE)[ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_66 $$ dataRow.set("LICENSE", LICKEY)[ CD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_66 $$ dataRow.set("LICENSE", LICKEY)[ FD ]
Line_63 $$ String LICKEY = fields[2]-->Line_66 $$ dataRow.set("LICENSE", LICKEY)[ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_67 $$ dataRow.set("NOTES", UNIQUEKEY)[ CD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_67 $$ dataRow.set("NOTES", UNIQUEKEY)[ FD ]
Line_62 $$ String UNIQUEKEY = fields[1]-->Line_67 $$ dataRow.set("NOTES", UNIQUEKEY)[ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_68 $$ TBLLICENSE.save()[ CD ]
Line_54 $$ Dataset TBLLICENSE = new Dataset("TBLLICENSE", "TBLLICENSE")-->Line_68 $$ TBLLICENSE.save()[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_70 $$ URL url = new URL("http://www.tegsoft.com/Tobe/forms/TobeOS/upgrade/upgrade_current.jsp?tegsoftCLIENTVERSION=" + clientAppliedVersion + "&tegsoftCLIENTUNITID=" + clientUNITID + "&tegsoftCLIENTMAC=" + clientMAC)[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_71 $$ urlConnection = url.openConnection()[ CD ]
Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()-->Line_71 $$ urlConnection = url.openConnection()[ FD ]
Line_71 $$ urlConnection = url.openConnection()-->Line_71 $$ urlConnection = url.openConnection()[ FD ]
Line_71 $$ urlConnection = url.openConnection()-->Line_71 $$ urlConnection = url.openConnection()[ CD ]
Line_70 $$ URL url = new URL("http://www.tegsoft.com/Tobe/forms/TobeOS/upgrade/upgrade_current.jsp?tegsoftCLIENTVERSION=" + clientAppliedVersion + "&tegsoftCLIENTUNITID=" + clientUNITID + "&tegsoftCLIENTMAC=" + clientMAC)-->Line_71 $$ urlConnection = url.openConnection()[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ FD ]
Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ FD ]
Line_24 $$ URLConnection urlConnection = urlLICENSEQUERY.openConnection()-->Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ FD ]
Line_71 $$ urlConnection = url.openConnection()-->Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_73 $$ String upgradeList = ""[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_74 $$ while ((line = in.readLine()) != null) [ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_2 $$ public static void checkForUpgrade(Event event) throws Exception [ CD ]
Line_74 $$ while ((line = in.readLine()) != null) -->Line_74 $$ while ((line = in.readLine()) != null) [ FD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_74 $$ while ((line = in.readLine()) != null) [ FD ]
Line_27 $$ String line-->Line_74 $$ while ((line = in.readLine()) != null) [ FD ]
Line_74 $$ while ((line = in.readLine()) != null) -->Line_74 $$ while ((line = in.readLine()) != null) [ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_74 $$ while ((line = in.readLine()) != null) [ FD ]
Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_74 $$ while ((line = in.readLine()) != null) [ FD ]
Line_74 $$ while ((line = in.readLine()) != null) -->Line_75 $$ upgradeList += line[ CD ]
Line_75 $$ upgradeList += line-->Line_75 $$ upgradeList += line[ FD ]
Line_73 $$ String upgradeList = ""-->Line_75 $$ upgradeList += line[ FD ]
Line_74 $$ while ((line = in.readLine()) != null) -->Line_75 $$ upgradeList += line[ FD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_75 $$ upgradeList += line[ FD ]
Line_27 $$ String line-->Line_75 $$ upgradeList += line[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_77 $$ in.close()[ CD ]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_77 $$ in.close()[ FD ]
Line_72 $$ in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))-->Line_77 $$ in.close()[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_78 $$ Dataset TBLINSTALLATION = new Dataset("TBLINSTALLATION", "TBLINSTALLATION")[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_79 $$ String upgrades[] = upgradeList.split("</ROW>")[ CD ]
Line_79 $$ String upgrades[] = upgradeList.split("</ROW>")-->Line_79 $$ String upgrades[] = upgradeList.split("</ROW>")[ CD ]
Line_75 $$ upgradeList += line-->Line_79 $$ String upgrades[] = upgradeList.split("</ROW>")[ FD ]
Line_73 $$ String upgradeList = ""-->Line_79 $$ String upgrades[] = upgradeList.split("</ROW>")[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_80 $$ if (upgrades.length > 0) [ CD ]
Line_80 $$ if (upgrades.length > 0) -->Line_81 $$ String fields[] = upgrades[0].split("</FLD>")[ CD ]
Line_80 $$ if (upgrades.length > 0) -->Line_84 $$ if ("FAIL".equals(STATUS)) [ CD ]
Line_35 $$ String STATUS = fields[0]-->Line_84 $$ if ("FAIL".equals(STATUS)) [ FD ]
Line_84 $$ if ("FAIL".equals(STATUS)) -->Line_84 $$ if ("FAIL".equals(STATUS)) [ CD ]
Line_35 $$ String STATUS = fields[0]-->Line_84 $$ if ("FAIL".equals(STATUS)) [ FD ]
Line_84 $$ if ("FAIL".equals(STATUS)) -->Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) [ FD ]
Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) -->Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) [ FD ]
Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) -->Line_86 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_1))[ CD ]
Line_85 $$ if ("NOUNITID".equals(ERRORMSG)) -->Line_87 $$ return[ CD ]
Line_84 $$ if ("FAIL".equals(STATUS)) -->Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ FD ]
Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) -->Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) [ FD ]
Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) -->Line_90 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_1))[ CD ]
Line_89 $$ if ("NOCUSTOMER".equals(ERRORMSG)) -->Line_91 $$ return[ CD ]
Line_84 $$ if ("FAIL".equals(STATUS)) -->Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ FD ]
Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) -->Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ CD ]
Line_36 $$ String ERRORMSG = fields[1]-->Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) [ FD ]
Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) -->Line_94 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_2))[ CD ]
Line_93 $$ if ("NOVALIDLICENSE".equals(ERRORMSG)) -->Line_95 $$ return[ CD ]
Line_84 $$ if ("FAIL".equals(STATUS)) -->Line_97 $$ UiUtil.showMessage(MessageType.ERROR, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_3))[ CD ]
Line_84 $$ if ("FAIL".equals(STATUS)) -->Line_98 $$ return[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_101 $$ boolean restartRequired = false[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_102 $$ boolean updateAvailable = false[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_2 $$ public static void checkForUpgrade(Event event) throws Exception [ CD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_104 $$ String fields[] = upgrades[i].split("</FLD>")[ CD ]
Line_104 $$ String fields[] = upgrades[i].split("</FLD>")-->Line_104 $$ String fields[] = upgrades[i].split("</FLD>")[ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_105 $$ String VERSION = fields[0][ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_106 $$ String ORDERID = fields[1][ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_107 $$ String UPGRADETYPE = fields[2][ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_108 $$ String DESCRIPTION = fields[3][ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_109 $$ String STATUS = "UNAPPLIED"[ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_110 $$ String PRDNAME = "TegsoftCC"[ CD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ CD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) -->Line_112 $$ restartRequired = true[ CD ]
Line_112 $$ restartRequired = true-->Line_112 $$ restartRequired = true[ FD ]
Line_101 $$ boolean restartRequired = false-->Line_112 $$ restartRequired = true[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()[ CD ]
Line_78 $$ Dataset TBLINSTALLATION = new Dataset("TBLINSTALLATION", "TBLINSTALLATION")-->Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_115 $$ dataRow.set("ORDERID", ORDERID)[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_115 $$ dataRow.set("ORDERID", ORDERID)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_115 $$ dataRow.set("ORDERID", ORDERID)[ FD ]
Line_106 $$ String ORDERID = fields[1]-->Line_115 $$ dataRow.set("ORDERID", ORDERID)[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_116 $$ dataRow.set("PRDNAME", PRDNAME)[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_116 $$ dataRow.set("PRDNAME", PRDNAME)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_116 $$ dataRow.set("PRDNAME", PRDNAME)[ FD ]
Line_110 $$ String PRDNAME = "TegsoftCC"-->Line_116 $$ dataRow.set("PRDNAME", PRDNAME)[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_117 $$ dataRow.set("UPGRADETYPE", UPGRADETYPE)[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_117 $$ dataRow.set("UPGRADETYPE", UPGRADETYPE)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_117 $$ dataRow.set("UPGRADETYPE", UPGRADETYPE)[ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_117 $$ dataRow.set("UPGRADETYPE", UPGRADETYPE)[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_118 $$ dataRow.set("VERSION", VERSION)[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_118 $$ dataRow.set("VERSION", VERSION)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_118 $$ dataRow.set("VERSION", VERSION)[ FD ]
Line_105 $$ String VERSION = fields[0]-->Line_118 $$ dataRow.set("VERSION", VERSION)[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_119 $$ dataRow.set("STATUS", STATUS)[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_119 $$ dataRow.set("STATUS", STATUS)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_119 $$ dataRow.set("STATUS", STATUS)[ FD ]
Line_109 $$ String STATUS = "UNAPPLIED"-->Line_119 $$ dataRow.set("STATUS", STATUS)[ FD ]
Line_35 $$ String STATUS = fields[0]-->Line_119 $$ dataRow.set("STATUS", STATUS)[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_120 $$ dataRow.set("DESCRIPTION", DESCRIPTION)[ CD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_120 $$ dataRow.set("DESCRIPTION", DESCRIPTION)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_120 $$ dataRow.set("DESCRIPTION", DESCRIPTION)[ FD ]
Line_108 $$ String DESCRIPTION = fields[3]-->Line_120 $$ dataRow.set("DESCRIPTION", DESCRIPTION)[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_121 $$ TBLINSTALLATION.save()[ CD ]
Line_78 $$ Dataset TBLINSTALLATION = new Dataset("TBLINSTALLATION", "TBLINSTALLATION")-->Line_121 $$ TBLINSTALLATION.save()[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_122 $$ updateAvailable = true[ CD ]
Line_122 $$ updateAvailable = true-->Line_122 $$ updateAvailable = true[ FD ]
Line_102 $$ boolean updateAvailable = false-->Line_122 $$ updateAvailable = true[ FD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_124 $$ UiUtil.getDataset("TBLINSTALLATION").reFill()[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_125 $$ if (restartRequired) [ CD ]
Line_125 $$ if (restartRequired) -->Line_126 $$ ((Component) UiUtil.findComponent("restartRequiredHbox")).setVisible(true)[ CD ]
Line_125 $$ if (restartRequired) -->Line_127 $$ ((Component) UiUtil.findComponent("restartRequiredAlert")).setVisible(true)[ CD ]
Line_2 $$ public static void checkForUpgrade(Event event) throws Exception -->Line_129 $$ if (updateAvailable) [ CD ]
Line_129 $$ if (updateAvailable) -->Line_130 $$ ((Component) UiUtil.findComponent("downloadUpgrade")).setVisible(true)[ CD ]
Line_129 $$ if (updateAvailable) -->Line_131 $$ UiUtil.showMessage(MessageType.INFO, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_4))[ CD ]
Line_129 $$ if (updateAvailable) -->Line_133 $$ UiUtil.showMessage(MessageType.INFO, MessageUtil.getMessage(Upgrade.class, Messages.upgrade_5))[ CD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_16 $$ for (int i = 0; i < macList.size(); i++) [ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_17 $$ clientMAC += macList.get(i) + ","[ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_18 $$ macquery += "'" + macList.get(i) + "'"[ FD ]
Line_16 $$ for (int i = 0; i < macList.size(); i++) -->Line_19 $$ if (i < macList.size() - 1) [ FD ]
Line_28 $$ while ((line = in.readLine()) != null) -->Line_29 $$ commingList += line[ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ FD ]
Line_59 $$ for (int i = 1; i < licenseArray.length; i++) -->Line_59 $$ for (int i = 1; i < licenseArray.length; i++) [ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_65 $$ dataRow.set("LICENSENAME", LICTYPE)[ FD ]
Line_61 $$ String LICTYPE = fields[0]-->Line_65 $$ dataRow.set("LICENSENAME", LICTYPE)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_66 $$ dataRow.set("LICENSE", LICKEY)[ FD ]
Line_63 $$ String LICKEY = fields[2]-->Line_66 $$ dataRow.set("LICENSE", LICKEY)[ FD ]
Line_64 $$ DataRow dataRow = TBLLICENSE.addNewDataRow()-->Line_67 $$ dataRow.set("NOTES", UNIQUEKEY)[ FD ]
Line_62 $$ String UNIQUEKEY = fields[1]-->Line_67 $$ dataRow.set("NOTES", UNIQUEKEY)[ FD ]
Line_74 $$ while ((line = in.readLine()) != null) -->Line_75 $$ upgradeList += line[ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_103 $$ for (int i = 1; i < upgrades.length; i++) -->Line_103 $$ for (int i = 1; i < upgrades.length; i++) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_111 $$ if ("TEGSOFTJARS".equals(UPGRADETYPE) || "TOBEJARS".equals(UPGRADETYPE) || "ALLJARS".equals(UPGRADETYPE) || "CONFIGASTERISK".equals(UPGRADETYPE)) [ FD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_115 $$ dataRow.set("ORDERID", ORDERID)[ FD ]
Line_106 $$ String ORDERID = fields[1]-->Line_115 $$ dataRow.set("ORDERID", ORDERID)[ FD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_116 $$ dataRow.set("PRDNAME", PRDNAME)[ FD ]
Line_110 $$ String PRDNAME = "TegsoftCC"-->Line_116 $$ dataRow.set("PRDNAME", PRDNAME)[ FD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_117 $$ dataRow.set("UPGRADETYPE", UPGRADETYPE)[ FD ]
Line_107 $$ String UPGRADETYPE = fields[2]-->Line_117 $$ dataRow.set("UPGRADETYPE", UPGRADETYPE)[ FD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_118 $$ dataRow.set("VERSION", VERSION)[ FD ]
Line_105 $$ String VERSION = fields[0]-->Line_118 $$ dataRow.set("VERSION", VERSION)[ FD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_119 $$ dataRow.set("STATUS", STATUS)[ FD ]
Line_109 $$ String STATUS = "UNAPPLIED"-->Line_119 $$ dataRow.set("STATUS", STATUS)[ FD ]
Line_114 $$ DataRow dataRow = TBLINSTALLATION.addNewDataRow()-->Line_120 $$ dataRow.set("DESCRIPTION", DESCRIPTION)[ FD ]
Line_108 $$ String DESCRIPTION = fields[3]-->Line_120 $$ dataRow.set("DESCRIPTION", DESCRIPTION)[ FD ]
