Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void processAnnotationsJar(URL url) [ CD ]
Line_2 $$ protected void processAnnotationsJar(URL url) -->Line_3 $$ JarFile jarFile = null[ CD ]
Line_5 $$ URLConnection urlConn = url.openConnection()-->Line_5 $$ URLConnection urlConn = url.openConnection()[ CD ]
Line_2 $$ protected void processAnnotationsJar(URL url) -->Line_5 $$ URLConnection urlConn = url.openConnection()[ FD ]
Line_7 $$ if (!(urlConn instanceof JarURLConnection)) -->Line_7 $$ if (!(urlConn instanceof JarURLConnection)) [ CD ]
Line_7 $$ if (!(urlConn instanceof JarURLConnection)) -->Line_8 $$ sm.getString("contextConfig.jarUrl", url)[ CD ]
Line_2 $$ protected void processAnnotationsJar(URL url) -->Line_8 $$ sm.getString("contextConfig.jarUrl", url)[ FD ]
Line_7 $$ if (!(urlConn instanceof JarURLConnection)) -->Line_9 $$ return[ CD ]
Line_6 $$ JarURLConnection jarUrlConn-->Line_11 $$ jarUrlConn = (JarURLConnection) urlConn[ FD ]
Line_11 $$ jarUrlConn = (JarURLConnection) urlConn-->Line_11 $$ jarUrlConn = (JarURLConnection) urlConn[ FD ]
Line_6 $$ JarURLConnection jarUrlConn-->Line_12 $$ jarUrlConn.setUseCaches(false)[ FD ]
Line_11 $$ jarUrlConn = (JarURLConnection) urlConn-->Line_12 $$ jarUrlConn.setUseCaches(false)[ FD ]
Line_3 $$ JarFile jarFile = null-->Line_13 $$ jarFile = jarUrlConn.getJarFile()[ FD ]
Line_13 $$ jarFile = jarUrlConn.getJarFile()-->Line_13 $$ jarFile = jarUrlConn.getJarFile()[ FD ]
Line_13 $$ jarFile = jarUrlConn.getJarFile()-->Line_13 $$ jarFile = jarUrlConn.getJarFile()[ CD ]
Line_6 $$ JarURLConnection jarUrlConn-->Line_13 $$ jarFile = jarUrlConn.getJarFile()[ FD ]
Line_11 $$ jarUrlConn = (JarURLConnection) urlConn-->Line_13 $$ jarFile = jarUrlConn.getJarFile()[ FD ]
Line_14 $$ Enumeration<JarEntry> jarEntries = jarFile.entries()-->Line_14 $$ Enumeration<JarEntry> jarEntries = jarFile.entries()[ CD ]
Line_3 $$ JarFile jarFile = null-->Line_14 $$ Enumeration<JarEntry> jarEntries = jarFile.entries()[ FD ]
Line_13 $$ jarFile = jarUrlConn.getJarFile()-->Line_14 $$ Enumeration<JarEntry> jarEntries = jarFile.entries()[ FD ]
Line_15 $$ while (jarEntries.hasMoreElements()) -->Line_15 $$ while (jarEntries.hasMoreElements()) [ CD ]
Line_14 $$ Enumeration<JarEntry> jarEntries = jarFile.entries()-->Line_15 $$ while (jarEntries.hasMoreElements()) [ FD ]
Line_15 $$ while (jarEntries.hasMoreElements()) -->Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()[ CD ]
Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()-->Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()[ CD ]
Line_14 $$ Enumeration<JarEntry> jarEntries = jarFile.entries()-->Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()[ FD ]
Line_15 $$ while (jarEntries.hasMoreElements()) -->Line_17 $$ String entryName = jarEntry.getName()[ CD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_17 $$ String entryName = jarEntry.getName()[ CD ]
Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()-->Line_17 $$ String entryName = jarEntry.getName()[ FD ]
Line_15 $$ while (jarEntries.hasMoreElements()) -->Line_18 $$ if (entryName.endsWith(".class")) [ CD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_18 $$ if (entryName.endsWith(".class")) [ FD ]
Line_18 $$ if (entryName.endsWith(".class")) -->Line_18 $$ if (entryName.endsWith(".class")) [ CD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_18 $$ if (entryName.endsWith(".class")) [ FD ]
Line_18 $$ if (entryName.endsWith(".class")) -->Line_19 $$ InputStream is = null[ CD ]
Line_19 $$ InputStream is = null-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ CD ]
Line_3 $$ JarFile jarFile = null-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ FD ]
Line_13 $$ jarFile = jarUrlConn.getJarFile()-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ FD ]
Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ FD ]
Line_19 $$ InputStream is = null-->Line_22 $$ processAnnotationsStream(is)[ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_22 $$ processAnnotationsStream(is)[ FD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_24 $$ logger.error(sm.getString("contextConfig.inputStreamJar", entryName, url), e)[ FD ]
Line_2 $$ protected void processAnnotationsJar(URL url) -->Line_24 $$ logger.error(sm.getString("contextConfig.inputStreamJar", entryName, url), e)[ FD ]
Line_19 $$ InputStream is = null-->Line_26 $$ if (is != null) [ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_26 $$ if (is != null) [ FD ]
Line_19 $$ InputStream is = null-->Line_28 $$ is.close()[ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_28 $$ is.close()[ FD ]
Line_2 $$ protected void processAnnotationsJar(URL url) -->Line_37 $$ logger.error(sm.getString("contextConfig.jarFile", url), e)[ FD ]
Line_3 $$ JarFile jarFile = null-->Line_39 $$ if (jarFile != null) [ FD ]
Line_13 $$ jarFile = jarUrlConn.getJarFile()-->Line_39 $$ if (jarFile != null) [ FD ]
Line_3 $$ JarFile jarFile = null-->Line_41 $$ jarFile.close()[ FD ]
Line_13 $$ jarFile = jarUrlConn.getJarFile()-->Line_41 $$ jarFile.close()[ FD ]
Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()-->Line_17 $$ String entryName = jarEntry.getName()[ FD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_18 $$ if (entryName.endsWith(".class")) [ FD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_18 $$ if (entryName.endsWith(".class")) [ FD ]
Line_16 $$ JarEntry jarEntry = jarEntries.nextElement()-->Line_21 $$ is = jarFile.getInputStream(jarEntry)[ FD ]
Line_19 $$ InputStream is = null-->Line_22 $$ processAnnotationsStream(is)[ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_22 $$ processAnnotationsStream(is)[ FD ]
Line_17 $$ String entryName = jarEntry.getName()-->Line_24 $$ logger.error(sm.getString("contextConfig.inputStreamJar", entryName, url), e)[ FD ]
Line_19 $$ InputStream is = null-->Line_26 $$ if (is != null) [ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_26 $$ if (is != null) [ FD ]
Line_19 $$ InputStream is = null-->Line_28 $$ is.close()[ FD ]
Line_21 $$ is = jarFile.getInputStream(jarEntry)-->Line_28 $$ is.close()[ FD ]
