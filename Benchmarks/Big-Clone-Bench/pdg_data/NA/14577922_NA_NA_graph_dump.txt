Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException [ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_3 $$ String encoded = ""[ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_4 $$ if (vars != null) [ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_4 $$ if (vars != null) [ FD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_5 $$ for (String key : vars.keySet()) [ FD ]
Line_3 $$ String encoded = ""-->Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")[ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")[ FD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")[ FD ]
Line_5 $$ for (String key : vars.keySet()) -->Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")[ FD ]
Line_4 $$ if (vars != null) -->Line_12 $$ if (encoded.length() > 0) [ CD ]
Line_3 $$ String encoded = ""-->Line_12 $$ if (encoded.length() > 0) [ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_12 $$ if (encoded.length() > 0) [ FD ]
Line_12 $$ if (encoded.length() > 0) -->Line_13 $$ encoded = encoded.substring(1)[ CD ]
Line_3 $$ String encoded = ""-->Line_13 $$ encoded = encoded.substring(1)[ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_13 $$ encoded = encoded.substring(1)[ FD ]
Line_13 $$ encoded = encoded.substring(1)-->Line_13 $$ encoded = encoded.substring(1)[ FD ]
Line_13 $$ encoded = encoded.substring(1)-->Line_13 $$ encoded = encoded.substring(1)[ CD ]
Line_3 $$ String encoded = ""-->Line_13 $$ encoded = encoded.substring(1)[ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_13 $$ encoded = encoded.substring(1)[ FD ]
Line_13 $$ encoded = encoded.substring(1)-->Line_13 $$ encoded = encoded.substring(1)[ FD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_16 $$ String url = this.endpoint + path[ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_17 $$ if (method.toUpperCase().equals("GET"))[ CD ]
Line_17 $$ if (method.toUpperCase().equals("GET"))-->Line_17 $$ if (method.toUpperCase().equals("GET"))[ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_17 $$ if (method.toUpperCase().equals("GET"))[ FD ]
Line_17 $$ if (method.toUpperCase().equals("GET"))-->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ CD ]
Line_16 $$ String url = this.endpoint + path-->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ FD ]
Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded-->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ FD ]
Line_3 $$ String encoded = ""-->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ FD ]
Line_13 $$ encoded = encoded.substring(1)-->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ FD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_17 $$ url += ((path.indexOf('?') == -1) ? "?" : "&") + encoded[ FD ]
Line_19 $$ URL resturl = new URL(url)-->Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()[ FD ]
Line_21 $$ String userpass = this.accountSid + ":" + this.authToken-->Line_22 $$ String encodeuserpass = new String(Base64.encodeToByte(userpass.getBytes(), false))[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_23 $$ con.setRequestProperty("Authorization", "Basic " + encodeuserpass)[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_24 $$ con.setDoOutput(true)[ FD ]
Line_25 $$ if (method.toUpperCase().equals("GET")) -->Line_25 $$ if (method.toUpperCase().equals("GET")) [ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_25 $$ if (method.toUpperCase().equals("GET")) [ FD ]
Line_25 $$ if (method.toUpperCase().equals("GET")) -->Line_26 $$ con.setRequestMethod("GET")[ CD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_26 $$ con.setRequestMethod("GET")[ FD ]
Line_25 $$ if (method.toUpperCase().equals("GET")) -->Line_27 $$ if (method.toUpperCase().equals("POST")) [ CD ]
Line_27 $$ if (method.toUpperCase().equals("POST")) -->Line_27 $$ if (method.toUpperCase().equals("POST")) [ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_27 $$ if (method.toUpperCase().equals("POST")) [ FD ]
Line_27 $$ if (method.toUpperCase().equals("POST")) -->Line_28 $$ con.setRequestMethod("POST")[ CD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_28 $$ con.setRequestMethod("POST")[ FD ]
Line_27 $$ if (method.toUpperCase().equals("POST")) -->Line_29 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())[ CD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_29 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())[ FD ]
Line_27 $$ if (method.toUpperCase().equals("POST")) -->Line_30 $$ out.write(encoded)[ CD ]
Line_29 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())-->Line_30 $$ out.write(encoded)[ FD ]
Line_3 $$ String encoded = ""-->Line_30 $$ out.write(encoded)[ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_30 $$ out.write(encoded)[ FD ]
Line_13 $$ encoded = encoded.substring(1)-->Line_30 $$ out.write(encoded)[ FD ]
Line_27 $$ if (method.toUpperCase().equals("POST")) -->Line_31 $$ out.close()[ CD ]
Line_29 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())-->Line_31 $$ out.close()[ FD ]
Line_27 $$ if (method.toUpperCase().equals("POST")) -->Line_32 $$ if (method.toUpperCase().equals("PUT")) [ CD ]
Line_32 $$ if (method.toUpperCase().equals("PUT")) -->Line_32 $$ if (method.toUpperCase().equals("PUT")) [ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_32 $$ if (method.toUpperCase().equals("PUT")) [ FD ]
Line_32 $$ if (method.toUpperCase().equals("PUT")) -->Line_33 $$ con.setRequestMethod("PUT")[ CD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_33 $$ con.setRequestMethod("PUT")[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_34 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())[ FD ]
Line_32 $$ if (method.toUpperCase().equals("PUT")) -->Line_35 $$ out.write(encoded)[ CD ]
Line_29 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())-->Line_35 $$ out.write(encoded)[ FD ]
Line_3 $$ String encoded = ""-->Line_35 $$ out.write(encoded)[ FD ]
Line_7 $$ encoded += "&" + key + "=" + URLEncoder.encode(vars.get(key), "UTF-8")-->Line_35 $$ out.write(encoded)[ FD ]
Line_13 $$ encoded = encoded.substring(1)-->Line_35 $$ out.write(encoded)[ FD ]
Line_32 $$ if (method.toUpperCase().equals("PUT")) -->Line_36 $$ out.close()[ CD ]
Line_29 $$ OutputStreamWriter out = new OutputStreamWriter(con.getOutputStream())-->Line_36 $$ out.close()[ FD ]
Line_32 $$ if (method.toUpperCase().equals("PUT")) -->Line_37 $$ if (method.toUpperCase().equals("DELETE")) [ CD ]
Line_37 $$ if (method.toUpperCase().equals("DELETE")) -->Line_37 $$ if (method.toUpperCase().equals("DELETE")) [ CD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_37 $$ if (method.toUpperCase().equals("DELETE")) [ FD ]
Line_37 $$ if (method.toUpperCase().equals("DELETE")) -->Line_38 $$ con.setRequestMethod("DELETE")[ CD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_38 $$ con.setRequestMethod("DELETE")[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_44 $$ if (con.getInputStream() != null) [ FD ]
Line_44 $$ if (con.getInputStream() != null) -->Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ CD ]
Line_42 $$ BufferedReader in = null-->Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_48 $$ if (con.getErrorStream() != null) [ FD ]
Line_48 $$ if (con.getErrorStream() != null) -->Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))[ CD ]
Line_42 $$ BufferedReader in = null-->Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))[ FD ]
Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))[ FD ]
Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))-->Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))[ FD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))[ FD ]
Line_42 $$ BufferedReader in = null-->Line_52 $$ if (in == null) [ FD ]
Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_52 $$ if (in == null) [ FD ]
Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))-->Line_52 $$ if (in == null) [ FD ]
Line_57 $$ while ((line = in.readLine()) != null) -->Line_57 $$ while ((line = in.readLine()) != null) [ FD ]
Line_56 $$ String line-->Line_57 $$ while ((line = in.readLine()) != null) [ FD ]
Line_57 $$ while ((line = in.readLine()) != null) -->Line_57 $$ while ((line = in.readLine()) != null) [ CD ]
Line_42 $$ BufferedReader in = null-->Line_57 $$ while ((line = in.readLine()) != null) [ FD ]
Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_57 $$ while ((line = in.readLine()) != null) [ FD ]
Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))-->Line_57 $$ while ((line = in.readLine()) != null) [ FD ]
Line_57 $$ while ((line = in.readLine()) != null) -->Line_58 $$ decodedString.append(line)[ CD ]
Line_55 $$ StringBuffer decodedString = new StringBuffer()-->Line_58 $$ decodedString.append(line)[ FD ]
Line_57 $$ while ((line = in.readLine()) != null) -->Line_58 $$ decodedString.append(line)[ FD ]
Line_56 $$ String line-->Line_58 $$ decodedString.append(line)[ FD ]
Line_42 $$ BufferedReader in = null-->Line_60 $$ in.close()[ FD ]
Line_45 $$ in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_60 $$ in.close()[ FD ]
Line_49 $$ in = new BufferedReader(new InputStreamReader(con.getErrorStream()))-->Line_60 $$ in.close()[ FD ]
Line_61 $$ int responseCode = con.getResponseCode()-->Line_61 $$ int responseCode = con.getResponseCode()[ CD ]
Line_20 $$ HttpURLConnection con = (HttpURLConnection) resturl.openConnection()-->Line_61 $$ int responseCode = con.getResponseCode()[ FD ]
Line_55 $$ StringBuffer decodedString = new StringBuffer()-->Line_62 $$ return new TwilioRestResponse(url, decodedString.toString(), responseCode)[ FD ]
Line_2 $$ public TwilioRestResponse request(String path, String method, Map<String, String> vars) throws TwilioRestException -->Line_68 $$ return null[ CD ]
Line_57 $$ while ((line = in.readLine()) != null) -->Line_58 $$ decodedString.append(line)[ FD ]
