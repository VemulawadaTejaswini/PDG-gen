Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String toString() [ CD ]
Line_2 $$ public String toString() -->Line_3 $$ if (byteArrayOutputStream == null)[ CD ]
Line_3 $$ if (byteArrayOutputStream == null)-->Line_3 $$ return "<Unparsed binary data: Content-Type=" + getHeader("Content-Type") + " >"[ CD ]
Line_2 $$ public String toString() -->Line_4 $$ String charsetName = getCharsetName()[ CD ]
Line_4 $$ String charsetName = getCharsetName()-->Line_4 $$ String charsetName = getCharsetName()[ CD ]
Line_2 $$ public String toString() -->Line_5 $$ if (charsetName == null)[ CD ]
Line_4 $$ String charsetName = getCharsetName()-->Line_5 $$ if (charsetName == null)[ FD ]
Line_5 $$ if (charsetName == null)-->Line_5 $$ charsetName = "ISO-8859-1"[ CD ]
Line_4 $$ String charsetName = getCharsetName()-->Line_5 $$ charsetName = "ISO-8859-1"[ FD ]
Line_5 $$ charsetName = "ISO-8859-1"-->Line_5 $$ charsetName = "ISO-8859-1"[ FD ]
Line_7 $$ if (unzip) -->Line_8 $$ GZIPInputStream gzipInputStream = new GZIPInputStream(new ByteArrayInputStream(byteArrayOutputStream.toByteArray()))[ CD ]
Line_7 $$ if (unzip) -->Line_9 $$ ByteArrayOutputStream unzippedResult = new ByteArrayOutputStream()[ CD ]
Line_7 $$ if (unzip) -->Line_10 $$ IOUtils.copy(gzipInputStream, unzippedResult)[ CD ]
Line_8 $$ GZIPInputStream gzipInputStream = new GZIPInputStream(new ByteArrayInputStream(byteArrayOutputStream.toByteArray()))-->Line_10 $$ IOUtils.copy(gzipInputStream, unzippedResult)[ FD ]
Line_9 $$ ByteArrayOutputStream unzippedResult = new ByteArrayOutputStream()-->Line_10 $$ IOUtils.copy(gzipInputStream, unzippedResult)[ FD ]
Line_7 $$ if (unzip) -->Line_11 $$ return unzippedResult.toString(charsetName)[ CD ]
Line_11 $$ return unzippedResult.toString(charsetName)-->Line_11 $$ return unzippedResult.toString(charsetName)[ CD ]
Line_9 $$ ByteArrayOutputStream unzippedResult = new ByteArrayOutputStream()-->Line_11 $$ return unzippedResult.toString(charsetName)[ FD ]
Line_4 $$ String charsetName = getCharsetName()-->Line_11 $$ return unzippedResult.toString(charsetName)[ FD ]
Line_5 $$ charsetName = "ISO-8859-1"-->Line_11 $$ return unzippedResult.toString(charsetName)[ FD ]
Line_7 $$ if (unzip) -->Line_13 $$ return byteArrayOutputStream.toString(charsetName)[ CD ]
Line_13 $$ return byteArrayOutputStream.toString(charsetName)-->Line_13 $$ return byteArrayOutputStream.toString(charsetName)[ CD ]
Line_4 $$ String charsetName = getCharsetName()-->Line_13 $$ return byteArrayOutputStream.toString(charsetName)[ FD ]
Line_5 $$ charsetName = "ISO-8859-1"-->Line_13 $$ return byteArrayOutputStream.toString(charsetName)[ FD ]
