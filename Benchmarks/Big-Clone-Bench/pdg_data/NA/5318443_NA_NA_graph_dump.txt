Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void init(IWorkbench workbench) [ CD ]
Line_2 $$ public void init(IWorkbench workbench) -->Line_3 $$ preferences.setFilename(CorePlugin.getDefault().getStateLocation().append("log4j.properties").toOSString())[ CD ]
Line_2 $$ public void init(IWorkbench workbench) -->Line_4 $$ registry = Platform.getExtensionRegistry()[ CD ]
Line_2 $$ public void init(IWorkbench workbench) -->Line_5 $$ extensionPoint = registry.getExtensionPoint(CorePlugin.LOGGER_PREFERENCES_EXTENSION_POINT)[ CD ]
Line_2 $$ public void init(IWorkbench workbench) -->Line_6 $$ IConfigurationElement[] members = extensionPoint.getConfigurationElements()[ CD ]
Line_6 $$ IConfigurationElement[] members = extensionPoint.getConfigurationElements()-->Line_6 $$ IConfigurationElement[] members = extensionPoint.getConfigurationElements()[ CD ]
Line_2 $$ public void init(IWorkbench workbench) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ CD ]
Line_2 $$ public void init(IWorkbench workbench) -->Line_2 $$ public void init(IWorkbench workbench) [ CD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_8 $$ IConfigurationElement element = members[i][ CD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_9 $$ if (element.getName().equals("logger")) [ CD ]
Line_9 $$ if (element.getName().equals("logger")) -->Line_9 $$ if (element.getName().equals("logger")) [ CD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_9 $$ if (element.getName().equals("logger")) [ FD ]
Line_9 $$ if (element.getName().equals("logger")) -->Line_10 $$ if (element.getAttribute("defaultValue") != null) [ CD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_10 $$ if (element.getAttribute("defaultValue") != null) [ FD ]
Line_10 $$ if (element.getAttribute("defaultValue") != null) -->Line_11 $$ String[] item = element.getAttribute("name").split(";")[ CD ]
Line_11 $$ String[] item = element.getAttribute("name").split(";")-->Line_11 $$ String[] item = element.getAttribute("name").split(";")[ CD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_11 $$ String[] item = element.getAttribute("name").split(";")[ FD ]
Line_10 $$ if (element.getAttribute("defaultValue") != null) -->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ CD ]
Line_10 $$ if (element.getAttribute("defaultValue") != null) -->Line_10 $$ if (element.getAttribute("defaultValue") != null) [ CD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ CD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ CD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ FD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ CD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_12 $$ preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ FD ]
Line_17 $$ URL url = CorePlugin.getDefault().getBundle().getResource("log4j.properties")-->Line_17 $$ URL url = CorePlugin.getDefault().getBundle().getResource("log4j.properties")[ CD ]
Line_18 $$ Properties properties = new Properties()-->Line_19 $$ properties.load(url.openStream())[ FD ]
Line_17 $$ URL url = CorePlugin.getDefault().getBundle().getResource("log4j.properties")-->Line_19 $$ properties.load(url.openStream())[ FD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) [ CD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) [ CD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) [ CD ]
Line_18 $$ Properties properties = new Properties()-->Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) [ FD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_21 $$ String key = (String) iter.next()[ CD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_21 $$ String key = (String) iter.next()[ FD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_22 $$ preferences.setDefault(key, (String) properties.get(key))[ CD ]
Line_21 $$ String key = (String) iter.next()-->Line_22 $$ preferences.setDefault(key, (String) properties.get(key))[ FD ]
Line_18 $$ Properties properties = new Properties()-->Line_22 $$ preferences.setDefault(key, (String) properties.get(key))[ FD ]
Line_21 $$ String key = (String) iter.next()-->Line_22 $$ preferences.setDefault(key, (String) properties.get(key))[ FD ]
Line_24 $$ File file = CorePlugin.getDefault().getStateLocation().append("log4j.properties").toFile()-->Line_24 $$ File file = CorePlugin.getDefault().getStateLocation().append("log4j.properties").toFile()[ CD ]
Line_24 $$ File file = CorePlugin.getDefault().getStateLocation().append("log4j.properties").toFile()-->Line_25 $$ if (file.exists())[ FD ]
Line_25 $$ if (file.exists())-->Line_25 $$ if (file.exists())[ CD ]
Line_24 $$ File file = CorePlugin.getDefault().getStateLocation().append("log4j.properties").toFile()-->Line_25 $$ if (file.exists())[ FD ]
Line_25 $$ if (file.exists())-->Line_25 $$ preferences.load(new FileInputStream(file))[ CD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < members.length; i++) -->Line_7 $$ for (int i = 0; i < members.length; i++) [ FD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_9 $$ if (element.getName().equals("logger")) [ FD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_10 $$ if (element.getAttribute("defaultValue") != null) [ FD ]
Line_8 $$ IConfigurationElement element = members[i]-->Line_11 $$ String[] item = element.getAttribute("name").split(";")[ FD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ FD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ FD ]
Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))-->Line_12 $$ for (int x = 0; x < item.length; x++) preferences.setDefault("log4j.logger." + item[x], element.getAttribute("defaultValue"))[ FD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) [ FD ]
Line_20 $$ for (Iterator iter = properties.keySet().iterator(); iter.hasNext(); ) -->Line_21 $$ String key = (String) iter.next()[ FD ]
Line_21 $$ String key = (String) iter.next()-->Line_22 $$ preferences.setDefault(key, (String) properties.get(key))[ FD ]
Line_21 $$ String key = (String) iter.next()-->Line_22 $$ preferences.setDefault(key, (String) properties.get(key))[ FD ]
