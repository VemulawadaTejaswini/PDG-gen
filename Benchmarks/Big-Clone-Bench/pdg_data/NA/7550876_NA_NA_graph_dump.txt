Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void test(TestHarness harness) [ CD ]
Line_2 $$ public void test(TestHarness harness) -->Line_3 $$ harness.checkPoint("TestOfMD4")[ CD ]
Line_2 $$ public void test(TestHarness harness) -->Line_3 $$ harness.checkPoint("TestOfMD4")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_8 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_9 $$ harness.fail("TestOfMD4.provider")[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')[ CD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')[ CD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ algorithm.update((byte) 'a')[ CD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_14 $$ byte[] md = algorithm.digest()[ CD ]
Line_2 $$ public void test(TestHarness harness) -->Line_16 $$ harness.check(exp.equals(Util.toHexString(md)), "testSixtyFourA")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_16 $$ harness.check(exp.equals(Util.toHexString(md)), "testSixtyFourA")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_16 $$ harness.check(exp.equals(Util.toHexString(md)), "testSixtyFourA")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_18 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_19 $$ harness.fail("TestOfMD4.provider")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_22 $$ harness.verbose("NOTE: This test may take a while.")[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ FD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ CD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ CD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ FD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ algorithm.update((byte) 'a')[ CD ]
Line_2 $$ public void test(TestHarness harness) -->Line_26 $$ harness.check(exp.equals(Util.toHexString(md)), "test536870913A")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_26 $$ harness.check(exp.equals(Util.toHexString(md)), "test536870913A")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_26 $$ harness.check(exp.equals(Util.toHexString(md)), "test536870913A")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_28 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_29 $$ harness.fail("TestOfMD4.provider")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_34 $$ harness.check(exp.equals(Util.toHexString(md)), "testA")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_34 $$ harness.check(exp.equals(Util.toHexString(md)), "testA")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_34 $$ harness.check(exp.equals(Util.toHexString(md)), "testA")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_36 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_37 $$ harness.fail("TestOfMD4.testA")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_42 $$ harness.check(exp.equals(Util.toHexString(md)), "testABC")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_42 $$ harness.check(exp.equals(Util.toHexString(md)), "testABC")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_42 $$ harness.check(exp.equals(Util.toHexString(md)), "testABC")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_44 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_45 $$ harness.fail("TestOfMD4.testABC")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_50 $$ harness.check(exp.equals(Util.toHexString(md)), "testMessageDigest")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_50 $$ harness.check(exp.equals(Util.toHexString(md)), "testMessageDigest")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_50 $$ harness.check(exp.equals(Util.toHexString(md)), "testMessageDigest")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_52 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_53 $$ harness.fail("TestOfMD4.testMessageDigest")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_58 $$ harness.check(exp.equals(Util.toHexString(md)), "testAlphabet")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_58 $$ harness.check(exp.equals(Util.toHexString(md)), "testAlphabet")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_58 $$ harness.check(exp.equals(Util.toHexString(md)), "testAlphabet")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_60 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_61 $$ harness.fail("TestOfMD4.testAlphabet")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_66 $$ harness.check(exp.equals(Util.toHexString(md)), "testAsciiSubset")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_66 $$ harness.check(exp.equals(Util.toHexString(md)), "testAsciiSubset")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_66 $$ harness.check(exp.equals(Util.toHexString(md)), "testAsciiSubset")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_68 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_69 $$ harness.fail("TestOfMD4.testAsciiSubset")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_74 $$ harness.check(exp.equals(Util.toHexString(md)), "testEightyNumerics")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_74 $$ harness.check(exp.equals(Util.toHexString(md)), "testEightyNumerics")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_74 $$ harness.check(exp.equals(Util.toHexString(md)), "testEightyNumerics")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_76 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_77 $$ harness.fail("TestOfMD4.testEightyNumerics")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_84 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #1")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_84 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #1")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_84 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #1")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_86 $$ md = clone.digest()[ FD ]
Line_86 $$ md = clone.digest()-->Line_86 $$ md = clone.digest()[ FD ]
Line_86 $$ md = clone.digest()-->Line_86 $$ md = clone.digest()[ CD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_87 $$ exp = "a448017aaf21d8525fc10ae87aa6729d"[ FD ]
Line_87 $$ exp = "a448017aaf21d8525fc10ae87aa6729d"-->Line_87 $$ exp = "a448017aaf21d8525fc10ae87aa6729d"[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_88 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #2")[ FD ]
Line_15 $$ String exp = "52f5076fabd22680234a3fa9f9dc5732"-->Line_88 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #2")[ FD ]
Line_87 $$ exp = "a448017aaf21d8525fc10ae87aa6729d"-->Line_88 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #2")[ FD ]
Line_14 $$ byte[] md = algorithm.digest()-->Line_88 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #2")[ FD ]
Line_86 $$ md = clone.digest()-->Line_88 $$ harness.check(exp.equals(Util.toHexString(md)), "testCloning #2")[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_90 $$ harness.debug(x)[ FD ]
Line_2 $$ public void test(TestHarness harness) -->Line_91 $$ harness.fail("TestOfMD4.testCloning")[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')[ FD ]
Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')-->Line_13 $$ for (int i = 0; i < 64; i++) algorithm.update((byte) 'a')[ FD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ FD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ FD ]
Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')-->Line_23 $$ for (int i = 0; i < 536870913; i++) algorithm.update((byte) 'a')[ FD ]
