Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) [ CD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_3 $$ URL url = clazz.getResource(chain.file())[ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_3 $$ URL url = clazz.getResource(chain.file())[ CD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_3 $$ URL url = clazz.getResource(chain.file())[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_3 $$ URL url = clazz.getResource(chain.file())[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_4 $$ if (url == null) [ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_4 $$ if (url == null) [ FD ]
Line_4 $$ if (url == null) -->Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())[ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())[ FD ]
Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())-->Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())[ FD ]
Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())-->Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())[ CD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_7 $$ if (url == null) [ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_7 $$ if (url == null) [ FD ]
Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())-->Line_7 $$ if (url == null) [ FD ]
Line_7 $$ if (url == null) -->Line_8 $$ String tmp = clazz.getPackage().getName()[ CD ]
Line_8 $$ String tmp = clazz.getPackage().getName()-->Line_8 $$ String tmp = clazz.getPackage().getName()[ CD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_8 $$ String tmp = clazz.getPackage().getName()[ FD ]
Line_7 $$ if (url == null) -->Line_9 $$ tmp = tmp.replace('.', '/')[ CD ]
Line_8 $$ String tmp = clazz.getPackage().getName()-->Line_9 $$ tmp = tmp.replace('.', '/')[ FD ]
Line_9 $$ tmp = tmp.replace('.', '/')-->Line_9 $$ tmp = tmp.replace('.', '/')[ FD ]
Line_9 $$ tmp = tmp.replace('.', '/')-->Line_9 $$ tmp = tmp.replace('.', '/')[ CD ]
Line_8 $$ String tmp = clazz.getPackage().getName()-->Line_9 $$ tmp = tmp.replace('.', '/')[ FD ]
Line_9 $$ tmp = tmp.replace('.', '/')-->Line_9 $$ tmp = tmp.replace('.', '/')[ FD ]
Line_7 $$ if (url == null) -->Line_10 $$ tmp += "/" + chain.file()[ CD ]
Line_8 $$ String tmp = clazz.getPackage().getName()-->Line_10 $$ tmp += "/" + chain.file()[ FD ]
Line_9 $$ tmp = tmp.replace('.', '/')-->Line_10 $$ tmp += "/" + chain.file()[ FD ]
Line_10 $$ tmp += "/" + chain.file()-->Line_10 $$ tmp += "/" + chain.file()[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_10 $$ tmp += "/" + chain.file()[ FD ]
Line_7 $$ if (url == null) -->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ FD ]
Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ FD ]
Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ FD ]
Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ CD ]
Line_8 $$ String tmp = clazz.getPackage().getName()-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ FD ]
Line_9 $$ tmp = tmp.replace('.', '/')-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ FD ]
Line_10 $$ tmp += "/" + chain.file()-->Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_13 $$ if (url == null) [ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_13 $$ if (url == null) [ FD ]
Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())-->Line_13 $$ if (url == null) [ FD ]
Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)-->Line_13 $$ if (url == null) [ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_14 $$ throw new UtilException("util.failed.to.find.handlerchain.file", clazz.getName(), chain.file())[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_14 $$ throw new UtilException("util.failed.to.find.handlerchain.file", clazz.getName(), chain.file())[ FD ]
Line_17 $$ return url.openStream()-->Line_17 $$ return url.openStream()[ CD ]
Line_3 $$ URL url = clazz.getResource(chain.file())-->Line_17 $$ return url.openStream()[ FD ]
Line_5 $$ url = Thread.currentThread().getContextClassLoader().getResource(chain.file())-->Line_17 $$ return url.openStream()[ FD ]
Line_11 $$ url = Thread.currentThread().getContextClassLoader().getResource(tmp)-->Line_17 $$ return url.openStream()[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_19 $$ throw new UtilException("util.failed.to.parse.handlerchain.file", clazz.getName(), chain.file())[ FD ]
Line_2 $$ static InputStream getFileAsStream(Class clazz, HandlerChain chain) -->Line_19 $$ throw new UtilException("util.failed.to.parse.handlerchain.file", clazz.getName(), chain.file())[ FD ]
