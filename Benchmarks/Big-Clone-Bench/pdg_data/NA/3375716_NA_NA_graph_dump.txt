Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException [ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_3 $$ final String ABA_VALOR_DE_MERCADO = "Valor de Mercado"[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_5 $$ final BigDecimal BILHAO = new BigDecimal("1000000000")[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_6 $$ int iLinha = -1[ CD ]
Line_6 $$ int iLinha = -1-->Line_6 $$ int iLinha = -1[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_7 $$ Statement stmtLimpezaInicialDestino = null[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_8 $$ OraclePreparedStatement stmtDestino = null[ CD ]
Line_10 $$ Workbook arquivo = WorkbookFactory.create(new FileInputStream(pArquivoXLS))-->Line_10 $$ Workbook arquivo = WorkbookFactory.create(new FileInputStream(pArquivoXLS))[ CD ]
Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)-->Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)[ CD ]
Line_10 $$ Workbook arquivo = WorkbookFactory.create(new FileInputStream(pArquivoXLS))-->Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)[ FD ]
Line_3 $$ final String ABA_VALOR_DE_MERCADO = "Valor de Mercado"-->Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)[ FD ]
Line_13 $$ final Calendar DATA_INICIAL = Calendar.getInstance()-->Line_13 $$ final Calendar DATA_INICIAL = Calendar.getInstance()[ CD ]
Line_13 $$ final Calendar DATA_INICIAL = Calendar.getInstance()-->Line_14 $$ DATA_INICIAL.setTime(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_DATA).getDateCellValue())[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_14 $$ DATA_INICIAL.setTime(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_DATA).getDateCellValue())[ FD ]
Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)-->Line_14 $$ DATA_INICIAL.setTime(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_DATA).getDateCellValue())[ FD ]
Line_12 $$ int QUANTIDADE_DE_REGISTROS_DE_METADADOS = 7-->Line_14 $$ DATA_INICIAL.setTime(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_DATA).getDateCellValue())[ FD ]
Line_15 $$ final int ANO_DA_DATA_INICIAL = DATA_INICIAL.get(Calendar.YEAR)-->Line_15 $$ final int ANO_DA_DATA_INICIAL = DATA_INICIAL.get(Calendar.YEAR)[ CD ]
Line_13 $$ final Calendar DATA_INICIAL = Calendar.getInstance()-->Line_15 $$ final int ANO_DA_DATA_INICIAL = DATA_INICIAL.get(Calendar.YEAR)[ FD ]
Line_16 $$ final int ANO_INICIAL = Integer.parseInt(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_ANO).getStringCellValue())-->Line_16 $$ final int ANO_INICIAL = Integer.parseInt(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_ANO).getStringCellValue())[ CD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_16 $$ final int ANO_INICIAL = Integer.parseInt(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_ANO).getStringCellValue())[ FD ]
Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)-->Line_16 $$ final int ANO_INICIAL = Integer.parseInt(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_ANO).getStringCellValue())[ FD ]
Line_12 $$ int QUANTIDADE_DE_REGISTROS_DE_METADADOS = 7-->Line_16 $$ final int ANO_INICIAL = Integer.parseInt(planilhaValorDeMercado.getRow(QUANTIDADE_DE_REGISTROS_DE_METADADOS).getCell(COLUNA_ANO).getStringCellValue())[ FD ]
Line_17 $$ final int ANO_FINAL = Calendar.getInstance().get(Calendar.YEAR)-->Line_17 $$ final int ANO_FINAL = Calendar.getInstance().get(Calendar.YEAR)[ CD ]
Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)-->Line_19 $$ int quantidadeDeRegistrosAnuaisEstimada = (ANO_FINAL - ANO_INICIAL + 1), quantidadeDeRegistrosDiariosEstimada = (planilhaValorDeMercado.getPhysicalNumberOfRows() - QUANTIDADE_DE_REGISTROS_DE_METADADOS)[ FD ]
Line_7 $$ Statement stmtLimpezaInicialDestino = null-->Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()[ FD ]
Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()-->Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()[ FD ]
Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()-->Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()[ CD ]
Line_7 $$ Statement stmtLimpezaInicialDestino = null-->Line_26 $$ stmtLimpezaInicialDestino.executeUpdate(sql)[ FD ]
Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()-->Line_26 $$ stmtLimpezaInicialDestino.executeUpdate(sql)[ FD ]
Line_25 $$ String sql = "TRUNCATE TABLE TMP_TB_VALOR_MERCADO_BOLSA"-->Line_26 $$ stmtLimpezaInicialDestino.executeUpdate(sql)[ FD ]
Line_25 $$ String sql = "TRUNCATE TABLE TMP_TB_VALOR_MERCADO_BOLSA"-->Line_27 $$ sql = "INSERT INTO TMP_TB_VALOR_MERCADO_BOLSA(DATA, VALOR_DE_MERCADO_REAL, VALOR_DE_MERCADO_DOLAR) VALUES(:DATA, :VALOR_DE_MERCADO_REAL, :VALOR_DE_MERCADO_DOLAR)"[ FD ]
Line_27 $$ sql = "INSERT INTO TMP_TB_VALOR_MERCADO_BOLSA(DATA, VALOR_DE_MERCADO_REAL, VALOR_DE_MERCADO_DOLAR) VALUES(:DATA, :VALOR_DE_MERCADO_REAL, :VALOR_DE_MERCADO_DOLAR)"-->Line_27 $$ sql = "INSERT INTO TMP_TB_VALOR_MERCADO_BOLSA(DATA, VALOR_DE_MERCADO_REAL, VALOR_DE_MERCADO_DOLAR) VALUES(:DATA, :VALOR_DE_MERCADO_REAL, :VALOR_DE_MERCADO_DOLAR)"[ FD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)[ FD ]
Line_25 $$ String sql = "TRUNCATE TABLE TMP_TB_VALOR_MERCADO_BOLSA"-->Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)[ FD ]
Line_27 $$ sql = "INSERT INTO TMP_TB_VALOR_MERCADO_BOLSA(DATA, VALOR_DE_MERCADO_REAL, VALOR_DE_MERCADO_DOLAR) VALUES(:DATA, :VALOR_DE_MERCADO_REAL, :VALOR_DE_MERCADO_DOLAR)"-->Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)[ FD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_29 $$ stmtDestino.setExecuteBatch(COMANDOS_POR_LOTE)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_29 $$ stmtDestino.setExecuteBatch(COMANDOS_POR_LOTE)[ FD ]
Line_31 $$ Calendar calendario = Calendar.getInstance()-->Line_31 $$ Calendar calendario = Calendar.getInstance()[ CD ]
Line_31 $$ Calendar calendario = Calendar.getInstance()-->Line_32 $$ calendario.clear()[ FD ]
Line_31 $$ Calendar calendario = Calendar.getInstance()-->Line_33 $$ calendario.set(Calendar.MONTH, Calendar.DECEMBER)[ FD ]
Line_31 $$ Calendar calendario = Calendar.getInstance()-->Line_34 $$ calendario.set(Calendar.DAY_OF_MONTH, 31)[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ CD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_6 $$ int iLinha = -1-->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_12 $$ int QUANTIDADE_DE_REGISTROS_DE_METADADOS = 7-->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ CD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_6 $$ int iLinha = -1-->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ CD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_18 $$ Row registro-->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ CD ]
Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)-->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_6 $$ int iLinha = -1-->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ CD ]
Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ FD ]
Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ CD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ FD ]
Line_18 $$ Row registro-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()[ CD ]
Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()-->Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()[ CD ]
Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)-->Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) [ CD ]
Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()-->Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) [ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_40 $$ vAno = Integer.parseInt(anoTmp)[ CD ]
Line_40 $$ vAno = Integer.parseInt(anoTmp)-->Line_40 $$ vAno = Integer.parseInt(anoTmp)[ FD ]
Line_21 $$ int vAno-->Line_40 $$ vAno = Integer.parseInt(anoTmp)[ FD ]
Line_40 $$ vAno = Integer.parseInt(anoTmp)-->Line_40 $$ vAno = Integer.parseInt(anoTmp)[ CD ]
Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()-->Line_40 $$ vAno = Integer.parseInt(anoTmp)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) [ CD ]
Line_40 $$ vAno = Integer.parseInt(anoTmp)-->Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) [ FD ]
Line_21 $$ int vAno-->Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) [ FD ]
Line_15 $$ final int ANO_DA_DATA_INICIAL = DATA_INICIAL.get(Calendar.YEAR)-->Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) [ FD ]
Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) -->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ CD ]
Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ FD ]
Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ CD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ FD ]
Line_18 $$ Row registro-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ FD ]
Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) -->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ CD ]
Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ FD ]
Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ CD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ FD ]
Line_18 $$ Row registro-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_47 $$ calendario.set(Calendar.YEAR, vAno)[ CD ]
Line_31 $$ Calendar calendario = Calendar.getInstance()-->Line_47 $$ calendario.set(Calendar.YEAR, vAno)[ FD ]
Line_40 $$ vAno = Integer.parseInt(anoTmp)-->Line_47 $$ calendario.set(Calendar.YEAR, vAno)[ FD ]
Line_21 $$ int vAno-->Line_47 $$ calendario.set(Calendar.YEAR, vAno)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_48 $$ java.sql.Date vUltimoDiaDoAno = new java.sql.Date(calendario.getTimeInMillis())[ CD ]
Line_31 $$ Calendar calendario = Calendar.getInstance()-->Line_48 $$ java.sql.Date vUltimoDiaDoAno = new java.sql.Date(calendario.getTimeInMillis())[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_5 $$ final BigDecimal BILHAO = new BigDecimal("1000000000")-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_5 $$ final BigDecimal BILHAO = new BigDecimal("1000000000")-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_51 $$ stmtDestino.clearParameters()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_51 $$ stmtDestino.clearParameters()[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_51 $$ stmtDestino.clearParameters()[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_52 $$ stmtDestino.setDateAtName("DATA", vUltimoDiaDoAno)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_52 $$ stmtDestino.setDateAtName("DATA", vUltimoDiaDoAno)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_52 $$ stmtDestino.setDateAtName("DATA", vUltimoDiaDoAno)[ FD ]
Line_48 $$ java.sql.Date vUltimoDiaDoAno = new java.sql.Date(calendario.getTimeInMillis())-->Line_52 $$ stmtDestino.setDateAtName("DATA", vUltimoDiaDoAno)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_53 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_53 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_53 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_53 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_53 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_54 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_54 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_54 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_54 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_54 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_55 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ CD ]
Line_55 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()-->Line_55 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_55 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_55 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ FD ]
Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) -->Line_56 $$ quantidadeDeRegistrosImportados++[ CD ]
Line_30 $$ int quantidadeDeRegistrosImportados = 0-->Line_56 $$ quantidadeDeRegistrosImportados++[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_60 $$ double percentualCompleto = (double) quantidadeDeRegistrosImportados / quantidadeDeRegistrosEstimada * 100[ CD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_61 $$ pAndamento.setPercentualCompleto((int) percentualCompleto)[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_61 $$ pAndamento.setPercentualCompleto((int) percentualCompleto)[ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ CD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_6 $$ int iLinha = -1-->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_12 $$ int QUANTIDADE_DE_REGISTROS_DE_METADADOS = 7-->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ CD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_6 $$ int iLinha = -1-->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ CD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_18 $$ Row registro-->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ CD ]
Line_11 $$ Sheet planilhaValorDeMercado = arquivo.getSheet(ABA_VALOR_DE_MERCADO)-->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_6 $$ int iLinha = -1-->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_70 $$ if (registro != null) [ CD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_70 $$ if (registro != null) [ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_70 $$ if (registro != null) [ FD ]
Line_18 $$ Row registro-->Line_70 $$ if (registro != null) [ FD ]
Line_70 $$ if (registro != null) -->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ CD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_67 $$ Cell celulaDaData-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ CD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_18 $$ Row registro-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_70 $$ if (registro != null) -->Line_72 $$ java.util.Date data[ CD ]
Line_70 $$ if (registro != null) -->Line_73 $$ if (celulaDaData.getCellType() == Cell.CELL_TYPE_NUMERIC) [ CD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_73 $$ if (celulaDaData.getCellType() == Cell.CELL_TYPE_NUMERIC) [ FD ]
Line_67 $$ Cell celulaDaData-->Line_73 $$ if (celulaDaData.getCellType() == Cell.CELL_TYPE_NUMERIC) [ FD ]
Line_73 $$ if (celulaDaData.getCellType() == Cell.CELL_TYPE_NUMERIC) -->Line_74 $$ data = celulaDaData.getDateCellValue()[ CD ]
Line_72 $$ java.util.Date data-->Line_74 $$ data = celulaDaData.getDateCellValue()[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_74 $$ data = celulaDaData.getDateCellValue()[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_74 $$ data = celulaDaData.getDateCellValue()[ CD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_74 $$ data = celulaDaData.getDateCellValue()[ FD ]
Line_67 $$ Cell celulaDaData-->Line_74 $$ data = celulaDaData.getDateCellValue()[ FD ]
Line_73 $$ if (celulaDaData.getCellType() == Cell.CELL_TYPE_NUMERIC) -->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ CD ]
Line_76 $$ dataTmp = celulaDaData.getStringCellValue()-->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ FD ]
Line_64 $$ String dataTmp-->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ FD ]
Line_76 $$ dataTmp = celulaDaData.getStringCellValue()-->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ CD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ FD ]
Line_67 $$ Cell celulaDaData-->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ FD ]
Line_72 $$ java.util.Date data-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ CD ]
Line_65 $$ final DateFormat formatadorDeData_ddMMyyyy = new SimpleDateFormat("dd/MM/yyyy", Constantes.IDIOMA_PORTUGUES_BRASILEIRO)-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_76 $$ dataTmp = celulaDaData.getStringCellValue()-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_64 $$ String dataTmp-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_72 $$ java.util.Date data-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ CD ]
Line_66 $$ final DateFormat formatadorDeData_ddMMMyyyy = new SimpleDateFormat("dd/MMM/yyyy", Constantes.IDIOMA_PORTUGUES_BRASILEIRO)-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_76 $$ dataTmp = celulaDaData.getStringCellValue()-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_64 $$ String dataTmp-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_70 $$ if (registro != null) -->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ CD ]
Line_72 $$ java.util.Date data-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_63 $$ java.util.Date dataAnterior = null-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ CD ]
Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ CD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_18 $$ Row registro-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ CD ]
Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ CD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_18 $$ Row registro-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_4 $$ final int COLUNA_DATA = 1, COLUNA_ANO = 6, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS = 2, COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES = 3, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS = 7, COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES = 8-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ CD ]
Line_72 $$ java.util.Date data-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_5 $$ final BigDecimal BILHAO = new BigDecimal("1000000000")-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_5 $$ final BigDecimal BILHAO = new BigDecimal("1000000000")-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_23 $$ Cell celulaDoAno, celulaDoValorDeMercadoEmReais, celulaDoValorDeMercadoEmDolares-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_89 $$ stmtDestino.clearParameters()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_89 $$ stmtDestino.clearParameters()[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_89 $$ stmtDestino.clearParameters()[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_90 $$ stmtDestino.setDateAtName("DATA", vData)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_90 $$ stmtDestino.setDateAtName("DATA", vData)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_90 $$ stmtDestino.setDateAtName("DATA", vData)[ FD ]
Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())-->Line_90 $$ stmtDestino.setDateAtName("DATA", vData)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_22 $$ BigDecimal vValorDeMercadoEmReais, vValorDeMercadoEmDolares-->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_93 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ CD ]
Line_93 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()-->Line_93 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_93 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_93 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_94 $$ quantidadeDeRegistrosImportados++[ CD ]
Line_30 $$ int quantidadeDeRegistrosImportados = 0-->Line_94 $$ quantidadeDeRegistrosImportados++[ FD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_95 $$ double percentualCompleto = (double) quantidadeDeRegistrosImportados / quantidadeDeRegistrosEstimada * 100[ CD ]
Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) -->Line_96 $$ pAndamento.setPercentualCompleto((int) percentualCompleto)[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_96 $$ pAndamento.setPercentualCompleto((int) percentualCompleto)[ FD ]
Line_70 $$ if (registro != null) -->Line_98 $$ dataAnterior = data[ CD ]
Line_98 $$ dataAnterior = data-->Line_98 $$ dataAnterior = data[ FD ]
Line_63 $$ java.util.Date dataAnterior = null-->Line_98 $$ dataAnterior = data[ FD ]
Line_72 $$ java.util.Date data-->Line_98 $$ dataAnterior = data[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_98 $$ dataAnterior = data[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_98 $$ dataAnterior = data[ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_98 $$ dataAnterior = data[ FD ]
Line_107 $$ problemaDetalhado.nomeDoArquivo = pArquivoXLS.getName()-->Line_107 $$ problemaDetalhado.nomeDoArquivo = pArquivoXLS.getName()[ CD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_107 $$ problemaDetalhado.nomeDoArquivo = pArquivoXLS.getName()[ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_108 $$ problemaDetalhado.linhaProblematicaDoArquivo = iLinha[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_108 $$ problemaDetalhado.linhaProblematicaDoArquivo = iLinha[ FD ]
Line_6 $$ int iLinha = -1-->Line_108 $$ problemaDetalhado.linhaProblematicaDoArquivo = iLinha[ FD ]
Line_2 $$ public void importarBancoDeDadosDARI(File pArquivoXLS, Andamento pAndamento) throws IOException, SQLException, InvalidFormatException -->Line_112 $$ pAndamento.setPercentualCompleto(100)[ FD ]
Line_113 $$ if (stmtLimpezaInicialDestino != null && (!stmtLimpezaInicialDestino.isClosed())) -->Line_113 $$ if (stmtLimpezaInicialDestino != null && (!stmtLimpezaInicialDestino.isClosed())) [ CD ]
Line_7 $$ Statement stmtLimpezaInicialDestino = null-->Line_113 $$ if (stmtLimpezaInicialDestino != null && (!stmtLimpezaInicialDestino.isClosed())) [ FD ]
Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()-->Line_113 $$ if (stmtLimpezaInicialDestino != null && (!stmtLimpezaInicialDestino.isClosed())) [ FD ]
Line_113 $$ if (stmtLimpezaInicialDestino != null && (!stmtLimpezaInicialDestino.isClosed())) -->Line_114 $$ stmtLimpezaInicialDestino.close()[ CD ]
Line_7 $$ Statement stmtLimpezaInicialDestino = null-->Line_114 $$ stmtLimpezaInicialDestino.close()[ FD ]
Line_24 $$ stmtLimpezaInicialDestino = conDestino.createStatement()-->Line_114 $$ stmtLimpezaInicialDestino.close()[ FD ]
Line_116 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) -->Line_116 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) [ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_116 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) [ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_116 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) [ FD ]
Line_116 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) -->Line_117 $$ stmtDestino.close()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = null-->Line_117 $$ stmtDestino.close()[ FD ]
Line_28 $$ stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_117 $$ stmtDestino.close()[ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_35 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)[ FD ]
Line_37 $$ celulaDoAno = registro.getCell(COLUNA_ANO)-->Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()[ FD ]
Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()-->Line_39 $$ if (anoTmp != null && anoTmp.length() > 0) [ FD ]
Line_38 $$ String anoTmp = celulaDoAno.getStringCellValue()-->Line_40 $$ vAno = Integer.parseInt(anoTmp)[ FD ]
Line_40 $$ vAno = Integer.parseInt(anoTmp)-->Line_41 $$ if (vAno < ANO_DA_DATA_INICIAL) [ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)[ FD ]
Line_36 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)[ FD ]
Line_40 $$ vAno = Integer.parseInt(anoTmp)-->Line_47 $$ calendario.set(Calendar.YEAR, vAno)[ FD ]
Line_42 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_REAIS)-->Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_43 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_ANUAL_EM_BILHOES_DE_DOLARES)-->Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_48 $$ java.sql.Date vUltimoDiaDoAno = new java.sql.Date(calendario.getTimeInMillis())-->Line_52 $$ stmtDestino.setDateAtName("DATA", vUltimoDiaDoAno)[ FD ]
Line_49 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_53 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_50 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_54 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) [ FD ]
Line_68 $$ for (iLinha = QUANTIDADE_DE_REGISTROS_DE_METADADOS; true; iLinha++) -->Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)[ FD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_70 $$ if (registro != null) [ FD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)[ FD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_73 $$ if (celulaDaData.getCellType() == Cell.CELL_TYPE_NUMERIC) [ FD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_74 $$ data = celulaDaData.getDateCellValue()[ FD ]
Line_71 $$ celulaDaData = registro.getCell(COLUNA_DATA)-->Line_76 $$ dataTmp = celulaDaData.getStringCellValue()[ FD ]
Line_76 $$ dataTmp = celulaDaData.getStringCellValue()-->Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)[ FD ]
Line_76 $$ dataTmp = celulaDaData.getStringCellValue()-->Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)[ FD ]
Line_72 $$ java.util.Date data-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_98 $$ dataAnterior = data-->Line_83 $$ if (dataAnterior == null || data.after(dataAnterior)) [ FD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)[ FD ]
Line_69 $$ registro = planilhaValorDeMercado.getRow(iLinha)-->Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)[ FD ]
Line_72 $$ java.util.Date data-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())[ FD ]
Line_84 $$ celulaDoValorDeMercadoEmReais = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_REAIS)-->Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_85 $$ celulaDoValorDeMercadoEmDolares = registro.getCell(COLUNA_VALOR_DE_MERCADO_DIARIO_EM_BILHOES_DE_DOLARES)-->Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_86 $$ java.sql.Date vData = new java.sql.Date(data.getTime())-->Line_90 $$ stmtDestino.setDateAtName("DATA", vData)[ FD ]
Line_87 $$ vValorDeMercadoEmReais = new BigDecimal(celulaDoValorDeMercadoEmReais.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_91 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_REAL", vValorDeMercadoEmReais)[ FD ]
Line_88 $$ vValorDeMercadoEmDolares = new BigDecimal(celulaDoValorDeMercadoEmDolares.getNumericCellValue()).multiply(BILHAO).setScale(0, RoundingMode.DOWN)-->Line_92 $$ stmtDestino.setBigDecimalAtName("VALOR_DE_MERCADO_DOLAR", vValorDeMercadoEmDolares)[ FD ]
Line_72 $$ java.util.Date data-->Line_98 $$ dataAnterior = data[ FD ]
Line_74 $$ data = celulaDaData.getDateCellValue()-->Line_98 $$ dataAnterior = data[ FD ]
Line_78 $$ data = formatadorDeData_ddMMyyyy.parse(dataTmp)-->Line_98 $$ dataAnterior = data[ FD ]
Line_80 $$ data = formatadorDeData_ddMMMyyyy.parse(dataTmp)-->Line_98 $$ dataAnterior = data[ FD ]
