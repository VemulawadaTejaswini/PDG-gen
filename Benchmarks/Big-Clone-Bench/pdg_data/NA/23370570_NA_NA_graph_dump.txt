Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void xtestGetThread() throws Exception [ CD ]
Line_2 $$ public void xtestGetThread() throws Exception -->Line_3 $$ GMSearchOptions options = new GMSearchOptions()[ CD ]
Line_2 $$ public void xtestGetThread() throws Exception -->Line_4 $$ options.setFrom(loginInfo.getUsername() + "*")[ CD ]
Line_3 $$ GMSearchOptions options = new GMSearchOptions()-->Line_4 $$ options.setFrom(loginInfo.getUsername() + "*")[ FD ]
Line_2 $$ public void xtestGetThread() throws Exception -->Line_5 $$ options.setSubject("message*")[ CD ]
Line_3 $$ GMSearchOptions options = new GMSearchOptions()-->Line_5 $$ options.setSubject("message*")[ FD ]
Line_2 $$ public void xtestGetThread() throws Exception -->Line_6 $$ GMSearchResponse mail = client.getMail(options)[ CD ]
Line_6 $$ GMSearchResponse mail = client.getMail(options)-->Line_6 $$ GMSearchResponse mail = client.getMail(options)[ CD ]
Line_3 $$ GMSearchOptions options = new GMSearchOptions()-->Line_6 $$ GMSearchResponse mail = client.getMail(options)[ FD ]
Line_2 $$ public void xtestGetThread() throws Exception -->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ public void xtestGetThread() throws Exception -->Line_2 $$ public void xtestGetThread() throws Exception [ CD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ CD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ CD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ CD ]
Line_6 $$ GMSearchResponse mail = client.getMail(options)-->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ FD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_8 $$ GMThreadSnapshot threadSnapshot = (GMThreadSnapshot) it.next()[ CD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_8 $$ GMThreadSnapshot threadSnapshot = (GMThreadSnapshot) it.next()[ FD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_9 $$ GMThread thread = client.getThread(threadSnapshot.getThreadID())[ CD ]
Line_9 $$ GMThread thread = client.getThread(threadSnapshot.getThreadID())-->Line_9 $$ GMThread thread = client.getThread(threadSnapshot.getThreadID())[ CD ]
Line_8 $$ GMThreadSnapshot threadSnapshot = (GMThreadSnapshot) it.next()-->Line_9 $$ GMThread thread = client.getThread(threadSnapshot.getThreadID())[ FD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_10 $$ log.info("Most Recent Thread: " + thread)[ CD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ CD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ CD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ CD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ CD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ CD ]
Line_9 $$ GMThread thread = client.getThread(threadSnapshot.getThreadID())-->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ FD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_12 $$ GMMessage message = (GMMessage) iter.next()[ CD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_12 $$ GMMessage message = (GMMessage) iter.next()[ FD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_13 $$ log.info("Message: " + message)[ CD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_14 $$ Iterable<GMAttachment> attachments = message.getAttachments()[ CD ]
Line_14 $$ Iterable<GMAttachment> attachments = message.getAttachments()-->Line_14 $$ Iterable<GMAttachment> attachments = message.getAttachments()[ CD ]
Line_12 $$ GMMessage message = (GMMessage) iter.next()-->Line_14 $$ Iterable<GMAttachment> attachments = message.getAttachments()[ FD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) [ CD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ CD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) [ CD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) [ CD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) [ CD ]
Line_14 $$ Iterable<GMAttachment> attachments = message.getAttachments()-->Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) [ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()[ CD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())[ CD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())[ CD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_18 $$ if (ext.trim().length() > 0)[ CD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_18 $$ if (ext.trim().length() > 0)[ FD ]
Line_18 $$ if (ext.trim().length() > 0)-->Line_18 $$ ext = "." + ext[ CD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_18 $$ ext = "." + ext[ FD ]
Line_18 $$ ext = "." + ext-->Line_18 $$ ext = "." + ext[ FD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_18 $$ ext = "." + ext[ FD ]
Line_18 $$ ext = "." + ext-->Line_18 $$ ext = "." + ext[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())[ CD ]
Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())-->Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())[ CD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ CD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ CD ]
Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ FD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ FD ]
Line_18 $$ ext = "." + ext-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_21 $$ log.info("Saving attachment: " + file.getPath())[ CD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_21 $$ log.info("Saving attachment: " + file.getPath())[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())[ CD ]
Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())-->Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())[ CD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())[ FD ]
Line_12 $$ GMMessage message = (GMMessage) iter.next()-->Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_23 $$ IOUtils.copy(attStream, new FileOutputStream(file))[ CD ]
Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())-->Line_23 $$ IOUtils.copy(attStream, new FileOutputStream(file))[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_24 $$ attStream.close()[ CD ]
Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())-->Line_24 $$ attStream.close()[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_25 $$ assertEquals(file.length(), attachment.getSize())[ CD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_25 $$ assertEquals(file.length(), attachment.getSize())[ FD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_25 $$ assertEquals(file.length(), attachment.getSize())[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_26 $$ log.info("Done. Successfully saved: " + file.getPath())[ CD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_26 $$ log.info("Done. Successfully saved: " + file.getPath())[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_27 $$ file.delete()[ CD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_27 $$ file.delete()[ FD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) [ FD ]
Line_7 $$ for (Iterator it = mail.getThreadSnapshots().iterator(); it.hasNext(); ) -->Line_8 $$ GMThreadSnapshot threadSnapshot = (GMThreadSnapshot) it.next()[ FD ]
Line_8 $$ GMThreadSnapshot threadSnapshot = (GMThreadSnapshot) it.next()-->Line_9 $$ GMThread thread = client.getThread(threadSnapshot.getThreadID())[ FD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) [ FD ]
Line_11 $$ for (Iterator iter = thread.getMessages().iterator(); iter.hasNext(); ) -->Line_12 $$ GMMessage message = (GMMessage) iter.next()[ FD ]
Line_12 $$ GMMessage message = (GMMessage) iter.next()-->Line_14 $$ Iterable<GMAttachment> attachments = message.getAttachments()[ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) [ FD ]
Line_15 $$ for (Iterator iterator = attachments.iterator(); iterator.hasNext(); ) -->Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()[ FD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())[ FD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_18 $$ if (ext.trim().length() > 0)[ FD ]
Line_18 $$ ext = "." + ext-->Line_18 $$ if (ext.trim().length() > 0)[ FD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_18 $$ ext = "." + ext[ FD ]
Line_18 $$ ext = "." + ext-->Line_18 $$ ext = "." + ext[ FD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())[ FD ]
Line_19 $$ String base = FilenameUtils.getBaseName(attachment.getFilename())-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ FD ]
Line_17 $$ String ext = FilenameUtils.getExtension(attachment.getFilename())-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ FD ]
Line_18 $$ ext = "." + ext-->Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))[ FD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_21 $$ log.info("Saving attachment: " + file.getPath())[ FD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())[ FD ]
Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())-->Line_23 $$ IOUtils.copy(attStream, new FileOutputStream(file))[ FD ]
Line_22 $$ InputStream attStream = client.getAttachmentAsStream(attachment.getId(), message.getMessageID())-->Line_24 $$ attStream.close()[ FD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_25 $$ assertEquals(file.length(), attachment.getSize())[ FD ]
Line_16 $$ GMAttachment attachment = (GMAttachment) iterator.next()-->Line_25 $$ assertEquals(file.length(), attachment.getSize())[ FD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_26 $$ log.info("Done. Successfully saved: " + file.getPath())[ FD ]
Line_20 $$ File file = File.createTempFile(base, ext, new File(System.getProperty("user.home")))-->Line_27 $$ file.delete()[ FD ]
