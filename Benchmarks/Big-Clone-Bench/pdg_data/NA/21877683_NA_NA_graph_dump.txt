Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException [ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_3 $$ if (!(request instanceof HttpServletRequest)) [ CD ]
Line_3 $$ if (!(request instanceof HttpServletRequest)) -->Line_3 $$ if (!(request instanceof HttpServletRequest)) [ CD ]
Line_3 $$ if (!(request instanceof HttpServletRequest)) -->Line_4 $$ log.fatal("not a http request")[ CD ]
Line_3 $$ if (!(request instanceof HttpServletRequest)) -->Line_5 $$ return[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_7 $$ HttpServletRequest httpRequest = (HttpServletRequest) request[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_8 $$ String uri = httpRequest.getRequestURI()[ CD ]
Line_8 $$ String uri = httpRequest.getRequestURI()-->Line_8 $$ String uri = httpRequest.getRequestURI()[ CD ]
Line_7 $$ HttpServletRequest httpRequest = (HttpServletRequest) request-->Line_8 $$ String uri = httpRequest.getRequestURI()[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_9 $$ int pathStartIdx = 0[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_10 $$ String resourceName = null[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_11 $$ pathStartIdx = uri.indexOf(path)[ CD ]
Line_9 $$ int pathStartIdx = 0-->Line_11 $$ pathStartIdx = uri.indexOf(path)[ FD ]
Line_11 $$ pathStartIdx = uri.indexOf(path)-->Line_11 $$ pathStartIdx = uri.indexOf(path)[ FD ]
Line_11 $$ pathStartIdx = uri.indexOf(path)-->Line_11 $$ pathStartIdx = uri.indexOf(path)[ CD ]
Line_8 $$ String uri = httpRequest.getRequestURI()-->Line_11 $$ pathStartIdx = uri.indexOf(path)[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_12 $$ if (pathStartIdx <= -1) [ CD ]
Line_9 $$ int pathStartIdx = 0-->Line_12 $$ if (pathStartIdx <= -1) [ FD ]
Line_11 $$ pathStartIdx = uri.indexOf(path)-->Line_12 $$ if (pathStartIdx <= -1) [ FD ]
Line_12 $$ if (pathStartIdx <= -1) -->Line_13 $$ log.fatal("the url pattern must match: " + path + " found uri: " + uri)[ CD ]
Line_12 $$ if (pathStartIdx <= -1) -->Line_14 $$ return[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())[ CD ]
Line_10 $$ String resourceName = null-->Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())[ FD ]
Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())-->Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())[ FD ]
Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())-->Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())[ CD ]
Line_8 $$ String uri = httpRequest.getRequestURI()-->Line_16 $$ resourceName = uri.substring(pathStartIdx + path.length())[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_17 $$ int suffixIdx = uri.lastIndexOf('.')[ CD ]
Line_17 $$ int suffixIdx = uri.lastIndexOf('.')-->Line_17 $$ int suffixIdx = uri.lastIndexOf('.')[ CD ]
Line_8 $$ String uri = httpRequest.getRequestURI()-->Line_17 $$ int suffixIdx = uri.lastIndexOf('.')[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_18 $$ if (suffixIdx <= -1) [ CD ]
Line_17 $$ int suffixIdx = uri.lastIndexOf('.')-->Line_18 $$ if (suffixIdx <= -1) [ FD ]
Line_18 $$ if (suffixIdx <= -1) -->Line_19 $$ log.fatal("no file suffix found for resource: " + uri)[ CD ]
Line_18 $$ if (suffixIdx <= -1) -->Line_20 $$ return[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_22 $$ String suffix = uri.substring(suffixIdx + 1).toLowerCase()[ CD ]
Line_22 $$ String suffix = uri.substring(suffixIdx + 1).toLowerCase()-->Line_22 $$ String suffix = uri.substring(suffixIdx + 1).toLowerCase()[ CD ]
Line_8 $$ String uri = httpRequest.getRequestURI()-->Line_22 $$ String suffix = uri.substring(suffixIdx + 1).toLowerCase()[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_23 $$ String mimeType = (String) mimeTypes.get(suffix)[ CD ]
Line_22 $$ String suffix = uri.substring(suffixIdx + 1).toLowerCase()-->Line_23 $$ String mimeType = (String) mimeTypes.get(suffix)[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_24 $$ if (mimeType == null) [ CD ]
Line_23 $$ String mimeType = (String) mimeTypes.get(suffix)-->Line_24 $$ if (mimeType == null) [ FD ]
Line_24 $$ if (mimeType == null) -->Line_25 $$ log.fatal("no mimeType found for resource: " + uri)[ CD ]
Line_24 $$ if (mimeType == null) -->Line_26 $$ log.fatal("valid mimeTypes are: " + mimeTypes.keySet())[ CD ]
Line_24 $$ if (mimeType == null) -->Line_27 $$ return[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_29 $$ String themeName = getThemeName()[ CD ]
Line_29 $$ String themeName = getThemeName()-->Line_29 $$ String themeName = getThemeName()[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_30 $$ if (themeName == null) [ CD ]
Line_29 $$ String themeName = getThemeName()-->Line_30 $$ if (themeName == null) [ FD ]
Line_30 $$ if (themeName == null) -->Line_31 $$ themeName = this.themeName[ CD ]
Line_29 $$ String themeName = getThemeName()-->Line_31 $$ themeName = this.themeName[ FD ]
Line_31 $$ themeName = this.themeName-->Line_31 $$ themeName = this.themeName[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_33 $$ if (!themeName.startsWith("/")) [ CD ]
Line_33 $$ if (!themeName.startsWith("/")) -->Line_33 $$ if (!themeName.startsWith("/")) [ CD ]
Line_33 $$ if (!themeName.startsWith("/")) -->Line_33 $$ if (!themeName.startsWith("/")) [ CD ]
Line_29 $$ String themeName = getThemeName()-->Line_33 $$ if (!themeName.startsWith("/")) [ FD ]
Line_31 $$ themeName = this.themeName-->Line_33 $$ if (!themeName.startsWith("/")) [ FD ]
Line_33 $$ if (!themeName.startsWith("/")) -->Line_34 $$ themeName = "/" + themeName[ CD ]
Line_29 $$ String themeName = getThemeName()-->Line_34 $$ themeName = "/" + themeName[ FD ]
Line_31 $$ themeName = this.themeName-->Line_34 $$ themeName = "/" + themeName[ FD ]
Line_34 $$ themeName = "/" + themeName-->Line_34 $$ themeName = "/" + themeName[ FD ]
Line_29 $$ String themeName = getThemeName()-->Line_34 $$ themeName = "/" + themeName[ FD ]
Line_31 $$ themeName = this.themeName-->Line_34 $$ themeName = "/" + themeName[ FD ]
Line_34 $$ themeName = "/" + themeName-->Line_34 $$ themeName = "/" + themeName[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_36 $$ InputStream is = null[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)[ CD ]
Line_36 $$ InputStream is = null-->Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)[ FD ]
Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)-->Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)[ FD ]
Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)-->Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_38 $$ if (is != null) [ CD ]
Line_36 $$ InputStream is = null-->Line_38 $$ if (is != null) [ FD ]
Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)-->Line_38 $$ if (is != null) [ FD ]
Line_38 $$ if (is != null) -->Line_39 $$ IOUtils.copy(is, response.getOutputStream())[ CD ]
Line_36 $$ InputStream is = null-->Line_39 $$ IOUtils.copy(is, response.getOutputStream())[ FD ]
Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)-->Line_39 $$ IOUtils.copy(is, response.getOutputStream())[ FD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_39 $$ IOUtils.copy(is, response.getOutputStream())[ FD ]
Line_38 $$ if (is != null) -->Line_40 $$ response.setContentType(mimeType)[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_40 $$ response.setContentType(mimeType)[ FD ]
Line_23 $$ String mimeType = (String) mimeTypes.get(suffix)-->Line_40 $$ response.setContentType(mimeType)[ FD ]
Line_38 $$ if (is != null) -->Line_41 $$ response.flushBuffer()[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_41 $$ response.flushBuffer()[ FD ]
Line_38 $$ if (is != null) -->Line_42 $$ IOUtils.closeQuietly(response.getOutputStream())[ CD ]
Line_2 $$ public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException -->Line_42 $$ IOUtils.closeQuietly(response.getOutputStream())[ FD ]
Line_38 $$ if (is != null) -->Line_43 $$ IOUtils.closeQuietly(is)[ CD ]
Line_36 $$ InputStream is = null-->Line_43 $$ IOUtils.closeQuietly(is)[ FD ]
Line_37 $$ is = ResourceFilter.class.getResourceAsStream(themeName + resourceName)-->Line_43 $$ IOUtils.closeQuietly(is)[ FD ]
Line_38 $$ if (is != null) -->Line_45 $$ log.fatal("error loading resource: " + resourceName)[ CD ]
