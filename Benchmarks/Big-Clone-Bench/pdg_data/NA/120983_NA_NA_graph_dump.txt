Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ void sort(int a[]) throws Exception [ CD ]
Line_2 $$ void sort(int a[]) throws Exception -->Line_3 $$ for (int i = a.length; --i >= 0; ) [ CD ]
Line_2 $$ void sort(int a[]) throws Exception -->Line_2 $$ void sort(int a[]) throws Exception [ CD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_3 $$ for (int i = a.length; --i >= 0; ) [ CD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_4 $$ boolean flipped = false[ CD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_5 $$ for (int j = 0; j < i; j++) [ CD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_3 $$ for (int i = a.length; --i >= 0; ) [ CD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_5 $$ for (int j = 0; j < i; j++) [ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_5 $$ for (int j = 0; j < i; j++) [ CD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_5 $$ for (int j = 0; j < i; j++) [ CD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_5 $$ for (int j = 0; j < i; j++) [ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_6 $$ if (stopRequested) [ CD ]
Line_6 $$ if (stopRequested) -->Line_7 $$ return[ CD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_9 $$ if (a[j] > a[j + 1]) [ CD ]
Line_9 $$ if (a[j] > a[j + 1]) -->Line_10 $$ int T = a[j][ CD ]
Line_9 $$ if (a[j] > a[j + 1]) -->Line_11 $$ a[j] = a[j + 1][ CD ]
Line_9 $$ if (a[j] > a[j + 1]) -->Line_12 $$ a[j + 1] = T[ CD ]
Line_10 $$ int T = a[j]-->Line_12 $$ a[j + 1] = T[ FD ]
Line_9 $$ if (a[j] > a[j + 1]) -->Line_13 $$ flipped = true[ CD ]
Line_13 $$ flipped = true-->Line_13 $$ flipped = true[ FD ]
Line_4 $$ boolean flipped = false-->Line_13 $$ flipped = true[ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_15 $$ pause(i, j)[ CD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_15 $$ pause(i, j)[ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_15 $$ pause(i, j)[ FD ]
Line_3 $$ for (int i = a.length; --i >= 0; ) -->Line_17 $$ if (!flipped) [ CD ]
Line_13 $$ flipped = true-->Line_17 $$ if (!flipped) [ FD ]
Line_4 $$ boolean flipped = false-->Line_17 $$ if (!flipped) [ FD ]
Line_17 $$ if (!flipped) -->Line_17 $$ if (!flipped) [ CD ]
Line_13 $$ flipped = true-->Line_17 $$ if (!flipped) [ FD ]
Line_4 $$ boolean flipped = false-->Line_17 $$ if (!flipped) [ FD ]
Line_17 $$ if (!flipped) -->Line_18 $$ return[ CD ]
Line_4 $$ boolean flipped = false-->Line_17 $$ if (!flipped) [ FD ]
Line_4 $$ boolean flipped = false-->Line_17 $$ if (!flipped) [ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_5 $$ for (int j = 0; j < i; j++) [ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_5 $$ for (int j = 0; j < i; j++) [ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_5 $$ for (int j = 0; j < i; j++) [ FD ]
Line_10 $$ int T = a[j]-->Line_12 $$ a[j + 1] = T[ FD ]
Line_5 $$ for (int j = 0; j < i; j++) -->Line_15 $$ pause(i, j)[ FD ]
