Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String uploadZtree(ArrayList c) [ CD ]
Line_4 $$ String id = generateRandomId()-->Line_4 $$ String id = generateRandomId()[ CD ]
Line_5 $$ Iterator iter = c.iterator()-->Line_5 $$ Iterator iter = c.iterator()[ CD ]
Line_2 $$ public String uploadZtree(ArrayList c) -->Line_5 $$ Iterator iter = c.iterator()[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_6 $$ URL url = new URL(ZorobotSystem.props.getProperty("zoro.url") + "auplo1.jsp")-->Line_7 $$ URLConnection connection = url.openConnection()[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_8 $$ connection.setDoOutput(true)[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())[ FD ]
Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_10 $$ out.print("id=" + id + "&")[ FD ]
Line_13 $$ while (iter.hasNext()) -->Line_13 $$ while (iter.hasNext()) [ CD ]
Line_5 $$ Iterator iter = c.iterator()-->Line_13 $$ while (iter.hasNext()) [ FD ]
Line_13 $$ while (iter.hasNext()) -->Line_14 $$ if (gg++ >= 500)[ CD ]
Line_12 $$ int gg = 0-->Line_14 $$ if (gg++ >= 500)[ FD ]
Line_13 $$ while (iter.hasNext()) -->Line_15 $$ String st = (String) iter.next()[ CD ]
Line_5 $$ Iterator iter = c.iterator()-->Line_15 $$ String st = (String) iter.next()[ FD ]
Line_13 $$ while (iter.hasNext()) -->Line_16 $$ sb.append("a=")[ CD ]
Line_11 $$ StringBuffer sb = new StringBuffer()-->Line_16 $$ sb.append("a=")[ FD ]
Line_13 $$ while (iter.hasNext()) -->Line_17 $$ sb.append(URLEncoder.encode(st, "UTF-8"))[ CD ]
Line_11 $$ StringBuffer sb = new StringBuffer()-->Line_17 $$ sb.append(URLEncoder.encode(st, "UTF-8"))[ FD ]
Line_15 $$ String st = (String) iter.next()-->Line_17 $$ sb.append(URLEncoder.encode(st, "UTF-8"))[ FD ]
Line_13 $$ while (iter.hasNext()) -->Line_18 $$ if (iter.hasNext() && gg < 500)[ CD ]
Line_5 $$ Iterator iter = c.iterator()-->Line_18 $$ if (iter.hasNext() && gg < 500)[ FD ]
Line_18 $$ if (iter.hasNext() && gg < 500)-->Line_18 $$ sb.append("&")[ CD ]
Line_11 $$ StringBuffer sb = new StringBuffer()-->Line_18 $$ sb.append("&")[ FD ]
Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_20 $$ out.println(sb.toString())[ FD ]
Line_11 $$ StringBuffer sb = new StringBuffer()-->Line_20 $$ out.println(sb.toString())[ FD ]
Line_9 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_21 $$ out.close()[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_22 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_23 $$ String inputLine-->Line_24 $$ if ((inputLine = in.readLine()) != null) [ FD ]
Line_24 $$ if ((inputLine = in.readLine()) != null) -->Line_24 $$ if ((inputLine = in.readLine()) != null) [ FD ]
Line_24 $$ if ((inputLine = in.readLine()) != null) -->Line_24 $$ if ((inputLine = in.readLine()) != null) [ CD ]
Line_22 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_24 $$ if ((inputLine = in.readLine()) != null) [ FD ]
Line_24 $$ if ((inputLine = in.readLine()) != null) -->Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [ CD ]
Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) -->Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [ CD ]
Line_23 $$ String inputLine-->Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [ FD ]
Line_24 $$ if ((inputLine = in.readLine()) != null) -->Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [ FD ]
Line_23 $$ String inputLine-->Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [ FD ]
Line_24 $$ if ((inputLine = in.readLine()) != null) -->Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) [ FD ]
Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) -->Line_26 $$ System.out.println("Not OK: " + inputLine)[ CD ]
Line_25 $$ if (!inputLine.equals("OK!") && inputLine.length() > 3) -->Line_27 $$ return "xxxxxxxxxx"[ CD ]
Line_22 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_30 $$ in.close()[ FD ]
Line_2 $$ public String uploadZtree(ArrayList c) -->Line_35 $$ return null[ CD ]
Line_15 $$ String st = (String) iter.next()-->Line_17 $$ sb.append(URLEncoder.encode(st, "UTF-8"))[ FD ]
