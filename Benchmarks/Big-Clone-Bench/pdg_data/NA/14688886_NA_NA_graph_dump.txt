Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static void populateResources() throws BasicException [ CD ]
Line_4 $$ List<URL> templates = DatabaseValidator.listResources("/net/adrianromero/templates/" + Locale.getDefault().getLanguage())-->Line_4 $$ List<URL> templates = DatabaseValidator.listResources("/net/adrianromero/templates/" + Locale.getDefault().getLanguage())[ CD ]
Line_4 $$ List<URL> templates = DatabaseValidator.listResources("/net/adrianromero/templates/" + Locale.getDefault().getLanguage())-->Line_5 $$ if (templates.size() == 0) [ FD ]
Line_5 $$ if (templates.size() == 0) -->Line_6 $$ templates = DatabaseValidator.listResources("/net/adrianromero/templates/en")[ CD ]
Line_4 $$ List<URL> templates = DatabaseValidator.listResources("/net/adrianromero/templates/" + Locale.getDefault().getLanguage())-->Line_6 $$ templates = DatabaseValidator.listResources("/net/adrianromero/templates/en")[ FD ]
Line_6 $$ templates = DatabaseValidator.listResources("/net/adrianromero/templates/en")-->Line_6 $$ templates = DatabaseValidator.listResources("/net/adrianromero/templates/en")[ FD ]
Line_6 $$ templates = DatabaseValidator.listResources("/net/adrianromero/templates/en")-->Line_6 $$ templates = DatabaseValidator.listResources("/net/adrianromero/templates/en")[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_9 $$ String fileName = url.getFile()[ CD ]
Line_8 $$ for (URL url : templates) -->Line_9 $$ String fileName = url.getFile()[ FD ]
Line_9 $$ String fileName = url.getFile()-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ FD ]
Line_9 $$ String fileName = url.getFile()-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)[ FD ]
Line_9 $$ String fileName = url.getFile()-->Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) [ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) [ FD ]
Line_9 $$ String fileName = url.getFile()-->Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) [ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) [ FD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))[ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))[ FD ]
Line_9 $$ String fileName = url.getFile()-->Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))[ FD ]
Line_10 $$ fileName = fileName.substring(fileName.lastIndexOf('/') + 1)-->Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))[ FD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_13 $$ InputStream is = url.openStream()[ CD ]
Line_13 $$ InputStream is = url.openStream()-->Line_13 $$ InputStream is = url.openStream()[ CD ]
Line_8 $$ for (URL url : templates) -->Line_13 $$ InputStream is = url.openStream()[ FD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_14 $$ StringBuffer strBuff = new StringBuffer()[ CD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_15 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is))[ CD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_16 $$ String str[ CD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_17 $$ while ((str = br.readLine()) != null) [ CD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) [ CD ]
Line_17 $$ while ((str = br.readLine()) != null) -->Line_17 $$ while ((str = br.readLine()) != null) [ FD ]
Line_16 $$ String str-->Line_17 $$ while ((str = br.readLine()) != null) [ FD ]
Line_17 $$ while ((str = br.readLine()) != null) -->Line_17 $$ while ((str = br.readLine()) != null) [ CD ]
Line_15 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is))-->Line_17 $$ while ((str = br.readLine()) != null) [ FD ]
Line_17 $$ while ((str = br.readLine()) != null) -->Line_18 $$ strBuff.append(str + "\n")[ CD ]
Line_14 $$ StringBuffer strBuff = new StringBuffer()-->Line_18 $$ strBuff.append(str + "\n")[ FD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_20 $$ templateResource.setText(strBuff.toString())[ CD ]
Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))-->Line_20 $$ templateResource.setText(strBuff.toString())[ FD ]
Line_14 $$ StringBuffer strBuff = new StringBuffer()-->Line_20 $$ templateResource.setText(strBuff.toString())[ FD ]
Line_11 $$ if (fileName.endsWith(".xml") || fileName.endsWith(".txt")) -->Line_21 $$ templateResource.save()[ CD ]
Line_12 $$ Resource templateResource = new Resource(fileName.substring(0, fileName.length() - 4))-->Line_21 $$ templateResource.save()[ FD ]
Line_2 $$ static void populateResources() throws BasicException -->Line_29 $$ String[][] images = new String[][] [ CD ]
Line_2 $$ static void populateResources() throws BasicException -->Line_30 $$ for (int i = 0; i < images.length; i++) [ CD ]
Line_2 $$ static void populateResources() throws BasicException -->Line_2 $$ static void populateResources() throws BasicException [ CD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_30 $$ for (int i = 0; i < images.length; i++) [ CD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_30 $$ for (int i = 0; i < images.length; i++) [ CD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_30 $$ for (int i = 0; i < images.length; i++) [ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_31 $$ Image img = new Image()[ CD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_32 $$ img.setBufferedImage(ImageUtils.readImage(DatabaseValidator.class.getResource("/net/adrianromero/images/" + images[i][1])))[ CD ]
Line_31 $$ Image img = new Image()-->Line_32 $$ img.setBufferedImage(ImageUtils.readImage(DatabaseValidator.class.getResource("/net/adrianromero/images/" + images[i][1])))[ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_33 $$ img.save()[ CD ]
Line_31 $$ Image img = new Image()-->Line_33 $$ img.save()[ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_34 $$ Property imgProperty = new Property(images[i][0])[ CD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_35 $$ imgProperty.setValue("" + img.getId())[ CD ]
Line_34 $$ Property imgProperty = new Property(images[i][0])-->Line_35 $$ imgProperty.setValue("" + img.getId())[ FD ]
Line_31 $$ Image img = new Image()-->Line_35 $$ imgProperty.setValue("" + img.getId())[ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_36 $$ imgProperty.save()[ CD ]
Line_34 $$ Property imgProperty = new Property(images[i][0])-->Line_36 $$ imgProperty.save()[ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_30 $$ for (int i = 0; i < images.length; i++) [ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_30 $$ for (int i = 0; i < images.length; i++) [ FD ]
Line_30 $$ for (int i = 0; i < images.length; i++) -->Line_30 $$ for (int i = 0; i < images.length; i++) [ FD ]
Line_31 $$ Image img = new Image()-->Line_32 $$ img.setBufferedImage(ImageUtils.readImage(DatabaseValidator.class.getResource("/net/adrianromero/images/" + images[i][1])))[ FD ]
Line_31 $$ Image img = new Image()-->Line_33 $$ img.save()[ FD ]
Line_34 $$ Property imgProperty = new Property(images[i][0])-->Line_35 $$ imgProperty.setValue("" + img.getId())[ FD ]
Line_31 $$ Image img = new Image()-->Line_35 $$ imgProperty.setValue("" + img.getId())[ FD ]
Line_34 $$ Property imgProperty = new Property(images[i][0])-->Line_36 $$ imgProperty.save()[ FD ]
