Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public SSLContext getSSLContext() throws IOException [ CD ]
Line_4 $$ URL url = getClass().getClassLoader().getResource(keyStoreFile)-->Line_4 $$ URL url = getClass().getClassLoader().getResource(keyStoreFile)[ CD ]
Line_5 $$ KeyStore keystore = KeyStore.getInstance(type.name())-->Line_5 $$ KeyStore keystore = KeyStore.getInstance(type.name())[ CD ]
Line_5 $$ KeyStore keystore = KeyStore.getInstance(type.name())-->Line_6 $$ keystore.load(url.openStream(), keyPassword)[ FD ]
Line_4 $$ URL url = getClass().getClassLoader().getResource(keyStoreFile)-->Line_6 $$ keystore.load(url.openStream(), keyPassword)[ FD ]
Line_7 $$ KeyManagerFactory kmfactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())-->Line_7 $$ KeyManagerFactory kmfactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())[ CD ]
Line_7 $$ KeyManagerFactory kmfactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())-->Line_8 $$ kmfactory.init(keystore, keyPassword)[ FD ]
Line_5 $$ KeyStore keystore = KeyStore.getInstance(type.name())-->Line_8 $$ kmfactory.init(keystore, keyPassword)[ FD ]
Line_9 $$ KeyManager[] keymanagers = kmfactory.getKeyManagers()-->Line_9 $$ KeyManager[] keymanagers = kmfactory.getKeyManagers()[ CD ]
Line_7 $$ KeyManagerFactory kmfactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())-->Line_9 $$ KeyManager[] keymanagers = kmfactory.getKeyManagers()[ FD ]
Line_10 $$ SSLContext sslcontext = SSLContext.getInstance(protocol.name())-->Line_10 $$ SSLContext sslcontext = SSLContext.getInstance(protocol.name())[ CD ]
Line_10 $$ SSLContext sslcontext = SSLContext.getInstance(protocol.name())-->Line_11 $$ sslcontext.init(keymanagers, TRUST_MANAGER, null)[ FD ]
Line_9 $$ KeyManager[] keymanagers = kmfactory.getKeyManagers()-->Line_11 $$ sslcontext.init(keymanagers, TRUST_MANAGER, null)[ FD ]
