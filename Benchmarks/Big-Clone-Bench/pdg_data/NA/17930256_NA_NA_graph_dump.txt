Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private JButton getButtonImagen() [ CD ]
Line_2 $$ private JButton getButtonImagen() -->Line_3 $$ if (buttonImagen == null) [ CD ]
Line_3 $$ if (buttonImagen == null) -->Line_5 $$ buttonImagen.setText("Cargar Imagen")[ CD ]
Line_3 $$ if (buttonImagen == null) -->Line_6 $$ buttonImagen.setIcon(new ImageIcon(getClass().getResource("/data/icons/view_sidetree.png")))[ CD ]
Line_3 $$ if (buttonImagen == null) -->Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() [ CD ]
Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() -->Line_9 $$ JFileChooser fc = new JFileChooser()[ CD ]
Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() -->Line_10 $$ fc.addChoosableFileFilter(new ImageFilter())[ CD ]
Line_9 $$ JFileChooser fc = new JFileChooser()-->Line_10 $$ fc.addChoosableFileFilter(new ImageFilter())[ FD ]
Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() -->Line_11 $$ fc.setFileView(new ImageFileView())[ CD ]
Line_9 $$ JFileChooser fc = new JFileChooser()-->Line_11 $$ fc.setFileView(new ImageFileView())[ FD ]
Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() -->Line_12 $$ fc.setAccessory(new ImagePreview(fc))[ CD ]
Line_9 $$ JFileChooser fc = new JFileChooser()-->Line_12 $$ fc.setAccessory(new ImagePreview(fc))[ FD ]
Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() -->Line_13 $$ int returnVal = fc.showDialog(Resorces.this, "Seleccione una imagen")[ CD ]
Line_13 $$ int returnVal = fc.showDialog(Resorces.this, "Seleccione una imagen")-->Line_13 $$ int returnVal = fc.showDialog(Resorces.this, "Seleccione una imagen")[ CD ]
Line_9 $$ JFileChooser fc = new JFileChooser()-->Line_13 $$ int returnVal = fc.showDialog(Resorces.this, "Seleccione una imagen")[ FD ]
Line_7 $$ buttonImagen.addActionListener(new java.awt.event.ActionListener() -->Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) [ CD ]
Line_13 $$ int returnVal = fc.showDialog(Resorces.this, "Seleccione una imagen")-->Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) [ FD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_15 $$ File file = fc.getSelectedFile()[ CD ]
Line_15 $$ File file = fc.getSelectedFile()-->Line_15 $$ File file = fc.getSelectedFile()[ CD ]
Line_9 $$ JFileChooser fc = new JFileChooser()-->Line_15 $$ File file = fc.getSelectedFile()[ FD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_16 $$ String rutaGlobal = System.getProperty("user.dir") + file.separator + "data" + file.separator + "imagenes" + file.separator + file.getName()[ CD ]
Line_15 $$ File file = fc.getSelectedFile()-->Line_16 $$ String rutaGlobal = System.getProperty("user.dir") + file.separator + "data" + file.separator + "imagenes" + file.separator + file.getName()[ FD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_17 $$ String rutaRelativa = "data" + file.separator + "imagenes" + file.separator + file.getName()[ CD ]
Line_15 $$ File file = fc.getSelectedFile()-->Line_17 $$ String rutaRelativa = "data" + file.separator + "imagenes" + file.separator + file.getName()[ FD ]
Line_21 $$ FileChannel canalFuente = fis.getChannel()-->Line_21 $$ FileChannel canalFuente = fis.getChannel()[ CD ]
Line_19 $$ FileInputStream fis = new FileInputStream(file)-->Line_21 $$ FileChannel canalFuente = fis.getChannel()[ FD ]
Line_22 $$ FileChannel canalDestino = fos.getChannel()-->Line_22 $$ FileChannel canalDestino = fos.getChannel()[ CD ]
Line_20 $$ FileOutputStream fos = new FileOutputStream(rutaGlobal, true)-->Line_22 $$ FileChannel canalDestino = fos.getChannel()[ FD ]
Line_21 $$ FileChannel canalFuente = fis.getChannel()-->Line_23 $$ canalFuente.transferTo(0, canalFuente.size(), canalDestino)[ FD ]
Line_22 $$ FileChannel canalDestino = fos.getChannel()-->Line_23 $$ canalFuente.transferTo(0, canalFuente.size(), canalDestino)[ FD ]
Line_21 $$ FileChannel canalFuente = fis.getChannel()-->Line_23 $$ canalFuente.transferTo(0, canalFuente.size(), canalDestino)[ FD ]
Line_19 $$ FileInputStream fis = new FileInputStream(file)-->Line_24 $$ fis.close()[ FD ]
Line_20 $$ FileOutputStream fos = new FileOutputStream(rutaGlobal, true)-->Line_25 $$ fos.close()[ FD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_29 $$ imagen.setImagenURL(rutaRelativa)[ CD ]
Line_17 $$ String rutaRelativa = "data" + file.separator + "imagenes" + file.separator + file.getName()-->Line_29 $$ imagen.setImagenURL(rutaRelativa)[ FD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_30 $$ System.out.println(rutaGlobal + " " + rutaRelativa)[ CD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_31 $$ buttonImagen.setIcon(new ImageIcon(getClass().getResource("/data/icons/view_sidetreeOK.png")))[ CD ]
Line_14 $$ if (returnVal == JFileChooser.APPROVE_OPTION) -->Line_32 $$ labelImagenPreview.setIcon(gui.procesadorDatos.escalaImageIcon(imagen.getImagenURL()))[ CD ]
Line_2 $$ private JButton getButtonImagen() -->Line_38 $$ return buttonImagen[ CD ]
