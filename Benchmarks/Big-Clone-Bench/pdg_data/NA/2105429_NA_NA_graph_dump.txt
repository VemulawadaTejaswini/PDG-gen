Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private byte[] pullMapBytes(String directoryLocation) [ CD ]
Line_2 $$ private byte[] pullMapBytes(String directoryLocation) -->Line_3 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()[ CD ]
Line_5 $$ URL url = new URL(directoryLocation)-->Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ InputStream is = httpURLConnection.getInputStream()-->Line_7 $$ InputStream is = httpURLConnection.getInputStream()[ CD ]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection()-->Line_7 $$ InputStream is = httpURLConnection.getInputStream()[ FD ]
Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) -->Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) [ FD ]
Line_8 $$ int nRead-->Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) [ FD ]
Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) -->Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) [ CD ]
Line_7 $$ InputStream is = httpURLConnection.getInputStream()-->Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) [ FD ]
Line_9 $$ byte[] data = new byte[1024]-->Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) [ FD ]
Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) -->Line_11 $$ buffer.write(data, 0, nRead)[ CD ]
Line_3 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_11 $$ buffer.write(data, 0, nRead)[ FD ]
Line_9 $$ byte[] data = new byte[1024]-->Line_11 $$ buffer.write(data, 0, nRead)[ FD ]
Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) -->Line_11 $$ buffer.write(data, 0, nRead)[ FD ]
Line_8 $$ int nRead-->Line_11 $$ buffer.write(data, 0, nRead)[ FD ]
Line_3 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_13 $$ buffer.flush()[ FD ]
Line_2 $$ private byte[] pullMapBytes(String directoryLocation) -->Line_19 $$ return buffer.toByteArray()[ CD ]
Line_19 $$ return buffer.toByteArray()-->Line_19 $$ return buffer.toByteArray()[ CD ]
Line_3 $$ ByteArrayOutputStream buffer = new ByteArrayOutputStream()-->Line_19 $$ return buffer.toByteArray()[ FD ]
Line_10 $$ while ((nRead = is.read(data, 0, data.length)) != -1) -->Line_11 $$ buffer.write(data, 0, nRead)[ FD ]
