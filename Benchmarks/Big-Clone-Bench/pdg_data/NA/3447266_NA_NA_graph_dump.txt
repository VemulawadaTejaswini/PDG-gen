Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) [ CD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_3 $$ Helper.log().debug("Dropped")[ CD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_4 $$ Transferable t = arg0.getTransferable()[ CD ]
Line_4 $$ Transferable t = arg0.getTransferable()-->Line_4 $$ Transferable t = arg0.getTransferable()[ CD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_4 $$ Transferable t = arg0.getTransferable()[ FD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_6 $$ arg0.acceptDrop(arg0.getDropAction())[ FD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_6 $$ arg0.acceptDrop(arg0.getDropAction())[ FD ]
Line_4 $$ Transferable t = arg0.getTransferable()-->Line_7 $$ List<File> filelist = (List<File>) t.getTransferData(t.getTransferDataFlavors()[0])[ FD ]
Line_4 $$ Transferable t = arg0.getTransferable()-->Line_7 $$ List<File> filelist = (List<File>) t.getTransferData(t.getTransferDataFlavors()[0])[ FD ]
Line_8 $$ for (File file : filelist) -->Line_9 $$ Helper.log().debug(file.getAbsolutePath())[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) [ CD ]
Line_8 $$ for (File file : filelist) -->Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) [ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_11 $$ Helper.log().debug(file.getName() + " is a link")[ CD ]
Line_8 $$ for (File file : filelist) -->Line_11 $$ Helper.log().debug(file.getName() + " is a link")[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_12 $$ File target = new File(rp.getRoot().getFullPath() + "/" + file.getName())[ CD ]
Line_8 $$ for (File file : filelist) -->Line_12 $$ File target = new File(rp.getRoot().getFullPath() + "/" + file.getName())[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_13 $$ Helper.log().debug("I have opened the mayor at " + target.getAbsolutePath())[ CD ]
Line_12 $$ File target = new File(rp.getRoot().getFullPath() + "/" + file.getName())-->Line_13 $$ Helper.log().debug("I have opened the mayor at " + target.getAbsolutePath())[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_14 $$ FileOutputStream fo = new FileOutputStream(target)[ CD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_15 $$ FileInputStream fi = new FileInputStream(file)[ CD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_16 $$ int i = 0[ CD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_17 $$ while (fi.available() > 0) [ CD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) [ CD ]
Line_15 $$ FileInputStream fi = new FileInputStream(file)-->Line_17 $$ while (fi.available() > 0) [ FD ]
Line_17 $$ while (fi.available() > 0) -->Line_18 $$ fo.write(fi.read())[ CD ]
Line_14 $$ FileOutputStream fo = new FileOutputStream(target)-->Line_18 $$ fo.write(fi.read())[ FD ]
Line_15 $$ FileInputStream fi = new FileInputStream(file)-->Line_18 $$ fo.write(fi.read())[ FD ]
Line_17 $$ while (fi.available() > 0) -->Line_19 $$ System.out.print(".")[ CD ]
Line_17 $$ while (fi.available() > 0) -->Line_20 $$ i++[ CD ]
Line_16 $$ int i = 0-->Line_20 $$ i++[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_22 $$ Helper.log().debug(i + " bytes have been written to " + target.getAbsolutePath())[ CD ]
Line_12 $$ File target = new File(rp.getRoot().getFullPath() + "/" + file.getName())-->Line_22 $$ Helper.log().debug(i + " bytes have been written to " + target.getAbsolutePath())[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_23 $$ fo.close()[ CD ]
Line_14 $$ FileOutputStream fo = new FileOutputStream(target)-->Line_23 $$ fo.close()[ FD ]
Line_10 $$ if (file.getName().toLowerCase().contains(".lnk")) -->Line_24 $$ fi.close()[ CD ]
Line_15 $$ FileInputStream fi = new FileInputStream(file)-->Line_24 $$ fi.close()[ FD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_31 $$ Helper.log().debug(arg0.getSource().toString())[ CD ]
Line_2 $$ public synchronized void drop(DropTargetDropEvent arg0) -->Line_31 $$ Helper.log().debug(arg0.getSource().toString())[ FD ]
