Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Vector<String> getVoiceServersNames() [ CD ]
Line_2 $$ public Vector<String> getVoiceServersNames() -->Line_3 $$ Vector<String> result = new Vector<String>()[ CD ]
Line_2 $$ public Vector<String> getVoiceServersNames() -->Line_4 $$ boolean serverline = false[ CD ]
Line_2 $$ public Vector<String> getVoiceServersNames() -->Line_5 $$ String line[ CD ]
Line_2 $$ public Vector<String> getVoiceServersNames() -->Line_6 $$ String[] splitline[ CD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_9 $$ URLConnection connection = url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(voiceaddress)-->Line_9 $$ URLConnection connection = url.openConnection()[ FD ]
Line_9 $$ URLConnection connection = url.openConnection()-->Line_10 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_5 $$ String line-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_11 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_11 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_12 $$ if (serverline) [ CD ]
Line_12 $$ if (serverline) -->Line_13 $$ splitline = line.split(":")[ CD ]
Line_13 $$ splitline = line.split(":")-->Line_13 $$ splitline = line.split(":")[ FD ]
Line_6 $$ String[] splitline-->Line_13 $$ splitline = line.split(":")[ FD ]
Line_13 $$ splitline = line.split(":")-->Line_13 $$ splitline = line.split(":")[ CD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_13 $$ splitline = line.split(":")[ FD ]
Line_5 $$ String line-->Line_13 $$ splitline = line.split(":")[ FD ]
Line_12 $$ if (serverline) -->Line_14 $$ result.add(splitline[0])[ CD ]
Line_3 $$ Vector<String> result = new Vector<String>()-->Line_14 $$ result.add(splitline[0])[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ CD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ FD ]
Line_5 $$ String line-->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ FD ]
Line_16 $$ if (line.startsWith("!VOICE SERVERS")) -->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ CD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ FD ]
Line_5 $$ String line-->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ FD ]
Line_16 $$ if (line.startsWith("!VOICE SERVERS")) -->Line_17 $$ serverline = true[ CD ]
Line_17 $$ serverline = true-->Line_17 $$ serverline = true[ FD ]
Line_4 $$ boolean serverline = false-->Line_17 $$ serverline = true[ FD ]
Line_2 $$ public Vector<String> getVoiceServersNames() -->Line_25 $$ return result[ CD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_13 $$ splitline = line.split(":")[ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ FD ]
Line_11 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.startsWith("!VOICE SERVERS")) [ FD ]
