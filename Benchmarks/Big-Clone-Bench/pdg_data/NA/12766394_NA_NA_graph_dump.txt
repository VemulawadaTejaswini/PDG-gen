Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testReadHelloWorldTxt() throws Exception [ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_3 $$ final InputStream helloWorldIS = this.getClass().getClassLoader().getResourceAsStream(BASE_DIR + "/HelloWorld.txt")[ CD ]
Line_3 $$ final InputStream helloWorldIS = this.getClass().getClassLoader().getResourceAsStream(BASE_DIR + "/HelloWorld.txt")-->Line_3 $$ final InputStream helloWorldIS = this.getClass().getClassLoader().getResourceAsStream(BASE_DIR + "/HelloWorld.txt")[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_4 $$ FileUtils.forceMkdir(new File(this.testDir.getAbsolutePath() + "/org/settings4j/contentresolver"))[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_5 $$ final String helloWorldPath = this.testDir.getAbsolutePath() + "/org/settings4j/contentresolver/HelloWorld.txt"[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_6 $$ final FileOutputStream fileOutputStream = new FileOutputStream(new File(helloWorldPath))[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_7 $$ IOUtils.copy(helloWorldIS, fileOutputStream)[ CD ]
Line_3 $$ final InputStream helloWorldIS = this.getClass().getClassLoader().getResourceAsStream(BASE_DIR + "/HelloWorld.txt")-->Line_7 $$ IOUtils.copy(helloWorldIS, fileOutputStream)[ FD ]
Line_6 $$ final FileOutputStream fileOutputStream = new FileOutputStream(new File(helloWorldPath))-->Line_7 $$ IOUtils.copy(helloWorldIS, fileOutputStream)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_8 $$ IOUtils.closeQuietly(helloWorldIS)[ CD ]
Line_3 $$ final InputStream helloWorldIS = this.getClass().getClassLoader().getResourceAsStream(BASE_DIR + "/HelloWorld.txt")-->Line_8 $$ IOUtils.closeQuietly(helloWorldIS)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_9 $$ IOUtils.closeQuietly(fileOutputStream)[ CD ]
Line_6 $$ final FileOutputStream fileOutputStream = new FileOutputStream(new File(helloWorldPath))-->Line_9 $$ IOUtils.closeQuietly(fileOutputStream)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_10 $$ LOG.info("helloWorldPath: " + helloWorldPath)[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_12 $$ contentResolver.setRootFolderPath(this.testDir.getAbsolutePath())[ CD ]
Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()-->Line_12 $$ contentResolver.setRootFolderPath(this.testDir.getAbsolutePath())[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()-->Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_14 $$ assertNotNull(content)[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_14 $$ assertNotNull(content)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_15 $$ assertEquals("Hello World", new String(content, "UTF-8"))[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()-->Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_17 $$ assertNotNull(content)[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_17 $$ assertNotNull(content)[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_17 $$ assertNotNull(content)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_18 $$ assertEquals("Hello World", new String(content, "UTF-8"))[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()-->Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_20 $$ assertNotNull(content)[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_20 $$ assertNotNull(content)[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_20 $$ assertNotNull(content)[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_20 $$ assertNotNull(content)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_21 $$ assertEquals("Hello World", new String(content, "UTF-8"))[ CD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ FD ]
Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")-->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ FD ]
Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")-->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ CD ]
Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()-->Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_23 $$ assertNull(content)[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_23 $$ assertNull(content)[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_23 $$ assertNull(content)[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_23 $$ assertNull(content)[ FD ]
Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")-->Line_23 $$ assertNull(content)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ CD ]
Line_11 $$ final FSContentResolver contentResolver = new FSContentResolver()-->Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_25 $$ assertNotNull(content)[ CD ]
Line_13 $$ byte[] content = contentResolver.getContent("org/settings4j/contentresolver/HelloWorld.txt")-->Line_25 $$ assertNotNull(content)[ FD ]
Line_16 $$ content = contentResolver.getContent("file:org/settings4j/contentresolver/HelloWorld.txt")-->Line_25 $$ assertNotNull(content)[ FD ]
Line_19 $$ content = contentResolver.getContent("file:/org/settings4j/contentresolver/HelloWorld.txt")-->Line_25 $$ assertNotNull(content)[ FD ]
Line_22 $$ content = contentResolver.getContent("file:laksjdhalksdhfa")-->Line_25 $$ assertNotNull(content)[ FD ]
Line_24 $$ content = contentResolver.getContent("/org/settings4j/contentresolver/HelloWorld.txt")-->Line_25 $$ assertNotNull(content)[ FD ]
Line_2 $$ public void testReadHelloWorldTxt() throws Exception -->Line_26 $$ assertEquals("Hello World", new String(content, "UTF-8"))[ CD ]
