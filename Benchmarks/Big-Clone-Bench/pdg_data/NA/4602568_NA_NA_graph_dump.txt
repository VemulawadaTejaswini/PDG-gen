Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception [ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_3 $$ Calendar rightNow = Calendar.getInstance()[ CD ]
Line_3 $$ Calendar rightNow = Calendar.getInstance()-->Line_3 $$ Calendar rightNow = Calendar.getInstance()[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_4 $$ String dayNamedFolderName = "" + rightNow.get(Calendar.YEAR) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.MONTH) + 1) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.DATE))[ CD ]
Line_3 $$ Calendar rightNow = Calendar.getInstance()-->Line_4 $$ String dayNamedFolderName = "" + rightNow.get(Calendar.YEAR) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.MONTH) + 1) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.DATE))[ FD ]
Line_3 $$ Calendar rightNow = Calendar.getInstance()-->Line_4 $$ String dayNamedFolderName = "" + rightNow.get(Calendar.YEAR) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.MONTH) + 1) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.DATE))[ FD ]
Line_3 $$ Calendar rightNow = Calendar.getInstance()-->Line_4 $$ String dayNamedFolderName = "" + rightNow.get(Calendar.YEAR) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.MONTH) + 1) + StringUtil.getPaddedIntWithZeros(2, rightNow.get(Calendar.DATE))[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_5 $$ String uploadDirRoot = props.getProperty("uploaded.files.root")[ CD ]
Line_5 $$ String uploadDirRoot = props.getProperty("uploaded.files.root")-->Line_5 $$ String uploadDirRoot = props.getProperty("uploaded.files.root")[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_6 $$ File file = new File(uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName)[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_7 $$ if (!file.exists())[ CD ]
Line_7 $$ if (!file.exists())-->Line_7 $$ if (!file.exists())[ CD ]
Line_7 $$ if (!file.exists())-->Line_7 $$ if (!file.exists())[ CD ]
Line_6 $$ File file = new File(uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName)-->Line_7 $$ if (!file.exists())[ FD ]
Line_7 $$ if (!file.exists())-->Line_7 $$ file.mkdirs()[ CD ]
Line_6 $$ File file = new File(uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName)-->Line_7 $$ file.mkdirs()[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_8 $$ String extension = FilenameUtils.getExtension(fileName)[ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_8 $$ String extension = FilenameUtils.getExtension(fileName)[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_8 $$ String extension = FilenameUtils.getExtension(fileName)[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_9 $$ String outFileName[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_10 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEORIGINALFILENAME, "true"))) [ CD ]
Line_10 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEORIGINALFILENAME, "true"))) -->Line_10 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEORIGINALFILENAME, "true"))) [ CD ]
Line_10 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEORIGINALFILENAME, "true"))) -->Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))[ CD ]
Line_9 $$ String outFileName-->Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))[ FD ]
Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))-->Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))[ FD ]
Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))-->Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))[ FD ]
Line_10 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEORIGINALFILENAME, "true"))) -->Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))[ CD ]
Line_9 $$ String outFileName-->Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))[ FD ]
Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))-->Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))[ FD ]
Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))-->Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))[ FD ]
Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))-->Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_15 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEEXTENSION, "true"))) [ CD ]
Line_15 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEEXTENSION, "true"))) -->Line_15 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEEXTENSION, "true"))) [ CD ]
Line_15 $$ if (Boolean.parseBoolean(props.getPropertiesInstance().getProperty(IFConsts.USEEXTENSION, "true"))) -->Line_16 $$ outFileName = outFileName + DOT + extension[ CD ]
Line_9 $$ String outFileName-->Line_16 $$ outFileName = outFileName + DOT + extension[ FD ]
Line_11 $$ outFileName = StringUtil.removeSpecChars(StringUtil.unaccent(FilenameUtils.getBaseName(fileName)))-->Line_16 $$ outFileName = outFileName + DOT + extension[ FD ]
Line_13 $$ outFileName = StringUtil.hash(fileName + Long.toString(System.currentTimeMillis()))-->Line_16 $$ outFileName = outFileName + DOT + extension[ FD ]
Line_16 $$ outFileName = outFileName + DOT + extension-->Line_16 $$ outFileName = outFileName + DOT + extension[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_16 $$ outFileName = outFileName + DOT + extension[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_18 $$ String outPathAndName = uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName + System.getProperty("file.separator") + props.getProperty("uploaded.files.prefix") + outFileName[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_19 $$ File uploadedFile = new File(outPathAndName)[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_20 $$ _logger.info("uploadedFile.getAbsolutePath() = [ CD ]
Line_19 $$ File uploadedFile = new File(outPathAndName)-->Line_20 $$ _logger.info("uploadedFile.getAbsolutePath() = [ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_21 $$ uploadedFile.createNewFile()[ CD ]
Line_19 $$ File uploadedFile = new File(outPathAndName)-->Line_21 $$ uploadedFile.createNewFile()[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_22 $$ OutputStream outStream = new FileOutputStream(outPathAndName)[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_23 $$ IOUtils.copyLarge(inStream, outStream)[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_23 $$ IOUtils.copyLarge(inStream, outStream)[ FD ]
Line_22 $$ OutputStream outStream = new FileOutputStream(outPathAndName)-->Line_23 $$ IOUtils.copyLarge(inStream, outStream)[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_24 $$ IOUtils.closeQuietly(inStream)[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_24 $$ IOUtils.closeQuietly(inStream)[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_25 $$ outStream.close()[ CD ]
Line_22 $$ OutputStream outStream = new FileOutputStream(outPathAndName)-->Line_25 $$ outStream.close()[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_26 $$ if (resize) [ CD ]
Line_26 $$ if (resize) -->Line_27 $$ writeResizedImage(outPathAndName, extension, "imgSize_xs")[ CD ]
Line_18 $$ String outPathAndName = uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName + System.getProperty("file.separator") + props.getProperty("uploaded.files.prefix") + outFileName-->Line_27 $$ writeResizedImage(outPathAndName, extension, "imgSize_xs")[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_27 $$ writeResizedImage(outPathAndName, extension, "imgSize_xs")[ FD ]
Line_26 $$ if (resize) -->Line_28 $$ writeResizedImage(outPathAndName, extension, "imgSize_s")[ CD ]
Line_18 $$ String outPathAndName = uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName + System.getProperty("file.separator") + props.getProperty("uploaded.files.prefix") + outFileName-->Line_28 $$ writeResizedImage(outPathAndName, extension, "imgSize_s")[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_28 $$ writeResizedImage(outPathAndName, extension, "imgSize_s")[ FD ]
Line_26 $$ if (resize) -->Line_29 $$ writeResizedImage(outPathAndName, extension, "imgSize_m")[ CD ]
Line_18 $$ String outPathAndName = uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName + System.getProperty("file.separator") + props.getProperty("uploaded.files.prefix") + outFileName-->Line_29 $$ writeResizedImage(outPathAndName, extension, "imgSize_m")[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_29 $$ writeResizedImage(outPathAndName, extension, "imgSize_m")[ FD ]
Line_26 $$ if (resize) -->Line_30 $$ writeResizedImage(outPathAndName, extension, "imgSize_l")[ CD ]
Line_18 $$ String outPathAndName = uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName + System.getProperty("file.separator") + props.getProperty("uploaded.files.prefix") + outFileName-->Line_30 $$ writeResizedImage(outPathAndName, extension, "imgSize_l")[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_30 $$ writeResizedImage(outPathAndName, extension, "imgSize_l")[ FD ]
Line_26 $$ if (resize) -->Line_31 $$ writeResizedImage(outPathAndName, extension, "imgSize_xl")[ CD ]
Line_18 $$ String outPathAndName = uploadDirRoot + System.getProperty("file.separator") + dayNamedFolderName + System.getProperty("file.separator") + props.getProperty("uploaded.files.prefix") + outFileName-->Line_31 $$ writeResizedImage(outPathAndName, extension, "imgSize_xl")[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(fileName)-->Line_31 $$ writeResizedImage(outPathAndName, extension, "imgSize_xl")[ FD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_33 $$ String retVal = dayNamedFolderName + "/" + props.getProperty("uploaded.files.prefix") + outFileName[ CD ]
Line_2 $$ public String storeImage(InputStream inStream, String fileName, boolean resize) throws Exception -->Line_34 $$ return retVal[ CD ]
