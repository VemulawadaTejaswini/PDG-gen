Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException [ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_3 $$ this.qualifiersOnTarget = qualifiersOnTarget[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_3 $$ this.qualifiersOnTarget = qualifiersOnTarget[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_5 $$ if (roughMode)[ CD ]
Line_5 $$ if (roughMode)-->Line_5 $$ model.setRoughMode(true)[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_6 $$ DOMParser parser = new DOMParser()[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_7 $$ parser.setFeature("http://xml.org/sax/features/validation", false)[ CD ]
Line_6 $$ DOMParser parser = new DOMParser()-->Line_7 $$ parser.setFeature("http://xml.org/sax/features/validation", false)[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_8 $$ parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false)[ CD ]
Line_6 $$ DOMParser parser = new DOMParser()-->Line_8 $$ parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false)[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_9 $$ parser.parse(new InputSource(url.openStream()))[ CD ]
Line_6 $$ DOMParser parser = new DOMParser()-->Line_9 $$ parser.parse(new InputSource(url.openStream()))[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_9 $$ parser.parse(new InputSource(url.openStream()))[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_10 $$ Document doc = parser.getDocument()[ CD ]
Line_10 $$ Document doc = parser.getDocument()-->Line_10 $$ Document doc = parser.getDocument()[ CD ]
Line_6 $$ DOMParser parser = new DOMParser()-->Line_10 $$ Document doc = parser.getDocument()[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_11 $$ Element documentEl = doc.getDocumentElement()[ CD ]
Line_11 $$ Element documentEl = doc.getDocumentElement()-->Line_11 $$ Element documentEl = doc.getDocumentElement()[ CD ]
Line_10 $$ Document doc = parser.getDocument()-->Line_11 $$ Element documentEl = doc.getDocumentElement()[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_12 $$ Element contentEl = demandChildElement(documentEl, "XMI.content")[ CD ]
Line_12 $$ Element contentEl = demandChildElement(documentEl, "XMI.content")-->Line_12 $$ Element contentEl = demandChildElement(documentEl, "XMI.content")[ CD ]
Line_11 $$ Element documentEl = doc.getDocumentElement()-->Line_12 $$ Element contentEl = demandChildElement(documentEl, "XMI.content")[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_13 $$ adapter = Adapter.getAdapter(documentEl)[ CD ]
Line_11 $$ Element documentEl = doc.getDocumentElement()-->Line_13 $$ adapter = Adapter.getAdapter(documentEl)[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_14 $$ parsePackage(contentEl)[ CD ]
Line_12 $$ Element contentEl = demandChildElement(documentEl, "XMI.content")-->Line_14 $$ parsePackage(contentEl)[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_15 $$ if (!packagePath.isEmpty())[ CD ]
Line_15 $$ if (!packagePath.isEmpty())-->Line_15 $$ if (!packagePath.isEmpty())[ CD ]
Line_15 $$ if (!packagePath.isEmpty())-->Line_15 $$ if (!packagePath.isEmpty())[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException [ CD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())[ CD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())[ CD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())[ CD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ parseGeneralization((Element) i.next())[ CD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ parseGeneralization((Element) i.next())[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) [ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException [ CD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) [ CD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) [ FD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) [ CD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) [ CD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_20 $$ Element assoel = (Element) i.next()[ CD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_20 $$ Element assoel = (Element) i.next()[ FD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_20 $$ Element assoel = (Element) i.next()[ FD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_21 $$ parseAssociation(assoel, (ModelClass) (associations.get(assoel)))[ CD ]
Line_20 $$ Element assoel = (Element) i.next()-->Line_21 $$ parseAssociation(assoel, (ModelClass) (associations.get(assoel)))[ FD ]
Line_20 $$ Element assoel = (Element) i.next()-->Line_21 $$ parseAssociation(assoel, (ModelClass) (associations.get(assoel)))[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException [ CD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ CD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ FD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ FD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ CD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ CD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ elaborate((ModelClass) (i.next()))[ CD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ elaborate((ModelClass) (i.next()))[ FD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_24 $$ elaborate((ModelClass) (i.next()))[ FD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_24 $$ elaborate((ModelClass) (i.next()))[ FD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_26 $$ if (roughMode)[ CD ]
Line_26 $$ if (roughMode)-->Line_26 $$ model.determineAllSupertypes()[ CD ]
Line_26 $$ if (roughMode)-->Line_26 $$ model.flatten()[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_27 $$ url = null[ CD ]
Line_2 $$ private void parse(URL url, String description, boolean qualifiersOnTarget) throws org.xml.sax.SAXException, java.io.IOException -->Line_27 $$ url = null[ FD ]
Line_27 $$ url = null-->Line_27 $$ url = null[ FD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())[ FD ]
Line_17 $$ for (Iterator i = generalizations.iterator(); i.hasNext(); ) parseGeneralization((Element) i.next())-->Line_17 $$ parseGeneralization((Element) i.next())[ FD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) [ FD ]
Line_19 $$ for (Iterator i = associations.keySet().iterator(); i.hasNext(); ) -->Line_20 $$ Element assoel = (Element) i.next()[ FD ]
Line_20 $$ Element assoel = (Element) i.next()-->Line_21 $$ parseAssociation(assoel, (ModelClass) (associations.get(assoel)))[ FD ]
Line_20 $$ Element assoel = (Element) i.next()-->Line_21 $$ parseAssociation(assoel, (ModelClass) (associations.get(assoel)))[ FD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))[ FD ]
Line_24 $$ for (Iterator i = classElements.keySet().iterator(); i.hasNext(); ) elaborate((ModelClass) (i.next()))-->Line_24 $$ elaborate((ModelClass) (i.next()))[ FD ]
