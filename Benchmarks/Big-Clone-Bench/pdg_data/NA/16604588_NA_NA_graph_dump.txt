Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException [ CD ]
Line_2 $$ public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException -->Line_3 $$ InputStream inputStream = null[ CD ]
Line_2 $$ public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException -->Line_4 $$ if (useragent != null) [ CD ]
Line_4 $$ if (useragent != null) -->Line_5 $$ URLConnection myCon = url.openConnection()[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_5 $$ URLConnection myCon = url.openConnection()[ CD ]
Line_2 $$ public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException -->Line_5 $$ URLConnection myCon = url.openConnection()[ FD ]
Line_4 $$ if (useragent != null) -->Line_6 $$ myCon.setUseCaches(false)[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_6 $$ myCon.setUseCaches(false)[ FD ]
Line_4 $$ if (useragent != null) -->Line_7 $$ myCon.setDoInput(true)[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_7 $$ myCon.setDoInput(true)[ FD ]
Line_4 $$ if (useragent != null) -->Line_8 $$ myCon.setDoOutput(true)[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_8 $$ myCon.setDoOutput(true)[ FD ]
Line_4 $$ if (useragent != null) -->Line_9 $$ myCon.setAllowUserInteraction(false)[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_9 $$ myCon.setAllowUserInteraction(false)[ FD ]
Line_4 $$ if (useragent != null) -->Line_10 $$ myCon.setRequestProperty("User-Agent", useragent)[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_10 $$ myCon.setRequestProperty("User-Agent", useragent)[ FD ]
Line_4 $$ if (useragent != null) -->Line_11 $$ myCon.setRequestProperty("Accept", "*/*")[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_11 $$ myCon.setRequestProperty("Accept", "*/*")[ FD ]
Line_4 $$ if (useragent != null) -->Line_12 $$ myCon.setRequestProperty("Icy-Metadata", "1")[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_12 $$ myCon.setRequestProperty("Icy-Metadata", "1")[ FD ]
Line_4 $$ if (useragent != null) -->Line_13 $$ myCon.setRequestProperty("Connection", "close")[ CD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_13 $$ myCon.setRequestProperty("Connection", "close")[ FD ]
Line_4 $$ if (useragent != null) -->Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())[ CD ]
Line_3 $$ InputStream inputStream = null-->Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())[ FD ]
Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())-->Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())[ FD ]
Line_5 $$ URLConnection myCon = url.openConnection()-->Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())[ FD ]
Line_4 $$ if (useragent != null) -->Line_16 $$ inputStream = new BufferedInputStream(url.openStream())[ CD ]
Line_3 $$ InputStream inputStream = null-->Line_16 $$ inputStream = new BufferedInputStream(url.openStream())[ FD ]
Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())-->Line_16 $$ inputStream = new BufferedInputStream(url.openStream())[ FD ]
Line_16 $$ inputStream = new BufferedInputStream(url.openStream())-->Line_16 $$ inputStream = new BufferedInputStream(url.openStream())[ FD ]
Line_2 $$ public static AudioFileFormat getAudioFileFormat(URL url) throws UnsupportedAudioFileException, IOException -->Line_16 $$ inputStream = new BufferedInputStream(url.openStream())[ FD ]
Line_19 $$ if (DEBUG == true) -->Line_20 $$ System.err.println("Using AppletMpegSPIWorkaround to get codec (AudioFileFormat:url)")[ CD ]
Line_22 $$ return getAudioFileFormatForUrl(inputStream)-->Line_22 $$ return getAudioFileFormatForUrl(inputStream)[ CD ]
Line_3 $$ InputStream inputStream = null-->Line_22 $$ return getAudioFileFormatForUrl(inputStream)[ FD ]
Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())-->Line_22 $$ return getAudioFileFormatForUrl(inputStream)[ FD ]
Line_16 $$ inputStream = new BufferedInputStream(url.openStream())-->Line_22 $$ return getAudioFileFormatForUrl(inputStream)[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_24 $$ inputStream.close()[ FD ]
Line_14 $$ inputStream = new BufferedInputStream(myCon.getInputStream())-->Line_24 $$ inputStream.close()[ FD ]
Line_16 $$ inputStream = new BufferedInputStream(url.openStream())-->Line_24 $$ inputStream.close()[ FD ]
