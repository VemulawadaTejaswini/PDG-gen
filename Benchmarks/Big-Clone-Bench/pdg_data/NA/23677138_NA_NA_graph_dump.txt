Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void BubbleSortDouble2(double[] num) [ CD ]
Line_2 $$ public static void BubbleSortDouble2(double[] num) -->Line_3 $$ int last_exchange[ CD ]
Line_2 $$ public static void BubbleSortDouble2(double[] num) -->Line_4 $$ int right_border = num.length - 1[ CD ]
Line_2 $$ public static void BubbleSortDouble2(double[] num) -->Line_5 $$ do [ CD ]
Line_2 $$ public static void BubbleSortDouble2(double[] num) -->Line_2 $$ public static void BubbleSortDouble2(double[] num) [ CD ]
Line_4 $$ int right_border = num.length - 1-->Line_5 $$ do [ FD ]
Line_5 $$ do -->Line_6 $$ last_exchange = 0[ CD ]
Line_6 $$ last_exchange = 0-->Line_6 $$ last_exchange = 0[ FD ]
Line_3 $$ int last_exchange-->Line_6 $$ last_exchange = 0[ FD ]
Line_5 $$ do -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ CD ]
Line_5 $$ do -->Line_5 $$ do [ CD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ CD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ CD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ FD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_8 $$ if (num[j] > num[j + 1]) [ CD ]
Line_8 $$ if (num[j] > num[j + 1]) -->Line_10 $$ double temp = num[j][ CD ]
Line_8 $$ if (num[j] > num[j + 1]) -->Line_11 $$ num[j] = num[j + 1][ CD ]
Line_8 $$ if (num[j] > num[j + 1]) -->Line_12 $$ num[j + 1] = temp[ CD ]
Line_10 $$ double temp = num[j]-->Line_12 $$ num[j + 1] = temp[ FD ]
Line_8 $$ if (num[j] > num[j + 1]) -->Line_13 $$ last_exchange = j[ CD ]
Line_13 $$ last_exchange = j-->Line_13 $$ last_exchange = j[ FD ]
Line_6 $$ last_exchange = 0-->Line_13 $$ last_exchange = j[ FD ]
Line_3 $$ int last_exchange-->Line_13 $$ last_exchange = j[ FD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_13 $$ last_exchange = j[ FD ]
Line_5 $$ do -->Line_16 $$ right_border = last_exchange[ CD ]
Line_16 $$ right_border = last_exchange-->Line_16 $$ right_border = last_exchange[ FD ]
Line_4 $$ int right_border = num.length - 1-->Line_16 $$ right_border = last_exchange[ FD ]
Line_13 $$ last_exchange = j-->Line_16 $$ right_border = last_exchange[ FD ]
Line_6 $$ last_exchange = 0-->Line_16 $$ right_border = last_exchange[ FD ]
Line_3 $$ int last_exchange-->Line_16 $$ right_border = last_exchange[ FD ]
Line_16 $$ right_border = last_exchange-->Line_5 $$ do [ FD ]
Line_16 $$ right_border = last_exchange-->Line_5 $$ do [ FD ]
Line_6 $$ last_exchange = 0-->Line_16 $$ right_border = last_exchange[ FD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ FD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ FD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_7 $$ for (int j = 0; j < num.length - 1; j++) [ FD ]
Line_10 $$ double temp = num[j]-->Line_12 $$ num[j + 1] = temp[ FD ]
Line_7 $$ for (int j = 0; j < num.length - 1; j++) -->Line_13 $$ last_exchange = j[ FD ]
