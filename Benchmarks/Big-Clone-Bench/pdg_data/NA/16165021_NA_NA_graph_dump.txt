Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private synchronized void resetUserDictionary() [ CD ]
Line_2 $$ private synchronized void resetUserDictionary() -->Line_3 $$ if (this.fChecker == null)[ CD ]
Line_3 $$ if (this.fChecker == null)-->Line_3 $$ return[ CD ]
Line_2 $$ private synchronized void resetUserDictionary() -->Line_4 $$ if (this.fUserDictionary != null) [ CD ]
Line_4 $$ if (this.fUserDictionary != null) -->Line_5 $$ this.fChecker.removeDictionary(this.fUserDictionary)[ CD ]
Line_4 $$ if (this.fUserDictionary != null) -->Line_6 $$ this.fUserDictionary.unload()[ CD ]
Line_4 $$ if (this.fUserDictionary != null) -->Line_7 $$ this.fUserDictionary = null[ CD ]
Line_2 $$ private synchronized void resetUserDictionary() -->Line_9 $$ IPreferenceStore store = SpellActivator.getDefault().getPreferenceStore()[ CD ]
Line_9 $$ IPreferenceStore store = SpellActivator.getDefault().getPreferenceStore()-->Line_9 $$ IPreferenceStore store = SpellActivator.getDefault().getPreferenceStore()[ CD ]
Line_2 $$ private synchronized void resetUserDictionary() -->Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)[ CD ]
Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)-->Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)[ CD ]
Line_9 $$ IPreferenceStore store = SpellActivator.getDefault().getPreferenceStore()-->Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)[ FD ]
Line_2 $$ private synchronized void resetUserDictionary() -->Line_11 $$ IStringVariableManager variableManager = VariablesPlugin.getDefault().getStringVariableManager()[ CD ]
Line_11 $$ IStringVariableManager variableManager = VariablesPlugin.getDefault().getStringVariableManager()-->Line_11 $$ IStringVariableManager variableManager = VariablesPlugin.getDefault().getStringVariableManager()[ CD ]
Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)-->Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)[ FD ]
Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)-->Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)[ FD ]
Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)-->Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)[ CD ]
Line_11 $$ IStringVariableManager variableManager = VariablesPlugin.getDefault().getStringVariableManager()-->Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)[ FD ]
Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)-->Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)[ FD ]
Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)-->Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)[ FD ]
Line_2 $$ private synchronized void resetUserDictionary() -->Line_18 $$ if (filePath.length() > 0) [ CD ]
Line_10 $$ String filePath = store.getString(PreferenceConstants.SPELLING_USER_DICTIONARY)-->Line_18 $$ if (filePath.length() > 0) [ FD ]
Line_13 $$ filePath = variableManager.performStringSubstitution(filePath)-->Line_18 $$ if (filePath.length() > 0) [ FD ]
Line_21 $$ if (!file.exists() && !file.createNewFile())-->Line_21 $$ if (!file.exists() && !file.createNewFile())[ CD ]
Line_20 $$ File file = new File(filePath)-->Line_21 $$ if (!file.exists() && !file.createNewFile())[ FD ]
Line_21 $$ if (!file.exists() && !file.createNewFile())-->Line_21 $$ if (!file.exists() && !file.createNewFile())[ CD ]
Line_20 $$ File file = new File(filePath)-->Line_21 $$ if (!file.exists() && !file.createNewFile())[ FD ]
Line_21 $$ if (!file.exists() && !file.createNewFile())-->Line_21 $$ return[ CD ]
Line_23 $$ InputStream stream = url.openStream()-->Line_23 $$ InputStream stream = url.openStream()[ CD ]
Line_22 $$ final URL url = new URL("file", null, filePath)-->Line_23 $$ InputStream stream = url.openStream()[ FD ]
Line_23 $$ InputStream stream = url.openStream()-->Line_24 $$ if (stream != null) [ FD ]
Line_23 $$ InputStream stream = url.openStream()-->Line_29 $$ stream.close()[ FD ]
