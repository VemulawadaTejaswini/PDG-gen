Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception [ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_3 $$ int count = 0[ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_4 $$ Iterator keys = args.keySet().iterator()[ CD ]
Line_4 $$ Iterator keys = args.keySet().iterator()-->Line_4 $$ Iterator keys = args.keySet().iterator()[ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_4 $$ Iterator keys = args.keySet().iterator()[ FD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_5 $$ while (keys.hasNext()) [ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception [ CD ]
Line_5 $$ while (keys.hasNext()) -->Line_5 $$ while (keys.hasNext()) [ CD ]
Line_4 $$ Iterator keys = args.keySet().iterator()-->Line_5 $$ while (keys.hasNext()) [ FD ]
Line_5 $$ while (keys.hasNext()) -->Line_6 $$ String sep = count++ == 0 ? "?" : "&"[ CD ]
Line_3 $$ int count = 0-->Line_6 $$ String sep = count++ == 0 ? "?" : "&"[ FD ]
Line_5 $$ while (keys.hasNext()) -->Line_7 $$ String name = (String) keys.next()[ CD ]
Line_4 $$ Iterator keys = args.keySet().iterator()-->Line_7 $$ String name = (String) keys.next()[ FD ]
Line_5 $$ while (keys.hasNext()) -->Line_8 $$ if (args.get(name) != null) [ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_8 $$ if (args.get(name) != null) [ FD ]
Line_7 $$ String name = (String) keys.next()-->Line_8 $$ if (args.get(name) != null) [ FD ]
Line_8 $$ if (args.get(name) != null) -->Line_9 $$ urlString += sep + name + "=" + args.get(name)[ CD ]
Line_9 $$ urlString += sep + name + "=" + args.get(name)-->Line_9 $$ urlString += sep + name + "=" + args.get(name)[ FD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_9 $$ urlString += sep + name + "=" + args.get(name)[ FD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_9 $$ urlString += sep + name + "=" + args.get(name)[ FD ]
Line_7 $$ String name = (String) keys.next()-->Line_9 $$ urlString += sep + name + "=" + args.get(name)[ FD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_12 $$ URL url = new URL(urlString)[ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_13 $$ URLConnection conn = url.openConnection()[ CD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_13 $$ URLConnection conn = url.openConnection()[ CD ]
Line_12 $$ URL url = new URL(urlString)-->Line_13 $$ URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_14 $$ conn.connect()[ CD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_14 $$ conn.connect()[ FD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_15 $$ SAXBuilder builder = new SAXBuilder()[ CD ]
Line_2 $$ protected Document getRawResults(String urlString, Map args) throws Exception -->Line_16 $$ return builder.build(conn.getInputStream())[ CD ]
Line_16 $$ return builder.build(conn.getInputStream())-->Line_16 $$ return builder.build(conn.getInputStream())[ CD ]
Line_15 $$ SAXBuilder builder = new SAXBuilder()-->Line_16 $$ return builder.build(conn.getInputStream())[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_16 $$ return builder.build(conn.getInputStream())[ FD ]
Line_7 $$ String name = (String) keys.next()-->Line_8 $$ if (args.get(name) != null) [ FD ]
Line_7 $$ String name = (String) keys.next()-->Line_9 $$ urlString += sep + name + "=" + args.get(name)[ FD ]
