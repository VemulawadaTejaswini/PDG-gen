Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String storeUploadedZip(byte[] zip, String name) [ CD ]
Line_2 $$ public String storeUploadedZip(byte[] zip, String name) -->Line_3 $$ List filesToStore = new ArrayList()[ CD ]
Line_2 $$ public String storeUploadedZip(byte[] zip, String name) -->Line_4 $$ int i = 0[ CD ]
Line_2 $$ public String storeUploadedZip(byte[] zip, String name) -->Line_5 $$ ZipInputStream zipIs = new ZipInputStream(new ByteArrayInputStream(zip))[ CD ]
Line_2 $$ public String storeUploadedZip(byte[] zip, String name) -->Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()[ CD ]
Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()-->Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()[ CD ]
Line_5 $$ ZipInputStream zipIs = new ZipInputStream(new ByteArrayInputStream(zip))-->Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()[ FD ]
Line_2 $$ public String storeUploadedZip(byte[] zip, String name) -->Line_7 $$ while (zipEntry != null) [ CD ]
Line_2 $$ public String storeUploadedZip(byte[] zip, String name) -->Line_2 $$ public String storeUploadedZip(byte[] zip, String name) [ CD ]
Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()-->Line_7 $$ while (zipEntry != null) [ FD ]
Line_7 $$ while (zipEntry != null) -->Line_8 $$ if (zipEntry.isDirectory() == false) [ CD ]
Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()-->Line_8 $$ if (zipEntry.isDirectory() == false) [ FD ]
Line_8 $$ if (zipEntry.isDirectory() == false) -->Line_9 $$ i++[ CD ]
Line_4 $$ int i = 0-->Line_9 $$ i++[ FD ]
Line_8 $$ if (zipEntry.isDirectory() == false) -->Line_10 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_8 $$ if (zipEntry.isDirectory() == false) -->Line_11 $$ IOUtils.copy(zipIs, baos)[ CD ]
Line_5 $$ ZipInputStream zipIs = new ZipInputStream(new ByteArrayInputStream(zip))-->Line_11 $$ IOUtils.copy(zipIs, baos)[ FD ]
Line_10 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_11 $$ IOUtils.copy(zipIs, baos)[ FD ]
Line_8 $$ if (zipEntry.isDirectory() == false) -->Line_12 $$ baos.close()[ CD ]
Line_10 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_12 $$ baos.close()[ FD ]
Line_7 $$ while (zipEntry != null) -->Line_14 $$ zipIs.closeEntry()[ CD ]
Line_5 $$ ZipInputStream zipIs = new ZipInputStream(new ByteArrayInputStream(zip))-->Line_14 $$ zipIs.closeEntry()[ FD ]
Line_7 $$ while (zipEntry != null) -->Line_15 $$ zipEntry = zipIs.getNextEntry()[ CD ]
Line_15 $$ zipEntry = zipIs.getNextEntry()-->Line_15 $$ zipEntry = zipIs.getNextEntry()[ FD ]
Line_6 $$ ZipEntry zipEntry = zipIs.getNextEntry()-->Line_15 $$ zipEntry = zipIs.getNextEntry()[ FD ]
Line_15 $$ zipEntry = zipIs.getNextEntry()-->Line_15 $$ zipEntry = zipIs.getNextEntry()[ CD ]
Line_5 $$ ZipInputStream zipIs = new ZipInputStream(new ByteArrayInputStream(zip))-->Line_15 $$ zipEntry = zipIs.getNextEntry()[ FD ]
Line_15 $$ zipEntry = zipIs.getNextEntry()-->Line_7 $$ while (zipEntry != null) [ FD ]
Line_15 $$ zipEntry = zipIs.getNextEntry()-->Line_7 $$ while (zipEntry != null) [ FD ]
Line_15 $$ zipEntry = zipIs.getNextEntry()-->Line_8 $$ if (zipEntry.isDirectory() == false) [ FD ]
Line_10 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_11 $$ IOUtils.copy(zipIs, baos)[ FD ]
Line_10 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_12 $$ baos.close()[ FD ]
