Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ String zipPath = "C:\\test.zip"[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ CZipInputStream zip_in = null[ CD ]
Line_4 $$ CZipInputStream zip_in = null-->Line_8 $$ zip_in = new CZipInputStream(new FileInputStream(zipPath), "utf-8")[ FD ]
Line_8 $$ zip_in = new CZipInputStream(new FileInputStream(zipPath), "utf-8")-->Line_8 $$ zip_in = new CZipInputStream(new FileInputStream(zipPath), "utf-8")[ FD ]
Line_9 $$ do -->Line_10 $$ ZipEntry file = zip_in.getNextEntry()[ CD ]
Line_10 $$ ZipEntry file = zip_in.getNextEntry()-->Line_10 $$ ZipEntry file = zip_in.getNextEntry()[ CD ]
Line_4 $$ CZipInputStream zip_in = null-->Line_10 $$ ZipEntry file = zip_in.getNextEntry()[ FD ]
Line_8 $$ zip_in = new CZipInputStream(new FileInputStream(zipPath), "utf-8")-->Line_10 $$ ZipEntry file = zip_in.getNextEntry()[ FD ]
Line_9 $$ do -->Line_11 $$ if (file == null)[ CD ]
Line_10 $$ ZipEntry file = zip_in.getNextEntry()-->Line_11 $$ if (file == null)[ FD ]
Line_9 $$ do -->Line_12 $$ String fileName = file.getName()[ CD ]
Line_12 $$ String fileName = file.getName()-->Line_12 $$ String fileName = file.getName()[ CD ]
Line_10 $$ ZipEntry file = zip_in.getNextEntry()-->Line_12 $$ String fileName = file.getName()[ FD ]
Line_9 $$ do -->Line_13 $$ System.out.println(fileName)[ CD ]
Line_12 $$ String fileName = file.getName()-->Line_13 $$ System.out.println(fileName)[ FD ]
Line_9 $$ do -->Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))[ CD ]
Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))-->Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))[ CD ]
Line_12 $$ String fileName = file.getName()-->Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))[ FD ]
Line_12 $$ String fileName = file.getName()-->Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))[ FD ]
Line_9 $$ do -->Line_15 $$ long seed = new Date(System.currentTimeMillis()).getTime()[ CD ]
Line_15 $$ long seed = new Date(System.currentTimeMillis()).getTime()-->Line_15 $$ long seed = new Date(System.currentTimeMillis()).getTime()[ CD ]
Line_9 $$ do -->Line_16 $$ String newFileName = Long.toString(seed) + ext[ CD ]
Line_15 $$ long seed = new Date(System.currentTimeMillis()).getTime()-->Line_16 $$ String newFileName = Long.toString(seed) + ext[ FD ]
Line_9 $$ do -->Line_17 $$ FileOutputStream out = new FileOutputStream(newFileName)[ CD ]
Line_9 $$ do -->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ CD ]
Line_9 $$ do -->Line_9 $$ do [ CD ]
Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)-->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ FD ]
Line_7 $$ int slen-->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ FD ]
Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)-->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ CD ]
Line_4 $$ CZipInputStream zip_in = null-->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ FD ]
Line_8 $$ zip_in = new CZipInputStream(new FileInputStream(zipPath), "utf-8")-->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ FD ]
Line_6 $$ byte[] c = new byte[1024]-->Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)[ FD ]
Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)-->Line_18 $$ out.write(c, 0, slen)[ CD ]
Line_17 $$ FileOutputStream out = new FileOutputStream(newFileName)-->Line_18 $$ out.write(c, 0, slen)[ FD ]
Line_6 $$ byte[] c = new byte[1024]-->Line_18 $$ out.write(c, 0, slen)[ FD ]
Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)-->Line_18 $$ out.write(c, 0, slen)[ FD ]
Line_7 $$ int slen-->Line_18 $$ out.write(c, 0, slen)[ FD ]
Line_9 $$ do -->Line_19 $$ out.close()[ CD ]
Line_17 $$ FileOutputStream out = new FileOutputStream(newFileName)-->Line_19 $$ out.close()[ FD ]
Line_4 $$ CZipInputStream zip_in = null-->Line_26 $$ zip_in.close()[ FD ]
Line_8 $$ zip_in = new CZipInputStream(new FileInputStream(zipPath), "utf-8")-->Line_26 $$ zip_in.close()[ FD ]
Line_10 $$ ZipEntry file = zip_in.getNextEntry()-->Line_11 $$ if (file == null)[ FD ]
Line_10 $$ ZipEntry file = zip_in.getNextEntry()-->Line_12 $$ String fileName = file.getName()[ FD ]
Line_12 $$ String fileName = file.getName()-->Line_13 $$ System.out.println(fileName)[ FD ]
Line_12 $$ String fileName = file.getName()-->Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))[ FD ]
Line_12 $$ String fileName = file.getName()-->Line_14 $$ String ext = fileName.substring(fileName.lastIndexOf("."))[ FD ]
Line_15 $$ long seed = new Date(System.currentTimeMillis()).getTime()-->Line_16 $$ String newFileName = Long.toString(seed) + ext[ FD ]
Line_17 $$ FileOutputStream out = new FileOutputStream(newFileName)-->Line_19 $$ out.close()[ FD ]
Line_18 $$ while ((slen = zip_in.read(c, 0, c.length)) != -1) out.write(c, 0, slen)-->Line_18 $$ out.write(c, 0, slen)[ FD ]
