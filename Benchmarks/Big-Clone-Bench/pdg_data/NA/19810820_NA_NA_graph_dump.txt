Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFileChannel(File src, File dst, boolean preserveModificationTime) throws IOException [ CD ]
Line_2 $$ public static void copyFileChannel(File src, File dst, boolean preserveModificationTime) throws IOException -->Line_3 $$ FileChannel inputChannel = null[ CD ]
Line_2 $$ public static void copyFileChannel(File src, File dst, boolean preserveModificationTime) throws IOException -->Line_4 $$ FileChannel outputChannel = null[ CD ]
Line_2 $$ public static void copyFileChannel(File src, File dst, boolean preserveModificationTime) throws IOException -->Line_5 $$ long length = 0[ CD ]
Line_3 $$ FileChannel inputChannel = null-->Line_7 $$ inputChannel = new FileInputStream(src).getChannel()[ FD ]
Line_7 $$ inputChannel = new FileInputStream(src).getChannel()-->Line_7 $$ inputChannel = new FileInputStream(src).getChannel()[ FD ]
Line_7 $$ inputChannel = new FileInputStream(src).getChannel()-->Line_7 $$ inputChannel = new FileInputStream(src).getChannel()[ CD ]
Line_5 $$ long length = 0-->Line_8 $$ length = inputChannel.size()[ FD ]
Line_8 $$ length = inputChannel.size()-->Line_8 $$ length = inputChannel.size()[ FD ]
Line_8 $$ length = inputChannel.size()-->Line_8 $$ length = inputChannel.size()[ CD ]
Line_3 $$ FileChannel inputChannel = null-->Line_8 $$ length = inputChannel.size()[ FD ]
Line_7 $$ inputChannel = new FileInputStream(src).getChannel()-->Line_8 $$ length = inputChannel.size()[ FD ]
Line_4 $$ FileChannel outputChannel = null-->Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()[ FD ]
Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()-->Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()[ FD ]
Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()-->Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()[ CD ]
Line_10 $$ long total = 0-->Line_11 $$ while (total < length) [ FD ]
Line_5 $$ long length = 0-->Line_11 $$ while (total < length) [ FD ]
Line_8 $$ length = inputChannel.size()-->Line_11 $$ while (total < length) [ FD ]
Line_11 $$ while (total < length) -->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ CD ]
Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_10 $$ long total = 0-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ CD ]
Line_3 $$ FileChannel inputChannel = null-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_7 $$ inputChannel = new FileInputStream(src).getChannel()-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_5 $$ long length = 0-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_8 $$ length = inputChannel.size()-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_4 $$ FileChannel outputChannel = null-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()-->Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)[ FD ]
Line_14 $$ if (preserveModificationTime) -->Line_15 $$ dst.setLastModified(src.lastModified())[ CD ]
Line_2 $$ public static void copyFileChannel(File src, File dst, boolean preserveModificationTime) throws IOException -->Line_15 $$ dst.setLastModified(src.lastModified())[ FD ]
Line_2 $$ public static void copyFileChannel(File src, File dst, boolean preserveModificationTime) throws IOException -->Line_15 $$ dst.setLastModified(src.lastModified())[ FD ]
Line_3 $$ FileChannel inputChannel = null-->Line_18 $$ if (inputChannel != null) [ FD ]
Line_7 $$ inputChannel = new FileInputStream(src).getChannel()-->Line_18 $$ if (inputChannel != null) [ FD ]
Line_18 $$ if (inputChannel != null) -->Line_19 $$ inputChannel.close()[ CD ]
Line_3 $$ FileChannel inputChannel = null-->Line_19 $$ inputChannel.close()[ FD ]
Line_7 $$ inputChannel = new FileInputStream(src).getChannel()-->Line_19 $$ inputChannel.close()[ FD ]
Line_4 $$ FileChannel outputChannel = null-->Line_21 $$ if (outputChannel != null) [ FD ]
Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()-->Line_21 $$ if (outputChannel != null) [ FD ]
Line_21 $$ if (outputChannel != null) -->Line_22 $$ outputChannel.close()[ CD ]
Line_4 $$ FileChannel outputChannel = null-->Line_22 $$ outputChannel.close()[ FD ]
Line_9 $$ outputChannel = new FileOutputStream(dst).getChannel()-->Line_22 $$ outputChannel.close()[ FD ]
Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)-->Line_11 $$ while (total < length) [ FD ]
Line_12 $$ total += inputChannel.transferTo(0, length, outputChannel)-->Line_11 $$ while (total < length) [ FD ]
