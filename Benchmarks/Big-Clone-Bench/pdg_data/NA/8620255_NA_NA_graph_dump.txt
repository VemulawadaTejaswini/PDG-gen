Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void sendMessages() [ CD ]
Line_2 $$ private void sendMessages() -->Line_3 $$ Configuration conf = Configuration.getInstance()[ CD ]
Line_3 $$ Configuration conf = Configuration.getInstance()-->Line_3 $$ Configuration conf = Configuration.getInstance()[ CD ]
Line_2 $$ private void sendMessages() -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ CD ]
Line_2 $$ private void sendMessages() -->Line_2 $$ private void sendMessages() [ CD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_5 $$ String msg = null[ CD ]
Line_5 $$ String msg = null-->Line_7 $$ msg = errors.get(i)[ FD ]
Line_7 $$ msg = errors.get(i)-->Line_7 $$ msg = errors.get(i)[ FD ]
Line_7 $$ msg = errors.get(i)-->Line_7 $$ msg = errors.get(i)[ CD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_7 $$ msg = errors.get(i)[ FD ]
Line_8 $$ if (DEBUG)-->Line_8 $$ System.out.println(msg)[ CD ]
Line_5 $$ String msg = null-->Line_8 $$ System.out.println(msg)[ FD ]
Line_7 $$ msg = errors.get(i)-->Line_8 $$ System.out.println(msg)[ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_9 $$ errors.remove(i)[ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_11 $$ if (!conf.getCustomerFeedback())[ CD ]
Line_11 $$ if (!conf.getCustomerFeedback())-->Line_11 $$ if (!conf.getCustomerFeedback())[ CD ]
Line_11 $$ if (!conf.getCustomerFeedback())-->Line_11 $$ if (!conf.getCustomerFeedback())[ CD ]
Line_3 $$ Configuration conf = Configuration.getInstance()-->Line_11 $$ if (!conf.getCustomerFeedback())[ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_12 $$ if (conf.getApproveCustomerFeedback()) [ CD ]
Line_3 $$ Configuration conf = Configuration.getInstance()-->Line_12 $$ if (conf.getApproveCustomerFeedback()) [ FD ]
Line_12 $$ if (conf.getApproveCustomerFeedback()) -->Line_12 $$ if (conf.getApproveCustomerFeedback()) [ CD ]
Line_3 $$ Configuration conf = Configuration.getInstance()-->Line_12 $$ if (conf.getApproveCustomerFeedback()) [ FD ]
Line_12 $$ if (conf.getApproveCustomerFeedback()) -->Line_13 $$ ConfirmCustomerFeedback dialog = new ConfirmCustomerFeedback(JOptionPane.getFrameForComponent(SqlTablet.getInstance()), msg)[ CD ]
Line_12 $$ if (conf.getApproveCustomerFeedback()) -->Line_14 $$ if (dialog.getResult() == ConfirmCustomerFeedback.Result.NO)[ CD ]
Line_13 $$ ConfirmCustomerFeedback dialog = new ConfirmCustomerFeedback(JOptionPane.getFrameForComponent(SqlTablet.getInstance()), msg)-->Line_14 $$ if (dialog.getResult() == ConfirmCustomerFeedback.Result.NO)[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_18 $$ URLConnection urlc = url.openConnection()[ CD ]
Line_17 $$ URL url = new URL("http://www.sqltablet.com/beta/bug.php")-->Line_18 $$ URLConnection urlc = url.openConnection()[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_19 $$ urlc.setDoOutput(true)[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_20 $$ urlc.setDoOutput(true)[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_21 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())[ FD ]
Line_23 $$ String lines[] = msg.split("\n")-->Line_23 $$ String lines[] = msg.split("\n")[ CD ]
Line_5 $$ String msg = null-->Line_23 $$ String lines[] = msg.split("\n")[ FD ]
Line_7 $$ msg = errors.get(i)-->Line_23 $$ String lines[] = msg.split("\n")[ FD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_24 $$ for (int l = 0; l < lines.length; l++) [ CD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_24 $$ for (int l = 0; l < lines.length; l++) [ CD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_24 $$ for (int l = 0; l < lines.length; l++) [ FD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_25 $$ String line = (l > 0 ? "&line" : "line") + l + "="[ CD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")[ CD ]
Line_25 $$ String line = (l > 0 ? "&line" : "line") + l + "="-->Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")[ FD ]
Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")-->Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")[ FD ]
Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")-->Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")[ CD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_27 $$ out.write(line.getBytes())[ CD ]
Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())-->Line_27 $$ out.write(line.getBytes())[ FD ]
Line_25 $$ String line = (l > 0 ? "&line" : "line") + l + "="-->Line_27 $$ out.write(line.getBytes())[ FD ]
Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")-->Line_27 $$ out.write(line.getBytes())[ FD ]
Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())-->Line_29 $$ out.flush()[ FD ]
Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())-->Line_30 $$ out.close()[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_31 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlc.getInputStream()))[ FD ]
Line_33 $$ while ((line = in.readLine()) != null) -->Line_33 $$ while ((line = in.readLine()) != null) [ FD ]
Line_25 $$ String line = (l > 0 ? "&line" : "line") + l + "="-->Line_33 $$ while ((line = in.readLine()) != null) [ FD ]
Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")-->Line_33 $$ while ((line = in.readLine()) != null) [ FD ]
Line_33 $$ while ((line = in.readLine()) != null) -->Line_33 $$ while ((line = in.readLine()) != null) [ CD ]
Line_33 $$ while ((line = in.readLine()) != null) -->Line_34 $$ if (DEBUG)[ CD ]
Line_34 $$ if (DEBUG)-->Line_34 $$ System.out.println("RemoteLogger : " + line + "\n")[ CD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_4 $$ for (int i = 0; i < errors.size(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_7 $$ msg = errors.get(i)[ FD ]
Line_5 $$ String msg = null-->Line_8 $$ System.out.println(msg)[ FD ]
Line_7 $$ msg = errors.get(i)-->Line_8 $$ System.out.println(msg)[ FD ]
Line_4 $$ for (int i = 0; i < errors.size(); i++) -->Line_9 $$ errors.remove(i)[ FD ]
Line_13 $$ ConfirmCustomerFeedback dialog = new ConfirmCustomerFeedback(JOptionPane.getFrameForComponent(SqlTablet.getInstance()), msg)-->Line_14 $$ if (dialog.getResult() == ConfirmCustomerFeedback.Result.NO)[ FD ]
Line_17 $$ URL url = new URL("http://www.sqltablet.com/beta/bug.php")-->Line_18 $$ URLConnection urlc = url.openConnection()[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_19 $$ urlc.setDoOutput(true)[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_20 $$ urlc.setDoOutput(true)[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_21 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())[ FD ]
Line_5 $$ String msg = null-->Line_23 $$ String lines[] = msg.split("\n")[ FD ]
Line_7 $$ msg = errors.get(i)-->Line_23 $$ String lines[] = msg.split("\n")[ FD ]
Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())-->Line_29 $$ out.flush()[ FD ]
Line_22 $$ DataOutputStream out = new DataOutputStream(urlc.getOutputStream())-->Line_30 $$ out.close()[ FD ]
Line_18 $$ URLConnection urlc = url.openConnection()-->Line_31 $$ BufferedReader in = new BufferedReader(new InputStreamReader(urlc.getInputStream()))[ FD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_24 $$ for (int l = 0; l < lines.length; l++) [ FD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_24 $$ for (int l = 0; l < lines.length; l++) [ FD ]
Line_24 $$ for (int l = 0; l < lines.length; l++) -->Line_24 $$ for (int l = 0; l < lines.length; l++) [ FD ]
Line_25 $$ String line = (l > 0 ? "&line" : "line") + l + "="-->Line_27 $$ out.write(line.getBytes())[ FD ]
Line_26 $$ line += URLEncoder.encode(lines[l], "UTF-8")-->Line_27 $$ out.write(line.getBytes())[ FD ]
