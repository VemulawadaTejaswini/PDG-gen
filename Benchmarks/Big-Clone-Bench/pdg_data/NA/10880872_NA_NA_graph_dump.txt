Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public final boolean delete() throws RecordException [ CD ]
Line_2 $$ public final boolean delete() throws RecordException -->Line_3 $$ if (frozen) [ CD ]
Line_2 $$ public final boolean delete() throws RecordException -->Line_6 $$ Connection conn = ConnectionManager.getConnection()[ CD ]
Line_6 $$ Connection conn = ConnectionManager.getConnection()-->Line_6 $$ Connection conn = ConnectionManager.getConnection()[ CD ]
Line_2 $$ public final boolean delete() throws RecordException -->Line_7 $$ LoggableStatement pStat = null[ CD ]
Line_2 $$ public final boolean delete() throws RecordException -->Line_8 $$ Class<? extends Record> actualClass = this.getClass()[ CD ]
Line_8 $$ Class<? extends Record> actualClass = this.getClass()-->Line_8 $$ Class<? extends Record> actualClass = this.getClass()[ CD ]
Line_2 $$ public final boolean delete() throws RecordException -->Line_9 $$ StatementBuilder builder = null[ CD ]
Line_9 $$ StatementBuilder builder = null-->Line_11 $$ builder = new StatementBuilder("delete from " + TableNameResolver.getTableName(actualClass) + " where id = :id")[ FD ]
Line_11 $$ builder = new StatementBuilder("delete from " + TableNameResolver.getTableName(actualClass) + " where id = :id")-->Line_11 $$ builder = new StatementBuilder("delete from " + TableNameResolver.getTableName(actualClass) + " where id = :id")[ FD ]
Line_8 $$ Class<? extends Record> actualClass = this.getClass()-->Line_11 $$ builder = new StatementBuilder("delete from " + TableNameResolver.getTableName(actualClass) + " where id = :id")[ FD ]
Line_12 $$ Field f = FieldHandler.findField(this.getClass(), "id")-->Line_12 $$ Field f = FieldHandler.findField(this.getClass(), "id")[ CD ]
Line_9 $$ StatementBuilder builder = null-->Line_13 $$ builder.set("id", FieldHandler.getValue(f, this))[ FD ]
Line_11 $$ builder = new StatementBuilder("delete from " + TableNameResolver.getTableName(actualClass) + " where id = :id")-->Line_13 $$ builder.set("id", FieldHandler.getValue(f, this))[ FD ]
Line_12 $$ Field f = FieldHandler.findField(this.getClass(), "id")-->Line_13 $$ builder.set("id", FieldHandler.getValue(f, this))[ FD ]
Line_7 $$ LoggableStatement pStat = null-->Line_14 $$ pStat = builder.getPreparedStatement(conn)[ FD ]
Line_14 $$ pStat = builder.getPreparedStatement(conn)-->Line_14 $$ pStat = builder.getPreparedStatement(conn)[ FD ]
Line_14 $$ pStat = builder.getPreparedStatement(conn)-->Line_14 $$ pStat = builder.getPreparedStatement(conn)[ CD ]
Line_9 $$ StatementBuilder builder = null-->Line_14 $$ pStat = builder.getPreparedStatement(conn)[ FD ]
Line_11 $$ builder = new StatementBuilder("delete from " + TableNameResolver.getTableName(actualClass) + " where id = :id")-->Line_14 $$ pStat = builder.getPreparedStatement(conn)[ FD ]
Line_6 $$ Connection conn = ConnectionManager.getConnection()-->Line_14 $$ pStat = builder.getPreparedStatement(conn)[ FD ]
Line_7 $$ LoggableStatement pStat = null-->Line_15 $$ log.log(pStat.getQueryString())[ FD ]
Line_14 $$ pStat = builder.getPreparedStatement(conn)-->Line_15 $$ log.log(pStat.getQueryString())[ FD ]
Line_16 $$ int i = pStat.executeUpdate()-->Line_16 $$ int i = pStat.executeUpdate()[ CD ]
Line_7 $$ LoggableStatement pStat = null-->Line_16 $$ int i = pStat.executeUpdate()[ FD ]
Line_14 $$ pStat = builder.getPreparedStatement(conn)-->Line_16 $$ int i = pStat.executeUpdate()[ FD ]
Line_6 $$ Connection conn = ConnectionManager.getConnection()-->Line_20 $$ conn.rollback()[ FD ]
Line_7 $$ LoggableStatement pStat = null-->Line_27 $$ if (pStat != null) [ FD ]
Line_14 $$ pStat = builder.getPreparedStatement(conn)-->Line_27 $$ if (pStat != null) [ FD ]
Line_27 $$ if (pStat != null) -->Line_28 $$ pStat.close()[ CD ]
Line_7 $$ LoggableStatement pStat = null-->Line_28 $$ pStat.close()[ FD ]
Line_14 $$ pStat = builder.getPreparedStatement(conn)-->Line_28 $$ pStat.close()[ FD ]
Line_6 $$ Connection conn = ConnectionManager.getConnection()-->Line_30 $$ conn.commit()[ FD ]
Line_6 $$ Connection conn = ConnectionManager.getConnection()-->Line_31 $$ conn.close()[ FD ]
