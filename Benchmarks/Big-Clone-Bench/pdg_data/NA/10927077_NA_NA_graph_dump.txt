Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String hash(String message) [ CD ]
Line_2 $$ private String hash(String message) -->Line_3 $$ MessageDigest md = null[ CD ]
Line_3 $$ MessageDigest md = null-->Line_5 $$ md = MessageDigest.getInstance("SHA1")[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA1")-->Line_5 $$ md = MessageDigest.getInstance("SHA1")[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA1")-->Line_5 $$ md = MessageDigest.getInstance("SHA1")[ CD ]
Line_2 $$ private String hash(String message) -->Line_9 $$ String saltString = String.valueOf(12345)[ CD ]
Line_9 $$ String saltString = String.valueOf(12345)-->Line_9 $$ String saltString = String.valueOf(12345)[ CD ]
Line_2 $$ private String hash(String message) -->Line_10 $$ md.update(saltString.getBytes())[ CD ]
Line_3 $$ MessageDigest md = null-->Line_10 $$ md.update(saltString.getBytes())[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA1")-->Line_10 $$ md.update(saltString.getBytes())[ FD ]
Line_9 $$ String saltString = String.valueOf(12345)-->Line_10 $$ md.update(saltString.getBytes())[ FD ]
Line_2 $$ private String hash(String message) -->Line_11 $$ md.update(message.getBytes())[ CD ]
Line_3 $$ MessageDigest md = null-->Line_11 $$ md.update(message.getBytes())[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA1")-->Line_11 $$ md.update(message.getBytes())[ FD ]
Line_2 $$ private String hash(String message) -->Line_11 $$ md.update(message.getBytes())[ FD ]
Line_2 $$ private String hash(String message) -->Line_12 $$ byte[] digestBytes = md.digest()[ CD ]
Line_12 $$ byte[] digestBytes = md.digest()-->Line_12 $$ byte[] digestBytes = md.digest()[ CD ]
Line_3 $$ MessageDigest md = null-->Line_12 $$ byte[] digestBytes = md.digest()[ FD ]
Line_5 $$ md = MessageDigest.getInstance("SHA1")-->Line_12 $$ byte[] digestBytes = md.digest()[ FD ]
Line_2 $$ private String hash(String message) -->Line_13 $$ StringBuffer digestSB = new StringBuffer()[ CD ]
Line_2 $$ private String hash(String message) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ CD ]
Line_2 $$ private String hash(String message) -->Line_2 $$ private String hash(String message) [ CD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ CD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_15 $$ int lowNibble = digestBytes[i] & 0x0f[ CD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_16 $$ int highNibble = (digestBytes[i] >> 4) & 0x0f[ CD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_17 $$ digestSB.append(Integer.toHexString(highNibble))[ CD ]
Line_13 $$ StringBuffer digestSB = new StringBuffer()-->Line_17 $$ digestSB.append(Integer.toHexString(highNibble))[ FD ]
Line_16 $$ int highNibble = (digestBytes[i] >> 4) & 0x0f-->Line_17 $$ digestSB.append(Integer.toHexString(highNibble))[ FD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_18 $$ digestSB.append(Integer.toHexString(lowNibble))[ CD ]
Line_13 $$ StringBuffer digestSB = new StringBuffer()-->Line_18 $$ digestSB.append(Integer.toHexString(lowNibble))[ FD ]
Line_15 $$ int lowNibble = digestBytes[i] & 0x0f-->Line_18 $$ digestSB.append(Integer.toHexString(lowNibble))[ FD ]
Line_2 $$ private String hash(String message) -->Line_20 $$ String digestStr = digestSB.toString().trim()[ CD ]
Line_20 $$ String digestStr = digestSB.toString().trim()-->Line_20 $$ String digestStr = digestSB.toString().trim()[ CD ]
Line_13 $$ StringBuffer digestSB = new StringBuffer()-->Line_20 $$ String digestStr = digestSB.toString().trim()[ FD ]
Line_2 $$ private String hash(String message) -->Line_21 $$ return digestStr[ CD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_14 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_16 $$ int highNibble = (digestBytes[i] >> 4) & 0x0f-->Line_17 $$ digestSB.append(Integer.toHexString(highNibble))[ FD ]
Line_15 $$ int lowNibble = digestBytes[i] & 0x0f-->Line_18 $$ digestSB.append(Integer.toHexString(lowNibble))[ FD ]
