Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException [ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_3 $$ if (format != null && "gif".equals(format.toLowerCase())) [ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_3 $$ if (format != null && "gif".equals(format.toLowerCase())) [ FD ]
Line_3 $$ if (format != null && "gif".equals(format.toLowerCase())) -->Line_4 $$ resize(originalFile, resizedFile, width, 1)[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_4 $$ resize(originalFile, resizedFile, width, 1)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_4 $$ resize(originalFile, resizedFile, width, 1)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_4 $$ resize(originalFile, resizedFile, width, 1)[ FD ]
Line_3 $$ if (format != null && "gif".equals(format.toLowerCase())) -->Line_5 $$ return[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_7 $$ FileInputStream fis = new FileInputStream(originalFile)[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_8 $$ ByteArrayOutputStream byteStream = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_9 $$ int readLength = -1[ CD ]
Line_9 $$ int readLength = -1-->Line_9 $$ int readLength = -1[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_10 $$ int bufferSize = 1024[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_11 $$ byte bytes[] = new byte[bufferSize][ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) [ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException [ CD ]
Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) -->Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) [ FD ]
Line_9 $$ int readLength = -1-->Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) [ FD ]
Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) -->Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) [ CD ]
Line_7 $$ FileInputStream fis = new FileInputStream(originalFile)-->Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) [ FD ]
Line_10 $$ int bufferSize = 1024-->Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) [ FD ]
Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) -->Line_13 $$ byteStream.write(bytes, 0, readLength)[ CD ]
Line_8 $$ ByteArrayOutputStream byteStream = new ByteArrayOutputStream()-->Line_13 $$ byteStream.write(bytes, 0, readLength)[ FD ]
Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) -->Line_13 $$ byteStream.write(bytes, 0, readLength)[ FD ]
Line_9 $$ int readLength = -1-->Line_13 $$ byteStream.write(bytes, 0, readLength)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_15 $$ byte[] in = byteStream.toByteArray()[ CD ]
Line_15 $$ byte[] in = byteStream.toByteArray()-->Line_15 $$ byte[] in = byteStream.toByteArray()[ CD ]
Line_8 $$ ByteArrayOutputStream byteStream = new ByteArrayOutputStream()-->Line_15 $$ byte[] in = byteStream.toByteArray()[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_16 $$ fis.close()[ CD ]
Line_7 $$ FileInputStream fis = new FileInputStream(originalFile)-->Line_16 $$ fis.close()[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_17 $$ byteStream.close()[ CD ]
Line_8 $$ ByteArrayOutputStream byteStream = new ByteArrayOutputStream()-->Line_17 $$ byteStream.close()[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)[ CD ]
Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)-->Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)[ CD ]
Line_15 $$ byte[] in = byteStream.toByteArray()-->Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_19 $$ waitForImage(inputImage)[ CD ]
Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)-->Line_19 $$ waitForImage(inputImage)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_20 $$ int imageWidth = inputImage.getWidth(null)[ CD ]
Line_20 $$ int imageWidth = inputImage.getWidth(null)-->Line_20 $$ int imageWidth = inputImage.getWidth(null)[ CD ]
Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)-->Line_20 $$ int imageWidth = inputImage.getWidth(null)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_21 $$ if (imageWidth < 1)[ CD ]
Line_20 $$ int imageWidth = inputImage.getWidth(null)-->Line_21 $$ if (imageWidth < 1)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_22 $$ int imageHeight = inputImage.getHeight(null)[ CD ]
Line_22 $$ int imageHeight = inputImage.getHeight(null)-->Line_22 $$ int imageHeight = inputImage.getHeight(null)[ CD ]
Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)-->Line_22 $$ int imageHeight = inputImage.getHeight(null)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_23 $$ if (imageHeight < 1)[ CD ]
Line_22 $$ int imageHeight = inputImage.getHeight(null)-->Line_23 $$ if (imageHeight < 1)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_24 $$ int height = -1[ CD ]
Line_24 $$ int height = -1-->Line_24 $$ int height = -1[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_25 $$ double scaleW = (double) imageWidth / (double) width[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_26 $$ double scaleY = (double) imageHeight / (double) height[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_27 $$ if (scaleW >= 0 && scaleY >= 0) [ CD ]
Line_27 $$ if (scaleW >= 0 && scaleY >= 0) -->Line_28 $$ if (scaleW > scaleY) [ CD ]
Line_25 $$ double scaleW = (double) imageWidth / (double) width-->Line_28 $$ if (scaleW > scaleY) [ FD ]
Line_26 $$ double scaleY = (double) imageHeight / (double) height-->Line_28 $$ if (scaleW > scaleY) [ FD ]
Line_28 $$ if (scaleW > scaleY) -->Line_29 $$ height = -1[ CD ]
Line_24 $$ int height = -1-->Line_29 $$ height = -1[ FD ]
Line_29 $$ height = -1-->Line_29 $$ height = -1[ FD ]
Line_29 $$ height = -1-->Line_29 $$ height = -1[ CD ]
Line_28 $$ if (scaleW > scaleY) -->Line_31 $$ width = -1[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_31 $$ width = -1[ FD ]
Line_31 $$ width = -1-->Line_31 $$ width = -1[ FD ]
Line_31 $$ width = -1-->Line_31 $$ width = -1[ CD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ CD ]
Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)-->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ CD ]
Line_18 $$ Image inputImage = Toolkit.getDefaultToolkit().createImage(in)-->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ FD ]
Line_31 $$ width = -1-->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ FD ]
Line_24 $$ int height = -1-->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ FD ]
Line_29 $$ height = -1-->Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_35 $$ checkImage(outputImage)[ CD ]
Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)-->Line_35 $$ checkImage(outputImage)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_36 $$ encode(new FileOutputStream(resizedFile), outputImage, format)[ CD ]
Line_34 $$ Image outputImage = inputImage.getScaledInstance(width, height, java.awt.Image.SCALE_DEFAULT)-->Line_36 $$ encode(new FileOutputStream(resizedFile), outputImage, format)[ FD ]
Line_2 $$ public static void resize(File originalFile, File resizedFile, int width, String format) throws IOException -->Line_36 $$ encode(new FileOutputStream(resizedFile), outputImage, format)[ FD ]
Line_12 $$ while ((readLength = fis.read(bytes, 0, bufferSize)) != -1) -->Line_13 $$ byteStream.write(bytes, 0, readLength)[ FD ]
