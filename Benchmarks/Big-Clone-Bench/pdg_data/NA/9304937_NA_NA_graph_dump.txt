Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encrypt(String passPhrase, String password) [ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_3 $$ String algorithm = "PBEWithMD5AndDES"[ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_4 $$ byte[] salt = new byte[8][ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_5 $$ int iterations = 20[ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_6 $$ byte[] output = new byte[128][ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_7 $$ if (passPhrase == null || "".equals(passPhrase) || password == null || "".equals(password)) [ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_7 $$ if (passPhrase == null || "".equals(passPhrase) || password == null || "".equals(password)) [ FD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_7 $$ if (passPhrase == null || "".equals(passPhrase) || password == null || "".equals(password)) [ FD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_12 $$ KeySpec keySpec = new PBEKeySpec(passPhrase.toCharArray())[ FD ]
Line_13 $$ SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance(algorithm)-->Line_13 $$ SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance(algorithm)[ CD ]
Line_3 $$ String algorithm = "PBEWithMD5AndDES"-->Line_13 $$ SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance(algorithm)[ FD ]
Line_14 $$ SecretKey secretKey = secretKeyFactory.generateSecret(keySpec)-->Line_14 $$ SecretKey secretKey = secretKeyFactory.generateSecret(keySpec)[ CD ]
Line_13 $$ SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance(algorithm)-->Line_14 $$ SecretKey secretKey = secretKeyFactory.generateSecret(keySpec)[ FD ]
Line_12 $$ KeySpec keySpec = new PBEKeySpec(passPhrase.toCharArray())-->Line_14 $$ SecretKey secretKey = secretKeyFactory.generateSecret(keySpec)[ FD ]
Line_15 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_15 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")[ CD ]
Line_15 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_16 $$ messageDigest.update(passPhrase.getBytes())[ FD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_16 $$ messageDigest.update(passPhrase.getBytes())[ FD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_17 $$ byte[] input = new byte[password.length()][ FD ]
Line_17 $$ byte[] input = new byte[password.length()]-->Line_18 $$ input = password.getBytes()[ FD ]
Line_18 $$ input = password.getBytes()-->Line_18 $$ input = password.getBytes()[ FD ]
Line_18 $$ input = password.getBytes()-->Line_18 $$ input = password.getBytes()[ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_18 $$ input = password.getBytes()[ FD ]
Line_15 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_19 $$ messageDigest.update(input)[ FD ]
Line_17 $$ byte[] input = new byte[password.length()]-->Line_19 $$ messageDigest.update(input)[ FD ]
Line_18 $$ input = password.getBytes()-->Line_19 $$ messageDigest.update(input)[ FD ]
Line_20 $$ byte[] digest = messageDigest.digest()-->Line_20 $$ byte[] digest = messageDigest.digest()[ CD ]
Line_15 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_20 $$ byte[] digest = messageDigest.digest()[ FD ]
Line_20 $$ byte[] digest = messageDigest.digest()-->Line_21 $$ System.arraycopy(digest, 0, salt, 0, 8)[ FD ]
Line_4 $$ byte[] salt = new byte[8]-->Line_21 $$ System.arraycopy(digest, 0, salt, 0, 8)[ FD ]
Line_23 $$ Cipher cipher = Cipher.getInstance(algorithm)-->Line_23 $$ Cipher cipher = Cipher.getInstance(algorithm)[ CD ]
Line_3 $$ String algorithm = "PBEWithMD5AndDES"-->Line_23 $$ Cipher cipher = Cipher.getInstance(algorithm)[ FD ]
Line_23 $$ Cipher cipher = Cipher.getInstance(algorithm)-->Line_25 $$ cipher.init(mode, secretKey, algorithmParameterSpec)[ FD ]
Line_24 $$ int mode = Cipher.ENCRYPT_MODE-->Line_25 $$ cipher.init(mode, secretKey, algorithmParameterSpec)[ FD ]
Line_14 $$ SecretKey secretKey = secretKeyFactory.generateSecret(keySpec)-->Line_25 $$ cipher.init(mode, secretKey, algorithmParameterSpec)[ FD ]
Line_22 $$ AlgorithmParameterSpec algorithmParameterSpec = new PBEParameterSpec(salt, iterations)-->Line_25 $$ cipher.init(mode, secretKey, algorithmParameterSpec)[ FD ]
Line_6 $$ byte[] output = new byte[128]-->Line_26 $$ output = cipher.doFinal(input)[ FD ]
Line_26 $$ output = cipher.doFinal(input)-->Line_26 $$ output = cipher.doFinal(input)[ FD ]
Line_26 $$ output = cipher.doFinal(input)-->Line_26 $$ output = cipher.doFinal(input)[ CD ]
Line_23 $$ Cipher cipher = Cipher.getInstance(algorithm)-->Line_26 $$ output = cipher.doFinal(input)[ FD ]
Line_17 $$ byte[] input = new byte[password.length()]-->Line_26 $$ output = cipher.doFinal(input)[ FD ]
Line_18 $$ input = password.getBytes()-->Line_26 $$ output = cipher.doFinal(input)[ FD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_42 $$ StringBuffer result = new StringBuffer()[ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_2 $$ public static String encrypt(String passPhrase, String password) [ CD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ CD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_44 $$ result.append(Byte.toString(output[i]))[ CD ]
Line_42 $$ StringBuffer result = new StringBuffer()-->Line_44 $$ result.append(Byte.toString(output[i]))[ FD ]
Line_2 $$ public static String encrypt(String passPhrase, String password) -->Line_46 $$ return result.toString()[ CD ]
Line_46 $$ return result.toString()-->Line_46 $$ return result.toString()[ CD ]
Line_42 $$ StringBuffer result = new StringBuffer()-->Line_46 $$ return result.toString()[ FD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ FD ]
Line_43 $$ for (int i = 0; i < output.length; i++) -->Line_43 $$ for (int i = 0; i < output.length; i++) [ FD ]
