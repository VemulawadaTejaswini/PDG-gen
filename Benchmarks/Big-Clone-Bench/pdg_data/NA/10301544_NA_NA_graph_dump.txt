Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Set<Class<?>> getClasses(String pack) [ CD ]
Line_2 $$ public static Set<Class<?>> getClasses(String pack) -->Line_3 $$ Set<Class<?>> classes = new LinkedHashSet<Class<?>>()[ CD ]
Line_2 $$ public static Set<Class<?>> getClasses(String pack) -->Line_4 $$ boolean recursive = true[ CD ]
Line_2 $$ public static Set<Class<?>> getClasses(String pack) -->Line_5 $$ String packageName = pack[ CD ]
Line_2 $$ public static Set<Class<?>> getClasses(String pack) -->Line_6 $$ String packageDirName = packageName.replace('.', '/')[ CD ]
Line_6 $$ String packageDirName = packageName.replace('.', '/')-->Line_6 $$ String packageDirName = packageName.replace('.', '/')[ CD ]
Line_5 $$ String packageName = pack-->Line_6 $$ String packageDirName = packageName.replace('.', '/')[ FD ]
Line_2 $$ public static Set<Class<?>> getClasses(String pack) -->Line_7 $$ Enumeration<URL> dirs[ CD ]
Line_7 $$ Enumeration<URL> dirs-->Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)[ FD ]
Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)-->Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)[ FD ]
Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)-->Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)[ CD ]
Line_6 $$ String packageDirName = packageName.replace('.', '/')-->Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)[ FD ]
Line_10 $$ while (dirs.hasMoreElements()) -->Line_10 $$ while (dirs.hasMoreElements()) [ CD ]
Line_7 $$ Enumeration<URL> dirs-->Line_10 $$ while (dirs.hasMoreElements()) [ FD ]
Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)-->Line_10 $$ while (dirs.hasMoreElements()) [ FD ]
Line_10 $$ while (dirs.hasMoreElements()) -->Line_11 $$ URL url = dirs.nextElement()[ CD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_11 $$ URL url = dirs.nextElement()[ CD ]
Line_7 $$ Enumeration<URL> dirs-->Line_11 $$ URL url = dirs.nextElement()[ FD ]
Line_9 $$ dirs = Thread.currentThread().getContextClassLoader().getResources(packageDirName)-->Line_11 $$ URL url = dirs.nextElement()[ FD ]
Line_10 $$ while (dirs.hasMoreElements()) -->Line_12 $$ String protocol = url.getProtocol()[ CD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_12 $$ String protocol = url.getProtocol()[ CD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_12 $$ String protocol = url.getProtocol()[ FD ]
Line_10 $$ while (dirs.hasMoreElements()) -->Line_13 $$ if ("file".equals(protocol)) [ CD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_13 $$ if ("file".equals(protocol)) [ FD ]
Line_13 $$ if ("file".equals(protocol)) -->Line_13 $$ if ("file".equals(protocol)) [ CD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_13 $$ if ("file".equals(protocol)) [ FD ]
Line_13 $$ if ("file".equals(protocol)) -->Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")[ CD ]
Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")-->Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")[ CD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")[ FD ]
Line_13 $$ if ("file".equals(protocol)) -->Line_15 $$ findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes)[ CD ]
Line_5 $$ String packageName = pack-->Line_15 $$ findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes)[ FD ]
Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")-->Line_15 $$ findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes)[ FD ]
Line_4 $$ boolean recursive = true-->Line_15 $$ findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes)[ FD ]
Line_3 $$ Set<Class<?>> classes = new LinkedHashSet<Class<?>>()-->Line_15 $$ findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes)[ FD ]
Line_13 $$ if ("file".equals(protocol)) -->Line_16 $$ if ("jar".equals(protocol)) [ CD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_16 $$ if ("jar".equals(protocol)) [ FD ]
Line_16 $$ if ("jar".equals(protocol)) -->Line_16 $$ if ("jar".equals(protocol)) [ CD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_16 $$ if ("jar".equals(protocol)) [ FD ]
Line_16 $$ if ("jar".equals(protocol)) -->Line_17 $$ JarFile jar[ CD ]
Line_17 $$ JarFile jar-->Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()[ CD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_20 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_20 $$ Enumeration<JarEntry> entries = jar.entries()[ CD ]
Line_17 $$ JarFile jar-->Line_20 $$ Enumeration<JarEntry> entries = jar.entries()[ FD ]
Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_20 $$ Enumeration<JarEntry> entries = jar.entries()[ FD ]
Line_21 $$ while (entries.hasMoreElements()) -->Line_21 $$ while (entries.hasMoreElements()) [ CD ]
Line_20 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_21 $$ while (entries.hasMoreElements()) [ FD ]
Line_21 $$ while (entries.hasMoreElements()) -->Line_22 $$ JarEntry entry = entries.nextElement()[ CD ]
Line_22 $$ JarEntry entry = entries.nextElement()-->Line_22 $$ JarEntry entry = entries.nextElement()[ CD ]
Line_20 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_22 $$ JarEntry entry = entries.nextElement()[ FD ]
Line_21 $$ while (entries.hasMoreElements()) -->Line_23 $$ String name = entry.getName()[ CD ]
Line_23 $$ String name = entry.getName()-->Line_23 $$ String name = entry.getName()[ CD ]
Line_22 $$ JarEntry entry = entries.nextElement()-->Line_23 $$ String name = entry.getName()[ FD ]
Line_21 $$ while (entries.hasMoreElements()) -->Line_24 $$ if (name.charAt(0) == '/') [ CD ]
Line_23 $$ String name = entry.getName()-->Line_24 $$ if (name.charAt(0) == '/') [ FD ]
Line_24 $$ if (name.charAt(0) == '/') -->Line_25 $$ name = name.substring(1)[ CD ]
Line_23 $$ String name = entry.getName()-->Line_25 $$ name = name.substring(1)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_25 $$ name = name.substring(1)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_25 $$ name = name.substring(1)[ CD ]
Line_23 $$ String name = entry.getName()-->Line_25 $$ name = name.substring(1)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_25 $$ name = name.substring(1)[ FD ]
Line_21 $$ while (entries.hasMoreElements()) -->Line_27 $$ if (name.startsWith(packageDirName)) [ CD ]
Line_23 $$ String name = entry.getName()-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_25 $$ name = name.substring(1)-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_6 $$ String packageDirName = packageName.replace('.', '/')-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_27 $$ if (name.startsWith(packageDirName)) -->Line_27 $$ if (name.startsWith(packageDirName)) [ CD ]
Line_23 $$ String name = entry.getName()-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_25 $$ name = name.substring(1)-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_6 $$ String packageDirName = packageName.replace('.', '/')-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_27 $$ if (name.startsWith(packageDirName)) -->Line_28 $$ int idx = name.lastIndexOf('/')[ CD ]
Line_28 $$ int idx = name.lastIndexOf('/')-->Line_28 $$ int idx = name.lastIndexOf('/')[ CD ]
Line_23 $$ String name = entry.getName()-->Line_28 $$ int idx = name.lastIndexOf('/')[ FD ]
Line_25 $$ name = name.substring(1)-->Line_28 $$ int idx = name.lastIndexOf('/')[ FD ]
Line_27 $$ if (name.startsWith(packageDirName)) -->Line_29 $$ if (idx != -1) [ CD ]
Line_28 $$ int idx = name.lastIndexOf('/')-->Line_29 $$ if (idx != -1) [ FD ]
Line_29 $$ if (idx != -1) -->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ CD ]
Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_5 $$ String packageName = pack-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ CD ]
Line_23 $$ String name = entry.getName()-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_25 $$ name = name.substring(1)-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_28 $$ int idx = name.lastIndexOf('/')-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_27 $$ if (name.startsWith(packageDirName)) -->Line_32 $$ if ((idx != -1) || recursive) [ CD ]
Line_4 $$ boolean recursive = true-->Line_32 $$ if ((idx != -1) || recursive) [ FD ]
Line_32 $$ if ((idx != -1) || recursive) -->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ CD ]
Line_23 $$ String name = entry.getName()-->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ FD ]
Line_25 $$ name = name.substring(1)-->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ FD ]
Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) -->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ CD ]
Line_22 $$ JarEntry entry = entries.nextElement()-->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ FD ]
Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) -->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ CD ]
Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ CD ]
Line_23 $$ String name = entry.getName()-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_5 $$ String packageName = pack-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_23 $$ String name = entry.getName()-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_3 $$ Set<Class<?>> classes = new LinkedHashSet<Class<?>>()-->Line_36 $$ classes.add(Class.forName(packageName + '.' + className))[ FD ]
Line_2 $$ public static Set<Class<?>> getClasses(String pack) -->Line_54 $$ return classes[ CD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_12 $$ String protocol = url.getProtocol()[ FD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_13 $$ if ("file".equals(protocol)) [ FD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_13 $$ if ("file".equals(protocol)) [ FD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")[ FD ]
Line_14 $$ String filePath = URLDecoder.decode(url.getFile(), "UTF-8")-->Line_15 $$ findAndAddClassesInPackageByFile(packageName, filePath, recursive, classes)[ FD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_16 $$ if ("jar".equals(protocol)) [ FD ]
Line_12 $$ String protocol = url.getProtocol()-->Line_16 $$ if ("jar".equals(protocol)) [ FD ]
Line_11 $$ URL url = dirs.nextElement()-->Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_17 $$ JarFile jar-->Line_20 $$ Enumeration<JarEntry> entries = jar.entries()[ FD ]
Line_19 $$ jar = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_20 $$ Enumeration<JarEntry> entries = jar.entries()[ FD ]
Line_22 $$ JarEntry entry = entries.nextElement()-->Line_23 $$ String name = entry.getName()[ FD ]
Line_23 $$ String name = entry.getName()-->Line_24 $$ if (name.charAt(0) == '/') [ FD ]
Line_25 $$ name = name.substring(1)-->Line_24 $$ if (name.charAt(0) == '/') [ FD ]
Line_23 $$ String name = entry.getName()-->Line_25 $$ name = name.substring(1)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_25 $$ name = name.substring(1)[ FD ]
Line_23 $$ String name = entry.getName()-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_25 $$ name = name.substring(1)-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_23 $$ String name = entry.getName()-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_25 $$ name = name.substring(1)-->Line_27 $$ if (name.startsWith(packageDirName)) [ FD ]
Line_23 $$ String name = entry.getName()-->Line_28 $$ int idx = name.lastIndexOf('/')[ FD ]
Line_25 $$ name = name.substring(1)-->Line_28 $$ int idx = name.lastIndexOf('/')[ FD ]
Line_28 $$ int idx = name.lastIndexOf('/')-->Line_29 $$ if (idx != -1) [ FD ]
Line_23 $$ String name = entry.getName()-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_25 $$ name = name.substring(1)-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_28 $$ int idx = name.lastIndexOf('/')-->Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')[ FD ]
Line_23 $$ String name = entry.getName()-->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ FD ]
Line_25 $$ name = name.substring(1)-->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ FD ]
Line_22 $$ JarEntry entry = entries.nextElement()-->Line_33 $$ if (name.endsWith(".class") && !entry.isDirectory()) [ FD ]
Line_23 $$ String name = entry.getName()-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_30 $$ packageName = name.substring(0, idx).replace('/', '.')-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_23 $$ String name = entry.getName()-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
Line_25 $$ name = name.substring(1)-->Line_34 $$ String className = name.substring(packageName.length() + 1, name.length() - 6)[ FD ]
