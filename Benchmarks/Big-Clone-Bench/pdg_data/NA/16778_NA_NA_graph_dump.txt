Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException [ CD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_3 $$ String url = request.getParameter(URL_PARAM_NAME)[ CD ]
Line_3 $$ String url = request.getParameter(URL_PARAM_NAME)-->Line_3 $$ String url = request.getParameter(URL_PARAM_NAME)[ CD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_3 $$ String url = request.getParameter(URL_PARAM_NAME)[ FD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_4 $$ if (StringUtils.isEmpty(url)) [ CD ]
Line_3 $$ String url = request.getParameter(URL_PARAM_NAME)-->Line_4 $$ if (StringUtils.isEmpty(url)) [ FD ]
Line_4 $$ if (StringUtils.isEmpty(url)) -->Line_4 $$ if (StringUtils.isEmpty(url)) [ CD ]
Line_3 $$ String url = request.getParameter(URL_PARAM_NAME)-->Line_4 $$ if (StringUtils.isEmpty(url)) [ FD ]
Line_4 $$ if (StringUtils.isEmpty(url)) -->Line_5 $$ log.error("url parameter not provided.")[ CD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_8 $$ Reader reader[ CD ]
Line_8 $$ Reader reader-->Line_10 $$ reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()))[ FD ]
Line_10 $$ reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()))-->Line_10 $$ reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()))[ FD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_18 $$ DataTable dataTable = null[ CD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_19 $$ ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request)[ CD ]
Line_19 $$ ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request)-->Line_19 $$ ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request)[ CD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_19 $$ ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request)[ FD ]
Line_18 $$ DataTable dataTable = null-->Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)[ FD ]
Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)-->Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)[ FD ]
Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)-->Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)[ CD ]
Line_8 $$ Reader reader-->Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)[ FD ]
Line_10 $$ reader = new BufferedReader(new InputStreamReader(new URL(url).openStream()))-->Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)[ FD ]
Line_19 $$ ULocale requestLocale = DataSourceHelper.getLocaleFromRequest(request)-->Line_21 $$ dataTable = CsvDataSourceHelper.read(reader, null, true, requestLocale)[ FD ]
Line_2 $$ public DataTable generateDataTable(Query query, HttpServletRequest request) throws DataSourceException -->Line_26 $$ return dataTable[ CD ]
