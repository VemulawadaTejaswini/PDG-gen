Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception [ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_3 $$ URL url = new URL(tsaURL)[ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_4 $$ URLConnection tsaConnection[ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_5 $$ tsaConnection = (URLConnection) url.openConnection()[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_5 $$ tsaConnection = (URLConnection) url.openConnection()[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_5 $$ tsaConnection = (URLConnection) url.openConnection()[ FD ]
Line_3 $$ URL url = new URL(tsaURL)-->Line_5 $$ tsaConnection = (URLConnection) url.openConnection()[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_6 $$ tsaConnection.setDoInput(true)[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_6 $$ tsaConnection.setDoInput(true)[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_6 $$ tsaConnection.setDoInput(true)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_7 $$ tsaConnection.setDoOutput(true)[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_7 $$ tsaConnection.setDoOutput(true)[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_7 $$ tsaConnection.setDoOutput(true)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_8 $$ tsaConnection.setUseCaches(false)[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_8 $$ tsaConnection.setUseCaches(false)[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_8 $$ tsaConnection.setUseCaches(false)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_9 $$ tsaConnection.setRequestProperty("Content-Type", "application/timestamp-query")[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_9 $$ tsaConnection.setRequestProperty("Content-Type", "application/timestamp-query")[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_9 $$ tsaConnection.setRequestProperty("Content-Type", "application/timestamp-query")[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_10 $$ tsaConnection.setRequestProperty("Content-Transfer-Encoding", "binary")[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_10 $$ tsaConnection.setRequestProperty("Content-Transfer-Encoding", "binary")[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_10 $$ tsaConnection.setRequestProperty("Content-Transfer-Encoding", "binary")[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_11 $$ if ((tsaUsername != null) && !tsaUsername.equals("")) [ CD ]
Line_11 $$ if ((tsaUsername != null) && !tsaUsername.equals("")) -->Line_11 $$ if ((tsaUsername != null) && !tsaUsername.equals("")) [ CD ]
Line_11 $$ if ((tsaUsername != null) && !tsaUsername.equals("")) -->Line_12 $$ String userPassword = tsaUsername + ":" + tsaPassword[ CD ]
Line_11 $$ if ((tsaUsername != null) && !tsaUsername.equals("")) -->Line_13 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + Base64.encodeBytes(userPassword.getBytes()))[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_13 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + Base64.encodeBytes(userPassword.getBytes()))[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_13 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + Base64.encodeBytes(userPassword.getBytes()))[ FD ]
Line_12 $$ String userPassword = tsaUsername + ":" + tsaPassword-->Line_13 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + Base64.encodeBytes(userPassword.getBytes()))[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_15 $$ OutputStream out = tsaConnection.getOutputStream()[ CD ]
Line_15 $$ OutputStream out = tsaConnection.getOutputStream()-->Line_15 $$ OutputStream out = tsaConnection.getOutputStream()[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_15 $$ OutputStream out = tsaConnection.getOutputStream()[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_15 $$ OutputStream out = tsaConnection.getOutputStream()[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_16 $$ out.write(requestBytes)[ CD ]
Line_15 $$ OutputStream out = tsaConnection.getOutputStream()-->Line_16 $$ out.write(requestBytes)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_16 $$ out.write(requestBytes)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_17 $$ out.close()[ CD ]
Line_15 $$ OutputStream out = tsaConnection.getOutputStream()-->Line_17 $$ out.close()[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_18 $$ InputStream inp = tsaConnection.getInputStream()[ CD ]
Line_18 $$ InputStream inp = tsaConnection.getInputStream()-->Line_18 $$ InputStream inp = tsaConnection.getInputStream()[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_18 $$ InputStream inp = tsaConnection.getInputStream()[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_18 $$ InputStream inp = tsaConnection.getInputStream()[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_19 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_20 $$ byte[] buffer = new byte[1024][ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_21 $$ int bytesRead = 0[ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception [ CD ]
Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_21 $$ int bytesRead = 0-->Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ CD ]
Line_18 $$ InputStream inp = tsaConnection.getInputStream()-->Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_20 $$ byte[] buffer = new byte[1024]-->Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_23 $$ baos.write(buffer, 0, bytesRead)[ CD ]
Line_19 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_23 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_20 $$ byte[] buffer = new byte[1024]-->Line_23 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_23 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_21 $$ int bytesRead = 0-->Line_23 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_25 $$ byte[] respBytes = baos.toByteArray()[ CD ]
Line_25 $$ byte[] respBytes = baos.toByteArray()-->Line_25 $$ byte[] respBytes = baos.toByteArray()[ CD ]
Line_19 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_25 $$ byte[] respBytes = baos.toByteArray()[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_26 $$ String encoding = tsaConnection.getContentEncoding()[ CD ]
Line_26 $$ String encoding = tsaConnection.getContentEncoding()-->Line_26 $$ String encoding = tsaConnection.getContentEncoding()[ CD ]
Line_4 $$ URLConnection tsaConnection-->Line_26 $$ String encoding = tsaConnection.getContentEncoding()[ FD ]
Line_5 $$ tsaConnection = (URLConnection) url.openConnection()-->Line_26 $$ String encoding = tsaConnection.getContentEncoding()[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_27 $$ if (encoding != null && encoding.equalsIgnoreCase("base64")) [ CD ]
Line_26 $$ String encoding = tsaConnection.getContentEncoding()-->Line_27 $$ if (encoding != null && encoding.equalsIgnoreCase("base64")) [ FD ]
Line_27 $$ if (encoding != null && encoding.equalsIgnoreCase("base64")) -->Line_28 $$ respBytes = Base64.decode(new String(respBytes))[ CD ]
Line_25 $$ byte[] respBytes = baos.toByteArray()-->Line_28 $$ respBytes = Base64.decode(new String(respBytes))[ FD ]
Line_28 $$ respBytes = Base64.decode(new String(respBytes))-->Line_28 $$ respBytes = Base64.decode(new String(respBytes))[ FD ]
Line_28 $$ respBytes = Base64.decode(new String(respBytes))-->Line_28 $$ respBytes = Base64.decode(new String(respBytes))[ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws Exception -->Line_30 $$ return respBytes[ CD ]
Line_22 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_23 $$ baos.write(buffer, 0, bytesRead)[ FD ]
