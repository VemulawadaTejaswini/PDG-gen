Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void assignListeners() [ CD ]
Line_2 $$ protected void assignListeners() -->Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() -->Line_5 $$ refreshInfo()[ CD ]
Line_2 $$ protected void assignListeners() -->Line_8 $$ saveButton.addActionListener(new ActionListener() [ CD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")[ CD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_11 $$ fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter(".grp", "Group Files"))[ CD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_11 $$ fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter(".grp", "Group Files"))[ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)[ CD ]
Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)-->Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)[ CD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)[ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_13 $$ if (outcome == JFileChooser.APPROVE_OPTION) [ CD ]
Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)-->Line_13 $$ if (outcome == JFileChooser.APPROVE_OPTION) [ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_14 $$ assert (fileDialog.getCurrentDirectory() != null)[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_15 $$ assert (fileDialog.getSelectedFile() != null)[ FD ]
Line_13 $$ if (outcome == JFileChooser.APPROVE_OPTION) -->Line_16 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ CD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_16 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_16 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ FD ]
Line_18 $$ PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(fileName)))-->Line_19 $$ ReaderWriterGroup.write(out, writer)[ FD ]
Line_18 $$ PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(fileName)))-->Line_21 $$ out.close()[ FD ]
Line_13 $$ if (outcome == JFileChooser.APPROVE_OPTION) -->Line_26 $$ if (outcome == JFileChooser.CANCEL_OPTION) [ CD ]
Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)-->Line_26 $$ if (outcome == JFileChooser.CANCEL_OPTION) [ FD ]
Line_2 $$ protected void assignListeners() -->Line_30 $$ loadButton.addActionListener(new ActionListener() [ CD ]
Line_30 $$ loadButton.addActionListener(new ActionListener() -->Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")[ CD ]
Line_30 $$ loadButton.addActionListener(new ActionListener() -->Line_33 $$ fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter(".grp", "Group Files"))[ CD ]
Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_33 $$ fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter(".grp", "Group Files"))[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_33 $$ fileDialog.setFileFilter(ReaderData.mkExtensionFileFilter(".grp", "Group Files"))[ FD ]
Line_30 $$ loadButton.addActionListener(new ActionListener() -->Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)[ CD ]
Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)-->Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)[ CD ]
Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)[ FD ]
Line_30 $$ loadButton.addActionListener(new ActionListener() -->Line_35 $$ if (outcome == JFileChooser.APPROVE_OPTION) [ CD ]
Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)-->Line_35 $$ if (outcome == JFileChooser.APPROVE_OPTION) [ FD ]
Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)-->Line_35 $$ if (outcome == JFileChooser.APPROVE_OPTION) [ FD ]
Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_36 $$ assert (fileDialog.getCurrentDirectory() != null)[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_36 $$ assert (fileDialog.getCurrentDirectory() != null)[ FD ]
Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_37 $$ assert (fileDialog.getSelectedFile() != null)[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_37 $$ assert (fileDialog.getSelectedFile() != null)[ FD ]
Line_35 $$ if (outcome == JFileChooser.APPROVE_OPTION) -->Line_38 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ CD ]
Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_38 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_38 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ FD ]
Line_32 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_38 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ FD ]
Line_10 $$ JFileChooser fileDialog = new JFileChooser(".")-->Line_38 $$ String fileName = fileDialog.getCurrentDirectory().toString() + File.separator + fileDialog.getSelectedFile().getName()[ FD ]
Line_35 $$ if (outcome == JFileChooser.APPROVE_OPTION) -->Line_39 $$ BufferedReader fileReader = null[ CD ]
Line_39 $$ BufferedReader fileReader = null-->Line_41 $$ fileReader = new BufferedReader(new FileReader(fileName))[ FD ]
Line_41 $$ fileReader = new BufferedReader(new FileReader(fileName))-->Line_41 $$ fileReader = new BufferedReader(new FileReader(fileName))[ FD ]
Line_39 $$ BufferedReader fileReader = null-->Line_42 $$ ReaderWriterGroup.read(fileReader, writer)[ FD ]
Line_41 $$ fileReader = new BufferedReader(new FileReader(fileName))-->Line_42 $$ ReaderWriterGroup.read(fileReader, writer)[ FD ]
Line_39 $$ BufferedReader fileReader = null-->Line_43 $$ fileReader.close()[ FD ]
Line_41 $$ fileReader = new BufferedReader(new FileReader(fileName))-->Line_43 $$ fileReader.close()[ FD ]
Line_35 $$ if (outcome == JFileChooser.APPROVE_OPTION) -->Line_48 $$ if (outcome == JFileChooser.CANCEL_OPTION) [ CD ]
Line_34 $$ int outcome = fileDialog.showOpenDialog((Frame) null)-->Line_48 $$ if (outcome == JFileChooser.CANCEL_OPTION) [ FD ]
Line_12 $$ int outcome = fileDialog.showSaveDialog((Frame) null)-->Line_48 $$ if (outcome == JFileChooser.CANCEL_OPTION) [ FD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_54 $$ int[] indices = groupsList.getSelectedIndices()[ CD ]
Line_54 $$ int[] indices = groupsList.getSelectedIndices()-->Line_54 $$ int[] indices = groupsList.getSelectedIndices()[ CD ]
Line_56 $$ Group group = getGroupFromListIndex(index)-->Line_56 $$ Group group = getGroupFromListIndex(index)[ CD ]
Line_55 $$ for (int index : indices) -->Line_56 $$ Group group = getGroupFromListIndex(index)[ FD ]
Line_56 $$ Group group = getGroupFromListIndex(index)-->Line_57 $$ if (group != null) [ FD ]
Line_57 $$ if (group != null) -->Line_58 $$ if (event.getSource() instanceof JComboBox) [ CD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_58 $$ if (event.getSource() instanceof JComboBox) [ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_58 $$ if (event.getSource() instanceof JComboBox) [ FD ]
Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() -->Line_58 $$ if (event.getSource() instanceof JComboBox) [ FD ]
Line_58 $$ if (event.getSource() instanceof JComboBox) -->Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()[ CD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()[ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()[ FD ]
Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() -->Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()[ FD ]
Line_58 $$ if (event.getSource() instanceof JComboBox) -->Line_60 $$ if (eventSource == colorComboBox) [ CD ]
Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()-->Line_60 $$ if (eventSource == colorComboBox) [ FD ]
Line_60 $$ if (eventSource == colorComboBox) -->Line_61 $$ Color color = colorComboBox.getSelectedColor()[ CD ]
Line_61 $$ Color color = colorComboBox.getSelectedColor()-->Line_61 $$ Color color = colorComboBox.getSelectedColor()[ CD ]
Line_60 $$ if (eventSource == colorComboBox) -->Line_63 $$ group.setColor(color)[ CD ]
Line_56 $$ Group group = getGroupFromListIndex(index)-->Line_63 $$ group.setColor(color)[ FD ]
Line_61 $$ Color color = colorComboBox.getSelectedColor()-->Line_63 $$ group.setColor(color)[ FD ]
Line_60 $$ if (eventSource == colorComboBox) -->Line_64 $$ shapeComboBox.setColor(color)[ CD ]
Line_61 $$ Color color = colorComboBox.getSelectedColor()-->Line_64 $$ shapeComboBox.setColor(color)[ FD ]
Line_60 $$ if (eventSource == colorComboBox) -->Line_65 $$ if (eventSource == shapeComboBox) [ CD ]
Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()-->Line_65 $$ if (eventSource == shapeComboBox) [ FD ]
Line_65 $$ if (eventSource == shapeComboBox) -->Line_66 $$ Shape shape = shapeComboBox.getSelectedShape()[ CD ]
Line_66 $$ Shape shape = shapeComboBox.getSelectedShape()-->Line_66 $$ Shape shape = shapeComboBox.getSelectedShape()[ CD ]
Line_65 $$ if (eventSource == shapeComboBox) -->Line_68 $$ group.setShape(shape)[ CD ]
Line_56 $$ Group group = getGroupFromListIndex(index)-->Line_68 $$ group.setShape(shape)[ FD ]
Line_66 $$ Shape shape = shapeComboBox.getSelectedShape()-->Line_68 $$ group.setShape(shape)[ FD ]
Line_58 $$ if (event.getSource() instanceof JComboBox) -->Line_70 $$ if (event.getSource() instanceof JCheckBox) [ CD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_70 $$ if (event.getSource() instanceof JCheckBox) [ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_70 $$ if (event.getSource() instanceof JCheckBox) [ FD ]
Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() -->Line_70 $$ if (event.getSource() instanceof JCheckBox) [ FD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_71 $$ JCheckBox eventSource = (JCheckBox) event.getSource()[ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_71 $$ JCheckBox eventSource = (JCheckBox) event.getSource()[ FD ]
Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() -->Line_71 $$ JCheckBox eventSource = (JCheckBox) event.getSource()[ FD ]
Line_70 $$ if (event.getSource() instanceof JCheckBox) -->Line_72 $$ if (eventSource == showGroupCheckBox) [ CD ]
Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()-->Line_72 $$ if (eventSource == showGroupCheckBox) [ FD ]
Line_72 $$ if (eventSource == showGroupCheckBox) -->Line_73 $$ group.visible = showGroupCheckBox.isSelected()[ CD ]
Line_73 $$ group.visible = showGroupCheckBox.isSelected()-->Line_73 $$ group.visible = showGroupCheckBox.isSelected()[ CD ]
Line_72 $$ if (eventSource == showGroupCheckBox) -->Line_74 $$ if (eventSource == showGraphicInfoCheckBox) [ CD ]
Line_59 $$ JComboBox eventSource = (JComboBox) event.getSource()-->Line_74 $$ if (eventSource == showGraphicInfoCheckBox) [ FD ]
Line_74 $$ if (eventSource == showGraphicInfoCheckBox) -->Line_75 $$ group.info = showGraphicInfoCheckBox.isSelected()[ CD ]
Line_75 $$ group.info = showGraphicInfoCheckBox.isSelected()-->Line_75 $$ group.info = showGraphicInfoCheckBox.isSelected()[ CD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_80 $$ graph.notifyAboutGroupsChange(null)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_83 $$ colorComboBox.addItemListener(propItemListener)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_84 $$ shapeComboBox.addItemListener(propItemListener)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_85 $$ showGroupCheckBox.addItemListener(propItemListener)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_86 $$ showGraphicInfoCheckBox.addItemListener(propItemListener)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_87 $$ showGroupfreeNodesCheckBox.addItemListener(new ItemListener() [ CD ]
Line_87 $$ showGroupfreeNodesCheckBox.addItemListener(new ItemListener() -->Line_89 $$ graph.getGroup(0).visible = showGroupfreeNodesCheckBox.isSelected()[ CD ]
Line_89 $$ graph.getGroup(0).visible = showGroupfreeNodesCheckBox.isSelected()-->Line_89 $$ graph.getGroup(0).visible = showGroupfreeNodesCheckBox.isSelected()[ CD ]
Line_87 $$ showGroupfreeNodesCheckBox.addItemListener(new ItemListener() -->Line_90 $$ graph.notifyAboutGroupsChange(null)[ CD ]
Line_93 $$ ActionListener propActionListener = new ActionListener() -->Line_95 $$ JButton botton = (JButton) event.getSource()[ CD ]
Line_93 $$ ActionListener propActionListener = new ActionListener() -->Line_95 $$ JButton botton = (JButton) event.getSource()[ FD ]
Line_87 $$ showGroupfreeNodesCheckBox.addItemListener(new ItemListener() -->Line_95 $$ JButton botton = (JButton) event.getSource()[ FD ]
Line_52 $$ ItemListener propItemListener = new ItemListener() -->Line_95 $$ JButton botton = (JButton) event.getSource()[ FD ]
Line_8 $$ saveButton.addActionListener(new ActionListener() -->Line_95 $$ JButton botton = (JButton) event.getSource()[ FD ]
Line_3 $$ groupsList.addListSelectionListener(new ListSelectionListener() -->Line_95 $$ JButton botton = (JButton) event.getSource()[ FD ]
Line_93 $$ ActionListener propActionListener = new ActionListener() -->Line_96 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())[ CD ]
Line_96 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())-->Line_96 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())[ CD ]
Line_93 $$ ActionListener propActionListener = new ActionListener() -->Line_97 $$ if (group != null) [ CD ]
Line_96 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())-->Line_97 $$ if (group != null) [ FD ]
Line_56 $$ Group group = getGroupFromListIndex(index)-->Line_97 $$ if (group != null) [ FD ]
Line_95 $$ JButton botton = (JButton) event.getSource()-->Line_99 $$ if (botton == showLabelsButton) [ FD ]
Line_99 $$ if (botton == showLabelsButton) -->Line_100 $$ graphVertex.setShowName(NameVisibility.Priority.GROUPS, true)[ CD ]
Line_98 $$ for (GraphVertex graphVertex : group) -->Line_100 $$ graphVertex.setShowName(NameVisibility.Priority.GROUPS, true)[ FD ]
Line_99 $$ if (botton == showLabelsButton) -->Line_101 $$ if (botton == hideLabelsButton) [ CD ]
Line_95 $$ JButton botton = (JButton) event.getSource()-->Line_101 $$ if (botton == hideLabelsButton) [ FD ]
Line_101 $$ if (botton == hideLabelsButton) -->Line_102 $$ graphVertex.setShowName(NameVisibility.Priority.GROUPS, false)[ CD ]
Line_98 $$ for (GraphVertex graphVertex : group) -->Line_102 $$ graphVertex.setShowName(NameVisibility.Priority.GROUPS, false)[ FD ]
Line_97 $$ if (group != null) -->Line_105 $$ graph.notifyAboutGroupsChange(null)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_109 $$ showLabelsButton.addActionListener(propActionListener)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_110 $$ hideLabelsButton.addActionListener(propActionListener)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_111 $$ newButton.addActionListener(new ActionListener() [ CD ]
Line_111 $$ newButton.addActionListener(new ActionListener() -->Line_113 $$ String newGroupName = JOptionPane.showInputDialog(null, "Enter a name", "Name of the new group", JOptionPane.QUESTION_MESSAGE)[ CD ]
Line_113 $$ String newGroupName = JOptionPane.showInputDialog(null, "Enter a name", "Name of the new group", JOptionPane.QUESTION_MESSAGE)-->Line_113 $$ String newGroupName = JOptionPane.showInputDialog(null, "Enter a name", "Name of the new group", JOptionPane.QUESTION_MESSAGE)[ CD ]
Line_111 $$ newButton.addActionListener(new ActionListener() -->Line_114 $$ if (newGroupName != null) [ CD ]
Line_113 $$ String newGroupName = JOptionPane.showInputDialog(null, "Enter a name", "Name of the new group", JOptionPane.QUESTION_MESSAGE)-->Line_114 $$ if (newGroupName != null) [ FD ]
Line_114 $$ if (newGroupName != null) -->Line_115 $$ if (graph.getGroup(newGroupName) == null) [ CD ]
Line_113 $$ String newGroupName = JOptionPane.showInputDialog(null, "Enter a name", "Name of the new group", JOptionPane.QUESTION_MESSAGE)-->Line_115 $$ if (graph.getGroup(newGroupName) == null) [ FD ]
Line_115 $$ if (graph.getGroup(newGroupName) == null) -->Line_116 $$ graph.addGroup(new Group(newGroupName, graph))[ CD ]
Line_2 $$ protected void assignListeners() -->Line_121 $$ editButton.addActionListener(new ActionListener() [ CD ]
Line_121 $$ editButton.addActionListener(new ActionListener() -->Line_123 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())[ CD ]
Line_123 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())-->Line_123 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())[ CD ]
Line_121 $$ editButton.addActionListener(new ActionListener() -->Line_124 $$ if (group != null) [ CD ]
Line_123 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())-->Line_124 $$ if (group != null) [ FD ]
Line_96 $$ Group group = getGroupFromListIndex(groupsList.getSelectedIndex())-->Line_124 $$ if (group != null) [ FD ]
Line_56 $$ Group group = getGroupFromListIndex(index)-->Line_124 $$ if (group != null) [ FD ]
Line_124 $$ if (group != null) -->Line_125 $$ DialogEditGroup dialog = new DialogEditGroup(graph, group)[ CD ]
Line_124 $$ if (group != null) -->Line_126 $$ dialog.setModal(true)[ CD ]
Line_125 $$ DialogEditGroup dialog = new DialogEditGroup(graph, group)-->Line_126 $$ dialog.setModal(true)[ FD ]
Line_124 $$ if (group != null) -->Line_127 $$ dialog.setVisible(true)[ CD ]
Line_125 $$ DialogEditGroup dialog = new DialogEditGroup(graph, group)-->Line_127 $$ dialog.setVisible(true)[ FD ]
Line_2 $$ protected void assignListeners() -->Line_131 $$ deleteButton.addActionListener(new ActionListener() [ CD ]
Line_131 $$ deleteButton.addActionListener(new ActionListener() -->Line_133 $$ int index = groupsList.getSelectedIndex()[ CD ]
Line_133 $$ int index = groupsList.getSelectedIndex()-->Line_133 $$ int index = groupsList.getSelectedIndex()[ CD ]
Line_131 $$ deleteButton.addActionListener(new ActionListener() -->Line_134 $$ if (index > 0 && index < graph.getNumberOfGroups() - 1) [ CD ]
Line_134 $$ if (index > 0 && index < graph.getNumberOfGroups() - 1) -->Line_135 $$ graph.removeGroup(index)[ CD ]
Line_133 $$ int index = groupsList.getSelectedIndex()-->Line_135 $$ graph.removeGroup(index)[ FD ]
Line_55 $$ for (int index : indices) -->Line_135 $$ graph.removeGroup(index)[ FD ]
Line_2 $$ protected void assignListeners() -->Line_139 $$ upButton.addActionListener(new ActionListener() [ CD ]
Line_139 $$ upButton.addActionListener(new ActionListener() -->Line_141 $$ int index = groupsList.getSelectedIndex()[ CD ]
Line_141 $$ int index = groupsList.getSelectedIndex()-->Line_141 $$ int index = groupsList.getSelectedIndex()[ CD ]
Line_139 $$ upButton.addActionListener(new ActionListener() -->Line_142 $$ if (index < graph.getNumberOfGroups() - 1) [ CD ]
Line_141 $$ int index = groupsList.getSelectedIndex()-->Line_142 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_133 $$ int index = groupsList.getSelectedIndex()-->Line_142 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_55 $$ for (int index : indices) -->Line_142 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_142 $$ if (index < graph.getNumberOfGroups() - 1) -->Line_143 $$ graph.moveGroupUp(index)[ CD ]
Line_141 $$ int index = groupsList.getSelectedIndex()-->Line_143 $$ graph.moveGroupUp(index)[ FD ]
Line_133 $$ int index = groupsList.getSelectedIndex()-->Line_143 $$ graph.moveGroupUp(index)[ FD ]
Line_55 $$ for (int index : indices) -->Line_143 $$ graph.moveGroupUp(index)[ FD ]
Line_142 $$ if (index < graph.getNumberOfGroups() - 1) -->Line_144 $$ groupsList.setSelectedIndex(index - 1)[ CD ]
Line_2 $$ protected void assignListeners() -->Line_148 $$ downButton.addActionListener(new ActionListener() [ CD ]
Line_148 $$ downButton.addActionListener(new ActionListener() -->Line_150 $$ int index = groupsList.getSelectedIndex()[ CD ]
Line_150 $$ int index = groupsList.getSelectedIndex()-->Line_150 $$ int index = groupsList.getSelectedIndex()[ CD ]
Line_148 $$ downButton.addActionListener(new ActionListener() -->Line_151 $$ if (index < graph.getNumberOfGroups() - 1) [ CD ]
Line_150 $$ int index = groupsList.getSelectedIndex()-->Line_151 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_141 $$ int index = groupsList.getSelectedIndex()-->Line_151 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_133 $$ int index = groupsList.getSelectedIndex()-->Line_151 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_55 $$ for (int index : indices) -->Line_151 $$ if (index < graph.getNumberOfGroups() - 1) [ FD ]
Line_151 $$ if (index < graph.getNumberOfGroups() - 1) -->Line_152 $$ graph.moveGroupDown(index)[ CD ]
Line_150 $$ int index = groupsList.getSelectedIndex()-->Line_152 $$ graph.moveGroupDown(index)[ FD ]
Line_141 $$ int index = groupsList.getSelectedIndex()-->Line_152 $$ graph.moveGroupDown(index)[ FD ]
Line_133 $$ int index = groupsList.getSelectedIndex()-->Line_152 $$ graph.moveGroupDown(index)[ FD ]
Line_55 $$ for (int index : indices) -->Line_152 $$ graph.moveGroupDown(index)[ FD ]
Line_151 $$ if (index < graph.getNumberOfGroups() - 1) -->Line_153 $$ groupsList.setSelectedIndex(index + 1)[ CD ]
