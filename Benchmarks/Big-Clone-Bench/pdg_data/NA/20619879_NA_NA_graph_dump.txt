Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyLogic() [ CD ]
Line_2 $$ public void copyLogic() -->Line_3 $$ if (getState() == States.Idle) [ CD ]
Line_3 $$ if (getState() == States.Idle) -->Line_4 $$ setState(States.Synchronizing)[ CD ]
Line_6 $$ FileChannel sourceChannel = new FileInputStream(new File(_properties.getProperty("binPath") + name + ".class")).getChannel()-->Line_6 $$ FileChannel sourceChannel = new FileInputStream(new File(_properties.getProperty("binPath") + name + ".class")).getChannel()[ CD ]
Line_7 $$ FileChannel destinationChannel = new FileOutputStream(new File(_properties.getProperty("agentFileLocation") + name + ".class")).getChannel()-->Line_7 $$ FileChannel destinationChannel = new FileOutputStream(new File(_properties.getProperty("agentFileLocation") + name + ".class")).getChannel()[ CD ]
Line_6 $$ FileChannel sourceChannel = new FileInputStream(new File(_properties.getProperty("binPath") + name + ".class")).getChannel()-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_7 $$ FileChannel destinationChannel = new FileOutputStream(new File(_properties.getProperty("agentFileLocation") + name + ".class")).getChannel()-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_6 $$ FileChannel sourceChannel = new FileInputStream(new File(_properties.getProperty("binPath") + name + ".class")).getChannel()-->Line_8 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_6 $$ FileChannel sourceChannel = new FileInputStream(new File(_properties.getProperty("binPath") + name + ".class")).getChannel()-->Line_9 $$ sourceChannel.close()[ FD ]
Line_7 $$ FileChannel destinationChannel = new FileOutputStream(new File(_properties.getProperty("agentFileLocation") + name + ".class")).getChannel()-->Line_10 $$ destinationChannel.close()[ FD ]
Line_3 $$ if (getState() == States.Idle) -->Line_16 $$ setState(States.Idle)[ CD ]
