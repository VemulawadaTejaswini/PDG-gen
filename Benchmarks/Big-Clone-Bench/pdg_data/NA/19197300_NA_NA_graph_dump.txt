Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException [ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_3 $$ int nextAIPStatsID[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_4 $$ long nextMimetypeStatsID[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_5 $$ Statement select = dbConnection.createStatement()[ CD ]
Line_5 $$ Statement select = dbConnection.createStatement()-->Line_5 $$ Statement select = dbConnection.createStatement()[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_6 $$ String aipStatsQuery = "select max(aip_statistics_id) from aip_statistics"[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)[ CD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)[ CD ]
Line_5 $$ Statement select = dbConnection.createStatement()-->Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)[ FD ]
Line_6 $$ String aipStatsQuery = "select max(aip_statistics_id) from aip_statistics"-->Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_8 $$ if (result.next()) [ CD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_8 $$ if (result.next()) [ FD ]
Line_8 $$ if (result.next()) -->Line_8 $$ if (result.next()) [ CD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_8 $$ if (result.next()) [ FD ]
Line_8 $$ if (result.next()) -->Line_9 $$ nextAIPStatsID = result.getInt(1) + 1[ CD ]
Line_3 $$ int nextAIPStatsID-->Line_9 $$ nextAIPStatsID = result.getInt(1) + 1[ FD ]
Line_9 $$ nextAIPStatsID = result.getInt(1) + 1-->Line_9 $$ nextAIPStatsID = result.getInt(1) + 1[ FD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_9 $$ nextAIPStatsID = result.getInt(1) + 1[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_13 $$ String mimetypeStatsQuery = "select max(mimetype_aip_statistics_id) from mimetype_aip_statistics"[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)[ CD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)[ FD ]
Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)-->Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)[ FD ]
Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)-->Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)[ CD ]
Line_5 $$ Statement select = dbConnection.createStatement()-->Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)[ FD ]
Line_13 $$ String mimetypeStatsQuery = "select max(mimetype_aip_statistics_id) from mimetype_aip_statistics"-->Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_15 $$ if (result.next()) [ CD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_15 $$ if (result.next()) [ FD ]
Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)-->Line_15 $$ if (result.next()) [ FD ]
Line_15 $$ if (result.next()) -->Line_15 $$ if (result.next()) [ CD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_15 $$ if (result.next()) [ FD ]
Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)-->Line_15 $$ if (result.next()) [ FD ]
Line_15 $$ if (result.next()) -->Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1[ CD ]
Line_4 $$ long nextMimetypeStatsID-->Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1[ FD ]
Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1-->Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1[ FD ]
Line_7 $$ ResultSet result = select.executeQuery(aipStatsQuery)-->Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1[ FD ]
Line_14 $$ result = select.executeQuery(mimetypeStatsQuery)-->Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_20 $$ String insertAIPStatsEntryQuery = "insert into aip_statistics " + "(aip_statistics_id, tj_aip_count, tj_aip_volume, rj_aip_count, rj_aip_volume, " + "collation_date, binary_aip_count) " + "values (?, ?, ?, ?, ?, ?, ?)"[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)[ CD ]
Line_20 $$ String insertAIPStatsEntryQuery = "insert into aip_statistics " + "(aip_statistics_id, tj_aip_count, tj_aip_volume, rj_aip_count, rj_aip_volume, " + "collation_date, binary_aip_count) " + "values (?, ?, ?, ?, ?, ?, ?)"-->Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_22 $$ insert.setInt(1, nextAIPStatsID)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_22 $$ insert.setInt(1, nextAIPStatsID)[ FD ]
Line_3 $$ int nextAIPStatsID-->Line_22 $$ insert.setInt(1, nextAIPStatsID)[ FD ]
Line_9 $$ nextAIPStatsID = result.getInt(1) + 1-->Line_22 $$ insert.setInt(1, nextAIPStatsID)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_23 $$ insert.setLong(2, transferJobAIPCount)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_23 $$ insert.setLong(2, transferJobAIPCount)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_23 $$ insert.setLong(2, transferJobAIPCount)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_24 $$ insert.setLong(3, transferJobAIPVolume)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_24 $$ insert.setLong(3, transferJobAIPVolume)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_24 $$ insert.setLong(3, transferJobAIPVolume)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_25 $$ insert.setLong(4, reprocessingJobAIPCount)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_25 $$ insert.setLong(4, reprocessingJobAIPCount)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_25 $$ insert.setLong(4, reprocessingJobAIPCount)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_26 $$ insert.setLong(5, reprocessingJobAIPVolume)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_26 $$ insert.setLong(5, reprocessingJobAIPVolume)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_26 $$ insert.setLong(5, reprocessingJobAIPVolume)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_27 $$ insert.setDate(6, new java.sql.Date(System.currentTimeMillis()))[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_27 $$ insert.setDate(6, new java.sql.Date(System.currentTimeMillis()))[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_28 $$ insert.setLong(7, overallBinaryAIPCount)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_28 $$ insert.setLong(7, overallBinaryAIPCount)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_28 $$ insert.setLong(7, overallBinaryAIPCount)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_29 $$ int rowsAdded = insert.executeUpdate()[ CD ]
Line_29 $$ int rowsAdded = insert.executeUpdate()-->Line_29 $$ int rowsAdded = insert.executeUpdate()[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_29 $$ int rowsAdded = insert.executeUpdate()[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_30 $$ if (rowsAdded != 1) [ CD ]
Line_29 $$ int rowsAdded = insert.executeUpdate()-->Line_30 $$ if (rowsAdded != 1) [ FD ]
Line_30 $$ if (rowsAdded != 1) -->Line_31 $$ dbConnection.rollback()[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_34 $$ String insertMimeTypeStatsQuery = "insert into mimetype_aip_statistics " + "(mimetype_aip_statistics_id, aip_statistics_id, mimetype_aip_count, mimetype_aip_volume, mimetype) " + "values (?, ?, ?, ?, ?)"[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)[ CD ]
Line_34 $$ String insertMimeTypeStatsQuery = "insert into mimetype_aip_statistics " + "(mimetype_aip_statistics_id, aip_statistics_id, mimetype_aip_count, mimetype_aip_volume, mimetype) " + "values (?, ?, ?, ?, ?)"-->Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_36 $$ insert.setInt(2, nextAIPStatsID)[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_36 $$ insert.setInt(2, nextAIPStatsID)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_36 $$ insert.setInt(2, nextAIPStatsID)[ FD ]
Line_3 $$ int nextAIPStatsID-->Line_36 $$ insert.setInt(2, nextAIPStatsID)[ FD ]
Line_9 $$ nextAIPStatsID = result.getInt(1) + 1-->Line_36 $$ insert.setInt(2, nextAIPStatsID)[ FD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_37 $$ for (String mimeType : mimeTypeRegister.keySet()) [ FD ]
Line_38 $$ AIPStatistics mimeTypeStats = mimeTypeRegister.get(mimeType)-->Line_38 $$ AIPStatistics mimeTypeStats = mimeTypeRegister.get(mimeType)[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_38 $$ AIPStatistics mimeTypeStats = mimeTypeRegister.get(mimeType)[ FD ]
Line_37 $$ for (String mimeType : mimeTypeRegister.keySet()) -->Line_38 $$ AIPStatistics mimeTypeStats = mimeTypeRegister.get(mimeType)[ FD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_39 $$ insert.setLong(1, nextMimetypeStatsID)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_39 $$ insert.setLong(1, nextMimetypeStatsID)[ FD ]
Line_4 $$ long nextMimetypeStatsID-->Line_39 $$ insert.setLong(1, nextMimetypeStatsID)[ FD ]
Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1-->Line_39 $$ insert.setLong(1, nextMimetypeStatsID)[ FD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_40 $$ insert.setLong(3, mimeTypeStats.aipCount)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_40 $$ insert.setLong(3, mimeTypeStats.aipCount)[ FD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_41 $$ insert.setLong(4, mimeTypeStats.aipVolume)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_41 $$ insert.setLong(4, mimeTypeStats.aipVolume)[ FD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_42 $$ insert.setString(5, mimeType)[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_42 $$ insert.setString(5, mimeType)[ FD ]
Line_37 $$ for (String mimeType : mimeTypeRegister.keySet()) -->Line_42 $$ insert.setString(5, mimeType)[ FD ]
Line_4 $$ long nextMimetypeStatsID-->Line_43 $$ nextMimetypeStatsID++[ FD ]
Line_16 $$ nextMimetypeStatsID = result.getLong(1) + 1-->Line_43 $$ nextMimetypeStatsID++[ FD ]
Line_29 $$ int rowsAdded = insert.executeUpdate()-->Line_44 $$ rowsAdded = insert.executeUpdate()[ FD ]
Line_44 $$ rowsAdded = insert.executeUpdate()-->Line_44 $$ rowsAdded = insert.executeUpdate()[ FD ]
Line_44 $$ rowsAdded = insert.executeUpdate()-->Line_44 $$ rowsAdded = insert.executeUpdate()[ CD ]
Line_21 $$ PreparedStatement insert = dbConnection.prepareStatement(insertAIPStatsEntryQuery)-->Line_44 $$ rowsAdded = insert.executeUpdate()[ FD ]
Line_35 $$ insert = dbConnection.prepareStatement(insertMimeTypeStatsQuery)-->Line_44 $$ rowsAdded = insert.executeUpdate()[ FD ]
Line_29 $$ int rowsAdded = insert.executeUpdate()-->Line_45 $$ if (rowsAdded != 1) [ FD ]
Line_44 $$ rowsAdded = insert.executeUpdate()-->Line_45 $$ if (rowsAdded != 1) [ FD ]
Line_45 $$ if (rowsAdded != 1) -->Line_46 $$ dbConnection.rollback()[ CD ]
Line_2 $$ private void writeStatsToDatabase(long transferJobAIPCount, long reprocessingJobAIPCount, long transferJobAIPVolume, long reprocessingJobAIPVolume, long overallBinaryAIPCount, Map<String, AIPStatistics> mimeTypeRegister) throws SQLException -->Line_50 $$ dbConnection.commit()[ CD ]
