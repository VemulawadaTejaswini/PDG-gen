Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void _he3Decode(String in_file) [ CD ]
Line_5 $$ File in = new File(in_file)-->Line_6 $$ int file_size = (int) in.length()[ FD ]
Line_4 $$ File out = new File(in_file + dec_extension)-->Line_8 $$ out.createNewFile()[ FD ]
Line_4 $$ File out = new File(in_file + dec_extension)-->Line_9 $$ FileOutputStream out_stream = new FileOutputStream(out.getName())[ FD ]
Line_16 $$ int _fetched = 0-->Line_19 $$ while (_fetched < file_size) [ FD ]
Line_6 $$ int file_size = (int) in.length()-->Line_19 $$ while (_fetched < file_size) [ FD ]
Line_19 $$ while (_fetched < file_size) -->Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)[ CD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)[ FD ]
Line_17 $$ int _chars_read = 0-->Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)[ FD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)[ CD ]
Line_10 $$ InputStreamReader inputReader = new InputStreamReader(in_stream, "ISO8859_1")-->Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)[ FD ]
Line_15 $$ int buff_size = char_arr.length-->Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)[ FD ]
Line_19 $$ while (_fetched < file_size) -->Line_21 $$ if (_chars_read == -1)[ CD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_21 $$ if (_chars_read == -1)[ FD ]
Line_17 $$ int _chars_read = 0-->Line_21 $$ if (_chars_read == -1)[ FD ]
Line_19 $$ while (_fetched < file_size) -->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ CD ]
Line_19 $$ while (_fetched < file_size) -->Line_19 $$ while (_fetched < file_size) [ CD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ FD ]
Line_17 $$ int _chars_read = 0-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ FD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ CD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ CD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ FD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ byte_arr[i] = (byte) char_arr[i][ CD ]
Line_19 $$ while (_fetched < file_size) -->Line_23 $$ os.write(byte_arr, 0, _chars_read)[ CD ]
Line_12 $$ ByteArrayOutputStream os = new ByteArrayOutputStream(file_size)-->Line_23 $$ os.write(byte_arr, 0, _chars_read)[ FD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_23 $$ os.write(byte_arr, 0, _chars_read)[ FD ]
Line_17 $$ int _chars_read = 0-->Line_23 $$ os.write(byte_arr, 0, _chars_read)[ FD ]
Line_19 $$ while (_fetched < file_size) -->Line_24 $$ _fetched += _chars_read[ CD ]
Line_24 $$ _fetched += _chars_read-->Line_24 $$ _fetched += _chars_read[ FD ]
Line_16 $$ int _fetched = 0-->Line_24 $$ _fetched += _chars_read[ FD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_24 $$ _fetched += _chars_read[ FD ]
Line_17 $$ int _chars_read = 0-->Line_24 $$ _fetched += _chars_read[ FD ]
Line_19 $$ while (_fetched < file_size) -->Line_25 $$ System.out.print("*")[ CD ]
Line_11 $$ OutputStreamWriter outputWriter = new OutputStreamWriter(out_stream, "ISO8859_1")-->Line_28 $$ outputWriter.write(new String(_decode((ByteArrayOutputStream) os), "ISO-8859-1"))[ FD ]
Line_24 $$ _fetched += _chars_read-->Line_19 $$ while (_fetched < file_size) [ FD ]
Line_24 $$ _fetched += _chars_read-->Line_19 $$ while (_fetched < file_size) [ FD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_21 $$ if (_chars_read == -1)[ FD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_23 $$ os.write(byte_arr, 0, _chars_read)[ FD ]
Line_20 $$ _chars_read = inputReader.read(char_arr, 0, buff_size)-->Line_24 $$ _fetched += _chars_read[ FD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ FD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ FD ]
Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i]-->Line_22 $$ for (int i = 0; i < _chars_read; i++) byte_arr[i] = (byte) char_arr[i][ FD ]
