Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException [ CD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))[ CD ]
Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))-->Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))[ CD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_4 $$ consume(response.getEntity())[ CD ]
Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))-->Line_4 $$ consume(response.getEntity())[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_5 $$ final StringEntity content = new StringEntity(format("[ CD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_5 $$ final StringEntity content = new StringEntity(format("[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_5 $$ final StringEntity content = new StringEntity(format("[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_5 $$ final StringEntity content = new StringEntity(format("[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_5 $$ final StringEntity content = new StringEntity(format("[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))[ CD ]
Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))-->Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))[ FD ]
Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))-->Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))[ FD ]
Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))-->Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))[ CD ]
Line_5 $$ final StringEntity content = new StringEntity(format("-->Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_7 $$ consume(response.getEntity())[ CD ]
Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))-->Line_7 $$ consume(response.getEntity())[ FD ]
Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))-->Line_7 $$ consume(response.getEntity())[ FD ]
Line_2 $$ protected void givenGroupRepository(String repoId, String providerId, Repository... memberRepos) throws AuthenticationException, UnsupportedEncodingException, IOException, ClientProtocolException -->Line_8 $$ assertThat(response.getStatusLine().getStatusCode(), is(201))[ CD ]
Line_3 $$ HttpResponse response = executeDeleteWithResponse(format("/repo_groups/%s", repoId))-->Line_8 $$ assertThat(response.getStatusLine().getStatusCode(), is(201))[ FD ]
Line_6 $$ response = executePost("/repo_groups", content, new BasicHeader("Content-Type", "application/json"))-->Line_8 $$ assertThat(response.getStatusLine().getStatusCode(), is(201))[ FD ]
