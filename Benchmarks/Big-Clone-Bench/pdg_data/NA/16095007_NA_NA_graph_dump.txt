Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception [ CD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_3 $$ Log.info("\nretrieve " + fileName + NEW_LINE)[ CD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_4 $$ FTPClient client = new FTPClient()[ CD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_5 $$ client.connect(host, port)[ CD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_5 $$ client.connect(host, port)[ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_5 $$ client.connect(host, port)[ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_5 $$ client.connect(host, port)[ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_6 $$ int reply = client.getReplyCode()[ CD ]
Line_6 $$ int reply = client.getReplyCode()-->Line_6 $$ int reply = client.getReplyCode()[ CD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_6 $$ int reply = client.getReplyCode()[ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_7 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_7 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_7 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_7 $$ if (!FTPReply.isPositiveCompletion(reply)) -->Line_7 $$ if (!FTPReply.isPositiveCompletion(reply)) [ CD ]
Line_6 $$ int reply = client.getReplyCode()-->Line_7 $$ if (!FTPReply.isPositiveCompletion(reply)) [ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_10 $$ if (!client.login(user, password)) [ CD ]
Line_10 $$ if (!client.login(user, password)) -->Line_10 $$ if (!client.login(user, password)) [ CD ]
Line_10 $$ if (!client.login(user, password)) -->Line_10 $$ if (!client.login(user, password)) [ CD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_10 $$ if (!client.login(user, password)) [ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_10 $$ if (!client.login(user, password)) [ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_10 $$ if (!client.login(user, password)) [ FD ]
Line_15 $$ File dest = new File(locationFile, fileName)-->Line_16 $$ if (dest.exists()) [ FD ]
Line_16 $$ if (dest.exists()) -->Line_16 $$ if (dest.exists()) [ CD ]
Line_15 $$ File dest = new File(locationFile, fileName)-->Line_16 $$ if (dest.exists()) [ FD ]
Line_16 $$ if (dest.exists()) -->Line_17 $$ dest.delete()[ CD ]
Line_15 $$ File dest = new File(locationFile, fileName)-->Line_17 $$ dest.delete()[ FD ]
Line_16 $$ if (dest.exists()) -->Line_19 $$ locationFile.mkdirs()[ CD ]
Line_14 $$ File locationFile = new File(location)-->Line_19 $$ locationFile.mkdirs()[ FD ]
Line_21 $$ boolean status = client.changeWorkingDirectory("/")-->Line_21 $$ boolean status = client.changeWorkingDirectory("/")[ CD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_21 $$ boolean status = client.changeWorkingDirectory("/")[ FD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_23 $$ client.setFileTransferMode(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_24 $$ client.setFileType(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_25 $$ client.enterLocalActiveMode()[ FD ]
Line_26 $$ InputStream in = client.retrieveFileStream(fileName)-->Line_26 $$ InputStream in = client.retrieveFileStream(fileName)[ CD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_26 $$ InputStream in = client.retrieveFileStream(fileName)[ FD ]
Line_2 $$ private static void getFileFtp(String user, String password, String host, int port, String fileName, String location) throws Exception -->Line_26 $$ InputStream in = client.retrieveFileStream(fileName)[ FD ]
Line_26 $$ InputStream in = client.retrieveFileStream(fileName)-->Line_27 $$ if (in == null) [ FD ]
Line_27 $$ if (in == null) -->Line_28 $$ Log.error("Input stream is null\n")[ CD ]
Line_26 $$ InputStream in = client.retrieveFileStream(fileName)-->Line_32 $$ saveInputStreamToFile(in, new File(location, fileName))[ FD ]
Line_4 $$ FTPClient client = new FTPClient()-->Line_34 $$ client.disconnect()[ FD ]
