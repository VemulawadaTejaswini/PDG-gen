Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String fetchStockCompanyName(Stock stock) [ CD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_3 $$ String companyName = ""[ CD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_4 $$ String symbol = StockUtil.getStock(stock)[ CD ]
Line_4 $$ String symbol = StockUtil.getStock(stock)-->Line_4 $$ String symbol = StockUtil.getStock(stock)[ CD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_4 $$ String symbol = StockUtil.getStock(stock)[ FD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_5 $$ if (isStockCached(symbol)) [ CD ]
Line_4 $$ String symbol = StockUtil.getStock(stock)-->Line_5 $$ if (isStockCached(symbol)) [ FD ]
Line_5 $$ if (isStockCached(symbol)) -->Line_5 $$ if (isStockCached(symbol)) [ CD ]
Line_4 $$ String symbol = StockUtil.getStock(stock)-->Line_5 $$ if (isStockCached(symbol)) [ FD ]
Line_5 $$ if (isStockCached(symbol)) -->Line_6 $$ return getStockFromCache(symbol)[ CD ]
Line_6 $$ return getStockFromCache(symbol)-->Line_6 $$ return getStockFromCache(symbol)[ CD ]
Line_4 $$ String symbol = StockUtil.getStock(stock)-->Line_6 $$ return getStockFromCache(symbol)[ FD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_8 $$ String url = NbBundle.getMessage(MrSwingDataFeed.class, "MrSwingDataFeed.stockInfo.url", new String[] [ CD ]
Line_8 $$ String url = NbBundle.getMessage(MrSwingDataFeed.class, "MrSwingDataFeed.stockInfo.url", new String[] -->Line_8 $$ String url = NbBundle.getMessage(MrSwingDataFeed.class, "MrSwingDataFeed.stockInfo.url", new String[] [ CD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_9 $$ HttpContext context = new BasicHttpContext()[ CD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_10 $$ HttpGet method = new HttpGet(url)[ CD ]
Line_12 $$ HttpResponse response = ProxyManager.httpClient.execute(method, context)-->Line_12 $$ HttpResponse response = ProxyManager.httpClient.execute(method, context)[ CD ]
Line_10 $$ HttpGet method = new HttpGet(url)-->Line_12 $$ HttpResponse response = ProxyManager.httpClient.execute(method, context)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext()-->Line_12 $$ HttpResponse response = ProxyManager.httpClient.execute(method, context)[ FD ]
Line_13 $$ HttpEntity entity = response.getEntity()-->Line_13 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_12 $$ HttpResponse response = ProxyManager.httpClient.execute(method, context)-->Line_13 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_13 $$ HttpEntity entity = response.getEntity()-->Line_14 $$ if (entity != null) [ FD ]
Line_14 $$ if (entity != null) -->Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1][ CD ]
Line_3 $$ String companyName = ""-->Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1][ FD ]
Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1]-->Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1][ FD ]
Line_13 $$ HttpEntity entity = response.getEntity()-->Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1][ FD ]
Line_14 $$ if (entity != null) -->Line_16 $$ cacheStock(symbol, companyName)[ CD ]
Line_4 $$ String symbol = StockUtil.getStock(stock)-->Line_16 $$ cacheStock(symbol, companyName)[ FD ]
Line_3 $$ String companyName = ""-->Line_16 $$ cacheStock(symbol, companyName)[ FD ]
Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1]-->Line_16 $$ cacheStock(symbol, companyName)[ FD ]
Line_14 $$ if (entity != null) -->Line_17 $$ EntityUtils.consume(entity)[ CD ]
Line_13 $$ HttpEntity entity = response.getEntity()-->Line_17 $$ EntityUtils.consume(entity)[ FD ]
Line_3 $$ String companyName = ""-->Line_20 $$ companyName = ""[ FD ]
Line_15 $$ companyName = EntityUtils.toString(entity).split("\n")[1]-->Line_20 $$ companyName = ""[ FD ]
Line_20 $$ companyName = ""-->Line_20 $$ companyName = ""[ FD ]
Line_10 $$ HttpGet method = new HttpGet(url)-->Line_22 $$ method.abort()[ FD ]
Line_2 $$ public String fetchStockCompanyName(Stock stock) -->Line_24 $$ return companyName[ CD ]
