Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean authorize(String username, String password, String filename) [ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_3 $$ open(filename)[ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_3 $$ open(filename)[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_4 $$ boolean isAuthorized = false[ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_5 $$ StringBuffer encPasswd = null[ CD ]
Line_7 $$ MessageDigest mdAlgorithm = MessageDigest.getInstance("MD5")-->Line_7 $$ MessageDigest mdAlgorithm = MessageDigest.getInstance("MD5")[ CD ]
Line_7 $$ MessageDigest mdAlgorithm = MessageDigest.getInstance("MD5")-->Line_8 $$ mdAlgorithm.update(password.getBytes())[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_8 $$ mdAlgorithm.update(password.getBytes())[ FD ]
Line_9 $$ byte[] digest = mdAlgorithm.digest()-->Line_9 $$ byte[] digest = mdAlgorithm.digest()[ CD ]
Line_7 $$ MessageDigest mdAlgorithm = MessageDigest.getInstance("MD5")-->Line_9 $$ byte[] digest = mdAlgorithm.digest()[ FD ]
Line_5 $$ StringBuffer encPasswd = null-->Line_10 $$ encPasswd = new StringBuffer()[ FD ]
Line_10 $$ encPasswd = new StringBuffer()-->Line_10 $$ encPasswd = new StringBuffer()[ FD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_11 $$ for (int i = 0; i < digest.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_11 $$ for (int i = 0; i < digest.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_11 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_12 $$ password = Integer.toHexString(255 & digest[i])[ CD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_12 $$ password = Integer.toHexString(255 & digest[i])[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_12 $$ password = Integer.toHexString(255 & digest[i])[ FD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_12 $$ password = Integer.toHexString(255 & digest[i])[ CD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_13 $$ if (password.length() < 2) [ CD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_13 $$ if (password.length() < 2) [ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_13 $$ if (password.length() < 2) [ FD ]
Line_13 $$ if (password.length() < 2) -->Line_14 $$ password = "0" + password[ CD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_14 $$ password = "0" + password[ FD ]
Line_14 $$ password = "0" + password-->Line_14 $$ password = "0" + password[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_14 $$ password = "0" + password[ FD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_14 $$ password = "0" + password[ FD ]
Line_14 $$ password = "0" + password-->Line_14 $$ password = "0" + password[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_14 $$ password = "0" + password[ FD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_16 $$ encPasswd.append(password)[ CD ]
Line_5 $$ StringBuffer encPasswd = null-->Line_16 $$ encPasswd.append(password)[ FD ]
Line_10 $$ encPasswd = new StringBuffer()-->Line_16 $$ encPasswd.append(password)[ FD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_16 $$ encPasswd.append(password)[ FD ]
Line_14 $$ password = "0" + password-->Line_16 $$ encPasswd.append(password)[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_16 $$ encPasswd.append(password)[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_20 $$ String encPassword = encPasswd.toString()[ CD ]
Line_20 $$ String encPassword = encPasswd.toString()-->Line_20 $$ String encPassword = encPasswd.toString()[ CD ]
Line_5 $$ StringBuffer encPasswd = null-->Line_20 $$ String encPassword = encPasswd.toString()[ FD ]
Line_10 $$ encPasswd = new StringBuffer()-->Line_20 $$ String encPassword = encPasswd.toString()[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_21 $$ String tempPassword = getPassword(username)[ CD ]
Line_21 $$ String tempPassword = getPassword(username)-->Line_21 $$ String tempPassword = getPassword(username)[ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_21 $$ String tempPassword = getPassword(username)[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_22 $$ System.out.println("epass" + encPassword)[ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_23 $$ System.out.println("pass" + tempPassword)[ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_24 $$ if (tempPassword.equals(encPassword)) [ CD ]
Line_21 $$ String tempPassword = getPassword(username)-->Line_24 $$ if (tempPassword.equals(encPassword)) [ FD ]
Line_20 $$ String encPassword = encPasswd.toString()-->Line_24 $$ if (tempPassword.equals(encPassword)) [ FD ]
Line_24 $$ if (tempPassword.equals(encPassword)) -->Line_24 $$ if (tempPassword.equals(encPassword)) [ CD ]
Line_21 $$ String tempPassword = getPassword(username)-->Line_24 $$ if (tempPassword.equals(encPassword)) [ FD ]
Line_20 $$ String encPassword = encPasswd.toString()-->Line_24 $$ if (tempPassword.equals(encPassword)) [ FD ]
Line_24 $$ if (tempPassword.equals(encPassword)) -->Line_25 $$ isAuthorized = true[ CD ]
Line_4 $$ boolean isAuthorized = false-->Line_25 $$ isAuthorized = true[ FD ]
Line_25 $$ isAuthorized = true-->Line_25 $$ isAuthorized = true[ FD ]
Line_24 $$ if (tempPassword.equals(encPassword)) -->Line_27 $$ isAuthorized = false[ CD ]
Line_4 $$ boolean isAuthorized = false-->Line_27 $$ isAuthorized = false[ FD ]
Line_25 $$ isAuthorized = true-->Line_27 $$ isAuthorized = false[ FD ]
Line_27 $$ isAuthorized = false-->Line_27 $$ isAuthorized = false[ FD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_29 $$ close()[ CD ]
Line_2 $$ public boolean authorize(String username, String password, String filename) -->Line_30 $$ return isAuthorized[ CD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_11 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_11 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < digest.length; i++) -->Line_11 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_13 $$ if (password.length() < 2) [ FD ]
Line_14 $$ password = "0" + password-->Line_13 $$ if (password.length() < 2) [ FD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_14 $$ password = "0" + password[ FD ]
Line_14 $$ password = "0" + password-->Line_14 $$ password = "0" + password[ FD ]
Line_12 $$ password = Integer.toHexString(255 & digest[i])-->Line_16 $$ encPasswd.append(password)[ FD ]
Line_14 $$ password = "0" + password-->Line_16 $$ encPasswd.append(password)[ FD ]
