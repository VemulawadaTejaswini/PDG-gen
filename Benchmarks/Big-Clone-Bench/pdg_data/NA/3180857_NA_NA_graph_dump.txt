Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ void load(URL url) throws IOException [ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_3 $$ BufferedReader r = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_3 $$ BufferedReader r = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_2 $$ void load(URL url) throws IOException -->Line_4 $$ Vector3f scale = new Vector3f(1, 1, 1)[ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_5 $$ Group currentGroup = new Group()[ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_6 $$ currentGroup.name = "default"[ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_7 $$ groups.add(currentGroup)[ CD ]
Line_5 $$ Group currentGroup = new Group()-->Line_7 $$ groups.add(currentGroup)[ FD ]
Line_2 $$ void load(URL url) throws IOException -->Line_8 $$ String line[ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_9 $$ while ((line = r.readLine()) != null) [ CD ]
Line_2 $$ void load(URL url) throws IOException -->Line_2 $$ void load(URL url) throws IOException [ CD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_9 $$ while ((line = r.readLine()) != null) [ FD ]
Line_8 $$ String line-->Line_9 $$ while ((line = r.readLine()) != null) [ FD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_9 $$ while ((line = r.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_9 $$ while ((line = r.readLine()) != null) [ FD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_10 $$ String[] params = line.split(" +")[ CD ]
Line_10 $$ String[] params = line.split(" +")-->Line_10 $$ String[] params = line.split(" +")[ CD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_10 $$ String[] params = line.split(" +")[ FD ]
Line_8 $$ String line-->Line_10 $$ String[] params = line.split(" +")[ FD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_11 $$ if (params.length == 0)[ CD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_12 $$ String command = params[0][ CD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_13 $$ if (params[0].equals("v")) [ CD ]
Line_13 $$ if (params[0].equals("v")) -->Line_13 $$ if (params[0].equals("v")) [ CD ]
Line_13 $$ if (params[0].equals("v")) -->Line_14 $$ Vector3f vertex = new Vector3f(Float.parseFloat(params[1]) * scale.x, Float.parseFloat(params[2]) * scale.y, Float.parseFloat(params[3]) * scale.z)[ CD ]
Line_13 $$ if (params[0].equals("v")) -->Line_15 $$ verticies.add(vertex)[ CD ]
Line_14 $$ Vector3f vertex = new Vector3f(Float.parseFloat(params[1]) * scale.x, Float.parseFloat(params[2]) * scale.y, Float.parseFloat(params[3]) * scale.z)-->Line_15 $$ verticies.add(vertex)[ FD ]
Line_13 $$ if (params[0].equals("v")) -->Line_16 $$ radius = Math.max(radius, vertex.length())[ CD ]
Line_14 $$ Vector3f vertex = new Vector3f(Float.parseFloat(params[1]) * scale.x, Float.parseFloat(params[2]) * scale.y, Float.parseFloat(params[3]) * scale.z)-->Line_16 $$ radius = Math.max(radius, vertex.length())[ FD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_18 $$ if (command.equals("center")) [ CD ]
Line_12 $$ String command = params[0]-->Line_18 $$ if (command.equals("center")) [ FD ]
Line_18 $$ if (command.equals("center")) -->Line_18 $$ if (command.equals("center")) [ CD ]
Line_12 $$ String command = params[0]-->Line_18 $$ if (command.equals("center")) [ FD ]
Line_18 $$ if (command.equals("center")) -->Line_20 $$ if (command.equals("f")) [ CD ]
Line_12 $$ String command = params[0]-->Line_20 $$ if (command.equals("f")) [ FD ]
Line_20 $$ if (command.equals("f")) -->Line_20 $$ if (command.equals("f")) [ CD ]
Line_12 $$ String command = params[0]-->Line_20 $$ if (command.equals("f")) [ FD ]
Line_20 $$ if (command.equals("f")) -->Line_21 $$ Face f = new Face()[ CD ]
Line_20 $$ if (command.equals("f")) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ CD ]
Line_20 $$ if (command.equals("f")) -->Line_20 $$ if (command.equals("f")) [ CD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ CD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ CD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_23 $$ String parts[] = params[i].split("/")[ CD ]
Line_23 $$ String parts[] = params[i].split("/")-->Line_23 $$ String parts[] = params[i].split("/")[ CD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_24 $$ Vector3f v = verticies.get(Integer.parseInt(parts[0]) - 1)[ CD ]
Line_24 $$ Vector3f v = verticies.get(Integer.parseInt(parts[0]) - 1)-->Line_24 $$ Vector3f v = verticies.get(Integer.parseInt(parts[0]) - 1)[ CD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_25 $$ f.add(v)[ CD ]
Line_21 $$ Face f = new Face()-->Line_25 $$ f.add(v)[ FD ]
Line_24 $$ Vector3f v = verticies.get(Integer.parseInt(parts[0]) - 1)-->Line_25 $$ f.add(v)[ FD ]
Line_20 $$ if (command.equals("f")) -->Line_27 $$ currentGroup.faces.add(f)[ CD ]
Line_21 $$ Face f = new Face()-->Line_27 $$ currentGroup.faces.add(f)[ FD ]
Line_20 $$ if (command.equals("f")) -->Line_28 $$ if (command.equals("l")) [ CD ]
Line_12 $$ String command = params[0]-->Line_28 $$ if (command.equals("l")) [ FD ]
Line_28 $$ if (command.equals("l")) -->Line_28 $$ if (command.equals("l")) [ CD ]
Line_12 $$ String command = params[0]-->Line_28 $$ if (command.equals("l")) [ FD ]
Line_28 $$ if (command.equals("l")) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ CD ]
Line_28 $$ if (command.equals("l")) -->Line_28 $$ if (command.equals("l")) [ CD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ CD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ CD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_31 $$ Vector3f v = verticies.get(Integer.parseInt(params[i]) - 1)[ CD ]
Line_31 $$ Vector3f v = verticies.get(Integer.parseInt(params[i]) - 1)-->Line_31 $$ Vector3f v = verticies.get(Integer.parseInt(params[i]) - 1)[ CD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_32 $$ l.add(v)[ CD ]
Line_31 $$ Vector3f v = verticies.get(Integer.parseInt(params[i]) - 1)-->Line_32 $$ l.add(v)[ FD ]
Line_24 $$ Vector3f v = verticies.get(Integer.parseInt(parts[0]) - 1)-->Line_32 $$ l.add(v)[ FD ]
Line_28 $$ if (command.equals("l")) -->Line_34 $$ currentGroup.lines.add(l)[ CD ]
Line_28 $$ if (command.equals("l")) -->Line_35 $$ if (command.equals("g") && params.length > 1) [ CD ]
Line_12 $$ String command = params[0]-->Line_35 $$ if (command.equals("g") && params.length > 1) [ FD ]
Line_35 $$ if (command.equals("g") && params.length > 1) -->Line_36 $$ currentGroup = new Group()[ CD ]
Line_36 $$ currentGroup = new Group()-->Line_36 $$ currentGroup = new Group()[ FD ]
Line_5 $$ Group currentGroup = new Group()-->Line_36 $$ currentGroup = new Group()[ FD ]
Line_35 $$ if (command.equals("g") && params.length > 1) -->Line_37 $$ currentGroup.name = params[1][ CD ]
Line_35 $$ if (command.equals("g") && params.length > 1) -->Line_38 $$ groups.add(currentGroup)[ CD ]
Line_36 $$ currentGroup = new Group()-->Line_38 $$ groups.add(currentGroup)[ FD ]
Line_5 $$ Group currentGroup = new Group()-->Line_38 $$ groups.add(currentGroup)[ FD ]
Line_35 $$ if (command.equals("g") && params.length > 1) -->Line_39 $$ if (command.equals("scale")) [ CD ]
Line_12 $$ String command = params[0]-->Line_39 $$ if (command.equals("scale")) [ FD ]
Line_39 $$ if (command.equals("scale")) -->Line_39 $$ if (command.equals("scale")) [ CD ]
Line_12 $$ String command = params[0]-->Line_39 $$ if (command.equals("scale")) [ FD ]
Line_39 $$ if (command.equals("scale")) -->Line_40 $$ scale = new Vector3f(Float.parseFloat(params[1]), Float.parseFloat(params[2]), Float.parseFloat(params[3]))[ CD ]
Line_40 $$ scale = new Vector3f(Float.parseFloat(params[1]), Float.parseFloat(params[2]), Float.parseFloat(params[3]))-->Line_40 $$ scale = new Vector3f(Float.parseFloat(params[1]), Float.parseFloat(params[2]), Float.parseFloat(params[3]))[ FD ]
Line_4 $$ Vector3f scale = new Vector3f(1, 1, 1)-->Line_40 $$ scale = new Vector3f(Float.parseFloat(params[1]), Float.parseFloat(params[2]), Float.parseFloat(params[3]))[ FD ]
Line_2 $$ void load(URL url) throws IOException -->Line_43 $$ r.close()[ CD ]
Line_3 $$ BufferedReader r = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_43 $$ r.close()[ FD ]
Line_9 $$ while ((line = r.readLine()) != null) -->Line_10 $$ String[] params = line.split(" +")[ FD ]
Line_14 $$ Vector3f vertex = new Vector3f(Float.parseFloat(params[1]) * scale.x, Float.parseFloat(params[2]) * scale.y, Float.parseFloat(params[3]) * scale.z)-->Line_15 $$ verticies.add(vertex)[ FD ]
Line_14 $$ Vector3f vertex = new Vector3f(Float.parseFloat(params[1]) * scale.x, Float.parseFloat(params[2]) * scale.y, Float.parseFloat(params[3]) * scale.z)-->Line_16 $$ radius = Math.max(radius, vertex.length())[ FD ]
Line_12 $$ String command = params[0]-->Line_18 $$ if (command.equals("center")) [ FD ]
Line_12 $$ String command = params[0]-->Line_18 $$ if (command.equals("center")) [ FD ]
Line_12 $$ String command = params[0]-->Line_20 $$ if (command.equals("f")) [ FD ]
Line_12 $$ String command = params[0]-->Line_20 $$ if (command.equals("f")) [ FD ]
Line_21 $$ Face f = new Face()-->Line_27 $$ currentGroup.faces.add(f)[ FD ]
Line_12 $$ String command = params[0]-->Line_28 $$ if (command.equals("l")) [ FD ]
Line_12 $$ String command = params[0]-->Line_28 $$ if (command.equals("l")) [ FD ]
Line_12 $$ String command = params[0]-->Line_35 $$ if (command.equals("g") && params.length > 1) [ FD ]
Line_36 $$ currentGroup = new Group()-->Line_38 $$ groups.add(currentGroup)[ FD ]
Line_12 $$ String command = params[0]-->Line_39 $$ if (command.equals("scale")) [ FD ]
Line_12 $$ String command = params[0]-->Line_39 $$ if (command.equals("scale")) [ FD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_22 $$ for (int i = 1; i < params.length; i++) -->Line_22 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_24 $$ Vector3f v = verticies.get(Integer.parseInt(parts[0]) - 1)-->Line_25 $$ f.add(v)[ FD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_30 $$ for (int i = 1; i < params.length; i++) -->Line_30 $$ for (int i = 1; i < params.length; i++) [ FD ]
Line_31 $$ Vector3f v = verticies.get(Integer.parseInt(params[i]) - 1)-->Line_32 $$ l.add(v)[ FD ]
