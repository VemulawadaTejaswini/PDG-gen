Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void createCodeLocation() [ CD ]
Line_2 $$ public void createCodeLocation() -->Line_3 $$ List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>()[ CD ]
Line_2 $$ public void createCodeLocation() -->Line_4 $$ project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectname)[ CD ]
Line_7 $$ IJavaProject javaProject = JavaCore.create(project)-->Line_7 $$ IJavaProject javaProject = JavaCore.create(project)[ CD ]
Line_8 $$ if (project.exists()) -->Line_8 $$ if (project.exists()) [ CD ]
Line_8 $$ if (project.exists()) -->Line_9 $$ project.delete(true, null)[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_12 $$ project.create(projectDescription, new NullProgressMonitor())[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_12 $$ project.create(projectDescription, new NullProgressMonitor())[ FD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_13 $$ String[] natureIds = projectDescription.getNatureIds()[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_13 $$ String[] natureIds = projectDescription.getNatureIds()[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_13 $$ String[] natureIds = projectDescription.getNatureIds()[ FD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_14 $$ if (natureIds == null) [ FD ]
Line_14 $$ if (natureIds == null) -->Line_15 $$ natureIds = new String[] [ CD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_15 $$ natureIds = new String[] [ FD ]
Line_15 $$ natureIds = new String[] -->Line_15 $$ natureIds = new String[] [ FD ]
Line_14 $$ if (natureIds == null) -->Line_17 $$ boolean hasJavaNature = false[ CD ]
Line_14 $$ if (natureIds == null) -->Line_18 $$ boolean hasPDENature = false[ CD ]
Line_14 $$ if (natureIds == null) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ CD ]
Line_14 $$ if (natureIds == null) -->Line_14 $$ if (natureIds == null) [ CD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ CD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ CD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_20 $$ if (JavaCore.NATURE_ID.equals(natureIds[i])) [ CD ]
Line_20 $$ if (JavaCore.NATURE_ID.equals(natureIds[i])) -->Line_20 $$ if (JavaCore.NATURE_ID.equals(natureIds[i])) [ CD ]
Line_20 $$ if (JavaCore.NATURE_ID.equals(natureIds[i])) -->Line_21 $$ hasJavaNature = true[ CD ]
Line_21 $$ hasJavaNature = true-->Line_21 $$ hasJavaNature = true[ FD ]
Line_17 $$ boolean hasJavaNature = false-->Line_21 $$ hasJavaNature = true[ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_23 $$ if ("org.eclipse.pde.PluginNature".equals(natureIds[i])) [ CD ]
Line_23 $$ if ("org.eclipse.pde.PluginNature".equals(natureIds[i])) -->Line_23 $$ if ("org.eclipse.pde.PluginNature".equals(natureIds[i])) [ CD ]
Line_23 $$ if ("org.eclipse.pde.PluginNature".equals(natureIds[i])) -->Line_24 $$ hasPDENature = true[ CD ]
Line_24 $$ hasPDENature = true-->Line_24 $$ hasPDENature = true[ FD ]
Line_18 $$ boolean hasPDENature = false-->Line_24 $$ hasPDENature = true[ FD ]
Line_14 $$ if (natureIds == null) -->Line_27 $$ if (!hasJavaNature) [ CD ]
Line_21 $$ hasJavaNature = true-->Line_27 $$ if (!hasJavaNature) [ FD ]
Line_17 $$ boolean hasJavaNature = false-->Line_27 $$ if (!hasJavaNature) [ FD ]
Line_27 $$ if (!hasJavaNature) -->Line_27 $$ if (!hasJavaNature) [ CD ]
Line_21 $$ hasJavaNature = true-->Line_27 $$ if (!hasJavaNature) [ FD ]
Line_17 $$ boolean hasJavaNature = false-->Line_27 $$ if (!hasJavaNature) [ FD ]
Line_27 $$ if (!hasJavaNature) -->Line_28 $$ String[] oldNatureIds = natureIds[ CD ]
Line_27 $$ if (!hasJavaNature) -->Line_29 $$ natureIds = new String[oldNatureIds.length + 1][ CD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_29 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_15 $$ natureIds = new String[] -->Line_29 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_29 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_29 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_27 $$ if (!hasJavaNature) -->Line_30 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ CD ]
Line_28 $$ String[] oldNatureIds = natureIds-->Line_30 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_30 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_15 $$ natureIds = new String[] -->Line_30 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_29 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_30 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_27 $$ if (!hasJavaNature) -->Line_31 $$ natureIds[oldNatureIds.length] = JavaCore.NATURE_ID[ CD ]
Line_14 $$ if (natureIds == null) -->Line_33 $$ if (!hasPDENature) [ CD ]
Line_24 $$ hasPDENature = true-->Line_33 $$ if (!hasPDENature) [ FD ]
Line_18 $$ boolean hasPDENature = false-->Line_33 $$ if (!hasPDENature) [ FD ]
Line_33 $$ if (!hasPDENature) -->Line_33 $$ if (!hasPDENature) [ CD ]
Line_24 $$ hasPDENature = true-->Line_33 $$ if (!hasPDENature) [ FD ]
Line_18 $$ boolean hasPDENature = false-->Line_33 $$ if (!hasPDENature) [ FD ]
Line_33 $$ if (!hasPDENature) -->Line_35 $$ natureIds = new String[oldNatureIds.length + 1][ CD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_35 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_15 $$ natureIds = new String[] -->Line_35 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_29 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_35 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_35 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_35 $$ natureIds = new String[oldNatureIds.length + 1][ FD ]
Line_33 $$ if (!hasPDENature) -->Line_36 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ CD ]
Line_28 $$ String[] oldNatureIds = natureIds-->Line_36 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_36 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_15 $$ natureIds = new String[] -->Line_36 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_29 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_36 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_35 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_36 $$ System.arraycopy(oldNatureIds, 0, natureIds, 0, oldNatureIds.length)[ FD ]
Line_33 $$ if (!hasPDENature) -->Line_37 $$ natureIds[oldNatureIds.length] = "org.eclipse.pde.PluginNature"[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_40 $$ projectDescription.setNatureIds(natureIds)[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_40 $$ projectDescription.setNatureIds(natureIds)[ FD ]
Line_13 $$ String[] natureIds = projectDescription.getNatureIds()-->Line_40 $$ projectDescription.setNatureIds(natureIds)[ FD ]
Line_15 $$ natureIds = new String[] -->Line_40 $$ projectDescription.setNatureIds(natureIds)[ FD ]
Line_29 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_40 $$ projectDescription.setNatureIds(natureIds)[ FD ]
Line_35 $$ natureIds = new String[oldNatureIds.length + 1]-->Line_40 $$ projectDescription.setNatureIds(natureIds)[ FD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()[ FD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_42 $$ if (builders == null) [ FD ]
Line_42 $$ if (builders == null) -->Line_43 $$ builders = new ICommand[0][ CD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_43 $$ builders = new ICommand[0][ FD ]
Line_43 $$ builders = new ICommand[0]-->Line_43 $$ builders = new ICommand[0][ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ FD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ CD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ CD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ FD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_48 $$ if ("org.eclipse.pde.ManifestBuilder".equals(builders[i].getBuilderName())) [ CD ]
Line_48 $$ if ("org.eclipse.pde.ManifestBuilder".equals(builders[i].getBuilderName())) -->Line_48 $$ if ("org.eclipse.pde.ManifestBuilder".equals(builders[i].getBuilderName())) [ CD ]
Line_48 $$ if ("org.eclipse.pde.ManifestBuilder".equals(builders[i].getBuilderName())) -->Line_49 $$ hasManifestBuilder = true[ CD ]
Line_49 $$ hasManifestBuilder = true-->Line_49 $$ hasManifestBuilder = true[ FD ]
Line_45 $$ boolean hasManifestBuilder = false-->Line_49 $$ hasManifestBuilder = true[ FD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_51 $$ if ("org.eclipse.pde.SchemaBuilder".equals(builders[i].getBuilderName())) [ CD ]
Line_51 $$ if ("org.eclipse.pde.SchemaBuilder".equals(builders[i].getBuilderName())) -->Line_51 $$ if ("org.eclipse.pde.SchemaBuilder".equals(builders[i].getBuilderName())) [ CD ]
Line_51 $$ if ("org.eclipse.pde.SchemaBuilder".equals(builders[i].getBuilderName())) -->Line_52 $$ hasSchemaBuilder = true[ CD ]
Line_52 $$ hasSchemaBuilder = true-->Line_52 $$ hasSchemaBuilder = true[ FD ]
Line_46 $$ boolean hasSchemaBuilder = false-->Line_52 $$ hasSchemaBuilder = true[ FD ]
Line_49 $$ hasManifestBuilder = true-->Line_55 $$ if (!hasManifestBuilder) [ FD ]
Line_45 $$ boolean hasManifestBuilder = false-->Line_55 $$ if (!hasManifestBuilder) [ FD ]
Line_55 $$ if (!hasManifestBuilder) -->Line_55 $$ if (!hasManifestBuilder) [ CD ]
Line_49 $$ hasManifestBuilder = true-->Line_55 $$ if (!hasManifestBuilder) [ FD ]
Line_45 $$ boolean hasManifestBuilder = false-->Line_55 $$ if (!hasManifestBuilder) [ FD ]
Line_55 $$ if (!hasManifestBuilder) -->Line_56 $$ ICommand[] oldBuilders = builders[ CD ]
Line_55 $$ if (!hasManifestBuilder) -->Line_57 $$ builders = new ICommand[oldBuilders.length + 1][ CD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_57 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_43 $$ builders = new ICommand[0]-->Line_57 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_57 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_57 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_55 $$ if (!hasManifestBuilder) -->Line_58 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ CD ]
Line_56 $$ ICommand[] oldBuilders = builders-->Line_58 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_58 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_43 $$ builders = new ICommand[0]-->Line_58 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_57 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_58 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_55 $$ if (!hasManifestBuilder) -->Line_59 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ CD ]
Line_59 $$ builders[oldBuilders.length] = projectDescription.newCommand()-->Line_59 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_59 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_59 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ FD ]
Line_55 $$ if (!hasManifestBuilder) -->Line_60 $$ builders[oldBuilders.length].setBuilderName("org.eclipse.pde.ManifestBuilder")[ CD ]
Line_52 $$ hasSchemaBuilder = true-->Line_62 $$ if (!hasSchemaBuilder) [ FD ]
Line_46 $$ boolean hasSchemaBuilder = false-->Line_62 $$ if (!hasSchemaBuilder) [ FD ]
Line_62 $$ if (!hasSchemaBuilder) -->Line_62 $$ if (!hasSchemaBuilder) [ CD ]
Line_52 $$ hasSchemaBuilder = true-->Line_62 $$ if (!hasSchemaBuilder) [ FD ]
Line_46 $$ boolean hasSchemaBuilder = false-->Line_62 $$ if (!hasSchemaBuilder) [ FD ]
Line_62 $$ if (!hasSchemaBuilder) -->Line_64 $$ builders = new ICommand[oldBuilders.length + 1][ CD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_64 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_43 $$ builders = new ICommand[0]-->Line_64 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_57 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_64 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_64 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_64 $$ builders = new ICommand[oldBuilders.length + 1][ FD ]
Line_62 $$ if (!hasSchemaBuilder) -->Line_65 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ CD ]
Line_56 $$ ICommand[] oldBuilders = builders-->Line_65 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_65 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_43 $$ builders = new ICommand[0]-->Line_65 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_57 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_65 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_64 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_65 $$ System.arraycopy(oldBuilders, 0, builders, 0, oldBuilders.length)[ FD ]
Line_62 $$ if (!hasSchemaBuilder) -->Line_66 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ CD ]
Line_66 $$ builders[oldBuilders.length] = projectDescription.newCommand()-->Line_66 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_66 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_66 $$ builders[oldBuilders.length] = projectDescription.newCommand()[ FD ]
Line_62 $$ if (!hasSchemaBuilder) -->Line_67 $$ builders[oldBuilders.length].setBuilderName("org.eclipse.pde.SchemaBuilder")[ CD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_69 $$ projectDescription.setBuildSpec(builders)[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_69 $$ projectDescription.setBuildSpec(builders)[ FD ]
Line_41 $$ ICommand[] builders = projectDescription.getBuildSpec()-->Line_69 $$ projectDescription.setBuildSpec(builders)[ FD ]
Line_43 $$ builders = new ICommand[0]-->Line_69 $$ projectDescription.setBuildSpec(builders)[ FD ]
Line_57 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_69 $$ projectDescription.setBuildSpec(builders)[ FD ]
Line_64 $$ builders = new ICommand[oldBuilders.length + 1]-->Line_69 $$ projectDescription.setBuildSpec(builders)[ FD ]
Line_6 $$ IProjectDescription projectDescription = null-->Line_71 $$ project.setDescription(projectDescription, new NullProgressMonitor())[ FD ]
Line_11 $$ projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectname)-->Line_71 $$ project.setDescription(projectDescription, new NullProgressMonitor())[ FD ]
Line_74 $$ IClasspathEntry sourceClasspathEntry = JavaCore.newSourceEntry(new Path("/" + projectname + "/src"))-->Line_74 $$ IClasspathEntry sourceClasspathEntry = JavaCore.newSourceEntry(new Path("/" + projectname + "/src"))[ CD ]
Line_3 $$ List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>()-->Line_75 $$ classpathEntries.add(0, sourceClasspathEntry)[ FD ]
Line_74 $$ IClasspathEntry sourceClasspathEntry = JavaCore.newSourceEntry(new Path("/" + projectname + "/src"))-->Line_75 $$ classpathEntries.add(0, sourceClasspathEntry)[ FD ]
Line_77 $$ String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project)-->Line_77 $$ String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project)[ CD ]
Line_77 $$ String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project)-->Line_78 $$ if ("1.5".equals(complianceLevel)) [ FD ]
Line_78 $$ if ("1.5".equals(complianceLevel)) -->Line_78 $$ if ("1.5".equals(complianceLevel)) [ CD ]
Line_77 $$ String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project)-->Line_78 $$ if ("1.5".equals(complianceLevel)) [ FD ]
Line_78 $$ if ("1.5".equals(complianceLevel)) -->Line_79 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"[ CD ]
Line_76 $$ String jreContainer = JavaRuntime.JRE_CONTAINER-->Line_79 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"[ FD ]
Line_79 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"-->Line_79 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"[ FD ]
Line_78 $$ if ("1.5".equals(complianceLevel)) -->Line_80 $$ if ("1.6".equals(complianceLevel)) [ CD ]
Line_77 $$ String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project)-->Line_80 $$ if ("1.6".equals(complianceLevel)) [ FD ]
Line_80 $$ if ("1.6".equals(complianceLevel)) -->Line_80 $$ if ("1.6".equals(complianceLevel)) [ CD ]
Line_77 $$ String complianceLevel = CodeGenUtil.EclipseUtil.getJavaComplianceLevel(project)-->Line_80 $$ if ("1.6".equals(complianceLevel)) [ FD ]
Line_80 $$ if ("1.6".equals(complianceLevel)) -->Line_81 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"[ CD ]
Line_76 $$ String jreContainer = JavaRuntime.JRE_CONTAINER-->Line_81 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"[ FD ]
Line_79 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"-->Line_81 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"[ FD ]
Line_81 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"-->Line_81 $$ jreContainer += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"[ FD ]
Line_3 $$ List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>()-->Line_83 $$ classpathEntries.add(JavaCore.newContainerEntry(new Path(jreContainer)))[ FD ]
Line_3 $$ List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>()-->Line_84 $$ classpathEntries.add(JavaCore.newContainerEntry(new Path("org.eclipse.pde.core.requiredPlugins")))[ FD ]
Line_7 $$ IJavaProject javaProject = JavaCore.create(project)-->Line_85 $$ javaProject.setOutputLocation(new Path("/" + projectname + "/bin"), new NullProgressMonitor())[ FD ]
Line_7 $$ IJavaProject javaProject = JavaCore.create(project)-->Line_86 $$ javaProject.setRawClasspath(classpathEntries.toArray(new IClasspathEntry[classpathEntries.size()]), new NullProgressMonitor())[ FD ]
Line_3 $$ List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>()-->Line_86 $$ javaProject.setRawClasspath(classpathEntries.toArray(new IClasspathEntry[classpathEntries.size()]), new NullProgressMonitor())[ FD ]
Line_3 $$ List<IClasspathEntry> classpathEntries = new UniqueEList<IClasspathEntry>()-->Line_86 $$ javaProject.setRawClasspath(classpathEntries.toArray(new IClasspathEntry[classpathEntries.size()]), new NullProgressMonitor())[ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ FD ]
Line_19 $$ for (int i = 0; i < natureIds.length; ++i) -->Line_19 $$ for (int i = 0; i < natureIds.length; ++i) [ FD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ FD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ FD ]
Line_47 $$ for (int i = 0; i < builders.length; ++i) -->Line_47 $$ for (int i = 0; i < builders.length; ++i) [ FD ]
