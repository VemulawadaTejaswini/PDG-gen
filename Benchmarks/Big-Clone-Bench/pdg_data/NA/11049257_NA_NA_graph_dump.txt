Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException [ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_3 $$ MessageDigest messagedigest[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_4 $$ StringBuilder stringbuffer = new StringBuilder()[ CD ]
Line_3 $$ MessageDigest messagedigest-->Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")-->Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")-->Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_10 $$ StringBuffer stringbuffer2[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_11 $$ InetAddress inetaddress = InetAddress.getLocalHost()[ CD ]
Line_11 $$ InetAddress inetaddress = InetAddress.getLocalHost()-->Line_11 $$ InetAddress inetaddress = InetAddress.getLocalHost()[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_12 $$ long l = System.currentTimeMillis()[ CD ]
Line_12 $$ long l = System.currentTimeMillis()-->Line_12 $$ long l = System.currentTimeMillis()[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_13 $$ long l1 = 0L[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_14 $$ if (secure)[ CD ]
Line_14 $$ if (secure)-->Line_14 $$ l1 = _secureRand.nextLong()[ CD ]
Line_13 $$ long l1 = 0L-->Line_14 $$ l1 = _secureRand.nextLong()[ FD ]
Line_14 $$ l1 = _secureRand.nextLong()-->Line_14 $$ l1 = _secureRand.nextLong()[ FD ]
Line_14 $$ l1 = _secureRand.nextLong()-->Line_14 $$ l1 = _secureRand.nextLong()[ CD ]
Line_14 $$ if (secure)-->Line_14 $$ l1 = _rand.nextLong()[ CD ]
Line_13 $$ long l1 = 0L-->Line_14 $$ l1 = _rand.nextLong()[ FD ]
Line_14 $$ l1 = _secureRand.nextLong()-->Line_14 $$ l1 = _rand.nextLong()[ FD ]
Line_14 $$ l1 = _rand.nextLong()-->Line_14 $$ l1 = _rand.nextLong()[ FD ]
Line_14 $$ l1 = _rand.nextLong()-->Line_14 $$ l1 = _rand.nextLong()[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_15 $$ stringbuffer.append(inetaddress.toString())[ CD ]
Line_4 $$ StringBuilder stringbuffer = new StringBuilder()-->Line_15 $$ stringbuffer.append(inetaddress.toString())[ FD ]
Line_11 $$ InetAddress inetaddress = InetAddress.getLocalHost()-->Line_15 $$ stringbuffer.append(inetaddress.toString())[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_16 $$ stringbuffer.append(":")[ CD ]
Line_4 $$ StringBuilder stringbuffer = new StringBuilder()-->Line_16 $$ stringbuffer.append(":")[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_17 $$ stringbuffer.append(Long.toString(l))[ CD ]
Line_4 $$ StringBuilder stringbuffer = new StringBuilder()-->Line_17 $$ stringbuffer.append(Long.toString(l))[ FD ]
Line_12 $$ long l = System.currentTimeMillis()-->Line_17 $$ stringbuffer.append(Long.toString(l))[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_18 $$ stringbuffer.append(":")[ CD ]
Line_4 $$ StringBuilder stringbuffer = new StringBuilder()-->Line_18 $$ stringbuffer.append(":")[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_19 $$ stringbuffer.append(Long.toString(l1))[ CD ]
Line_4 $$ StringBuilder stringbuffer = new StringBuilder()-->Line_19 $$ stringbuffer.append(Long.toString(l1))[ FD ]
Line_13 $$ long l1 = 0L-->Line_19 $$ stringbuffer.append(Long.toString(l1))[ FD ]
Line_14 $$ l1 = _secureRand.nextLong()-->Line_19 $$ stringbuffer.append(Long.toString(l1))[ FD ]
Line_14 $$ l1 = _rand.nextLong()-->Line_19 $$ stringbuffer.append(Long.toString(l1))[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_20 $$ messagedigest.update(stringbuffer.toString().getBytes())[ CD ]
Line_3 $$ MessageDigest messagedigest-->Line_20 $$ messagedigest.update(stringbuffer.toString().getBytes())[ FD ]
Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")-->Line_20 $$ messagedigest.update(stringbuffer.toString().getBytes())[ FD ]
Line_4 $$ StringBuilder stringbuffer = new StringBuilder()-->Line_20 $$ messagedigest.update(stringbuffer.toString().getBytes())[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_21 $$ byte abyte0[] = messagedigest.digest()[ CD ]
Line_21 $$ byte abyte0[] = messagedigest.digest()-->Line_21 $$ byte abyte0[] = messagedigest.digest()[ CD ]
Line_3 $$ MessageDigest messagedigest-->Line_21 $$ byte abyte0[] = messagedigest.digest()[ FD ]
Line_6 $$ messagedigest = MessageDigest.getInstance("MD5")-->Line_21 $$ byte abyte0[] = messagedigest.digest()[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_22 $$ StringBuffer stringbuffer1 = new StringBuffer()[ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ CD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException [ CD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_24 $$ int j = abyte0[i] & 0xff[ CD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_25 $$ if (j < 16)[ CD ]
Line_24 $$ int j = abyte0[i] & 0xff-->Line_25 $$ if (j < 16)[ FD ]
Line_25 $$ if (j < 16)-->Line_25 $$ stringbuffer1.append('0')[ CD ]
Line_22 $$ StringBuffer stringbuffer1 = new StringBuffer()-->Line_25 $$ stringbuffer1.append('0')[ FD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_26 $$ stringbuffer1.append(Integer.toHexString(j))[ CD ]
Line_22 $$ StringBuffer stringbuffer1 = new StringBuffer()-->Line_26 $$ stringbuffer1.append(Integer.toHexString(j))[ FD ]
Line_24 $$ int j = abyte0[i] & 0xff-->Line_26 $$ stringbuffer1.append(Integer.toHexString(j))[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_28 $$ String s = stringbuffer1.toString()[ CD ]
Line_28 $$ String s = stringbuffer1.toString()-->Line_28 $$ String s = stringbuffer1.toString()[ CD ]
Line_22 $$ StringBuffer stringbuffer1 = new StringBuffer()-->Line_28 $$ String s = stringbuffer1.toString()[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_29 $$ stringbuffer2 = new StringBuffer()[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_29 $$ stringbuffer2 = new StringBuffer()[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_29 $$ stringbuffer2 = new StringBuffer()[ FD ]
Line_2 $$ public static String generate(boolean secure, boolean sep) throws UnknownHostException -->Line_30 $$ if (sep) [ CD ]
Line_30 $$ if (sep) -->Line_31 $$ stringbuffer2.append(s.substring(0, 8))[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_31 $$ stringbuffer2.append(s.substring(0, 8))[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_31 $$ stringbuffer2.append(s.substring(0, 8))[ FD ]
Line_28 $$ String s = stringbuffer1.toString()-->Line_31 $$ stringbuffer2.append(s.substring(0, 8))[ FD ]
Line_30 $$ if (sep) -->Line_32 $$ stringbuffer2.append("-")[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_32 $$ stringbuffer2.append("-")[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_32 $$ stringbuffer2.append("-")[ FD ]
Line_30 $$ if (sep) -->Line_33 $$ stringbuffer2.append(s.substring(8, 12))[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_33 $$ stringbuffer2.append(s.substring(8, 12))[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_33 $$ stringbuffer2.append(s.substring(8, 12))[ FD ]
Line_28 $$ String s = stringbuffer1.toString()-->Line_33 $$ stringbuffer2.append(s.substring(8, 12))[ FD ]
Line_30 $$ if (sep) -->Line_34 $$ stringbuffer2.append("-")[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_34 $$ stringbuffer2.append("-")[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_34 $$ stringbuffer2.append("-")[ FD ]
Line_30 $$ if (sep) -->Line_35 $$ stringbuffer2.append(s.substring(12, 16))[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_35 $$ stringbuffer2.append(s.substring(12, 16))[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_35 $$ stringbuffer2.append(s.substring(12, 16))[ FD ]
Line_28 $$ String s = stringbuffer1.toString()-->Line_35 $$ stringbuffer2.append(s.substring(12, 16))[ FD ]
Line_30 $$ if (sep) -->Line_36 $$ stringbuffer2.append("-")[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_36 $$ stringbuffer2.append("-")[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_36 $$ stringbuffer2.append("-")[ FD ]
Line_30 $$ if (sep) -->Line_37 $$ stringbuffer2.append(s.substring(16, 20))[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_37 $$ stringbuffer2.append(s.substring(16, 20))[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_37 $$ stringbuffer2.append(s.substring(16, 20))[ FD ]
Line_28 $$ String s = stringbuffer1.toString()-->Line_37 $$ stringbuffer2.append(s.substring(16, 20))[ FD ]
Line_30 $$ if (sep) -->Line_38 $$ stringbuffer2.append("-")[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_38 $$ stringbuffer2.append("-")[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_38 $$ stringbuffer2.append("-")[ FD ]
Line_30 $$ if (sep) -->Line_39 $$ stringbuffer2.append(s.substring(20))[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_39 $$ stringbuffer2.append(s.substring(20))[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_39 $$ stringbuffer2.append(s.substring(20))[ FD ]
Line_28 $$ String s = stringbuffer1.toString()-->Line_39 $$ stringbuffer2.append(s.substring(20))[ FD ]
Line_30 $$ if (sep) -->Line_40 $$ return stringbuffer2.toString()[ CD ]
Line_40 $$ return stringbuffer2.toString()-->Line_40 $$ return stringbuffer2.toString()[ CD ]
Line_10 $$ StringBuffer stringbuffer2-->Line_40 $$ return stringbuffer2.toString()[ FD ]
Line_29 $$ stringbuffer2 = new StringBuffer()-->Line_40 $$ return stringbuffer2.toString()[ FD ]
Line_30 $$ if (sep) -->Line_42 $$ return s[ CD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < abyte0.length; i++) -->Line_23 $$ for (int i = 0; i < abyte0.length; i++) [ FD ]
Line_24 $$ int j = abyte0[i] & 0xff-->Line_25 $$ if (j < 16)[ FD ]
Line_24 $$ int j = abyte0[i] & 0xff-->Line_26 $$ stringbuffer1.append(Integer.toHexString(j))[ FD ]
