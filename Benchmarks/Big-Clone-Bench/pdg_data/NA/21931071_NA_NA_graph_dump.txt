Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_3 $$ File temp = new File("_temp")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_5 $$ BufferedReader tr = new BufferedReader(new FileReader(temp))[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_7 $$ HashSet<ModelGraphVertex> dests = new HashSet<ModelGraphVertex>()[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_8 $$ ArrayList transitions = ts.getEdges()[ CD ]
Line_8 $$ ArrayList transitions = ts.getEdges()-->Line_8 $$ ArrayList transitions = ts.getEdges()[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_8 $$ ArrayList transitions = ts.getEdges()[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_9 $$ HashSet<String> events = new HashSet<String>()[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException [ CD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ CD ]
Line_8 $$ ArrayList transitions = ts.getEdges()-->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ CD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ CD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)[ CD ]
Line_8 $$ ArrayList transitions = ts.getEdges()-->Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)[ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)[ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_12 $$ events.add(replaceBadSymbols(transition.getIdentifier()))[ CD ]
Line_9 $$ HashSet<String> events = new HashSet<String>()-->Line_12 $$ events.add(replaceBadSymbols(transition.getIdentifier()))[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_12 $$ events.add(replaceBadSymbols(transition.getIdentifier()))[ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_13 $$ sources.add(transition.getSource())[ CD ]
Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()-->Line_13 $$ sources.add(transition.getSource())[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_13 $$ sources.add(transition.getSource())[ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_14 $$ dests.add(transition.getDest())[ CD ]
Line_7 $$ HashSet<ModelGraphVertex> dests = new HashSet<ModelGraphVertex>()-->Line_14 $$ dests.add(transition.getDest())[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_14 $$ dests.add(transition.getDest())[ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) [ FD ]
Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_16 $$ tw.write("s" + transition.getSource().getId() + " ")[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_16 $$ tw.write("s" + transition.getSource().getId() + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_16 $$ tw.write("s" + transition.getSource().getId() + " ")[ FD ]
Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_17 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_17 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_17 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ FD ]
Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_18 $$ tw.write("s" + transition.getDest().getId() + "\n")[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_18 $$ tw.write("s" + transition.getDest().getId() + "\n")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_18 $$ tw.write("s" + transition.getDest().getId() + "\n")[ FD ]
Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_20 $$ tw.write(replaceBadSymbols(transition.getSource().getIdentifier()) + " ")[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_20 $$ tw.write(replaceBadSymbols(transition.getSource().getIdentifier()) + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_20 $$ tw.write(replaceBadSymbols(transition.getSource().getIdentifier()) + " ")[ FD ]
Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_21 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_21 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_21 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ FD ]
Line_15 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_22 $$ tw.write(replaceBadSymbols(transition.getDest().getIdentifier()) + "\n")[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_22 $$ tw.write(replaceBadSymbols(transition.getDest().getIdentifier()) + "\n")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_22 $$ tw.write(replaceBadSymbols(transition.getDest().getIdentifier()) + "\n")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_25 $$ tw.close()[ CD ]
Line_4 $$ BufferedWriter tw = new BufferedWriter(new FileWriter(temp))-->Line_25 $$ tw.close()[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_26 $$ bw.write(".model " + ts.getName().replaceAll(" ", "_") + "\n")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_26 $$ bw.write(".model " + ts.getName().replaceAll(" ", "_") + "\n")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_26 $$ bw.write(".model " + ts.getName().replaceAll(" ", "_") + "\n")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_27 $$ bw.write(".dummy ")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_27 $$ bw.write(".dummy ")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_28 $$ Iterator it = events.iterator()[ CD ]
Line_28 $$ Iterator it = events.iterator()-->Line_28 $$ Iterator it = events.iterator()[ CD ]
Line_9 $$ HashSet<String> events = new HashSet<String>()-->Line_28 $$ Iterator it = events.iterator()[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_29 $$ while (it.hasNext()) bw.write(it.next() + " ")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException [ CD ]
Line_29 $$ while (it.hasNext()) bw.write(it.next() + " ")-->Line_29 $$ while (it.hasNext()) bw.write(it.next() + " ")[ CD ]
Line_28 $$ Iterator it = events.iterator()-->Line_29 $$ while (it.hasNext()) bw.write(it.next() + " ")[ FD ]
Line_29 $$ while (it.hasNext()) bw.write(it.next() + " ")-->Line_29 $$ bw.write(it.next() + " ")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_29 $$ bw.write(it.next() + " ")[ FD ]
Line_28 $$ Iterator it = events.iterator()-->Line_29 $$ bw.write(it.next() + " ")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_30 $$ bw.write("\n")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_30 $$ bw.write("\n")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_31 $$ bw.write(".state graph" + "\n")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_31 $$ bw.write(".state graph" + "\n")[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_32 $$ int c[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException [ CD ]
Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)-->Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)[ FD ]
Line_32 $$ int c-->Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)[ FD ]
Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)-->Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)[ CD ]
Line_5 $$ BufferedReader tr = new BufferedReader(new FileReader(temp))-->Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)[ FD ]
Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)-->Line_33 $$ bw.write(c)[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_33 $$ bw.write(c)[ FD ]
Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)-->Line_33 $$ bw.write(c)[ FD ]
Line_32 $$ int c-->Line_33 $$ bw.write(c)[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_34 $$ tr.close()[ CD ]
Line_5 $$ BufferedReader tr = new BufferedReader(new FileReader(temp))-->Line_34 $$ tr.close()[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_35 $$ temp.delete()[ CD ]
Line_3 $$ File temp = new File("_temp")-->Line_35 $$ temp.delete()[ FD ]
Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()-->Line_37 $$ if (sources.contains(dest)) [ FD ]
Line_36 $$ for (ModelGraphVertex dest : dests) -->Line_37 $$ if (sources.contains(dest)) [ FD ]
Line_37 $$ if (sources.contains(dest)) -->Line_37 $$ if (sources.contains(dest)) [ CD ]
Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()-->Line_37 $$ if (sources.contains(dest)) [ FD ]
Line_36 $$ for (ModelGraphVertex dest : dests) -->Line_37 $$ if (sources.contains(dest)) [ FD ]
Line_37 $$ if (sources.contains(dest)) -->Line_38 $$ sources.remove(dest)[ CD ]
Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()-->Line_38 $$ sources.remove(dest)[ FD ]
Line_36 $$ for (ModelGraphVertex dest : dests) -->Line_38 $$ sources.remove(dest)[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_41 $$ ModelGraphVertex source = sources.isEmpty() ? null : sources.iterator().next()[ CD ]
Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()-->Line_41 $$ ModelGraphVertex source = sources.isEmpty() ? null : sources.iterator().next()[ FD ]
Line_6 $$ HashSet<ModelGraphVertex> sources = new HashSet<ModelGraphVertex>()-->Line_41 $$ ModelGraphVertex source = sources.isEmpty() ? null : sources.iterator().next()[ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_42 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_42 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) [ FD ]
Line_42 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_43 $$ if (!ts.hasExplicitEnd())[ CD ]
Line_43 $$ if (!ts.hasExplicitEnd())-->Line_43 $$ if (!ts.hasExplicitEnd())[ CD ]
Line_43 $$ if (!ts.hasExplicitEnd())-->Line_43 $$ if (!ts.hasExplicitEnd())[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_43 $$ if (!ts.hasExplicitEnd())[ FD ]
Line_43 $$ if (!ts.hasExplicitEnd())-->Line_43 $$ bw.write(".marking [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_43 $$ bw.write(".marking [ FD ]
Line_43 $$ if (!ts.hasExplicitEnd())-->Line_43 $$ bw.write(".marking [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_43 $$ bw.write(".marking [ FD ]
Line_41 $$ ModelGraphVertex source = sources.isEmpty() ? null : sources.iterator().next()-->Line_43 $$ bw.write(".marking [ FD ]
Line_42 $$ if (ts.getStateNameFlag() == TransitionSystem.ID) -->Line_44 $$ if (source != null) [ CD ]
Line_41 $$ ModelGraphVertex source = sources.isEmpty() ? null : sources.iterator().next()-->Line_44 $$ if (source != null) [ FD ]
Line_44 $$ if (source != null) -->Line_45 $$ bw.write(".marking [ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_45 $$ bw.write(".marking [ FD ]
Line_41 $$ ModelGraphVertex source = sources.isEmpty() ? null : sources.iterator().next()-->Line_45 $$ bw.write(".marking [ FD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_47 $$ bw.write(".end")[ CD ]
Line_2 $$ public static void writeToPetrify(TransitionSystem ts, Writer bw) throws IOException -->Line_47 $$ bw.write(".end")[ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_10 $$ for (int i = 0; i < transitions.size(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < transitions.size(); i++) -->Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_12 $$ events.add(replaceBadSymbols(transition.getIdentifier()))[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_13 $$ sources.add(transition.getSource())[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_14 $$ dests.add(transition.getDest())[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_16 $$ tw.write("s" + transition.getSource().getId() + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_17 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_18 $$ tw.write("s" + transition.getDest().getId() + "\n")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_20 $$ tw.write(replaceBadSymbols(transition.getSource().getIdentifier()) + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_21 $$ tw.write(replaceBadSymbols(transition.getIdentifier()) + " ")[ FD ]
Line_11 $$ TransitionSystemEdge transition = (TransitionSystemEdge) transitions.get(i)-->Line_22 $$ tw.write(replaceBadSymbols(transition.getDest().getIdentifier()) + "\n")[ FD ]
Line_33 $$ while ((c = tr.read()) != -1) bw.write(c)-->Line_33 $$ bw.write(c)[ FD ]
