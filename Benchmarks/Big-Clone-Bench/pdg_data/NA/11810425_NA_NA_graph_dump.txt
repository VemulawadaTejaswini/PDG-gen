Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static String createBoundary(int number) [ CD ]
Line_2 $$ private static String createBoundary(int number) -->Line_3 $$ MessageDigest digest[ CD ]
Line_3 $$ MessageDigest digest-->Line_5 $$ digest = MessageDigest.getInstance("MD5")[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_5 $$ digest = MessageDigest.getInstance("MD5")[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_5 $$ digest = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ private static String createBoundary(int number) -->Line_9 $$ digest.update(String.valueOf(Math.random()).getBytes())[ CD ]
Line_3 $$ MessageDigest digest-->Line_9 $$ digest.update(String.valueOf(Math.random()).getBytes())[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_9 $$ digest.update(String.valueOf(Math.random()).getBytes())[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_10 $$ digest.update(String.valueOf(System.currentTimeMillis()).getBytes())[ CD ]
Line_3 $$ MessageDigest digest-->Line_10 $$ digest.update(String.valueOf(System.currentTimeMillis()).getBytes())[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_10 $$ digest.update(String.valueOf(System.currentTimeMillis()).getBytes())[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_11 $$ digest.update(String.valueOf(digest.hashCode()).getBytes())[ CD ]
Line_3 $$ MessageDigest digest-->Line_11 $$ digest.update(String.valueOf(digest.hashCode()).getBytes())[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_11 $$ digest.update(String.valueOf(digest.hashCode()).getBytes())[ FD ]
Line_3 $$ MessageDigest digest-->Line_11 $$ digest.update(String.valueOf(digest.hashCode()).getBytes())[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_11 $$ digest.update(String.valueOf(digest.hashCode()).getBytes())[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_12 $$ byte[] bytes = digest.digest()[ CD ]
Line_12 $$ byte[] bytes = digest.digest()-->Line_12 $$ byte[] bytes = digest.digest()[ CD ]
Line_3 $$ MessageDigest digest-->Line_12 $$ byte[] bytes = digest.digest()[ FD ]
Line_5 $$ digest = MessageDigest.getInstance("MD5")-->Line_12 $$ byte[] bytes = digest.digest()[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_13 $$ String paddedNumber = Integer.toString(number)[ CD ]
Line_13 $$ String paddedNumber = Integer.toString(number)-->Line_13 $$ String paddedNumber = Integer.toString(number)[ CD ]
Line_2 $$ private static String createBoundary(int number) -->Line_13 $$ String paddedNumber = Integer.toString(number)[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)[ CD ]
Line_13 $$ String paddedNumber = Integer.toString(number)-->Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)[ FD ]
Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)-->Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)[ FD ]
Line_13 $$ String paddedNumber = Integer.toString(number)-->Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)[ FD ]
Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)-->Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_15 $$ StringBuffer buffer = new StringBuffer()[ CD ]
Line_2 $$ private static String createBoundary(int number) -->Line_16 $$ buffer.append("---------------------------------=__")[ CD ]
Line_15 $$ StringBuffer buffer = new StringBuffer()-->Line_16 $$ buffer.append("---------------------------------=__")[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_17 $$ for (int i = 0; i < 8; i++) [ CD ]
Line_2 $$ private static String createBoundary(int number) -->Line_2 $$ private static String createBoundary(int number) [ CD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_17 $$ for (int i = 0; i < 8; i++) [ CD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_17 $$ for (int i = 0; i < 8; i++) [ CD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_17 $$ for (int i = 0; i < 8; i++) [ FD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_18 $$ String hex = Integer.toHexString((bytes[i] & 0xff) + 0x100).substring(1)[ CD ]
Line_18 $$ String hex = Integer.toHexString((bytes[i] & 0xff) + 0x100).substring(1)-->Line_18 $$ String hex = Integer.toHexString((bytes[i] & 0xff) + 0x100).substring(1)[ CD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_19 $$ buffer.append(hex)[ CD ]
Line_15 $$ StringBuffer buffer = new StringBuffer()-->Line_19 $$ buffer.append(hex)[ FD ]
Line_18 $$ String hex = Integer.toHexString((bytes[i] & 0xff) + 0x100).substring(1)-->Line_19 $$ buffer.append(hex)[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_21 $$ buffer.append('_')[ CD ]
Line_15 $$ StringBuffer buffer = new StringBuffer()-->Line_21 $$ buffer.append('_')[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_22 $$ buffer.append(paddedNumber)[ CD ]
Line_15 $$ StringBuffer buffer = new StringBuffer()-->Line_22 $$ buffer.append(paddedNumber)[ FD ]
Line_13 $$ String paddedNumber = Integer.toString(number)-->Line_22 $$ buffer.append(paddedNumber)[ FD ]
Line_14 $$ paddedNumber = ("0000000000".substring(0, 10 - paddedNumber.length()) + paddedNumber)-->Line_22 $$ buffer.append(paddedNumber)[ FD ]
Line_2 $$ private static String createBoundary(int number) -->Line_23 $$ return buffer.toString()[ CD ]
Line_23 $$ return buffer.toString()-->Line_23 $$ return buffer.toString()[ CD ]
Line_15 $$ StringBuffer buffer = new StringBuffer()-->Line_23 $$ return buffer.toString()[ FD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_17 $$ for (int i = 0; i < 8; i++) [ FD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_17 $$ for (int i = 0; i < 8; i++) [ FD ]
Line_17 $$ for (int i = 0; i < 8; i++) -->Line_17 $$ for (int i = 0; i < 8; i++) [ FD ]
Line_18 $$ String hex = Integer.toHexString((bytes[i] & 0xff) + 0x100).substring(1)-->Line_19 $$ buffer.append(hex)[ FD ]
