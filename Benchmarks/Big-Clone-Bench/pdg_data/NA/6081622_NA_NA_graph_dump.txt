Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) [ CD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_3 $$ String encrypted_value = ""[ CD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_4 $$ char xdigit[] = [ CD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_5 $$ MessageDigest messageDigest[ CD ]
Line_5 $$ MessageDigest messageDigest-->Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_13 $$ if (to_be_encrypted != null) [ CD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_13 $$ if (to_be_encrypted != null) [ FD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_14 $$ byte digest[][ CD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_15 $$ byte fudge_constant[][ CD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_21 $$ byte fudgetoo_part[] = [ CD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_22 $$ int i = 0[ CD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_23 $$ if (aKey != null) [ CD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_23 $$ if (aKey != null) [ FD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_25 $$ fudgetoo_part = aKey.getBytes("UTF8")[ FD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_27 $$ fudgetoo_part = aKey.getBytes()[ FD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_30 $$ messageDigest.update(fudge_constant)[ CD ]
Line_5 $$ MessageDigest messageDigest-->Line_30 $$ messageDigest.update(fudge_constant)[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_30 $$ messageDigest.update(fudge_constant)[ FD ]
Line_5 $$ MessageDigest messageDigest-->Line_32 $$ messageDigest.update(to_be_encrypted.getBytes("UTF8"))[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_32 $$ messageDigest.update(to_be_encrypted.getBytes("UTF8"))[ FD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_32 $$ messageDigest.update(to_be_encrypted.getBytes("UTF8"))[ FD ]
Line_5 $$ MessageDigest messageDigest-->Line_34 $$ messageDigest.update(to_be_encrypted.getBytes())[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_34 $$ messageDigest.update(to_be_encrypted.getBytes())[ FD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_34 $$ messageDigest.update(to_be_encrypted.getBytes())[ FD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_36 $$ messageDigest.update(fudgetoo_part)[ CD ]
Line_5 $$ MessageDigest messageDigest-->Line_36 $$ messageDigest.update(fudgetoo_part)[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_36 $$ messageDigest.update(fudgetoo_part)[ FD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_37 $$ digest = messageDigest.digest()[ CD ]
Line_5 $$ MessageDigest messageDigest-->Line_37 $$ digest = messageDigest.digest()[ FD ]
Line_7 $$ messageDigest = MessageDigest.getInstance("MD5")-->Line_37 $$ digest = messageDigest.digest()[ FD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_38 $$ encrypted_value = new String(fudgetoo_part)[ CD ]
Line_3 $$ String encrypted_value = ""-->Line_38 $$ encrypted_value = new String(fudgetoo_part)[ FD ]
Line_38 $$ encrypted_value = new String(fudgetoo_part)-->Line_38 $$ encrypted_value = new String(fudgetoo_part)[ FD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ CD ]
Line_13 $$ if (to_be_encrypted != null) -->Line_13 $$ if (to_be_encrypted != null) [ CD ]
Line_22 $$ int i = 0-->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_22 $$ int i = 0-->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_22 $$ int i = 0-->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_40 $$ int mashed[ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_41 $$ char temp[] = new char[2][ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_42 $$ if (digest[i] < 0) [ CD ]
Line_42 $$ if (digest[i] < 0) -->Line_43 $$ mashed = 127 + (-1 * digest[i])[ CD ]
Line_40 $$ int mashed-->Line_43 $$ mashed = 127 + (-1 * digest[i])[ FD ]
Line_43 $$ mashed = 127 + (-1 * digest[i])-->Line_43 $$ mashed = 127 + (-1 * digest[i])[ FD ]
Line_42 $$ if (digest[i] < 0) -->Line_45 $$ mashed = digest[i][ CD ]
Line_40 $$ int mashed-->Line_45 $$ mashed = digest[i][ FD ]
Line_43 $$ mashed = 127 + (-1 * digest[i])-->Line_45 $$ mashed = digest[i][ FD ]
Line_45 $$ mashed = digest[i]-->Line_45 $$ mashed = digest[i][ FD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_47 $$ temp[0] = xdigit[mashed / 16][ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_48 $$ temp[1] = xdigit[mashed % 16][ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ CD ]
Line_49 $$ encrypted_value = encrypted_value + (new String(temp))-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
Line_3 $$ String encrypted_value = ""-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
Line_38 $$ encrypted_value = new String(fudgetoo_part)-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
Line_49 $$ encrypted_value = encrypted_value + (new String(temp))-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
Line_3 $$ String encrypted_value = ""-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
Line_38 $$ encrypted_value = new String(fudgetoo_part)-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
Line_2 $$ public String encryptStringWithKey(String to_be_encrypted, String aKey) -->Line_52 $$ return encrypted_value[ CD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_39 $$ for (i = 0; i < digest.length; i++) -->Line_39 $$ for (i = 0; i < digest.length; i++) [ FD ]
Line_49 $$ encrypted_value = encrypted_value + (new String(temp))-->Line_49 $$ encrypted_value = encrypted_value + (new String(temp))[ FD ]
