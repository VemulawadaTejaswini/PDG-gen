Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(final String[] args) [ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_3 $$ if ((args.length < 1)) [ CD ]
Line_3 $$ if ((args.length < 1)) -->Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"[ CD ]
Line_3 $$ if ((args.length < 1)) -->Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"[ FD ]
Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"-->Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"[ FD ]
Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"-->Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"[ FD ]
Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"-->Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_8 $$ sUsage += "5. _UID<=user id> \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_8 $$ sUsage += "5. _UID<=user id> \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_8 $$ sUsage += "5. _UID<=user id> \r\n"[ FD ]
Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"-->Line_8 $$ sUsage += "5. _UID<=user id> \r\n"[ FD ]
Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"-->Line_8 $$ sUsage += "5. _UID<=user id> \r\n"[ FD ]
Line_8 $$ sUsage += "5. _UID<=user id> \r\n"-->Line_8 $$ sUsage += "5. _UID<=user id> \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ FD ]
Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"-->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ FD ]
Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"-->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ FD ]
Line_8 $$ sUsage += "5. _UID<=user id> \r\n"-->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ FD ]
Line_9 $$ sUsage += "6. _PWD=<password> \r\n"-->Line_9 $$ sUsage += "6. _PWD=<password> \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_8 $$ sUsage += "5. _UID<=user id> \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_9 $$ sUsage += "6. _PWD=<password> \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"-->Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ CD ]
Line_4 $$ String sUsage = "1. _BIZVIEW=<filename>or<XAware Bizview name> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_5 $$ sUsage += "2. _OUTPUT=DISPLAY|NONE|FILE \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_6 $$ sUsage += "3. _GEN_OUT=<output filename> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_7 $$ sUsage += "4. _POST or _XADATA=<xml data file> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_8 $$ sUsage += "5. _UID<=user id> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_9 $$ sUsage += "6. _PWD=<password> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_10 $$ sUsage += "7. _URL=<appserver url> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_11 $$ sUsage += "8. <param>=<value> \r\n"-->Line_11 $$ sUsage += "8. <param>=<value> \r\n"[ FD ]
Line_3 $$ if ((args.length < 1)) -->Line_12 $$ System.out.println("Usage: java XABizDoc. Other optional parameters include\r\n" + sUsage)[ CD ]
Line_3 $$ if ((args.length < 1)) -->Line_13 $$ return[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_15 $$ final String sHomeDir = System.getProperty("xaware.home")[ CD ]
Line_15 $$ final String sHomeDir = System.getProperty("xaware.home")-->Line_15 $$ final String sHomeDir = System.getProperty("xaware.home")[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_16 $$ if (sHomeDir == null) [ CD ]
Line_15 $$ final String sHomeDir = System.getProperty("xaware.home")-->Line_16 $$ if (sHomeDir == null) [ FD ]
Line_16 $$ if (sHomeDir == null) -->Line_17 $$ System.out.println("System property xaware.home not set. Please set xaware.home to XAware installation root directory")[ CD ]
Line_16 $$ if (sHomeDir == null) -->Line_18 $$ return[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_20 $$ if (new File(sHomeDir).isDirectory() == false) [ CD ]
Line_20 $$ if (new File(sHomeDir).isDirectory() == false) -->Line_21 $$ System.out.println(sHomeDir + " is not a valid directory. Please check value of xaware.home system property")[ CD ]
Line_20 $$ if (new File(sHomeDir).isDirectory() == false) -->Line_22 $$ return[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_24 $$ System.out.println("Starting XAServletBizDoc Version:" + version)[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_27 $$ String filename = args[0][ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_28 $$ if (args[0].startsWith(BIZVIEW)) [ CD ]
Line_28 $$ if (args[0].startsWith(BIZVIEW)) -->Line_28 $$ if (args[0].startsWith(BIZVIEW)) [ CD ]
Line_28 $$ if (args[0].startsWith(BIZVIEW)) -->Line_29 $$ filename = args[0].substring(BIZVIEW.length() + 1)[ CD ]
Line_27 $$ String filename = args[0]-->Line_29 $$ filename = args[0].substring(BIZVIEW.length() + 1)[ FD ]
Line_29 $$ filename = args[0].substring(BIZVIEW.length() + 1)-->Line_29 $$ filename = args[0].substring(BIZVIEW.length() + 1)[ FD ]
Line_29 $$ filename = args[0].substring(BIZVIEW.length() + 1)-->Line_29 $$ filename = args[0].substring(BIZVIEW.length() + 1)[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_31 $$ if (args[0].startsWith(XQUERY)) [ CD ]
Line_31 $$ if (args[0].startsWith(XQUERY)) -->Line_31 $$ if (args[0].startsWith(XQUERY)) [ CD ]
Line_31 $$ if (args[0].startsWith(XQUERY)) -->Line_32 $$ sXQuery = args[0].substring(XQUERY.length() + 1)[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_2 $$ public static void main(final String[] args) [ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_35 $$ if (args[i].startsWith(SAXDRIVER)) [ CD ]
Line_35 $$ if (args[i].startsWith(SAXDRIVER)) -->Line_35 $$ if (args[i].startsWith(SAXDRIVER)) [ CD ]
Line_35 $$ if (args[i].startsWith(SAXDRIVER)) -->Line_36 $$ saxDriverClass = args[i].substring(SAXDRIVER.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_39 $$ if (args[i].startsWith(OUTPUT)) [ CD ]
Line_39 $$ if (args[i].startsWith(OUTPUT)) -->Line_39 $$ if (args[i].startsWith(OUTPUT)) [ CD ]
Line_39 $$ if (args[i].startsWith(OUTPUT)) -->Line_40 $$ sOutput = args[i].substring(OUTPUT.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_43 $$ if (args[i].startsWith(FACTORY)) [ CD ]
Line_43 $$ if (args[i].startsWith(FACTORY)) -->Line_43 $$ if (args[i].startsWith(FACTORY)) [ CD ]
Line_43 $$ if (args[i].startsWith(FACTORY)) -->Line_44 $$ sEjbJndiFactory = args[i].substring(FACTORY.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_47 $$ if (args[i].startsWith(URL)) [ CD ]
Line_47 $$ if (args[i].startsWith(URL)) -->Line_47 $$ if (args[i].startsWith(URL)) [ CD ]
Line_47 $$ if (args[i].startsWith(URL)) -->Line_48 $$ sServletUrl = args[i].substring(URL.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_51 $$ if (args[i].startsWith(COMPRESS)) [ CD ]
Line_51 $$ if (args[i].startsWith(COMPRESS)) -->Line_51 $$ if (args[i].startsWith(COMPRESS)) [ CD ]
Line_51 $$ if (args[i].startsWith(COMPRESS)) -->Line_52 $$ final String sCompressString = args[i].substring(COMPRESS.length() + 1)[ CD ]
Line_52 $$ final String sCompressString = args[i].substring(COMPRESS.length() + 1)-->Line_52 $$ final String sCompressString = args[i].substring(COMPRESS.length() + 1)[ CD ]
Line_51 $$ if (args[i].startsWith(COMPRESS)) -->Line_53 $$ if (sCompressString.compareTo("YES") == 0) [ CD ]
Line_52 $$ final String sCompressString = args[i].substring(COMPRESS.length() + 1)-->Line_53 $$ if (sCompressString.compareTo("YES") == 0) [ FD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_58 $$ if (args[i].startsWith(GEN_OUT)) [ CD ]
Line_58 $$ if (args[i].startsWith(GEN_OUT)) -->Line_58 $$ if (args[i].startsWith(GEN_OUT)) [ CD ]
Line_58 $$ if (args[i].startsWith(GEN_OUT)) -->Line_59 $$ sGenOut = args[i].substring(GEN_OUT.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_62 $$ if (args[i].startsWith(UID)) [ CD ]
Line_62 $$ if (args[i].startsWith(UID)) -->Line_62 $$ if (args[i].startsWith(UID)) [ CD ]
Line_62 $$ if (args[i].startsWith(UID)) -->Line_63 $$ sUid = args[i].substring(UID.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_66 $$ if (args[i].startsWith(PWD)) [ CD ]
Line_66 $$ if (args[i].startsWith(PWD)) -->Line_66 $$ if (args[i].startsWith(PWD)) [ CD ]
Line_66 $$ if (args[i].startsWith(PWD)) -->Line_67 $$ sPwd = args[i].substring(PWD.length() + 1)[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_70 $$ if (args[i].startsWith(POST)) [ CD ]
Line_70 $$ if (args[i].startsWith(POST)) -->Line_70 $$ if (args[i].startsWith(POST)) [ CD ]
Line_70 $$ if (args[i].startsWith(POST)) -->Line_71 $$ sXmlDataFile = args[i].substring(POST.length() + 1)[ CD ]
Line_70 $$ if (args[i].startsWith(POST)) -->Line_72 $$ if (validateFile(sXmlDataFile) == false) [ CD ]
Line_72 $$ if (validateFile(sXmlDataFile) == false) -->Line_73 $$ System.err.println("Invalid POST value")[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_78 $$ if (args[i].startsWith(XADATA)) [ CD ]
Line_78 $$ if (args[i].startsWith(XADATA)) -->Line_78 $$ if (args[i].startsWith(XADATA)) [ CD ]
Line_78 $$ if (args[i].startsWith(XADATA)) -->Line_79 $$ sXmlDataFile = args[i].substring(XADATA.length() + 1)[ CD ]
Line_78 $$ if (args[i].startsWith(XADATA)) -->Line_80 $$ if (validateFile(sXmlDataFile) == false) [ CD ]
Line_80 $$ if (validateFile(sXmlDataFile) == false) -->Line_81 $$ System.err.println("Invalid XADATA value")[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_86 $$ if (args[i].startsWith(CONFIG)) [ CD ]
Line_86 $$ if (args[i].startsWith(CONFIG)) -->Line_86 $$ if (args[i].startsWith(CONFIG)) [ CD ]
Line_86 $$ if (args[i].startsWith(CONFIG)) -->Line_87 $$ sConfigFile = args[i].substring(CONFIG.length() + 1)[ CD ]
Line_86 $$ if (args[i].startsWith(CONFIG)) -->Line_88 $$ if (validateFile(sConfigFile) == true) [ CD ]
Line_88 $$ if (validateFile(sConfigFile) == true) -->Line_89 $$ XAwareConfig.SetConfigFile(sConfigFile)[ CD ]
Line_88 $$ if (validateFile(sConfigFile) == true) -->Line_91 $$ System.err.println("Invalid CONFIG value")[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_96 $$ String responseXML = ""[ CD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ CD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ CD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_100 $$ if (args[i].charAt(0) != '_') [ CD ]
Line_100 $$ if (args[i].charAt(0) != '_') -->Line_101 $$ String arg = URLEncoder.encode(args[i])[ CD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_101 $$ String arg = URLEncoder.encode(args[i])[ CD ]
Line_100 $$ if (args[i].charAt(0) != '_') -->Line_102 $$ final int index = arg.indexOf("%3D")[ CD ]
Line_102 $$ final int index = arg.indexOf("%3D")-->Line_102 $$ final int index = arg.indexOf("%3D")[ CD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_102 $$ final int index = arg.indexOf("%3D")[ FD ]
Line_100 $$ if (args[i].charAt(0) != '_') -->Line_103 $$ if (index >= 0) [ CD ]
Line_102 $$ final int index = arg.indexOf("%3D")-->Line_103 $$ if (index >= 0) [ FD ]
Line_103 $$ if (index >= 0) -->Line_104 $$ final String tmp = arg.substring(0, index)[ CD ]
Line_104 $$ final String tmp = arg.substring(0, index)-->Line_104 $$ final String tmp = arg.substring(0, index)[ CD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_104 $$ final String tmp = arg.substring(0, index)[ FD ]
Line_102 $$ final int index = arg.indexOf("%3D")-->Line_104 $$ final String tmp = arg.substring(0, index)[ FD ]
Line_103 $$ if (index >= 0) -->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ CD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ FD ]
Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)-->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ FD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ FD ]
Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)-->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ FD ]
Line_110 $$ final URL url = new URL(sServletUrl)-->Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_112 $$ connection.setDoInput(true)[ FD ]
Line_113 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_114 $$ connection.setRequestMethod("POST")[ CD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_114 $$ connection.setRequestMethod("POST")[ FD ]
Line_113 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_116 $$ connection.setRequestMethod("GET")[ CD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_116 $$ connection.setRequestMethod("GET")[ FD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_120 $$ SAXBuilder builder = null[ CD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_121 $$ if (saxDriverClass.length() > 0) [ CD ]
Line_121 $$ if (saxDriverClass.length() > 0) -->Line_122 $$ builder = new SAXBuilder(saxDriverClass)[ CD ]
Line_120 $$ SAXBuilder builder = null-->Line_122 $$ builder = new SAXBuilder(saxDriverClass)[ FD ]
Line_122 $$ builder = new SAXBuilder(saxDriverClass)-->Line_122 $$ builder = new SAXBuilder(saxDriverClass)[ FD ]
Line_121 $$ if (saxDriverClass.length() > 0) -->Line_124 $$ builder = new SAXBuilder()[ CD ]
Line_120 $$ SAXBuilder builder = null-->Line_124 $$ builder = new SAXBuilder()[ FD ]
Line_122 $$ builder = new SAXBuilder(saxDriverClass)-->Line_124 $$ builder = new SAXBuilder()[ FD ]
Line_124 $$ builder = new SAXBuilder()-->Line_124 $$ builder = new SAXBuilder()[ FD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))[ CD ]
Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))-->Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))[ CD ]
Line_120 $$ SAXBuilder builder = null-->Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))[ FD ]
Line_122 $$ builder = new SAXBuilder(saxDriverClass)-->Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))[ FD ]
Line_124 $$ builder = new SAXBuilder()-->Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))[ FD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_127 $$ final StringWriter x = new StringWriter()[ CD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_128 $$ final XMLOutputter outputter = new XMLOutputter()[ CD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_129 $$ outputter.output(mDoc, x)[ CD ]
Line_128 $$ final XMLOutputter outputter = new XMLOutputter()-->Line_129 $$ outputter.output(mDoc, x)[ FD ]
Line_126 $$ final Document mDoc = builder.build(new File(sXmlDataFile))-->Line_129 $$ outputter.output(mDoc, x)[ FD ]
Line_127 $$ final StringWriter x = new StringWriter()-->Line_129 $$ outputter.output(mDoc, x)[ FD ]
Line_119 $$ if (sXmlDataFile != null && sXmlDataFile.length() > 0) -->Line_130 $$ sInputData = x.toString()[ CD ]
Line_118 $$ String sInputData = ""-->Line_130 $$ sInputData = x.toString()[ FD ]
Line_130 $$ sInputData = x.toString()-->Line_130 $$ sInputData = x.toString()[ FD ]
Line_130 $$ sInputData = x.toString()-->Line_130 $$ sInputData = x.toString()[ CD ]
Line_127 $$ final StringWriter x = new StringWriter()-->Line_130 $$ sInputData = x.toString()[ FD ]
Line_118 $$ String sInputData = ""-->Line_132 $$ if (sInputData.length() > 0) [ FD ]
Line_130 $$ sInputData = x.toString()-->Line_132 $$ if (sInputData.length() > 0) [ FD ]
Line_132 $$ if (sInputData.length() > 0) -->Line_133 $$ if (connection.getDoOutput() == false) [ CD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_133 $$ if (connection.getDoOutput() == false) [ FD ]
Line_133 $$ if (connection.getDoOutput() == false) -->Line_134 $$ connection.setDoOutput(true)[ CD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_134 $$ connection.setDoOutput(true)[ FD ]
Line_132 $$ if (sInputData.length() > 0) -->Line_136 $$ final OutputStream outStream = connection.getOutputStream()[ CD ]
Line_136 $$ final OutputStream outStream = connection.getOutputStream()-->Line_136 $$ final OutputStream outStream = connection.getOutputStream()[ CD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_136 $$ final OutputStream outStream = connection.getOutputStream()[ FD ]
Line_132 $$ if (sInputData.length() > 0) -->Line_137 $$ outStream.write(sInputData.getBytes())[ CD ]
Line_136 $$ final OutputStream outStream = connection.getOutputStream()-->Line_137 $$ outStream.write(sInputData.getBytes())[ FD ]
Line_118 $$ String sInputData = ""-->Line_137 $$ outStream.write(sInputData.getBytes())[ FD ]
Line_130 $$ sInputData = x.toString()-->Line_137 $$ outStream.write(sInputData.getBytes())[ FD ]
Line_132 $$ if (sInputData.length() > 0) -->Line_138 $$ outStream.close()[ CD ]
Line_136 $$ final OutputStream outStream = connection.getOutputStream()-->Line_138 $$ outStream.close()[ FD ]
Line_140 $$ final InputStream instream = connection.getInputStream()-->Line_140 $$ final InputStream instream = connection.getInputStream()[ CD ]
Line_111 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_140 $$ final InputStream instream = connection.getInputStream()[ FD ]
Line_144 $$ while ((inchar = in.read()) != -1) -->Line_144 $$ while ((inchar = in.read()) != -1) [ FD ]
Line_142 $$ int inchar-->Line_144 $$ while ((inchar = in.read()) != -1) [ FD ]
Line_144 $$ while ((inchar = in.read()) != -1) -->Line_144 $$ while ((inchar = in.read()) != -1) [ CD ]
Line_141 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(instream))-->Line_144 $$ while ((inchar = in.read()) != -1) [ FD ]
Line_144 $$ while ((inchar = in.read()) != -1) -->Line_145 $$ buf.append((char) inchar)[ CD ]
Line_143 $$ final StringBuffer buf = new StringBuffer(1000)-->Line_145 $$ buf.append((char) inchar)[ FD ]
Line_96 $$ String responseXML = ""-->Line_147 $$ responseXML = buf.toString()[ FD ]
Line_147 $$ responseXML = buf.toString()-->Line_147 $$ responseXML = buf.toString()[ FD ]
Line_147 $$ responseXML = buf.toString()-->Line_147 $$ responseXML = buf.toString()[ CD ]
Line_143 $$ final StringBuffer buf = new StringBuffer(1000)-->Line_147 $$ responseXML = buf.toString()[ FD ]
Line_2 $$ public static void main(final String[] args) -->Line_153 $$ if ((sOutput.compareTo("STREAM") == 0) || (sOutput.compareTo("NONE") == 0)) [ CD ]
Line_153 $$ if ((sOutput.compareTo("STREAM") == 0) || (sOutput.compareTo("NONE") == 0)) -->Line_154 $$ return[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_156 $$ if (sGenOut != null && sGenOut.length() > 0) [ CD ]
Line_158 $$ final FileWriter fp = new FileWriter(sGenOut, false)-->Line_159 $$ fp.write(responseXML)[ FD ]
Line_96 $$ String responseXML = ""-->Line_159 $$ fp.write(responseXML)[ FD ]
Line_147 $$ responseXML = buf.toString()-->Line_159 $$ fp.write(responseXML)[ FD ]
Line_158 $$ final FileWriter fp = new FileWriter(sGenOut, false)-->Line_160 $$ fp.close()[ FD ]
Line_2 $$ public static void main(final String[] args) -->Line_165 $$ if (sOutput != null && sOutput.compareTo("DISPLAY") == 0) [ CD ]
Line_165 $$ if (sOutput != null && sOutput.compareTo("DISPLAY") == 0) -->Line_166 $$ System.out.println(responseXML)[ CD ]
Line_96 $$ String responseXML = ""-->Line_166 $$ System.out.println(responseXML)[ FD ]
Line_147 $$ responseXML = buf.toString()-->Line_166 $$ System.out.println(responseXML)[ FD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_34 $$ for (int i = 1; i < args.length; i++) -->Line_34 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_52 $$ final String sCompressString = args[i].substring(COMPRESS.length() + 1)-->Line_53 $$ if (sCompressString.compareTo("YES") == 0) [ FD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_99 $$ for (int i = 1; i < args.length; i++) -->Line_99 $$ for (int i = 1; i < args.length; i++) [ FD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_102 $$ final int index = arg.indexOf("%3D")[ FD ]
Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)-->Line_102 $$ final int index = arg.indexOf("%3D")[ FD ]
Line_102 $$ final int index = arg.indexOf("%3D")-->Line_103 $$ if (index >= 0) [ FD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_104 $$ final String tmp = arg.substring(0, index)[ FD ]
Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)-->Line_104 $$ final String tmp = arg.substring(0, index)[ FD ]
Line_102 $$ final int index = arg.indexOf("%3D")-->Line_104 $$ final String tmp = arg.substring(0, index)[ FD ]
Line_101 $$ String arg = URLEncoder.encode(args[i])-->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ FD ]
Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)-->Line_105 $$ arg = tmp + "=" + arg.substring(index + 3)[ FD ]
