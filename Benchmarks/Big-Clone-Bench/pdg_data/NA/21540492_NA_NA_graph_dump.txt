Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException [ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_3 $$ List<NameValuePair> nvps = new ArrayList<NameValuePair>()[ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_4 $$ Enumeration<String> enm = pValue.keys()[ CD ]
Line_4 $$ Enumeration<String> enm = pValue.keys()-->Line_4 $$ Enumeration<String> enm = pValue.keys()[ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_4 $$ Enumeration<String> enm = pValue.keys()[ FD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_5 $$ String key[ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_6 $$ while (enm.hasMoreElements()) [ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException [ CD ]
Line_6 $$ while (enm.hasMoreElements()) -->Line_6 $$ while (enm.hasMoreElements()) [ CD ]
Line_4 $$ Enumeration<String> enm = pValue.keys()-->Line_6 $$ while (enm.hasMoreElements()) [ FD ]
Line_6 $$ while (enm.hasMoreElements()) -->Line_7 $$ key = enm.nextElement()[ CD ]
Line_7 $$ key = enm.nextElement()-->Line_7 $$ key = enm.nextElement()[ FD ]
Line_5 $$ String key-->Line_7 $$ key = enm.nextElement()[ FD ]
Line_7 $$ key = enm.nextElement()-->Line_7 $$ key = enm.nextElement()[ CD ]
Line_4 $$ Enumeration<String> enm = pValue.keys()-->Line_7 $$ key = enm.nextElement()[ FD ]
Line_6 $$ while (enm.hasMoreElements()) -->Line_8 $$ nvps.add(new BasicNameValuePair(key, pValue.get(key)))[ CD ]
Line_3 $$ List<NameValuePair> nvps = new ArrayList<NameValuePair>()-->Line_8 $$ nvps.add(new BasicNameValuePair(key, pValue.get(key)))[ FD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_8 $$ nvps.add(new BasicNameValuePair(key, pValue.get(key)))[ FD ]
Line_7 $$ key = enm.nextElement()-->Line_8 $$ nvps.add(new BasicNameValuePair(key, pValue.get(key)))[ FD ]
Line_5 $$ String key-->Line_8 $$ nvps.add(new BasicNameValuePair(key, pValue.get(key)))[ FD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_10 $$ httpPost.setEntity(new UrlEncodedFormEntity(nvps, HTTP.UTF_8))[ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_11 $$ HttpResponse response = httpclient.execute(httpPost)[ CD ]
Line_11 $$ HttpResponse response = httpclient.execute(httpPost)-->Line_11 $$ HttpResponse response = httpclient.execute(httpPost)[ CD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_12 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_12 $$ HttpEntity entity = response.getEntity()-->Line_12 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_11 $$ HttpResponse response = httpclient.execute(httpPost)-->Line_12 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_2 $$ public InputStream getStream(Hashtable<String, String> pValue) throws IOException -->Line_13 $$ return entity.getContent()[ CD ]
Line_13 $$ return entity.getContent()-->Line_13 $$ return entity.getContent()[ CD ]
Line_12 $$ HttpEntity entity = response.getEntity()-->Line_13 $$ return entity.getContent()[ FD ]
Line_7 $$ key = enm.nextElement()-->Line_8 $$ nvps.add(new BasicNameValuePair(key, pValue.get(key)))[ FD ]
