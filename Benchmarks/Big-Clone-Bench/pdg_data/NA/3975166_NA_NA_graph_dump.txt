Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void applyTo(File source, File target) throws IOException [ CD ]
Line_2 $$ public void applyTo(File source, File target) throws IOException -->Line_3 $$ boolean failed = true[ CD ]
Line_2 $$ public void applyTo(File source, File target) throws IOException -->Line_4 $$ FileInputStream fin = new FileInputStream(source)[ CD ]
Line_6 $$ FileChannel in = fin.getChannel()-->Line_6 $$ FileChannel in = fin.getChannel()[ CD ]
Line_4 $$ FileInputStream fin = new FileInputStream(source)-->Line_6 $$ FileChannel in = fin.getChannel()[ FD ]
Line_9 $$ FileChannel out = fos.getChannel()-->Line_9 $$ FileChannel out = fos.getChannel()[ CD ]
Line_7 $$ FileOutputStream fos = new FileOutputStream(target)-->Line_9 $$ FileChannel out = fos.getChannel()[ FD ]
Line_6 $$ FileChannel in = fin.getChannel()-->Line_12 $$ in.transferTo(pos, replacement.pos - pos, out)[ FD ]
Line_10 $$ long pos = 0L-->Line_12 $$ in.transferTo(pos, replacement.pos - pos, out)[ FD ]
Line_9 $$ FileChannel out = fos.getChannel()-->Line_12 $$ in.transferTo(pos, replacement.pos - pos, out)[ FD ]
Line_13 $$ if (replacement.val != null)-->Line_13 $$ out.write(ByteBuffer.wrap(replacement.val))[ CD ]
Line_9 $$ FileChannel out = fos.getChannel()-->Line_13 $$ out.write(ByteBuffer.wrap(replacement.val))[ FD ]
Line_10 $$ long pos = 0L-->Line_14 $$ pos = replacement.pos + replacement.len[ FD ]
Line_14 $$ pos = replacement.pos + replacement.len-->Line_14 $$ pos = replacement.pos + replacement.len[ FD ]
Line_6 $$ FileChannel in = fin.getChannel()-->Line_16 $$ in.transferTo(pos, source.length() - pos, out)[ FD ]
Line_10 $$ long pos = 0L-->Line_16 $$ in.transferTo(pos, source.length() - pos, out)[ FD ]
Line_14 $$ pos = replacement.pos + replacement.len-->Line_16 $$ in.transferTo(pos, source.length() - pos, out)[ FD ]
Line_9 $$ FileChannel out = fos.getChannel()-->Line_16 $$ in.transferTo(pos, source.length() - pos, out)[ FD ]
Line_2 $$ public void applyTo(File source, File target) throws IOException -->Line_16 $$ in.transferTo(pos, source.length() - pos, out)[ FD ]
Line_3 $$ boolean failed = true-->Line_17 $$ failed = false[ FD ]
Line_17 $$ failed = false-->Line_17 $$ failed = false[ FD ]
Line_7 $$ FileOutputStream fos = new FileOutputStream(target)-->Line_19 $$ fos.close()[ FD ]
Line_3 $$ boolean failed = true-->Line_20 $$ if (failed == true)[ FD ]
Line_17 $$ failed = false-->Line_20 $$ if (failed == true)[ FD ]
Line_20 $$ if (failed == true)-->Line_20 $$ target.delete()[ CD ]
Line_2 $$ public void applyTo(File source, File target) throws IOException -->Line_20 $$ target.delete()[ FD ]
Line_4 $$ FileInputStream fin = new FileInputStream(source)-->Line_23 $$ fin.close()[ FD ]
