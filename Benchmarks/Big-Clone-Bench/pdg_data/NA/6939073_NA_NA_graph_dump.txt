Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException [ CD ]
Line_5 $$ if (!physicalURI.isAbsolute()) -->Line_5 $$ if (!physicalURI.isAbsolute()) [ CD ]
Line_5 $$ if (!physicalURI.isAbsolute()) -->Line_5 $$ if (!physicalURI.isAbsolute()) [ CD ]
Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException -->Line_5 $$ if (!physicalURI.isAbsolute()) [ FD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_8 $$ if (physicalURI.getScheme().equals("file")) [ CD ]
Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException -->Line_8 $$ if (physicalURI.getScheme().equals("file")) [ FD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_9 $$ File file = new File(physicalURI)[ CD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_10 $$ file.getParentFile().mkdirs()[ CD ]
Line_9 $$ File file = new File(physicalURI)-->Line_10 $$ file.getParentFile().mkdirs()[ FD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_11 $$ os = new FileOutputStream(file)[ CD ]
Line_4 $$ OutputStream os-->Line_11 $$ os = new FileOutputStream(file)[ FD ]
Line_11 $$ os = new FileOutputStream(file)-->Line_11 $$ os = new FileOutputStream(file)[ FD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_13 $$ URL url = physicalURI.toURL()[ CD ]
Line_13 $$ URL url = physicalURI.toURL()-->Line_13 $$ URL url = physicalURI.toURL()[ CD ]
Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException -->Line_13 $$ URL url = physicalURI.toURL()[ FD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_14 $$ URLConnection conn = url.openConnection()[ CD ]
Line_14 $$ URLConnection conn = url.openConnection()-->Line_14 $$ URLConnection conn = url.openConnection()[ CD ]
Line_13 $$ URL url = physicalURI.toURL()-->Line_14 $$ URLConnection conn = url.openConnection()[ FD ]
Line_8 $$ if (physicalURI.getScheme().equals("file")) -->Line_15 $$ os = conn.getOutputStream()[ CD ]
Line_4 $$ OutputStream os-->Line_15 $$ os = conn.getOutputStream()[ FD ]
Line_11 $$ os = new FileOutputStream(file)-->Line_15 $$ os = conn.getOutputStream()[ FD ]
Line_15 $$ os = conn.getOutputStream()-->Line_15 $$ os = conn.getOutputStream()[ FD ]
Line_15 $$ os = conn.getOutputStream()-->Line_15 $$ os = conn.getOutputStream()[ CD ]
Line_14 $$ URLConnection conn = url.openConnection()-->Line_15 $$ os = conn.getOutputStream()[ FD ]
Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException -->Line_18 $$ storeModule(manager, module, w, moduleFormat)[ FD ]
Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException -->Line_18 $$ storeModule(manager, module, w, moduleFormat)[ FD ]
Line_17 $$ Writer w = new BufferedWriter(new OutputStreamWriter(os))-->Line_18 $$ storeModule(manager, module, w, moduleFormat)[ FD ]
Line_2 $$ public void storeModule(OWLModuleManager manager, Module module, URI physicalURI, OWLModuleFormat moduleFormat) throws ModuleStorageException, UnknownModuleException -->Line_18 $$ storeModule(manager, module, w, moduleFormat)[ FD ]
