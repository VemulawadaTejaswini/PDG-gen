Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String hashString(String key) [ CD ]
Line_2 $$ private String hashString(String key) -->Line_3 $$ MessageDigest digest[ CD ]
Line_3 $$ MessageDigest digest-->Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")[ FD ]
Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")-->Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")[ FD ]
Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")-->Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")[ CD ]
Line_3 $$ MessageDigest digest-->Line_6 $$ digest.update(key.getBytes())[ FD ]
Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")-->Line_6 $$ digest.update(key.getBytes())[ FD ]
Line_2 $$ private String hashString(String key) -->Line_6 $$ digest.update(key.getBytes())[ FD ]
Line_7 $$ byte[] hash = digest.digest()-->Line_7 $$ byte[] hash = digest.digest()[ CD ]
Line_3 $$ MessageDigest digest-->Line_7 $$ byte[] hash = digest.digest()[ FD ]
Line_5 $$ digest = java.security.MessageDigest.getInstance("MD5")-->Line_7 $$ byte[] hash = digest.digest()[ FD ]
Line_9 $$ return String.format("%0" + (hash.length << 1) + "X", bi) + KERNEL_VERSION-->Line_9 $$ return String.format("%0" + (hash.length << 1) + "X", bi) + KERNEL_VERSION[ CD ]
Line_8 $$ BigInteger bi = new BigInteger(1, hash)-->Line_9 $$ return String.format("%0" + (hash.length << 1) + "X", bi) + KERNEL_VERSION[ FD ]
Line_2 $$ private String hashString(String key) -->Line_12 $$ return "" + key.hashCode()[ FD ]
