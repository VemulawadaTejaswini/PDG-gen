Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void readFromDB() throws Exception [ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_3 $$ URL url[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_4 $$ URLConnection connect[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_5 $$ BufferedInputStream in = null[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_6 $$ Schema schema = new Schema(base, indexDir, false)[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_7 $$ BtreeDictParameters params = new BtreeDictParameters(schema, "TMAP")[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_8 $$ params.readState()[ CD ]
Line_7 $$ BtreeDictParameters params = new BtreeDictParameters(schema, "TMAP")-->Line_8 $$ params.readState()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_10 $$ readChildrenData()[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_11 $$ url = getURL("DOCS.TAB")[ CD ]
Line_3 $$ URL url-->Line_11 $$ url = getURL("DOCS.TAB")[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_11 $$ url = getURL("DOCS.TAB")[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_11 $$ url = getURL("DOCS.TAB")[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_12 $$ connect = url.openConnection()[ CD ]
Line_4 $$ URLConnection connect-->Line_12 $$ connect = url.openConnection()[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_12 $$ connect = url.openConnection()[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_12 $$ connect = url.openConnection()[ CD ]
Line_3 $$ URL url-->Line_12 $$ connect = url.openConnection()[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_12 $$ connect = url.openConnection()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_13 $$ in = new BufferedInputStream(connect.getInputStream())[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_13 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_13 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_4 $$ URLConnection connect-->Line_13 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_13 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_14 $$ int k1 = in.read()[ CD ]
Line_14 $$ int k1 = in.read()-->Line_14 $$ int k1 = in.read()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_14 $$ int k1 = in.read()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_14 $$ int k1 = in.read()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_16 $$ StreamDecompressor sddocs = new StreamDecompressor(in)[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_17 $$ sddocs.ascDecode(k1, concepts)[ CD ]
Line_16 $$ StreamDecompressor sddocs = new StreamDecompressor(in)-->Line_17 $$ sddocs.ascDecode(k1, concepts)[ FD ]
Line_14 $$ int k1 = in.read()-->Line_17 $$ sddocs.ascDecode(k1, concepts)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_18 $$ int k2 = in.read()[ CD ]
Line_18 $$ int k2 = in.read()-->Line_18 $$ int k2 = in.read()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_18 $$ int k2 = in.read()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_18 $$ int k2 = in.read()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_20 $$ offsets.add(0)[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_21 $$ StreamDecompressor sdoffsets = new StreamDecompressor(in)[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_22 $$ sdoffsets.ascDecode(k2, offsets)[ CD ]
Line_21 $$ StreamDecompressor sdoffsets = new StreamDecompressor(in)-->Line_22 $$ sdoffsets.ascDecode(k2, offsets)[ FD ]
Line_18 $$ int k2 = in.read()-->Line_22 $$ sdoffsets.ascDecode(k2, offsets)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_23 $$ in.close()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_23 $$ in.close()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_23 $$ in.close()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_24 $$ url = getURL("DOCS")[ CD ]
Line_3 $$ URL url-->Line_24 $$ url = getURL("DOCS")[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_24 $$ url = getURL("DOCS")[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_24 $$ url = getURL("DOCS")[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_24 $$ url = getURL("DOCS")[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_25 $$ connect = url.openConnection()[ CD ]
Line_4 $$ URLConnection connect-->Line_25 $$ connect = url.openConnection()[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_25 $$ connect = url.openConnection()[ FD ]
Line_25 $$ connect = url.openConnection()-->Line_25 $$ connect = url.openConnection()[ FD ]
Line_25 $$ connect = url.openConnection()-->Line_25 $$ connect = url.openConnection()[ CD ]
Line_3 $$ URL url-->Line_25 $$ connect = url.openConnection()[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_25 $$ connect = url.openConnection()[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_25 $$ connect = url.openConnection()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_4 $$ URLConnection connect-->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_25 $$ connect = url.openConnection()-->Line_26 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_27 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_28 $$ byte[] buff = new byte[512][ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_29 $$ int i = 0[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_30 $$ while ((i = in.read(buff)) != -1) [ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_2 $$ private void readFromDB() throws Exception [ CD ]
Line_30 $$ while ((i = in.read(buff)) != -1) -->Line_30 $$ while ((i = in.read(buff)) != -1) [ FD ]
Line_29 $$ int i = 0-->Line_30 $$ while ((i = in.read(buff)) != -1) [ FD ]
Line_30 $$ while ((i = in.read(buff)) != -1) -->Line_30 $$ while ((i = in.read(buff)) != -1) [ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_30 $$ while ((i = in.read(buff)) != -1) [ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_30 $$ while ((i = in.read(buff)) != -1) [ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_30 $$ while ((i = in.read(buff)) != -1) [ FD ]
Line_28 $$ byte[] buff = new byte[512]-->Line_30 $$ while ((i = in.read(buff)) != -1) [ FD ]
Line_30 $$ while ((i = in.read(buff)) != -1) -->Line_31 $$ data.write(buff, 0, i)[ CD ]
Line_27 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()-->Line_31 $$ data.write(buff, 0, i)[ FD ]
Line_28 $$ byte[] buff = new byte[512]-->Line_31 $$ data.write(buff, 0, i)[ FD ]
Line_30 $$ while ((i = in.read(buff)) != -1) -->Line_31 $$ data.write(buff, 0, i)[ FD ]
Line_29 $$ int i = 0-->Line_31 $$ data.write(buff, 0, i)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_33 $$ allLists = data.toByteArray()[ CD ]
Line_27 $$ ByteArrayOutputStream data = new ByteArrayOutputStream()-->Line_33 $$ allLists = data.toByteArray()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_34 $$ in.close()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_34 $$ in.close()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_34 $$ in.close()[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_34 $$ in.close()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_35 $$ url = getURL("OFFSETS")[ CD ]
Line_3 $$ URL url-->Line_35 $$ url = getURL("OFFSETS")[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_35 $$ url = getURL("OFFSETS")[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_35 $$ url = getURL("OFFSETS")[ FD ]
Line_35 $$ url = getURL("OFFSETS")-->Line_35 $$ url = getURL("OFFSETS")[ FD ]
Line_35 $$ url = getURL("OFFSETS")-->Line_35 $$ url = getURL("OFFSETS")[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_36 $$ connect = url.openConnection()[ CD ]
Line_4 $$ URLConnection connect-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_25 $$ connect = url.openConnection()-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_36 $$ connect = url.openConnection()-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_36 $$ connect = url.openConnection()-->Line_36 $$ connect = url.openConnection()[ CD ]
Line_3 $$ URL url-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_35 $$ url = getURL("OFFSETS")-->Line_36 $$ connect = url.openConnection()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_37 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_4 $$ URLConnection connect-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_12 $$ connect = url.openConnection()-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_25 $$ connect = url.openConnection()-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_36 $$ connect = url.openConnection()-->Line_37 $$ in = new BufferedInputStream(connect.getInputStream())[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_38 $$ k1 = in.read()[ CD ]
Line_14 $$ int k1 = in.read()-->Line_38 $$ k1 = in.read()[ FD ]
Line_38 $$ k1 = in.read()-->Line_38 $$ k1 = in.read()[ FD ]
Line_38 $$ k1 = in.read()-->Line_38 $$ k1 = in.read()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_38 $$ k1 = in.read()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_38 $$ k1 = in.read()[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_38 $$ k1 = in.read()[ FD ]
Line_37 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_38 $$ k1 = in.read()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_40 $$ sddocs = new StreamDecompressor(in)[ CD ]
Line_16 $$ StreamDecompressor sddocs = new StreamDecompressor(in)-->Line_40 $$ sddocs = new StreamDecompressor(in)[ FD ]
Line_40 $$ sddocs = new StreamDecompressor(in)-->Line_40 $$ sddocs = new StreamDecompressor(in)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_41 $$ sddocs.ascDecode(k1, documents)[ CD ]
Line_16 $$ StreamDecompressor sddocs = new StreamDecompressor(in)-->Line_41 $$ sddocs.ascDecode(k1, documents)[ FD ]
Line_40 $$ sddocs = new StreamDecompressor(in)-->Line_41 $$ sddocs.ascDecode(k1, documents)[ FD ]
Line_14 $$ int k1 = in.read()-->Line_41 $$ sddocs.ascDecode(k1, documents)[ FD ]
Line_38 $$ k1 = in.read()-->Line_41 $$ sddocs.ascDecode(k1, documents)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_42 $$ k2 = in.read()[ CD ]
Line_18 $$ int k2 = in.read()-->Line_42 $$ k2 = in.read()[ FD ]
Line_42 $$ k2 = in.read()-->Line_42 $$ k2 = in.read()[ FD ]
Line_42 $$ k2 = in.read()-->Line_42 $$ k2 = in.read()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_42 $$ k2 = in.read()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_42 $$ k2 = in.read()[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_42 $$ k2 = in.read()[ FD ]
Line_37 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_42 $$ k2 = in.read()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_44 $$ sdoffsets = new StreamDecompressor(in)[ CD ]
Line_21 $$ StreamDecompressor sdoffsets = new StreamDecompressor(in)-->Line_44 $$ sdoffsets = new StreamDecompressor(in)[ FD ]
Line_44 $$ sdoffsets = new StreamDecompressor(in)-->Line_44 $$ sdoffsets = new StreamDecompressor(in)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_45 $$ sdoffsets.ascDecode(k2, offsets2)[ CD ]
Line_21 $$ StreamDecompressor sdoffsets = new StreamDecompressor(in)-->Line_45 $$ sdoffsets.ascDecode(k2, offsets2)[ FD ]
Line_44 $$ sdoffsets = new StreamDecompressor(in)-->Line_45 $$ sdoffsets.ascDecode(k2, offsets2)[ FD ]
Line_18 $$ int k2 = in.read()-->Line_45 $$ sdoffsets.ascDecode(k2, offsets2)[ FD ]
Line_42 $$ k2 = in.read()-->Line_45 $$ sdoffsets.ascDecode(k2, offsets2)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_46 $$ int k3 = in.read()[ CD ]
Line_46 $$ int k3 = in.read()-->Line_46 $$ int k3 = in.read()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_46 $$ int k3 = in.read()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_46 $$ int k3 = in.read()[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_46 $$ int k3 = in.read()[ FD ]
Line_37 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_46 $$ int k3 = in.read()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_48 $$ StreamDecompressor sdtitles = new StreamDecompressor(in)[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_49 $$ sdtitles.decode(k3, titles)[ CD ]
Line_48 $$ StreamDecompressor sdtitles = new StreamDecompressor(in)-->Line_49 $$ sdtitles.decode(k3, titles)[ FD ]
Line_46 $$ int k3 = in.read()-->Line_49 $$ sdtitles.decode(k3, titles)[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_50 $$ in.close()[ CD ]
Line_5 $$ BufferedInputStream in = null-->Line_50 $$ in.close()[ FD ]
Line_13 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_50 $$ in.close()[ FD ]
Line_26 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_50 $$ in.close()[ FD ]
Line_37 $$ in = new BufferedInputStream(connect.getInputStream())-->Line_50 $$ in.close()[ FD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_51 $$ RAFFileFactory factory = RAFFileFactory.create()[ CD ]
Line_51 $$ RAFFileFactory factory = RAFFileFactory.create()-->Line_51 $$ RAFFileFactory factory = RAFFileFactory.create()[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_52 $$ url = getURL("POSITIONS")[ CD ]
Line_3 $$ URL url-->Line_52 $$ url = getURL("POSITIONS")[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_52 $$ url = getURL("POSITIONS")[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_52 $$ url = getURL("POSITIONS")[ FD ]
Line_35 $$ url = getURL("OFFSETS")-->Line_52 $$ url = getURL("POSITIONS")[ FD ]
Line_52 $$ url = getURL("POSITIONS")-->Line_52 $$ url = getURL("POSITIONS")[ FD ]
Line_52 $$ url = getURL("POSITIONS")-->Line_52 $$ url = getURL("POSITIONS")[ CD ]
Line_2 $$ private void readFromDB() throws Exception -->Line_53 $$ positionsFile = factory.get(url, false)[ CD ]
Line_51 $$ RAFFileFactory factory = RAFFileFactory.create()-->Line_53 $$ positionsFile = factory.get(url, false)[ FD ]
Line_3 $$ URL url-->Line_53 $$ positionsFile = factory.get(url, false)[ FD ]
Line_11 $$ url = getURL("DOCS.TAB")-->Line_53 $$ positionsFile = factory.get(url, false)[ FD ]
Line_24 $$ url = getURL("DOCS")-->Line_53 $$ positionsFile = factory.get(url, false)[ FD ]
Line_35 $$ url = getURL("OFFSETS")-->Line_53 $$ positionsFile = factory.get(url, false)[ FD ]
Line_52 $$ url = getURL("POSITIONS")-->Line_53 $$ positionsFile = factory.get(url, false)[ FD ]
Line_30 $$ while ((i = in.read(buff)) != -1) -->Line_31 $$ data.write(buff, 0, i)[ FD ]
