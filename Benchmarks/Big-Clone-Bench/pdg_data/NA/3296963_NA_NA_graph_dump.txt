Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException [ CD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_3 $$ URL url = new URL(urlDailyStockPrice.replace("[ CD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_4 $$ URLConnection con = url.openConnection()[ CD ]
Line_4 $$ URLConnection con = url.openConnection()-->Line_4 $$ URLConnection con = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(urlDailyStockPrice.replace("-->Line_4 $$ URLConnection con = url.openConnection()[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_5 $$ con.setConnectTimeout(20000)[ CD ]
Line_4 $$ URLConnection con = url.openConnection()-->Line_5 $$ con.setConnectTimeout(20000)[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_6 $$ InputStream is = con.getInputStream()[ CD ]
Line_6 $$ InputStream is = con.getInputStream()-->Line_6 $$ InputStream is = con.getInputStream()[ CD ]
Line_4 $$ URLConnection con = url.openConnection()-->Line_6 $$ InputStream is = con.getInputStream()[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_7 $$ byte[] bs = new byte[1024][ CD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_8 $$ int len[ CD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_9 $$ OutputStream os = new FileOutputStream(dailyStockPriceList, true)[ CD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_10 $$ while ((len = is.read(bs)) != -1) [ CD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException [ CD ]
Line_10 $$ while ((len = is.read(bs)) != -1) -->Line_10 $$ while ((len = is.read(bs)) != -1) [ FD ]
Line_8 $$ int len-->Line_10 $$ while ((len = is.read(bs)) != -1) [ FD ]
Line_10 $$ while ((len = is.read(bs)) != -1) -->Line_10 $$ while ((len = is.read(bs)) != -1) [ CD ]
Line_6 $$ InputStream is = con.getInputStream()-->Line_10 $$ while ((len = is.read(bs)) != -1) [ FD ]
Line_7 $$ byte[] bs = new byte[1024]-->Line_10 $$ while ((len = is.read(bs)) != -1) [ FD ]
Line_10 $$ while ((len = is.read(bs)) != -1) -->Line_11 $$ os.write(bs, 0, len)[ CD ]
Line_9 $$ OutputStream os = new FileOutputStream(dailyStockPriceList, true)-->Line_11 $$ os.write(bs, 0, len)[ FD ]
Line_7 $$ byte[] bs = new byte[1024]-->Line_11 $$ os.write(bs, 0, len)[ FD ]
Line_10 $$ while ((len = is.read(bs)) != -1) -->Line_11 $$ os.write(bs, 0, len)[ FD ]
Line_8 $$ int len-->Line_11 $$ os.write(bs, 0, len)[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_13 $$ os.flush()[ CD ]
Line_9 $$ OutputStream os = new FileOutputStream(dailyStockPriceList, true)-->Line_13 $$ os.flush()[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_14 $$ os.close()[ CD ]
Line_9 $$ OutputStream os = new FileOutputStream(dailyStockPriceList, true)-->Line_14 $$ os.close()[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_15 $$ is.close()[ CD ]
Line_6 $$ InputStream is = con.getInputStream()-->Line_15 $$ is.close()[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_16 $$ con = null[ CD ]
Line_4 $$ URLConnection con = url.openConnection()-->Line_16 $$ con = null[ FD ]
Line_16 $$ con = null-->Line_16 $$ con = null[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_17 $$ url = null[ CD ]
Line_3 $$ URL url = new URL(urlDailyStockPrice.replace("-->Line_17 $$ url = null[ FD ]
Line_17 $$ url = null-->Line_17 $$ url = null[ FD ]
Line_2 $$ public String fetchDataDailyByStockId(String StockId, String market) throws IOException -->Line_18 $$ return null[ CD ]
Line_10 $$ while ((len = is.read(bs)) != -1) -->Line_11 $$ os.write(bs, 0, len)[ FD ]
