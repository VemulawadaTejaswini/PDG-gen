Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException [ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_3 $$ int k_blockSize = 1024[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_4 $$ int byteCount[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_5 $$ char[] buf = new char[k_blockSize][ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_6 $$ File ofp = new File(outFile)[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp))[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_8 $$ zos.setMethod(ZipOutputStream.DEFLATED)[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp))-->Line_8 $$ zos.setMethod(ZipOutputStream.DEFLATED)[ FD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_9 $$ OutputStreamWriter osw = new OutputStreamWriter(zos, "ISO-8859-1")[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_10 $$ BufferedWriter bw = new BufferedWriter(osw)[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_11 $$ ZipEntry zot = null[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_12 $$ File ifp = new File(inFile)[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_13 $$ ZipInputStream zis = new ZipInputStream(new FileInputStream(ifp))[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_14 $$ InputStreamReader isr = new InputStreamReader(zis, "ISO-8859-1")[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_15 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_16 $$ ZipEntry zit = null[ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_17 $$ while ((zit = zis.getNextEntry()) != null) [ CD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException [ CD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_17 $$ while ((zit = zis.getNextEntry()) != null) [ FD ]
Line_16 $$ ZipEntry zit = null-->Line_17 $$ while ((zit = zis.getNextEntry()) != null) [ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_17 $$ while ((zit = zis.getNextEntry()) != null) [ CD ]
Line_13 $$ ZipInputStream zis = new ZipInputStream(new FileInputStream(ifp))-->Line_17 $$ while ((zit = zis.getNextEntry()) != null) [ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_18 $$ if (zit.getName().equals("content.xml")) [ CD ]
Line_18 $$ if (zit.getName().equals("content.xml")) -->Line_18 $$ if (zit.getName().equals("content.xml")) [ CD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_18 $$ if (zit.getName().equals("content.xml")) [ FD ]
Line_16 $$ ZipEntry zit = null-->Line_18 $$ if (zit.getName().equals("content.xml")) [ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_21 $$ zot = new ZipEntry(zit.getName())[ CD ]
Line_21 $$ zot = new ZipEntry(zit.getName())-->Line_21 $$ zot = new ZipEntry(zit.getName())[ FD ]
Line_11 $$ ZipEntry zot = null-->Line_21 $$ zot = new ZipEntry(zit.getName())[ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_21 $$ zot = new ZipEntry(zit.getName())[ FD ]
Line_16 $$ ZipEntry zit = null-->Line_21 $$ zot = new ZipEntry(zit.getName())[ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_22 $$ zos.putNextEntry(zot)[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp))-->Line_22 $$ zos.putNextEntry(zot)[ FD ]
Line_21 $$ zot = new ZipEntry(zit.getName())-->Line_22 $$ zos.putNextEntry(zot)[ FD ]
Line_11 $$ ZipEntry zot = null-->Line_22 $$ zos.putNextEntry(zot)[ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ CD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_17 $$ while ((zit = zis.getNextEntry()) != null) [ CD ]
Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)-->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ FD ]
Line_4 $$ int byteCount-->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ FD ]
Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)-->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ CD ]
Line_15 $$ BufferedReader br = new BufferedReader(isr)-->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ FD ]
Line_5 $$ char[] buf = new char[k_blockSize]-->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ FD ]
Line_3 $$ int k_blockSize = 1024-->Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)[ FD ]
Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)-->Line_23 $$ bw.write(buf, 0, byteCount)[ CD ]
Line_10 $$ BufferedWriter bw = new BufferedWriter(osw)-->Line_23 $$ bw.write(buf, 0, byteCount)[ FD ]
Line_5 $$ char[] buf = new char[k_blockSize]-->Line_23 $$ bw.write(buf, 0, byteCount)[ FD ]
Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)-->Line_23 $$ bw.write(buf, 0, byteCount)[ FD ]
Line_4 $$ int byteCount-->Line_23 $$ bw.write(buf, 0, byteCount)[ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_24 $$ bw.flush()[ CD ]
Line_10 $$ BufferedWriter bw = new BufferedWriter(osw)-->Line_24 $$ bw.flush()[ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_25 $$ zos.closeEntry()[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp))-->Line_25 $$ zos.closeEntry()[ FD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_27 $$ zos.putNextEntry(new ZipEntry("content.xml"))[ CD ]
Line_7 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(ofp))-->Line_27 $$ zos.putNextEntry(new ZipEntry("content.xml"))[ FD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_28 $$ bw.flush()[ CD ]
Line_10 $$ BufferedWriter bw = new BufferedWriter(osw)-->Line_28 $$ bw.flush()[ FD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_29 $$ osw = new OutputStreamWriter(zos, "UTF8")[ CD ]
Line_9 $$ OutputStreamWriter osw = new OutputStreamWriter(zos, "ISO-8859-1")-->Line_29 $$ osw = new OutputStreamWriter(zos, "UTF8")[ FD ]
Line_29 $$ osw = new OutputStreamWriter(zos, "UTF8")-->Line_29 $$ osw = new OutputStreamWriter(zos, "UTF8")[ FD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_30 $$ bw = new BufferedWriter(osw)[ CD ]
Line_10 $$ BufferedWriter bw = new BufferedWriter(osw)-->Line_30 $$ bw = new BufferedWriter(osw)[ FD ]
Line_30 $$ bw = new BufferedWriter(osw)-->Line_30 $$ bw = new BufferedWriter(osw)[ FD ]
Line_2 $$ public BufferedWriter createOutputStream(String inFile, String outFile) throws IOException -->Line_31 $$ return bw[ CD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_18 $$ if (zit.getName().equals("content.xml")) [ FD ]
Line_17 $$ while ((zit = zis.getNextEntry()) != null) -->Line_21 $$ zot = new ZipEntry(zit.getName())[ FD ]
Line_21 $$ zot = new ZipEntry(zit.getName())-->Line_22 $$ zos.putNextEntry(zot)[ FD ]
Line_23 $$ while ((byteCount = br.read(buf, 0, k_blockSize)) >= 0) bw.write(buf, 0, byteCount)-->Line_23 $$ bw.write(buf, 0, byteCount)[ FD ]
