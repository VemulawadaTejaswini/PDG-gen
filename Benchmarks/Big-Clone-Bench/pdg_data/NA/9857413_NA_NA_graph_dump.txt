Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable [ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_3 $$ long startTime = System.currentTimeMillis()-->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_4 $$ long transferredBytesNum = 0[ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_5 $$ long elapsedTime = 0[ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)[ CD ]
Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)-->Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)[ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_7 $$ String server = opts.getProperty(TRANSFER_OPTION_SERVER)[ CD ]
Line_7 $$ String server = opts.getProperty(TRANSFER_OPTION_SERVER)-->Line_7 $$ String server = opts.getProperty(TRANSFER_OPTION_SERVER)[ CD ]
Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)-->Line_7 $$ String server = opts.getProperty(TRANSFER_OPTION_SERVER)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_8 $$ String username = opts.getProperty(TRANSFER_OPTION_USERNAME)[ CD ]
Line_8 $$ String username = opts.getProperty(TRANSFER_OPTION_USERNAME)-->Line_8 $$ String username = opts.getProperty(TRANSFER_OPTION_USERNAME)[ CD ]
Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)-->Line_8 $$ String username = opts.getProperty(TRANSFER_OPTION_USERNAME)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_9 $$ String password = opts.getProperty(TRANSFER_OPTION_PASSWORD)[ CD ]
Line_9 $$ String password = opts.getProperty(TRANSFER_OPTION_PASSWORD)-->Line_9 $$ String password = opts.getProperty(TRANSFER_OPTION_PASSWORD)[ CD ]
Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)-->Line_9 $$ String password = opts.getProperty(TRANSFER_OPTION_PASSWORD)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)[ CD ]
Line_6 $$ Properties opts = PropertiesUtils.deserializeProperties(options)-->Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_11 $$ if (transferMetaData) [ CD ]
Line_11 $$ if (transferMetaData) -->Line_12 $$ int idx = filePath.lastIndexOf(PATH_SEPARATOR)[ CD ]
Line_12 $$ int idx = filePath.lastIndexOf(PATH_SEPARATOR)-->Line_12 $$ int idx = filePath.lastIndexOf(PATH_SEPARATOR)[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_12 $$ int idx = filePath.lastIndexOf(PATH_SEPARATOR)[ FD ]
Line_11 $$ if (transferMetaData) -->Line_13 $$ if (idx != -1) [ CD ]
Line_12 $$ int idx = filePath.lastIndexOf(PATH_SEPARATOR)-->Line_13 $$ if (idx != -1) [ FD ]
Line_13 $$ if (idx != -1) -->Line_14 $$ String fileName = filePath.substring(idx + 1) + META_DATA_FILE_SUFIX[ CD ]
Line_14 $$ String fileName = filePath.substring(idx + 1) + META_DATA_FILE_SUFIX-->Line_14 $$ String fileName = filePath.substring(idx + 1) + META_DATA_FILE_SUFIX[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_14 $$ String fileName = filePath.substring(idx + 1) + META_DATA_FILE_SUFIX[ FD ]
Line_13 $$ if (idx != -1) -->Line_15 $$ filePath = filePath.substring(0, idx)[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_15 $$ filePath = filePath.substring(0, idx)[ FD ]
Line_15 $$ filePath = filePath.substring(0, idx)-->Line_15 $$ filePath = filePath.substring(0, idx)[ FD ]
Line_15 $$ filePath = filePath.substring(0, idx)-->Line_15 $$ filePath = filePath.substring(0, idx)[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_15 $$ filePath = filePath.substring(0, idx)[ FD ]
Line_15 $$ filePath = filePath.substring(0, idx)-->Line_15 $$ filePath = filePath.substring(0, idx)[ FD ]
Line_12 $$ int idx = filePath.lastIndexOf(PATH_SEPARATOR)-->Line_15 $$ filePath = filePath.substring(0, idx)[ FD ]
Line_13 $$ if (idx != -1) -->Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName[ FD ]
Line_15 $$ filePath = filePath.substring(0, idx)-->Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName[ FD ]
Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName-->Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName[ FD ]
Line_14 $$ String fileName = filePath.substring(idx + 1) + META_DATA_FILE_SUFIX-->Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName[ FD ]
Line_13 $$ if (idx != -1) -->Line_18 $$ filePath += META_DATA_FILE_SUFIX[ CD ]
Line_10 $$ String filePath = opts.getProperty(TRANSFER_OPTION_FILEPATH)-->Line_18 $$ filePath += META_DATA_FILE_SUFIX[ FD ]
Line_15 $$ filePath = filePath.substring(0, idx)-->Line_18 $$ filePath += META_DATA_FILE_SUFIX[ FD ]
Line_16 $$ filePath = filePath + PATH_SEPARATOR + fileName-->Line_18 $$ filePath += META_DATA_FILE_SUFIX[ FD ]
Line_18 $$ filePath += META_DATA_FILE_SUFIX-->Line_18 $$ filePath += META_DATA_FILE_SUFIX[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_21 $$ if (!server.contains(PORT_SEPARATOR)) [ CD ]
Line_21 $$ if (!server.contains(PORT_SEPARATOR)) -->Line_21 $$ if (!server.contains(PORT_SEPARATOR)) [ CD ]
Line_21 $$ if (!server.contains(PORT_SEPARATOR)) -->Line_21 $$ if (!server.contains(PORT_SEPARATOR)) [ CD ]
Line_7 $$ String server = opts.getProperty(TRANSFER_OPTION_SERVER)-->Line_21 $$ if (!server.contains(PORT_SEPARATOR)) [ FD ]
Line_21 $$ if (!server.contains(PORT_SEPARATOR)) -->Line_22 $$ server += PORT_SEPARATOR + DEFAULT_PORT[ CD ]
Line_7 $$ String server = opts.getProperty(TRANSFER_OPTION_SERVER)-->Line_22 $$ server += PORT_SEPARATOR + DEFAULT_PORT[ FD ]
Line_22 $$ server += PORT_SEPARATOR + DEFAULT_PORT-->Line_22 $$ server += PORT_SEPARATOR + DEFAULT_PORT[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_24 $$ URL url = new URL(PROTOCOL_PREFIX + username + ":" + password + "@" + server + filePath + ";type=i")[ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))[ CD ]
Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))-->Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))[ CD ]
Line_24 $$ URL url = new URL(PROTOCOL_PREFIX + username + ":" + password + "@" + server + filePath + ";type=i")-->Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_26 $$ urlc.setConnectTimeout(Preferences.getInstance().preferredTimeOut * 1000)[ CD ]
Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))-->Line_26 $$ urlc.setConnectTimeout(Preferences.getInstance().preferredTimeOut * 1000)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_27 $$ urlc.setReadTimeout(Preferences.getInstance().preferredTimeOut * 1000)[ CD ]
Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))-->Line_27 $$ urlc.setReadTimeout(Preferences.getInstance().preferredTimeOut * 1000)[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_28 $$ ByteArrayOutputStream baos = null[ CD ]
Line_30 $$ InputStream is = urlc.getInputStream()-->Line_30 $$ InputStream is = urlc.getInputStream()[ CD ]
Line_25 $$ URLConnection urlc = url.openConnection(BackEnd.getProxy(Proxy.Type.SOCKS))-->Line_30 $$ InputStream is = urlc.getInputStream()[ FD ]
Line_28 $$ ByteArrayOutputStream baos = null-->Line_31 $$ baos = new ByteArrayOutputStream()[ FD ]
Line_31 $$ baos = new ByteArrayOutputStream()-->Line_31 $$ baos = new ByteArrayOutputStream()[ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_34 $$ while ((br = is.read(buffer)) > 0) [ FD ]
Line_33 $$ int br-->Line_34 $$ while ((br = is.read(buffer)) > 0) [ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_34 $$ while ((br = is.read(buffer)) > 0) [ CD ]
Line_30 $$ InputStream is = urlc.getInputStream()-->Line_34 $$ while ((br = is.read(buffer)) > 0) [ FD ]
Line_32 $$ byte[] buffer = new byte[1024]-->Line_34 $$ while ((br = is.read(buffer)) > 0) [ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_35 $$ baos.write(buffer, 0, br)[ CD ]
Line_28 $$ ByteArrayOutputStream baos = null-->Line_35 $$ baos.write(buffer, 0, br)[ FD ]
Line_31 $$ baos = new ByteArrayOutputStream()-->Line_35 $$ baos.write(buffer, 0, br)[ FD ]
Line_32 $$ byte[] buffer = new byte[1024]-->Line_35 $$ baos.write(buffer, 0, br)[ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_35 $$ baos.write(buffer, 0, br)[ FD ]
Line_33 $$ int br-->Line_35 $$ baos.write(buffer, 0, br)[ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_36 $$ if (!transferMetaData) [ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_36 $$ if (!transferMetaData) [ FD ]
Line_36 $$ if (!transferMetaData) -->Line_36 $$ if (!transferMetaData) [ CD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_36 $$ if (!transferMetaData) [ FD ]
Line_36 $$ if (!transferMetaData) -->Line_37 $$ transferredBytesNum += br[ CD ]
Line_37 $$ transferredBytesNum += br-->Line_37 $$ transferredBytesNum += br[ FD ]
Line_4 $$ long transferredBytesNum = 0-->Line_37 $$ transferredBytesNum += br[ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_37 $$ transferredBytesNum += br[ FD ]
Line_33 $$ int br-->Line_37 $$ transferredBytesNum += br[ FD ]
Line_36 $$ if (!transferMetaData) -->Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime[ CD ]
Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime-->Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime[ FD ]
Line_5 $$ long elapsedTime = 0-->Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime[ FD ]
Line_3 $$ long startTime = System.currentTimeMillis()-->Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime[ FD ]
Line_36 $$ if (!transferMetaData) -->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ CD ]
Line_37 $$ transferredBytesNum += br-->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ FD ]
Line_4 $$ long transferredBytesNum = 0-->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ FD ]
Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime-->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ FD ]
Line_5 $$ long elapsedTime = 0-->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ FD ]
Line_28 $$ ByteArrayOutputStream baos = null-->Line_42 $$ baos.close()[ FD ]
Line_31 $$ baos = new ByteArrayOutputStream()-->Line_42 $$ baos.close()[ FD ]
Line_30 $$ InputStream is = urlc.getInputStream()-->Line_43 $$ is.close()[ FD ]
Line_2 $$ public byte[] readData(byte[] options, boolean transferMetaData) throws Throwable -->Line_46 $$ return baos != null ? baos.toByteArray() : null[ CD ]
Line_28 $$ ByteArrayOutputStream baos = null-->Line_46 $$ return baos != null ? baos.toByteArray() : null[ FD ]
Line_31 $$ baos = new ByteArrayOutputStream()-->Line_46 $$ return baos != null ? baos.toByteArray() : null[ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_35 $$ baos.write(buffer, 0, br)[ FD ]
Line_34 $$ while ((br = is.read(buffer)) > 0) -->Line_37 $$ transferredBytesNum += br[ FD ]
Line_37 $$ transferredBytesNum += br-->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ FD ]
Line_38 $$ elapsedTime = System.currentTimeMillis() - startTime-->Line_39 $$ fireOnProgressEvent(transferredBytesNum, elapsedTime)[ FD ]
