Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException [ CD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)[ CD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)[ FD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])[ CD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])[ CD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])[ FD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ indexes.add(indiciID[i])[ CD ]
Line_5 $$ ArrayList<Integer> indexes = new ArrayList<Integer>(indiciID.length)-->Line_6 $$ indexes.add(indiciID[i])[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_7 $$ ps.setObject(1, net)[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_7 $$ ps.setObject(1, net)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_8 $$ ps.setInt(2, azioneId)[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_8 $$ ps.setInt(2, azioneId)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_9 $$ ps.setObject(3, indexes)[ FD ]
Line_5 $$ ArrayList<Integer> indexes = new ArrayList<Integer>(indiciID.length)-->Line_9 $$ ps.setObject(3, indexes)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_10 $$ ps.setInt(4, output)[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_10 $$ ps.setInt(4, output)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_11 $$ ps.setDate(5, from)[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_11 $$ ps.setDate(5, from)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_12 $$ ps.setDate(6, to)[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_12 $$ ps.setDate(6, to)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_13 $$ ps.setString(7, descrizione)[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_13 $$ ps.setString(7, descrizione)[ FD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_14 $$ ps.executeUpdate()[ FD ]
Line_15 $$ ResultSet key = ps.getGeneratedKeys()-->Line_15 $$ ResultSet key = ps.getGeneratedKeys()[ CD ]
Line_4 $$ PreparedStatement ps = c.prepareStatement(insertNet, PreparedStatement.RETURN_GENERATED_KEYS)-->Line_15 $$ ResultSet key = ps.getGeneratedKeys()[ FD ]
Line_15 $$ ResultSet key = ps.getGeneratedKeys()-->Line_16 $$ if (key.next()) [ FD ]
Line_16 $$ if (key.next()) -->Line_16 $$ if (key.next()) [ CD ]
Line_15 $$ ResultSet key = ps.getGeneratedKeys()-->Line_16 $$ if (key.next()) [ FD ]
Line_16 $$ if (key.next()) -->Line_17 $$ int id = key.getInt(1)[ CD ]
Line_17 $$ int id = key.getInt(1)-->Line_17 $$ int id = key.getInt(1)[ CD ]
Line_15 $$ ResultSet key = ps.getGeneratedKeys()-->Line_17 $$ int id = key.getInt(1)[ FD ]
Line_16 $$ if (key.next()) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ CD ]
Line_16 $$ if (key.next()) -->Line_16 $$ if (key.next()) [ CD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ CD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ CD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)[ CD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)[ CD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)[ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_20 $$ psIndex.setInt(1, indiciID[i])[ CD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_20 $$ psIndex.setInt(1, indiciID[i])[ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_21 $$ psIndex.setInt(2, id)[ CD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_21 $$ psIndex.setInt(2, id)[ FD ]
Line_17 $$ int id = key.getInt(1)-->Line_21 $$ psIndex.setInt(2, id)[ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_22 $$ psIndex.executeUpdate()[ CD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_22 $$ psIndex.executeUpdate()[ FD ]
Line_2 $$ public static void insert(Connection c, MLPApprox net, int azioneId, String descrizione, int[] indiciID, int output, Date from, Date to) throws SQLException -->Line_28 $$ c.rollback()[ FD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])[ FD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])[ FD ]
Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])-->Line_6 $$ for (int i = 0; i < indiciID.length; i++) indexes.add(indiciID[i])[ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < indiciID.length; i++) -->Line_18 $$ for (int i = 0; i < indiciID.length; i++) [ FD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_20 $$ psIndex.setInt(1, indiciID[i])[ FD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_21 $$ psIndex.setInt(2, id)[ FD ]
Line_19 $$ PreparedStatement psIndex = c.prepareStatement(insertNetIndex)-->Line_22 $$ psIndex.executeUpdate()[ FD ]
