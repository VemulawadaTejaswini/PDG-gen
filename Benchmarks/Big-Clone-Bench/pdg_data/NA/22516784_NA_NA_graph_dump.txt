Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException [ CD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_3 $$ FTPClient server = new FTPClient()[ CD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_4 $$ server.connect(config.host, config.port)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_4 $$ server.connect(config.host, config.port)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_5 $$ assertValidReplyCode(server.getReplyCode(), server)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_5 $$ assertValidReplyCode(server.getReplyCode(), server)[ FD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_5 $$ assertValidReplyCode(server.getReplyCode(), server)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_6 $$ server.login(config.userName, config.password)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_6 $$ server.login(config.userName, config.password)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_7 $$ assertValidReplyCode(server.getReplyCode(), server)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_7 $$ assertValidReplyCode(server.getReplyCode(), server)[ FD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_7 $$ assertValidReplyCode(server.getReplyCode(), server)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_8 $$ assertValidReplyCode(server.cwd(directory), server)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_8 $$ assertValidReplyCode(server.cwd(directory), server)[ FD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_8 $$ assertValidReplyCode(server.cwd(directory), server)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_8 $$ assertValidReplyCode(server.cwd(directory), server)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_9 $$ server.setFileTransferMode(FTP.IMAGE_FILE_TYPE)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_9 $$ server.setFileTransferMode(FTP.IMAGE_FILE_TYPE)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_10 $$ server.setFileType(FTP.IMAGE_FILE_TYPE)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_10 $$ server.setFileType(FTP.IMAGE_FILE_TYPE)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_11 $$ server.storeFile(remoteFileName, new FileInputStream(file))[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_11 $$ server.storeFile(remoteFileName, new FileInputStream(file))[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_11 $$ server.storeFile(remoteFileName, new FileInputStream(file))[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_12 $$ assertValidReplyCode(server.getReplyCode(), server)[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_12 $$ assertValidReplyCode(server.getReplyCode(), server)[ FD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_12 $$ assertValidReplyCode(server.getReplyCode(), server)[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_13 $$ server.sendNoOp()[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_13 $$ server.sendNoOp()[ FD ]
Line_2 $$ public static void ftpUpload(FTPConfig config, String directory, File file, String remoteFileName) throws IOException -->Line_14 $$ server.disconnect()[ CD ]
Line_3 $$ FTPClient server = new FTPClient()-->Line_14 $$ server.disconnect()[ FD ]
