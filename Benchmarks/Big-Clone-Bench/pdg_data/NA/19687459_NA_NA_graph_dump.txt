Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testMemberIterator() throws IOException [ CD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))[ CD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_5 $$ assertTrue(iter.hasNext())[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_5 $$ assertTrue(iter.hasNext())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_6 $$ GZIPMembersInputStream gzMember0 = iter.next()[ CD ]
Line_6 $$ GZIPMembersInputStream gzMember0 = iter.next()-->Line_6 $$ GZIPMembersInputStream gzMember0 = iter.next()[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_6 $$ GZIPMembersInputStream gzMember0 = iter.next()[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_7 $$ int count0 = IOUtils.copy(gzMember0, new NullOutputStream())[ CD ]
Line_7 $$ int count0 = IOUtils.copy(gzMember0, new NullOutputStream())-->Line_7 $$ int count0 = IOUtils.copy(gzMember0, new NullOutputStream())[ CD ]
Line_6 $$ GZIPMembersInputStream gzMember0 = iter.next()-->Line_7 $$ int count0 = IOUtils.copy(gzMember0, new NullOutputStream())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_8 $$ assertEquals("wrong 1k member count", 1024, count0)[ CD ]
Line_7 $$ int count0 = IOUtils.copy(gzMember0, new NullOutputStream())-->Line_8 $$ assertEquals("wrong 1k member count", 1024, count0)[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_9 $$ assertEquals("wrong member number", 0, gzin.getMemberNumber())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_9 $$ assertEquals("wrong member number", 0, gzin.getMemberNumber())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_10 $$ assertEquals("wrong member0 start", 0, gzin.getCurrentMemberStart())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_10 $$ assertEquals("wrong member0 start", 0, gzin.getCurrentMemberStart())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_11 $$ assertEquals("wrong member0 end", noise1k_gz.length, gzin.getCurrentMemberEnd())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_11 $$ assertEquals("wrong member0 end", noise1k_gz.length, gzin.getCurrentMemberEnd())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_12 $$ assertTrue(iter.hasNext())[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_12 $$ assertTrue(iter.hasNext())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_13 $$ GZIPMembersInputStream gzMember1 = iter.next()[ CD ]
Line_13 $$ GZIPMembersInputStream gzMember1 = iter.next()-->Line_13 $$ GZIPMembersInputStream gzMember1 = iter.next()[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_13 $$ GZIPMembersInputStream gzMember1 = iter.next()[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_14 $$ int count1 = IOUtils.copy(gzMember1, new NullOutputStream())[ CD ]
Line_14 $$ int count1 = IOUtils.copy(gzMember1, new NullOutputStream())-->Line_14 $$ int count1 = IOUtils.copy(gzMember1, new NullOutputStream())[ CD ]
Line_13 $$ GZIPMembersInputStream gzMember1 = iter.next()-->Line_14 $$ int count1 = IOUtils.copy(gzMember1, new NullOutputStream())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_15 $$ assertEquals("wrong 32k member count", (32 * 1024), count1)[ CD ]
Line_14 $$ int count1 = IOUtils.copy(gzMember1, new NullOutputStream())-->Line_15 $$ assertEquals("wrong 32k member count", (32 * 1024), count1)[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_16 $$ assertEquals("wrong member number", 1, gzin.getMemberNumber())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_16 $$ assertEquals("wrong member number", 1, gzin.getMemberNumber())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_17 $$ assertEquals("wrong member1 start", noise1k_gz.length, gzin.getCurrentMemberStart())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_17 $$ assertEquals("wrong member1 start", noise1k_gz.length, gzin.getCurrentMemberStart())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_18 $$ assertEquals("wrong member1 end", noise1k_gz.length + noise32k_gz.length, gzin.getCurrentMemberEnd())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_18 $$ assertEquals("wrong member1 end", noise1k_gz.length + noise32k_gz.length, gzin.getCurrentMemberEnd())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_19 $$ assertTrue(iter.hasNext())[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_19 $$ assertTrue(iter.hasNext())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_20 $$ GZIPMembersInputStream gzMember2 = iter.next()[ CD ]
Line_20 $$ GZIPMembersInputStream gzMember2 = iter.next()-->Line_20 $$ GZIPMembersInputStream gzMember2 = iter.next()[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_20 $$ GZIPMembersInputStream gzMember2 = iter.next()[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_21 $$ int count2 = IOUtils.copy(gzMember2, new NullOutputStream())[ CD ]
Line_21 $$ int count2 = IOUtils.copy(gzMember2, new NullOutputStream())-->Line_21 $$ int count2 = IOUtils.copy(gzMember2, new NullOutputStream())[ CD ]
Line_20 $$ GZIPMembersInputStream gzMember2 = iter.next()-->Line_21 $$ int count2 = IOUtils.copy(gzMember2, new NullOutputStream())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_22 $$ assertEquals("wrong 1-byte member count", 1, count2)[ CD ]
Line_21 $$ int count2 = IOUtils.copy(gzMember2, new NullOutputStream())-->Line_22 $$ assertEquals("wrong 1-byte member count", 1, count2)[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_23 $$ assertEquals("wrong member number", 2, gzin.getMemberNumber())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_23 $$ assertEquals("wrong member number", 2, gzin.getMemberNumber())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_24 $$ assertEquals("wrong member2 start", noise1k_gz.length + noise32k_gz.length, gzin.getCurrentMemberStart())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_24 $$ assertEquals("wrong member2 start", noise1k_gz.length + noise32k_gz.length, gzin.getCurrentMemberStart())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_25 $$ assertEquals("wrong member2 end", noise1k_gz.length + noise32k_gz.length + a_gz.length, gzin.getCurrentMemberEnd())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_25 $$ assertEquals("wrong member2 end", noise1k_gz.length + noise32k_gz.length + a_gz.length, gzin.getCurrentMemberEnd())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_26 $$ assertTrue(iter.hasNext())[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_26 $$ assertTrue(iter.hasNext())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_27 $$ GZIPMembersInputStream gzMember3 = iter.next()[ CD ]
Line_27 $$ GZIPMembersInputStream gzMember3 = iter.next()-->Line_27 $$ GZIPMembersInputStream gzMember3 = iter.next()[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_27 $$ GZIPMembersInputStream gzMember3 = iter.next()[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_28 $$ int count3 = IOUtils.copy(gzMember3, new NullOutputStream())[ CD ]
Line_28 $$ int count3 = IOUtils.copy(gzMember3, new NullOutputStream())-->Line_28 $$ int count3 = IOUtils.copy(gzMember3, new NullOutputStream())[ CD ]
Line_27 $$ GZIPMembersInputStream gzMember3 = iter.next()-->Line_28 $$ int count3 = IOUtils.copy(gzMember3, new NullOutputStream())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_29 $$ assertEquals("wrong 5-byte member count", 5, count3)[ CD ]
Line_28 $$ int count3 = IOUtils.copy(gzMember3, new NullOutputStream())-->Line_29 $$ assertEquals("wrong 5-byte member count", 5, count3)[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_30 $$ assertEquals("wrong member number", 3, gzin.getMemberNumber())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_30 $$ assertEquals("wrong member number", 3, gzin.getMemberNumber())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_31 $$ assertEquals("wrong member3 start", noise1k_gz.length + noise32k_gz.length + a_gz.length, gzin.getCurrentMemberStart())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_31 $$ assertEquals("wrong member3 start", noise1k_gz.length + noise32k_gz.length + a_gz.length, gzin.getCurrentMemberStart())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_32 $$ assertEquals("wrong member3 end", noise1k_gz.length + noise32k_gz.length + a_gz.length + hello_gz.length, gzin.getCurrentMemberEnd())[ CD ]
Line_3 $$ GZIPMembersInputStream gzin = new GZIPMembersInputStream(new ByteArrayInputStream(allfour_gz))-->Line_32 $$ assertEquals("wrong member3 end", noise1k_gz.length + noise32k_gz.length + a_gz.length + hello_gz.length, gzin.getCurrentMemberEnd())[ FD ]
Line_2 $$ public void testMemberIterator() throws IOException -->Line_33 $$ assertFalse(iter.hasNext())[ CD ]
Line_4 $$ Iterator<GZIPMembersInputStream> iter = gzin.memberIterator()-->Line_33 $$ assertFalse(iter.hasNext())[ FD ]
