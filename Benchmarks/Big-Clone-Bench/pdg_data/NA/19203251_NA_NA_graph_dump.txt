Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void readArchives(final VideoArchiveSet vas) throws IOException [ CD ]
Line_2 $$ private void readArchives(final VideoArchiveSet vas) throws IOException -->Line_3 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_2 $$ private void readArchives(final VideoArchiveSet vas) throws IOException -->Line_4 $$ String line = null[ CD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_6 $$ while ((line = in.readLine()) != null) [ FD ]
Line_4 $$ String line = null-->Line_6 $$ while ((line = in.readLine()) != null) [ FD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_6 $$ while ((line = in.readLine()) != null) [ CD ]
Line_3 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_6 $$ while ((line = in.readLine()) != null) [ FD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_7 $$ if (line.startsWith("ARCHIVE")) [ CD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_7 $$ if (line.startsWith("ARCHIVE")) [ FD ]
Line_4 $$ String line = null-->Line_7 $$ if (line.startsWith("ARCHIVE")) [ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_7 $$ if (line.startsWith("ARCHIVE")) [ CD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_7 $$ if (line.startsWith("ARCHIVE")) [ FD ]
Line_4 $$ String line = null-->Line_7 $$ if (line.startsWith("ARCHIVE")) [ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_8 $$ final StringTokenizer s = new StringTokenizer(line)[ CD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_9 $$ s.nextToken()[ CD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_9 $$ s.nextToken()[ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ CD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ CD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_11 $$ final Timecode timeCode = new Timecode(s.nextToken())[ CD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_11 $$ final Timecode timeCode = new Timecode(s.nextToken())[ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_12 $$ final VideoArchive va = new VideoArchive()[ CD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_13 $$ va.setTimeCode(timeCode)[ CD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_13 $$ va.setTimeCode(timeCode)[ FD ]
Line_11 $$ final Timecode timeCode = new Timecode(s.nextToken())-->Line_13 $$ va.setTimeCode(timeCode)[ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_14 $$ va.setTapeNumber(tapeNumber)[ CD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_14 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_14 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_15 $$ vas.addVideoArchive(va)[ CD ]
Line_2 $$ private void readArchives(final VideoArchiveSet vas) throws IOException -->Line_15 $$ vas.addVideoArchive(va)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_15 $$ vas.addVideoArchive(va)[ FD ]
Line_7 $$ if (line.startsWith("ARCHIVE")) -->Line_16 $$ archives.put(tapeNumber, va)[ CD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_16 $$ archives.put(tapeNumber, va)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_16 $$ archives.put(tapeNumber, va)[ FD ]
Line_3 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_22 $$ in.close()[ FD ]
Line_2 $$ private void readArchives(final VideoArchiveSet vas) throws IOException -->Line_24 $$ if (archives.size() == 0) [ CD ]
Line_24 $$ if (archives.size() == 0) -->Line_25 $$ log.warn("No lines with ARCHIVE were found in the current vif file, will try to look at another vif with same yearday, " + "ship and platform and try to get archives from there:")[ CD ]
Line_24 $$ if (archives.size() == 0) -->Line_26 $$ String urlBase = url.getPath().toString().substring(0, url.getPath().toString().lastIndexOf("/"))[ CD ]
Line_26 $$ String urlBase = url.getPath().toString().substring(0, url.getPath().toString().lastIndexOf("/"))-->Line_26 $$ String urlBase = url.getPath().toString().substring(0, url.getPath().toString().lastIndexOf("/"))[ CD ]
Line_24 $$ if (archives.size() == 0) -->Line_27 $$ File vifDir = new File(urlBase)[ CD ]
Line_24 $$ if (archives.size() == 0) -->Line_28 $$ File[] allYeardayFiles = vifDir.listFiles()[ CD ]
Line_28 $$ File[] allYeardayFiles = vifDir.listFiles()-->Line_28 $$ File[] allYeardayFiles = vifDir.listFiles()[ CD ]
Line_27 $$ File vifDir = new File(urlBase)-->Line_28 $$ File[] allYeardayFiles = vifDir.listFiles()[ FD ]
Line_24 $$ if (archives.size() == 0) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ CD ]
Line_24 $$ if (archives.size() == 0) -->Line_24 $$ if (archives.size() == 0) [ CD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) [ CD ]
Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) -->Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) [ CD ]
Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) -->Line_31 $$ String filename = allYeardayFiles[i].toString().substring(allYeardayFiles[i].toString().lastIndexOf("/"))[ CD ]
Line_31 $$ String filename = allYeardayFiles[i].toString().substring(allYeardayFiles[i].toString().lastIndexOf("/"))-->Line_31 $$ String filename = allYeardayFiles[i].toString().substring(allYeardayFiles[i].toString().lastIndexOf("/"))[ CD ]
Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) -->Line_32 $$ String fileLC = filename.toLowerCase()[ CD ]
Line_32 $$ String fileLC = filename.toLowerCase()-->Line_32 $$ String fileLC = filename.toLowerCase()[ CD ]
Line_31 $$ String filename = allYeardayFiles[i].toString().substring(allYeardayFiles[i].toString().lastIndexOf("/"))-->Line_32 $$ String fileLC = filename.toLowerCase()[ FD ]
Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) -->Line_33 $$ String toLookFor = new String(new Character(vifMetadata.shipCode).toString() + new Character(vifMetadata.platformCode).toString())[ CD ]
Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) -->Line_34 $$ String toLookForLC = toLookFor.toLowerCase()[ CD ]
Line_34 $$ String toLookForLC = toLookFor.toLowerCase()-->Line_34 $$ String toLookForLC = toLookFor.toLowerCase()[ CD ]
Line_33 $$ String toLookFor = new String(new Character(vifMetadata.shipCode).toString() + new Character(vifMetadata.platformCode).toString())-->Line_34 $$ String toLookForLC = toLookFor.toLowerCase()[ FD ]
Line_30 $$ if (allYeardayFiles[i].toString().endsWith(".vif")) -->Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) [ CD ]
Line_32 $$ String fileLC = filename.toLowerCase()-->Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) [ FD ]
Line_34 $$ String toLookForLC = toLookFor.toLowerCase()-->Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) [ FD ]
Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) -->Line_36 $$ log.warn("Will try to read archives from file " + allYeardayFiles[i])[ CD ]
Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) -->Line_37 $$ final BufferedReader tempIn = new BufferedReader(new FileReader(allYeardayFiles[i]))[ CD ]
Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) -->Line_38 $$ String tempLine = null[ CD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_40 $$ while ((tempLine = tempIn.readLine()) != null) [ FD ]
Line_38 $$ String tempLine = null-->Line_40 $$ while ((tempLine = tempIn.readLine()) != null) [ FD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_40 $$ while ((tempLine = tempIn.readLine()) != null) [ CD ]
Line_37 $$ final BufferedReader tempIn = new BufferedReader(new FileReader(allYeardayFiles[i]))-->Line_40 $$ while ((tempLine = tempIn.readLine()) != null) [ FD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ CD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ FD ]
Line_38 $$ String tempLine = null-->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ CD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ FD ]
Line_38 $$ String tempLine = null-->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)[ CD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_43 $$ s.nextToken()[ CD ]
Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)-->Line_43 $$ s.nextToken()[ FD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_43 $$ s.nextToken()[ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ CD ]
Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ CD ]
Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)-->Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ FD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_45 $$ final Timecode timeCode = new Timecode(s.nextToken())[ CD ]
Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)-->Line_45 $$ final Timecode timeCode = new Timecode(s.nextToken())[ FD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_45 $$ final Timecode timeCode = new Timecode(s.nextToken())[ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_46 $$ final VideoArchive va = new VideoArchive()[ CD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_47 $$ va.setTimeCode(timeCode)[ CD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_47 $$ va.setTimeCode(timeCode)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_47 $$ va.setTimeCode(timeCode)[ FD ]
Line_45 $$ final Timecode timeCode = new Timecode(s.nextToken())-->Line_47 $$ va.setTimeCode(timeCode)[ FD ]
Line_11 $$ final Timecode timeCode = new Timecode(s.nextToken())-->Line_47 $$ va.setTimeCode(timeCode)[ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_48 $$ va.setTapeNumber(tapeNumber)[ CD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_48 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_48 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_48 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_48 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_49 $$ vas.addVideoArchive(va)[ CD ]
Line_2 $$ private void readArchives(final VideoArchiveSet vas) throws IOException -->Line_49 $$ vas.addVideoArchive(va)[ FD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_49 $$ vas.addVideoArchive(va)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_49 $$ vas.addVideoArchive(va)[ FD ]
Line_41 $$ if (tempLine.startsWith("ARCHIVE")) -->Line_50 $$ archives.put(tapeNumber, va)[ CD ]
Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_50 $$ archives.put(tapeNumber, va)[ FD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_50 $$ archives.put(tapeNumber, va)[ FD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_50 $$ archives.put(tapeNumber, va)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_50 $$ archives.put(tapeNumber, va)[ FD ]
Line_37 $$ final BufferedReader tempIn = new BufferedReader(new FileReader(allYeardayFiles[i]))-->Line_56 $$ tempIn.close()[ FD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_60 $$ if (archives.size() > 0) [ CD ]
Line_60 $$ if (archives.size() > 0) -->Line_61 $$ log.warn("Found " + archives.size() + " archives in that vif so will use that")[ CD ]
Line_24 $$ if (archives.size() == 0) -->Line_65 $$ if (archives.size() == 0) [ CD ]
Line_65 $$ if (archives.size() == 0) -->Line_66 $$ log.warn("Still no archives were found in the file. Unable to process it.")[ CD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_7 $$ if (line.startsWith("ARCHIVE")) [ FD ]
Line_6 $$ while ((line = in.readLine()) != null) -->Line_7 $$ if (line.startsWith("ARCHIVE")) [ FD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_9 $$ s.nextToken()[ FD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ FD ]
Line_8 $$ final StringTokenizer s = new StringTokenizer(line)-->Line_11 $$ final Timecode timeCode = new Timecode(s.nextToken())[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_13 $$ va.setTimeCode(timeCode)[ FD ]
Line_11 $$ final Timecode timeCode = new Timecode(s.nextToken())-->Line_13 $$ va.setTimeCode(timeCode)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_14 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_14 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_15 $$ vas.addVideoArchive(va)[ FD ]
Line_10 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_16 $$ archives.put(tapeNumber, va)[ FD ]
Line_12 $$ final VideoArchive va = new VideoArchive()-->Line_16 $$ archives.put(tapeNumber, va)[ FD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) -->Line_29 $$ for (int i = 0; i < allYeardayFiles.length; i++) [ FD ]
Line_31 $$ String filename = allYeardayFiles[i].toString().substring(allYeardayFiles[i].toString().lastIndexOf("/"))-->Line_32 $$ String fileLC = filename.toLowerCase()[ FD ]
Line_33 $$ String toLookFor = new String(new Character(vifMetadata.shipCode).toString() + new Character(vifMetadata.platformCode).toString())-->Line_34 $$ String toLookForLC = toLookFor.toLowerCase()[ FD ]
Line_32 $$ String fileLC = filename.toLowerCase()-->Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) [ FD ]
Line_34 $$ String toLookForLC = toLookFor.toLowerCase()-->Line_35 $$ if (fileLC.indexOf(toLookForLC) >= 0) [ FD ]
Line_37 $$ final BufferedReader tempIn = new BufferedReader(new FileReader(allYeardayFiles[i]))-->Line_56 $$ tempIn.close()[ FD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ FD ]
Line_40 $$ while ((tempLine = tempIn.readLine()) != null) -->Line_41 $$ if (tempLine.startsWith("ARCHIVE")) [ FD ]
Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)-->Line_43 $$ s.nextToken()[ FD ]
Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)-->Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())[ FD ]
Line_42 $$ final StringTokenizer s = new StringTokenizer(tempLine)-->Line_45 $$ final Timecode timeCode = new Timecode(s.nextToken())[ FD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_47 $$ va.setTimeCode(timeCode)[ FD ]
Line_45 $$ final Timecode timeCode = new Timecode(s.nextToken())-->Line_47 $$ va.setTimeCode(timeCode)[ FD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_48 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_48 $$ va.setTapeNumber(tapeNumber)[ FD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_49 $$ vas.addVideoArchive(va)[ FD ]
Line_44 $$ final Integer tapeNumber = Integer.valueOf(s.nextToken())-->Line_50 $$ archives.put(tapeNumber, va)[ FD ]
Line_46 $$ final VideoArchive va = new VideoArchive()-->Line_50 $$ archives.put(tapeNumber, va)[ FD ]
