Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private byte[] getImage(String urlpath) throws Exception [ CD ]
Line_2 $$ private byte[] getImage(String urlpath) throws Exception -->Line_3 $$ URL url = new URL(urlpath)[ CD ]
Line_2 $$ private byte[] getImage(String urlpath) throws Exception -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(urlpath)-->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private byte[] getImage(String urlpath) throws Exception -->Line_5 $$ conn.setRequestMethod("GET")[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.setRequestMethod("GET")[ FD ]
Line_2 $$ private byte[] getImage(String urlpath) throws Exception -->Line_6 $$ conn.setConnectTimeout(6 * 1000)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.setConnectTimeout(6 * 1000)[ FD ]
Line_2 $$ private byte[] getImage(String urlpath) throws Exception -->Line_7 $$ if (conn.getResponseCode() == 200) [ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ if (conn.getResponseCode() == 200) [ FD ]
Line_7 $$ if (conn.getResponseCode() == 200) -->Line_8 $$ InputStream inputStream = conn.getInputStream()[ CD ]
Line_8 $$ InputStream inputStream = conn.getInputStream()-->Line_8 $$ InputStream inputStream = conn.getInputStream()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ InputStream inputStream = conn.getInputStream()[ FD ]
Line_7 $$ if (conn.getResponseCode() == 200) -->Line_9 $$ return readStream(inputStream)[ CD ]
Line_9 $$ return readStream(inputStream)-->Line_9 $$ return readStream(inputStream)[ CD ]
Line_8 $$ InputStream inputStream = conn.getInputStream()-->Line_9 $$ return readStream(inputStream)[ FD ]
Line_2 $$ private byte[] getImage(String urlpath) throws Exception -->Line_11 $$ return null[ CD ]
