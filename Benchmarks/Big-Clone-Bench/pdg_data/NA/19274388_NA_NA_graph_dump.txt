Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String generateHash(String string, String algoritmo) [ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(algoritmo)-->Line_4 $$ MessageDigest md = MessageDigest.getInstance(algoritmo)[ CD ]
Line_2 $$ public static String generateHash(String string, String algoritmo) -->Line_4 $$ MessageDigest md = MessageDigest.getInstance(algoritmo)[ FD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(algoritmo)-->Line_5 $$ md.update(string.getBytes())[ FD ]
Line_2 $$ public static String generateHash(String string, String algoritmo) -->Line_5 $$ md.update(string.getBytes())[ FD ]
Line_6 $$ byte[] result = md.digest()-->Line_6 $$ byte[] result = md.digest()[ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(algoritmo)-->Line_6 $$ byte[] result = md.digest()[ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_11 $$ firstPart = ((result[i] >> 4) & 0xf) << 4[ CD ]
Line_11 $$ firstPart = ((result[i] >> 4) & 0xf) << 4-->Line_11 $$ firstPart = ((result[i] >> 4) & 0xf) << 4[ FD ]
Line_7 $$ int firstPart-->Line_11 $$ firstPart = ((result[i] >> 4) & 0xf) << 4[ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_12 $$ lastPart = result[i] & 0xf[ CD ]
Line_12 $$ lastPart = result[i] & 0xf-->Line_12 $$ lastPart = result[i] & 0xf[ FD ]
Line_8 $$ int lastPart-->Line_12 $$ lastPart = result[i] & 0xf[ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_13 $$ if (firstPart == 0)[ CD ]
Line_11 $$ firstPart = ((result[i] >> 4) & 0xf) << 4-->Line_13 $$ if (firstPart == 0)[ FD ]
Line_7 $$ int firstPart-->Line_13 $$ if (firstPart == 0)[ FD ]
Line_13 $$ if (firstPart == 0)-->Line_13 $$ sBuilder.append("0")[ CD ]
Line_9 $$ StringBuilder sBuilder = new StringBuilder()-->Line_13 $$ sBuilder.append("0")[ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_14 $$ sBuilder.append(Integer.toHexString(firstPart | lastPart))[ CD ]
Line_9 $$ StringBuilder sBuilder = new StringBuilder()-->Line_14 $$ sBuilder.append(Integer.toHexString(firstPart | lastPart))[ FD ]
Line_16 $$ return sBuilder.toString()-->Line_16 $$ return sBuilder.toString()[ CD ]
Line_9 $$ StringBuilder sBuilder = new StringBuilder()-->Line_16 $$ return sBuilder.toString()[ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_11 $$ firstPart = ((result[i] >> 4) & 0xf) << 4-->Line_13 $$ if (firstPart == 0)[ FD ]
