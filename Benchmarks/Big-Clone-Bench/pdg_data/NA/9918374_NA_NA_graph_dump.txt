Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException [ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_3 $$ int key_len = key.length()[ CD ]
Line_3 $$ int key_len = key.length()-->Line_3 $$ int key_len = key.length()[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_3 $$ int key_len = key.length()[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_4 $$ if (salt.startsWith(saltPrefix)) [ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_4 $$ if (salt.startsWith(saltPrefix)) [ FD ]
Line_4 $$ if (salt.startsWith(saltPrefix)) -->Line_4 $$ if (salt.startsWith(saltPrefix)) [ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_4 $$ if (salt.startsWith(saltPrefix)) [ FD ]
Line_4 $$ if (salt.startsWith(saltPrefix)) -->Line_5 $$ salt = salt.substring(saltPrefix.length())[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_5 $$ salt = salt.substring(saltPrefix.length())[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_5 $$ salt = salt.substring(saltPrefix.length())[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_5 $$ salt = salt.substring(saltPrefix.length())[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_5 $$ salt = salt.substring(saltPrefix.length())[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_5 $$ salt = salt.substring(saltPrefix.length())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)[ CD ]
Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)-->Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_9 $$ md5.update(key.getBytes())[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_9 $$ md5.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_9 $$ md5.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_10 $$ md5.update(saltPrefix.getBytes())[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_10 $$ md5.update(saltPrefix.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_11 $$ md5.update(salt.getBytes(), 0, salt_len)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_11 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)-->Line_11 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_11 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_11 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")[ CD ]
Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")-->Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_13 $$ md5_alt.update(key.getBytes())[ CD ]
Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")-->Line_13 $$ md5_alt.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_13 $$ md5_alt.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_14 $$ md5_alt.update(salt.getBytes(), 0, salt_len)[ CD ]
Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")-->Line_14 $$ md5_alt.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)-->Line_14 $$ md5_alt.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_14 $$ md5_alt.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_14 $$ md5_alt.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_15 $$ md5_alt.update(key.getBytes())[ CD ]
Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")-->Line_15 $$ md5_alt.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_15 $$ md5_alt.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_16 $$ byte[] altResult = md5_alt.digest()[ CD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_16 $$ byte[] altResult = md5_alt.digest()[ CD ]
Line_12 $$ MessageDigest md5_alt = MessageDigest.getInstance("MD5")-->Line_16 $$ byte[] altResult = md5_alt.digest()[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_17 $$ int cnt[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException [ CD ]
Line_17 $$ int cnt-->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ CD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_17 $$ int cnt-->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_3 $$ int key_len = key.length()-->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ CD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_17 $$ int cnt-->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_19 $$ md5.update(altResult, 0, 16)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_19 $$ md5.update(altResult, 0, 16)[ FD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_19 $$ md5.update(altResult, 0, 16)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_21 $$ md5.update(altResult, 0, cnt)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_21 $$ md5.update(altResult, 0, cnt)[ FD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_21 $$ md5.update(altResult, 0, cnt)[ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_21 $$ md5.update(altResult, 0, cnt)[ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_21 $$ md5.update(altResult, 0, cnt)[ FD ]
Line_17 $$ int cnt-->Line_21 $$ md5.update(altResult, 0, cnt)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_22 $$ altResult[0] = 0[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException [ CD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_17 $$ int cnt-->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ CD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_17 $$ int cnt-->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_3 $$ int key_len = key.length()-->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ CD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_17 $$ int cnt-->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_24 $$ md5.update(((cnt & 1) != 0) ? altResult : key.getBytes(), 0, 1)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_24 $$ md5.update(((cnt & 1) != 0) ? altResult : key.getBytes(), 0, 1)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_24 $$ md5.update(((cnt & 1) != 0) ? altResult : key.getBytes(), 0, 1)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_26 $$ altResult = md5.digest()[ CD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_26 $$ altResult = md5.digest()[ FD ]
Line_26 $$ altResult = md5.digest()-->Line_26 $$ altResult = md5.digest()[ FD ]
Line_26 $$ altResult = md5.digest()-->Line_26 $$ altResult = md5.digest()[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_26 $$ altResult = md5.digest()[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException [ CD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_17 $$ int cnt-->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ CD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_17 $$ int cnt-->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ CD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_17 $$ int cnt-->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_28 $$ md5.reset()[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_28 $$ md5.reset()[ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_29 $$ if ((cnt & 1) != 0) [ CD ]
Line_29 $$ if ((cnt & 1) != 0) -->Line_30 $$ md5.update(key.getBytes())[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_30 $$ md5.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_30 $$ md5.update(key.getBytes())[ FD ]
Line_29 $$ if ((cnt & 1) != 0) -->Line_32 $$ md5.update(altResult, 0, 16)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_32 $$ md5.update(altResult, 0, 16)[ FD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_32 $$ md5.update(altResult, 0, 16)[ FD ]
Line_26 $$ altResult = md5.digest()-->Line_32 $$ md5.update(altResult, 0, 16)[ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_34 $$ if ((cnt % 3) != 0) [ CD ]
Line_34 $$ if ((cnt % 3) != 0) -->Line_35 $$ md5.update(salt.getBytes(), 0, salt_len)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_35 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_7 $$ int salt_len = Math.min(getDollarLessLength(salt), 8)-->Line_35 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_35 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_35 $$ md5.update(salt.getBytes(), 0, salt_len)[ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_37 $$ if ((cnt % 7) != 0) [ CD ]
Line_37 $$ if ((cnt % 7) != 0) -->Line_38 $$ md5.update(key.getBytes())[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_38 $$ md5.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_38 $$ md5.update(key.getBytes())[ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_40 $$ if ((cnt & 1) != 0) [ CD ]
Line_40 $$ if ((cnt & 1) != 0) -->Line_41 $$ md5.update(altResult, 0, 16)[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_41 $$ md5.update(altResult, 0, 16)[ FD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_41 $$ md5.update(altResult, 0, 16)[ FD ]
Line_26 $$ altResult = md5.digest()-->Line_41 $$ md5.update(altResult, 0, 16)[ FD ]
Line_40 $$ if ((cnt & 1) != 0) -->Line_43 $$ md5.update(key.getBytes())[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_43 $$ md5.update(key.getBytes())[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_43 $$ md5.update(key.getBytes())[ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_45 $$ altResult = md5.digest()[ CD ]
Line_45 $$ altResult = md5.digest()-->Line_45 $$ altResult = md5.digest()[ FD ]
Line_16 $$ byte[] altResult = md5_alt.digest()-->Line_45 $$ altResult = md5.digest()[ FD ]
Line_26 $$ altResult = md5.digest()-->Line_45 $$ altResult = md5.digest()[ FD ]
Line_45 $$ altResult = md5.digest()-->Line_45 $$ altResult = md5.digest()[ CD ]
Line_8 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_45 $$ altResult = md5.digest()[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_47 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_48 $$ sb.append(saltPrefix)[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append(saltPrefix)[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_49 $$ sb.append(new String(salt.getBytes(), 0, salt_len))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_49 $$ sb.append(new String(salt.getBytes(), 0, salt_len))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_49 $$ sb.append(new String(salt.getBytes(), 0, salt_len))[ FD ]
Line_5 $$ salt = salt.substring(saltPrefix.length())-->Line_49 $$ sb.append(new String(salt.getBytes(), 0, salt_len))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_50 $$ sb.append('$')[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_50 $$ sb.append('$')[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_51 $$ sb.append(b64From24bit(altResult[0], altResult[6], altResult[12], 4))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_51 $$ sb.append(b64From24bit(altResult[0], altResult[6], altResult[12], 4))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_52 $$ sb.append(b64From24bit(altResult[1], altResult[7], altResult[13], 4))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_52 $$ sb.append(b64From24bit(altResult[1], altResult[7], altResult[13], 4))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_53 $$ sb.append(b64From24bit(altResult[2], altResult[8], altResult[14], 4))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_53 $$ sb.append(b64From24bit(altResult[2], altResult[8], altResult[14], 4))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_54 $$ sb.append(b64From24bit(altResult[3], altResult[9], altResult[15], 4))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_54 $$ sb.append(b64From24bit(altResult[3], altResult[9], altResult[15], 4))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_55 $$ sb.append(b64From24bit(altResult[4], altResult[10], altResult[5], 4))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_55 $$ sb.append(b64From24bit(altResult[4], altResult[10], altResult[5], 4))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_56 $$ sb.append(b64From24bit((byte) 0, (byte) 0, altResult[11], 2))[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_56 $$ sb.append(b64From24bit((byte) 0, (byte) 0, altResult[11], 2))[ FD ]
Line_2 $$ public static byte[] crypt(String key, String salt) throws NoSuchAlgorithmException -->Line_57 $$ return sb.toString().getBytes()[ CD ]
Line_57 $$ return sb.toString().getBytes()-->Line_57 $$ return sb.toString().getBytes()[ CD ]
Line_47 $$ StringBuilder sb = new StringBuilder()-->Line_57 $$ return sb.toString().getBytes()[ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) -->Line_18 $$ for (cnt = key_len; cnt > 16; cnt -= 16) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) -->Line_23 $$ for (cnt = key_len; cnt > 0; cnt >>= 1) [ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) -->Line_27 $$ for (cnt = 0; cnt < 1000; cnt++) [ FD ]
Line_45 $$ altResult = md5.digest()-->Line_32 $$ md5.update(altResult, 0, 16)[ FD ]
Line_45 $$ altResult = md5.digest()-->Line_41 $$ md5.update(altResult, 0, 16)[ FD ]
