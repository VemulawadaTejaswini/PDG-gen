Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static boolean writeProperties(Map<String, String> customProps, File destination) throws IOException [ CD ]
Line_6 $$ BufferedInputStream existingCfgInStream = null-->Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())[ FD ]
Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())-->Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())[ FD ]
Line_2 $$ static boolean writeProperties(Map<String, String> customProps, File destination) throws IOException -->Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())[ FD ]
Line_5 $$ File tempFile = null-->Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)[ FD ]
Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)-->Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)[ FD ]
Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)-->Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)[ CD ]
Line_9 $$ PrintStream ps = null-->Line_15 $$ ps = new PrintStream(tempFile)[ FD ]
Line_15 $$ ps = new PrintStream(tempFile)-->Line_15 $$ ps = new PrintStream(tempFile)[ FD ]
Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) -->Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) [ FD ]
Line_11 $$ String line = null-->Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) [ FD ]
Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) -->Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) [ CD ]
Line_6 $$ BufferedInputStream existingCfgInStream = null-->Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) [ FD ]
Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())-->Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) [ FD ]
Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) -->Line_17 $$ String lineReady2write = setupLine(line, customProps)[ CD ]
Line_17 $$ String lineReady2write = setupLine(line, customProps)-->Line_17 $$ String lineReady2write = setupLine(line, customProps)[ CD ]
Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) -->Line_17 $$ String lineReady2write = setupLine(line, customProps)[ FD ]
Line_11 $$ String line = null-->Line_17 $$ String lineReady2write = setupLine(line, customProps)[ FD ]
Line_2 $$ static boolean writeProperties(Map<String, String> customProps, File destination) throws IOException -->Line_17 $$ String lineReady2write = setupLine(line, customProps)[ FD ]
Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) -->Line_18 $$ ps.println(lineReady2write)[ CD ]
Line_9 $$ PrintStream ps = null-->Line_18 $$ ps.println(lineReady2write)[ FD ]
Line_15 $$ ps = new PrintStream(tempFile)-->Line_18 $$ ps.println(lineReady2write)[ FD ]
Line_17 $$ String lineReady2write = setupLine(line, customProps)-->Line_18 $$ ps.println(lineReady2write)[ FD ]
Line_2 $$ static boolean writeProperties(Map<String, String> customProps, File destination) throws IOException -->Line_20 $$ destination.getParentFile().mkdirs()[ FD ]
Line_7 $$ FileInputStream in = null-->Line_21 $$ in = new FileInputStream(tempFile)[ FD ]
Line_21 $$ in = new FileInputStream(tempFile)-->Line_21 $$ in = new FileInputStream(tempFile)[ FD ]
Line_8 $$ FileOutputStream out = null-->Line_22 $$ out = new FileOutputStream(destination, false)[ FD ]
Line_22 $$ out = new FileOutputStream(destination, false)-->Line_22 $$ out = new FileOutputStream(destination, false)[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_23 $$ fromChannel = in.getChannel()[ FD ]
Line_23 $$ fromChannel = in.getChannel()-->Line_23 $$ fromChannel = in.getChannel()[ FD ]
Line_23 $$ fromChannel = in.getChannel()-->Line_23 $$ fromChannel = in.getChannel()[ CD ]
Line_7 $$ FileInputStream in = null-->Line_23 $$ fromChannel = in.getChannel()[ FD ]
Line_21 $$ in = new FileInputStream(tempFile)-->Line_23 $$ fromChannel = in.getChannel()[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_24 $$ toChannel = out.getChannel()[ FD ]
Line_24 $$ toChannel = out.getChannel()-->Line_24 $$ toChannel = out.getChannel()[ FD ]
Line_24 $$ toChannel = out.getChannel()-->Line_24 $$ toChannel = out.getChannel()[ CD ]
Line_8 $$ FileOutputStream out = null-->Line_24 $$ toChannel = out.getChannel()[ FD ]
Line_22 $$ out = new FileOutputStream(destination, false)-->Line_24 $$ toChannel = out.getChannel()[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_25 $$ fromChannel.transferTo(0, fromChannel.size(), toChannel)[ FD ]
Line_23 $$ fromChannel = in.getChannel()-->Line_25 $$ fromChannel.transferTo(0, fromChannel.size(), toChannel)[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_25 $$ fromChannel.transferTo(0, fromChannel.size(), toChannel)[ FD ]
Line_24 $$ toChannel = out.getChannel()-->Line_25 $$ fromChannel.transferTo(0, fromChannel.size(), toChannel)[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_25 $$ fromChannel.transferTo(0, fromChannel.size(), toChannel)[ FD ]
Line_23 $$ fromChannel = in.getChannel()-->Line_25 $$ fromChannel.transferTo(0, fromChannel.size(), toChannel)[ FD ]
Line_2 $$ static boolean writeProperties(Map<String, String> customProps, File destination) throws IOException -->Line_26 $$ L.info(Msg.msg("PropertiesIO.writeProperties.done").replace("#file#", destination.getAbsolutePath()))[ FD ]
Line_6 $$ BufferedInputStream existingCfgInStream = null-->Line_29 $$ if (existingCfgInStream != null)[ FD ]
Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())-->Line_29 $$ if (existingCfgInStream != null)[ FD ]
Line_29 $$ if (existingCfgInStream != null)-->Line_29 $$ existingCfgInStream.close()[ CD ]
Line_6 $$ BufferedInputStream existingCfgInStream = null-->Line_29 $$ existingCfgInStream.close()[ FD ]
Line_13 $$ existingCfgInStream = new BufferedInputStream(destination.exists() ? new FileInputStream(destination) : defaultPropertiesStream())-->Line_29 $$ existingCfgInStream.close()[ FD ]
Line_9 $$ PrintStream ps = null-->Line_30 $$ if (ps != null)[ FD ]
Line_15 $$ ps = new PrintStream(tempFile)-->Line_30 $$ if (ps != null)[ FD ]
Line_30 $$ if (ps != null)-->Line_30 $$ ps.close()[ CD ]
Line_9 $$ PrintStream ps = null-->Line_30 $$ ps.close()[ FD ]
Line_15 $$ ps = new PrintStream(tempFile)-->Line_30 $$ ps.close()[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_31 $$ if (fromChannel != null)[ FD ]
Line_23 $$ fromChannel = in.getChannel()-->Line_31 $$ if (fromChannel != null)[ FD ]
Line_31 $$ if (fromChannel != null)-->Line_31 $$ fromChannel.close()[ CD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_31 $$ fromChannel.close()[ FD ]
Line_23 $$ fromChannel = in.getChannel()-->Line_31 $$ fromChannel.close()[ FD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_32 $$ if (toChannel != null)[ FD ]
Line_24 $$ toChannel = out.getChannel()-->Line_32 $$ if (toChannel != null)[ FD ]
Line_32 $$ if (toChannel != null)-->Line_32 $$ toChannel.close()[ CD ]
Line_10 $$ FileChannel fromChannel = null, toChannel = null-->Line_32 $$ toChannel.close()[ FD ]
Line_24 $$ toChannel = out.getChannel()-->Line_32 $$ toChannel.close()[ FD ]
Line_8 $$ FileOutputStream out = null-->Line_33 $$ if (out != null)[ FD ]
Line_22 $$ out = new FileOutputStream(destination, false)-->Line_33 $$ if (out != null)[ FD ]
Line_33 $$ if (out != null)-->Line_33 $$ out.close()[ CD ]
Line_8 $$ FileOutputStream out = null-->Line_33 $$ out.close()[ FD ]
Line_22 $$ out = new FileOutputStream(destination, false)-->Line_33 $$ out.close()[ FD ]
Line_7 $$ FileInputStream in = null-->Line_34 $$ if (in != null)[ FD ]
Line_21 $$ in = new FileInputStream(tempFile)-->Line_34 $$ if (in != null)[ FD ]
Line_34 $$ if (in != null)-->Line_34 $$ in.close()[ CD ]
Line_7 $$ FileInputStream in = null-->Line_34 $$ in.close()[ FD ]
Line_21 $$ in = new FileInputStream(tempFile)-->Line_34 $$ in.close()[ FD ]
Line_5 $$ File tempFile = null-->Line_35 $$ if (tempFile != null && tempFile.exists())[ FD ]
Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)-->Line_35 $$ if (tempFile != null && tempFile.exists())[ FD ]
Line_35 $$ if (tempFile != null && tempFile.exists())-->Line_35 $$ tempFile.delete()[ CD ]
Line_5 $$ File tempFile = null-->Line_35 $$ tempFile.delete()[ FD ]
Line_14 $$ tempFile = File.createTempFile("properties-", ".tmp", null)-->Line_35 $$ tempFile.delete()[ FD ]
Line_16 $$ while ((line = Utils.readLine(existingCfgInStream)) != null) -->Line_17 $$ String lineReady2write = setupLine(line, customProps)[ FD ]
Line_17 $$ String lineReady2write = setupLine(line, customProps)-->Line_18 $$ ps.println(lineReady2write)[ FD ]
