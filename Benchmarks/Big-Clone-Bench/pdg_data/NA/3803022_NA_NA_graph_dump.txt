Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) [ CD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_3 $$ if (sessionid == null) [ CD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_3 $$ if (sessionid == null) [ FD ]
Line_3 $$ if (sessionid == null) -->Line_4 $$ return "error"[ CD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_6 $$ String loginapp = SSOFilter.getLoginapp()[ CD ]
Line_6 $$ String loginapp = SSOFilter.getLoginapp()-->Line_6 $$ String loginapp = SSOFilter.getLoginapp()[ CD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)[ CD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))-->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ CD ]
Line_7 $$ String u = SSOUtil.addParameter(loginapp + "/api/validatesessionid", "sessionid", sessionid)-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_8 $$ u = SSOUtil.addParameter(u, "servicekey", servicekey)-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_9 $$ u = SSOUtil.addParameter(u, "ip", request.getRemoteHost())-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_10 $$ u = SSOUtil.addParameter(u, "url", encodeUrl(request.getRequestURI()))-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))-->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_11 $$ u = SSOUtil.addParameter(u, "useragent", request.getHeader("User-Agent"))[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_12 $$ String response = "error"[ CD ]
Line_14 $$ URL url = new URL(u)-->Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_17 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_16 $$ String line-->Line_17 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_17 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_17 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_17 $$ while ((line = reader.readLine()) != null) -->Line_18 $$ response = line.trim()[ CD ]
Line_18 $$ response = line.trim()-->Line_18 $$ response = line.trim()[ FD ]
Line_12 $$ String response = "error"-->Line_18 $$ response = line.trim()[ FD ]
Line_18 $$ response = line.trim()-->Line_18 $$ response = line.trim()[ CD ]
Line_17 $$ while ((line = reader.readLine()) != null) -->Line_18 $$ response = line.trim()[ FD ]
Line_16 $$ String line-->Line_18 $$ response = line.trim()[ FD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_20 $$ reader.close()[ FD ]
Line_2 $$ public static String validateSession(String sessionid, String servicekey, HttpServletRequest request) -->Line_24 $$ if ("error".equals(response)) [ CD ]
Line_18 $$ response = line.trim()-->Line_24 $$ if ("error".equals(response)) [ FD ]
Line_12 $$ String response = "error"-->Line_24 $$ if ("error".equals(response)) [ FD ]
Line_24 $$ if ("error".equals(response)) -->Line_24 $$ if ("error".equals(response)) [ CD ]
Line_18 $$ response = line.trim()-->Line_24 $$ if ("error".equals(response)) [ FD ]
Line_12 $$ String response = "error"-->Line_24 $$ if ("error".equals(response)) [ FD ]
Line_24 $$ if ("error".equals(response)) -->Line_25 $$ return "error"[ CD ]
Line_24 $$ if ("error".equals(response)) -->Line_27 $$ return response[ CD ]
Line_17 $$ while ((line = reader.readLine()) != null) -->Line_18 $$ response = line.trim()[ FD ]
