Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_4 $$ File dest = new File(location)-->Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) [ FD ]
Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) -->Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) [ CD ]
Line_4 $$ File dest = new File(location)-->Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) [ FD ]
Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) -->Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) [ CD ]
Line_4 $$ File dest = new File(location)-->Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) [ FD ]
Line_4 $$ File dest = new File(location)-->Line_6 $$ throw new IOException("Impossible de crÃ©er un dossier (" + dest.getParent() + ").")[ FD ]
Line_5 $$ if ((dest.getParent() != null && !dest.getParentFile().isDirectory() && !dest.getParentFile().mkdirs())) -->Line_7 $$ if (dest.exists() && !dest.delete()) [ CD ]
Line_4 $$ File dest = new File(location)-->Line_7 $$ if (dest.exists() && !dest.delete()) [ FD ]
Line_7 $$ if (dest.exists() && !dest.delete()) -->Line_7 $$ if (dest.exists() && !dest.delete()) [ CD ]
Line_4 $$ File dest = new File(location)-->Line_7 $$ if (dest.exists() && !dest.delete()) [ FD ]
Line_7 $$ if (dest.exists() && !dest.delete()) -->Line_9 $$ if (!dest.createNewFile()) [ CD ]
Line_9 $$ if (!dest.createNewFile()) -->Line_9 $$ if (!dest.createNewFile()) [ CD ]
Line_9 $$ if (!dest.createNewFile()) -->Line_9 $$ if (!dest.createNewFile()) [ CD ]
Line_4 $$ File dest = new File(location)-->Line_9 $$ if (!dest.createNewFile()) [ FD ]
Line_12 $$ FileChannel in = new FileInputStream(file).getChannel()-->Line_12 $$ FileChannel in = new FileInputStream(file).getChannel()[ CD ]
Line_13 $$ FileChannel out = new FileOutputStream(dest).getChannel()-->Line_13 $$ FileChannel out = new FileOutputStream(dest).getChannel()[ CD ]
Line_12 $$ FileChannel in = new FileInputStream(file).getChannel()-->Line_15 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_13 $$ FileChannel out = new FileOutputStream(dest).getChannel()-->Line_15 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_12 $$ FileChannel in = new FileInputStream(file).getChannel()-->Line_15 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_12 $$ FileChannel in = new FileInputStream(file).getChannel()-->Line_17 $$ in.close()[ FD ]
Line_13 $$ FileChannel out = new FileOutputStream(dest).getChannel()-->Line_18 $$ out.close()[ FD ]
