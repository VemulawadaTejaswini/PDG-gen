Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Object construct() [ CD ]
Line_2 $$ public Object construct() -->Line_3 $$ String fullName = lRegatta.getSaveDirectory() + lRegatta.getSaveName()[ CD ]
Line_2 $$ public Object construct() -->Line_4 $$ System.out.println(MessageFormat.format(res.getString("MainMessageBackingUp"), new Object[] [ CD ]
Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)-->Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)[ FD ]
Line_10 $$ int n = 0-->Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)[ FD ]
Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)-->Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)[ CD ]
Line_6 $$ FileInputStream fis = new FileInputStream(new File(fullName))-->Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)[ FD ]
Line_9 $$ byte[] buffer = new byte[bufsize]-->Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)[ FD ]
Line_8 $$ int bufsize = 1024-->Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)[ FD ]
Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)-->Line_11 $$ fos.write(buffer, 0, n)[ CD ]
Line_7 $$ FileOutputStream fos = new FileOutputStream(new File(fullName + BAK))-->Line_11 $$ fos.write(buffer, 0, n)[ FD ]
Line_9 $$ byte[] buffer = new byte[bufsize]-->Line_11 $$ fos.write(buffer, 0, n)[ FD ]
Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)-->Line_11 $$ fos.write(buffer, 0, n)[ FD ]
Line_10 $$ int n = 0-->Line_11 $$ fos.write(buffer, 0, n)[ FD ]
Line_7 $$ FileOutputStream fos = new FileOutputStream(new File(fullName + BAK))-->Line_12 $$ fos.flush()[ FD ]
Line_7 $$ FileOutputStream fos = new FileOutputStream(new File(fullName + BAK))-->Line_13 $$ fos.close()[ FD ]
Line_2 $$ public Object construct() -->Line_17 $$ return null[ CD ]
Line_11 $$ while ((n = fis.read(buffer, 0, bufsize)) >= 0) fos.write(buffer, 0, n)-->Line_11 $$ fos.write(buffer, 0, n)[ FD ]
