Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String gateway() throws Exception [ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_3 $$ paymentConfig = paymentConfigService.load(paymentConfig.getId())[ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_4 $$ if (paymentType == PaymentType.recharge) [ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_5 $$ if (amountPayable == null) [ CD ]
Line_5 $$ if (amountPayable == null) -->Line_6 $$ addActionError("请输入充值金额！")[ CD ]
Line_5 $$ if (amountPayable == null) -->Line_7 $$ return ERROR[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_9 $$ if (amountPayable.compareTo(new BigDecimal("0")) <= 0) [ CD ]
Line_9 $$ if (amountPayable.compareTo(new BigDecimal("0")) <= 0) -->Line_10 $$ addActionError("充值金额必须大于0！")[ CD ]
Line_9 $$ if (amountPayable.compareTo(new BigDecimal("0")) <= 0) -->Line_11 $$ return ERROR[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_13 $$ if (amountPayable.scale() > getSystemConfig().getOrderScale()) [ CD ]
Line_13 $$ if (amountPayable.scale() > getSystemConfig().getOrderScale()) -->Line_14 $$ addActionError("充值金额小数位超出限制！")[ CD ]
Line_13 $$ if (amountPayable.scale() > getSystemConfig().getOrderScale()) -->Line_15 $$ return ERROR[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_17 $$ if (paymentConfig == null || StringUtils.isEmpty(paymentConfig.getId())) [ CD ]
Line_17 $$ if (paymentConfig == null || StringUtils.isEmpty(paymentConfig.getId())) -->Line_18 $$ addActionError("请选择支付方式！")[ CD ]
Line_17 $$ if (paymentConfig == null || StringUtils.isEmpty(paymentConfig.getId())) -->Line_19 $$ return ERROR[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_21 $$ paymentConfig = paymentConfigService.load(paymentConfig.getId())[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_22 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit || paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) [ CD ]
Line_22 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit || paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) -->Line_23 $$ addActionError("支付方式错误！")[ CD ]
Line_22 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit || paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) -->Line_24 $$ return ERROR[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_26 $$ paymentFee = paymentConfig.getPaymentFee(amountPayable)[ CD ]
Line_4 $$ if (paymentType == PaymentType.recharge) -->Line_27 $$ if (paymentType == PaymentType.deposit) [ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_28 $$ if (order == null || StringUtils.isEmpty(order.getId())) [ CD ]
Line_28 $$ if (order == null || StringUtils.isEmpty(order.getId())) -->Line_29 $$ addActionError("订单信息错误！")[ CD ]
Line_28 $$ if (order == null || StringUtils.isEmpty(order.getId())) -->Line_30 $$ return ERROR[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_32 $$ order = orderService.load(order.getId())[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_33 $$ paymentConfig = order.getPaymentConfig()[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_34 $$ if (paymentConfig.getPaymentConfigType() != PaymentConfigType.deposit) [ CD ]
Line_34 $$ if (paymentConfig.getPaymentConfigType() != PaymentConfigType.deposit) -->Line_35 $$ addActionError("支付方式错误！")[ CD ]
Line_34 $$ if (paymentConfig.getPaymentConfigType() != PaymentConfigType.deposit) -->Line_36 $$ return ERROR[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_38 $$ if (order.getOrderStatus() == OrderStatus.completed || order.getOrderStatus() == OrderStatus.invalid) [ CD ]
Line_38 $$ if (order.getOrderStatus() == OrderStatus.completed || order.getOrderStatus() == OrderStatus.invalid) -->Line_39 $$ addActionError("订单状态错误！")[ CD ]
Line_38 $$ if (order.getOrderStatus() == OrderStatus.completed || order.getOrderStatus() == OrderStatus.invalid) -->Line_40 $$ return ERROR[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_42 $$ if (order.getPaymentStatus() == com.nodeshop.entity.Order.PaymentStatus.paid) [ CD ]
Line_42 $$ if (order.getPaymentStatus() == com.nodeshop.entity.Order.PaymentStatus.paid) -->Line_43 $$ addActionError("订单付款状态错误！")[ CD ]
Line_42 $$ if (order.getPaymentStatus() == com.nodeshop.entity.Order.PaymentStatus.paid) -->Line_44 $$ return ERROR[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_46 $$ if (getLoginMember().getDeposit().compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) < 0) [ CD ]
Line_46 $$ if (getLoginMember().getDeposit().compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) < 0) -->Line_48 $$ setResponseNoCache()[ CD ]
Line_46 $$ if (getLoginMember().getDeposit().compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) < 0) -->Line_49 $$ return "deposit_result"[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_51 $$ paymentFee = order.getPaymentFee()[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_52 $$ amountPayable = order.getTotalAmount().subtract(paymentFee).subtract(order.getPaidAmount())[ CD ]
Line_27 $$ if (paymentType == PaymentType.deposit) -->Line_53 $$ if (paymentType == PaymentType.offline) [ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_54 $$ if (order == null || StringUtils.isEmpty(order.getId())) [ CD ]
Line_54 $$ if (order == null || StringUtils.isEmpty(order.getId())) -->Line_55 $$ addActionError("订单信息错误！")[ CD ]
Line_54 $$ if (order == null || StringUtils.isEmpty(order.getId())) -->Line_56 $$ return ERROR[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_58 $$ order = orderService.load(order.getId())[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_59 $$ if (order.getOrderStatus() == OrderStatus.completed || order.getOrderStatus() == OrderStatus.invalid) [ CD ]
Line_59 $$ if (order.getOrderStatus() == OrderStatus.completed || order.getOrderStatus() == OrderStatus.invalid) -->Line_60 $$ addActionError("订单状态错误！")[ CD ]
Line_59 $$ if (order.getOrderStatus() == OrderStatus.completed || order.getOrderStatus() == OrderStatus.invalid) -->Line_61 $$ return ERROR[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_63 $$ if (order.getPaymentStatus() == com.nodeshop.entity.Order.PaymentStatus.paid) [ CD ]
Line_63 $$ if (order.getPaymentStatus() == com.nodeshop.entity.Order.PaymentStatus.paid) -->Line_64 $$ addActionError("订单付款状态错误！")[ CD ]
Line_63 $$ if (order.getPaymentStatus() == com.nodeshop.entity.Order.PaymentStatus.paid) -->Line_65 $$ return ERROR[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_67 $$ paymentConfig = order.getPaymentConfig()[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_68 $$ if (paymentConfig.getPaymentConfigType() != PaymentConfigType.offline) [ CD ]
Line_68 $$ if (paymentConfig.getPaymentConfigType() != PaymentConfigType.offline) -->Line_69 $$ addActionError("支付方式错误！")[ CD ]
Line_68 $$ if (paymentConfig.getPaymentConfigType() != PaymentConfigType.offline) -->Line_70 $$ return ERROR[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_72 $$ paymentFee = order.getPaymentFee()[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_73 $$ amountPayable = order.getProductTotalPrice().add(order.getDeliveryFee()).subtract(order.getPaidAmount())[ CD ]
Line_53 $$ if (paymentType == PaymentType.offline) -->Line_74 $$ if (paymentType == PaymentType.online) [ CD ]
Line_74 $$ if (paymentType == PaymentType.online) -->Line_75 $$ if (order == null || StringUtils.isEmpty(order.getId())) [ CD ]
Line_75 $$ if (order == null || StringUtils.isEmpty(order.getId())) -->Line_76 $$ addActionError("订单信息错误！")[ CD ]
Line_75 $$ if (order == null || StringUtils.isEmpty(order.getId())) -->Line_77 $$ return ERROR[ CD ]
Line_74 $$ if (paymentType == PaymentType.online) -->Line_79 $$ order = orderService.load(order.getId())[ CD ]
Line_74 $$ if (paymentType == PaymentType.online) -->Line_80 $$ paymentConfig = order.getPaymentConfig()[ CD ]
Line_74 $$ if (paymentType == PaymentType.online) -->Line_81 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit || paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) [ CD ]
Line_81 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit || paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) -->Line_82 $$ addActionError("支付方式错误！")[ CD ]
Line_81 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit || paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) -->Line_83 $$ return ERROR[ CD ]
Line_74 $$ if (paymentType == PaymentType.online) -->Line_85 $$ paymentFee = order.getPaymentFee()[ CD ]
Line_74 $$ if (paymentType == PaymentType.online) -->Line_86 $$ amountPayable = order.getTotalAmount().subtract(paymentFee).subtract(order.getPaidAmount())[ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)[ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)[ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_89 $$ String description = null[ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_90 $$ String paymentUrl = null[ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_91 $$ if (paymentType == PaymentType.recharge) [ CD ]
Line_91 $$ if (paymentType == PaymentType.recharge) -->Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"[ CD ]
Line_89 $$ String description = null-->Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"[ FD ]
Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"-->Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"[ FD ]
Line_91 $$ if (paymentType == PaymentType.recharge) -->Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"[ CD ]
Line_89 $$ String description = null-->Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"[ FD ]
Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"-->Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"[ FD ]
Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"-->Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"[ FD ]
Line_2 $$ public String gateway() throws Exception -->Line_96 $$ Member loginMember = getLoginMember()[ CD ]
Line_96 $$ Member loginMember = getLoginMember()-->Line_96 $$ Member loginMember = getLoginMember()[ CD ]
Line_2 $$ public String gateway() throws Exception -->Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) [ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_98 $$ if (totalAmount.compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) == 0) [ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_98 $$ if (totalAmount.compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) == 0) [ FD ]
Line_98 $$ if (totalAmount.compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) == 0) -->Line_99 $$ order.setPaymentStatus(com.nodeshop.entity.Order.PaymentStatus.paid)[ CD ]
Line_98 $$ if (totalAmount.compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) == 0) -->Line_100 $$ order.setPaidAmount(order.getPaidAmount().add(totalAmount))[ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_100 $$ order.setPaidAmount(order.getPaidAmount().add(totalAmount))[ FD ]
Line_98 $$ if (totalAmount.compareTo(order.getTotalAmount().subtract(order.getPaidAmount())) == 0) -->Line_101 $$ if (totalAmount.compareTo(order.getTotalAmount()) < 0) [ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_101 $$ if (totalAmount.compareTo(order.getTotalAmount()) < 0) [ FD ]
Line_101 $$ if (totalAmount.compareTo(order.getTotalAmount()) < 0) -->Line_102 $$ order.setPaymentStatus(com.nodeshop.entity.Order.PaymentStatus.partPayment)[ CD ]
Line_101 $$ if (totalAmount.compareTo(order.getTotalAmount()) < 0) -->Line_103 $$ order.setPaidAmount(order.getPaidAmount().add(totalAmount))[ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_103 $$ order.setPaidAmount(order.getPaidAmount().add(totalAmount))[ FD ]
Line_101 $$ if (totalAmount.compareTo(order.getTotalAmount()) < 0) -->Line_105 $$ addActionError("交易金额错误！")[ CD ]
Line_101 $$ if (totalAmount.compareTo(order.getTotalAmount()) < 0) -->Line_106 $$ return ERROR[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_108 $$ orderService.update(order)[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_109 $$ loginMember.setDeposit(loginMember.getDeposit().subtract(totalAmount))[ CD ]
Line_96 $$ Member loginMember = getLoginMember()-->Line_109 $$ loginMember.setDeposit(loginMember.getDeposit().subtract(totalAmount))[ FD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_109 $$ loginMember.setDeposit(loginMember.getDeposit().subtract(totalAmount))[ FD ]
Line_96 $$ Member loginMember = getLoginMember()-->Line_109 $$ loginMember.setDeposit(loginMember.getDeposit().subtract(totalAmount))[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_110 $$ memberService.update(loginMember)[ CD ]
Line_96 $$ Member loginMember = getLoginMember()-->Line_110 $$ memberService.update(loginMember)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_111 $$ Deposit deposit = new Deposit()[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_112 $$ deposit.setDepositType(DepositType.memberPayment)[ CD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_112 $$ deposit.setDepositType(DepositType.memberPayment)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_113 $$ deposit.setCredit(new BigDecimal("0"))[ CD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_113 $$ deposit.setCredit(new BigDecimal("0"))[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_114 $$ deposit.setDebit(amountPayable)[ CD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_114 $$ deposit.setDebit(amountPayable)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_115 $$ deposit.setBalance(loginMember.getDeposit())[ CD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_115 $$ deposit.setBalance(loginMember.getDeposit())[ FD ]
Line_96 $$ Member loginMember = getLoginMember()-->Line_115 $$ deposit.setBalance(loginMember.getDeposit())[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_116 $$ deposit.setMember(loginMember)[ CD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_116 $$ deposit.setMember(loginMember)[ FD ]
Line_96 $$ Member loginMember = getLoginMember()-->Line_116 $$ deposit.setMember(loginMember)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_117 $$ depositService.save(deposit)[ CD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_117 $$ depositService.save(deposit)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_118 $$ Payment payment = new Payment()[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_119 $$ payment.setPaymentType(paymentType)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_119 $$ payment.setPaymentType(paymentType)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_120 $$ payment.setPaymentConfigName(paymentConfig.getName())[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_120 $$ payment.setPaymentConfigName(paymentConfig.getName())[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_121 $$ payment.setBankName(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_121 $$ payment.setBankName(null)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_122 $$ payment.setBankAccount(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_122 $$ payment.setBankAccount(null)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_123 $$ payment.setTotalAmount(totalAmount)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_123 $$ payment.setTotalAmount(totalAmount)[ FD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_123 $$ payment.setTotalAmount(totalAmount)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_124 $$ payment.setPaymentFee(paymentFee)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_124 $$ payment.setPaymentFee(paymentFee)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_125 $$ payment.setPayer(getLoginMember().getUsername())[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_125 $$ payment.setPayer(getLoginMember().getUsername())[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_126 $$ payment.setOperator(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_126 $$ payment.setOperator(null)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_127 $$ payment.setMemo(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_127 $$ payment.setMemo(null)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_128 $$ payment.setPaymentStatus(PaymentStatus.success)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_128 $$ payment.setPaymentStatus(PaymentStatus.success)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_129 $$ payment.setPaymentConfig(paymentConfig)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_129 $$ payment.setPaymentConfig(paymentConfig)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_130 $$ payment.setDeposit(deposit)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_130 $$ payment.setDeposit(deposit)[ FD ]
Line_111 $$ Deposit deposit = new Deposit()-->Line_130 $$ payment.setDeposit(deposit)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_131 $$ payment.setOrder(order)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_131 $$ payment.setOrder(order)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_132 $$ paymentService.save(payment)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_132 $$ paymentService.save(payment)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_133 $$ if (getSystemConfig().getStoreFreezeTime() == StoreFreezeTime.payment) [ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_135 $$ Product product = orderItem.getProduct()[ CD ]
Line_134 $$ for (OrderItem orderItem : order.getOrderItemSet()) -->Line_135 $$ Product product = orderItem.getProduct()[ FD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_136 $$ if (product.getStore() != null) [ FD ]
Line_136 $$ if (product.getStore() != null) -->Line_137 $$ product.setFreezeStore(product.getFreezeStore() + orderItem.getProductQuantity())[ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_137 $$ product.setFreezeStore(product.getFreezeStore() + orderItem.getProductQuantity())[ FD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_137 $$ product.setFreezeStore(product.getFreezeStore() + orderItem.getProductQuantity())[ FD ]
Line_134 $$ for (OrderItem orderItem : order.getOrderItemSet()) -->Line_137 $$ product.setFreezeStore(product.getFreezeStore() + orderItem.getProductQuantity())[ FD ]
Line_136 $$ if (product.getStore() != null) -->Line_138 $$ if (product.getIsOutOfStock()) [ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_138 $$ if (product.getIsOutOfStock()) [ FD ]
Line_138 $$ if (product.getIsOutOfStock()) -->Line_138 $$ if (product.getIsOutOfStock()) [ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_138 $$ if (product.getIsOutOfStock()) [ FD ]
Line_138 $$ if (product.getIsOutOfStock()) -->Line_139 $$ Hibernate.initialize(orderItem.getProduct().getProductAttributeMapStore())[ CD ]
Line_134 $$ for (OrderItem orderItem : order.getOrderItemSet()) -->Line_139 $$ Hibernate.initialize(orderItem.getProduct().getProductAttributeMapStore())[ FD ]
Line_136 $$ if (product.getStore() != null) -->Line_141 $$ productService.update(product)[ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_141 $$ productService.update(product)[ FD ]
Line_136 $$ if (product.getStore() != null) -->Line_142 $$ if (product.getIsOutOfStock()) [ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_142 $$ if (product.getIsOutOfStock()) [ FD ]
Line_142 $$ if (product.getIsOutOfStock()) -->Line_142 $$ if (product.getIsOutOfStock()) [ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_142 $$ if (product.getIsOutOfStock()) [ FD ]
Line_142 $$ if (product.getIsOutOfStock()) -->Line_143 $$ flushCache()[ CD ]
Line_142 $$ if (product.getIsOutOfStock()) -->Line_144 $$ htmlService.productContentBuildHtml(product)[ CD ]
Line_135 $$ Product product = orderItem.getProduct()-->Line_144 $$ htmlService.productContentBuildHtml(product)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_149 $$ OrderLog orderLog = new OrderLog()[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_150 $$ orderLog.setOrderLogType(OrderLogType.payment)[ CD ]
Line_149 $$ OrderLog orderLog = new OrderLog()-->Line_150 $$ orderLog.setOrderLogType(OrderLogType.payment)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_151 $$ orderLog.setOrderSn(order.getOrderSn())[ CD ]
Line_149 $$ OrderLog orderLog = new OrderLog()-->Line_151 $$ orderLog.setOrderSn(order.getOrderSn())[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_152 $$ orderLog.setOperator(null)[ CD ]
Line_149 $$ OrderLog orderLog = new OrderLog()-->Line_152 $$ orderLog.setOperator(null)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_153 $$ orderLog.setInfo("支付总金额：" + payment.getTotalAmount())[ CD ]
Line_149 $$ OrderLog orderLog = new OrderLog()-->Line_153 $$ orderLog.setInfo("支付总金额：" + payment.getTotalAmount())[ FD ]
Line_118 $$ Payment payment = new Payment()-->Line_153 $$ orderLog.setInfo("支付总金额：" + payment.getTotalAmount())[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_154 $$ orderLog.setOrder(order)[ CD ]
Line_149 $$ OrderLog orderLog = new OrderLog()-->Line_154 $$ orderLog.setOrder(order)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_155 $$ orderLogService.save(orderLog)[ CD ]
Line_149 $$ OrderLog orderLog = new OrderLog()-->Line_155 $$ orderLogService.save(orderLog)[ FD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_157 $$ setResponseNoCache()[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_158 $$ return "deposit_result"[ CD ]
Line_97 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.deposit) -->Line_159 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) [ CD ]
Line_159 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) -->Line_161 $$ return "offline_result"[ CD ]
Line_159 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.offline) -->Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) [ CD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_163 $$ TenpayConfig tenpayConfig = (TenpayConfig) paymentConfig.getConfigObject()[ CD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_165 $$ payment.setPaymentType(paymentType)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_165 $$ payment.setPaymentType(paymentType)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_166 $$ payment.setPaymentConfigName(paymentConfig.getName())[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_166 $$ payment.setPaymentConfigName(paymentConfig.getName())[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_167 $$ payment.setBankName(getText("PaymentConfigType.tenpay"))[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_167 $$ payment.setBankName(getText("PaymentConfigType.tenpay"))[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_168 $$ payment.setBankAccount(tenpayConfig.getBargainorId())[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_168 $$ payment.setBankAccount(tenpayConfig.getBargainorId())[ FD ]
Line_163 $$ TenpayConfig tenpayConfig = (TenpayConfig) paymentConfig.getConfigObject()-->Line_168 $$ payment.setBankAccount(tenpayConfig.getBargainorId())[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_169 $$ payment.setTotalAmount(totalAmount)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_169 $$ payment.setTotalAmount(totalAmount)[ FD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_169 $$ payment.setTotalAmount(totalAmount)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_170 $$ payment.setPaymentFee(paymentFee)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_170 $$ payment.setPaymentFee(paymentFee)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_171 $$ payment.setPayer(getLoginMember().getUsername())[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_171 $$ payment.setPayer(getLoginMember().getUsername())[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_172 $$ payment.setOperator(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_172 $$ payment.setOperator(null)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_173 $$ payment.setMemo(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_173 $$ payment.setMemo(null)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_174 $$ payment.setPaymentStatus(PaymentStatus.ready)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_174 $$ payment.setPaymentStatus(PaymentStatus.ready)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_175 $$ payment.setPaymentConfig(paymentConfig)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_175 $$ payment.setPaymentConfig(paymentConfig)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_176 $$ payment.setDeposit(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_176 $$ payment.setDeposit(null)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_177 $$ if (paymentType == PaymentType.recharge) [ CD ]
Line_177 $$ if (paymentType == PaymentType.recharge) -->Line_178 $$ payment.setOrder(null)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_178 $$ payment.setOrder(null)[ FD ]
Line_177 $$ if (paymentType == PaymentType.recharge) -->Line_180 $$ payment.setOrder(order)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_180 $$ payment.setOrder(order)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_182 $$ paymentService.save(payment)[ CD ]
Line_118 $$ Payment payment = new Payment()-->Line_182 $$ paymentService.save(payment)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_183 $$ String ip = getRequest().getRemoteAddr()[ CD ]
Line_183 $$ String ip = getRequest().getRemoteAddr()-->Line_183 $$ String ip = getRequest().getRemoteAddr()[ CD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_184 $$ if (tenpayConfig.getTenpayType() == TenpayType.direct) [ CD ]
Line_163 $$ TenpayConfig tenpayConfig = (TenpayConfig) paymentConfig.getConfigObject()-->Line_184 $$ if (tenpayConfig.getTenpayType() == TenpayType.direct) [ FD ]
Line_184 $$ if (tenpayConfig.getTenpayType() == TenpayType.direct) -->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ CD ]
Line_90 $$ String paymentUrl = null-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_89 $$ String description = null-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_183 $$ String ip = getRequest().getRemoteAddr()-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_118 $$ Payment payment = new Payment()-->Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)[ FD ]
Line_184 $$ if (tenpayConfig.getTenpayType() == TenpayType.direct) -->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ CD ]
Line_90 $$ String paymentUrl = null-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ CD ]
Line_88 $$ BigDecimal totalAmount = amountPayable.add(paymentFee)-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_89 $$ String description = null-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_92 $$ description = getSystemConfig().getShopName() + "预存款充值"-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_94 $$ description = getSystemConfig().getShopName() + "订单支付（" + order.getOrderSn() + "）"-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_118 $$ Payment payment = new Payment()-->Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)[ FD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_189 $$ setResponseNoCache()[ CD ]
Line_162 $$ if (paymentConfig.getPaymentConfigType() == PaymentConfigType.tenpay) -->Line_190 $$ getResponse().sendRedirect(paymentUrl)[ CD ]
Line_90 $$ String paymentUrl = null-->Line_190 $$ getResponse().sendRedirect(paymentUrl)[ FD ]
Line_185 $$ paymentUrl = paymentConfigService.buildTenpayDirectPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description, ip)-->Line_190 $$ getResponse().sendRedirect(paymentUrl)[ FD ]
Line_187 $$ paymentUrl = paymentConfigService.buildTenpayPartnerPaymentUrl(paymentConfig, payment.getPaymentSn(), totalAmount, description)-->Line_190 $$ getResponse().sendRedirect(paymentUrl)[ FD ]
Line_193 $$ String urlString = "123efakiaHR0cDovL3d3dy5zaG9weHgubmV0L2NlcnRpZmljYXRlLmFjdGlvbj9zaG9wVXJsPQ"-->Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))[ FD ]
Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))-->Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))[ FD ]
Line_194 $$ BASE64Decoder bASE64Decoder = new BASE64Decoder()-->Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))[ FD ]
Line_193 $$ String urlString = "123efakiaHR0cDovL3d3dy5zaG9weHgubmV0L2NlcnRpZmljYXRlLmFjdGlvbj9zaG9wVXJsPQ"-->Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))[ FD ]
Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))-->Line_195 $$ urlString = new String(bASE64Decoder.decodeBuffer(StringUtils.substring(urlString, 8) + "=="))[ FD ]
Line_197 $$ URLConnection urlConnection = url.openConnection()-->Line_197 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_196 $$ URL url = new URL(urlString + SystemConfigUtil.getSystemConfig().getShopUrl())-->Line_197 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_198 $$ HttpURLConnection httpConnection = (HttpURLConnection) urlConnection-->Line_199 $$ httpConnection.getResponseCode()[ FD ]
Line_2 $$ public String gateway() throws Exception -->Line_202 $$ return null[ CD ]
