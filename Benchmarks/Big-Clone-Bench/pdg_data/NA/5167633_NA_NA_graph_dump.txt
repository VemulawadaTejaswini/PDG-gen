Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) [ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_3 $$ OutputStream out = null[ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_4 $$ URLConnection conn = null[ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_5 $$ InputStream in = null[ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_6 $$ int totalBytes = 0[ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_7 $$ int dlBytes = 0[ CD ]
Line_9 $$ if (!Main.Updates.current.hasFile(rawClass)) -->Line_9 $$ if (!Main.Updates.current.hasFile(rawClass)) [ CD ]
Line_9 $$ if (!Main.Updates.current.hasFile(rawClass)) -->Line_9 $$ if (!Main.Updates.current.hasFile(rawClass)) [ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_9 $$ if (!Main.Updates.current.hasFile(rawClass)) [ FD ]
Line_9 $$ if (!Main.Updates.current.hasFile(rawClass)) -->Line_10 $$ Main.Updates.current.addFile(newVer, newStage, rawClass)[ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_10 $$ Main.Updates.current.addFile(newVer, newStage, rawClass)[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_10 $$ Main.Updates.current.addFile(newVer, newStage, rawClass)[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_10 $$ Main.Updates.current.addFile(newVer, newStage, rawClass)[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_12 $$ Main.Updates.current.getFile(rawClass).downloading = true[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_13 $$ Main.Updates.setImage(rawClass, "refresh.png")[ FD ]
Line_14 $$ java.io.File folder = new java.io.File(localFileName)-->Line_15 $$ folder.createNewFile()[ FD ]
Line_3 $$ OutputStream out = null-->Line_17 $$ out = new BufferedOutputStream(new FileOutputStream(localFileName))[ FD ]
Line_17 $$ out = new BufferedOutputStream(new FileOutputStream(localFileName))-->Line_17 $$ out = new BufferedOutputStream(new FileOutputStream(localFileName))[ FD ]
Line_4 $$ URLConnection conn = null-->Line_18 $$ conn = url.openConnection()[ FD ]
Line_18 $$ conn = url.openConnection()-->Line_18 $$ conn = url.openConnection()[ FD ]
Line_18 $$ conn = url.openConnection()-->Line_18 $$ conn = url.openConnection()[ CD ]
Line_16 $$ URL url = new URL(address)-->Line_18 $$ conn = url.openConnection()[ FD ]
Line_5 $$ InputStream in = null-->Line_19 $$ in = conn.getInputStream()[ FD ]
Line_19 $$ in = conn.getInputStream()-->Line_19 $$ in = conn.getInputStream()[ FD ]
Line_19 $$ in = conn.getInputStream()-->Line_19 $$ in = conn.getInputStream()[ CD ]
Line_4 $$ URLConnection conn = null-->Line_19 $$ in = conn.getInputStream()[ FD ]
Line_18 $$ conn = url.openConnection()-->Line_19 $$ in = conn.getInputStream()[ FD ]
Line_6 $$ int totalBytes = 0-->Line_20 $$ totalBytes = conn.getContentLength()[ FD ]
Line_20 $$ totalBytes = conn.getContentLength()-->Line_20 $$ totalBytes = conn.getContentLength()[ FD ]
Line_20 $$ totalBytes = conn.getContentLength()-->Line_20 $$ totalBytes = conn.getContentLength()[ CD ]
Line_4 $$ URLConnection conn = null-->Line_20 $$ totalBytes = conn.getContentLength()[ FD ]
Line_18 $$ conn = url.openConnection()-->Line_20 $$ totalBytes = conn.getContentLength()[ FD ]
Line_24 $$ double incr = java.lang.Math.floor(totalBytes / 1000)-->Line_24 $$ double incr = java.lang.Math.floor(totalBytes / 1000)[ CD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_27 $$ while ((numRead = in.read(buffer)) != -1) [ FD ]
Line_22 $$ int numRead-->Line_27 $$ while ((numRead = in.read(buffer)) != -1) [ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_27 $$ while ((numRead = in.read(buffer)) != -1) [ CD ]
Line_5 $$ InputStream in = null-->Line_27 $$ while ((numRead = in.read(buffer)) != -1) [ FD ]
Line_19 $$ in = conn.getInputStream()-->Line_27 $$ while ((numRead = in.read(buffer)) != -1) [ FD ]
Line_21 $$ byte[] buffer = new byte[1024]-->Line_27 $$ while ((numRead = in.read(buffer)) != -1) [ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_28 $$ out.write(buffer, 0, numRead)[ CD ]
Line_3 $$ OutputStream out = null-->Line_28 $$ out.write(buffer, 0, numRead)[ FD ]
Line_17 $$ out = new BufferedOutputStream(new FileOutputStream(localFileName))-->Line_28 $$ out.write(buffer, 0, numRead)[ FD ]
Line_21 $$ byte[] buffer = new byte[1024]-->Line_28 $$ out.write(buffer, 0, numRead)[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_28 $$ out.write(buffer, 0, numRead)[ FD ]
Line_22 $$ int numRead-->Line_28 $$ out.write(buffer, 0, numRead)[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_29 $$ numWritten += numRead[ CD ]
Line_29 $$ numWritten += numRead-->Line_29 $$ numWritten += numRead[ FD ]
Line_23 $$ long numWritten = 0-->Line_29 $$ numWritten += numRead[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_29 $$ numWritten += numRead[ FD ]
Line_22 $$ int numRead-->Line_29 $$ numWritten += numRead[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_30 $$ dlBytes += numRead[ CD ]
Line_30 $$ dlBytes += numRead-->Line_30 $$ dlBytes += numRead[ FD ]
Line_7 $$ int dlBytes = 0-->Line_30 $$ dlBytes += numRead[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_30 $$ dlBytes += numRead[ FD ]
Line_22 $$ int numRead-->Line_30 $$ dlBytes += numRead[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_31 $$ int newVal = (dlBytes != totalBytes ? (int) java.lang.Math.floor(dlBytes / incr) : 1000)[ CD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_32 $$ Main.Interface.Update.prgStatus.setValue(newVal)[ CD ]
Line_31 $$ int newVal = (dlBytes != totalBytes ? (int) java.lang.Math.floor(dlBytes / incr) : 1000)-->Line_32 $$ Main.Interface.Update.prgStatus.setValue(newVal)[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_33 $$ Main.Interface.Update.prgStatus.setString((newVal / 10) + "." + (newVal % 10) + "%")[ CD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_35 $$ Main.Updates.current.getFile(rawClass).downloading = false[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_36 $$ Main.Updates.current.getFile(rawClass).version = newVer[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_36 $$ Main.Updates.current.getFile(rawClass).version = newVer[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_37 $$ Main.Updates.current.getFile(rawClass).stage = newStage[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_37 $$ Main.Updates.current.getFile(rawClass).stage = newStage[ FD ]
Line_2 $$ public static void download(String address, String localFileName, String rawClass, double newVer, int newStage) -->Line_38 $$ Main.Updates.setImage(rawClass, "updater.png")[ FD ]
Line_5 $$ InputStream in = null-->Line_44 $$ if (in != null)[ FD ]
Line_19 $$ in = conn.getInputStream()-->Line_44 $$ if (in != null)[ FD ]
Line_44 $$ if (in != null)-->Line_44 $$ in.close()[ CD ]
Line_5 $$ InputStream in = null-->Line_44 $$ in.close()[ FD ]
Line_19 $$ in = conn.getInputStream()-->Line_44 $$ in.close()[ FD ]
Line_3 $$ OutputStream out = null-->Line_45 $$ if (out != null)[ FD ]
Line_17 $$ out = new BufferedOutputStream(new FileOutputStream(localFileName))-->Line_45 $$ if (out != null)[ FD ]
Line_45 $$ if (out != null)-->Line_45 $$ out.close()[ CD ]
Line_3 $$ OutputStream out = null-->Line_45 $$ out.close()[ FD ]
Line_17 $$ out = new BufferedOutputStream(new FileOutputStream(localFileName))-->Line_45 $$ out.close()[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_28 $$ out.write(buffer, 0, numRead)[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_29 $$ numWritten += numRead[ FD ]
Line_27 $$ while ((numRead = in.read(buffer)) != -1) -->Line_30 $$ dlBytes += numRead[ FD ]
Line_31 $$ int newVal = (dlBytes != totalBytes ? (int) java.lang.Math.floor(dlBytes / incr) : 1000)-->Line_32 $$ Main.Interface.Update.prgStatus.setValue(newVal)[ FD ]
