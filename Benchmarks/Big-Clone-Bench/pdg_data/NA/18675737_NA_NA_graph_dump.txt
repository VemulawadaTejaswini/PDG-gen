Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void post(String title, Document content, Set<String> tags) throws HttpException, IOException, TransformerException [ CD ]
Line_2 $$ private void post(String title, Document content, Set<String> tags) throws HttpException, IOException, TransformerException -->Line_3 $$ PostMethod method = null[ CD ]
Line_3 $$ PostMethod method = null-->Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")[ FD ]
Line_3 $$ PostMethod method = null-->Line_6 $$ method.addRequestHeader("GData-Version", String.valueOf(GDataVersion))[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_6 $$ method.addRequestHeader("GData-Version", String.valueOf(GDataVersion))[ FD ]
Line_3 $$ PostMethod method = null-->Line_7 $$ method.addRequestHeader("Authorization", "GoogleLogin auth=" + this.AuthToken)[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_7 $$ method.addRequestHeader("Authorization", "GoogleLogin auth=" + this.AuthToken)[ FD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_8 $$ Document dom = this.domBuilder.newDocument()[ CD ]
Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")-->Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")[ CD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")[ FD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_10 $$ dom.appendChild(entry)[ FD ]
Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")-->Line_10 $$ dom.appendChild(entry)[ FD ]
Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")-->Line_11 $$ entry.setAttribute("xmlns", Atom.NS)[ FD ]
Line_12 $$ Element titleNode = dom.createElementNS(Atom.NS, "title")-->Line_12 $$ Element titleNode = dom.createElementNS(Atom.NS, "title")[ CD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_12 $$ Element titleNode = dom.createElementNS(Atom.NS, "title")[ FD ]
Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")-->Line_13 $$ entry.appendChild(titleNode)[ FD ]
Line_12 $$ Element titleNode = dom.createElementNS(Atom.NS, "title")-->Line_13 $$ entry.appendChild(titleNode)[ FD ]
Line_12 $$ Element titleNode = dom.createElementNS(Atom.NS, "title")-->Line_14 $$ titleNode.setAttribute("type", "text")[ FD ]
Line_12 $$ Element titleNode = dom.createElementNS(Atom.NS, "title")-->Line_15 $$ titleNode.appendChild(dom.createTextNode(title))[ FD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_15 $$ titleNode.appendChild(dom.createTextNode(title))[ FD ]
Line_2 $$ private void post(String title, Document content, Set<String> tags) throws HttpException, IOException, TransformerException -->Line_15 $$ titleNode.appendChild(dom.createTextNode(title))[ FD ]
Line_16 $$ Element contentNode = dom.createElementNS(Atom.NS, "content")-->Line_16 $$ Element contentNode = dom.createElementNS(Atom.NS, "content")[ CD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_16 $$ Element contentNode = dom.createElementNS(Atom.NS, "content")[ FD ]
Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")-->Line_17 $$ entry.appendChild(contentNode)[ FD ]
Line_16 $$ Element contentNode = dom.createElementNS(Atom.NS, "content")-->Line_17 $$ entry.appendChild(contentNode)[ FD ]
Line_16 $$ Element contentNode = dom.createElementNS(Atom.NS, "content")-->Line_18 $$ contentNode.setAttribute("type", "xhtml")[ FD ]
Line_16 $$ Element contentNode = dom.createElementNS(Atom.NS, "content")-->Line_19 $$ contentNode.appendChild(dom.importNode(content.getDocumentElement(), true))[ FD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_19 $$ contentNode.appendChild(dom.importNode(content.getDocumentElement(), true))[ FD ]
Line_2 $$ private void post(String title, Document content, Set<String> tags) throws HttpException, IOException, TransformerException -->Line_19 $$ contentNode.appendChild(dom.importNode(content.getDocumentElement(), true))[ FD ]
Line_21 $$ Element category = dom.createElementNS(Atom.NS, "category")-->Line_21 $$ Element category = dom.createElementNS(Atom.NS, "category")[ CD ]
Line_8 $$ Document dom = this.domBuilder.newDocument()-->Line_21 $$ Element category = dom.createElementNS(Atom.NS, "category")[ FD ]
Line_21 $$ Element category = dom.createElementNS(Atom.NS, "category")-->Line_22 $$ category.setAttribute("scheme", "http://www.blogger.com/atom/ns#")[ FD ]
Line_21 $$ Element category = dom.createElementNS(Atom.NS, "category")-->Line_23 $$ category.setAttribute("term", tag)[ FD ]
Line_20 $$ for (String tag : tags) -->Line_23 $$ category.setAttribute("term", tag)[ FD ]
Line_9 $$ Element entry = dom.createElementNS(Atom.NS, "entry")-->Line_24 $$ entry.appendChild(category)[ FD ]
Line_21 $$ Element category = dom.createElementNS(Atom.NS, "category")-->Line_24 $$ entry.appendChild(category)[ FD ]
Line_3 $$ PostMethod method = null-->Line_28 $$ method.setRequestEntity(new StringRequestEntity(out.toString(), "application/atom+xml", "UTF-8"))[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_28 $$ method.setRequestEntity(new StringRequestEntity(out.toString(), "application/atom+xml", "UTF-8"))[ FD ]
Line_26 $$ StringWriter out = new StringWriter()-->Line_28 $$ method.setRequestEntity(new StringRequestEntity(out.toString(), "application/atom+xml", "UTF-8"))[ FD ]
Line_29 $$ int status = getHttpClient().executeMethod(method)-->Line_29 $$ int status = getHttpClient().executeMethod(method)[ CD ]
Line_3 $$ PostMethod method = null-->Line_29 $$ int status = getHttpClient().executeMethod(method)[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_29 $$ int status = getHttpClient().executeMethod(method)[ FD ]
Line_29 $$ int status = getHttpClient().executeMethod(method)-->Line_30 $$ if (status == 201) [ FD ]
Line_30 $$ if (status == 201) -->Line_31 $$ IOUtils.copyTo(method.getResponseBodyAsStream(), System.out)[ CD ]
Line_3 $$ PostMethod method = null-->Line_31 $$ IOUtils.copyTo(method.getResponseBodyAsStream(), System.out)[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_31 $$ IOUtils.copyTo(method.getResponseBodyAsStream(), System.out)[ FD ]
Line_3 $$ PostMethod method = null-->Line_42 $$ if (method != null)[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_42 $$ if (method != null)[ FD ]
Line_42 $$ if (method != null)-->Line_42 $$ method.releaseConnection()[ CD ]
Line_3 $$ PostMethod method = null-->Line_42 $$ method.releaseConnection()[ FD ]
Line_5 $$ method = new PostMethod("http://www.blogger.com/feeds/" + this.blogId + "/posts/default")-->Line_42 $$ method.releaseConnection()[ FD ]
