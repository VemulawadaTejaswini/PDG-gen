Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public byte[] getAvatar() throws IOException [ CD ]
Line_2 $$ public byte[] getAvatar() throws IOException -->Line_3 $$ HttpUriRequest request[ CD ]
Line_3 $$ HttpUriRequest request-->Line_5 $$ request = new HttpGet(mUrl)[ FD ]
Line_5 $$ request = new HttpGet(mUrl)-->Line_5 $$ request = new HttpGet(mUrl)[ FD ]
Line_7 $$ IOException ioe = new IOException("Invalid url " + mUrl)-->Line_8 $$ ioe.initCause(e)[ FD ]
Line_2 $$ public byte[] getAvatar() throws IOException -->Line_11 $$ HttpResponse response = mClient.execute(request)[ CD ]
Line_11 $$ HttpResponse response = mClient.execute(request)-->Line_11 $$ HttpResponse response = mClient.execute(request)[ CD ]
Line_3 $$ HttpUriRequest request-->Line_11 $$ HttpResponse response = mClient.execute(request)[ FD ]
Line_5 $$ request = new HttpGet(mUrl)-->Line_11 $$ HttpResponse response = mClient.execute(request)[ FD ]
Line_2 $$ public byte[] getAvatar() throws IOException -->Line_12 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_12 $$ HttpEntity entity = response.getEntity()-->Line_12 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_11 $$ HttpResponse response = mClient.execute(request)-->Line_12 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_2 $$ public byte[] getAvatar() throws IOException -->Line_13 $$ InputStream in = entity.getContent()[ CD ]
Line_13 $$ InputStream in = entity.getContent()-->Line_13 $$ InputStream in = entity.getContent()[ CD ]
Line_12 $$ HttpEntity entity = response.getEntity()-->Line_13 $$ InputStream in = entity.getContent()[ FD ]
Line_2 $$ public byte[] getAvatar() throws IOException -->Line_14 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()[ CD ]
Line_18 $$ while ((nbread = in.read(data)) != -1) -->Line_18 $$ while ((nbread = in.read(data)) != -1) [ FD ]
Line_17 $$ int nbread-->Line_18 $$ while ((nbread = in.read(data)) != -1) [ FD ]
Line_18 $$ while ((nbread = in.read(data)) != -1) -->Line_18 $$ while ((nbread = in.read(data)) != -1) [ CD ]
Line_13 $$ InputStream in = entity.getContent()-->Line_18 $$ while ((nbread = in.read(data)) != -1) [ FD ]
Line_16 $$ byte[] data = new byte[1024]-->Line_18 $$ while ((nbread = in.read(data)) != -1) [ FD ]
Line_18 $$ while ((nbread = in.read(data)) != -1) -->Line_19 $$ os.write(data, 0, nbread)[ CD ]
Line_14 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_19 $$ os.write(data, 0, nbread)[ FD ]
Line_16 $$ byte[] data = new byte[1024]-->Line_19 $$ os.write(data, 0, nbread)[ FD ]
Line_18 $$ while ((nbread = in.read(data)) != -1) -->Line_19 $$ os.write(data, 0, nbread)[ FD ]
Line_17 $$ int nbread-->Line_19 $$ os.write(data, 0, nbread)[ FD ]
Line_13 $$ InputStream in = entity.getContent()-->Line_22 $$ in.close()[ FD ]
Line_14 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_23 $$ os.close()[ FD ]
Line_2 $$ public byte[] getAvatar() throws IOException -->Line_25 $$ return os.toByteArray()[ CD ]
Line_25 $$ return os.toByteArray()-->Line_25 $$ return os.toByteArray()[ CD ]
Line_14 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_25 $$ return os.toByteArray()[ FD ]
Line_18 $$ while ((nbread = in.read(data)) != -1) -->Line_19 $$ os.write(data, 0, nbread)[ FD ]
