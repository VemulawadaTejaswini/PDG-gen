Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ final void importSelectedEntity() [ CD ]
Line_2 $$ final void importSelectedEntity() -->Line_3 $$ TreePath path = projectsTree.getSelectionPath()[ CD ]
Line_3 $$ TreePath path = projectsTree.getSelectionPath()-->Line_3 $$ TreePath path = projectsTree.getSelectionPath()[ CD ]
Line_2 $$ final void importSelectedEntity() -->Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()[ CD ]
Line_3 $$ TreePath path = projectsTree.getSelectionPath()-->Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()[ FD ]
Line_2 $$ final void importSelectedEntity() -->Line_5 $$ Object userObject = selectedNode.getUserObject()[ CD ]
Line_5 $$ Object userObject = selectedNode.getUserObject()-->Line_5 $$ Object userObject = selectedNode.getUserObject()[ CD ]
Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_5 $$ Object userObject = selectedNode.getUserObject()[ FD ]
Line_2 $$ final void importSelectedEntity() -->Line_6 $$ if (userObject instanceof ProjectSet) [ CD ]
Line_5 $$ Object userObject = selectedNode.getUserObject()-->Line_6 $$ if (userObject instanceof ProjectSet) [ FD ]
Line_6 $$ if (userObject instanceof ProjectSet) -->Line_7 $$ JFileChooser fileChooser = new JFileChooser()[ CD ]
Line_6 $$ if (userObject instanceof ProjectSet) -->Line_8 $$ fileChooser.setMultiSelectionEnabled(false)[ CD ]
Line_7 $$ JFileChooser fileChooser = new JFileChooser()-->Line_8 $$ fileChooser.setMultiSelectionEnabled(false)[ FD ]
Line_6 $$ if (userObject instanceof ProjectSet) -->Line_9 $$ fileChooser.setFileFilter(new FileNameExtensionFilter("JFPSM Projects", "jfpsm.zip"))[ CD ]
Line_7 $$ JFileChooser fileChooser = new JFileChooser()-->Line_9 $$ fileChooser.setFileFilter(new FileNameExtensionFilter("JFPSM Projects", "jfpsm.zip"))[ FD ]
Line_6 $$ if (userObject instanceof ProjectSet) -->Line_10 $$ int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame())[ CD ]
Line_10 $$ int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame())-->Line_10 $$ int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame())[ CD ]
Line_7 $$ JFileChooser fileChooser = new JFileChooser()-->Line_10 $$ int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame())[ FD ]
Line_6 $$ if (userObject instanceof ProjectSet) -->Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) [ CD ]
Line_10 $$ int result = fileChooser.showOpenDialog(mainWindow.getApplicativeFrame())-->Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) [ FD ]
Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) -->Line_12 $$ String fullname = fileChooser.getSelectedFile().getName()[ CD ]
Line_12 $$ String fullname = fileChooser.getSelectedFile().getName()-->Line_12 $$ String fullname = fileChooser.getSelectedFile().getName()[ CD ]
Line_7 $$ JFileChooser fileChooser = new JFileChooser()-->Line_12 $$ String fullname = fileChooser.getSelectedFile().getName()[ FD ]
Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) -->Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())[ CD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())[ CD ]
Line_12 $$ String fullname = fileChooser.getSelectedFile().getName()-->Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())[ FD ]
Line_12 $$ String fullname = fileChooser.getSelectedFile().getName()-->Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())[ FD ]
Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) -->Line_14 $$ ProjectSet workspace = (ProjectSet) userObject[ CD ]
Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) -->Line_15 $$ boolean confirmLoad = true[ CD ]
Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) -->Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) [ CD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) [ FD ]
Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) -->Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) [ CD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) [ FD ]
Line_14 $$ ProjectSet workspace = (ProjectSet) userObject-->Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) [ FD ]
Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) -->Line_17 $$ confirmLoad = JOptionPane.showConfirmDialog(mainWindow.getApplicativeFrame(), "Overwrite project \"" + projectName + "\"" + "?", "Overwrite project", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION[ CD ]
Line_15 $$ boolean confirmLoad = true-->Line_17 $$ confirmLoad = JOptionPane.showConfirmDialog(mainWindow.getApplicativeFrame(), "Overwrite project \"" + projectName + "\"" + "?", "Overwrite project", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION[ FD ]
Line_17 $$ confirmLoad = JOptionPane.showConfirmDialog(mainWindow.getApplicativeFrame(), "Overwrite project \"" + projectName + "\"" + "?", "Overwrite project", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION-->Line_17 $$ confirmLoad = JOptionPane.showConfirmDialog(mainWindow.getApplicativeFrame(), "Overwrite project \"" + projectName + "\"" + "?", "Overwrite project", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION[ FD ]
Line_16 $$ if (Arrays.asList(workspace.getProjectNames()).contains(projectName)) -->Line_18 $$ if (confirmLoad) [ CD ]
Line_18 $$ if (confirmLoad) -->Line_19 $$ final int count = selectedNode.getChildCount()[ CD ]
Line_19 $$ final int count = selectedNode.getChildCount()-->Line_19 $$ final int count = selectedNode.getChildCount()[ CD ]
Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_19 $$ final int count = selectedNode.getChildCount()[ FD ]
Line_18 $$ if (confirmLoad) -->Line_20 $$ DefaultMutableTreeNode projectNode = null[ CD ]
Line_18 $$ if (confirmLoad) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ CD ]
Line_18 $$ if (confirmLoad) -->Line_18 $$ if (confirmLoad) [ CD ]
Line_19 $$ final int count = selectedNode.getChildCount()-->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ CD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ CD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ CD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ CD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)[ CD ]
Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)-->Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)[ FD ]
Line_20 $$ DefaultMutableTreeNode projectNode = null-->Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)[ FD ]
Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)[ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)[ FD ]
Line_18 $$ if (confirmLoad) -->Line_25 $$ Project project = (Project) projectNode.getUserObject()[ CD ]
Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)-->Line_25 $$ Project project = (Project) projectNode.getUserObject()[ FD ]
Line_20 $$ DefaultMutableTreeNode projectNode = null-->Line_25 $$ Project project = (Project) projectNode.getUserObject()[ FD ]
Line_25 $$ Project project = (Project) projectNode.getUserObject()-->Line_26 $$ for (FloorSet floorSet : project.getLevelSet().getFloorSetsList()) for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor)[ FD ]
Line_26 $$ for (FloorSet floorSet : project.getLevelSet().getFloorSetsList()) for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor)-->Line_26 $$ for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor)[ FD ]
Line_26 $$ for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor)-->Line_26 $$ mainWindow.getEntityViewer().closeEntityView(floor)[ FD ]
Line_25 $$ Project project = (Project) projectNode.getUserObject()-->Line_27 $$ for (Tile tile : project.getTileSet().getTilesList()) mainWindow.getEntityViewer().closeEntityView(tile)[ FD ]
Line_27 $$ for (Tile tile : project.getTileSet().getTilesList()) mainWindow.getEntityViewer().closeEntityView(tile)-->Line_27 $$ mainWindow.getEntityViewer().closeEntityView(tile)[ FD ]
Line_18 $$ if (confirmLoad) -->Line_28 $$ workspace.removeProject(project)[ CD ]
Line_14 $$ ProjectSet workspace = (ProjectSet) userObject-->Line_28 $$ workspace.removeProject(project)[ FD ]
Line_25 $$ Project project = (Project) projectNode.getUserObject()-->Line_28 $$ workspace.removeProject(project)[ FD ]
Line_18 $$ if (confirmLoad) -->Line_29 $$ ((DefaultTreeModel) projectsTree.getModel()).removeNodeFromParent(projectNode)[ CD ]
Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)-->Line_29 $$ ((DefaultTreeModel) projectsTree.getModel()).removeNodeFromParent(projectNode)[ FD ]
Line_20 $$ DefaultMutableTreeNode projectNode = null-->Line_29 $$ ((DefaultTreeModel) projectsTree.getModel()).removeNodeFromParent(projectNode)[ FD ]
Line_11 $$ if (result == JFileChooser.APPROVE_OPTION) -->Line_32 $$ if (confirmLoad) [ CD ]
Line_32 $$ if (confirmLoad) -->Line_33 $$ File projectFile = new File(workspace.createProjectPath(projectName))[ CD ]
Line_14 $$ ProjectSet workspace = (ProjectSet) userObject-->Line_33 $$ File projectFile = new File(workspace.createProjectPath(projectName))[ FD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_33 $$ File projectFile = new File(workspace.createProjectPath(projectName))[ FD ]
Line_32 $$ if (confirmLoad) -->Line_34 $$ boolean success = true[ CD ]
Line_34 $$ boolean success = true-->Line_36 $$ success = projectFile.createNewFile()[ FD ]
Line_36 $$ success = projectFile.createNewFile()-->Line_36 $$ success = projectFile.createNewFile()[ FD ]
Line_36 $$ success = projectFile.createNewFile()-->Line_36 $$ success = projectFile.createNewFile()[ CD ]
Line_33 $$ File projectFile = new File(workspace.createProjectPath(projectName))-->Line_36 $$ success = projectFile.createNewFile()[ FD ]
Line_37 $$ if (success) -->Line_38 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fileChooser.getSelectedFile()))[ CD ]
Line_7 $$ JFileChooser fileChooser = new JFileChooser()-->Line_38 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fileChooser.getSelectedFile()))[ FD ]
Line_37 $$ if (success) -->Line_39 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(projectFile))[ CD ]
Line_37 $$ if (success) -->Line_40 $$ byte[] buf = new byte[1024][ CD ]
Line_37 $$ if (success) -->Line_41 $$ int len[ CD ]
Line_37 $$ if (success) -->Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)[ CD ]
Line_37 $$ if (success) -->Line_37 $$ if (success) [ CD ]
Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)-->Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)[ FD ]
Line_41 $$ int len-->Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)[ FD ]
Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)-->Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)[ CD ]
Line_38 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fileChooser.getSelectedFile()))-->Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)[ FD ]
Line_40 $$ byte[] buf = new byte[1024]-->Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)[ FD ]
Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)-->Line_42 $$ bos.write(buf, 0, len)[ CD ]
Line_39 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(projectFile))-->Line_42 $$ bos.write(buf, 0, len)[ FD ]
Line_40 $$ byte[] buf = new byte[1024]-->Line_42 $$ bos.write(buf, 0, len)[ FD ]
Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)-->Line_42 $$ bos.write(buf, 0, len)[ FD ]
Line_41 $$ int len-->Line_42 $$ bos.write(buf, 0, len)[ FD ]
Line_37 $$ if (success) -->Line_43 $$ bis.close()[ CD ]
Line_38 $$ BufferedInputStream bis = new BufferedInputStream(new FileInputStream(fileChooser.getSelectedFile()))-->Line_43 $$ bis.close()[ FD ]
Line_37 $$ if (success) -->Line_44 $$ bos.close()[ CD ]
Line_39 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(projectFile))-->Line_44 $$ bos.close()[ FD ]
Line_34 $$ boolean success = true-->Line_48 $$ success = false[ FD ]
Line_36 $$ success = projectFile.createNewFile()-->Line_48 $$ success = false[ FD ]
Line_48 $$ success = false-->Line_48 $$ success = false[ FD ]
Line_32 $$ if (confirmLoad) -->Line_50 $$ if (success)[ CD ]
Line_50 $$ if (success)-->Line_50 $$ addProject(projectName)[ CD ]
Line_13 $$ String projectName = fullname.substring(0, fullname.length() - Project.getFileExtension().length())-->Line_50 $$ addProject(projectName)[ FD ]
Line_6 $$ if (userObject instanceof ProjectSet) -->Line_53 $$ if (userObject instanceof Map) [ CD ]
Line_5 $$ Object userObject = selectedNode.getUserObject()-->Line_53 $$ if (userObject instanceof Map) [ FD ]
Line_53 $$ if (userObject instanceof Map) -->Line_54 $$ Map map = (Map) userObject[ CD ]
Line_4 $$ DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_55 $$ Floor floor = (Floor) ((DefaultMutableTreeNode) selectedNode.getParent()).getUserObject()[ FD ]
Line_53 $$ if (userObject instanceof Map) -->Line_56 $$ importImageForSelectedMap(floor, map)[ CD ]
Line_26 $$ for (Floor floor : floorSet.getFloorsList()) mainWindow.getEntityViewer().closeEntityView(floor)-->Line_56 $$ importImageForSelectedMap(floor, map)[ FD ]
Line_54 $$ Map map = (Map) userObject-->Line_56 $$ importImageForSelectedMap(floor, map)[ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_21 $$ if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) [ FD ]
Line_21 $$ for (int i = 0; i < count; i++) if (((Project) ((DefaultMutableTreeNode) selectedNode.getChildAt(i)).getUserObject()).getName().equals(projectName)) -->Line_22 $$ projectNode = (DefaultMutableTreeNode) selectedNode.getChildAt(i)[ FD ]
Line_42 $$ while ((len = bis.read(buf)) > 0) bos.write(buf, 0, len)-->Line_42 $$ bos.write(buf, 0, len)[ FD ]
