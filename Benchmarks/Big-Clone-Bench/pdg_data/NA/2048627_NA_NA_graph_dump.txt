Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException [ CD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_3 $$ locale = stripVariant(locale)[ CD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_3 $$ locale = stripVariant(locale)[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_3 $$ locale = stripVariant(locale)[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_3 $$ locale = stripVariant(locale)[ CD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_3 $$ locale = stripVariant(locale)[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_3 $$ locale = stripVariant(locale)[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_4 $$ Map<String, String> props = localeToMap.get(locale)[ CD ]
Line_4 $$ Map<String, String> props = localeToMap.get(locale)-->Line_4 $$ Map<String, String> props = localeToMap.get(locale)[ CD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_4 $$ Map<String, String> props = localeToMap.get(locale)[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_4 $$ Map<String, String> props = localeToMap.get(locale)[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_5 $$ if (props == null)[ CD ]
Line_4 $$ Map<String, String> props = localeToMap.get(locale)-->Line_5 $$ if (props == null)[ FD ]
Line_5 $$ if (props == null)-->Line_5 $$ props = new HashMap<String, String>()[ CD ]
Line_4 $$ Map<String, String> props = localeToMap.get(locale)-->Line_5 $$ props = new HashMap<String, String>()[ FD ]
Line_5 $$ props = new HashMap<String, String>()-->Line_5 $$ props = new HashMap<String, String>()[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX[ CD ]
Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX-->Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX[ CD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)[ CD ]
Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)-->Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)[ CD ]
Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX-->Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_8 $$ if (url == null) [ CD ]
Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)-->Line_8 $$ if (url == null) [ FD ]
Line_8 $$ if (url == null) -->Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)[ CD ]
Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)-->Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)[ FD ]
Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)-->Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)[ FD ]
Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)-->Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)[ CD ]
Line_6 $$ String urlName = locale.toString() + LOCALE_FILE_URL_SUFFIX-->Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)[ FD ]
Line_8 $$ if (url == null) -->Line_10 $$ if (url == null) [ CD ]
Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)-->Line_10 $$ if (url == null) [ FD ]
Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)-->Line_10 $$ if (url == null) [ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_14 $$ BufferedReader input = null[ CD ]
Line_14 $$ BufferedReader input = null-->Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))[ FD ]
Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))-->Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))[ FD ]
Line_7 $$ URL url = ClassLoader.getSystemClassLoader().getResource(urlName)-->Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))[ FD ]
Line_9 $$ url = Thread.currentThread().getContextClassLoader().getResource(urlName)-->Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))[ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_18 $$ while ((str = input.readLine()) != null) [ FD ]
Line_17 $$ String str-->Line_18 $$ while ((str = input.readLine()) != null) [ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_18 $$ while ((str = input.readLine()) != null) [ CD ]
Line_14 $$ BufferedReader input = null-->Line_18 $$ while ((str = input.readLine()) != null) [ FD ]
Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))-->Line_18 $$ while ((str = input.readLine()) != null) [ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_19 $$ str = str.trim()[ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_19 $$ str = str.trim()[ FD ]
Line_19 $$ str = str.trim()-->Line_19 $$ str = str.trim()[ FD ]
Line_17 $$ String str-->Line_19 $$ str = str.trim()[ FD ]
Line_19 $$ str = str.trim()-->Line_19 $$ str = str.trim()[ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_19 $$ str = str.trim()[ FD ]
Line_19 $$ str = str.trim()-->Line_19 $$ str = str.trim()[ FD ]
Line_17 $$ String str-->Line_19 $$ str = str.trim()[ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ CD ]
Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_19 $$ str = str.trim()-->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_17 $$ String str-->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_19 $$ str = str.trim()-->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_17 $$ String str-->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) -->Line_21 $$ int index = -1[ CD ]
Line_21 $$ int index = -1-->Line_21 $$ int index = -1[ CD ]
Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ CD ]
Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ CD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_19 $$ str = str.trim()-->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_17 $$ String str-->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ CD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ CD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_23 $$ char c = str.charAt(i)[ CD ]
Line_23 $$ char c = str.charAt(i)-->Line_23 $$ char c = str.charAt(i)[ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_23 $$ char c = str.charAt(i)[ FD ]
Line_19 $$ str = str.trim()-->Line_23 $$ char c = str.charAt(i)[ FD ]
Line_17 $$ String str-->Line_23 $$ char c = str.charAt(i)[ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_23 $$ char c = str.charAt(i)[ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_24 $$ if (c == ':' || c == '=') [ CD ]
Line_24 $$ if (c == ':' || c == '=') -->Line_25 $$ index = i[ CD ]
Line_25 $$ index = i-->Line_25 $$ index = i[ FD ]
Line_21 $$ int index = -1-->Line_25 $$ index = i[ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_25 $$ index = i[ FD ]
Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) -->Line_29 $$ if (index > 0) [ CD ]
Line_25 $$ index = i-->Line_29 $$ if (index > 0) [ FD ]
Line_21 $$ int index = -1-->Line_29 $$ if (index > 0) [ FD ]
Line_29 $$ if (index > 0) -->Line_30 $$ String key = str.substring(0, index).trim()[ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_19 $$ str = str.trim()-->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_17 $$ String str-->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_25 $$ index = i-->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_21 $$ int index = -1-->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_29 $$ if (index > 0) -->Line_31 $$ String value = str.substring(index + 1)[ CD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_31 $$ String value = str.substring(index + 1)[ FD ]
Line_19 $$ str = str.trim()-->Line_31 $$ String value = str.substring(index + 1)[ FD ]
Line_17 $$ String str-->Line_31 $$ String value = str.substring(index + 1)[ FD ]
Line_29 $$ if (index > 0) -->Line_32 $$ props.put(key, value)[ CD ]
Line_4 $$ Map<String, String> props = localeToMap.get(locale)-->Line_32 $$ props.put(key, value)[ FD ]
Line_5 $$ props = new HashMap<String, String>()-->Line_32 $$ props.put(key, value)[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_37 $$ throw new MissingResourceException(ioe.getMessage(), "PropertiesLocalizer", "HProperties: for " + locale.toString())[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_37 $$ throw new MissingResourceException(ioe.getMessage(), "PropertiesLocalizer", "HProperties: for " + locale.toString())[ FD ]
Line_14 $$ BufferedReader input = null-->Line_40 $$ input.close()[ FD ]
Line_16 $$ input = new BufferedReader(new InputStreamReader((InputStream) url.openStream(), "UTF8"))-->Line_40 $$ input.close()[ FD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_44 $$ localeToMap.put(locale, props)[ CD ]
Line_2 $$ private void addLocale(Locale locale) throws MissingResourceException -->Line_44 $$ localeToMap.put(locale, props)[ FD ]
Line_3 $$ locale = stripVariant(locale)-->Line_44 $$ localeToMap.put(locale, props)[ FD ]
Line_4 $$ Map<String, String> props = localeToMap.get(locale)-->Line_44 $$ localeToMap.put(locale, props)[ FD ]
Line_5 $$ props = new HashMap<String, String>()-->Line_44 $$ localeToMap.put(locale, props)[ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_19 $$ str = str.trim()[ FD ]
Line_19 $$ str = str.trim()-->Line_19 $$ str = str.trim()[ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_19 $$ str = str.trim()-->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_19 $$ str = str.trim()-->Line_20 $$ if (!str.startsWith("#") && !str.startsWith("!")) [ FD ]
Line_21 $$ int index = -1-->Line_29 $$ if (index > 0) [ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_19 $$ str = str.trim()-->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_21 $$ int index = -1-->Line_30 $$ String key = str.substring(0, index).trim()[ FD ]
Line_18 $$ while ((str = input.readLine()) != null) -->Line_31 $$ String value = str.substring(index + 1)[ FD ]
Line_19 $$ str = str.trim()-->Line_31 $$ String value = str.substring(index + 1)[ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_22 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_23 $$ char c = str.charAt(i)[ FD ]
Line_22 $$ for (int i = 0; i < str.length(); i++) -->Line_25 $$ index = i[ FD ]
