Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException [ CD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_3 $$ String result = ""[ CD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_4 $$ Map<String, String> players = (Map<String, String>) sc.getAttribute("players")[ CD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_5 $$ if (players.containsKey(id)) [ CD ]
Line_4 $$ Map<String, String> players = (Map<String, String>) sc.getAttribute("players")-->Line_5 $$ if (players.containsKey(id)) [ FD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_5 $$ if (players.containsKey(id)) [ FD ]
Line_5 $$ if (players.containsKey(id)) -->Line_5 $$ if (players.containsKey(id)) [ CD ]
Line_4 $$ Map<String, String> players = (Map<String, String>) sc.getAttribute("players")-->Line_5 $$ if (players.containsKey(id)) [ FD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_5 $$ if (players.containsKey(id)) [ FD ]
Line_5 $$ if (players.containsKey(id)) -->Line_6 $$ result = players.get(id)[ CD ]
Line_3 $$ String result = ""-->Line_6 $$ result = players.get(id)[ FD ]
Line_6 $$ result = players.get(id)-->Line_6 $$ result = players.get(id)[ FD ]
Line_6 $$ result = players.get(id)-->Line_6 $$ result = players.get(id)[ CD ]
Line_4 $$ Map<String, String> players = (Map<String, String>) sc.getAttribute("players")-->Line_6 $$ result = players.get(id)[ FD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_6 $$ result = players.get(id)[ FD ]
Line_5 $$ if (players.containsKey(id)) -->Line_7 $$ System.out.println("skip name:" + result)[ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_9 $$ String palyerURL = "http://goal.2010worldcup.163.com/player/" + id + ".html"[ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_10 $$ URL url = new URL(palyerURL)[ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))[ CD ]
Line_10 $$ URL url = new URL(palyerURL)-->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))[ FD ]
Line_5 $$ if (players.containsKey(id)) -->Line_12 $$ String line = null[ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_13 $$ String nameFrom = "英文名:"[ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_14 $$ String nameTo = "</dd>"[ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_15 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_5 $$ if (players.containsKey(id)) -->Line_5 $$ if (players.containsKey(id)) [ CD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_15 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_12 $$ String line = null-->Line_15 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_15 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))-->Line_15 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.indexOf(nameFrom) != -1) [ CD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.indexOf(nameFrom) != -1) [ FD ]
Line_12 $$ String line = null-->Line_16 $$ if (line.indexOf(nameFrom) != -1) [ FD ]
Line_13 $$ String nameFrom = "英文名:"-->Line_16 $$ if (line.indexOf(nameFrom) != -1) [ FD ]
Line_16 $$ if (line.indexOf(nameFrom) != -1) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ CD ]
Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_3 $$ String result = ""-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_6 $$ result = players.get(id)-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ CD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_12 $$ String line = null-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_12 $$ String line = null-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_13 $$ String nameFrom = "英文名:"-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_13 $$ String nameFrom = "英文名:"-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_12 $$ String line = null-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_14 $$ String nameTo = "</dd>"-->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_5 $$ if (players.containsKey(id)) -->Line_21 $$ reader.close()[ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))-->Line_21 $$ reader.close()[ FD ]
Line_5 $$ if (players.containsKey(id)) -->Line_22 $$ players.put(id, result)[ CD ]
Line_4 $$ Map<String, String> players = (Map<String, String>) sc.getAttribute("players")-->Line_22 $$ players.put(id, result)[ FD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_22 $$ players.put(id, result)[ FD ]
Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))-->Line_22 $$ players.put(id, result)[ FD ]
Line_3 $$ String result = ""-->Line_22 $$ players.put(id, result)[ FD ]
Line_6 $$ result = players.get(id)-->Line_22 $$ players.put(id, result)[ FD ]
Line_2 $$ private String getPlayerName(String id) throws UnsupportedEncodingException, IOException -->Line_24 $$ return result[ CD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_16 $$ if (line.indexOf(nameFrom) != -1) [ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
Line_15 $$ while ((line = reader.readLine()) != null) -->Line_17 $$ result = line.substring(line.indexOf(nameFrom) + nameFrom.length(), line.indexOf(nameTo))[ FD ]
