Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public DownloadThread call() throws UpdateModException [ CD ]
Line_5 $$ if (url != null) -->Line_6 $$ URL urls = new URL(this.url)[ CD ]
Line_5 $$ if (url != null) -->Line_7 $$ URLConnection connection = urls.openConnection()[ CD ]
Line_7 $$ URLConnection connection = urls.openConnection()-->Line_7 $$ URLConnection connection = urls.openConnection()[ CD ]
Line_6 $$ URL urls = new URL(this.url)-->Line_7 $$ URLConnection connection = urls.openConnection()[ FD ]
Line_5 $$ if (url != null) -->Line_8 $$ connection.setConnectTimeout(7500)[ CD ]
Line_7 $$ URLConnection connection = urls.openConnection()-->Line_8 $$ connection.setConnectTimeout(7500)[ FD ]
Line_5 $$ if (url != null) -->Line_9 $$ InputStream is = urls.openStream()[ CD ]
Line_9 $$ InputStream is = urls.openStream()-->Line_9 $$ InputStream is = urls.openStream()[ CD ]
Line_6 $$ URL urls = new URL(this.url)-->Line_9 $$ InputStream is = urls.openStream()[ FD ]
Line_5 $$ if (url != null) -->Line_10 $$ String filename = null[ CD ]
Line_5 $$ if (url != null) -->Line_11 $$ if (path == null || path.isEmpty()) [ CD ]
Line_11 $$ if (path == null || path.isEmpty()) -->Line_12 $$ String pattern = "[^a-z,A-Z,0-9, ,.]"[ CD ]
Line_11 $$ if (path == null || path.isEmpty()) -->Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")[ CD ]
Line_10 $$ String filename = null-->Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")[ FD ]
Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")-->Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")[ FD ]
Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")-->Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")[ CD ]
Line_11 $$ if (path == null || path.isEmpty()) -->Line_14 $$ filename = filename.replaceAll(pattern, "")[ CD ]
Line_10 $$ String filename = null-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_14 $$ filename = filename.replaceAll(pattern, "")-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_14 $$ filename = filename.replaceAll(pattern, "")-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ CD ]
Line_10 $$ String filename = null-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_14 $$ filename = filename.replaceAll(pattern, "")-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_12 $$ String pattern = "[^a-z,A-Z,0-9, ,.]"-->Line_14 $$ filename = filename.replaceAll(pattern, "")[ FD ]
Line_11 $$ if (path == null || path.isEmpty()) -->Line_16 $$ filename = path[ CD ]
Line_10 $$ String filename = null-->Line_16 $$ filename = path[ FD ]
Line_13 $$ filename = this.url.substring(this.url.lastIndexOf("/") + 1).replace("%20", " ")-->Line_16 $$ filename = path[ FD ]
Line_14 $$ filename = filename.replaceAll(pattern, "")-->Line_16 $$ filename = path[ FD ]
Line_16 $$ filename = path-->Line_16 $$ filename = path[ FD ]
Line_5 $$ if (url != null) -->Line_18 $$ FileOutputStream fos = null[ CD ]
Line_5 $$ if (url != null) -->Line_20 $$ fos = new FileOutputStream(file, false)[ CD ]
Line_18 $$ FileOutputStream fos = null-->Line_20 $$ fos = new FileOutputStream(file, false)[ FD ]
Line_20 $$ fos = new FileOutputStream(file, false)-->Line_20 $$ fos = new FileOutputStream(file, false)[ FD ]
Line_5 $$ if (url != null) -->Line_21 $$ FileUtils.copyInputStream(is, fos)[ CD ]
Line_9 $$ InputStream is = urls.openStream()-->Line_21 $$ FileUtils.copyInputStream(is, fos)[ FD ]
Line_18 $$ FileOutputStream fos = null-->Line_21 $$ FileUtils.copyInputStream(is, fos)[ FD ]
Line_20 $$ fos = new FileOutputStream(file, false)-->Line_21 $$ FileUtils.copyInputStream(is, fos)[ FD ]
Line_5 $$ if (url != null) -->Line_22 $$ is.close()[ CD ]
Line_9 $$ InputStream is = urls.openStream()-->Line_22 $$ is.close()[ FD ]
Line_5 $$ if (url != null) -->Line_23 $$ fos.flush()[ CD ]
Line_18 $$ FileOutputStream fos = null-->Line_23 $$ fos.flush()[ FD ]
Line_20 $$ fos = new FileOutputStream(file, false)-->Line_23 $$ fos.flush()[ FD ]
Line_5 $$ if (url != null) -->Line_24 $$ fos.close()[ CD ]
Line_18 $$ FileOutputStream fos = null-->Line_24 $$ fos.close()[ FD ]
Line_20 $$ fos = new FileOutputStream(file, false)-->Line_24 $$ fos.close()[ FD ]
Line_2 $$ public DownloadThread call() throws UpdateModException -->Line_51 $$ return this[ CD ]
