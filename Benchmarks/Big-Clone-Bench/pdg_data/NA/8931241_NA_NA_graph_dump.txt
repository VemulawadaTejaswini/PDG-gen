Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_3 $$ if (!from.exists()) [ CD ]
Line_3 $$ if (!from.exists()) -->Line_3 $$ if (!from.exists()) [ CD ]
Line_3 $$ if (!from.exists()) -->Line_3 $$ if (!from.exists()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_3 $$ if (!from.exists()) [ FD ]
Line_3 $$ if (!from.exists()) -->Line_4 $$ IllegalArgumentException e = new IllegalArgumentException("Source doesn't exist: " + from.getCanonicalFile())[ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_4 $$ IllegalArgumentException e = new IllegalArgumentException("Source doesn't exist: " + from.getCanonicalFile())[ FD ]
Line_3 $$ if (!from.exists()) -->Line_5 $$ log.throwing("IOUtils", "copy", e)[ CD ]
Line_4 $$ IllegalArgumentException e = new IllegalArgumentException("Source doesn't exist: " + from.getCanonicalFile())-->Line_5 $$ log.throwing("IOUtils", "copy", e)[ FD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_8 $$ if (from.isFile()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_8 $$ if (from.isFile()) [ FD ]
Line_8 $$ if (from.isFile()) -->Line_8 $$ if (from.isFile()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_8 $$ if (from.isFile()) [ FD ]
Line_8 $$ if (from.isFile()) -->Line_9 $$ if (!to.canWrite()) [ CD ]
Line_9 $$ if (!to.canWrite()) -->Line_9 $$ if (!to.canWrite()) [ CD ]
Line_9 $$ if (!to.canWrite()) -->Line_9 $$ if (!to.canWrite()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_9 $$ if (!to.canWrite()) [ FD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_10 $$ IllegalArgumentException e = new IllegalArgumentException("Cannot write to target location: " + to.getCanonicalFile())[ FD ]
Line_9 $$ if (!to.canWrite()) -->Line_11 $$ log.throwing("IOUtils", "copy", e)[ CD ]
Line_4 $$ IllegalArgumentException e = new IllegalArgumentException("Source doesn't exist: " + from.getCanonicalFile())-->Line_11 $$ log.throwing("IOUtils", "copy", e)[ FD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_15 $$ if (to.exists()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_15 $$ if (to.exists()) [ FD ]
Line_15 $$ if (to.exists()) -->Line_15 $$ if (to.exists()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_15 $$ if (to.exists()) [ FD ]
Line_15 $$ if (to.exists()) -->Line_16 $$ if ((mode.val & CopyMode.OverwriteFile.val) != CopyMode.OverwriteFile.val) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_17 $$ IllegalArgumentException e = new IllegalArgumentException("Target already exists: " + to.getCanonicalFile())[ FD ]
Line_16 $$ if ((mode.val & CopyMode.OverwriteFile.val) != CopyMode.OverwriteFile.val) -->Line_18 $$ log.throwing("IOUtils", "copy", e)[ CD ]
Line_4 $$ IllegalArgumentException e = new IllegalArgumentException("Source doesn't exist: " + from.getCanonicalFile())-->Line_18 $$ log.throwing("IOUtils", "copy", e)[ FD ]
Line_15 $$ if (to.exists()) -->Line_21 $$ if (to.isDirectory()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_21 $$ if (to.isDirectory()) [ FD ]
Line_21 $$ if (to.isDirectory()) -->Line_21 $$ if (to.isDirectory()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_21 $$ if (to.isDirectory()) [ FD ]
Line_21 $$ if (to.isDirectory()) -->Line_22 $$ if ((mode.val & CopyMode.OverwriteFolder.val) != CopyMode.OverwriteFolder.val) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_23 $$ IllegalArgumentException e = new IllegalArgumentException("Target is a folder: " + to.getCanonicalFile())[ FD ]
Line_22 $$ if ((mode.val & CopyMode.OverwriteFolder.val) != CopyMode.OverwriteFolder.val) -->Line_24 $$ log.throwing("IOUtils", "copy", e)[ CD ]
Line_4 $$ IllegalArgumentException e = new IllegalArgumentException("Source doesn't exist: " + from.getCanonicalFile())-->Line_24 $$ log.throwing("IOUtils", "copy", e)[ FD ]
Line_22 $$ if ((mode.val & CopyMode.OverwriteFolder.val) != CopyMode.OverwriteFolder.val) -->Line_26 $$ to.delete()[ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_26 $$ to.delete()[ FD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_29 $$ if (from.isFile()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_29 $$ if (from.isFile()) [ FD ]
Line_29 $$ if (from.isFile()) -->Line_29 $$ if (from.isFile()) [ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_29 $$ if (from.isFile()) [ FD ]
Line_29 $$ if (from.isFile()) -->Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()[ CD ]
Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()-->Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()[ CD ]
Line_29 $$ if (from.isFile()) -->Line_31 $$ FileLock inLock = in.lock()[ CD ]
Line_31 $$ FileLock inLock = in.lock()-->Line_31 $$ FileLock inLock = in.lock()[ CD ]
Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()-->Line_31 $$ FileLock inLock = in.lock()[ FD ]
Line_29 $$ if (from.isFile()) -->Line_32 $$ FileChannel out = new FileOutputStream(to).getChannel()[ CD ]
Line_32 $$ FileChannel out = new FileOutputStream(to).getChannel()-->Line_32 $$ FileChannel out = new FileOutputStream(to).getChannel()[ CD ]
Line_29 $$ if (from.isFile()) -->Line_33 $$ FileLock outLock = out.lock()[ CD ]
Line_33 $$ FileLock outLock = out.lock()-->Line_33 $$ FileLock outLock = out.lock()[ CD ]
Line_32 $$ FileChannel out = new FileOutputStream(to).getChannel()-->Line_33 $$ FileLock outLock = out.lock()[ FD ]
Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()-->Line_35 $$ in.transferTo(0, (int) in.size(), out)[ FD ]
Line_32 $$ FileChannel out = new FileOutputStream(to).getChannel()-->Line_35 $$ in.transferTo(0, (int) in.size(), out)[ FD ]
Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()-->Line_35 $$ in.transferTo(0, (int) in.size(), out)[ FD ]
Line_31 $$ FileLock inLock = in.lock()-->Line_37 $$ inLock.release()[ FD ]
Line_33 $$ FileLock outLock = out.lock()-->Line_38 $$ outLock.release()[ FD ]
Line_30 $$ FileChannel in = new FileInputStream(from).getChannel()-->Line_39 $$ in.close()[ FD ]
Line_32 $$ FileChannel out = new FileOutputStream(to).getChannel()-->Line_40 $$ out.close()[ FD ]
Line_29 $$ if (from.isFile()) -->Line_43 $$ to.mkdirs()[ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_43 $$ to.mkdirs()[ FD ]
Line_29 $$ if (from.isFile()) -->Line_44 $$ File[] contents = to.listFiles()[ CD ]
Line_44 $$ File[] contents = to.listFiles()-->Line_44 $$ File[] contents = to.listFiles()[ CD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_44 $$ File[] contents = to.listFiles()[ FD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_46 $$ File newTo = new File(to.getCanonicalPath() + "/" + file.getName())[ FD ]
Line_45 $$ for (File file : contents) -->Line_46 $$ File newTo = new File(to.getCanonicalPath() + "/" + file.getName())[ FD ]
Line_45 $$ for (File file : contents) -->Line_47 $$ copy(file, newTo, mode)[ FD ]
Line_46 $$ File newTo = new File(to.getCanonicalPath() + "/" + file.getName())-->Line_47 $$ copy(file, newTo, mode)[ FD ]
Line_2 $$ public static void copy(File from, File to, CopyMode mode) throws IOException -->Line_47 $$ copy(file, newTo, mode)[ FD ]
