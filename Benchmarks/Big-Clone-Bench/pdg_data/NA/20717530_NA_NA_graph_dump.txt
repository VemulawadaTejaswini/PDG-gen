Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String toMD5String(String plainText) [ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_3 $$ if (TextUtils.isEmpty(plainText)) [ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_3 $$ if (TextUtils.isEmpty(plainText)) [ FD ]
Line_3 $$ if (TextUtils.isEmpty(plainText)) -->Line_3 $$ if (TextUtils.isEmpty(plainText)) [ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_3 $$ if (TextUtils.isEmpty(plainText)) [ FD ]
Line_3 $$ if (TextUtils.isEmpty(plainText)) -->Line_4 $$ plainText = ""[ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_4 $$ plainText = ""[ FD ]
Line_4 $$ plainText = ""-->Line_4 $$ plainText = ""[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_6 $$ StringBuilder text = new StringBuilder()[ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_2 $$ public static String toMD5String(String plainText) [ CD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ FD ]
Line_4 $$ plainText = ""-->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ CD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_8 $$ text.append(plainText.charAt(i))[ CD ]
Line_6 $$ StringBuilder text = new StringBuilder()-->Line_8 $$ text.append(plainText.charAt(i))[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_8 $$ text.append(plainText.charAt(i))[ FD ]
Line_4 $$ plainText = ""-->Line_8 $$ text.append(plainText.charAt(i))[ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_8 $$ text.append(plainText.charAt(i))[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_10 $$ plainText = text.toString()[ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_10 $$ plainText = text.toString()[ FD ]
Line_4 $$ plainText = ""-->Line_10 $$ plainText = text.toString()[ FD ]
Line_10 $$ plainText = text.toString()-->Line_10 $$ plainText = text.toString()[ FD ]
Line_10 $$ plainText = text.toString()-->Line_10 $$ plainText = text.toString()[ CD ]
Line_6 $$ StringBuilder text = new StringBuilder()-->Line_10 $$ plainText = text.toString()[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_11 $$ MessageDigest mDigest[ CD ]
Line_11 $$ MessageDigest mDigest-->Line_13 $$ mDigest = MessageDigest.getInstance("MD5")[ FD ]
Line_13 $$ mDigest = MessageDigest.getInstance("MD5")-->Line_13 $$ mDigest = MessageDigest.getInstance("MD5")[ FD ]
Line_13 $$ mDigest = MessageDigest.getInstance("MD5")-->Line_13 $$ mDigest = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_17 $$ mDigest.update(plainText.getBytes())[ CD ]
Line_11 $$ MessageDigest mDigest-->Line_17 $$ mDigest.update(plainText.getBytes())[ FD ]
Line_13 $$ mDigest = MessageDigest.getInstance("MD5")-->Line_17 $$ mDigest.update(plainText.getBytes())[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_17 $$ mDigest.update(plainText.getBytes())[ FD ]
Line_4 $$ plainText = ""-->Line_17 $$ mDigest.update(plainText.getBytes())[ FD ]
Line_10 $$ plainText = text.toString()-->Line_17 $$ mDigest.update(plainText.getBytes())[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_18 $$ byte d[] = mDigest.digest()[ CD ]
Line_18 $$ byte d[] = mDigest.digest()-->Line_18 $$ byte d[] = mDigest.digest()[ CD ]
Line_11 $$ MessageDigest mDigest-->Line_18 $$ byte d[] = mDigest.digest()[ FD ]
Line_13 $$ mDigest = MessageDigest.getInstance("MD5")-->Line_18 $$ byte d[] = mDigest.digest()[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_19 $$ StringBuffer hash = new StringBuffer()[ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ CD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_2 $$ public static String toMD5String(String plainText) [ CD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_21 $$ hash.append(Integer.toHexString(0xFF & d[i]))[ CD ]
Line_19 $$ StringBuffer hash = new StringBuffer()-->Line_21 $$ hash.append(Integer.toHexString(0xFF & d[i]))[ FD ]
Line_2 $$ public static String toMD5String(String plainText) -->Line_23 $$ return hash.toString()[ CD ]
Line_23 $$ return hash.toString()-->Line_23 $$ return hash.toString()[ CD ]
Line_19 $$ StringBuffer hash = new StringBuffer()-->Line_23 $$ return hash.toString()[ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) [ FD ]
Line_7 $$ for (int i = plainText.length() - 1; i >= 0; i--) -->Line_8 $$ text.append(plainText.charAt(i))[ FD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < d.length; i++) -->Line_20 $$ for (int i = 0; i < d.length; i++) [ FD ]
