Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception [ CD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_3 $$ pAndamento.delimitarIntervaloDeVariacao(0, 49)[ CD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_3 $$ pAndamento.delimitarIntervaloDeVariacao(0, 49)[ FD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_4 $$ PIB[] valoresPendentesDoPIB = obterValoresPendentesDoPIB(pAndamento)[ CD ]
Line_4 $$ PIB[] valoresPendentesDoPIB = obterValoresPendentesDoPIB(pAndamento)-->Line_4 $$ PIB[] valoresPendentesDoPIB = obterValoresPendentesDoPIB(pAndamento)[ CD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_4 $$ PIB[] valoresPendentesDoPIB = obterValoresPendentesDoPIB(pAndamento)[ FD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_5 $$ pAndamento.delimitarIntervaloDeVariacao(50, 100)[ CD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_5 $$ pAndamento.delimitarIntervaloDeVariacao(50, 100)[ FD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_6 $$ if (valoresPendentesDoPIB != null && valoresPendentesDoPIB.length > 0) [ CD ]
Line_6 $$ if (valoresPendentesDoPIB != null && valoresPendentesDoPIB.length > 0) -->Line_7 $$ String sql = "INSERT INTO tmp_TB_PIB(ULTIMO_DIA_DO_MES, PIB_ACUM_12MESES_REAL, PIB_ACUM_12MESES_DOLAR) VALUES(:ULTIMO_DIA_DO_MES, :PIB_ACUM_12MESES_REAL, :PIB_ACUM_12MESES_DOLAR)"[ CD ]
Line_6 $$ if (valoresPendentesDoPIB != null && valoresPendentesDoPIB.length > 0) -->Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)[ CD ]
Line_7 $$ String sql = "INSERT INTO tmp_TB_PIB(ULTIMO_DIA_DO_MES, PIB_ACUM_12MESES_REAL, PIB_ACUM_12MESES_DOLAR) VALUES(:ULTIMO_DIA_DO_MES, :PIB_ACUM_12MESES_REAL, :PIB_ACUM_12MESES_DOLAR)"-->Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)[ FD ]
Line_6 $$ if (valoresPendentesDoPIB != null && valoresPendentesDoPIB.length > 0) -->Line_9 $$ stmtDestino.setExecuteBatch(COMANDOS_POR_LOTE)[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_9 $$ stmtDestino.setExecuteBatch(COMANDOS_POR_LOTE)[ FD ]
Line_6 $$ if (valoresPendentesDoPIB != null && valoresPendentesDoPIB.length > 0) -->Line_10 $$ int quantidadeDeRegistrosASeremImportados = valoresPendentesDoPIB.length[ CD ]
Line_13 $$ int numeroDoRegistro = 0-->Line_16 $$ ++numeroDoRegistro[ FD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_17 $$ stmtDestino.clearParameters()[ FD ]
Line_19 $$ BigDecimal vPIB_ACUM_12MESES_REAL = valorPendenteDoPIB.valorDoPIBEmReais.multiply(MILHAO).setScale(0, RoundingMode.DOWN)-->Line_19 $$ BigDecimal vPIB_ACUM_12MESES_REAL = valorPendenteDoPIB.valorDoPIBEmReais.multiply(MILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_14 $$ final BigDecimal MILHAO = new BigDecimal("1000000")-->Line_19 $$ BigDecimal vPIB_ACUM_12MESES_REAL = valorPendenteDoPIB.valorDoPIBEmReais.multiply(MILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_20 $$ BigDecimal vPIB_ACUM_12MESES_DOLAR = valorPendenteDoPIB.valorDoPIBEmDolares.multiply(MILHAO).setScale(0, RoundingMode.DOWN)-->Line_20 $$ BigDecimal vPIB_ACUM_12MESES_DOLAR = valorPendenteDoPIB.valorDoPIBEmDolares.multiply(MILHAO).setScale(0, RoundingMode.DOWN)[ CD ]
Line_14 $$ final BigDecimal MILHAO = new BigDecimal("1000000")-->Line_20 $$ BigDecimal vPIB_ACUM_12MESES_DOLAR = valorPendenteDoPIB.valorDoPIBEmDolares.multiply(MILHAO).setScale(0, RoundingMode.DOWN)[ FD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_21 $$ stmtDestino.setDateAtName("ULTIMO_DIA_DO_MES", vULTIMO_DIA_DO_MES)[ FD ]
Line_18 $$ java.sql.Date vULTIMO_DIA_DO_MES = new java.sql.Date(obterUltimoDiaDoMes(valorPendenteDoPIB.mesEAno).getTime())-->Line_21 $$ stmtDestino.setDateAtName("ULTIMO_DIA_DO_MES", vULTIMO_DIA_DO_MES)[ FD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_22 $$ stmtDestino.setBigDecimalAtName("PIB_ACUM_12MESES_REAL", vPIB_ACUM_12MESES_REAL)[ FD ]
Line_19 $$ BigDecimal vPIB_ACUM_12MESES_REAL = valorPendenteDoPIB.valorDoPIBEmReais.multiply(MILHAO).setScale(0, RoundingMode.DOWN)-->Line_22 $$ stmtDestino.setBigDecimalAtName("PIB_ACUM_12MESES_REAL", vPIB_ACUM_12MESES_REAL)[ FD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_23 $$ stmtDestino.setBigDecimalAtName("PIB_ACUM_12MESES_DOLAR", vPIB_ACUM_12MESES_DOLAR)[ FD ]
Line_20 $$ BigDecimal vPIB_ACUM_12MESES_DOLAR = valorPendenteDoPIB.valorDoPIBEmDolares.multiply(MILHAO).setScale(0, RoundingMode.DOWN)-->Line_23 $$ stmtDestino.setBigDecimalAtName("PIB_ACUM_12MESES_DOLAR", vPIB_ACUM_12MESES_DOLAR)[ FD ]
Line_24 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()-->Line_24 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_24 $$ int contagemDasInsercoes = stmtDestino.executeUpdate()[ FD ]
Line_12 $$ int quantidadeDeRegistrosImportados = 0-->Line_25 $$ quantidadeDeRegistrosImportados++[ FD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_27 $$ pAndamento.setPercentualCompleto((int) percentualCompleto)[ FD ]
Line_34 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) -->Line_34 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) [ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_34 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) [ FD ]
Line_34 $$ if (stmtDestino != null && (!stmtDestino.isClosed())) -->Line_35 $$ stmtDestino.close()[ CD ]
Line_8 $$ OraclePreparedStatement stmtDestino = (OraclePreparedStatement) conDestino.prepareStatement(sql)-->Line_35 $$ stmtDestino.close()[ FD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_39 $$ pAndamento.setPercentualCompleto(100)[ CD ]
Line_2 $$ public void importarHistoricoDoPIB(Andamento pAndamento) throws FileNotFoundException, SQLException, Exception -->Line_39 $$ pAndamento.setPercentualCompleto(100)[ FD ]
