Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_4 $$ FileChannel out = new FileOutputStream(outputfile).getChannel()-->Line_4 $$ FileChannel out = new FileOutputStream(outputfile).getChannel()[ CD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_7 $$ for (int i = 1; i <= noofparts; i++) [ CD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_7 $$ for (int i = 1; i <= noofparts; i++) [ CD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_7 $$ for (int i = 1; i <= noofparts; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()[ CD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()[ CD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_9 $$ status.setText("Slučovač: Slučuji část " + i + "..")[ CD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_10 $$ this.splitsize = in.size()[ CD ]
Line_10 $$ this.splitsize = in.size()-->Line_10 $$ this.splitsize = in.size()[ CD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_10 $$ this.splitsize = in.size()[ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_11 $$ out.transferFrom(in, pos, splitsize)[ CD ]
Line_4 $$ FileChannel out = new FileOutputStream(outputfile).getChannel()-->Line_11 $$ out.transferFrom(in, pos, splitsize)[ FD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_11 $$ out.transferFrom(in, pos, splitsize)[ FD ]
Line_5 $$ long pos = 0-->Line_11 $$ out.transferFrom(in, pos, splitsize)[ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_12 $$ pos += splitsize[ CD ]
Line_12 $$ pos += splitsize-->Line_12 $$ pos += splitsize[ FD ]
Line_5 $$ long pos = 0-->Line_12 $$ pos += splitsize[ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_13 $$ in.close()[ CD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_13 $$ in.close()[ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_14 $$ if (deleteOnFinish)[ CD ]
Line_14 $$ if (deleteOnFinish)-->Line_14 $$ new File(originalfilename + ".v" + i).delete()[ CD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_15 $$ pb.setValue(100 * i / noofparts)[ CD ]
Line_4 $$ FileChannel out = new FileOutputStream(outputfile).getChannel()-->Line_17 $$ out.close()[ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_7 $$ for (int i = 1; i <= noofparts; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_7 $$ for (int i = 1; i <= noofparts; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= noofparts; i++) -->Line_7 $$ for (int i = 1; i <= noofparts; i++) [ FD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_10 $$ this.splitsize = in.size()[ FD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_11 $$ out.transferFrom(in, pos, splitsize)[ FD ]
Line_12 $$ pos += splitsize-->Line_11 $$ out.transferFrom(in, pos, splitsize)[ FD ]
Line_8 $$ FileChannel in = new FileInputStream(originalfilename.getAbsolutePath() + "." + "v" + i).getChannel()-->Line_13 $$ in.close()[ FD ]
