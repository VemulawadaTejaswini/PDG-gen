Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception [ CD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_3 $$ FTPClient ftpClient = new FTPClient()[ CD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_4 $$ ftpClient.setControlEncoding("euc-kr")[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_4 $$ ftpClient.setControlEncoding("euc-kr")[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ CD ]
Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ CD ]
Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ CD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_6 $$ throw new RuntimeException("IP is needed. (" + synchrnServerVO.getServerIp() + ")")[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())[ CD ]
Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())-->Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())[ CD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ FD ]
Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())-->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_11 $$ FTPFile[] fTPFile = null[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_13 $$ ftpClient.changeWorkingDirectory(synchrnServerVO.getSynchrnLc())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_13 $$ ftpClient.changeWorkingDirectory(synchrnServerVO.getSynchrnLc())[ FD ]
Line_11 $$ FTPFile[] fTPFile = null-->Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())[ FD ]
Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())-->Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())[ FD ]
Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())-->Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_14 $$ fTPFile = ftpClient.listFiles(synchrnServerVO.getSynchrnLc())[ FD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_15 $$ for (int i = 0; i < fTPFile.length; i++) [ CD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_15 $$ for (int i = 0; i < fTPFile.length; i++) [ CD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_15 $$ for (int i = 0; i < fTPFile.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_16 $$ if (synchrnServerVO.getDeleteFileNm().equals(fTPFile[i].getName()))[ CD ]
Line_16 $$ if (synchrnServerVO.getDeleteFileNm().equals(fTPFile[i].getName()))-->Line_16 $$ if (synchrnServerVO.getDeleteFileNm().equals(fTPFile[i].getName()))[ CD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_16 $$ if (synchrnServerVO.getDeleteFileNm().equals(fTPFile[i].getName()))[ FD ]
Line_16 $$ if (synchrnServerVO.getDeleteFileNm().equals(fTPFile[i].getName()))-->Line_16 $$ ftpClient.deleteFile(fTPFile[i].getName())[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_16 $$ ftpClient.deleteFile(fTPFile[i].getName())[ FD ]
Line_18 $$ SynchrnServer synchrnServer = new SynchrnServer()-->Line_19 $$ synchrnServer.setServerId(synchrnServerVO.getServerId())[ FD ]
Line_2 $$ public void deleteSynchrnServerFile(SynchrnServerVO synchrnServerVO) throws Exception -->Line_19 $$ synchrnServer.setServerId(synchrnServerVO.getServerId())[ FD ]
Line_18 $$ SynchrnServer synchrnServer = new SynchrnServer()-->Line_20 $$ synchrnServer.setReflctAt("N")[ FD ]
Line_18 $$ SynchrnServer synchrnServer = new SynchrnServer()-->Line_21 $$ synchrnServerDAO.processSynchrn(synchrnServer)[ FD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_25 $$ ftpClient.logout()[ FD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_15 $$ for (int i = 0; i < fTPFile.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_15 $$ for (int i = 0; i < fTPFile.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < fTPFile.length; i++) -->Line_15 $$ for (int i = 0; i < fTPFile.length; i++) [ FD ]
