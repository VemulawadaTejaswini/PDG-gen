Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String httpGetJson(final List<NameValuePair> nameValuePairs) [ CD ]
Line_2 $$ public static String httpGetJson(final List<NameValuePair> nameValuePairs) -->Line_3 $$ HttpClient httpclient = null[ CD ]
Line_2 $$ public static String httpGetJson(final List<NameValuePair> nameValuePairs) -->Line_4 $$ String data = ""[ CD ]
Line_2 $$ public static String httpGetJson(final List<NameValuePair> nameValuePairs) -->Line_5 $$ URI uri = null[ CD ]
Line_7 $$ final String paramString = URLEncodedUtils.format(nameValuePairs, "utf-8")-->Line_7 $$ final String paramString = URLEncodedUtils.format(nameValuePairs, "utf-8")[ CD ]
Line_2 $$ public static String httpGetJson(final List<NameValuePair> nameValuePairs) -->Line_7 $$ final String paramString = URLEncodedUtils.format(nameValuePairs, "utf-8")[ FD ]
Line_8 $$ if (HTTPS) -->Line_9 $$ final SchemeRegistry schemeRegistry = new SchemeRegistry()[ CD ]
Line_8 $$ if (HTTPS) -->Line_10 $$ schemeRegistry.register(new Scheme("https", SSLSocketFactory.getSocketFactory(), 443))[ CD ]
Line_9 $$ final SchemeRegistry schemeRegistry = new SchemeRegistry()-->Line_10 $$ schemeRegistry.register(new Scheme("https", SSLSocketFactory.getSocketFactory(), 443))[ FD ]
Line_8 $$ if (HTTPS) -->Line_11 $$ final HttpParams params = new BasicHttpParams()[ CD ]
Line_8 $$ if (HTTPS) -->Line_12 $$ final SingleClientConnManager mgr = new SingleClientConnManager(params, schemeRegistry)[ CD ]
Line_8 $$ if (HTTPS) -->Line_13 $$ httpclient = new DefaultHttpClient(mgr, params)[ CD ]
Line_3 $$ HttpClient httpclient = null-->Line_13 $$ httpclient = new DefaultHttpClient(mgr, params)[ FD ]
Line_13 $$ httpclient = new DefaultHttpClient(mgr, params)-->Line_13 $$ httpclient = new DefaultHttpClient(mgr, params)[ FD ]
Line_8 $$ if (HTTPS) -->Line_14 $$ uri = new URI(DEADDROPS_SERVER_URL_HTTPS + "?" + paramString)[ CD ]
Line_5 $$ URI uri = null-->Line_14 $$ uri = new URI(DEADDROPS_SERVER_URL_HTTPS + "?" + paramString)[ FD ]
Line_14 $$ uri = new URI(DEADDROPS_SERVER_URL_HTTPS + "?" + paramString)-->Line_14 $$ uri = new URI(DEADDROPS_SERVER_URL_HTTPS + "?" + paramString)[ FD ]
Line_8 $$ if (HTTPS) -->Line_16 $$ httpclient = new DefaultHttpClient()[ CD ]
Line_3 $$ HttpClient httpclient = null-->Line_16 $$ httpclient = new DefaultHttpClient()[ FD ]
Line_13 $$ httpclient = new DefaultHttpClient(mgr, params)-->Line_16 $$ httpclient = new DefaultHttpClient()[ FD ]
Line_16 $$ httpclient = new DefaultHttpClient()-->Line_16 $$ httpclient = new DefaultHttpClient()[ FD ]
Line_8 $$ if (HTTPS) -->Line_17 $$ uri = new URI(DEADDROPS_SERVER_URL + "?" + paramString)[ CD ]
Line_5 $$ URI uri = null-->Line_17 $$ uri = new URI(DEADDROPS_SERVER_URL + "?" + paramString)[ FD ]
Line_14 $$ uri = new URI(DEADDROPS_SERVER_URL_HTTPS + "?" + paramString)-->Line_17 $$ uri = new URI(DEADDROPS_SERVER_URL + "?" + paramString)[ FD ]
Line_17 $$ uri = new URI(DEADDROPS_SERVER_URL + "?" + paramString)-->Line_17 $$ uri = new URI(DEADDROPS_SERVER_URL + "?" + paramString)[ FD ]
Line_19 $$ final HttpGet request = new HttpGet()-->Line_20 $$ request.setURI(uri)[ FD ]
Line_5 $$ URI uri = null-->Line_20 $$ request.setURI(uri)[ FD ]
Line_14 $$ uri = new URI(DEADDROPS_SERVER_URL_HTTPS + "?" + paramString)-->Line_20 $$ request.setURI(uri)[ FD ]
Line_17 $$ uri = new URI(DEADDROPS_SERVER_URL + "?" + paramString)-->Line_20 $$ request.setURI(uri)[ FD ]
Line_21 $$ final HttpResponse response = httpclient.execute(request)-->Line_21 $$ final HttpResponse response = httpclient.execute(request)[ CD ]
Line_3 $$ HttpClient httpclient = null-->Line_21 $$ final HttpResponse response = httpclient.execute(request)[ FD ]
Line_13 $$ httpclient = new DefaultHttpClient(mgr, params)-->Line_21 $$ final HttpResponse response = httpclient.execute(request)[ FD ]
Line_16 $$ httpclient = new DefaultHttpClient()-->Line_21 $$ final HttpResponse response = httpclient.execute(request)[ FD ]
Line_19 $$ final HttpGet request = new HttpGet()-->Line_21 $$ final HttpResponse response = httpclient.execute(request)[ FD ]
Line_21 $$ final HttpResponse response = httpclient.execute(request)-->Line_22 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))[ FD ]
Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine-->Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine[ FD ]
Line_23 $$ String inputLine-->Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine[ FD ]
Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine-->Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine[ CD ]
Line_22 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))-->Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine[ FD ]
Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine-->Line_24 $$ data += inputLine[ CD ]
Line_24 $$ data += inputLine-->Line_24 $$ data += inputLine[ FD ]
Line_4 $$ String data = ""-->Line_24 $$ data += inputLine[ FD ]
Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine-->Line_24 $$ data += inputLine[ FD ]
Line_23 $$ String inputLine-->Line_24 $$ data += inputLine[ FD ]
Line_22 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))-->Line_25 $$ in.close()[ FD ]
Line_2 $$ public static String httpGetJson(final List<NameValuePair> nameValuePairs) -->Line_36 $$ return data[ CD ]
Line_24 $$ while ((inputLine = in.readLine()) != null) data += inputLine-->Line_24 $$ data += inputLine[ FD ]
