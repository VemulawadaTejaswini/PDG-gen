Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException [ CD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_3 $$ HttpURLConnection connection = Caller.getInstance().openConnection(url)[ CD ]
Line_3 $$ HttpURLConnection connection = Caller.getInstance().openConnection(url)-->Line_3 $$ HttpURLConnection connection = Caller.getInstance().openConnection(url)[ CD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_3 $$ HttpURLConnection connection = Caller.getInstance().openConnection(url)[ FD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_4 $$ InputStream is = connection.getInputStream()[ CD ]
Line_4 $$ InputStream is = connection.getInputStream()-->Line_4 $$ InputStream is = connection.getInputStream()[ CD ]
Line_3 $$ HttpURLConnection connection = Caller.getInstance().openConnection(url)-->Line_4 $$ InputStream is = connection.getInputStream()[ FD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is))[ CD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_6 $$ String status = r.readLine()[ CD ]
Line_6 $$ String status = r.readLine()-->Line_6 $$ String status = r.readLine()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is))-->Line_6 $$ String status = r.readLine()[ FD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_7 $$ int statusCode = ResponseStatus.codeForStatus(status)[ CD ]
Line_7 $$ int statusCode = ResponseStatus.codeForStatus(status)-->Line_7 $$ int statusCode = ResponseStatus.codeForStatus(status)[ CD ]
Line_6 $$ String status = r.readLine()-->Line_7 $$ int statusCode = ResponseStatus.codeForStatus(status)[ FD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_8 $$ ResponseStatus responseStatus[ CD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_9 $$ if (statusCode == ResponseStatus.OK) [ CD ]
Line_7 $$ int statusCode = ResponseStatus.codeForStatus(status)-->Line_9 $$ if (statusCode == ResponseStatus.OK) [ FD ]
Line_9 $$ if (statusCode == ResponseStatus.OK) -->Line_10 $$ this.sessionId = r.readLine()[ CD ]
Line_10 $$ this.sessionId = r.readLine()-->Line_10 $$ this.sessionId = r.readLine()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is))-->Line_10 $$ this.sessionId = r.readLine()[ FD ]
Line_9 $$ if (statusCode == ResponseStatus.OK) -->Line_11 $$ this.nowPlayingUrl = r.readLine()[ CD ]
Line_11 $$ this.nowPlayingUrl = r.readLine()-->Line_11 $$ this.nowPlayingUrl = r.readLine()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is))-->Line_11 $$ this.nowPlayingUrl = r.readLine()[ FD ]
Line_9 $$ if (statusCode == ResponseStatus.OK) -->Line_12 $$ this.submissionUrl = r.readLine()[ CD ]
Line_12 $$ this.submissionUrl = r.readLine()-->Line_12 $$ this.submissionUrl = r.readLine()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is))-->Line_12 $$ this.submissionUrl = r.readLine()[ FD ]
Line_9 $$ if (statusCode == ResponseStatus.OK) -->Line_13 $$ responseStatus = new ResponseStatus(statusCode)[ CD ]
Line_8 $$ ResponseStatus responseStatus-->Line_13 $$ responseStatus = new ResponseStatus(statusCode)[ FD ]
Line_13 $$ responseStatus = new ResponseStatus(statusCode)-->Line_13 $$ responseStatus = new ResponseStatus(statusCode)[ FD ]
Line_9 $$ if (statusCode == ResponseStatus.OK) -->Line_14 $$ if (statusCode == ResponseStatus.FAILED) [ CD ]
Line_7 $$ int statusCode = ResponseStatus.codeForStatus(status)-->Line_14 $$ if (statusCode == ResponseStatus.FAILED) [ FD ]
Line_14 $$ if (statusCode == ResponseStatus.FAILED) -->Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))[ CD ]
Line_8 $$ ResponseStatus responseStatus-->Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))[ FD ]
Line_13 $$ responseStatus = new ResponseStatus(statusCode)-->Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))[ FD ]
Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))-->Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))[ FD ]
Line_6 $$ String status = r.readLine()-->Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))[ FD ]
Line_6 $$ String status = r.readLine()-->Line_15 $$ responseStatus = new ResponseStatus(statusCode, status.substring(status.indexOf(' ') + 1))[ FD ]
Line_14 $$ if (statusCode == ResponseStatus.FAILED) -->Line_17 $$ return new ResponseStatus(statusCode)[ CD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_19 $$ r.close()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is))-->Line_19 $$ r.close()[ FD ]
Line_2 $$ private ResponseStatus performHandshake(String url) throws IOException -->Line_20 $$ return responseStatus[ CD ]
