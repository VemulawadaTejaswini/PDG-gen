Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void apop(String user, char[] secret) throws IOException, POP3Exception [ CD ]
Line_2 $$ public void apop(String user, char[] secret) throws IOException, POP3Exception -->Line_3 $$ if (timestamp == null) [ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_7 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_8 $$ md.update(timestamp.getBytes())[ FD ]
Line_2 $$ public void apop(String user, char[] secret) throws IOException, POP3Exception -->Line_9 $$ if (secret == null)[ FD ]
Line_9 $$ if (secret == null)-->Line_9 $$ secret = new char[0][ CD ]
Line_2 $$ public void apop(String user, char[] secret) throws IOException, POP3Exception -->Line_9 $$ secret = new char[0][ FD ]
Line_9 $$ secret = new char[0]-->Line_9 $$ secret = new char[0][ FD ]
Line_10 $$ byte[] digest = md.digest(new String(secret).getBytes("ISO-8859-1"))-->Line_10 $$ byte[] digest = md.digest(new String(secret).getBytes("ISO-8859-1"))[ CD ]
Line_7 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_10 $$ byte[] digest = md.digest(new String(secret).getBytes("ISO-8859-1"))[ FD ]
Line_10 $$ byte[] digest = md.digest(new String(secret).getBytes("ISO-8859-1"))-->Line_12 $$ sendCommand("APOP", new String[] [ FD ]
Line_13 $$ POP3Response response = readSingleLineResponse()-->Line_13 $$ POP3Response response = readSingleLineResponse()[ CD ]
Line_14 $$ if (!response.isOK()) -->Line_14 $$ if (!response.isOK()) [ CD ]
Line_14 $$ if (!response.isOK()) -->Line_14 $$ if (!response.isOK()) [ CD ]
Line_13 $$ POP3Response response = readSingleLineResponse()-->Line_14 $$ if (!response.isOK()) [ FD ]
