Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ String cacheName = req.getParameter("cacheName")[ CD ]
Line_3 $$ String cacheName = req.getParameter("cacheName")-->Line_3 $$ String cacheName = req.getParameter("cacheName")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ String cacheName = req.getParameter("cacheName")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ if (cacheName == null || cacheName.equals("")) [ CD ]
Line_3 $$ String cacheName = req.getParameter("cacheName")-->Line_4 $$ if (cacheName == null || cacheName.equals("")) [ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_5 $$ resp.getWriter().println("parameter cacheName required")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_5 $$ resp.getWriter().println("parameter cacheName required")[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_6 $$ return[ CD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_8 $$ StringBuffer urlStr = new StringBuffer()[ CD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_9 $$ urlStr.append(BASE_URL)[ CD ]
Line_8 $$ StringBuffer urlStr = new StringBuffer()-->Line_9 $$ urlStr.append(BASE_URL)[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_10 $$ urlStr.append("?")[ CD ]
Line_8 $$ StringBuffer urlStr = new StringBuffer()-->Line_10 $$ urlStr.append("?")[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_11 $$ urlStr.append("cacheName=")[ CD ]
Line_8 $$ StringBuffer urlStr = new StringBuffer()-->Line_11 $$ urlStr.append("cacheName=")[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_12 $$ urlStr.append("rpcwc.bo.cache.")[ CD ]
Line_8 $$ StringBuffer urlStr = new StringBuffer()-->Line_12 $$ urlStr.append("rpcwc.bo.cache.")[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_13 $$ urlStr.append(cacheName)[ CD ]
Line_8 $$ StringBuffer urlStr = new StringBuffer()-->Line_13 $$ urlStr.append(cacheName)[ FD ]
Line_3 $$ String cacheName = req.getParameter("cacheName")-->Line_13 $$ urlStr.append(cacheName)[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_14 $$ URL url = new URL(urlStr.toString())[ CD ]
Line_8 $$ StringBuffer urlStr = new StringBuffer()-->Line_14 $$ URL url = new URL(urlStr.toString())[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_14 $$ URL url = new URL(urlStr.toString())-->Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_16 $$ String line = null[ CD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_17 $$ StringBuffer output = new StringBuffer()[ CD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_18 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_4 $$ if (cacheName == null || cacheName.equals("")) [ CD ]
Line_18 $$ while ((line = reader.readLine()) != null) -->Line_18 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_16 $$ String line = null-->Line_18 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_18 $$ while ((line = reader.readLine()) != null) -->Line_18 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_18 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_18 $$ while ((line = reader.readLine()) != null) -->Line_19 $$ output.append(line)[ CD ]
Line_17 $$ StringBuffer output = new StringBuffer()-->Line_19 $$ output.append(line)[ FD ]
Line_18 $$ while ((line = reader.readLine()) != null) -->Line_19 $$ output.append(line)[ FD ]
Line_16 $$ String line = null-->Line_19 $$ output.append(line)[ FD ]
Line_18 $$ while ((line = reader.readLine()) != null) -->Line_20 $$ output.append(System.getProperty("line.separator"))[ CD ]
Line_17 $$ StringBuffer output = new StringBuffer()-->Line_20 $$ output.append(System.getProperty("line.separator"))[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_22 $$ reader.close()[ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_22 $$ reader.close()[ FD ]
Line_4 $$ if (cacheName == null || cacheName.equals("")) -->Line_23 $$ resp.getWriter().println(output.toString())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_23 $$ resp.getWriter().println(output.toString())[ FD ]
Line_17 $$ StringBuffer output = new StringBuffer()-->Line_23 $$ resp.getWriter().println(output.toString())[ FD ]
Line_18 $$ while ((line = reader.readLine()) != null) -->Line_19 $$ output.append(line)[ FD ]
