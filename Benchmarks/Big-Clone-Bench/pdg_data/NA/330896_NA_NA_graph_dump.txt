Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] argv) [ CD ]
Line_2 $$ public static void main(String[] argv) -->Line_3 $$ if (1 < argv.length) [ CD ]
Line_3 $$ if (1 < argv.length) -->Line_4 $$ File[] sources = Source(argv[0])[ CD ]
Line_4 $$ File[] sources = Source(argv[0])-->Line_4 $$ File[] sources = Source(argv[0])[ CD ]
Line_3 $$ if (1 < argv.length) -->Line_5 $$ if (null != sources) [ CD ]
Line_4 $$ File[] sources = Source(argv[0])-->Line_5 $$ if (null != sources) [ FD ]
Line_7 $$ File[] targets = Target(src, argv)-->Line_7 $$ File[] targets = Target(src, argv)[ CD ]
Line_6 $$ for (File src : sources) -->Line_7 $$ File[] targets = Target(src, argv)[ FD ]
Line_2 $$ public static void main(String[] argv) -->Line_7 $$ File[] targets = Target(src, argv)[ FD ]
Line_7 $$ File[] targets = Target(src, argv)-->Line_8 $$ if (null != targets) [ FD ]
Line_8 $$ if (null != targets) -->Line_9 $$ final long srclen = src.length()[ CD ]
Line_9 $$ final long srclen = src.length()-->Line_9 $$ final long srclen = src.length()[ CD ]
Line_6 $$ for (File src : sources) -->Line_9 $$ final long srclen = src.length()[ FD ]
Line_11 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_11 $$ FileChannel source = new FileInputStream(src).getChannel()[ CD ]
Line_14 $$ FileChannel target = new FileOutputStream(tgt).getChannel()-->Line_14 $$ FileChannel target = new FileOutputStream(tgt).getChannel()[ CD ]
Line_11 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_16 $$ source.transferTo(0L, srclen, target)[ FD ]
Line_9 $$ final long srclen = src.length()-->Line_16 $$ source.transferTo(0L, srclen, target)[ FD ]
Line_14 $$ FileChannel target = new FileOutputStream(tgt).getChannel()-->Line_16 $$ source.transferTo(0L, srclen, target)[ FD ]
Line_14 $$ FileChannel target = new FileOutputStream(tgt).getChannel()-->Line_18 $$ target.close()[ FD ]
Line_13 $$ for (File tgt : targets) -->Line_20 $$ System.out.printf("Updated %s\n", tgt.getPath())[ FD ]
Line_21 $$ File[] deletes = Delete(src, tgt)-->Line_21 $$ File[] deletes = Delete(src, tgt)[ CD ]
Line_6 $$ for (File src : sources) -->Line_21 $$ File[] deletes = Delete(src, tgt)[ FD ]
Line_13 $$ for (File tgt : targets) -->Line_21 $$ File[] deletes = Delete(src, tgt)[ FD ]
Line_21 $$ File[] deletes = Delete(src, tgt)-->Line_22 $$ if (null != deletes) [ FD ]
Line_24 $$ if (SVN) -->Line_25 $$ if (SvnDelete(del))[ CD ]
Line_23 $$ for (File del : deletes) -->Line_25 $$ if (SvnDelete(del))[ FD ]
Line_25 $$ if (SvnDelete(del))-->Line_25 $$ if (SvnDelete(del))[ CD ]
Line_23 $$ for (File del : deletes) -->Line_25 $$ if (SvnDelete(del))[ FD ]
Line_25 $$ if (SvnDelete(del))-->Line_25 $$ System.out.printf("Deleted %s\n", del.getPath())[ CD ]
Line_23 $$ for (File del : deletes) -->Line_25 $$ System.out.printf("Deleted %s\n", del.getPath())[ FD ]
Line_25 $$ if (SvnDelete(del))-->Line_25 $$ System.out.printf("Failed to delete %s\n", del.getPath())[ CD ]
Line_23 $$ for (File del : deletes) -->Line_25 $$ System.out.printf("Failed to delete %s\n", del.getPath())[ FD ]
Line_24 $$ if (SVN) -->Line_26 $$ if (del.delete())[ CD ]
Line_23 $$ for (File del : deletes) -->Line_26 $$ if (del.delete())[ FD ]
Line_26 $$ if (del.delete())-->Line_26 $$ if (del.delete())[ CD ]
Line_23 $$ for (File del : deletes) -->Line_26 $$ if (del.delete())[ FD ]
Line_26 $$ if (del.delete())-->Line_26 $$ System.out.printf("Deleted %s\n", del.getPath())[ CD ]
Line_23 $$ for (File del : deletes) -->Line_26 $$ System.out.printf("Deleted %s\n", del.getPath())[ FD ]
Line_26 $$ if (del.delete())-->Line_26 $$ System.out.printf("Failed to delete %s\n", del.getPath())[ CD ]
Line_23 $$ for (File del : deletes) -->Line_26 $$ System.out.printf("Failed to delete %s\n", del.getPath())[ FD ]
Line_29 $$ if (SVN)-->Line_29 $$ SvnAdd(tgt)[ CD ]
Line_13 $$ for (File tgt : targets) -->Line_29 $$ SvnAdd(tgt)[ FD ]
Line_11 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_32 $$ source.close()[ FD ]
Line_5 $$ if (null != sources) -->Line_40 $$ System.exit(0)[ CD ]
Line_5 $$ if (null != sources) -->Line_42 $$ System.err.printf("Source file(s) not found in '%s'\n", argv[0])[ CD ]
Line_5 $$ if (null != sources) -->Line_43 $$ System.exit(1)[ CD ]
Line_3 $$ if (1 < argv.length) -->Line_46 $$ usage()[ CD ]
Line_3 $$ if (1 < argv.length) -->Line_47 $$ System.exit(1)[ CD ]
