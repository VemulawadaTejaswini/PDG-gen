Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException [ CD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_3 $$ final File storage = getStorageFile(_src, _temp)[ CD ]
Line_3 $$ final File storage = getStorageFile(_src, _temp)-->Line_3 $$ final File storage = getStorageFile(_src, _temp)[ CD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_3 $$ final File storage = getStorageFile(_src, _temp)[ FD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_3 $$ final File storage = getStorageFile(_src, _temp)[ FD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_4 $$ final File dest = new File(_src.getFile())[ CD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_4 $$ final File dest = new File(_src.getFile())[ FD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_5 $$ FileChannel in = null[ CD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_6 $$ FileChannel out = null[ CD ]
Line_2 $$ protected void copyAndDelete(final URL _src, final long _temp) throws IOException -->Line_7 $$ if (storage.equals(dest)) [ CD ]
Line_3 $$ final File storage = getStorageFile(_src, _temp)-->Line_7 $$ if (storage.equals(dest)) [ FD ]
Line_4 $$ final File dest = new File(_src.getFile())-->Line_7 $$ if (storage.equals(dest)) [ FD ]
Line_7 $$ if (storage.equals(dest)) -->Line_7 $$ if (storage.equals(dest)) [ CD ]
Line_3 $$ final File storage = getStorageFile(_src, _temp)-->Line_7 $$ if (storage.equals(dest)) [ FD ]
Line_4 $$ final File dest = new File(_src.getFile())-->Line_7 $$ if (storage.equals(dest)) [ FD ]
Line_7 $$ if (storage.equals(dest)) -->Line_8 $$ return[ CD ]
Line_4 $$ final File dest = new File(_src.getFile())-->Line_12 $$ if (dest.exists()) [ FD ]
Line_12 $$ if (dest.exists()) -->Line_12 $$ if (dest.exists()) [ CD ]
Line_4 $$ final File dest = new File(_src.getFile())-->Line_12 $$ if (dest.exists()) [ FD ]
Line_12 $$ if (dest.exists()) -->Line_13 $$ dest.delete()[ CD ]
Line_4 $$ final File dest = new File(_src.getFile())-->Line_13 $$ dest.delete()[ FD ]
Line_3 $$ final File storage = getStorageFile(_src, _temp)-->Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) [ FD ]
Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) -->Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) [ CD ]
Line_3 $$ final File storage = getStorageFile(_src, _temp)-->Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) [ FD ]
Line_4 $$ final File dest = new File(_src.getFile())-->Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) [ FD ]
Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) -->Line_16 $$ in = new FileInputStream(storage).getChannel()[ CD ]
Line_5 $$ FileChannel in = null-->Line_16 $$ in = new FileInputStream(storage).getChannel()[ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_16 $$ in = new FileInputStream(storage).getChannel()[ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_16 $$ in = new FileInputStream(storage).getChannel()[ CD ]
Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) -->Line_17 $$ out = new FileOutputStream(dest).getChannel()[ CD ]
Line_6 $$ FileChannel out = null-->Line_17 $$ out = new FileOutputStream(dest).getChannel()[ FD ]
Line_17 $$ out = new FileOutputStream(dest).getChannel()-->Line_17 $$ out = new FileOutputStream(dest).getChannel()[ FD ]
Line_17 $$ out = new FileOutputStream(dest).getChannel()-->Line_17 $$ out = new FileOutputStream(dest).getChannel()[ CD ]
Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) -->Line_18 $$ final long len = in.size()[ CD ]
Line_18 $$ final long len = in.size()-->Line_18 $$ final long len = in.size()[ CD ]
Line_5 $$ FileChannel in = null-->Line_18 $$ final long len = in.size()[ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_18 $$ final long len = in.size()[ FD ]
Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) -->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ CD ]
Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ CD ]
Line_6 $$ FileChannel out = null-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ FD ]
Line_17 $$ out = new FileOutputStream(dest).getChannel()-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ FD ]
Line_5 $$ FileChannel in = null-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ FD ]
Line_5 $$ FileChannel in = null-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())[ FD ]
Line_15 $$ if (storage.exists() && !storage.renameTo(dest)) -->Line_20 $$ if (len != copied) [ CD ]
Line_18 $$ final long len = in.size()-->Line_20 $$ if (len != copied) [ FD ]
Line_19 $$ final long copied = out.transferFrom(in, 0, in.size())-->Line_20 $$ if (len != copied) [ FD ]
Line_5 $$ FileChannel in = null-->Line_27 $$ if (in != null) [ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_27 $$ if (in != null) [ FD ]
Line_27 $$ if (in != null) -->Line_28 $$ in.close()[ CD ]
Line_5 $$ FileChannel in = null-->Line_28 $$ in.close()[ FD ]
Line_16 $$ in = new FileInputStream(storage).getChannel()-->Line_28 $$ in.close()[ FD ]
Line_6 $$ FileChannel out = null-->Line_34 $$ if (out != null) [ FD ]
Line_17 $$ out = new FileOutputStream(dest).getChannel()-->Line_34 $$ if (out != null) [ FD ]
Line_34 $$ if (out != null) -->Line_35 $$ out.close()[ CD ]
Line_6 $$ FileChannel out = null-->Line_35 $$ out.close()[ FD ]
Line_17 $$ out = new FileOutputStream(dest).getChannel()-->Line_35 $$ out.close()[ FD ]
Line_3 $$ final File storage = getStorageFile(_src, _temp)-->Line_40 $$ storage.delete()[ FD ]
