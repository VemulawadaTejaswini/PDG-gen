Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) [ CD ]
Line_4 $$ File temp = File.createTempFile("atf", ".zip")-->Line_4 $$ File temp = File.createTempFile("atf", ".zip")[ CD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_16 $$ if (oldname != null) [ FD ]
Line_16 $$ if (oldname != null) -->Line_17 $$ name = oldname[ CD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_17 $$ name = oldname[ FD ]
Line_17 $$ name = oldname-->Line_17 $$ name = oldname[ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_17 $$ name = oldname[ FD ]
Line_16 $$ if (oldname != null) -->Line_18 $$ rename = true[ CD ]
Line_14 $$ boolean rename = false-->Line_18 $$ rename = true[ FD ]
Line_18 $$ rename = true-->Line_18 $$ rename = true[ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_20 $$ while ((e = zin.getNextEntry()) != null) [ FD ]
Line_9 $$ ZipEntry e-->Line_20 $$ while ((e = zin.getNextEntry()) != null) [ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_20 $$ while ((e = zin.getNextEntry()) != null) [ CD ]
Line_7 $$ ZipInputStream zin = new ZipInputStream(in)-->Line_20 $$ while ((e = zin.getNextEntry()) != null) [ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_21 $$ if (!e.isDirectory()) [ CD ]
Line_21 $$ if (!e.isDirectory()) -->Line_21 $$ if (!e.isDirectory()) [ CD ]
Line_21 $$ if (!e.isDirectory()) -->Line_21 $$ if (!e.isDirectory()) [ CD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_21 $$ if (!e.isDirectory()) [ FD ]
Line_9 $$ ZipEntry e-->Line_21 $$ if (!e.isDirectory()) [ FD ]
Line_21 $$ if (!e.isDirectory()) -->Line_22 $$ String ename = e.getName()[ CD ]
Line_22 $$ String ename = e.getName()-->Line_22 $$ String ename = e.getName()[ CD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_22 $$ String ename = e.getName()[ FD ]
Line_9 $$ ZipEntry e-->Line_22 $$ String ename = e.getName()[ FD ]
Line_21 $$ if (!e.isDirectory()) -->Line_23 $$ if (delete && ename.equals(name))[ CD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_23 $$ if (delete && ename.equals(name))[ FD ]
Line_22 $$ String ename = e.getName()-->Line_23 $$ if (delete && ename.equals(name))[ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_23 $$ if (delete && ename.equals(name))[ FD ]
Line_17 $$ name = oldname-->Line_23 $$ if (delete && ename.equals(name))[ FD ]
Line_21 $$ if (!e.isDirectory()) -->Line_24 $$ e2 = new ZipEntry(rename ? oname : ename)[ CD ]
Line_24 $$ e2 = new ZipEntry(rename ? oname : ename)-->Line_24 $$ e2 = new ZipEntry(rename ? oname : ename)[ FD ]
Line_10 $$ ZipEntry e2-->Line_24 $$ e2 = new ZipEntry(rename ? oname : ename)[ FD ]
Line_21 $$ if (!e.isDirectory()) -->Line_25 $$ zout.putNextEntry(e2)[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_25 $$ zout.putNextEntry(e2)[ FD ]
Line_24 $$ e2 = new ZipEntry(rename ? oname : ename)-->Line_25 $$ zout.putNextEntry(e2)[ FD ]
Line_10 $$ ZipEntry e2-->Line_25 $$ zout.putNextEntry(e2)[ FD ]
Line_21 $$ if (!e.isDirectory()) -->Line_26 $$ if (ename.equals(name)) [ CD ]
Line_22 $$ String ename = e.getName()-->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_17 $$ name = oldname-->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_26 $$ if (ename.equals(name)) -->Line_26 $$ if (ename.equals(name)) [ CD ]
Line_22 $$ String ename = e.getName()-->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_17 $$ name = oldname-->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_26 $$ if (ename.equals(name)) -->Line_27 $$ found = true[ CD ]
Line_27 $$ found = true-->Line_27 $$ found = true[ FD ]
Line_13 $$ boolean found = false-->Line_27 $$ found = true[ FD ]
Line_26 $$ if (ename.equals(name)) -->Line_28 $$ zout.write(contents)[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_28 $$ zout.write(contents)[ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_28 $$ zout.write(contents)[ FD ]
Line_26 $$ if (ename.equals(name)) -->Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)[ CD ]
Line_26 $$ if (ename.equals(name)) -->Line_26 $$ if (ename.equals(name)) [ CD ]
Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)-->Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)[ FD ]
Line_12 $$ int bytesRead-->Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)[ FD ]
Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)-->Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)[ CD ]
Line_7 $$ ZipInputStream zin = new ZipInputStream(in)-->Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)[ FD ]
Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)-->Line_30 $$ zout.write(buffer, 0, bytesRead)[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_30 $$ zout.write(buffer, 0, bytesRead)[ FD ]
Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)-->Line_30 $$ zout.write(buffer, 0, bytesRead)[ FD ]
Line_12 $$ int bytesRead-->Line_30 $$ zout.write(buffer, 0, bytesRead)[ FD ]
Line_21 $$ if (!e.isDirectory()) -->Line_32 $$ zout.closeEntry()[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_32 $$ zout.closeEntry()[ FD ]
Line_27 $$ found = true-->Line_35 $$ if (!found && !delete) [ FD ]
Line_13 $$ boolean found = false-->Line_35 $$ if (!found && !delete) [ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_35 $$ if (!found && !delete) [ FD ]
Line_35 $$ if (!found && !delete) -->Line_36 $$ e = new ZipEntry(name)[ CD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_36 $$ e = new ZipEntry(name)[ FD ]
Line_9 $$ ZipEntry e-->Line_36 $$ e = new ZipEntry(name)[ FD ]
Line_36 $$ e = new ZipEntry(name)-->Line_36 $$ e = new ZipEntry(name)[ FD ]
Line_35 $$ if (!found && !delete) -->Line_37 $$ zout.putNextEntry(e)[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_37 $$ zout.putNextEntry(e)[ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_37 $$ zout.putNextEntry(e)[ FD ]
Line_9 $$ ZipEntry e-->Line_37 $$ zout.putNextEntry(e)[ FD ]
Line_36 $$ e = new ZipEntry(name)-->Line_37 $$ zout.putNextEntry(e)[ FD ]
Line_35 $$ if (!found && !delete) -->Line_38 $$ zout.write(contents)[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_38 $$ zout.write(contents)[ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_38 $$ zout.write(contents)[ FD ]
Line_35 $$ if (!found && !delete) -->Line_39 $$ zout.closeEntry()[ CD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_39 $$ zout.closeEntry()[ FD ]
Line_7 $$ ZipInputStream zin = new ZipInputStream(in)-->Line_41 $$ zin.close()[ FD ]
Line_8 $$ ZipOutputStream zout = new ZipOutputStream(os)-->Line_42 $$ zout.close()[ FD ]
Line_43 $$ File fp = new File(zipfile)-->Line_44 $$ fp.delete()[ FD ]
Line_4 $$ File temp = File.createTempFile("atf", ".zip")-->Line_45 $$ MLUtil.copyFile(temp, fp)[ FD ]
Line_43 $$ File fp = new File(zipfile)-->Line_45 $$ MLUtil.copyFile(temp, fp)[ FD ]
Line_4 $$ File temp = File.createTempFile("atf", ".zip")-->Line_46 $$ temp.delete()[ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_49 $$ MLUtil.runtimeError(e, "updateZip " + zipfile + " " + name)[ FD ]
Line_9 $$ ZipEntry e-->Line_49 $$ MLUtil.runtimeError(e, "updateZip " + zipfile + " " + name)[ FD ]
Line_36 $$ e = new ZipEntry(name)-->Line_49 $$ MLUtil.runtimeError(e, "updateZip " + zipfile + " " + name)[ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_51 $$ MLUtil.runtimeError(e, "updateZip " + zipfile + " " + name)[ FD ]
Line_9 $$ ZipEntry e-->Line_51 $$ MLUtil.runtimeError(e, "updateZip " + zipfile + " " + name)[ FD ]
Line_36 $$ e = new ZipEntry(name)-->Line_51 $$ MLUtil.runtimeError(e, "updateZip " + zipfile + " " + name)[ FD ]
Line_2 $$ public static final boolean zipUpdate(String zipfile, String name, String oldname, byte[] contents, boolean delete) -->Line_53 $$ return (false)[ CD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_21 $$ if (!e.isDirectory()) [ FD ]
Line_20 $$ while ((e = zin.getNextEntry()) != null) -->Line_22 $$ String ename = e.getName()[ FD ]
Line_22 $$ String ename = e.getName()-->Line_23 $$ if (delete && ename.equals(name))[ FD ]
Line_24 $$ e2 = new ZipEntry(rename ? oname : ename)-->Line_25 $$ zout.putNextEntry(e2)[ FD ]
Line_22 $$ String ename = e.getName()-->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_22 $$ String ename = e.getName()-->Line_26 $$ if (ename.equals(name)) [ FD ]
Line_30 $$ while ((bytesRead = zin.read(buffer)) != -1) zout.write(buffer, 0, bytesRead)-->Line_30 $$ zout.write(buffer, 0, bytesRead)[ FD ]
