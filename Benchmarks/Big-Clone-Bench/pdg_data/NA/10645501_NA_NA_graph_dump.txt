Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private int streamConf() throws IOException [ CD ]
Line_2 $$ private int streamConf() throws IOException -->Line_3 $$ int avail = 0[ CD ]
Line_6 $$ if (!Helper.findInString(filename, ".jar")) -->Line_6 $$ if (!Helper.findInString(filename, ".jar")) [ CD ]
Line_6 $$ if (!Helper.findInString(filename, ".jar")) -->Line_6 $$ if (!Helper.findInString(filename, ".jar")) [ CD ]
Line_6 $$ if (!Helper.findInString(filename, ".jar")) -->Line_10 $$ is = Helper.getZipInput(filename.substring(0, filename.indexOf(".jar") + 4), filename.substring(filename.indexOf(".jar") + 5, filename.length()))[ CD ]
Line_3 $$ int avail = 0-->Line_25 $$ avail = is.available()[ FD ]
Line_25 $$ avail = is.available()-->Line_25 $$ avail = is.available()[ FD ]
Line_25 $$ avail = is.available()-->Line_25 $$ avail = is.available()[ CD ]
Line_28 $$ while (is.read() != -1) avail++-->Line_28 $$ avail++[ CD ]
Line_3 $$ int avail = 0-->Line_28 $$ avail++[ FD ]
Line_25 $$ avail = is.available()-->Line_28 $$ avail++[ FD ]
Line_3 $$ int avail = 0-->Line_35 $$ avail = fileStr.length()[ FD ]
Line_25 $$ avail = is.available()-->Line_35 $$ avail = fileStr.length()[ FD ]
Line_35 $$ avail = fileStr.length()-->Line_35 $$ avail = fileStr.length()[ FD ]
Line_35 $$ avail = fileStr.length()-->Line_35 $$ avail = fileStr.length()[ CD ]
Line_2 $$ private int streamConf() throws IOException -->Line_38 $$ return avail[ CD ]
