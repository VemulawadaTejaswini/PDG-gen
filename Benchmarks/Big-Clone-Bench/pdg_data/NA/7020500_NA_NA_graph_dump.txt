Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) [ CD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_3 $$ FileInputStream fin = null[ CD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_4 $$ InputStream in = null[ CD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_5 $$ ZipInputStream zin = null[ CD ]
Line_4 $$ InputStream in = null-->Line_8 $$ in = url.openStream()[ FD ]
Line_8 $$ in = url.openStream()-->Line_8 $$ in = url.openStream()[ FD ]
Line_8 $$ in = url.openStream()-->Line_8 $$ in = url.openStream()[ CD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_8 $$ in = url.openStream()[ FD ]
Line_9 $$ String fileName = url.getFile()-->Line_9 $$ String fileName = url.getFile()[ CD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_9 $$ String fileName = url.getFile()[ FD ]
Line_10 $$ int index = fileName.lastIndexOf('/')-->Line_10 $$ int index = fileName.lastIndexOf('/')[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_10 $$ int index = fileName.lastIndexOf('/')[ FD ]
Line_10 $$ int index = fileName.lastIndexOf('/')-->Line_11 $$ if (index != -1) [ FD ]
Line_11 $$ if (index != -1) -->Line_12 $$ fileName = fileName.substring(index + 1)[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_12 $$ fileName = fileName.substring(index + 1)[ FD ]
Line_12 $$ fileName = fileName.substring(index + 1)-->Line_12 $$ fileName = fileName.substring(index + 1)[ FD ]
Line_12 $$ fileName = fileName.substring(index + 1)-->Line_12 $$ fileName = fileName.substring(index + 1)[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_12 $$ fileName = fileName.substring(index + 1)[ FD ]
Line_12 $$ fileName = fileName.substring(index + 1)-->Line_12 $$ fileName = fileName.substring(index + 1)[ FD ]
Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)-->Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)[ CD ]
Line_9 $$ String fileName = url.getFile()-->Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)[ FD ]
Line_12 $$ fileName = fileName.substring(index + 1)-->Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)[ FD ]
Line_4 $$ InputStream in = null-->Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)[ FD ]
Line_8 $$ in = url.openStream()-->Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)[ FD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)[ FD ]
Line_3 $$ FileInputStream fin = null-->Line_15 $$ fin = (FileInputStream) org.apache.axis2.java.security.AccessController.doPrivileged(new PrivilegedExceptionAction() [ FD ]
Line_15 $$ fin = (FileInputStream) org.apache.axis2.java.security.AccessController.doPrivileged(new PrivilegedExceptionAction() -->Line_15 $$ fin = (FileInputStream) org.apache.axis2.java.security.AccessController.doPrivileged(new PrivilegedExceptionAction() [ FD ]
Line_15 $$ fin = (FileInputStream) org.apache.axis2.java.security.AccessController.doPrivileged(new PrivilegedExceptionAction() -->Line_17 $$ return new FileInputStream(f)[ CD ]
Line_7 $$ ArrayList array = new ArrayList()-->Line_20 $$ array.add(f.toURL())[ FD ]
Line_14 $$ final File f = createTempFile(fileName, in, tmpDir)-->Line_20 $$ array.add(f.toURL())[ FD ]
Line_5 $$ ZipInputStream zin = null-->Line_24 $$ while ((entry = zin.getNextEntry()) != null) [ FD ]
Line_24 $$ while ((entry = zin.getNextEntry()) != null) -->Line_25 $$ entryName = entry.getName()[ CD ]
Line_24 $$ while ((entry = zin.getNextEntry()) != null) -->Line_26 $$ if ((entryName != null) && entryName.toLowerCase().startsWith("lib/") && entryName.toLowerCase().endsWith(".jar")) [ CD ]
Line_26 $$ if ((entryName != null) && entryName.toLowerCase().startsWith("lib/") && entryName.toLowerCase().endsWith(".jar")) -->Line_27 $$ String suffix = entryName.substring(4)[ CD ]
Line_27 $$ String suffix = entryName.substring(4)-->Line_27 $$ String suffix = entryName.substring(4)[ CD ]
Line_26 $$ if ((entryName != null) && entryName.toLowerCase().startsWith("lib/") && entryName.toLowerCase().endsWith(".jar")) -->Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)[ CD ]
Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)-->Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)[ CD ]
Line_27 $$ String suffix = entryName.substring(4)-->Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)[ FD ]
Line_5 $$ ZipInputStream zin = null-->Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)[ FD ]
Line_2 $$ public static URL[] getURLsForAllJars(URL url, File tmpDir) -->Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)[ FD ]
Line_26 $$ if ((entryName != null) && entryName.toLowerCase().startsWith("lib/") && entryName.toLowerCase().endsWith(".jar")) -->Line_29 $$ array.add(f2.toURL())[ CD ]
Line_7 $$ ArrayList array = new ArrayList()-->Line_29 $$ array.add(f2.toURL())[ FD ]
Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)-->Line_29 $$ array.add(f2.toURL())[ FD ]
Line_7 $$ ArrayList array = new ArrayList()-->Line_32 $$ return (URL[]) array.toArray(new URL[array.size()])[ FD ]
Line_7 $$ ArrayList array = new ArrayList()-->Line_32 $$ return (URL[]) array.toArray(new URL[array.size()])[ FD ]
Line_3 $$ FileInputStream fin = null-->Line_36 $$ if (fin != null) [ FD ]
Line_15 $$ fin = (FileInputStream) org.apache.axis2.java.security.AccessController.doPrivileged(new PrivilegedExceptionAction() -->Line_36 $$ if (fin != null) [ FD ]
Line_3 $$ FileInputStream fin = null-->Line_38 $$ fin.close()[ FD ]
Line_15 $$ fin = (FileInputStream) org.apache.axis2.java.security.AccessController.doPrivileged(new PrivilegedExceptionAction() -->Line_38 $$ fin.close()[ FD ]
Line_4 $$ InputStream in = null-->Line_42 $$ if (in != null) [ FD ]
Line_8 $$ in = url.openStream()-->Line_42 $$ if (in != null) [ FD ]
Line_4 $$ InputStream in = null-->Line_44 $$ in.close()[ FD ]
Line_8 $$ in = url.openStream()-->Line_44 $$ in.close()[ FD ]
Line_5 $$ ZipInputStream zin = null-->Line_48 $$ if (zin != null) [ FD ]
Line_5 $$ ZipInputStream zin = null-->Line_50 $$ zin.close()[ FD ]
Line_27 $$ String suffix = entryName.substring(4)-->Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)[ FD ]
Line_28 $$ File f2 = createTempFile(suffix, zin, tmpDir)-->Line_29 $$ array.add(f2.toURL())[ FD ]
