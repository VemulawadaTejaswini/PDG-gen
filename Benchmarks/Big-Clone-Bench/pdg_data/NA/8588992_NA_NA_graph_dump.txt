Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException [ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_3 $$ String status = null[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_4 $$ HttpSession session = request.getSession()[ CD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_4 $$ HttpSession session = request.getSession()[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_4 $$ HttpSession session = request.getSession()[ FD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_5 $$ ReportingBean reportingBean = null[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_6 $$ NewConceptBean conceptBean = null[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_7 $$ String conceptName = null[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_8 $$ String primitive = null[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")[ CD ]
Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")-->Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_10 $$ LogonUtilities logonUtilities = new LogonUtilities()[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ CD ]
Line_10 $$ LogonUtilities logonUtilities = new LogonUtilities()-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_3 $$ String status = null-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ CD ]
Line_10 $$ LogonUtilities logonUtilities = new LogonUtilities()-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_3 $$ String status = null-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")-->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")[ CD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")[ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")[ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_13 $$ if ((reportingBean.getMessageHtml().indexOf("Classify")) == -1) [ CD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_13 $$ if ((reportingBean.getMessageHtml().indexOf("Classify")) == -1) [ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_13 $$ if ((reportingBean.getMessageHtml().indexOf("Classify")) == -1) [ FD ]
Line_13 $$ if ((reportingBean.getMessageHtml().indexOf("Classify")) == -1) -->Line_14 $$ reportingBean.setReportingHtml("")[ CD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_14 $$ reportingBean.setReportingHtml("")[ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_14 $$ reportingBean.setReportingHtml("")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")[ CD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")[ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_17 $$ conceptName = request.getParameter("conceptName")[ CD ]
Line_7 $$ String conceptName = null-->Line_17 $$ conceptName = request.getParameter("conceptName")[ FD ]
Line_17 $$ conceptName = request.getParameter("conceptName")-->Line_17 $$ conceptName = request.getParameter("conceptName")[ FD ]
Line_17 $$ conceptName = request.getParameter("conceptName")-->Line_17 $$ conceptName = request.getParameter("conceptName")[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_17 $$ conceptName = request.getParameter("conceptName")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_18 $$ primitive = request.getParameter("primitive")[ CD ]
Line_8 $$ String primitive = null-->Line_18 $$ primitive = request.getParameter("primitive")[ FD ]
Line_18 $$ primitive = request.getParameter("primitive")-->Line_18 $$ primitive = request.getParameter("primitive")[ FD ]
Line_18 $$ primitive = request.getParameter("primitive")-->Line_18 $$ primitive = request.getParameter("primitive")[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_18 $$ primitive = request.getParameter("primitive")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_19 $$ if (primitive == null) [ CD ]
Line_8 $$ String primitive = null-->Line_19 $$ if (primitive == null) [ FD ]
Line_18 $$ primitive = request.getParameter("primitive")-->Line_19 $$ if (primitive == null) [ FD ]
Line_19 $$ if (primitive == null) -->Line_20 $$ primitive = "false"[ CD ]
Line_8 $$ String primitive = null-->Line_20 $$ primitive = "false"[ FD ]
Line_18 $$ primitive = request.getParameter("primitive")-->Line_20 $$ primitive = "false"[ FD ]
Line_20 $$ primitive = "false"-->Line_20 $$ primitive = "false"[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_22 $$ conceptBean.setConceptName(conceptName)[ CD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_22 $$ conceptBean.setConceptName(conceptName)[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_22 $$ conceptBean.setConceptName(conceptName)[ FD ]
Line_7 $$ String conceptName = null-->Line_22 $$ conceptBean.setConceptName(conceptName)[ FD ]
Line_17 $$ conceptName = request.getParameter("conceptName")-->Line_22 $$ conceptBean.setConceptName(conceptName)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_23 $$ conceptBean.setPrimitive(primitive)[ CD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_23 $$ conceptBean.setPrimitive(primitive)[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_23 $$ conceptBean.setPrimitive(primitive)[ FD ]
Line_8 $$ String primitive = null-->Line_23 $$ conceptBean.setPrimitive(primitive)[ FD ]
Line_18 $$ primitive = request.getParameter("primitive")-->Line_23 $$ conceptBean.setPrimitive(primitive)[ FD ]
Line_20 $$ primitive = "false"-->Line_23 $$ conceptBean.setPrimitive(primitive)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_24 $$ String namespace = conceptBean.getConceptNamespace()[ CD ]
Line_24 $$ String namespace = conceptBean.getConceptNamespace()-->Line_24 $$ String namespace = conceptBean.getConceptNamespace()[ CD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_24 $$ String namespace = conceptBean.getConceptNamespace()[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_24 $$ String namespace = conceptBean.getConceptNamespace()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_25 $$ if (namespace == null) [ CD ]
Line_24 $$ String namespace = conceptBean.getConceptNamespace()-->Line_25 $$ if (namespace == null) [ FD ]
Line_25 $$ if (namespace == null) -->Line_26 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_3"))[ CD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_26 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_3"))[ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_26 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_3"))[ FD ]
Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")-->Line_26 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_3"))[ FD ]
Line_25 $$ if (namespace == null) -->Line_27 $$ session.setAttribute("reportingBean", reportingBean)[ CD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_27 $$ session.setAttribute("reportingBean", reportingBean)[ FD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_27 $$ session.setAttribute("reportingBean", reportingBean)[ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_27 $$ session.setAttribute("reportingBean", reportingBean)[ FD ]
Line_25 $$ if (namespace == null) -->Line_28 $$ status = "classify_fail"[ CD ]
Line_3 $$ String status = null-->Line_28 $$ status = "classify_fail"[ FD ]
Line_28 $$ status = "classify_fail"-->Line_28 $$ status = "classify_fail"[ FD ]
Line_25 $$ if (namespace == null) -->Line_29 $$ return (mapping.findForward(status))[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_29 $$ return (mapping.findForward(status))[ FD ]
Line_3 $$ String status = null-->Line_29 $$ return (mapping.findForward(status))[ FD ]
Line_28 $$ status = "classify_fail"-->Line_29 $$ return (mapping.findForward(status))[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_31 $$ String[] roleMods = request.getParameterValues("some_or_all")[ CD ]
Line_31 $$ String[] roleMods = request.getParameterValues("some_or_all")-->Line_31 $$ String[] roleMods = request.getParameterValues("some_or_all")[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_31 $$ String[] roleMods = request.getParameterValues("some_or_all")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_32 $$ String[] roleGrps = request.getParameterValues("role_group")[ CD ]
Line_32 $$ String[] roleGrps = request.getParameterValues("role_group")-->Line_32 $$ String[] roleGrps = request.getParameterValues("role_group")[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_32 $$ String[] roleGrps = request.getParameterValues("role_group")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_33 $$ Vector roles = conceptBean.getRoles()[ CD ]
Line_33 $$ Vector roles = conceptBean.getRoles()-->Line_33 $$ Vector roles = conceptBean.getRoles()[ CD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_33 $$ Vector roles = conceptBean.getRoles()[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_33 $$ Vector roles = conceptBean.getRoles()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_34 $$ RoleBean[] roleCons = new RoleBean[roles.size()][ CD ]
Line_33 $$ Vector roles = conceptBean.getRoles()-->Line_34 $$ RoleBean[] roleCons = new RoleBean[roles.size()][ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_35 $$ roles.copyInto(roleCons)[ CD ]
Line_33 $$ Vector roles = conceptBean.getRoles()-->Line_35 $$ roles.copyInto(roleCons)[ FD ]
Line_34 $$ RoleBean[] roleCons = new RoleBean[roles.size()]-->Line_35 $$ roles.copyInto(roleCons)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_36 $$ if (roleMods != null && roleGrps != null && roleCons != null) [ CD ]
Line_36 $$ if (roleMods != null && roleGrps != null && roleCons != null) -->Line_37 $$ if (roleCons.length == roleMods.length && roleCons.length == roleGrps.length) [ CD ]
Line_37 $$ if (roleCons.length == roleMods.length && roleCons.length == roleGrps.length) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ CD ]
Line_37 $$ if (roleCons.length == roleMods.length && roleCons.length == roleGrps.length) -->Line_37 $$ if (roleCons.length == roleMods.length && roleCons.length == roleGrps.length) [ CD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ CD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ CD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ FD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_39 $$ roleCons[i].setSomeOrAll(roleMods[i])[ CD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_40 $$ roleCons[i].setRoleGroup(roleGrps[i])[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_44 $$ session.setAttribute("newConceptEntity", conceptBean)[ CD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_44 $$ session.setAttribute("newConceptEntity", conceptBean)[ FD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_44 $$ session.setAttribute("newConceptEntity", conceptBean)[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_44 $$ session.setAttribute("newConceptEntity", conceptBean)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_45 $$ NewConceptXMLDisplayBean xmlBean = new NewConceptXMLDisplayBean()[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_46 $$ xmlBean.setNewConceptXml(conceptBean)[ CD ]
Line_45 $$ NewConceptXMLDisplayBean xmlBean = new NewConceptXMLDisplayBean()-->Line_46 $$ xmlBean.setNewConceptXml(conceptBean)[ FD ]
Line_6 $$ NewConceptBean conceptBean = null-->Line_46 $$ xmlBean.setNewConceptXml(conceptBean)[ FD ]
Line_16 $$ conceptBean = (NewConceptBean) session.getAttribute("newConceptEntity")-->Line_46 $$ xmlBean.setNewConceptXml(conceptBean)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_47 $$ String data = BrowserUtilities.encodeUrl("conceptXml") + "=" + BrowserUtilities.encodeUrl(xmlBean.getNewConceptXml()) + "&" + BrowserUtilities.encodeUrl("nameSpace") + "=" + BrowserUtilities.encodeUrl(namespace)[ CD ]
Line_45 $$ NewConceptXMLDisplayBean xmlBean = new NewConceptXMLDisplayBean()-->Line_47 $$ String data = BrowserUtilities.encodeUrl("conceptXml") + "=" + BrowserUtilities.encodeUrl(xmlBean.getNewConceptXml()) + "&" + BrowserUtilities.encodeUrl("nameSpace") + "=" + BrowserUtilities.encodeUrl(namespace)[ FD ]
Line_24 $$ String namespace = conceptBean.getConceptNamespace()-->Line_47 $$ String data = BrowserUtilities.encodeUrl("conceptXml") + "=" + BrowserUtilities.encodeUrl(xmlBean.getNewConceptXml()) + "&" + BrowserUtilities.encodeUrl("nameSpace") + "=" + BrowserUtilities.encodeUrl(namespace)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_48 $$ XMLPropertyHandler configPh = new XMLPropertyHandler("dtsbrowserclassify.xml")[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_49 $$ Properties configProps = configPh.getProps()[ CD ]
Line_49 $$ Properties configProps = configPh.getProps()-->Line_49 $$ Properties configProps = configPh.getProps()[ CD ]
Line_48 $$ XMLPropertyHandler configPh = new XMLPropertyHandler("dtsbrowserclassify.xml")-->Line_49 $$ Properties configProps = configPh.getProps()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_50 $$ String urlString = configProps.getProperty("url")[ CD ]
Line_50 $$ String urlString = configProps.getProperty("url")-->Line_50 $$ String urlString = configProps.getProperty("url")[ CD ]
Line_49 $$ Properties configProps = configPh.getProps()-->Line_50 $$ String urlString = configProps.getProperty("url")[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_51 $$ URL url = new URL(urlString)[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_52 $$ URLConnection conn = url.openConnection()[ CD ]
Line_52 $$ URLConnection conn = url.openConnection()-->Line_52 $$ URLConnection conn = url.openConnection()[ CD ]
Line_51 $$ URL url = new URL(urlString)-->Line_52 $$ URLConnection conn = url.openConnection()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_53 $$ conn.setDoOutput(true)[ CD ]
Line_52 $$ URLConnection conn = url.openConnection()-->Line_53 $$ conn.setDoOutput(true)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_54 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ CD ]
Line_52 $$ URLConnection conn = url.openConnection()-->Line_54 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_55 $$ wr.write(data)[ CD ]
Line_54 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_55 $$ wr.write(data)[ FD ]
Line_47 $$ String data = BrowserUtilities.encodeUrl("conceptXml") + "=" + BrowserUtilities.encodeUrl(xmlBean.getNewConceptXml()) + "&" + BrowserUtilities.encodeUrl("nameSpace") + "=" + BrowserUtilities.encodeUrl(namespace)-->Line_55 $$ wr.write(data)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_56 $$ wr.flush()[ CD ]
Line_54 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_56 $$ wr.flush()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_57 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_52 $$ URLConnection conn = url.openConnection()-->Line_57 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_58 $$ String line[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_59 $$ StringBuffer buf = new StringBuffer()[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_60 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) [ CD ]
Line_60 $$ while ((line = rd.readLine()) != null) -->Line_60 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_58 $$ String line-->Line_60 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_60 $$ while ((line = rd.readLine()) != null) -->Line_60 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_57 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_60 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_60 $$ while ((line = rd.readLine()) != null) -->Line_61 $$ buf.append(line)[ CD ]
Line_59 $$ StringBuffer buf = new StringBuffer()-->Line_61 $$ buf.append(line)[ FD ]
Line_60 $$ while ((line = rd.readLine()) != null) -->Line_61 $$ buf.append(line)[ FD ]
Line_58 $$ String line-->Line_61 $$ buf.append(line)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_63 $$ String resultXml = buf.toString()[ CD ]
Line_63 $$ String resultXml = buf.toString()-->Line_63 $$ String resultXml = buf.toString()[ CD ]
Line_59 $$ StringBuffer buf = new StringBuffer()-->Line_63 $$ String resultXml = buf.toString()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_64 $$ wr.close()[ CD ]
Line_54 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_64 $$ wr.close()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_65 $$ rd.close()[ CD ]
Line_57 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_65 $$ rd.close()[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_66 $$ ClassifiedConceptBean ccBean = new ClassifiedConceptBean()[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_67 $$ ClassifyResultParser parser = new ClassifyResultParser(resultXml)[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_68 $$ ResultBuilder rbuilder = new ResultBuilder()[ CD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_69 $$ rbuilder.setConceptBean(ccBean)[ CD ]
Line_68 $$ ResultBuilder rbuilder = new ResultBuilder()-->Line_69 $$ rbuilder.setConceptBean(ccBean)[ FD ]
Line_66 $$ ClassifiedConceptBean ccBean = new ClassifiedConceptBean()-->Line_69 $$ rbuilder.setConceptBean(ccBean)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_70 $$ rbuilder.setParser(parser)[ CD ]
Line_68 $$ ResultBuilder rbuilder = new ResultBuilder()-->Line_70 $$ rbuilder.setParser(parser)[ FD ]
Line_67 $$ ClassifyResultParser parser = new ClassifyResultParser(resultXml)-->Line_70 $$ rbuilder.setParser(parser)[ FD ]
Line_11 $$ if (logonUtilities.checkSession(session, status, reportingBean, errorMessages)) -->Line_71 $$ rbuilder.setNamespace(namespace)[ CD ]
Line_68 $$ ResultBuilder rbuilder = new ResultBuilder()-->Line_71 $$ rbuilder.setNamespace(namespace)[ FD ]
Line_24 $$ String namespace = conceptBean.getConceptNamespace()-->Line_71 $$ rbuilder.setNamespace(namespace)[ FD ]
Line_68 $$ ResultBuilder rbuilder = new ResultBuilder()-->Line_73 $$ rbuilder.buildResult()[ FD ]
Line_66 $$ ClassifiedConceptBean ccBean = new ClassifiedConceptBean()-->Line_74 $$ ccBean = rbuilder.getConceptBean()[ FD ]
Line_74 $$ ccBean = rbuilder.getConceptBean()-->Line_74 $$ ccBean = rbuilder.getConceptBean()[ FD ]
Line_74 $$ ccBean = rbuilder.getConceptBean()-->Line_74 $$ ccBean = rbuilder.getConceptBean()[ CD ]
Line_68 $$ ResultBuilder rbuilder = new ResultBuilder()-->Line_74 $$ ccBean = rbuilder.getConceptBean()[ FD ]
Line_75 $$ ClassifiedConceptDisplayBean displayBean = new ClassifiedConceptDisplayBean()-->Line_76 $$ displayBean.setNewConceptHtml(ccBean)[ FD ]
Line_66 $$ ClassifiedConceptBean ccBean = new ClassifiedConceptBean()-->Line_76 $$ displayBean.setNewConceptHtml(ccBean)[ FD ]
Line_74 $$ ccBean = rbuilder.getConceptBean()-->Line_76 $$ displayBean.setNewConceptHtml(ccBean)[ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_77 $$ session.setAttribute("classifyResult", ccBean)[ FD ]
Line_66 $$ ClassifiedConceptBean ccBean = new ClassifiedConceptBean()-->Line_77 $$ session.setAttribute("classifyResult", ccBean)[ FD ]
Line_74 $$ ccBean = rbuilder.getConceptBean()-->Line_77 $$ session.setAttribute("classifyResult", ccBean)[ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_78 $$ session.setAttribute("classifyDisplayResult", displayBean)[ FD ]
Line_75 $$ ClassifiedConceptDisplayBean displayBean = new ClassifiedConceptDisplayBean()-->Line_78 $$ session.setAttribute("classifyDisplayResult", displayBean)[ FD ]
Line_3 $$ String status = null-->Line_79 $$ status = "success"[ FD ]
Line_28 $$ status = "classify_fail"-->Line_79 $$ status = "success"[ FD ]
Line_79 $$ status = "success"-->Line_79 $$ status = "success"[ FD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_82 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_1") + e.getMessage())[ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_82 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_1") + e.getMessage())[ FD ]
Line_9 $$ MessageResources errorMessages = MessageResources.getMessageResources("com.apelon.apps.dts.treebrowser.resources.error_messages")-->Line_82 $$ reportingBean.setReportingHtml(errorMessages.getMessage("classify_1") + e.getMessage())[ FD ]
Line_4 $$ HttpSession session = request.getSession()-->Line_83 $$ session.setAttribute("reportingBean", reportingBean)[ FD ]
Line_5 $$ ReportingBean reportingBean = null-->Line_83 $$ session.setAttribute("reportingBean", reportingBean)[ FD ]
Line_12 $$ reportingBean = (ReportingBean) session.getAttribute("reportingBean")-->Line_83 $$ session.setAttribute("reportingBean", reportingBean)[ FD ]
Line_3 $$ String status = null-->Line_84 $$ status = "classify_fail"[ FD ]
Line_28 $$ status = "classify_fail"-->Line_84 $$ status = "classify_fail"[ FD ]
Line_79 $$ status = "success"-->Line_84 $$ status = "classify_fail"[ FD ]
Line_84 $$ status = "classify_fail"-->Line_84 $$ status = "classify_fail"[ FD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_87 $$ return (mapping.findForward(status))[ CD ]
Line_2 $$ public ActionForward perform(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_87 $$ return (mapping.findForward(status))[ FD ]
Line_3 $$ String status = null-->Line_87 $$ return (mapping.findForward(status))[ FD ]
Line_28 $$ status = "classify_fail"-->Line_87 $$ return (mapping.findForward(status))[ FD ]
Line_79 $$ status = "success"-->Line_87 $$ return (mapping.findForward(status))[ FD ]
Line_84 $$ status = "classify_fail"-->Line_87 $$ return (mapping.findForward(status))[ FD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ FD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ FD ]
Line_38 $$ for (int i = 0; i < roleCons.length; i++) -->Line_38 $$ for (int i = 0; i < roleCons.length; i++) [ FD ]
Line_60 $$ while ((line = rd.readLine()) != null) -->Line_61 $$ buf.append(line)[ FD ]
