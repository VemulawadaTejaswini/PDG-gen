Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void CreateBackupOfDataFile(String _src, String _dest) [ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_6 $$ if (new File(_src).exists()) [ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_7 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(dest))[ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_8 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(src))[ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_9 $$ byte[] read = new byte[128][ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_10 $$ int len = 128[ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)[ CD ]
Line_6 $$ if (new File(_src).exists()) -->Line_6 $$ if (new File(_src).exists()) [ CD ]
Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)-->Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)[ FD ]
Line_10 $$ int len = 128-->Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)[ FD ]
Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)-->Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)[ CD ]
Line_8 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(src))-->Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)[ FD ]
Line_9 $$ byte[] read = new byte[128]-->Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)[ FD ]
Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)-->Line_11 $$ out.write(read, 0, len)[ CD ]
Line_7 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(dest))-->Line_11 $$ out.write(read, 0, len)[ FD ]
Line_9 $$ byte[] read = new byte[128]-->Line_11 $$ out.write(read, 0, len)[ FD ]
Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)-->Line_11 $$ out.write(read, 0, len)[ FD ]
Line_10 $$ int len = 128-->Line_11 $$ out.write(read, 0, len)[ FD ]
Line_6 $$ if (new File(_src).exists()) -->Line_12 $$ out.flush()[ CD ]
Line_7 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(dest))-->Line_12 $$ out.flush()[ FD ]
Line_6 $$ if (new File(_src).exists()) -->Line_13 $$ out.close()[ CD ]
Line_7 $$ BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(dest))-->Line_13 $$ out.close()[ FD ]
Line_6 $$ if (new File(_src).exists()) -->Line_14 $$ in.close()[ CD ]
Line_8 $$ BufferedInputStream in = new BufferedInputStream(new FileInputStream(src))-->Line_14 $$ in.close()[ FD ]
Line_11 $$ while ((len = in.read(read)) > 0) out.write(read, 0, len)-->Line_11 $$ out.write(read, 0, len)[ FD ]
