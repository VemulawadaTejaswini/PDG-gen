Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception [ CD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_3 $$ System.out.println("Initiated reading source queue URL: " + url)[ CD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_4 $$ InputStream instream = new URL(url).openStream()[ CD ]
Line_4 $$ InputStream instream = new URL(url).openStream()-->Line_4 $$ InputStream instream = new URL(url).openStream()[ CD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_5 $$ Serializer serializer = new Serializer()[ CD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_6 $$ Response response = (Response) serializer.parse(instream)[ CD ]
Line_5 $$ Serializer serializer = new Serializer()-->Line_6 $$ Response response = (Response) serializer.parse(instream)[ FD ]
Line_4 $$ InputStream instream = new URL(url).openStream()-->Line_6 $$ Response response = (Response) serializer.parse(instream)[ FD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_7 $$ Queue queue = response.getQueue()[ CD ]
Line_7 $$ Queue queue = response.getQueue()-->Line_7 $$ Queue queue = response.getQueue()[ CD ]
Line_6 $$ Response response = (Response) serializer.parse(instream)-->Line_7 $$ Queue queue = response.getQueue()[ FD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_8 $$ instream.close()[ CD ]
Line_4 $$ InputStream instream = new URL(url).openStream()-->Line_8 $$ instream.close()[ FD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_9 $$ System.out.println("Completed reading source queue URL (jobs=" + queue.size() + ")")[ CD ]
Line_7 $$ Queue queue = response.getQueue()-->Line_9 $$ System.out.println("Completed reading source queue URL (jobs=" + queue.size() + ")")[ FD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_10 $$ System.out.println("Initiated writing target queue File: " + fileName)[ CD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_11 $$ OutputStream outstream = new FileOutputStream(fileName)[ CD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_12 $$ serializer.write(response, outstream)[ CD ]
Line_5 $$ Serializer serializer = new Serializer()-->Line_12 $$ serializer.write(response, outstream)[ FD ]
Line_6 $$ Response response = (Response) serializer.parse(instream)-->Line_12 $$ serializer.write(response, outstream)[ FD ]
Line_11 $$ OutputStream outstream = new FileOutputStream(fileName)-->Line_12 $$ serializer.write(response, outstream)[ FD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_13 $$ outstream.close()[ CD ]
Line_11 $$ OutputStream outstream = new FileOutputStream(fileName)-->Line_13 $$ outstream.close()[ FD ]
Line_2 $$ public static void readUrlWriteFileTest(String url, String fileName) throws Exception -->Line_14 $$ System.out.println("Completed writing target queue file.")[ CD ]
