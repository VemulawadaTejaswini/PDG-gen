Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public List<AnalyzerResult> analyze(String urlString, boolean tryFallback) [ CD ]
Line_2 $$ public List<AnalyzerResult> analyze(String urlString, boolean tryFallback) -->Line_3 $$ List<AnalyzerResult> results = new ArrayList<AnalyzerResult>()[ CD ]
Line_6 $$ if (flow == null) -->Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)[ CD ]
Line_5 $$ URL url-->Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)[ FD ]
Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)-->Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)[ FD ]
Line_6 $$ if (flow == null) -->Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)[ CD ]
Line_5 $$ URL url-->Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)[ FD ]
Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)-->Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)[ FD ]
Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)-->Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)[ FD ]
Line_5 $$ URL url-->Line_12 $$ System.out.println("Executing: " + url.toString())[ FD ]
Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)-->Line_12 $$ System.out.println("Executing: " + url.toString())[ FD ]
Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)-->Line_12 $$ System.out.println("Executing: " + url.toString())[ FD ]
Line_5 $$ URL url-->Line_13 $$ XMLDecoder decoder = new XMLDecoder(url.openStream())[ FD ]
Line_7 $$ url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + urlString)-->Line_13 $$ XMLDecoder decoder = new XMLDecoder(url.openStream())[ FD ]
Line_9 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + urlString)-->Line_13 $$ XMLDecoder decoder = new XMLDecoder(url.openStream())[ FD ]
Line_13 $$ XMLDecoder decoder = new XMLDecoder(url.openStream())-->Line_14 $$ Map map = (Map) decoder.readObject()[ FD ]
Line_14 $$ Map map = (Map) decoder.readObject()-->Line_15 $$ for (Object key : map.keySet()) [ FD ]
Line_3 $$ List<AnalyzerResult> results = new ArrayList<AnalyzerResult>()-->Line_16 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString()))[ FD ]
Line_15 $$ for (Object key : map.keySet()) -->Line_16 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString()))[ FD ]
Line_14 $$ Map map = (Map) decoder.readObject()-->Line_16 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString()))[ FD ]
Line_15 $$ for (Object key : map.keySet()) -->Line_16 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString()))[ FD ]
Line_2 $$ public List<AnalyzerResult> analyze(String urlString, boolean tryFallback) -->Line_22 $$ return results[ CD ]
