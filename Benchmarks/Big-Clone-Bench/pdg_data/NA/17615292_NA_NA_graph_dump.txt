Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException [ CD ]
Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException -->Line_3 $$ File in[ CD ]
Line_3 $$ File in-->Line_5 $$ in = File.createTempFile("tmp", ".jp2")[ FD ]
Line_5 $$ in = File.createTempFile("tmp", ".jp2")-->Line_5 $$ in = File.createTempFile("tmp", ".jp2")[ FD ]
Line_5 $$ in = File.createTempFile("tmp", ".jp2")-->Line_5 $$ in = File.createTempFile("tmp", ".jp2")[ CD ]
Line_3 $$ File in-->Line_7 $$ in.deleteOnExit()[ FD ]
Line_5 $$ in = File.createTempFile("tmp", ".jp2")-->Line_7 $$ in.deleteOnExit()[ FD ]
Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException -->Line_8 $$ IOUtils.copyStream(input, fos)[ FD ]
Line_6 $$ FileOutputStream fos = new FileOutputStream(in)-->Line_8 $$ IOUtils.copyStream(input, fos)[ FD ]
Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException -->Line_13 $$ BufferedImage bi = process(in.getAbsolutePath(), params)[ CD ]
Line_13 $$ BufferedImage bi = process(in.getAbsolutePath(), params)-->Line_13 $$ BufferedImage bi = process(in.getAbsolutePath(), params)[ CD ]
Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException -->Line_13 $$ BufferedImage bi = process(in.getAbsolutePath(), params)[ FD ]
Line_3 $$ File in-->Line_13 $$ BufferedImage bi = process(in.getAbsolutePath(), params)[ FD ]
Line_5 $$ in = File.createTempFile("tmp", ".jp2")-->Line_13 $$ BufferedImage bi = process(in.getAbsolutePath(), params)[ FD ]
Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException -->Line_14 $$ if (in != null)[ CD ]
Line_3 $$ File in-->Line_14 $$ if (in != null)[ FD ]
Line_5 $$ in = File.createTempFile("tmp", ".jp2")-->Line_14 $$ if (in != null)[ FD ]
Line_14 $$ if (in != null)-->Line_14 $$ in.delete()[ CD ]
Line_3 $$ File in-->Line_14 $$ in.delete()[ FD ]
Line_5 $$ in = File.createTempFile("tmp", ".jp2")-->Line_14 $$ in.delete()[ FD ]
Line_2 $$ public BufferedImage processUsingTemp(InputStream input, DjatokaDecodeParam params) throws DjatokaException -->Line_15 $$ return bi[ CD ]
