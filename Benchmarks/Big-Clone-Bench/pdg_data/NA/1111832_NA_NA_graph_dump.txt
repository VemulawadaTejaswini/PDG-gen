Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException [ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_3 $$ SQLDialect dialect = getDatabase().getSQLDialect()[ CD ]
Line_3 $$ SQLDialect dialect = getDatabase().getSQLDialect()-->Line_3 $$ SQLDialect dialect = getDatabase().getSQLDialect()[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_4 $$ if (TRANSACTIONS_ENABLED) [ CD ]
Line_4 $$ if (TRANSACTIONS_ENABLED) -->Line_5 $$ conn.setAutoCommit(false)[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_5 $$ conn.setAutoCommit(false)[ FD ]
Line_8 $$ Object thisKey = c.getPrimaryKey()-->Line_8 $$ Object thisKey = c.getPrimaryKey()[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_8 $$ Object thisKey = c.getPrimaryKey()[ FD ]
Line_8 $$ Object thisKey = c.getPrimaryKey()-->Line_9 $$ deleteFieldContent(thisKey, conn)[ FD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_9 $$ deleteFieldContent(thisKey, conn)[ FD ]
Line_12 $$ Map fieldMap = c.getFieldMap()-->Line_12 $$ Map fieldMap = c.getFieldMap()[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_12 $$ Map fieldMap = c.getFieldMap()[ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) [ CD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) [ CD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) [ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) [ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_16 $$ nextItem = (StructureItem) i.next()[ CD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_16 $$ nextItem = (StructureItem) i.next()[ FD ]
Line_11 $$ StructureItem nextItem-->Line_16 $$ nextItem = (StructureItem) i.next()[ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_16 $$ nextItem = (StructureItem) i.next()[ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ FD ]
Line_13 $$ String type-->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ CD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ FD ]
Line_11 $$ StructureItem nextItem-->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_18 $$ siKey = nextItem.getPrimaryKey()[ CD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_18 $$ siKey = nextItem.getPrimaryKey()[ FD ]
Line_14 $$ Object value, siKey-->Line_18 $$ siKey = nextItem.getPrimaryKey()[ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_18 $$ siKey = nextItem.getPrimaryKey()[ CD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_18 $$ siKey = nextItem.getPrimaryKey()[ FD ]
Line_11 $$ StructureItem nextItem-->Line_18 $$ siKey = nextItem.getPrimaryKey()[ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_19 $$ value = fieldMap.get(nextItem.getName())[ CD ]
Line_19 $$ value = fieldMap.get(nextItem.getName())-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ FD ]
Line_14 $$ Object value, siKey-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ FD ]
Line_19 $$ value = fieldMap.get(nextItem.getName())-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ CD ]
Line_12 $$ Map fieldMap = c.getFieldMap()-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ FD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ FD ]
Line_11 $$ StructureItem nextItem-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_21 $$ if (type.equals(StructureItem.DATE)) [ FD ]
Line_13 $$ String type-->Line_21 $$ if (type.equals(StructureItem.DATE)) [ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_21 $$ if (type.equals(StructureItem.DATE)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_21 $$ if (type.equals(StructureItem.DATE)) [ FD ]
Line_13 $$ String type-->Line_21 $$ if (type.equals(StructureItem.DATE)) [ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))[ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_23 $$ ps.setObject(1, thisKey)[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_23 $$ ps.setObject(1, thisKey)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_23 $$ ps.setObject(1, thisKey)[ FD ]
Line_8 $$ Object thisKey = c.getPrimaryKey()-->Line_23 $$ ps.setObject(1, thisKey)[ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_24 $$ ps.setObject(2, siKey)[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_14 $$ Object value, siKey-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ CD ]
Line_3 $$ SQLDialect dialect = getDatabase().getSQLDialect()-->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_26 $$ ps.executeUpdate()[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_26 $$ ps.executeUpdate()[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_26 $$ ps.executeUpdate()[ FD ]
Line_21 $$ if (type.equals(StructureItem.DATE)) -->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_13 $$ String type-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_13 $$ String type-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_13 $$ String type-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) -->Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))[ FD ]
Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) -->Line_29 $$ ps.setObject(1, thisKey)[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_8 $$ Object thisKey = c.getPrimaryKey()-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) -->Line_30 $$ ps.setObject(2, siKey)[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_14 $$ Object value, siKey-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) -->Line_31 $$ if (value != null) [ CD ]
Line_19 $$ value = fieldMap.get(nextItem.getName())-->Line_31 $$ if (value != null) [ FD ]
Line_14 $$ Object value, siKey-->Line_31 $$ if (value != null) [ FD ]
Line_31 $$ if (value != null) -->Line_32 $$ ps.setObject(3, value)[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_19 $$ value = fieldMap.get(nextItem.getName())-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_14 $$ Object value, siKey-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_31 $$ if (value != null) -->Line_34 $$ int sqlType = Types.INTEGER[ CD ]
Line_31 $$ if (value != null) -->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ FD ]
Line_13 $$ String type-->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ FD ]
Line_35 $$ if (type.equals(StructureItem.FLOAT)) -->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ FD ]
Line_13 $$ String type-->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ FD ]
Line_35 $$ if (type.equals(StructureItem.FLOAT)) -->Line_36 $$ sqlType = Types.FLOAT[ CD ]
Line_34 $$ int sqlType = Types.INTEGER-->Line_36 $$ sqlType = Types.FLOAT[ FD ]
Line_36 $$ sqlType = Types.FLOAT-->Line_36 $$ sqlType = Types.FLOAT[ FD ]
Line_35 $$ if (type.equals(StructureItem.FLOAT)) -->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ FD ]
Line_13 $$ String type-->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ FD ]
Line_37 $$ if (type.equals(StructureItem.VARCHAR)) -->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ FD ]
Line_13 $$ String type-->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ FD ]
Line_37 $$ if (type.equals(StructureItem.VARCHAR)) -->Line_38 $$ sqlType = Types.VARCHAR[ CD ]
Line_34 $$ int sqlType = Types.INTEGER-->Line_38 $$ sqlType = Types.VARCHAR[ FD ]
Line_36 $$ sqlType = Types.FLOAT-->Line_38 $$ sqlType = Types.VARCHAR[ FD ]
Line_38 $$ sqlType = Types.VARCHAR-->Line_38 $$ sqlType = Types.VARCHAR[ FD ]
Line_31 $$ if (value != null) -->Line_40 $$ ps.setNull(3, sqlType)[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_34 $$ int sqlType = Types.INTEGER-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_36 $$ sqlType = Types.FLOAT-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_38 $$ sqlType = Types.VARCHAR-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) -->Line_42 $$ ps.executeUpdate()[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) -->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ FD ]
Line_13 $$ String type-->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ FD ]
Line_43 $$ if (type.equals(StructureItem.TEXT)) -->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ CD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ FD ]
Line_13 $$ String type-->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ FD ]
Line_43 $$ if (type.equals(StructureItem.TEXT)) -->Line_44 $$ setTextField(c, siKey, (String) value, conn)[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_44 $$ setTextField(c, siKey, (String) value, conn)[ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_44 $$ setTextField(c, siKey, (String) value, conn)[ FD ]
Line_14 $$ Object value, siKey-->Line_44 $$ setTextField(c, siKey, (String) value, conn)[ FD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_44 $$ setTextField(c, siKey, (String) value, conn)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_46 $$ if (ps != null) [ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_46 $$ if (ps != null) [ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_46 $$ if (ps != null) [ FD ]
Line_46 $$ if (ps != null) -->Line_47 $$ ps.close()[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_47 $$ ps.close()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_47 $$ ps.close()[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_47 $$ ps.close()[ FD ]
Line_46 $$ if (ps != null) -->Line_48 $$ ps = null[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_48 $$ ps = null[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_48 $$ ps = null[ FD ]
Line_48 $$ ps = null-->Line_48 $$ ps = null[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_48 $$ ps = null[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_51 $$ if (ps != null)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_51 $$ if (ps != null)[ FD ]
Line_48 $$ ps = null-->Line_51 $$ if (ps != null)[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_51 $$ if (ps != null)[ FD ]
Line_51 $$ if (ps != null)-->Line_51 $$ ps.close()[ CD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_51 $$ ps.close()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_51 $$ ps.close()[ FD ]
Line_48 $$ ps = null-->Line_51 $$ ps.close()[ FD ]
Line_10 $$ PreparedStatement ps = null-->Line_51 $$ ps.close()[ FD ]
Line_54 $$ if (TRANSACTIONS_ENABLED) -->Line_55 $$ conn.commit()[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_55 $$ conn.commit()[ FD ]
Line_58 $$ if (TRANSACTIONS_ENABLED) -->Line_59 $$ conn.rollback()[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_59 $$ conn.rollback()[ FD ]
Line_63 $$ if (TRANSACTIONS_ENABLED) -->Line_64 $$ conn.setAutoCommit(true)[ CD ]
Line_2 $$ private void storeFieldMap(WorkingContent c, Connection conn) throws SQLException -->Line_64 $$ conn.setAutoCommit(true)[ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) [ FD ]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) -->Line_16 $$ nextItem = (StructureItem) i.next()[ FD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_17 $$ type = nextItem.getDataType().toUpperCase()[ FD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_18 $$ siKey = nextItem.getPrimaryKey()[ FD ]
Line_16 $$ nextItem = (StructureItem) i.next()-->Line_19 $$ value = fieldMap.get(nextItem.getName())[ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_21 $$ if (type.equals(StructureItem.DATE)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_21 $$ if (type.equals(StructureItem.DATE)) [ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_23 $$ ps.setObject(1, thisKey)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_23 $$ ps.setObject(1, thisKey)[ FD ]
Line_48 $$ ps = null-->Line_23 $$ ps.setObject(1, thisKey)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_48 $$ ps = null-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_24 $$ ps.setObject(2, siKey)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ FD ]
Line_48 $$ ps = null-->Line_25 $$ dialect.setDate(ps, 3, (Date) value)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_26 $$ ps.executeUpdate()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_26 $$ ps.executeUpdate()[ FD ]
Line_48 $$ ps = null-->Line_26 $$ ps.executeUpdate()[ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_27 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_48 $$ ps = null-->Line_29 $$ ps.setObject(1, thisKey)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_48 $$ ps = null-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_30 $$ ps.setObject(2, siKey)[ FD ]
Line_19 $$ value = fieldMap.get(nextItem.getName())-->Line_31 $$ if (value != null) [ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_48 $$ ps = null-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_19 $$ value = fieldMap.get(nextItem.getName())-->Line_32 $$ ps.setObject(3, value)[ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_35 $$ if (type.equals(StructureItem.FLOAT)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_37 $$ if (type.equals(StructureItem.VARCHAR)) [ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_48 $$ ps = null-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_34 $$ int sqlType = Types.INTEGER-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_36 $$ sqlType = Types.FLOAT-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_38 $$ sqlType = Types.VARCHAR-->Line_40 $$ ps.setNull(3, sqlType)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_48 $$ ps = null-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ FD ]
Line_17 $$ type = nextItem.getDataType().toUpperCase()-->Line_43 $$ if (type.equals(StructureItem.TEXT)) [ FD ]
Line_18 $$ siKey = nextItem.getPrimaryKey()-->Line_44 $$ setTextField(c, siKey, (String) value, conn)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_46 $$ if (ps != null) [ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_46 $$ if (ps != null) [ FD ]
Line_48 $$ ps = null-->Line_46 $$ if (ps != null) [ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_47 $$ ps.close()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_47 $$ ps.close()[ FD ]
Line_48 $$ ps = null-->Line_47 $$ ps.close()[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_51 $$ if (ps != null)[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_51 $$ if (ps != null)[ FD ]
Line_48 $$ ps = null-->Line_51 $$ if (ps != null)[ FD ]
Line_22 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD"))-->Line_51 $$ ps.close()[ FD ]
Line_28 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD"))-->Line_51 $$ ps.close()[ FD ]
Line_48 $$ ps = null-->Line_51 $$ ps.close()[ FD ]
