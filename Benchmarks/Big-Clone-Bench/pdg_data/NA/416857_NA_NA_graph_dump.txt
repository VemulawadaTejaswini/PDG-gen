Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void process(String dir) [ CD ]
Line_2 $$ public void process(String dir) -->Line_3 $$ String[] list = new File(dir).list()[ CD ]
Line_3 $$ String[] list = new File(dir).list()-->Line_3 $$ String[] list = new File(dir).list()[ CD ]
Line_2 $$ public void process(String dir) -->Line_4 $$ if (list == null)[ CD ]
Line_3 $$ String[] list = new File(dir).list()-->Line_4 $$ if (list == null)[ FD ]
Line_4 $$ if (list == null)-->Line_4 $$ return[ CD ]
Line_2 $$ public void process(String dir) -->Line_5 $$ int n = list.length[ CD ]
Line_2 $$ public void process(String dir) -->Line_6 $$ long[] bubblesort = new long[list.length + 1][ CD ]
Line_2 $$ public void process(String dir) -->Line_7 $$ if (!statustext) [ CD ]
Line_7 $$ if (!statustext) -->Line_8 $$ IJ.log("Current Directory is: " + dir)[ CD ]
Line_7 $$ if (!statustext) -->Line_9 $$ IJ.log(" ")[ CD ]
Line_7 $$ if (!statustext) -->Line_10 $$ IJ.log("DICOM File Name / " + prefix1 + " / " + prefix2 + " / " + prefix3 + " / " + pick)[ CD ]
Line_7 $$ if (!statustext) -->Line_11 $$ IJ.log(" ")[ CD ]
Line_2 $$ public void process(String dir) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public void process(String dir) -->Line_2 $$ public void process(String dir) [ CD ]
Line_5 $$ int n = list.length-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ IJ.showStatus(i + "/" + n)[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_15 $$ File f = new File(dir + list[i])[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_16 $$ if (!f.isDirectory()) [ CD ]
Line_16 $$ if (!f.isDirectory()) -->Line_16 $$ if (!f.isDirectory()) [ CD ]
Line_16 $$ if (!f.isDirectory()) -->Line_16 $$ if (!f.isDirectory()) [ CD ]
Line_15 $$ File f = new File(dir + list[i])-->Line_16 $$ if (!f.isDirectory()) [ FD ]
Line_16 $$ if (!f.isDirectory()) -->Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])[ CD ]
Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])-->Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])[ CD ]
Line_2 $$ public void process(String dir) -->Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])[ FD ]
Line_16 $$ if (!f.isDirectory()) -->Line_18 $$ if (img != null && img.getStackSize() == 1) [ CD ]
Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])-->Line_18 $$ if (img != null && img.getStackSize() == 1) [ FD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_19 $$ if (!scoutengine(img))[ CD ]
Line_19 $$ if (!scoutengine(img))-->Line_19 $$ if (!scoutengine(img))[ CD ]
Line_19 $$ if (!scoutengine(img))-->Line_19 $$ if (!scoutengine(img))[ CD ]
Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])-->Line_19 $$ if (!scoutengine(img))[ FD ]
Line_19 $$ if (!scoutengine(img))-->Line_19 $$ return[ CD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_20 $$ if (!statustext) [ CD ]
Line_20 $$ if (!statustext) -->Line_21 $$ IJ.log(list[i] + "/" + whichprefix1 + "/" + whichprefix2 + "/" + whichprefix3 + "/" + whichcase)[ CD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_23 $$ int lastDigit = whichcase.length() - 1[ CD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_24 $$ while (lastDigit > 0) [ CD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_18 $$ if (img != null && img.getStackSize() == 1) [ CD ]
Line_23 $$ int lastDigit = whichcase.length() - 1-->Line_24 $$ while (lastDigit > 0) [ FD ]
Line_24 $$ while (lastDigit > 0) -->Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))[ CD ]
Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))-->Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))[ CD ]
Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))-->Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))[ CD ]
Line_23 $$ int lastDigit = whichcase.length() - 1-->Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))[ FD ]
Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))-->Line_25 $$ lastDigit -= 1[ CD ]
Line_25 $$ lastDigit -= 1-->Line_25 $$ lastDigit -= 1[ FD ]
Line_23 $$ int lastDigit = whichcase.length() - 1-->Line_25 $$ lastDigit -= 1[ FD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_27 $$ if (lastDigit < whichcase.length() - 1)[ CD ]
Line_25 $$ lastDigit -= 1-->Line_27 $$ if (lastDigit < whichcase.length() - 1)[ FD ]
Line_23 $$ int lastDigit = whichcase.length() - 1-->Line_27 $$ if (lastDigit < whichcase.length() - 1)[ FD ]
Line_27 $$ if (lastDigit < whichcase.length() - 1)-->Line_27 $$ whichcase = whichcase.substring(0, lastDigit + 1)[ CD ]
Line_18 $$ if (img != null && img.getStackSize() == 1) -->Line_28 $$ bubblesort[i] = Long.parseLong(whichcase)[ CD ]
Line_28 $$ bubblesort[i] = Long.parseLong(whichcase)-->Line_28 $$ bubblesort[i] = Long.parseLong(whichcase)[ CD ]
Line_2 $$ public void process(String dir) -->Line_32 $$ if (statussorta || statussortd || statustext) [ CD ]
Line_32 $$ if (statussorta || statussortd || statustext) -->Line_33 $$ boolean sorted = false[ CD ]
Line_32 $$ if (statussorta || statussortd || statustext) -->Line_34 $$ while (!sorted) [ CD ]
Line_32 $$ if (statussorta || statussortd || statustext) -->Line_32 $$ if (statussorta || statussortd || statustext) [ CD ]
Line_34 $$ while (!sorted) -->Line_34 $$ while (!sorted) [ CD ]
Line_33 $$ boolean sorted = false-->Line_34 $$ while (!sorted) [ FD ]
Line_34 $$ while (!sorted) -->Line_35 $$ sorted = true[ CD ]
Line_35 $$ sorted = true-->Line_35 $$ sorted = true[ FD ]
Line_33 $$ boolean sorted = false-->Line_35 $$ sorted = true[ FD ]
Line_34 $$ while (!sorted) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_34 $$ while (!sorted) -->Line_34 $$ while (!sorted) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_37 $$ if (statussorta) [ CD ]
Line_37 $$ if (statussorta) -->Line_38 $$ if (bubblesort[i] > bubblesort[i + 1]) [ CD ]
Line_38 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_39 $$ long temp = bubblesort[i][ CD ]
Line_38 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_41 $$ bubblesort[i] = bubblesort[i + 1][ CD ]
Line_38 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_42 $$ list[i] = list[i + 1][ CD ]
Line_38 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_43 $$ bubblesort[i + 1] = temp[ CD ]
Line_39 $$ long temp = bubblesort[i]-->Line_43 $$ bubblesort[i + 1] = temp[ FD ]
Line_38 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_45 $$ sorted = false[ CD ]
Line_45 $$ sorted = false-->Line_45 $$ sorted = false[ FD ]
Line_35 $$ sorted = true-->Line_45 $$ sorted = false[ FD ]
Line_33 $$ boolean sorted = false-->Line_45 $$ sorted = false[ FD ]
Line_37 $$ if (statussorta) -->Line_48 $$ if (bubblesort[i] < bubblesort[i + 1]) [ CD ]
Line_48 $$ if (bubblesort[i] < bubblesort[i + 1]) -->Line_51 $$ bubblesort[i] = bubblesort[i + 1][ CD ]
Line_48 $$ if (bubblesort[i] < bubblesort[i + 1]) -->Line_52 $$ list[i] = list[i + 1][ CD ]
Line_48 $$ if (bubblesort[i] < bubblesort[i + 1]) -->Line_53 $$ bubblesort[i + 1] = temp[ CD ]
Line_39 $$ long temp = bubblesort[i]-->Line_53 $$ bubblesort[i + 1] = temp[ FD ]
Line_48 $$ if (bubblesort[i] < bubblesort[i + 1]) -->Line_55 $$ sorted = false[ CD ]
Line_45 $$ sorted = false-->Line_55 $$ sorted = false[ FD ]
Line_55 $$ sorted = false-->Line_55 $$ sorted = false[ FD ]
Line_35 $$ sorted = true-->Line_55 $$ sorted = false[ FD ]
Line_33 $$ boolean sorted = false-->Line_55 $$ sorted = false[ FD ]
Line_32 $$ if (statussorta || statussortd || statustext) -->Line_60 $$ IJ.log(" ")[ CD ]
Line_32 $$ if (statussorta || statussortd || statustext) -->Line_61 $$ for (int i = 0; i < n; i++) [ CD ]
Line_32 $$ if (statussorta || statussortd || statustext) -->Line_32 $$ if (statussorta || statussortd || statustext) [ CD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ int n = list.length-->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ CD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ CD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_62 $$ if (!statustext) [ CD ]
Line_62 $$ if (!statustext) -->Line_63 $$ IJ.log(list[i] + " / " + bubblesort[i])[ CD ]
Line_62 $$ if (!statustext) -->Line_65 $$ IJ.log(dir + list[i])[ CD ]
Line_2 $$ public void process(String dir) -->Line_69 $$ if (open_as_stack || only_images) [ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_71 $$ while (!sorted) [ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_69 $$ if (open_as_stack || only_images) [ CD ]
Line_71 $$ while (!sorted) -->Line_71 $$ while (!sorted) [ CD ]
Line_45 $$ sorted = false-->Line_71 $$ while (!sorted) [ FD ]
Line_55 $$ sorted = false-->Line_71 $$ while (!sorted) [ FD ]
Line_35 $$ sorted = true-->Line_71 $$ while (!sorted) [ FD ]
Line_33 $$ boolean sorted = false-->Line_71 $$ while (!sorted) [ FD ]
Line_71 $$ while (!sorted) -->Line_72 $$ sorted = true[ CD ]
Line_72 $$ sorted = true-->Line_72 $$ sorted = true[ FD ]
Line_45 $$ sorted = false-->Line_72 $$ sorted = true[ FD ]
Line_55 $$ sorted = false-->Line_72 $$ sorted = true[ FD ]
Line_35 $$ sorted = true-->Line_72 $$ sorted = true[ FD ]
Line_33 $$ boolean sorted = false-->Line_72 $$ sorted = true[ FD ]
Line_71 $$ while (!sorted) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_71 $$ while (!sorted) -->Line_71 $$ while (!sorted) [ CD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_74 $$ if (bubblesort[i] > bubblesort[i + 1]) [ CD ]
Line_74 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_75 $$ long temp = bubblesort[i][ CD ]
Line_74 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_77 $$ bubblesort[i] = bubblesort[i + 1][ CD ]
Line_74 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_78 $$ list[i] = list[i + 1][ CD ]
Line_74 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_79 $$ bubblesort[i + 1] = temp[ CD ]
Line_75 $$ long temp = bubblesort[i]-->Line_79 $$ bubblesort[i + 1] = temp[ FD ]
Line_39 $$ long temp = bubblesort[i]-->Line_79 $$ bubblesort[i + 1] = temp[ FD ]
Line_74 $$ if (bubblesort[i] > bubblesort[i + 1]) -->Line_81 $$ sorted = false[ CD ]
Line_81 $$ sorted = false-->Line_81 $$ sorted = false[ FD ]
Line_72 $$ sorted = true-->Line_81 $$ sorted = false[ FD ]
Line_45 $$ sorted = false-->Line_81 $$ sorted = false[ FD ]
Line_55 $$ sorted = false-->Line_81 $$ sorted = false[ FD ]
Line_35 $$ sorted = true-->Line_81 $$ sorted = false[ FD ]
Line_33 $$ boolean sorted = false-->Line_81 $$ sorted = false[ FD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_85 $$ if (only_images) [ CD ]
Line_85 $$ if (only_images) -->Line_86 $$ Opener o = new Opener()[ CD ]
Line_85 $$ if (only_images) -->Line_87 $$ int counter = 0[ CD ]
Line_85 $$ if (only_images) -->Line_88 $$ IJ.log(" ")[ CD ]
Line_85 $$ if (only_images) -->Line_89 $$ for (int i = 0; i < n; i++) [ CD ]
Line_85 $$ if (only_images) -->Line_85 $$ if (only_images) [ CD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ int n = list.length-->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ CD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ CD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_90 $$ String path = (dir + list[i])[ CD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_91 $$ if (path == null)[ CD ]
Line_90 $$ String path = (dir + list[i])-->Line_91 $$ if (path == null)[ FD ]
Line_91 $$ if (path == null)-->Line_92 $$ ImagePlus imp = o.openImage(path)[ CD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_92 $$ ImagePlus imp = o.openImage(path)[ CD ]
Line_86 $$ Opener o = new Opener()-->Line_92 $$ ImagePlus imp = o.openImage(path)[ FD ]
Line_90 $$ String path = (dir + list[i])-->Line_92 $$ ImagePlus imp = o.openImage(path)[ FD ]
Line_91 $$ if (path == null)-->Line_93 $$ counter++[ CD ]
Line_87 $$ int counter = 0-->Line_93 $$ counter++[ FD ]
Line_91 $$ if (path == null)-->Line_94 $$ if (imp != null) [ CD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_94 $$ if (imp != null) [ FD ]
Line_94 $$ if (imp != null) -->Line_95 $$ IJ.log(counter + " + " + path)[ CD ]
Line_94 $$ if (imp != null) -->Line_96 $$ imp.show()[ CD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_96 $$ imp.show()[ FD ]
Line_94 $$ if (imp != null) -->Line_97 $$ IJ.log(counter + " - " + path)[ CD ]
Line_85 $$ if (only_images) -->Line_100 $$ return[ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_102 $$ int width = 0, height = 0, type = 0[ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_103 $$ ImageStack stack = null[ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_104 $$ double min = Double.MAX_VALUE[ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_105 $$ double max = -Double.MAX_VALUE[ CD ]
Line_105 $$ double max = -Double.MAX_VALUE-->Line_105 $$ double max = -Double.MAX_VALUE[ CD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_106 $$ int k = 0[ CD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ int n = list.length-->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ CD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ CD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_109 $$ String path = (dir + list[i])[ CD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_110 $$ if (path == null)[ CD ]
Line_109 $$ String path = (dir + list[i])-->Line_110 $$ if (path == null)[ FD ]
Line_90 $$ String path = (dir + list[i])-->Line_110 $$ if (path == null)[ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_111 $$ if (list[i].endsWith(".txt"))[ CD ]
Line_111 $$ if (list[i].endsWith(".txt"))-->Line_111 $$ if (list[i].endsWith(".txt"))[ CD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_112 $$ ImagePlus imp = new Opener().openImage(path)[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_112 $$ ImagePlus imp = new Opener().openImage(path)[ CD ]
Line_109 $$ String path = (dir + list[i])-->Line_112 $$ ImagePlus imp = new Opener().openImage(path)[ FD ]
Line_90 $$ String path = (dir + list[i])-->Line_112 $$ ImagePlus imp = new Opener().openImage(path)[ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_113 $$ if (imp != null && stack == null) [ CD ]
Line_113 $$ if (imp != null && stack == null) -->Line_114 $$ width = imp.getWidth()[ CD ]
Line_114 $$ width = imp.getWidth()-->Line_114 $$ width = imp.getWidth()[ FD ]
Line_102 $$ int width = 0, height = 0, type = 0-->Line_114 $$ width = imp.getWidth()[ FD ]
Line_114 $$ width = imp.getWidth()-->Line_114 $$ width = imp.getWidth()[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_114 $$ width = imp.getWidth()[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_114 $$ width = imp.getWidth()[ FD ]
Line_113 $$ if (imp != null && stack == null) -->Line_115 $$ height = imp.getHeight()[ CD ]
Line_115 $$ height = imp.getHeight()-->Line_115 $$ height = imp.getHeight()[ FD ]
Line_102 $$ int width = 0, height = 0, type = 0-->Line_115 $$ height = imp.getHeight()[ FD ]
Line_115 $$ height = imp.getHeight()-->Line_115 $$ height = imp.getHeight()[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_115 $$ height = imp.getHeight()[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_115 $$ height = imp.getHeight()[ FD ]
Line_113 $$ if (imp != null && stack == null) -->Line_116 $$ type = imp.getType()[ CD ]
Line_116 $$ type = imp.getType()-->Line_116 $$ type = imp.getType()[ FD ]
Line_102 $$ int width = 0, height = 0, type = 0-->Line_116 $$ type = imp.getType()[ FD ]
Line_116 $$ type = imp.getType()-->Line_116 $$ type = imp.getType()[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_116 $$ type = imp.getType()[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_116 $$ type = imp.getType()[ FD ]
Line_113 $$ if (imp != null && stack == null) -->Line_117 $$ ColorModel cm = imp.getProcessor().getColorModel()[ CD ]
Line_117 $$ ColorModel cm = imp.getProcessor().getColorModel()-->Line_117 $$ ColorModel cm = imp.getProcessor().getColorModel()[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_117 $$ ColorModel cm = imp.getProcessor().getColorModel()[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_117 $$ ColorModel cm = imp.getProcessor().getColorModel()[ FD ]
Line_113 $$ if (imp != null && stack == null) -->Line_118 $$ if (halfSize)[ CD ]
Line_118 $$ if (halfSize)-->Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)[ CD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)[ FD ]
Line_103 $$ ImageStack stack = null-->Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)[ FD ]
Line_118 $$ if (halfSize)-->Line_118 $$ stack = new ImageStack(width, height, cm)[ CD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_118 $$ stack = new ImageStack(width, height, cm)[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_118 $$ stack = new ImageStack(width, height, cm)[ FD ]
Line_103 $$ ImageStack stack = null-->Line_118 $$ stack = new ImageStack(width, height, cm)[ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_120 $$ if (stack != null)[ CD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_120 $$ if (stack != null)[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_120 $$ if (stack != null)[ FD ]
Line_103 $$ ImageStack stack = null-->Line_120 $$ if (stack != null)[ FD ]
Line_120 $$ if (stack != null)-->Line_120 $$ k = stack.getSize() + 1[ CD ]
Line_120 $$ k = stack.getSize() + 1-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_106 $$ int k = 0-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_103 $$ ImageStack stack = null-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_121 $$ IJ.showStatus(k + "/" + n)[ CD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_122 $$ IJ.showProgress((double) k / n)[ CD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_123 $$ if (imp == null)[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp == null)[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_123 $$ if (imp == null)[ FD ]
Line_123 $$ if (imp == null)-->Line_123 $$ IJ.log(list[i] + ": unable to open")[ CD ]
Line_123 $$ if (imp == null)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ FD ]
Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)-->Line_123 $$ IJ.log(list[i] + ": wrong dimensions")[ CD ]
Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)-->Line_123 $$ if (imp.getType() != type)[ CD ]
Line_116 $$ type = imp.getType()-->Line_123 $$ if (imp.getType() != type)[ FD ]
Line_102 $$ int width = 0, height = 0, type = 0-->Line_123 $$ if (imp.getType() != type)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp.getType() != type)[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_123 $$ if (imp.getType() != type)[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_123 $$ IJ.log(list[i] + ": wrong type")[ CD ]
Line_123 $$ if (imp.getType() != type)-->Line_124 $$ ImageProcessor ip = imp.getProcessor()[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_124 $$ ImageProcessor ip = imp.getProcessor()[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_124 $$ ImageProcessor ip = imp.getProcessor()[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_124 $$ ImageProcessor ip = imp.getProcessor()[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_125 $$ if (grayscale)[ CD ]
Line_125 $$ if (grayscale)-->Line_125 $$ ip = ip.convertToByte(true)[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_125 $$ ip = ip.convertToByte(true)[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_126 $$ if (halfSize)[ CD ]
Line_126 $$ if (halfSize)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_127 $$ if (ip.getMin() < min)[ CD ]
Line_104 $$ double min = Double.MAX_VALUE-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_127 $$ if (ip.getMin() < min)-->Line_127 $$ min = ip.getMin()[ CD ]
Line_127 $$ min = ip.getMin()-->Line_127 $$ min = ip.getMin()[ FD ]
Line_104 $$ double min = Double.MAX_VALUE-->Line_127 $$ min = ip.getMin()[ FD ]
Line_127 $$ min = ip.getMin()-->Line_127 $$ min = ip.getMin()[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_127 $$ min = ip.getMin()[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_127 $$ min = ip.getMin()[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_127 $$ min = ip.getMin()[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_128 $$ if (ip.getMax() > max)[ CD ]
Line_105 $$ double max = -Double.MAX_VALUE-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_128 $$ if (ip.getMax() > max)-->Line_128 $$ max = ip.getMax()[ CD ]
Line_128 $$ max = ip.getMax()-->Line_128 $$ max = ip.getMax()[ FD ]
Line_105 $$ double max = -Double.MAX_VALUE-->Line_128 $$ max = ip.getMax()[ FD ]
Line_128 $$ max = ip.getMax()-->Line_128 $$ max = ip.getMax()[ CD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_128 $$ max = ip.getMax()[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_128 $$ max = ip.getMax()[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_128 $$ max = ip.getMax()[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_129 $$ String label = imp.getTitle()[ CD ]
Line_129 $$ String label = imp.getTitle()-->Line_129 $$ String label = imp.getTitle()[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_129 $$ String label = imp.getTitle()[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_129 $$ String label = imp.getTitle()[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_130 $$ String info = (String) imp.getProperty("Info")[ CD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_130 $$ String info = (String) imp.getProperty("Info")[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_130 $$ String info = (String) imp.getProperty("Info")[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_131 $$ if (info != null)[ CD ]
Line_130 $$ String info = (String) imp.getProperty("Info")-->Line_131 $$ if (info != null)[ FD ]
Line_131 $$ if (info != null)-->Line_131 $$ label += "\n" + info[ CD ]
Line_129 $$ String label = imp.getTitle()-->Line_131 $$ label += "\n" + info[ FD ]
Line_131 $$ label += "\n" + info-->Line_131 $$ label += "\n" + info[ FD ]
Line_130 $$ String info = (String) imp.getProperty("Info")-->Line_131 $$ label += "\n" + info[ FD ]
Line_123 $$ if (imp.getType() != type)-->Line_132 $$ stack.addSlice(label, ip)[ CD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_103 $$ ImageStack stack = null-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_129 $$ String label = imp.getTitle()-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_131 $$ label += "\n" + info-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_134 $$ System.gc()[ CD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_138 $$ stack.trim()[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_138 $$ stack.trim()[ FD ]
Line_103 $$ ImageStack stack = null-->Line_138 $$ stack.trim()[ FD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_140 $$ if (stack != null && stack.getSize() > 0) [ CD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_140 $$ if (stack != null && stack.getSize() > 0) [ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_140 $$ if (stack != null && stack.getSize() > 0) [ FD ]
Line_103 $$ ImageStack stack = null-->Line_140 $$ if (stack != null && stack.getSize() > 0) [ FD ]
Line_140 $$ if (stack != null && stack.getSize() > 0) -->Line_141 $$ ImagePlus imp2 = new ImagePlus("Stack", stack)[ CD ]
Line_140 $$ if (stack != null && stack.getSize() > 0) -->Line_142 $$ if (imp2.getType() == ImagePlus.GRAY16 || imp2.getType() == ImagePlus.GRAY32)[ CD ]
Line_141 $$ ImagePlus imp2 = new ImagePlus("Stack", stack)-->Line_142 $$ if (imp2.getType() == ImagePlus.GRAY16 || imp2.getType() == ImagePlus.GRAY32)[ FD ]
Line_141 $$ ImagePlus imp2 = new ImagePlus("Stack", stack)-->Line_142 $$ if (imp2.getType() == ImagePlus.GRAY16 || imp2.getType() == ImagePlus.GRAY32)[ FD ]
Line_142 $$ if (imp2.getType() == ImagePlus.GRAY16 || imp2.getType() == ImagePlus.GRAY32)-->Line_142 $$ imp2.getProcessor().setMinAndMax(min, max)[ CD ]
Line_127 $$ min = ip.getMin()-->Line_142 $$ imp2.getProcessor().setMinAndMax(min, max)[ FD ]
Line_104 $$ double min = Double.MAX_VALUE-->Line_142 $$ imp2.getProcessor().setMinAndMax(min, max)[ FD ]
Line_128 $$ max = ip.getMax()-->Line_142 $$ imp2.getProcessor().setMinAndMax(min, max)[ FD ]
Line_105 $$ double max = -Double.MAX_VALUE-->Line_142 $$ imp2.getProcessor().setMinAndMax(min, max)[ FD ]
Line_141 $$ ImagePlus imp2 = new ImagePlus("Stack", stack)-->Line_142 $$ imp2.getProcessor().setMinAndMax(min, max)[ FD ]
Line_140 $$ if (stack != null && stack.getSize() > 0) -->Line_143 $$ imp2.show()[ CD ]
Line_141 $$ ImagePlus imp2 = new ImagePlus("Stack", stack)-->Line_143 $$ imp2.show()[ FD ]
Line_69 $$ if (open_as_stack || only_images) -->Line_145 $$ IJ.showProgress(1.0)[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ File f = new File(dir + list[i])-->Line_16 $$ if (!f.isDirectory()) [ FD ]
Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])-->Line_18 $$ if (img != null && img.getStackSize() == 1) [ FD ]
Line_17 $$ ImagePlus img = new Opener().openImage(dir, list[i])-->Line_19 $$ if (!scoutengine(img))[ FD ]
Line_23 $$ int lastDigit = whichcase.length() - 1-->Line_27 $$ if (lastDigit < whichcase.length() - 1)[ FD ]
Line_25 $$ lastDigit -= 1-->Line_24 $$ while (lastDigit > 0) [ FD ]
Line_25 $$ lastDigit -= 1-->Line_24 $$ while (lastDigit > 0) [ FD ]
Line_25 $$ lastDigit -= 1-->Line_25 $$ if (!Character.isDigit(whichcase.charAt(lastDigit)))[ FD ]
Line_35 $$ sorted = true-->Line_34 $$ while (!sorted) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_36 $$ for (int i = 0; i < n - 1; i++) -->Line_36 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_39 $$ long temp = bubblesort[i]-->Line_43 $$ bubblesort[i + 1] = temp[ FD ]
Line_39 $$ long temp = bubblesort[i]-->Line_53 $$ bubblesort[i + 1] = temp[ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_61 $$ for (int i = 0; i < n; i++) -->Line_61 $$ for (int i = 0; i < n; i++) [ FD ]
Line_72 $$ sorted = true-->Line_71 $$ while (!sorted) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_73 $$ for (int i = 0; i < n - 1; i++) -->Line_73 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_75 $$ long temp = bubblesort[i]-->Line_79 $$ bubblesort[i + 1] = temp[ FD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_89 $$ for (int i = 0; i < n; i++) -->Line_89 $$ for (int i = 0; i < n; i++) [ FD ]
Line_90 $$ String path = (dir + list[i])-->Line_91 $$ if (path == null)[ FD ]
Line_90 $$ String path = (dir + list[i])-->Line_92 $$ ImagePlus imp = o.openImage(path)[ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_94 $$ if (imp != null) [ FD ]
Line_92 $$ ImagePlus imp = o.openImage(path)-->Line_96 $$ imp.show()[ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_108 $$ for (int i = 0; i < n; i++) -->Line_108 $$ for (int i = 0; i < n; i++) [ FD ]
Line_109 $$ String path = (dir + list[i])-->Line_110 $$ if (path == null)[ FD ]
Line_109 $$ String path = (dir + list[i])-->Line_112 $$ ImagePlus imp = new Opener().openImage(path)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_114 $$ width = imp.getWidth()[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_115 $$ height = imp.getHeight()[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_116 $$ type = imp.getType()[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_117 $$ ColorModel cm = imp.getProcessor().getColorModel()[ FD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_120 $$ if (stack != null)[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_120 $$ if (stack != null)[ FD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_120 $$ k = stack.getSize() + 1[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp == null)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp.getWidth() != width || imp.getHeight() != height)[ FD ]
Line_116 $$ type = imp.getType()-->Line_123 $$ if (imp.getType() != type)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_123 $$ if (imp.getType() != type)[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_124 $$ ImageProcessor ip = imp.getProcessor()[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_125 $$ ip = ip.convertToByte(true)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_126 $$ ip = ip.resize(width / 2, height / 2)[ FD ]
Line_127 $$ min = ip.getMin()-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_127 $$ if (ip.getMin() < min)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_127 $$ min = ip.getMin()[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_127 $$ min = ip.getMin()[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_127 $$ min = ip.getMin()[ FD ]
Line_128 $$ max = ip.getMax()-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_128 $$ if (ip.getMax() > max)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_128 $$ max = ip.getMax()[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_128 $$ max = ip.getMax()[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_128 $$ max = ip.getMax()[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_129 $$ String label = imp.getTitle()[ FD ]
Line_112 $$ ImagePlus imp = new Opener().openImage(path)-->Line_130 $$ String info = (String) imp.getProperty("Info")[ FD ]
Line_130 $$ String info = (String) imp.getProperty("Info")-->Line_131 $$ if (info != null)[ FD ]
Line_130 $$ String info = (String) imp.getProperty("Info")-->Line_131 $$ label += "\n" + info[ FD ]
Line_118 $$ stack = new ImageStack(width / 2, height / 2, cm)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_118 $$ stack = new ImageStack(width, height, cm)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_129 $$ String label = imp.getTitle()-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_131 $$ label += "\n" + info-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_124 $$ ImageProcessor ip = imp.getProcessor()-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_125 $$ ip = ip.convertToByte(true)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
Line_126 $$ ip = ip.resize(width / 2, height / 2)-->Line_132 $$ stack.addSlice(label, ip)[ FD ]
