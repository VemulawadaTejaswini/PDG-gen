Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void doWrite() [ CD ]
Line_2 $$ public void doWrite() -->Line_3 $$ System.out.print("\nSerializing...")[ CD ]
Line_7 $$ if (null != method.getResource()) -->Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))[ CD ]
Line_5 $$ IFile ifile = null-->Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))[ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))[ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))[ CD ]
Line_6 $$ File file = null-->Line_10 $$ file = new File(path)[ FD ]
Line_10 $$ file = new File(path)-->Line_10 $$ file = new File(path)[ FD ]
Line_6 $$ File file = null-->Line_11 $$ if (file.exists()) [ FD ]
Line_10 $$ file = new File(path)-->Line_11 $$ if (file.exists()) [ FD ]
Line_11 $$ if (file.exists()) -->Line_11 $$ if (file.exists()) [ CD ]
Line_6 $$ File file = null-->Line_11 $$ if (file.exists()) [ FD ]
Line_10 $$ file = new File(path)-->Line_11 $$ if (file.exists()) [ FD ]
Line_11 $$ if (file.exists()) -->Line_12 $$ boolean ans = MessageDialog.openQuestion(wb.getSite().getShell(), "Flow Plug-in", "File already exists. Do you want to overwrite it?")[ CD ]
Line_12 $$ boolean ans = MessageDialog.openQuestion(wb.getSite().getShell(), "Flow Plug-in", "File already exists. Do you want to overwrite it?")-->Line_12 $$ boolean ans = MessageDialog.openQuestion(wb.getSite().getShell(), "Flow Plug-in", "File already exists. Do you want to overwrite it?")[ CD ]
Line_11 $$ if (file.exists()) -->Line_13 $$ if (ans) [ CD ]
Line_13 $$ if (ans) -->Line_14 $$ file.delete()[ CD ]
Line_6 $$ File file = null-->Line_14 $$ file.delete()[ FD ]
Line_10 $$ file = new File(path)-->Line_14 $$ file.delete()[ FD ]
Line_17 $$ if (!file.exists()) -->Line_17 $$ if (!file.exists()) [ CD ]
Line_17 $$ if (!file.exists()) -->Line_17 $$ if (!file.exists()) [ CD ]
Line_6 $$ File file = null-->Line_17 $$ if (!file.exists()) [ FD ]
Line_10 $$ file = new File(path)-->Line_17 $$ if (!file.exists()) [ FD ]
Line_17 $$ if (!file.exists()) -->Line_18 $$ FileOutputStream fos = new FileOutputStream(path)[ CD ]
Line_17 $$ if (!file.exists()) -->Line_19 $$ ObjectOutputStream oos = new ObjectOutputStream(fos)[ CD ]
Line_17 $$ if (!file.exists()) -->Line_20 $$ BufferedOutputStream bo = new BufferedOutputStream(oos)[ CD ]
Line_17 $$ if (!file.exists()) -->Line_21 $$ oos.writeObject(anode)[ CD ]
Line_19 $$ ObjectOutputStream oos = new ObjectOutputStream(fos)-->Line_21 $$ oos.writeObject(anode)[ FD ]
Line_17 $$ if (!file.exists()) -->Line_22 $$ oos.flush()[ CD ]
Line_19 $$ ObjectOutputStream oos = new ObjectOutputStream(fos)-->Line_22 $$ oos.flush()[ FD ]
Line_17 $$ if (!file.exists()) -->Line_23 $$ oos.close()[ CD ]
Line_19 $$ ObjectOutputStream oos = new ObjectOutputStream(fos)-->Line_23 $$ oos.close()[ FD ]
Line_17 $$ if (!file.exists()) -->Line_24 $$ InputStream is = new FileInputStream(path)[ CD ]
Line_17 $$ if (!file.exists()) -->Line_25 $$ if (null != ifile) [ CD ]
Line_5 $$ IFile ifile = null-->Line_25 $$ if (null != ifile) [ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_25 $$ if (null != ifile) [ FD ]
Line_25 $$ if (null != ifile) -->Line_26 $$ if (ifile.exists())[ CD ]
Line_5 $$ IFile ifile = null-->Line_26 $$ if (ifile.exists())[ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_26 $$ if (ifile.exists())[ FD ]
Line_26 $$ if (ifile.exists())-->Line_26 $$ if (ifile.exists())[ CD ]
Line_5 $$ IFile ifile = null-->Line_26 $$ if (ifile.exists())[ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_26 $$ if (ifile.exists())[ FD ]
Line_26 $$ if (ifile.exists())-->Line_26 $$ ifile.delete(true, null)[ CD ]
Line_5 $$ IFile ifile = null-->Line_26 $$ ifile.delete(true, null)[ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_26 $$ ifile.delete(true, null)[ FD ]
Line_25 $$ if (null != ifile) -->Line_27 $$ ifile.create(is, IResource.NONE, null)[ CD ]
Line_5 $$ IFile ifile = null-->Line_27 $$ ifile.create(is, IResource.NONE, null)[ FD ]
Line_8 $$ ifile = method.getJavaProject().getResource().getProject().getFile(Statics.CFG_DIR + Statics.SEPARATOR + path.substring(path.lastIndexOf(Statics.SEPARATOR)))-->Line_27 $$ ifile.create(is, IResource.NONE, null)[ FD ]
Line_24 $$ InputStream is = new FileInputStream(path)-->Line_27 $$ ifile.create(is, IResource.NONE, null)[ FD ]
Line_17 $$ if (!file.exists()) -->Line_29 $$ Path fullpath = new Path(path)[ CD ]
Line_17 $$ if (!file.exists()) -->Line_30 $$ IDE.openEditorOnFileStore(wb.getSite().getPage(), EFS.getLocalFileSystem().getStore(fullpath))[ CD ]
Line_29 $$ Path fullpath = new Path(path)-->Line_30 $$ IDE.openEditorOnFileStore(wb.getSite().getPage(), EFS.getLocalFileSystem().getStore(fullpath))[ FD ]
Line_17 $$ if (!file.exists()) -->Line_31 $$ method.getResource().refreshLocal(10, null)[ CD ]
Line_17 $$ if (!file.exists()) -->Line_32 $$ System.out.println("Serializing ...Done!")[ CD ]
