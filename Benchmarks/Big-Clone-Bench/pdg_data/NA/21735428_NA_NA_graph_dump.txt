Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException [ CD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_3 $$ final HttpClient client = new DefaultHttpClient()[ CD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_4 $$ final HttpGet httpGet = new HttpGet(url)[ CD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_5 $$ final HttpResponse response = client.execute(httpGet)[ CD ]
Line_5 $$ final HttpResponse response = client.execute(httpGet)-->Line_5 $$ final HttpResponse response = client.execute(httpGet)[ CD ]
Line_3 $$ final HttpClient client = new DefaultHttpClient()-->Line_5 $$ final HttpResponse response = client.execute(httpGet)[ FD ]
Line_4 $$ final HttpGet httpGet = new HttpGet(url)-->Line_5 $$ final HttpResponse response = client.execute(httpGet)[ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_6 $$ final HttpEntity entity = response.getEntity()[ CD ]
Line_6 $$ final HttpEntity entity = response.getEntity()-->Line_6 $$ final HttpEntity entity = response.getEntity()[ CD ]
Line_5 $$ final HttpResponse response = client.execute(httpGet)-->Line_6 $$ final HttpEntity entity = response.getEntity()[ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_7 $$ if (entity == null) [ CD ]
Line_6 $$ final HttpEntity entity = response.getEntity()-->Line_7 $$ if (entity == null) [ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_10 $$ final boolean isValidType = entity.getContentType().getValue().startsWith(RESPONSE_CONTENT_TYPE)[ CD ]
Line_10 $$ final boolean isValidType = entity.getContentType().getValue().startsWith(RESPONSE_CONTENT_TYPE)-->Line_10 $$ final boolean isValidType = entity.getContentType().getValue().startsWith(RESPONSE_CONTENT_TYPE)[ CD ]
Line_6 $$ final HttpEntity entity = response.getEntity()-->Line_10 $$ final boolean isValidType = entity.getContentType().getValue().startsWith(RESPONSE_CONTENT_TYPE)[ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_11 $$ if (!isValidType) [ CD ]
Line_10 $$ final boolean isValidType = entity.getContentType().getValue().startsWith(RESPONSE_CONTENT_TYPE)-->Line_11 $$ if (!isValidType) [ FD ]
Line_11 $$ if (!isValidType) -->Line_11 $$ if (!isValidType) [ CD ]
Line_10 $$ final boolean isValidType = entity.getContentType().getValue().startsWith(RESPONSE_CONTENT_TYPE)-->Line_11 $$ if (!isValidType) [ FD ]
Line_11 $$ if (!isValidType) -->Line_12 $$ final String message = "CONTENT_TYPE IS '" + entity.getContentType().getValue() + "'"[ CD ]
Line_6 $$ final HttpEntity entity = response.getEntity()-->Line_12 $$ final String message = "CONTENT_TYPE IS '" + entity.getContentType().getValue() + "'"[ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_15 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), RESPONSE_ENCODING))[ CD ]
Line_6 $$ final HttpEntity entity = response.getEntity()-->Line_15 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), RESPONSE_ENCODING))[ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_16 $$ final StringBuilder stringResult = new StringBuilder()[ CD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ CD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ CD ]
Line_15 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), RESPONSE_ENCODING))-->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ CD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ CD ]
Line_15 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), RESPONSE_ENCODING))-->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_19 $$ stringResult.append(line)[ CD ]
Line_16 $$ final StringBuilder stringResult = new StringBuilder()-->Line_19 $$ stringResult.append(line)[ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_19 $$ stringResult.append(line)[ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_19 $$ stringResult.append(line)[ FD ]
Line_15 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), RESPONSE_ENCODING))-->Line_22 $$ reader.close()[ FD ]
Line_2 $$ private DictionaryListParser downloadList(final String url) throws IOException, JSONException -->Line_24 $$ return new DictionaryListParser(stringResult)[ CD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) [ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_19 $$ stringResult.append(line)[ FD ]
Line_18 $$ for (String line = reader.readLine(); line != null; line = reader.readLine()) -->Line_19 $$ stringResult.append(line)[ FD ]
