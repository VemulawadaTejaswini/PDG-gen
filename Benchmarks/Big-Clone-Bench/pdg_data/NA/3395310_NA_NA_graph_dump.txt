Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void execute(File file) throws IOException [ CD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_3 $$ if (file == null)[ CD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_3 $$ if (file == null)[ FD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_4 $$ if (!file.exists())[ CD ]
Line_4 $$ if (!file.exists())-->Line_4 $$ if (!file.exists())[ CD ]
Line_4 $$ if (!file.exists())-->Line_4 $$ if (!file.exists())[ CD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_4 $$ if (!file.exists())[ FD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_5 $$ if (!file.isFile())[ CD ]
Line_5 $$ if (!file.isFile())-->Line_5 $$ if (!file.isFile())[ CD ]
Line_5 $$ if (!file.isFile())-->Line_5 $$ if (!file.isFile())[ CD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_5 $$ if (!file.isFile())[ FD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_6 $$ String login = cfg.getProperty(GC_USERNAME)[ CD ]
Line_6 $$ String login = cfg.getProperty(GC_USERNAME)-->Line_6 $$ String login = cfg.getProperty(GC_USERNAME)[ CD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_7 $$ String password = null[ CD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_8 $$ if (cfg.containsKey(GC_PASSWORD)) [ CD ]
Line_8 $$ if (cfg.containsKey(GC_PASSWORD)) -->Line_8 $$ if (cfg.containsKey(GC_PASSWORD)) [ CD ]
Line_8 $$ if (cfg.containsKey(GC_PASSWORD)) -->Line_9 $$ password = cfg.getProperty(GC_PASSWORD)[ CD ]
Line_7 $$ String password = null-->Line_9 $$ password = cfg.getProperty(GC_PASSWORD)[ FD ]
Line_9 $$ password = cfg.getProperty(GC_PASSWORD)-->Line_9 $$ password = cfg.getProperty(GC_PASSWORD)[ FD ]
Line_9 $$ password = cfg.getProperty(GC_PASSWORD)-->Line_9 $$ password = cfg.getProperty(GC_PASSWORD)[ CD ]
Line_8 $$ if (cfg.containsKey(GC_PASSWORD)) -->Line_11 $$ password = new String(Base64.decode(cfg.getProperty(GC_PASSWORD64)))[ CD ]
Line_7 $$ String password = null-->Line_11 $$ password = new String(Base64.decode(cfg.getProperty(GC_PASSWORD64)))[ FD ]
Line_9 $$ password = cfg.getProperty(GC_PASSWORD)-->Line_11 $$ password = new String(Base64.decode(cfg.getProperty(GC_PASSWORD64)))[ FD ]
Line_11 $$ password = new String(Base64.decode(cfg.getProperty(GC_PASSWORD64)))-->Line_11 $$ password = new String(Base64.decode(cfg.getProperty(GC_PASSWORD64)))[ FD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_13 $$ PostMethod post = null[ CD ]
Line_13 $$ PostMethod post = null-->Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")[ FD ]
Line_13 $$ PostMethod post = null-->Line_17 $$ post.addRequestHeader("User-Agent", getClass().getName())[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_17 $$ post.addRequestHeader("User-Agent", getClass().getName())[ FD ]
Line_13 $$ PostMethod post = null-->Line_18 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(login + ":" + password))[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_18 $$ post.addRequestHeader("Authorization", "Basic " + Base64.encode(login + ":" + password))[ FD ]
Line_20 $$ String s = this.summary-->Line_21 $$ if (StringUtils.isBlank(s)) [ FD ]
Line_21 $$ if (StringUtils.isBlank(s)) -->Line_21 $$ if (StringUtils.isBlank(s)) [ CD ]
Line_20 $$ String s = this.summary-->Line_21 $$ if (StringUtils.isBlank(s)) [ FD ]
Line_21 $$ if (StringUtils.isBlank(s)) -->Line_22 $$ s = file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ CD ]
Line_20 $$ String s = this.summary-->Line_22 $$ s = file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ FD ]
Line_22 $$ s = file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"-->Line_22 $$ s = file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ FD ]
Line_2 $$ private void execute(File file) throws IOException -->Line_22 $$ s = file.getName() + " (" + TimeUtils.toYYYYMMDD() + ")"[ FD ]
Line_19 $$ List<Part> parts = new ArrayList<Part>()-->Line_24 $$ parts.add(new StringPart("summary", s))[ FD ]
Line_25 $$ for (String lbl : this.labels) -->Line_26 $$ if (StringUtils.isBlank(lbl))[ FD ]
Line_26 $$ if (StringUtils.isBlank(lbl))-->Line_26 $$ if (StringUtils.isBlank(lbl))[ CD ]
Line_25 $$ for (String lbl : this.labels) -->Line_26 $$ if (StringUtils.isBlank(lbl))[ FD ]
Line_19 $$ List<Part> parts = new ArrayList<Part>()-->Line_27 $$ parts.add(new StringPart("label", lbl.trim()))[ FD ]
Line_25 $$ for (String lbl : this.labels) -->Line_27 $$ parts.add(new StringPart("label", lbl.trim()))[ FD ]
Line_19 $$ List<Part> parts = new ArrayList<Part>()-->Line_29 $$ parts.add(new FilePart("filename", file))[ FD ]
Line_19 $$ List<Part> parts = new ArrayList<Part>()-->Line_30 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_19 $$ List<Part> parts = new ArrayList<Part>()-->Line_30 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_13 $$ PostMethod post = null-->Line_30 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_30 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())[ FD ]
Line_13 $$ PostMethod post = null-->Line_31 $$ post.setRequestEntity(requestEntity)[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_31 $$ post.setRequestEntity(requestEntity)[ FD ]
Line_30 $$ MultipartRequestEntity requestEntity = new MultipartRequestEntity(parts.toArray(new Part[parts.size()]), post.getParams())-->Line_31 $$ post.setRequestEntity(requestEntity)[ FD ]
Line_32 $$ int status = client.executeMethod(post)-->Line_32 $$ int status = client.executeMethod(post)[ CD ]
Line_15 $$ HttpClient client = new HttpClient()-->Line_32 $$ int status = client.executeMethod(post)[ FD ]
Line_13 $$ PostMethod post = null-->Line_32 $$ int status = client.executeMethod(post)[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_32 $$ int status = client.executeMethod(post)[ FD ]
Line_32 $$ int status = client.executeMethod(post)-->Line_33 $$ if (status != 201) [ FD ]
Line_13 $$ PostMethod post = null-->Line_34 $$ throw new IOException("http status !=201 : " + post.getResponseBodyAsString())[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_34 $$ throw new IOException("http status !=201 : " + post.getResponseBodyAsString())[ FD ]
Line_33 $$ if (status != 201) -->Line_36 $$ IOUtils.copyTo(post.getResponseBodyAsStream(), new NullOutputStream())[ CD ]
Line_13 $$ PostMethod post = null-->Line_36 $$ IOUtils.copyTo(post.getResponseBodyAsStream(), new NullOutputStream())[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_36 $$ IOUtils.copyTo(post.getResponseBodyAsStream(), new NullOutputStream())[ FD ]
Line_13 $$ PostMethod post = null-->Line_39 $$ if (post != null)[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_39 $$ if (post != null)[ FD ]
Line_39 $$ if (post != null)-->Line_39 $$ post.releaseConnection()[ CD ]
Line_13 $$ PostMethod post = null-->Line_39 $$ post.releaseConnection()[ FD ]
Line_16 $$ post = new PostMethod("https://" + projectName + ".googlecode.com/files")-->Line_39 $$ post.releaseConnection()[ FD ]
