Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException [ CD ]
Line_4 $$ Connection conn = null-->Line_7 $$ conn = fido.util.FidoDataSource.getConnection()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_7 $$ conn = fido.util.FidoDataSource.getConnection()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_7 $$ conn = fido.util.FidoDataSource.getConnection()[ CD ]
Line_4 $$ Connection conn = null-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_5 $$ Statement stmt = null-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_9 $$ stmt = conn.createStatement()[ CD ]
Line_4 $$ Connection conn = null-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_5 $$ Statement stmt = null-->Line_10 $$ if (contains(stmt, instanceId) == false)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_10 $$ if (contains(stmt, instanceId) == false)[ FD ]
Line_2 $$ public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException -->Line_10 $$ if (contains(stmt, instanceId) == false)[ FD ]
Line_11 $$ ObjectLinkTable objectLinkList = new ObjectLinkTable()-->Line_13 $$ objectLinkList.deleteObject(stmt, instanceId)[ FD ]
Line_5 $$ Statement stmt = null-->Line_13 $$ objectLinkList.deleteObject(stmt, instanceId)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_13 $$ objectLinkList.deleteObject(stmt, instanceId)[ FD ]
Line_2 $$ public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException -->Line_13 $$ objectLinkList.deleteObject(stmt, instanceId)[ FD ]
Line_12 $$ ObjectAttributeTable objectAttributeList = new ObjectAttributeTable()-->Line_14 $$ objectAttributeList.deleteObject(stmt, instanceId)[ FD ]
Line_5 $$ Statement stmt = null-->Line_14 $$ objectAttributeList.deleteObject(stmt, instanceId)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_14 $$ objectAttributeList.deleteObject(stmt, instanceId)[ FD ]
Line_2 $$ public void deleteInstance(int instanceId) throws FidoDatabaseException, ObjectNotFoundException -->Line_14 $$ objectAttributeList.deleteObject(stmt, instanceId)[ FD ]
Line_5 $$ Statement stmt = null-->Line_15 $$ stmt.executeUpdate("delete from Objects where ObjectId = " + instanceId)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_15 $$ stmt.executeUpdate("delete from Objects where ObjectId = " + instanceId)[ FD ]
Line_4 $$ Connection conn = null-->Line_16 $$ conn.commit()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_16 $$ conn.commit()[ FD ]
Line_4 $$ Connection conn = null-->Line_18 $$ if (conn != null)[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_18 $$ if (conn != null)[ FD ]
Line_18 $$ if (conn != null)-->Line_18 $$ conn.rollback()[ CD ]
Line_4 $$ Connection conn = null-->Line_18 $$ conn.rollback()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_18 $$ conn.rollback()[ FD ]
Line_5 $$ Statement stmt = null-->Line_21 $$ if (stmt != null)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_21 $$ if (stmt != null)[ FD ]
Line_21 $$ if (stmt != null)-->Line_21 $$ stmt.close()[ CD ]
Line_5 $$ Statement stmt = null-->Line_21 $$ stmt.close()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_21 $$ stmt.close()[ FD ]
Line_4 $$ Connection conn = null-->Line_22 $$ if (conn != null)[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_22 $$ if (conn != null)[ FD ]
Line_22 $$ if (conn != null)-->Line_22 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = null-->Line_22 $$ conn.close()[ FD ]
Line_7 $$ conn = fido.util.FidoDataSource.getConnection()-->Line_22 $$ conn.close()[ FD ]
