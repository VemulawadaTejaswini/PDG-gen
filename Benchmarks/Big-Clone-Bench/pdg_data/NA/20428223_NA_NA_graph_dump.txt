Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void extractSong(Song s, File dir) [ CD ]
Line_2 $$ public void extractSong(Song s, File dir) -->Line_3 $$ FileInputStream fin = null[ CD ]
Line_2 $$ public void extractSong(Song s, File dir) -->Line_4 $$ FileOutputStream fout = null[ CD ]
Line_2 $$ public void extractSong(Song s, File dir) -->Line_5 $$ File dest = new File(dir, s.file.getName())[ CD ]
Line_2 $$ public void extractSong(Song s, File dir) -->Line_6 $$ if (dest.equals(s.file))[ CD ]
Line_5 $$ File dest = new File(dir, s.file.getName())-->Line_6 $$ if (dest.equals(s.file))[ FD ]
Line_6 $$ if (dest.equals(s.file))-->Line_6 $$ if (dest.equals(s.file))[ CD ]
Line_5 $$ File dest = new File(dir, s.file.getName())-->Line_6 $$ if (dest.equals(s.file))[ FD ]
Line_6 $$ if (dest.equals(s.file))-->Line_6 $$ return[ CD ]
Line_2 $$ public void extractSong(Song s, File dir) -->Line_7 $$ byte[] buf = new byte[COPY_BLOCKSIZE][ CD ]
Line_3 $$ FileInputStream fin = null-->Line_9 $$ fin = new FileInputStream(s.file)[ FD ]
Line_9 $$ fin = new FileInputStream(s.file)-->Line_9 $$ fin = new FileInputStream(s.file)[ FD ]
Line_4 $$ FileOutputStream fout = null-->Line_10 $$ fout = new FileOutputStream(dest)[ FD ]
Line_10 $$ fout = new FileOutputStream(dest)-->Line_10 $$ fout = new FileOutputStream(dest)[ FD ]
Line_11 $$ int read = 0-->Line_12 $$ do [ FD ]
Line_12 $$ do -->Line_13 $$ read = fin.read(buf)[ CD ]
Line_13 $$ read = fin.read(buf)-->Line_13 $$ read = fin.read(buf)[ FD ]
Line_11 $$ int read = 0-->Line_13 $$ read = fin.read(buf)[ FD ]
Line_13 $$ read = fin.read(buf)-->Line_13 $$ read = fin.read(buf)[ CD ]
Line_3 $$ FileInputStream fin = null-->Line_13 $$ read = fin.read(buf)[ FD ]
Line_9 $$ fin = new FileInputStream(s.file)-->Line_13 $$ read = fin.read(buf)[ FD ]
Line_7 $$ byte[] buf = new byte[COPY_BLOCKSIZE]-->Line_13 $$ read = fin.read(buf)[ FD ]
Line_12 $$ do -->Line_14 $$ if (read > 0)[ CD ]
Line_13 $$ read = fin.read(buf)-->Line_14 $$ if (read > 0)[ FD ]
Line_11 $$ int read = 0-->Line_14 $$ if (read > 0)[ FD ]
Line_14 $$ if (read > 0)-->Line_14 $$ fout.write(buf, 0, read)[ CD ]
Line_4 $$ FileOutputStream fout = null-->Line_14 $$ fout.write(buf, 0, read)[ FD ]
Line_10 $$ fout = new FileOutputStream(dest)-->Line_14 $$ fout.write(buf, 0, read)[ FD ]
Line_7 $$ byte[] buf = new byte[COPY_BLOCKSIZE]-->Line_14 $$ fout.write(buf, 0, read)[ FD ]
Line_13 $$ read = fin.read(buf)-->Line_14 $$ fout.write(buf, 0, read)[ FD ]
Line_11 $$ int read = 0-->Line_14 $$ fout.write(buf, 0, read)[ FD ]
Line_3 $$ FileInputStream fin = null-->Line_21 $$ fin.close()[ FD ]
Line_9 $$ fin = new FileInputStream(s.file)-->Line_21 $$ fin.close()[ FD ]
Line_4 $$ FileOutputStream fout = null-->Line_22 $$ fout.close()[ FD ]
Line_10 $$ fout = new FileOutputStream(dest)-->Line_22 $$ fout.close()[ FD ]
Line_13 $$ read = fin.read(buf)-->Line_12 $$ do [ FD ]
Line_13 $$ read = fin.read(buf)-->Line_12 $$ do [ FD ]
Line_13 $$ read = fin.read(buf)-->Line_14 $$ if (read > 0)[ FD ]
Line_13 $$ read = fin.read(buf)-->Line_14 $$ fout.write(buf, 0, read)[ FD ]
