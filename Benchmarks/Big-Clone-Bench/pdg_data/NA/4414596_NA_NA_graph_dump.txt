Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static int UsePassword(String username, String password, String new_password) [ CD ]
Line_5 $$ URLConnection urlc = url.openConnection()-->Line_5 $$ URLConnection urlc = url.openConnection()[ CD ]
Line_4 $$ URL url = new URL("http://eiffel.itba.edu.ar/hci/service/Security.groovy?method=ChangePassword&username=" + username + "&password=" + password + "&new_password=" + new_password)-->Line_5 $$ URLConnection urlc = url.openConnection()[ FD ]
Line_5 $$ URLConnection urlc = url.openConnection()-->Line_6 $$ urlc.setDoOutput(false)[ FD ]
Line_5 $$ URLConnection urlc = url.openConnection()-->Line_7 $$ urlc.setAllowUserInteraction(false)[ FD ]
Line_5 $$ URLConnection urlc = url.openConnection()-->Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(urlc.getInputStream()))[ FD ]
Line_11 $$ while ((str = br.readLine()) != null) -->Line_11 $$ while ((str = br.readLine()) != null) [ FD ]
Line_9 $$ String str-->Line_11 $$ while ((str = br.readLine()) != null) [ FD ]
Line_11 $$ while ((str = br.readLine()) != null) -->Line_11 $$ while ((str = br.readLine()) != null) [ CD ]
Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(urlc.getInputStream()))-->Line_11 $$ while ((str = br.readLine()) != null) [ FD ]
Line_11 $$ while ((str = br.readLine()) != null) -->Line_12 $$ sb.append(str)[ CD ]
Line_10 $$ StringBuffer sb = new StringBuffer()-->Line_12 $$ sb.append(str)[ FD ]
Line_11 $$ while ((str = br.readLine()) != null) -->Line_12 $$ sb.append(str)[ FD ]
Line_9 $$ String str-->Line_12 $$ sb.append(str)[ FD ]
Line_11 $$ while ((str = br.readLine()) != null) -->Line_13 $$ sb.append("\n")[ CD ]
Line_10 $$ StringBuffer sb = new StringBuffer()-->Line_13 $$ sb.append("\n")[ FD ]
Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(urlc.getInputStream()))-->Line_15 $$ br.close()[ FD ]
Line_16 $$ String response = sb.toString()-->Line_16 $$ String response = sb.toString()[ CD ]
Line_10 $$ StringBuffer sb = new StringBuffer()-->Line_16 $$ String response = sb.toString()[ FD ]
Line_16 $$ String response = sb.toString()-->Line_17 $$ if (response == null) [ FD ]
Line_17 $$ if (response == null) -->Line_18 $$ return -1[ CD ]
Line_18 $$ return -1-->Line_18 $$ return -1[ CD ]
Line_20 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_20 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()[ CD ]
Line_21 $$ DocumentBuilder db = dbf.newDocumentBuilder()-->Line_21 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ CD ]
Line_20 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_21 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ FD ]
Line_22 $$ InputSource is = new InputSource()-->Line_23 $$ is.setCharacterStream(new StringReader(response))[ FD ]
Line_24 $$ Document dom = db.parse(is)-->Line_24 $$ Document dom = db.parse(is)[ CD ]
Line_21 $$ DocumentBuilder db = dbf.newDocumentBuilder()-->Line_24 $$ Document dom = db.parse(is)[ FD ]
Line_22 $$ InputSource is = new InputSource()-->Line_24 $$ Document dom = db.parse(is)[ FD ]
Line_25 $$ NodeList nl = dom.getElementsByTagName("response")-->Line_25 $$ NodeList nl = dom.getElementsByTagName("response")[ CD ]
Line_24 $$ Document dom = db.parse(is)-->Line_25 $$ NodeList nl = dom.getElementsByTagName("response")[ FD ]
Line_26 $$ String status = ((Element) nl.item(0)).getAttributes().item(0).getTextContent()-->Line_26 $$ String status = ((Element) nl.item(0)).getAttributes().item(0).getTextContent()[ CD ]
Line_25 $$ NodeList nl = dom.getElementsByTagName("response")-->Line_26 $$ String status = ((Element) nl.item(0)).getAttributes().item(0).getTextContent()[ FD ]
Line_27 $$ if (status.toString().equals("fail")) -->Line_27 $$ if (status.toString().equals("fail")) [ CD ]
Line_26 $$ String status = ((Element) nl.item(0)).getAttributes().item(0).getTextContent()-->Line_27 $$ if (status.toString().equals("fail")) [ FD ]
Line_27 $$ if (status.toString().equals("fail")) -->Line_28 $$ return -1[ CD ]
Line_28 $$ return -1-->Line_28 $$ return -1[ CD ]
Line_2 $$ public static int UsePassword(String username, String password, String new_password) -->Line_34 $$ return -1[ CD ]
Line_34 $$ return -1-->Line_34 $$ return -1[ CD ]
Line_11 $$ while ((str = br.readLine()) != null) -->Line_12 $$ sb.append(str)[ FD ]
