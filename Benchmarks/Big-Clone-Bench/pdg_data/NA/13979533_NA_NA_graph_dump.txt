Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception [ CD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_3 $$ Resource resource = new Resource()[ CD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_4 $$ String openurl = serviceUrl.toString() + "?url_ver=Z39.88-2004" + "&rft_id=" + URLEncoder.encode(resourceId, "UTF-8") + "&svc_id=" + SVCID_ADORE4[ CD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_4 $$ String openurl = serviceUrl.toString() + "?url_ver=Z39.88-2004" + "&rft_id=" + URLEncoder.encode(resourceId, "UTF-8") + "&svc_id=" + SVCID_ADORE4[ FD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_4 $$ String openurl = serviceUrl.toString() + "?url_ver=Z39.88-2004" + "&rft_id=" + URLEncoder.encode(resourceId, "UTF-8") + "&svc_id=" + SVCID_ADORE4[ FD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_5 $$ log.debug("OpenURL Request: " + openurl)[ CD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_6 $$ URL url[ CD ]
Line_6 $$ URL url-->Line_8 $$ url = new URL(openurl)[ FD ]
Line_8 $$ url = new URL(openurl)-->Line_8 $$ url = new URL(openurl)[ FD ]
Line_6 $$ URL url-->Line_9 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())[ FD ]
Line_8 $$ url = new URL(openurl)-->Line_9 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())[ FD ]
Line_10 $$ int code = huc.getResponseCode()-->Line_10 $$ int code = huc.getResponseCode()[ CD ]
Line_9 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())-->Line_10 $$ int code = huc.getResponseCode()[ FD ]
Line_10 $$ int code = huc.getResponseCode()-->Line_11 $$ if (code == 200) [ FD ]
Line_11 $$ if (code == 200) -->Line_12 $$ InputStream is = huc.getInputStream()[ CD ]
Line_12 $$ InputStream is = huc.getInputStream()-->Line_12 $$ InputStream is = huc.getInputStream()[ CD ]
Line_9 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())-->Line_12 $$ InputStream is = huc.getInputStream()[ FD ]
Line_11 $$ if (code == 200) -->Line_13 $$ resource.setBytes(StreamUtil.getByteArray(is))[ CD ]
Line_3 $$ Resource resource = new Resource()-->Line_13 $$ resource.setBytes(StreamUtil.getByteArray(is))[ FD ]
Line_12 $$ InputStream is = huc.getInputStream()-->Line_13 $$ resource.setBytes(StreamUtil.getByteArray(is))[ FD ]
Line_11 $$ if (code == 200) -->Line_14 $$ resource.setContentType(huc.getContentType())[ CD ]
Line_3 $$ Resource resource = new Resource()-->Line_14 $$ resource.setContentType(huc.getContentType())[ FD ]
Line_9 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())-->Line_14 $$ resource.setContentType(huc.getContentType())[ FD ]
Line_11 $$ if (code == 200) -->Line_16 $$ log.error("An error of type " + code + " occurred for " + url.toString())[ CD ]
Line_6 $$ URL url-->Line_16 $$ log.error("An error of type " + code + " occurred for " + url.toString())[ FD ]
Line_8 $$ url = new URL(openurl)-->Line_16 $$ log.error("An error of type " + code + " occurred for " + url.toString())[ FD ]
Line_6 $$ URL url-->Line_17 $$ throw new Exception("Cannot get " + url.toString())[ FD ]
Line_8 $$ url = new URL(openurl)-->Line_17 $$ throw new Exception("Cannot get " + url.toString())[ FD ]
Line_2 $$ public Resource get(URL serviceUrl, String resourceId) throws Exception -->Line_24 $$ return resource[ CD ]
