Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException [ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_3 $$ Connection con = this.session.open()[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_3 $$ Connection con = this.session.open()[ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_4 $$ con.setAutoCommit(false)[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_4 $$ con.setAutoCommit(false)[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)[ CD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)[ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)[ CD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)[ CD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_8 $$ res.last()[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_8 $$ res.last()[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_9 $$ int rowcount = res.getRow()[ CD ]
Line_9 $$ int rowcount = res.getRow()-->Line_9 $$ int rowcount = res.getRow()[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_9 $$ int rowcount = res.getRow()[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_10 $$ res.beforeFirst()[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_10 $$ res.beforeFirst()[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_11 $$ ShoppingCartItem[] resArray = new ShoppingCartItem[rowcount][ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_12 $$ int i = 0[ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_13 $$ while (res.next()) [ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException [ CD ]
Line_13 $$ while (res.next()) -->Line_13 $$ while (res.next()) [ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_13 $$ while (res.next()) [ FD ]
Line_13 $$ while (res.next()) -->Line_14 $$ resArray[i] = new ShoppingCartItem()[ CD ]
Line_13 $$ while (res.next()) -->Line_15 $$ resArray[i].setCustomer_id(res.getInt("customer_id"))[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_15 $$ resArray[i].setCustomer_id(res.getInt("customer_id"))[ FD ]
Line_13 $$ while (res.next()) -->Line_16 $$ resArray[i].setDate_start(res.getDate("date_start"))[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_16 $$ resArray[i].setDate_start(res.getDate("date_start"))[ FD ]
Line_13 $$ while (res.next()) -->Line_17 $$ resArray[i].setDate_stop(res.getDate("date_stop"))[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_17 $$ resArray[i].setDate_stop(res.getDate("date_stop"))[ FD ]
Line_13 $$ while (res.next()) -->Line_18 $$ resArray[i].setRoom_type_id(res.getInt("room_type_id"))[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_18 $$ resArray[i].setRoom_type_id(res.getInt("room_type_id"))[ FD ]
Line_13 $$ while (res.next()) -->Line_19 $$ resArray[i].setNumtaken(res.getInt("numtaken"))[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_19 $$ resArray[i].setNumtaken(res.getInt("numtaken"))[ FD ]
Line_13 $$ while (res.next()) -->Line_20 $$ resArray[i].setTotal_price(res.getInt("total_price"))[ CD ]
Line_7 $$ ResultSet res = stmt.executeQuery(sql_stmt)-->Line_20 $$ resArray[i].setTotal_price(res.getInt("total_price"))[ FD ]
Line_13 $$ while (res.next()) -->Line_21 $$ i++[ CD ]
Line_12 $$ int i = 0-->Line_21 $$ i++[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_23 $$ this.wait(4000)[ CD ]
Line_9 $$ int rowcount = res.getRow()-->Line_25 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_25 $$ for (int j = 0; j < rowcount; j++) [ CD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_25 $$ for (int j = 0; j < rowcount; j++) [ CD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_25 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])[ CD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])[ CD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_27 $$ stmt = con.createStatement()[ CD ]
Line_27 $$ stmt = con.createStatement()-->Line_27 $$ stmt = con.createStatement()[ FD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_27 $$ stmt = con.createStatement()[ FD ]
Line_27 $$ stmt = con.createStatement()-->Line_27 $$ stmt = con.createStatement()[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_27 $$ stmt = con.createStatement()[ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_28 $$ stmt.executeUpdate(sql_stmt)[ CD ]
Line_27 $$ stmt = con.createStatement()-->Line_28 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_28 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_28 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_28 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_3 $$ Connection con = this.session.open()-->Line_32 $$ con.rollback()[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException [ CD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_9 $$ int rowcount = res.getRow()-->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ CD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ CD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_35 $$ System.out.println(j)[ CD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_35 $$ System.out.println(j)[ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_35 $$ System.out.println(j)[ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)[ CD ]
Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)-->Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)[ FD ]
Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)-->Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)[ CD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_37 $$ stmt = con.createStatement()[ CD ]
Line_37 $$ stmt = con.createStatement()-->Line_37 $$ stmt = con.createStatement()[ FD ]
Line_27 $$ stmt = con.createStatement()-->Line_37 $$ stmt = con.createStatement()[ FD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_37 $$ stmt = con.createStatement()[ FD ]
Line_37 $$ stmt = con.createStatement()-->Line_37 $$ stmt = con.createStatement()[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_37 $$ stmt = con.createStatement()[ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_38 $$ stmt.executeUpdate(sql_stmt)[ CD ]
Line_37 $$ stmt = con.createStatement()-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_27 $$ stmt = con.createStatement()-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)[ CD ]
Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)-->Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)[ FD ]
Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)-->Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)[ FD ]
Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)-->Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)[ CD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_41 $$ stmt = con.createStatement()[ CD ]
Line_37 $$ stmt = con.createStatement()-->Line_41 $$ stmt = con.createStatement()[ FD ]
Line_27 $$ stmt = con.createStatement()-->Line_41 $$ stmt = con.createStatement()[ FD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_41 $$ stmt = con.createStatement()[ FD ]
Line_41 $$ stmt = con.createStatement()-->Line_41 $$ stmt = con.createStatement()[ FD ]
Line_41 $$ stmt = con.createStatement()-->Line_41 $$ stmt = con.createStatement()[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_41 $$ stmt = con.createStatement()[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_42 $$ stmt.executeUpdate(sql_stmt)[ CD ]
Line_37 $$ stmt = con.createStatement()-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_27 $$ stmt = con.createStatement()-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_6 $$ Statement stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_41 $$ stmt = con.createStatement()-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_5 $$ String sql_stmt = DB2SQLStatements.shopping_cart_getAll(this.customer_id)-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_40 $$ sql_stmt = DB2SQLStatements.shopping_cart_deleteAll(this.customer_id)-->Line_42 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_43 $$ con.commit()[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_43 $$ con.commit()[ FD ]
Line_2 $$ public synchronized void checkout() throws SQLException, InterruptedException -->Line_44 $$ this.session.close(con)[ CD ]
Line_3 $$ Connection con = this.session.open()-->Line_44 $$ this.session.close(con)[ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_25 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_25 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_25 $$ for (int j = 0; j < rowcount; j++) -->Line_25 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_27 $$ stmt = con.createStatement()-->Line_28 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_26 $$ sql_stmt = DB2SQLStatements.room_date_update(resArray[j])-->Line_28 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_34 $$ for (int j = 0; j < rowcount; j++) [ FD ]
Line_34 $$ for (int j = 0; j < rowcount; j++) -->Line_35 $$ System.out.println(j)[ FD ]
Line_37 $$ stmt = con.createStatement()-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
Line_36 $$ sql_stmt = DB2SQLStatements.booked_insert(resArray[j], 2)-->Line_38 $$ stmt.executeUpdate(sql_stmt)[ FD ]
