Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void setUp() throws IOException [ CD ]
Line_2 $$ public void setUp() throws IOException -->Line_3 $$ final URL url = getClass().getResource("maventest.properties.xml")[ CD ]
Line_3 $$ final URL url = getClass().getResource("maventest.properties.xml")-->Line_3 $$ final URL url = getClass().getResource("maventest.properties.xml")[ CD ]
Line_3 $$ final URL url = getClass().getResource("maventest.properties.xml")-->Line_4 $$ workdir = new File(new File(url.getPath()).getParentFile(), "workdir")[ FD ]
Line_2 $$ public void setUp() throws IOException -->Line_5 $$ final Properties properties = new Properties()[ CD ]
Line_2 $$ public void setUp() throws IOException -->Line_6 $$ properties.load(url.openStream())[ CD ]
Line_5 $$ final Properties properties = new Properties()-->Line_6 $$ properties.load(url.openStream())[ FD ]
Line_3 $$ final URL url = getClass().getResource("maventest.properties.xml")-->Line_6 $$ properties.load(url.openStream())[ FD ]
Line_5 $$ final Properties properties = new Properties()-->Line_7 $$ for (Map.Entry<Object, Object> entry : properties.entrySet()) [ FD ]
Line_7 $$ for (Map.Entry<Object, Object> entry : properties.entrySet()) -->Line_8 $$ jobParams.put(entry.getKey() + "", entry.getValue() + "")[ FD ]
Line_7 $$ for (Map.Entry<Object, Object> entry : properties.entrySet()) -->Line_8 $$ jobParams.put(entry.getKey() + "", entry.getValue() + "")[ FD ]
Line_2 $$ public void setUp() throws IOException -->Line_10 $$ FileUtils.deleteDirectory(workdir)[ CD ]
Line_2 $$ public void setUp() throws IOException -->Line_11 $$ workdir.mkdirs()[ CD ]
