Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) [ CD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_3 $$ StringWriter sb = new StringWriter()[ CD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) [ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) [ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) [ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_5 $$ String prefix = (String) iterator.next()[ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_5 $$ String prefix = (String) iterator.next()[ FD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_6 $$ sb.append(prefix)[ CD ]
Line_3 $$ StringWriter sb = new StringWriter()-->Line_6 $$ sb.append(prefix)[ FD ]
Line_5 $$ String prefix = (String) iterator.next()-->Line_6 $$ sb.append(prefix)[ FD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ FD ]
Line_7 $$ if (iterator.hasNext()) -->Line_7 $$ if (iterator.hasNext()) [ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ FD ]
Line_7 $$ if (iterator.hasNext()) -->Line_8 $$ sb.append(',')[ CD ]
Line_3 $$ StringWriter sb = new StringWriter()-->Line_8 $$ sb.append(',')[ FD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_11 $$ String missingPrefixesForPrefix_cc = sb.toString()[ CD ]
Line_11 $$ String missingPrefixesForPrefix_cc = sb.toString()-->Line_11 $$ String missingPrefixesForPrefix_cc = sb.toString()[ CD ]
Line_3 $$ StringWriter sb = new StringWriter()-->Line_11 $$ String missingPrefixesForPrefix_cc = sb.toString()[ FD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_12 $$ String prefixDeclarations = ""[ CD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_13 $$ if (missingPrefixes.size() > 0) [ CD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_13 $$ if (missingPrefixes.size() > 0) [ FD ]
Line_17 $$ URLConnection conn = url.openConnection()-->Line_17 $$ URLConnection conn = url.openConnection()[ CD ]
Line_16 $$ URL url = new URL(urlString)-->Line_17 $$ URLConnection conn = url.openConnection()[ FD ]
Line_17 $$ URLConnection conn = url.openConnection()-->Line_18 $$ conn.setRequestProperty("accept", "application/rdf+n3, application/rdf-turtle, application/rdf-n3," + "text/rdf+n3")[ FD ]
Line_19 $$ InputStream openStream = conn.getInputStream()-->Line_19 $$ InputStream openStream = conn.getInputStream()[ CD ]
Line_17 $$ URLConnection conn = url.openConnection()-->Line_19 $$ InputStream openStream = conn.getInputStream()[ FD ]
Line_20 $$ StringWriter output = new StringWriter()-->Line_21 $$ ReaderUtils.copyReader("# From prefix.cc\n", new InputStreamReader(openStream), output)[ FD ]
Line_12 $$ String prefixDeclarations = ""-->Line_22 $$ prefixDeclarations = output.toString()[ FD ]
Line_22 $$ prefixDeclarations = output.toString()-->Line_22 $$ prefixDeclarations = output.toString()[ FD ]
Line_22 $$ prefixDeclarations = output.toString()-->Line_22 $$ prefixDeclarations = output.toString()[ CD ]
Line_20 $$ StringWriter output = new StringWriter()-->Line_22 $$ prefixDeclarations = output.toString()[ FD ]
Line_2 $$ private static String makePrefixDeclarationsWithPrefix_cc(Set<String> missingPrefixes) -->Line_30 $$ return prefixDeclarations[ CD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_5 $$ String prefix = (String) iterator.next()[ FD ]
Line_5 $$ String prefix = (String) iterator.next()-->Line_6 $$ sb.append(prefix)[ FD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ FD ]
Line_4 $$ for (Iterator<String> iterator = missingPrefixes.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ FD ]
