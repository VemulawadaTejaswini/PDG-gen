Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String getMD5Hash(String input) [ CD ]
Line_4 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_4 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_4 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_5 $$ md5.reset()[ FD ]
Line_4 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_6 $$ md5.update(input.getBytes())[ FD ]
Line_2 $$ public static String getMD5Hash(String input) -->Line_6 $$ md5.update(input.getBytes())[ FD ]
Line_7 $$ byte[] result = md5.digest()-->Line_7 $$ byte[] result = md5.digest()[ CD ]
Line_4 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_7 $$ byte[] result = md5.digest()[ FD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_9 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_9 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_9 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_10 $$ String byteStr = Integer.toHexString(result[i])[ CD ]
Line_10 $$ String byteStr = Integer.toHexString(result[i])-->Line_10 $$ String byteStr = Integer.toHexString(result[i])[ CD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_11 $$ String swap = null[ CD ]
Line_10 $$ String byteStr = Integer.toHexString(result[i])-->Line_12 $$ switch(byteStr.length()) [ FD ]
Line_11 $$ String swap = null-->Line_14 $$ swap = "0" + Integer.toHexString(result[i])[ FD ]
Line_14 $$ swap = "0" + Integer.toHexString(result[i])-->Line_14 $$ swap = "0" + Integer.toHexString(result[i])[ FD ]
Line_11 $$ String swap = null-->Line_17 $$ swap = Integer.toHexString(result[i])[ FD ]
Line_14 $$ swap = "0" + Integer.toHexString(result[i])-->Line_17 $$ swap = Integer.toHexString(result[i])[ FD ]
Line_17 $$ swap = Integer.toHexString(result[i])-->Line_17 $$ swap = Integer.toHexString(result[i])[ FD ]
Line_17 $$ swap = Integer.toHexString(result[i])-->Line_17 $$ swap = Integer.toHexString(result[i])[ CD ]
Line_11 $$ String swap = null-->Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)[ FD ]
Line_14 $$ swap = "0" + Integer.toHexString(result[i])-->Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)[ FD ]
Line_17 $$ swap = Integer.toHexString(result[i])-->Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)[ FD ]
Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)-->Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)[ FD ]
Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)-->Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)[ CD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ hexString.append(swap)[ CD ]
Line_8 $$ StringBuffer hexString = new StringBuffer()-->Line_23 $$ hexString.append(swap)[ FD ]
Line_11 $$ String swap = null-->Line_23 $$ hexString.append(swap)[ FD ]
Line_14 $$ swap = "0" + Integer.toHexString(result[i])-->Line_23 $$ hexString.append(swap)[ FD ]
Line_17 $$ swap = Integer.toHexString(result[i])-->Line_23 $$ hexString.append(swap)[ FD ]
Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)-->Line_23 $$ hexString.append(swap)[ FD ]
Line_25 $$ return hexString.toString()-->Line_25 $$ return hexString.toString()[ CD ]
Line_8 $$ StringBuffer hexString = new StringBuffer()-->Line_25 $$ return hexString.toString()[ FD ]
Line_2 $$ public static String getMD5Hash(String input) -->Line_29 $$ return null[ CD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_9 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_9 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < result.length; i++) -->Line_9 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_10 $$ String byteStr = Integer.toHexString(result[i])-->Line_12 $$ switch(byteStr.length()) [ FD ]
Line_11 $$ String swap = null-->Line_23 $$ hexString.append(swap)[ FD ]
Line_14 $$ swap = "0" + Integer.toHexString(result[i])-->Line_23 $$ hexString.append(swap)[ FD ]
Line_17 $$ swap = Integer.toHexString(result[i])-->Line_23 $$ hexString.append(swap)[ FD ]
Line_20 $$ swap = (Integer.toHexString(result[i])).substring(6, 8)-->Line_23 $$ hexString.append(swap)[ FD ]
