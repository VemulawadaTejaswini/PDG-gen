Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException [ CD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_3 $$ LOGGER.debug("DOWNLOAD - Send content: " + realFile.getAbsolutePath())[ CD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_4 $$ LOGGER.debug("Output stream: " + out.toString())[ CD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_4 $$ LOGGER.debug("Output stream: " + out.toString())[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_5 $$ if (ServerConfiguration.isDynamicSEL()) [ CD ]
Line_5 $$ if (ServerConfiguration.isDynamicSEL()) -->Line_5 $$ if (ServerConfiguration.isDynamicSEL()) [ CD ]
Line_5 $$ if (ServerConfiguration.isDynamicSEL()) -->Line_6 $$ LOGGER.error("IS DINAMIC SEL????")[ CD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_9 $$ if (".tokens".equals(realFile.getName()) || ".response".equals(realFile.getName()) || ".request".equals(realFile.getName()) || isAllowedClient) [ CD ]
Line_9 $$ if (".tokens".equals(realFile.getName()) || ".response".equals(realFile.getName()) || ".request".equals(realFile.getName()) || isAllowedClient) -->Line_10 $$ FileInputStream in = null[ CD ]
Line_10 $$ FileInputStream in = null-->Line_12 $$ in = new FileInputStream(realFile)[ FD ]
Line_12 $$ in = new FileInputStream(realFile)-->Line_12 $$ in = new FileInputStream(realFile)[ FD ]
Line_13 $$ int bytes = IOUtils.copy(in, out)-->Line_13 $$ int bytes = IOUtils.copy(in, out)[ CD ]
Line_10 $$ FileInputStream in = null-->Line_13 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_12 $$ in = new FileInputStream(realFile)-->Line_13 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_13 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_15 $$ out.flush()[ FD ]
Line_10 $$ FileInputStream in = null-->Line_19 $$ IOUtils.closeQuietly(in)[ FD ]
Line_12 $$ in = new FileInputStream(realFile)-->Line_19 $$ IOUtils.closeQuietly(in)[ FD ]
Line_10 $$ FileInputStream in = null-->Line_24 $$ in = new FileInputStream(realFile)[ FD ]
Line_12 $$ in = new FileInputStream(realFile)-->Line_24 $$ in = new FileInputStream(realFile)[ FD ]
Line_24 $$ in = new FileInputStream(realFile)-->Line_24 $$ in = new FileInputStream(realFile)[ FD ]
Line_10 $$ FileInputStream in = null-->Line_25 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_12 $$ in = new FileInputStream(realFile)-->Line_25 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_24 $$ in = new FileInputStream(realFile)-->Line_25 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_25 $$ int bytes = IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException -->Line_27 $$ out.flush()[ FD ]
Line_10 $$ FileInputStream in = null-->Line_31 $$ IOUtils.closeQuietly(in)[ FD ]
Line_12 $$ in = new FileInputStream(realFile)-->Line_31 $$ IOUtils.closeQuietly(in)[ FD ]
Line_24 $$ in = new FileInputStream(realFile)-->Line_31 $$ IOUtils.closeQuietly(in)[ FD ]
