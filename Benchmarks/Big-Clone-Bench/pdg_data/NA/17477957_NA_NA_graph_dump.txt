Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void unzipModel(String filename, String tempdir) throws Exception [ CD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_9 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_8 $$ ZipEntry entry-->Line_9 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_9 $$ while ((entry = zis.getNextEntry()) != null) [ CD ]
Line_7 $$ ZipInputStream zis = new ZipInputStream(new BufferedInputStream(fis))-->Line_9 $$ while ((entry = zis.getNextEntry()) != null) [ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_10 $$ int count[ CD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_11 $$ byte data[] = new byte[BUFFER][ CD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_12 $$ FileOutputStream fos = new FileOutputStream(tempdir + entry.getName())[ CD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_12 $$ FileOutputStream fos = new FileOutputStream(tempdir + entry.getName())[ FD ]
Line_8 $$ ZipEntry entry-->Line_12 $$ FileOutputStream fos = new FileOutputStream(tempdir + entry.getName())[ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)[ CD ]
Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)-->Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)[ FD ]
Line_4 $$ BufferedOutputStream dest = null-->Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)[ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)[ CD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_9 $$ while ((entry = zis.getNextEntry()) != null) [ CD ]
Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)-->Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)[ FD ]
Line_10 $$ int count-->Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)[ FD ]
Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)-->Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)[ CD ]
Line_7 $$ ZipInputStream zis = new ZipInputStream(new BufferedInputStream(fis))-->Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)[ FD ]
Line_6 $$ int BUFFER = 2048-->Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)[ FD ]
Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)-->Line_14 $$ dest.write(data, 0, count)[ CD ]
Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)-->Line_14 $$ dest.write(data, 0, count)[ FD ]
Line_4 $$ BufferedOutputStream dest = null-->Line_14 $$ dest.write(data, 0, count)[ FD ]
Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)-->Line_14 $$ dest.write(data, 0, count)[ FD ]
Line_10 $$ int count-->Line_14 $$ dest.write(data, 0, count)[ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_15 $$ dest.flush()[ CD ]
Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)-->Line_15 $$ dest.flush()[ FD ]
Line_4 $$ BufferedOutputStream dest = null-->Line_15 $$ dest.flush()[ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_16 $$ dest.close()[ CD ]
Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)-->Line_16 $$ dest.close()[ FD ]
Line_4 $$ BufferedOutputStream dest = null-->Line_16 $$ dest.close()[ FD ]
Line_7 $$ ZipInputStream zis = new ZipInputStream(new BufferedInputStream(fis))-->Line_18 $$ zis.close()[ FD ]
Line_9 $$ while ((entry = zis.getNextEntry()) != null) -->Line_12 $$ FileOutputStream fos = new FileOutputStream(tempdir + entry.getName())[ FD ]
Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)-->Line_15 $$ dest.flush()[ FD ]
Line_13 $$ dest = new BufferedOutputStream(fos, BUFFER)-->Line_16 $$ dest.close()[ FD ]
Line_14 $$ while ((count = zis.read(data, 0, BUFFER)) != -1) dest.write(data, 0, count)-->Line_14 $$ dest.write(data, 0, count)[ FD ]
