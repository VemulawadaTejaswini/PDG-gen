Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File from, File to) throws Exception [ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_3 $$ if (!from.exists())[ CD ]
Line_3 $$ if (!from.exists())-->Line_3 $$ if (!from.exists())[ CD ]
Line_3 $$ if (!from.exists())-->Line_3 $$ if (!from.exists())[ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_3 $$ if (!from.exists())[ FD ]
Line_3 $$ if (!from.exists())-->Line_3 $$ return[ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_4 $$ FileInputStream in = new FileInputStream(from)[ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_5 $$ FileOutputStream out = new FileOutputStream(to)[ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_6 $$ byte[] buffer = new byte[BUFFER_SIZE][ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_7 $$ int bytes_read[ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_8 $$ while (true) [ CD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_2 $$ public static void copyFile(File from, File to) throws Exception [ CD ]
Line_8 $$ while (true) -->Line_9 $$ bytes_read = in.read(buffer)[ CD ]
Line_9 $$ bytes_read = in.read(buffer)-->Line_9 $$ bytes_read = in.read(buffer)[ FD ]
Line_7 $$ int bytes_read-->Line_9 $$ bytes_read = in.read(buffer)[ FD ]
Line_9 $$ bytes_read = in.read(buffer)-->Line_9 $$ bytes_read = in.read(buffer)[ CD ]
Line_4 $$ FileInputStream in = new FileInputStream(from)-->Line_9 $$ bytes_read = in.read(buffer)[ FD ]
Line_6 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_9 $$ bytes_read = in.read(buffer)[ FD ]
Line_8 $$ while (true) -->Line_10 $$ if (bytes_read == -1)[ CD ]
Line_9 $$ bytes_read = in.read(buffer)-->Line_10 $$ if (bytes_read == -1)[ FD ]
Line_7 $$ int bytes_read-->Line_10 $$ if (bytes_read == -1)[ FD ]
Line_8 $$ while (true) -->Line_11 $$ out.write(buffer, 0, bytes_read)[ CD ]
Line_5 $$ FileOutputStream out = new FileOutputStream(to)-->Line_11 $$ out.write(buffer, 0, bytes_read)[ FD ]
Line_6 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_11 $$ out.write(buffer, 0, bytes_read)[ FD ]
Line_9 $$ bytes_read = in.read(buffer)-->Line_11 $$ out.write(buffer, 0, bytes_read)[ FD ]
Line_7 $$ int bytes_read-->Line_11 $$ out.write(buffer, 0, bytes_read)[ FD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_13 $$ out.flush()[ CD ]
Line_5 $$ FileOutputStream out = new FileOutputStream(to)-->Line_13 $$ out.flush()[ FD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_14 $$ out.close()[ CD ]
Line_5 $$ FileOutputStream out = new FileOutputStream(to)-->Line_14 $$ out.close()[ FD ]
Line_2 $$ public static void copyFile(File from, File to) throws Exception -->Line_15 $$ in.close()[ CD ]
Line_4 $$ FileInputStream in = new FileInputStream(from)-->Line_15 $$ in.close()[ FD ]
Line_9 $$ bytes_read = in.read(buffer)-->Line_10 $$ if (bytes_read == -1)[ FD ]
Line_9 $$ bytes_read = in.read(buffer)-->Line_11 $$ out.write(buffer, 0, bytes_read)[ FD ]
