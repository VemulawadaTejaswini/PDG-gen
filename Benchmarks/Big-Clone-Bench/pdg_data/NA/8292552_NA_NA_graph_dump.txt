Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ BufferedReader inp = null[ CD ]
Line_8 $$ if (!Vars.Proxy_Host.equals(""))-->Line_8 $$ if (!Vars.Proxy_Host.equals(""))[ CD ]
Line_8 $$ if (!Vars.Proxy_Host.equals(""))-->Line_8 $$ if (!Vars.Proxy_Host.equals(""))[ CD ]
Line_8 $$ if (!Vars.Proxy_Host.equals(""))-->Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))[ CD ]
Line_7 $$ URLConnection conn-->Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))[ CD ]
Line_6 $$ URL url = new URL(urlString)-->Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))[ FD ]
Line_8 $$ if (!Vars.Proxy_Host.equals(""))-->Line_8 $$ conn = url.openConnection()[ CD ]
Line_7 $$ URLConnection conn-->Line_8 $$ conn = url.openConnection()[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_8 $$ conn = url.openConnection()[ FD ]
Line_8 $$ conn = url.openConnection()-->Line_8 $$ conn = url.openConnection()[ FD ]
Line_8 $$ conn = url.openConnection()-->Line_8 $$ conn = url.openConnection()[ CD ]
Line_6 $$ URL url = new URL(urlString)-->Line_8 $$ conn = url.openConnection()[ FD ]
Line_7 $$ URLConnection conn-->Line_9 $$ conn.setDoInput(true)[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_9 $$ conn.setDoInput(true)[ FD ]
Line_8 $$ conn = url.openConnection()-->Line_9 $$ conn.setDoInput(true)[ FD ]
Line_7 $$ URLConnection conn-->Line_10 $$ conn.setDoOutput(true)[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_10 $$ conn.setDoOutput(true)[ FD ]
Line_8 $$ conn = url.openConnection()-->Line_10 $$ conn.setDoOutput(true)[ FD ]
Line_7 $$ URLConnection conn-->Line_11 $$ conn.connect()[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_11 $$ conn.connect()[ FD ]
Line_8 $$ conn = url.openConnection()-->Line_11 $$ conn.connect()[ FD ]
Line_3 $$ BufferedReader inp = null-->Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_7 $$ URLConnection conn-->Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_8 $$ conn = url.openConnection(new Proxy(Proxy.Type.HTTP, new InetSocketAddress(Vars.Proxy_Host, Vars.Proxy_Port)))-->Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_8 $$ conn = url.openConnection()-->Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx-->Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx[ FD ]
Line_13 $$ String xx-->Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx[ FD ]
Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx-->Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx[ CD ]
Line_3 $$ BufferedReader inp = null-->Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx[ FD ]
Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx[ FD ]
Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx-->Line_14 $$ PluginMain.result += "\n" + xx[ CD ]
Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx-->Line_14 $$ PluginMain.result += "\n" + xx[ FD ]
Line_13 $$ String xx-->Line_14 $$ PluginMain.result += "\n" + xx[ FD ]
Line_15 $$ if (curCmd != null)-->Line_15 $$ this.curCmd.cur_client.sendFromBot("[hubtracker:] " + PluginMain.result)[ CD ]
Line_15 $$ if (curCmd != null)-->Line_15 $$ PluginMain.curFrame.showMsg()[ CD ]
Line_3 $$ BufferedReader inp = null-->Line_16 $$ inp.close()[ FD ]
Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_16 $$ inp.close()[ FD ]
Line_3 $$ BufferedReader inp = null-->Line_17 $$ inp = null[ FD ]
Line_12 $$ inp = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_17 $$ inp = null[ FD ]
Line_17 $$ inp = null-->Line_17 $$ inp = null[ FD ]
Line_19 $$ PluginMain.result = ue.toString()-->Line_19 $$ PluginMain.result = ue.toString()[ CD ]
Line_21 $$ PluginMain.result = e.toString()-->Line_21 $$ PluginMain.result = e.toString()[ CD ]
Line_14 $$ while ((xx = inp.readLine()) != null) PluginMain.result += "\n" + xx-->Line_14 $$ PluginMain.result += "\n" + xx[ FD ]
