Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ JFileChooser askDir = new JFileChooser()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ askDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY)[ CD ]
Line_3 $$ JFileChooser askDir = new JFileChooser()-->Line_4 $$ askDir.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ askDir.setMultiSelectionEnabled(false)[ CD ]
Line_3 $$ JFileChooser askDir = new JFileChooser()-->Line_5 $$ askDir.setMultiSelectionEnabled(false)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int returnVal = askDir.showOpenDialog(null)[ CD ]
Line_6 $$ int returnVal = askDir.showOpenDialog(null)-->Line_6 $$ int returnVal = askDir.showOpenDialog(null)[ CD ]
Line_3 $$ JFileChooser askDir = new JFileChooser()-->Line_6 $$ int returnVal = askDir.showOpenDialog(null)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ if (returnVal == JFileChooser.CANCEL_OPTION) [ CD ]
Line_6 $$ int returnVal = askDir.showOpenDialog(null)-->Line_7 $$ if (returnVal == JFileChooser.CANCEL_OPTION) [ FD ]
Line_7 $$ if (returnVal == JFileChooser.CANCEL_OPTION) -->Line_8 $$ System.exit(returnVal)[ CD ]
Line_6 $$ int returnVal = askDir.showOpenDialog(null)-->Line_8 $$ System.exit(returnVal)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ File startDir = askDir.getSelectedFile()[ CD ]
Line_10 $$ File startDir = askDir.getSelectedFile()-->Line_10 $$ File startDir = askDir.getSelectedFile()[ CD ]
Line_3 $$ JFileChooser askDir = new JFileChooser()-->Line_10 $$ File startDir = askDir.getSelectedFile()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ ArrayList<File> files = new ArrayList<File>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ goThrough(startDir, files)[ CD ]
Line_10 $$ File startDir = askDir.getSelectedFile()-->Line_12 $$ goThrough(startDir, files)[ FD ]
Line_11 $$ ArrayList<File> files = new ArrayList<File>()-->Line_12 $$ goThrough(startDir, files)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ SearchClient client = new SearchClient("VZFo5W5i")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ MyID3 singleton = new MyID3()[ CD ]
Line_17 $$ MusicMetadataSet set = singleton.read(song)-->Line_17 $$ MusicMetadataSet set = singleton.read(song)[ CD ]
Line_14 $$ MyID3 singleton = new MyID3()-->Line_17 $$ MusicMetadataSet set = singleton.read(song)[ FD ]
Line_15 $$ for (File song : files) -->Line_17 $$ MusicMetadataSet set = singleton.read(song)[ FD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_18 $$ IMusicMetadata meta = set.getSimplified()[ CD ]
Line_17 $$ MusicMetadataSet set = singleton.read(song)-->Line_18 $$ IMusicMetadata meta = set.getSimplified()[ FD ]
Line_19 $$ String qu = song.getName()-->Line_19 $$ String qu = song.getName()[ CD ]
Line_15 $$ for (File song : files) -->Line_19 $$ String qu = song.getName()[ FD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_20 $$ if (meta.getAlbum() != null) [ FD ]
Line_20 $$ if (meta.getAlbum() != null) -->Line_21 $$ qu = meta.getAlbum()[ CD ]
Line_19 $$ String qu = song.getName()-->Line_21 $$ qu = meta.getAlbum()[ FD ]
Line_21 $$ qu = meta.getAlbum()-->Line_21 $$ qu = meta.getAlbum()[ FD ]
Line_21 $$ qu = meta.getAlbum()-->Line_21 $$ qu = meta.getAlbum()[ CD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_21 $$ qu = meta.getAlbum()[ FD ]
Line_20 $$ if (meta.getAlbum() != null) -->Line_22 $$ if (meta.getArtist() != null) [ CD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_22 $$ if (meta.getArtist() != null) [ FD ]
Line_22 $$ if (meta.getArtist() != null) -->Line_23 $$ qu = meta.getArtist()[ CD ]
Line_19 $$ String qu = song.getName()-->Line_23 $$ qu = meta.getArtist()[ FD ]
Line_21 $$ qu = meta.getAlbum()-->Line_23 $$ qu = meta.getArtist()[ FD ]
Line_23 $$ qu = meta.getArtist()-->Line_23 $$ qu = meta.getArtist()[ FD ]
Line_23 $$ qu = meta.getArtist()-->Line_23 $$ qu = meta.getArtist()[ CD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_23 $$ qu = meta.getArtist()[ FD ]
Line_19 $$ String qu = song.getName()-->Line_25 $$ if (qu.length() > 2) [ FD ]
Line_21 $$ qu = meta.getAlbum()-->Line_25 $$ if (qu.length() > 2) [ FD ]
Line_23 $$ qu = meta.getArtist()-->Line_25 $$ if (qu.length() > 2) [ FD ]
Line_25 $$ if (qu.length() > 2) -->Line_26 $$ ImageSearchRequest req = new ImageSearchRequest(qu)[ CD ]
Line_25 $$ if (qu.length() > 2) -->Line_27 $$ ImageSearchResults res = client.imageSearch(req)[ CD ]
Line_27 $$ ImageSearchResults res = client.imageSearch(req)-->Line_27 $$ ImageSearchResults res = client.imageSearch(req)[ CD ]
Line_13 $$ SearchClient client = new SearchClient("VZFo5W5i")-->Line_27 $$ ImageSearchResults res = client.imageSearch(req)[ FD ]
Line_26 $$ ImageSearchRequest req = new ImageSearchRequest(qu)-->Line_27 $$ ImageSearchResults res = client.imageSearch(req)[ FD ]
Line_25 $$ if (qu.length() > 2) -->Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) [ CD ]
Line_27 $$ ImageSearchResults res = client.imageSearch(req)-->Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) [ FD ]
Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) -->Line_29 $$ System.out.println("Downloading " + res.listResults()[0].getUrl())[ CD ]
Line_27 $$ ImageSearchResults res = client.imageSearch(req)-->Line_29 $$ System.out.println("Downloading " + res.listResults()[0].getUrl())[ FD ]
Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) -->Line_30 $$ URL url = new URL(res.listResults()[0].getUrl())[ CD ]
Line_27 $$ ImageSearchResults res = client.imageSearch(req)-->Line_30 $$ URL url = new URL(res.listResults()[0].getUrl())[ FD ]
Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) -->Line_31 $$ URLConnection con = url.openConnection()[ CD ]
Line_31 $$ URLConnection con = url.openConnection()-->Line_31 $$ URLConnection con = url.openConnection()[ CD ]
Line_30 $$ URL url = new URL(res.listResults()[0].getUrl())-->Line_31 $$ URLConnection con = url.openConnection()[ FD ]
Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) -->Line_32 $$ con.setConnectTimeout(10000)[ CD ]
Line_31 $$ URLConnection con = url.openConnection()-->Line_32 $$ con.setConnectTimeout(10000)[ FD ]
Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) -->Line_33 $$ int realSize = con.getContentLength()[ CD ]
Line_33 $$ int realSize = con.getContentLength()-->Line_33 $$ int realSize = con.getContentLength()[ CD ]
Line_31 $$ URLConnection con = url.openConnection()-->Line_33 $$ int realSize = con.getContentLength()[ FD ]
Line_28 $$ if (res.getTotalResultsAvailable().doubleValue() > 1) -->Line_34 $$ if (realSize > 0) [ CD ]
Line_33 $$ int realSize = con.getContentLength()-->Line_34 $$ if (realSize > 0) [ FD ]
Line_34 $$ if (realSize > 0) -->Line_35 $$ String mime = con.getContentType()[ CD ]
Line_35 $$ String mime = con.getContentType()-->Line_35 $$ String mime = con.getContentType()[ CD ]
Line_31 $$ URLConnection con = url.openConnection()-->Line_35 $$ String mime = con.getContentType()[ FD ]
Line_34 $$ if (realSize > 0) -->Line_36 $$ InputStream stream = con.getInputStream()[ CD ]
Line_36 $$ InputStream stream = con.getInputStream()-->Line_36 $$ InputStream stream = con.getInputStream()[ CD ]
Line_31 $$ URLConnection con = url.openConnection()-->Line_36 $$ InputStream stream = con.getInputStream()[ FD ]
Line_34 $$ if (realSize > 0) -->Line_37 $$ byte[] realData = new byte[realSize][ CD ]
Line_34 $$ if (realSize > 0) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ CD ]
Line_34 $$ if (realSize > 0) -->Line_34 $$ if (realSize > 0) [ CD ]
Line_33 $$ int realSize = con.getContentLength()-->Line_38 $$ for (int i = 0; i < realSize; i++) [ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ CD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ CD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_39 $$ stream.read(realData, i, 1)[ CD ]
Line_36 $$ InputStream stream = con.getInputStream()-->Line_39 $$ stream.read(realData, i, 1)[ FD ]
Line_37 $$ byte[] realData = new byte[realSize]-->Line_39 $$ stream.read(realData, i, 1)[ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_39 $$ stream.read(realData, i, 1)[ FD ]
Line_34 $$ if (realSize > 0) -->Line_41 $$ stream.close()[ CD ]
Line_36 $$ InputStream stream = con.getInputStream()-->Line_41 $$ stream.close()[ FD ]
Line_34 $$ if (realSize > 0) -->Line_42 $$ ImageData imgData = new ImageData(realData, mime, qu, 0)[ CD ]
Line_34 $$ if (realSize > 0) -->Line_43 $$ meta.addPicture(imgData)[ CD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_43 $$ meta.addPicture(imgData)[ FD ]
Line_42 $$ ImageData imgData = new ImageData(realData, mime, qu, 0)-->Line_43 $$ meta.addPicture(imgData)[ FD ]
Line_34 $$ if (realSize > 0) -->Line_44 $$ File temp = File.createTempFile("tempsong", "mp3")[ CD ]
Line_44 $$ File temp = File.createTempFile("tempsong", "mp3")-->Line_44 $$ File temp = File.createTempFile("tempsong", "mp3")[ CD ]
Line_34 $$ if (realSize > 0) -->Line_45 $$ singleton.write(song, temp, set, meta)[ CD ]
Line_14 $$ MyID3 singleton = new MyID3()-->Line_45 $$ singleton.write(song, temp, set, meta)[ FD ]
Line_15 $$ for (File song : files) -->Line_45 $$ singleton.write(song, temp, set, meta)[ FD ]
Line_44 $$ File temp = File.createTempFile("tempsong", "mp3")-->Line_45 $$ singleton.write(song, temp, set, meta)[ FD ]
Line_17 $$ MusicMetadataSet set = singleton.read(song)-->Line_45 $$ singleton.write(song, temp, set, meta)[ FD ]
Line_18 $$ IMusicMetadata meta = set.getSimplified()-->Line_45 $$ singleton.write(song, temp, set, meta)[ FD ]
Line_34 $$ if (realSize > 0) -->Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()[ CD ]
Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()-->Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()[ CD ]
Line_34 $$ if (realSize > 0) -->Line_47 $$ FileChannel outChannel = new FileOutputStream(song).getChannel()[ CD ]
Line_47 $$ FileChannel outChannel = new FileOutputStream(song).getChannel()-->Line_47 $$ FileChannel outChannel = new FileOutputStream(song).getChannel()[ CD ]
Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()-->Line_49 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_47 $$ FileChannel outChannel = new FileOutputStream(song).getChannel()-->Line_49 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()-->Line_49 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()-->Line_53 $$ if (inChannel != null)[ FD ]
Line_53 $$ if (inChannel != null)-->Line_53 $$ inChannel.close()[ CD ]
Line_46 $$ FileChannel inChannel = new FileInputStream(temp).getChannel()-->Line_53 $$ inChannel.close()[ FD ]
Line_47 $$ FileChannel outChannel = new FileOutputStream(song).getChannel()-->Line_54 $$ if (outChannel != null)[ FD ]
Line_54 $$ if (outChannel != null)-->Line_54 $$ outChannel.close()[ CD ]
Line_47 $$ FileChannel outChannel = new FileOutputStream(song).getChannel()-->Line_54 $$ outChannel.close()[ FD ]
Line_34 $$ if (realSize > 0) -->Line_56 $$ temp.delete()[ CD ]
Line_44 $$ File temp = File.createTempFile("tempsong", "mp3")-->Line_56 $$ temp.delete()[ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_38 $$ for (int i = 0; i < realSize; i++) [ FD ]
Line_38 $$ for (int i = 0; i < realSize; i++) -->Line_39 $$ stream.read(realData, i, 1)[ FD ]
