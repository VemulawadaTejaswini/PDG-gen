Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected String saveJar2TmpFile(String jarUrl, boolean reportError) [ CD ]
Line_2 $$ protected String saveJar2TmpFile(String jarUrl, boolean reportError) -->Line_3 $$ InputStream is = null[ CD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_6 $$ URLConnection conn = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(jad.getJarURL())-->Line_6 $$ URLConnection conn = url.openConnection()[ FD ]
Line_5 $$ URL url = new URL(jad.getJarURL())-->Line_7 $$ if (url.getUserInfo() != null) [ FD ]
Line_7 $$ if (url.getUserInfo() != null) -->Line_8 $$ String userInfo = new String(Base64Coder.encode(url.getUserInfo().getBytes("UTF-8")))[ CD ]
Line_5 $$ URL url = new URL(jad.getJarURL())-->Line_8 $$ String userInfo = new String(Base64Coder.encode(url.getUserInfo().getBytes("UTF-8")))[ FD ]
Line_7 $$ if (url.getUserInfo() != null) -->Line_9 $$ conn.setRequestProperty("Authorization", "Basic " + userInfo)[ CD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_9 $$ conn.setRequestProperty("Authorization", "Basic " + userInfo)[ FD ]
Line_3 $$ InputStream is = null-->Line_11 $$ is = conn.getInputStream()[ FD ]
Line_11 $$ is = conn.getInputStream()-->Line_11 $$ is = conn.getInputStream()[ FD ]
Line_11 $$ is = conn.getInputStream()-->Line_11 $$ is = conn.getInputStream()[ CD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_11 $$ is = conn.getInputStream()[ FD ]
Line_13 $$ String systemTmpDir = MIDletSystemProperties.getSystemProperty("java.io.tmpdir")-->Line_13 $$ String systemTmpDir = MIDletSystemProperties.getSystemProperty("java.io.tmpdir")[ CD ]
Line_13 $$ String systemTmpDir = MIDletSystemProperties.getSystemProperty("java.io.tmpdir")-->Line_14 $$ if (systemTmpDir != null) [ FD ]
Line_14 $$ if (systemTmpDir != null) -->Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")[ CD ]
Line_12 $$ File tmpDir = null-->Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")[ FD ]
Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")-->Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")[ FD ]
Line_14 $$ if (systemTmpDir != null) -->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ CD ]
Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) -->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ CD ]
Line_12 $$ File tmpDir = null-->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ FD ]
Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")-->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ FD ]
Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) -->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ CD ]
Line_12 $$ File tmpDir = null-->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ FD ]
Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")-->Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) [ FD ]
Line_16 $$ if ((!tmpDir.exists()) && (!tmpDir.mkdirs())) -->Line_17 $$ tmpDir = null[ CD ]
Line_12 $$ File tmpDir = null-->Line_17 $$ tmpDir = null[ FD ]
Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")-->Line_17 $$ tmpDir = null[ FD ]
Line_17 $$ tmpDir = null-->Line_17 $$ tmpDir = null[ FD ]
Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)-->Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)[ CD ]
Line_12 $$ File tmpDir = null-->Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)[ FD ]
Line_15 $$ tmpDir = new File(systemTmpDir, "microemulator-apps")-->Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)[ FD ]
Line_17 $$ tmpDir = null-->Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)[ FD ]
Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)-->Line_21 $$ tmp.deleteOnExit()[ FD ]
Line_3 $$ InputStream is = null-->Line_22 $$ IOUtils.copyToFile(is, tmp)[ FD ]
Line_11 $$ is = conn.getInputStream()-->Line_22 $$ IOUtils.copyToFile(is, tmp)[ FD ]
Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)-->Line_22 $$ IOUtils.copyToFile(is, tmp)[ FD ]
Line_23 $$ return IOUtils.getCanonicalFileClassLoaderURL(tmp)-->Line_23 $$ return IOUtils.getCanonicalFileClassLoaderURL(tmp)[ CD ]
Line_20 $$ File tmp = File.createTempFile("me2-app-", ".jar", tmpDir)-->Line_23 $$ return IOUtils.getCanonicalFileClassLoaderURL(tmp)[ FD ]
Line_25 $$ if (reportError) -->Line_26 $$ Message.error("Unable to open jar " + jarUrl, e)[ CD ]
Line_3 $$ InputStream is = null-->Line_30 $$ IOUtils.closeQuietly(is)[ FD ]
Line_11 $$ is = conn.getInputStream()-->Line_30 $$ IOUtils.closeQuietly(is)[ FD ]
