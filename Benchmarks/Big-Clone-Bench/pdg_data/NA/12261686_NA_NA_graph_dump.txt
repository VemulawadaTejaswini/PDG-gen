Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected byte[] fetch0() throws IOException [ CD ]
Line_2 $$ protected byte[] fetch0() throws IOException -->Line_3 $$ if (sourceFile.getProtocol().equalsIgnoreCase("jar")) [ CD ]
Line_3 $$ if (sourceFile.getProtocol().equalsIgnoreCase("jar")) -->Line_3 $$ if (sourceFile.getProtocol().equalsIgnoreCase("jar")) [ CD ]
Line_3 $$ if (sourceFile.getProtocol().equalsIgnoreCase("jar")) -->Line_6 $$ URL url[ CD ]
Line_3 $$ if (sourceFile.getProtocol().equalsIgnoreCase("jar")) -->Line_7 $$ if (sourceFile.getFile().endsWith(CLASS_FILE_EXTENSION)) [ CD ]
Line_7 $$ if (sourceFile.getFile().endsWith(CLASS_FILE_EXTENSION)) -->Line_7 $$ if (sourceFile.getFile().endsWith(CLASS_FILE_EXTENSION)) [ CD ]
Line_7 $$ if (sourceFile.getFile().endsWith(CLASS_FILE_EXTENSION)) -->Line_8 $$ url = sourceFile[ CD ]
Line_6 $$ URL url-->Line_8 $$ url = sourceFile[ FD ]
Line_8 $$ url = sourceFile-->Line_8 $$ url = sourceFile[ FD ]
Line_7 $$ if (sourceFile.getFile().endsWith(CLASS_FILE_EXTENSION)) -->Line_10 $$ url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION)[ CD ]
Line_6 $$ URL url-->Line_10 $$ url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION)[ FD ]
Line_8 $$ url = sourceFile-->Line_10 $$ url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION)[ FD ]
Line_10 $$ url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION)-->Line_10 $$ url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION)[ FD ]
Line_3 $$ if (sourceFile.getProtocol().equalsIgnoreCase("jar")) -->Line_12 $$ InputStream stream = url.openStream()[ CD ]
Line_12 $$ InputStream stream = url.openStream()-->Line_12 $$ InputStream stream = url.openStream()[ CD ]
Line_6 $$ URL url-->Line_12 $$ InputStream stream = url.openStream()[ FD ]
Line_8 $$ url = sourceFile-->Line_12 $$ InputStream stream = url.openStream()[ FD ]
Line_10 $$ url = new URL(sourceFile, className.replace(PACKAGE_SEPARATOR, URL_DIRECTORY_SEPARATOR) + CLASS_FILE_EXTENSION)-->Line_12 $$ InputStream stream = url.openStream()[ FD ]
Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) -->Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) [ FD ]
Line_16 $$ int bytesRead-->Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) [ FD ]
Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) -->Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) [ CD ]
Line_12 $$ InputStream stream = url.openStream()-->Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) [ FD ]
Line_15 $$ byte[] buffer = new byte[PACKET_SIZE]-->Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) [ FD ]
Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) -->Line_18 $$ output.write(buffer, 0, bytesRead)[ CD ]
Line_14 $$ ByteArrayOutputStream output = new ByteArrayOutputStream()-->Line_18 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_15 $$ byte[] buffer = new byte[PACKET_SIZE]-->Line_18 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) -->Line_18 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_16 $$ int bytesRead-->Line_18 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_20 $$ return output.toByteArray()-->Line_20 $$ return output.toByteArray()[ CD ]
Line_14 $$ ByteArrayOutputStream output = new ByteArrayOutputStream()-->Line_20 $$ return output.toByteArray()[ FD ]
Line_12 $$ InputStream stream = url.openStream()-->Line_22 $$ stream.close()[ FD ]
Line_17 $$ while ((bytesRead = stream.read(buffer, 0, buffer.length)) != -1) -->Line_18 $$ output.write(buffer, 0, bytesRead)[ FD ]
