Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean buildPerMovieDiffBinary(String masterFile) [ CD ]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel()-->Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel()[ CD ]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel()-->Line_6 $$ System.out.println(inC.size())[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_12 $$ File outFile = new File("C:\\NetflixData\\download\\SmartGrape\\CFItemToItemStats\\Movie--" + i + "-MatrixData.txt")[ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()[ CD ]
Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()-->Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()[ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)[ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_15 $$ for (long j = 1; j < i; j++) [ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_15 $$ for (long j = 1; j < i; j++) [ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_15 $$ for (long j = 1; j < i; j++) [ CD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_15 $$ for (long j = 1; j < i; j++) [ CD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_15 $$ for (long j = 1; j < i; j++) [ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)[ CD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)[ CD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_17 $$ position = 0[ CD ]
Line_17 $$ position = 0-->Line_17 $$ position = 0[ FD ]
Line_10 $$ long position-->Line_17 $$ position = 0[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ CD ]
Line_17 $$ position = 0-->Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_10 $$ long position-->Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()[ CD ]
Line_17 $$ position = 0-->Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_10 $$ long position-->Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ CD ]
Line_17 $$ position = 0-->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ FD ]
Line_10 $$ long position-->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_20 $$ position += new Long((i - j - 1) * 44).longValue()[ CD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_21 $$ inC.position(position)[ CD ]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel()-->Line_21 $$ inC.position(position)[ FD ]
Line_17 $$ position = 0-->Line_21 $$ inC.position(position)[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_21 $$ inC.position(position)[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_21 $$ inC.position(position)[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_21 $$ inC.position(position)[ FD ]
Line_10 $$ long position-->Line_21 $$ inC.position(position)[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_22 $$ inC.read(bbuf)[ CD ]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel()-->Line_22 $$ inC.read(bbuf)[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_22 $$ inC.read(bbuf)[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_23 $$ bbuf.flip()[ CD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_23 $$ bbuf.flip()[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_24 $$ buf.putShort(bbuf.getShort())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_24 $$ buf.putShort(bbuf.getShort())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_24 $$ buf.putShort(bbuf.getShort())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_25 $$ bbuf.getShort()[ CD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_25 $$ bbuf.getShort()[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_26 $$ buf.putInt(bbuf.getInt())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_26 $$ buf.putInt(bbuf.getInt())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_26 $$ buf.putInt(bbuf.getInt())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_27 $$ buf.putFloat(-bbuf.getInt())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_27 $$ buf.putFloat(-bbuf.getInt())[ FD ]
Line_27 $$ buf.putFloat(-bbuf.getInt())-->Line_27 $$ buf.putFloat(-bbuf.getInt())[ CD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_27 $$ buf.putFloat(-bbuf.getInt())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_28 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_28 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_28 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_29 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_29 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_29 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_30 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_30 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_30 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_31 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_31 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_31 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_32 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_32 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_32 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_33 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_33 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_33 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_34 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_34 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_34 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_35 $$ buf.putFloat(bbuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_35 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_35 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_37 $$ buf.putShort(new Long(i).shortValue())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_37 $$ buf.putShort(new Long(i).shortValue())[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_38 $$ buf.putInt(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_38 $$ buf.putInt(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_39 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_39 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_40 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_40 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_41 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_41 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_42 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_42 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_43 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_43 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_44 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_44 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_45 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_45 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_46 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_46 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_47 $$ buf.putFloat(0)[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_47 $$ buf.putFloat(0)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_48 $$ position = 0[ CD ]
Line_17 $$ position = 0-->Line_48 $$ position = 0[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_48 $$ position = 0[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_48 $$ position = 0[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_48 $$ position = 0[ FD ]
Line_48 $$ position = 0-->Line_48 $$ position = 0[ FD ]
Line_10 $$ long position-->Line_48 $$ position = 0[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ CD ]
Line_17 $$ position = 0-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_48 $$ position = 0-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_10 $$ long position-->Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ CD ]
Line_17 $$ position = 0-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_48 $$ position = 0-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_10 $$ long position-->Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ CD ]
Line_5 $$ FileChannel inC = new FileInputStream(inFile).getChannel()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_17 $$ position = 0-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_48 $$ position = 0-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_10 $$ long position-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_52 $$ while (remainingBuf.hasRemaining()) [ CD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ CD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_52 $$ while (remainingBuf.hasRemaining()) [ CD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_53 $$ remainingBuf.getShort()[ CD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_54 $$ buf.putShort(remainingBuf.getShort())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_54 $$ buf.putShort(remainingBuf.getShort())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_55 $$ buf.putInt(remainingBuf.getInt())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_55 $$ buf.putInt(remainingBuf.getInt())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_56 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_56 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_57 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_57 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_58 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_58 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_59 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_59 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_60 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_60 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_61 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_61 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_62 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_62 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_63 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_63 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_52 $$ while (remainingBuf.hasRemaining()) -->Line_64 $$ buf.putFloat(remainingBuf.getFloat())[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_64 $$ buf.putFloat(remainingBuf.getFloat())[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_66 $$ buf.flip()[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_66 $$ buf.flip()[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_67 $$ outC.write(buf)[ CD ]
Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()-->Line_67 $$ outC.write(buf)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_67 $$ outC.write(buf)[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_68 $$ buf.clear()[ CD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_68 $$ buf.clear()[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_69 $$ outC.close()[ CD ]
Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()-->Line_69 $$ outC.close()[ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ FD ]
Line_11 $$ for (long i = 1; i < 17770; i++) -->Line_11 $$ for (long i = 1; i < 17770; i++) [ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_37 $$ buf.putShort(new Long(i).shortValue())[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_38 $$ buf.putInt(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_39 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_40 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_41 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_42 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_43 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_44 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_45 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_46 $$ buf.putFloat(0)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_47 $$ buf.putFloat(0)[ FD ]
Line_48 $$ position = 0-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_49 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_50 $$ position -= new Long((17769 - (i - 1))).longValue() * new Long((17770 - (i - 1))).longValue() * new Long(22).longValue()-->Line_51 $$ ByteBuffer remainingBuf = inC.map(FileChannel.MapMode.READ_ONLY, position, (17770 - i) * 44)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_66 $$ buf.flip()[ FD ]
Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()-->Line_67 $$ outC.write(buf)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_67 $$ outC.write(buf)[ FD ]
Line_14 $$ ByteBuffer buf = ByteBuffer.allocate(17770 * 44)-->Line_68 $$ buf.clear()[ FD ]
Line_13 $$ FileChannel outC = new FileOutputStream(outFile, true).getChannel()-->Line_69 $$ outC.close()[ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_15 $$ for (long j = 1; j < i; j++) [ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_15 $$ for (long j = 1; j < i; j++) [ FD ]
Line_15 $$ for (long j = 1; j < i; j++) -->Line_15 $$ for (long j = 1; j < i; j++) [ FD ]
Line_17 $$ position = 0-->Line_21 $$ inC.position(position)[ FD ]
Line_18 $$ position += new Long(17769).longValue() * new Long(17770).longValue() * new Long(22).longValue()-->Line_21 $$ inC.position(position)[ FD ]
Line_19 $$ position -= new Long((17769 - (j - 1))).longValue() * new Long((17770 - (j - 1))).longValue() * new Long(22).longValue()-->Line_21 $$ inC.position(position)[ FD ]
Line_20 $$ position += new Long((i - j - 1) * 44).longValue()-->Line_21 $$ inC.position(position)[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_22 $$ inC.read(bbuf)[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_23 $$ bbuf.flip()[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_24 $$ buf.putShort(bbuf.getShort())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_25 $$ bbuf.getShort()[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_26 $$ buf.putInt(bbuf.getInt())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_27 $$ buf.putFloat(-bbuf.getInt())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_28 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_29 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_30 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_31 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_32 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_33 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_34 $$ buf.putFloat(bbuf.getFloat())[ FD ]
Line_16 $$ ByteBuffer bbuf = ByteBuffer.allocate(44)-->Line_35 $$ buf.putFloat(bbuf.getFloat())[ FD ]
