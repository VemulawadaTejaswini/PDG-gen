Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ boolean readExp = Utils.getFlag('l', args)-->Line_4 $$ boolean readExp = Utils.getFlag('l', args)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ boolean readExp = Utils.getFlag('l', args)[ FD ]
Line_5 $$ final boolean writeExp = Utils.getFlag('s', args)-->Line_5 $$ final boolean writeExp = Utils.getFlag('s', args)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ final boolean writeExp = Utils.getFlag('s', args)[ FD ]
Line_6 $$ final String expFile = Utils.getOption('f', args)-->Line_6 $$ final String expFile = Utils.getOption('f', args)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ final String expFile = Utils.getOption('f', args)[ FD ]
Line_6 $$ final String expFile = Utils.getOption('f', args)-->Line_7 $$ if ((readExp || writeExp) && (expFile.length() == 0)) [ FD ]
Line_11 $$ if (readExp) -->Line_12 $$ FileInputStream fi = new FileInputStream(expFile)[ CD ]
Line_11 $$ if (readExp) -->Line_13 $$ ObjectInputStream oi = new ObjectInputStream(new BufferedInputStream(fi))[ CD ]
Line_11 $$ if (readExp) -->Line_14 $$ exp = (Experiment) oi.readObject()[ CD ]
Line_10 $$ Experiment exp = null-->Line_14 $$ exp = (Experiment) oi.readObject()[ FD ]
Line_14 $$ exp = (Experiment) oi.readObject()-->Line_14 $$ exp = (Experiment) oi.readObject()[ FD ]
Line_13 $$ ObjectInputStream oi = new ObjectInputStream(new BufferedInputStream(fi))-->Line_14 $$ exp = (Experiment) oi.readObject()[ FD ]
Line_11 $$ if (readExp) -->Line_15 $$ oi.close()[ CD ]
Line_13 $$ ObjectInputStream oi = new ObjectInputStream(new BufferedInputStream(fi))-->Line_15 $$ oi.close()[ FD ]
Line_11 $$ if (readExp) -->Line_17 $$ exp = new Experiment()[ CD ]
Line_10 $$ Experiment exp = null-->Line_17 $$ exp = new Experiment()[ FD ]
Line_14 $$ exp = (Experiment) oi.readObject()-->Line_17 $$ exp = new Experiment()[ FD ]
Line_17 $$ exp = new Experiment()-->Line_17 $$ exp = new Experiment()[ FD ]
Line_10 $$ Experiment exp = null-->Line_19 $$ System.err.println("Initial Experiment:\n" + exp.toString())[ FD ]
Line_14 $$ exp = (Experiment) oi.readObject()-->Line_19 $$ System.err.println("Initial Experiment:\n" + exp.toString())[ FD ]
Line_17 $$ exp = new Experiment()-->Line_19 $$ System.err.println("Initial Experiment:\n" + exp.toString())[ FD ]
Line_20 $$ final JFrame jf = new JFrame("Weka Experiment Setup")-->Line_21 $$ jf.getContentPane().setLayout(new BorderLayout())[ FD ]
Line_22 $$ final SetupPanel sp = new SetupPanel()-->Line_23 $$ jf.getContentPane().add(sp, BorderLayout.CENTER)[ FD ]
Line_20 $$ final JFrame jf = new JFrame("Weka Experiment Setup")-->Line_23 $$ jf.getContentPane().add(sp, BorderLayout.CENTER)[ FD ]
Line_20 $$ final JFrame jf = new JFrame("Weka Experiment Setup")-->Line_24 $$ jf.addWindowListener(new WindowAdapter() [ FD ]
Line_24 $$ jf.addWindowListener(new WindowAdapter() -->Line_26 $$ System.err.println("\nFinal Experiment:\n" + sp.m_Exp.toString())[ CD ]
Line_24 $$ jf.addWindowListener(new WindowAdapter() -->Line_27 $$ if (writeExp) [ CD ]
Line_30 $$ ObjectOutputStream oo = new ObjectOutputStream(new BufferedOutputStream(fo))-->Line_31 $$ oo.writeObject(sp.m_Exp)[ FD ]
Line_30 $$ ObjectOutputStream oo = new ObjectOutputStream(new BufferedOutputStream(fo))-->Line_32 $$ oo.close()[ FD ]
Line_24 $$ jf.addWindowListener(new WindowAdapter() -->Line_38 $$ jf.dispose()[ CD ]
Line_20 $$ final JFrame jf = new JFrame("Weka Experiment Setup")-->Line_38 $$ jf.dispose()[ FD ]
Line_24 $$ jf.addWindowListener(new WindowAdapter() -->Line_39 $$ System.exit(0)[ CD ]
Line_20 $$ final JFrame jf = new JFrame("Weka Experiment Setup")-->Line_42 $$ jf.pack()[ FD ]
Line_20 $$ final JFrame jf = new JFrame("Weka Experiment Setup")-->Line_43 $$ jf.setVisible(true)[ FD ]
Line_22 $$ final SetupPanel sp = new SetupPanel()-->Line_47 $$ sp.setExperiment(exp)[ FD ]
Line_10 $$ Experiment exp = null-->Line_47 $$ sp.setExperiment(exp)[ FD ]
Line_14 $$ exp = (Experiment) oi.readObject()-->Line_47 $$ sp.setExperiment(exp)[ FD ]
Line_17 $$ exp = new Experiment()-->Line_47 $$ sp.setExperiment(exp)[ FD ]
