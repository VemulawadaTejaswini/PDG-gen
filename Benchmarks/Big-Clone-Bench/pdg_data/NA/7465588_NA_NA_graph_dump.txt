Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException [ CD ]
Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException -->Line_3 $$ Drawing drawing = createDrawing()[ CD ]
Line_3 $$ Drawing drawing = createDrawing()-->Line_3 $$ Drawing drawing = createDrawing()[ CD ]
Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException -->Line_4 $$ if (getParameter("datafile") != null) [ CD ]
Line_4 $$ if (getParameter("datafile") != null) -->Line_5 $$ URL url = new URL(getDocumentBase(), getParameter("datafile"))[ CD ]
Line_4 $$ if (getParameter("datafile") != null) -->Line_6 $$ URLConnection uc = url.openConnection()[ CD ]
Line_6 $$ URLConnection uc = url.openConnection()-->Line_6 $$ URLConnection uc = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(getDocumentBase(), getParameter("datafile"))-->Line_6 $$ URLConnection uc = url.openConnection()[ FD ]
Line_4 $$ if (getParameter("datafile") != null) -->Line_7 $$ if (uc instanceof HttpURLConnection) [ CD ]
Line_6 $$ URLConnection uc = url.openConnection()-->Line_7 $$ if (uc instanceof HttpURLConnection) [ FD ]
Line_7 $$ if (uc instanceof HttpURLConnection) -->Line_8 $$ ((HttpURLConnection) uc).setUseCaches(false)[ CD ]
Line_4 $$ if (getParameter("datafile") != null) -->Line_10 $$ int contentLength = uc.getContentLength()[ CD ]
Line_10 $$ int contentLength = uc.getContentLength()-->Line_10 $$ int contentLength = uc.getContentLength()[ CD ]
Line_6 $$ URLConnection uc = url.openConnection()-->Line_10 $$ int contentLength = uc.getContentLength()[ FD ]
Line_4 $$ if (getParameter("datafile") != null) -->Line_11 $$ InputStream in = uc.getInputStream()[ CD ]
Line_11 $$ InputStream in = uc.getInputStream()-->Line_11 $$ InputStream in = uc.getInputStream()[ CD ]
Line_6 $$ URLConnection uc = url.openConnection()-->Line_11 $$ InputStream in = uc.getInputStream()[ FD ]
Line_10 $$ int contentLength = uc.getContentLength()-->Line_13 $$ if (contentLength != -1) [ FD ]
Line_13 $$ if (contentLength != -1) -->Line_14 $$ in = new BoundedRangeInputStream(in)[ CD ]
Line_11 $$ InputStream in = uc.getInputStream()-->Line_14 $$ in = new BoundedRangeInputStream(in)[ FD ]
Line_14 $$ in = new BoundedRangeInputStream(in)-->Line_14 $$ in = new BoundedRangeInputStream(in)[ FD ]
Line_13 $$ if (contentLength != -1) -->Line_15 $$ ((BoundedRangeInputStream) in).setMaximum(contentLength + 1)[ CD ]
Line_13 $$ if (contentLength != -1) -->Line_16 $$ progress.setProgressModel((BoundedRangeModel) in)[ CD ]
Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException -->Line_16 $$ progress.setProgressModel((BoundedRangeModel) in)[ FD ]
Line_13 $$ if (contentLength != -1) -->Line_17 $$ progress.setIndeterminate(false)[ CD ]
Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException -->Line_17 $$ progress.setIndeterminate(false)[ FD ]
Line_19 $$ BufferedInputStream bin = new BufferedInputStream(in)-->Line_20 $$ bin.mark(512)[ FD ]
Line_3 $$ Drawing drawing = createDrawing()-->Line_22 $$ for (InputFormat format : drawing.getInputFormats()) [ FD ]
Line_19 $$ BufferedInputStream bin = new BufferedInputStream(in)-->Line_24 $$ bin.reset()[ FD ]
Line_6 $$ URLConnection uc = url.openConnection()-->Line_26 $$ uc = url.openConnection()[ FD ]
Line_26 $$ uc = url.openConnection()-->Line_26 $$ uc = url.openConnection()[ FD ]
Line_26 $$ uc = url.openConnection()-->Line_26 $$ uc = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(getDocumentBase(), getParameter("datafile"))-->Line_26 $$ uc = url.openConnection()[ FD ]
Line_11 $$ InputStream in = uc.getInputStream()-->Line_27 $$ in = uc.getInputStream()[ FD ]
Line_14 $$ in = new BoundedRangeInputStream(in)-->Line_27 $$ in = uc.getInputStream()[ FD ]
Line_27 $$ in = uc.getInputStream()-->Line_27 $$ in = uc.getInputStream()[ FD ]
Line_27 $$ in = uc.getInputStream()-->Line_27 $$ in = uc.getInputStream()[ CD ]
Line_6 $$ URLConnection uc = url.openConnection()-->Line_27 $$ in = uc.getInputStream()[ FD ]
Line_26 $$ uc = url.openConnection()-->Line_27 $$ in = uc.getInputStream()[ FD ]
Line_11 $$ InputStream in = uc.getInputStream()-->Line_28 $$ in = new BoundedRangeInputStream(in)[ FD ]
Line_14 $$ in = new BoundedRangeInputStream(in)-->Line_28 $$ in = new BoundedRangeInputStream(in)[ FD ]
Line_27 $$ in = uc.getInputStream()-->Line_28 $$ in = new BoundedRangeInputStream(in)[ FD ]
Line_28 $$ in = new BoundedRangeInputStream(in)-->Line_28 $$ in = new BoundedRangeInputStream(in)[ FD ]
Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException -->Line_30 $$ progress.setProgressModel((BoundedRangeModel) in)[ FD ]
Line_19 $$ BufferedInputStream bin = new BufferedInputStream(in)-->Line_31 $$ bin = new BufferedInputStream(in)[ FD ]
Line_31 $$ bin = new BufferedInputStream(in)-->Line_31 $$ bin = new BufferedInputStream(in)[ FD ]
Line_19 $$ BufferedInputStream bin = new BufferedInputStream(in)-->Line_32 $$ bin.mark(512)[ FD ]
Line_31 $$ bin = new BufferedInputStream(in)-->Line_32 $$ bin.mark(512)[ FD ]
Line_19 $$ BufferedInputStream bin = new BufferedInputStream(in)-->Line_35 $$ bin.reset()[ FD ]
Line_31 $$ bin = new BufferedInputStream(in)-->Line_35 $$ bin.reset()[ FD ]
Line_22 $$ for (InputFormat format : drawing.getInputFormats()) -->Line_36 $$ format.read(bin, drawing, true)[ FD ]
Line_19 $$ BufferedInputStream bin = new BufferedInputStream(in)-->Line_36 $$ format.read(bin, drawing, true)[ FD ]
Line_31 $$ bin = new BufferedInputStream(in)-->Line_36 $$ format.read(bin, drawing, true)[ FD ]
Line_3 $$ Drawing drawing = createDrawing()-->Line_36 $$ format.read(bin, drawing, true)[ FD ]
Line_21 $$ IOException formatException = null-->Line_37 $$ formatException = null[ FD ]
Line_37 $$ formatException = null-->Line_37 $$ formatException = null[ FD ]
Line_21 $$ IOException formatException = null-->Line_40 $$ formatException = e[ FD ]
Line_37 $$ formatException = null-->Line_40 $$ formatException = e[ FD ]
Line_40 $$ formatException = e-->Line_40 $$ formatException = e[ FD ]
Line_21 $$ IOException formatException = null-->Line_43 $$ if (formatException != null) [ FD ]
Line_37 $$ formatException = null-->Line_43 $$ if (formatException != null) [ FD ]
Line_40 $$ formatException = e-->Line_43 $$ if (formatException != null) [ FD ]
Line_11 $$ InputStream in = uc.getInputStream()-->Line_47 $$ in.close()[ FD ]
Line_14 $$ in = new BoundedRangeInputStream(in)-->Line_47 $$ in.close()[ FD ]
Line_27 $$ in = uc.getInputStream()-->Line_47 $$ in.close()[ FD ]
Line_28 $$ in = new BoundedRangeInputStream(in)-->Line_47 $$ in.close()[ FD ]
Line_2 $$ protected Drawing loadDrawing(ProgressIndicator progress) throws IOException -->Line_50 $$ return drawing[ CD ]
