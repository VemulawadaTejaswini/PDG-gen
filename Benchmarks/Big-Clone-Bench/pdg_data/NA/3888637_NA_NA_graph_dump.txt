Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException [ CD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_3 $$ HttpClient client = new DefaultHttpClient()[ CD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_4 $$ HttpParams params = client.getParams()[ CD ]
Line_4 $$ HttpParams params = client.getParams()-->Line_4 $$ HttpParams params = client.getParams()[ CD ]
Line_3 $$ HttpClient client = new DefaultHttpClient()-->Line_4 $$ HttpParams params = client.getParams()[ FD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_5 $$ HttpConnectionParams.setConnectionTimeout(params, CONNECTION_TIMEOUT)[ CD ]
Line_4 $$ HttpParams params = client.getParams()-->Line_5 $$ HttpConnectionParams.setConnectionTimeout(params, CONNECTION_TIMEOUT)[ FD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_6 $$ HttpConnectionParams.setSoTimeout(params, SO_TIMEOUT)[ CD ]
Line_4 $$ HttpParams params = client.getParams()-->Line_6 $$ HttpConnectionParams.setSoTimeout(params, SO_TIMEOUT)[ FD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_7 $$ HttpGet request = new HttpGet(version.substitute(uri))[ CD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_7 $$ HttpGet request = new HttpGet(version.substitute(uri))[ FD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_7 $$ HttpGet request = new HttpGet(version.substitute(uri))[ FD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_8 $$ HttpResponse response = client.execute(request)[ CD ]
Line_8 $$ HttpResponse response = client.execute(request)-->Line_8 $$ HttpResponse response = client.execute(request)[ CD ]
Line_3 $$ HttpClient client = new DefaultHttpClient()-->Line_8 $$ HttpResponse response = client.execute(request)[ FD ]
Line_7 $$ HttpGet request = new HttpGet(version.substitute(uri))-->Line_8 $$ HttpResponse response = client.execute(request)[ FD ]
Line_2 $$ public VeecheckResult performRequest(VeecheckVersion version, String uri) throws ClientProtocolException, IOException, IllegalStateException, SAXException -->Line_9 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_9 $$ HttpEntity entity = response.getEntity()-->Line_9 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_8 $$ HttpResponse response = client.execute(request)-->Line_9 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_11 $$ StatusLine line = response.getStatusLine()-->Line_11 $$ StatusLine line = response.getStatusLine()[ CD ]
Line_8 $$ HttpResponse response = client.execute(request)-->Line_11 $$ StatusLine line = response.getStatusLine()[ FD ]
Line_11 $$ StatusLine line = response.getStatusLine()-->Line_12 $$ if (line.getStatusCode() != 200)[ FD ]
Line_11 $$ StatusLine line = response.getStatusLine()-->Line_12 $$ throw new IOException("Request failed: " + line.getReasonPhrase())[ FD ]
Line_13 $$ Header header = response.getFirstHeader(HTTP.CONTENT_TYPE)-->Line_13 $$ Header header = response.getFirstHeader(HTTP.CONTENT_TYPE)[ CD ]
Line_8 $$ HttpResponse response = client.execute(request)-->Line_13 $$ Header header = response.getFirstHeader(HTTP.CONTENT_TYPE)[ FD ]
Line_14 $$ Encoding encoding = identityEncoding(header)-->Line_14 $$ Encoding encoding = identityEncoding(header)[ CD ]
Line_13 $$ Header header = response.getFirstHeader(HTTP.CONTENT_TYPE)-->Line_14 $$ Encoding encoding = identityEncoding(header)[ FD ]
Line_14 $$ Encoding encoding = identityEncoding(header)-->Line_16 $$ Xml.parse(entity.getContent(), encoding, handler)[ FD ]
Line_15 $$ VeecheckResult handler = new VeecheckResult(version)-->Line_16 $$ Xml.parse(entity.getContent(), encoding, handler)[ FD ]
Line_9 $$ HttpEntity entity = response.getEntity()-->Line_16 $$ Xml.parse(entity.getContent(), encoding, handler)[ FD ]
Line_9 $$ HttpEntity entity = response.getEntity()-->Line_19 $$ entity.consumeContent()[ FD ]
