Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String merge(int width, int height) throws Exception [ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_3 $$ htErrors.clear()[ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_4 $$ sendGetImageRequests(width, height)[ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_4 $$ sendGetImageRequests(width, height)[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_4 $$ sendGetImageRequests(width, height)[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_5 $$ Vector files = new Vector()[ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()[ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_7 $$ c.setCache(cache)[ CD ]
Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()-->Line_7 $$ c.setCache(cache)[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_8 $$ c.checkIfModified(false)[ CD ]
Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()-->Line_8 $$ c.checkIfModified(false)[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_2 $$ public String merge(int width, int height) throws Exception [ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_10 $$ if ((String) vImageUrls.get(i) != null) [ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_10 $$ if ((String) vImageUrls.get(i) != null) [ FD ]
Line_10 $$ if ((String) vImageUrls.get(i) != null) -->Line_11 $$ c.register((String) vImageUrls.get(i))[ CD ]
Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()-->Line_11 $$ c.register((String) vImageUrls.get(i))[ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_11 $$ c.register((String) vImageUrls.get(i))[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_15 $$ c.doTransactions()[ CD ]
Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()-->Line_15 $$ c.doTransactions()[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_2 $$ public String merge(int width, int height) throws Exception [ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ CD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_18 $$ if (vImageUrls.get(i) != null) [ CD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_18 $$ if (vImageUrls.get(i) != null) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_18 $$ if (vImageUrls.get(i) != null) [ FD ]
Line_18 $$ if (vImageUrls.get(i) != null) -->Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))[ CD ]
Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))-->Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))[ CD ]
Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()-->Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))[ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))[ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))[ FD ]
Line_18 $$ if (vImageUrls.get(i) != null) -->Line_20 $$ if (path != null) [ CD ]
Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))-->Line_20 $$ if (path != null) [ FD ]
Line_20 $$ if (path != null) -->Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")[ CD ]
Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")-->Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")[ CD ]
Line_6 $$ ConcurrentHTTPTransactionHandler c = new ConcurrentHTTPTransactionHandler()-->Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")[ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")[ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")[ FD ]
Line_20 $$ if (path != null) -->Line_22 $$ if (contentType.startsWith("image")) [ CD ]
Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")-->Line_22 $$ if (contentType.startsWith("image")) [ FD ]
Line_22 $$ if (contentType.startsWith("image")) -->Line_22 $$ if (contentType.startsWith("image")) [ CD ]
Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")-->Line_22 $$ if (contentType.startsWith("image")) [ FD ]
Line_22 $$ if (contentType.startsWith("image")) -->Line_23 $$ files.add(path)[ CD ]
Line_5 $$ Vector files = new Vector()-->Line_23 $$ files.add(path)[ FD ]
Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))-->Line_23 $$ files.add(path)[ FD ]
Line_22 $$ if (contentType.startsWith("image")) -->Line_24 $$ vTransparency.add(htTransparency.get(vRank.get(i)))[ CD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_24 $$ vTransparency.add(htTransparency.get(vRank.get(i)))[ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_24 $$ vTransparency.add(htTransparency.get(vRank.get(i)))[ FD ]
Line_2 $$ public String merge(int width, int height) throws Exception -->Line_29 $$ if (files.size() > 1) [ CD ]
Line_5 $$ Vector files = new Vector()-->Line_29 $$ if (files.size() > 1) [ FD ]
Line_29 $$ if (files.size() > 1) -->Line_30 $$ File output = TempFiles.getFile()[ CD ]
Line_30 $$ File output = TempFiles.getFile()-->Line_30 $$ File output = TempFiles.getFile()[ CD ]
Line_29 $$ if (files.size() > 1) -->Line_31 $$ String path = output.getPath()[ CD ]
Line_31 $$ String path = output.getPath()-->Line_31 $$ String path = output.getPath()[ CD ]
Line_30 $$ File output = TempFiles.getFile()-->Line_31 $$ String path = output.getPath()[ FD ]
Line_29 $$ if (files.size() > 1) -->Line_32 $$ ImageMerger.mergeAndSave(files, vTransparency, path, ImageMerger.GIF)[ CD ]
Line_5 $$ Vector files = new Vector()-->Line_32 $$ ImageMerger.mergeAndSave(files, vTransparency, path, ImageMerger.GIF)[ FD ]
Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))-->Line_32 $$ ImageMerger.mergeAndSave(files, vTransparency, path, ImageMerger.GIF)[ FD ]
Line_31 $$ String path = output.getPath()-->Line_32 $$ ImageMerger.mergeAndSave(files, vTransparency, path, ImageMerger.GIF)[ FD ]
Line_29 $$ if (files.size() > 1) -->Line_33 $$ imageName = output.getName()[ CD ]
Line_30 $$ File output = TempFiles.getFile()-->Line_33 $$ imageName = output.getName()[ FD ]
Line_29 $$ if (files.size() > 1) -->Line_34 $$ imagePath = output.getPath()[ CD ]
Line_30 $$ File output = TempFiles.getFile()-->Line_34 $$ imagePath = output.getPath()[ FD ]
Line_29 $$ if (files.size() > 1) -->Line_35 $$ return (imageName)[ CD ]
Line_29 $$ if (files.size() > 1) -->Line_36 $$ if (files.size() == 1) [ CD ]
Line_5 $$ Vector files = new Vector()-->Line_36 $$ if (files.size() == 1) [ FD ]
Line_36 $$ if (files.size() == 1) -->Line_37 $$ File f = new File((String) files.get(0))[ CD ]
Line_5 $$ Vector files = new Vector()-->Line_37 $$ File f = new File((String) files.get(0))[ FD ]
Line_36 $$ if (files.size() == 1) -->Line_38 $$ File out = TempFiles.getFile()[ CD ]
Line_38 $$ File out = TempFiles.getFile()-->Line_38 $$ File out = TempFiles.getFile()[ CD ]
Line_36 $$ if (files.size() == 1) -->Line_39 $$ BufferedInputStream is = new BufferedInputStream(new FileInputStream(f))[ CD ]
Line_36 $$ if (files.size() == 1) -->Line_40 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out))[ CD ]
Line_36 $$ if (files.size() == 1) -->Line_41 $$ byte buf[] = new byte[1024][ CD ]
Line_36 $$ if (files.size() == 1) -->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ CD ]
Line_36 $$ if (files.size() == 1) -->Line_36 $$ if (files.size() == 1) [ CD ]
Line_39 $$ BufferedInputStream is = new BufferedInputStream(new FileInputStream(f))-->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ FD ]
Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) -->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ CD ]
Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) -->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ CD ]
Line_40 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out))-->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ FD ]
Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) -->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ FD ]
Line_36 $$ if (files.size() == 1) -->Line_43 $$ os.flush()[ CD ]
Line_40 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out))-->Line_43 $$ os.flush()[ FD ]
Line_36 $$ if (files.size() == 1) -->Line_44 $$ os.close()[ CD ]
Line_40 $$ BufferedOutputStream os = new BufferedOutputStream(new FileOutputStream(out))-->Line_44 $$ os.close()[ FD ]
Line_36 $$ if (files.size() == 1) -->Line_45 $$ is.close()[ CD ]
Line_39 $$ BufferedInputStream is = new BufferedInputStream(new FileInputStream(f))-->Line_45 $$ is.close()[ FD ]
Line_36 $$ if (files.size() == 1) -->Line_46 $$ imageName = out.getName()[ CD ]
Line_38 $$ File out = TempFiles.getFile()-->Line_46 $$ imageName = out.getName()[ FD ]
Line_36 $$ if (files.size() == 1) -->Line_47 $$ return imageName[ CD ]
Line_36 $$ if (files.size() == 1) -->Line_48 $$ return ""[ CD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_10 $$ if ((String) vImageUrls.get(i) != null) [ FD ]
Line_9 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_11 $$ c.register((String) vImageUrls.get(i))[ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_18 $$ if (vImageUrls.get(i) != null) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))[ FD ]
Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))-->Line_20 $$ if (path != null) [ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")[ FD ]
Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")-->Line_22 $$ if (contentType.startsWith("image")) [ FD ]
Line_21 $$ String contentType = c.getHeaderValue((String) vImageUrls.get(i), "content-type")-->Line_22 $$ if (contentType.startsWith("image")) [ FD ]
Line_19 $$ String path = c.getResponseFilePath((String) vImageUrls.get(i))-->Line_23 $$ files.add(path)[ FD ]
Line_17 $$ for (int i = 0; i < vImageUrls.size(); i++) -->Line_24 $$ vTransparency.add(htTransparency.get(vRank.get(i)))[ FD ]
Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) -->Line_42 $$ for (int nRead; (nRead = is.read(buf, 0, 1024)) > 0; os.write(buf, 0, nRead)) [ FD ]
