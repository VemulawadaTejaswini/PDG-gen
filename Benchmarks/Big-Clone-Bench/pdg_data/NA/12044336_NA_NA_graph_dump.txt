Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_3 $$ if (part.isMimeType("message/*")) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_3 $$ if (part.isMimeType("message/*")) [ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_3 $$ if (part.isMimeType("message/*")) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_3 $$ if (part.isMimeType("message/*")) [ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_4 $$ JcrMessage jcrMessage = new JcrMessage()[ CD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_5 $$ Message attachedMessage = null[ CD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_6 $$ if (part.getContent() instanceof Message) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_6 $$ if (part.getContent() instanceof Message) [ FD ]
Line_6 $$ if (part.getContent() instanceof Message) -->Line_7 $$ attachedMessage = (Message) part.getContent()[ CD ]
Line_5 $$ Message attachedMessage = null-->Line_7 $$ attachedMessage = (Message) part.getContent()[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_7 $$ attachedMessage = (Message) part.getContent()[ FD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_7 $$ attachedMessage = (Message) part.getContent()[ FD ]
Line_6 $$ if (part.getContent() instanceof Message) -->Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())[ CD ]
Line_5 $$ Message attachedMessage = null-->Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())[ FD ]
Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())-->Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())[ FD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_11 $$ jcrMessage.setFlags(attachedMessage.getFlags())[ CD ]
Line_4 $$ JcrMessage jcrMessage = new JcrMessage()-->Line_11 $$ jcrMessage.setFlags(attachedMessage.getFlags())[ FD ]
Line_5 $$ Message attachedMessage = null-->Line_11 $$ jcrMessage.setFlags(attachedMessage.getFlags())[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_11 $$ jcrMessage.setFlags(attachedMessage.getFlags())[ FD ]
Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())-->Line_11 $$ jcrMessage.setFlags(attachedMessage.getFlags())[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_12 $$ jcrMessage.setHeaders(attachedMessage.getAllHeaders())[ CD ]
Line_4 $$ JcrMessage jcrMessage = new JcrMessage()-->Line_12 $$ jcrMessage.setHeaders(attachedMessage.getAllHeaders())[ FD ]
Line_5 $$ Message attachedMessage = null-->Line_12 $$ jcrMessage.setHeaders(attachedMessage.getAllHeaders())[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_12 $$ jcrMessage.setHeaders(attachedMessage.getAllHeaders())[ FD ]
Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())-->Line_12 $$ jcrMessage.setHeaders(attachedMessage.getAllHeaders())[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_13 $$ jcrMessage.setReceived(attachedMessage.getReceivedDate())[ CD ]
Line_4 $$ JcrMessage jcrMessage = new JcrMessage()-->Line_13 $$ jcrMessage.setReceived(attachedMessage.getReceivedDate())[ FD ]
Line_5 $$ Message attachedMessage = null-->Line_13 $$ jcrMessage.setReceived(attachedMessage.getReceivedDate())[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_13 $$ jcrMessage.setReceived(attachedMessage.getReceivedDate())[ FD ]
Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())-->Line_13 $$ jcrMessage.setReceived(attachedMessage.getReceivedDate())[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_14 $$ jcrMessage.setExpunged(attachedMessage.isExpunged())[ CD ]
Line_4 $$ JcrMessage jcrMessage = new JcrMessage()-->Line_14 $$ jcrMessage.setExpunged(attachedMessage.isExpunged())[ FD ]
Line_5 $$ Message attachedMessage = null-->Line_14 $$ jcrMessage.setExpunged(attachedMessage.isExpunged())[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_14 $$ jcrMessage.setExpunged(attachedMessage.isExpunged())[ FD ]
Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())-->Line_14 $$ jcrMessage.setExpunged(attachedMessage.isExpunged())[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_15 $$ jcrMessage.setMessage(attachedMessage)[ CD ]
Line_4 $$ JcrMessage jcrMessage = new JcrMessage()-->Line_15 $$ jcrMessage.setMessage(attachedMessage)[ FD ]
Line_5 $$ Message attachedMessage = null-->Line_15 $$ jcrMessage.setMessage(attachedMessage)[ FD ]
Line_7 $$ attachedMessage = (Message) part.getContent()-->Line_15 $$ jcrMessage.setMessage(attachedMessage)[ FD ]
Line_9 $$ attachedMessage = new MStorMessage(null, (InputStream) part.getContent())-->Line_15 $$ jcrMessage.setMessage(attachedMessage)[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_16 $$ messages.add(jcrMessage)[ CD ]
Line_4 $$ JcrMessage jcrMessage = new JcrMessage()-->Line_16 $$ messages.add(jcrMessage)[ FD ]
Line_3 $$ if (part.isMimeType("message/*")) -->Line_17 $$ if (part.isMimeType("multipart/*")) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_17 $$ if (part.isMimeType("multipart/*")) [ FD ]
Line_17 $$ if (part.isMimeType("multipart/*")) -->Line_17 $$ if (part.isMimeType("multipart/*")) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_17 $$ if (part.isMimeType("multipart/*")) [ FD ]
Line_17 $$ if (part.isMimeType("multipart/*")) -->Line_18 $$ Multipart multi = (Multipart) part.getContent()[ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_18 $$ Multipart multi = (Multipart) part.getContent()[ FD ]
Line_17 $$ if (part.isMimeType("multipart/*")) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ CD ]
Line_17 $$ if (part.isMimeType("multipart/*")) -->Line_17 $$ if (part.isMimeType("multipart/*")) [ CD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ CD ]
Line_18 $$ Multipart multi = (Multipart) part.getContent()-->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ CD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ CD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_20 $$ appendAttachments(multi.getBodyPart(i))[ CD ]
Line_18 $$ Multipart multi = (Multipart) part.getContent()-->Line_20 $$ appendAttachments(multi.getBodyPart(i))[ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_20 $$ appendAttachments(multi.getBodyPart(i))[ FD ]
Line_17 $$ if (part.isMimeType("multipart/*")) -->Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) [ FD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) [ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_23 $$ JcrFile attachment = new JcrFile()[ CD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_24 $$ String name = null[ CD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) [ CD ]
Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) -->Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) [ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) [ FD ]
Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) -->Line_26 $$ name = part.getFileName()[ CD ]
Line_24 $$ String name = null-->Line_26 $$ name = part.getFileName()[ FD ]
Line_26 $$ name = part.getFileName()-->Line_26 $$ name = part.getFileName()[ FD ]
Line_26 $$ name = part.getFileName()-->Line_26 $$ name = part.getFileName()[ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_26 $$ name = part.getFileName()[ FD ]
Line_24 $$ String name = null-->Line_28 $$ if (attach.getName().equals(name)) [ FD ]
Line_26 $$ name = part.getFileName()-->Line_28 $$ if (attach.getName().equals(name)) [ FD ]
Line_28 $$ if (attach.getName().equals(name)) -->Line_28 $$ if (attach.getName().equals(name)) [ CD ]
Line_24 $$ String name = null-->Line_28 $$ if (attach.getName().equals(name)) [ FD ]
Line_26 $$ name = part.getFileName()-->Line_28 $$ if (attach.getName().equals(name)) [ FD ]
Line_27 $$ for (JcrFile attach : attachments) -->Line_28 $$ if (attach.getName().equals(name)) [ FD ]
Line_28 $$ if (attach.getName().equals(name)) -->Line_29 $$ return[ CD ]
Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) -->Line_33 $$ String[] contentId = part.getHeader("Content-Id")[ CD ]
Line_33 $$ String[] contentId = part.getHeader("Content-Id")-->Line_33 $$ String[] contentId = part.getHeader("Content-Id")[ CD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_33 $$ String[] contentId = part.getHeader("Content-Id")[ FD ]
Line_25 $$ if (StringUtils.isNotEmpty(part.getFileName())) -->Line_34 $$ if (contentId != null && contentId.length > 0) [ CD ]
Line_34 $$ if (contentId != null && contentId.length > 0) -->Line_35 $$ name = contentId[0][ CD ]
Line_24 $$ String name = null-->Line_35 $$ name = contentId[0][ FD ]
Line_26 $$ name = part.getFileName()-->Line_35 $$ name = contentId[0][ FD ]
Line_35 $$ name = contentId[0]-->Line_35 $$ name = contentId[0][ FD ]
Line_34 $$ if (contentId != null && contentId.length > 0) -->Line_37 $$ name = "attachment"[ CD ]
Line_24 $$ String name = null-->Line_37 $$ name = "attachment"[ FD ]
Line_26 $$ name = part.getFileName()-->Line_37 $$ name = "attachment"[ FD ]
Line_35 $$ name = contentId[0]-->Line_37 $$ name = "attachment"[ FD ]
Line_37 $$ name = "attachment"-->Line_37 $$ name = "attachment"[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_40 $$ int count = 0[ CD ]
Line_24 $$ String name = null-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_26 $$ name = part.getFileName()-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_35 $$ name = contentId[0]-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_37 $$ name = "attachment"-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_42 $$ if (attach.getName().equals(name)) -->Line_42 $$ if (attach.getName().equals(name)) [ CD ]
Line_24 $$ String name = null-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_26 $$ name = part.getFileName()-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_35 $$ name = contentId[0]-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_37 $$ name = "attachment"-->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_27 $$ for (JcrFile attach : attachments) -->Line_42 $$ if (attach.getName().equals(name)) [ FD ]
Line_42 $$ if (attach.getName().equals(name)) -->Line_43 $$ count++[ CD ]
Line_40 $$ int count = 0-->Line_43 $$ count++[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_46 $$ if (count > 0) [ CD ]
Line_40 $$ int count = 0-->Line_46 $$ if (count > 0) [ FD ]
Line_46 $$ if (count > 0) -->Line_47 $$ name += "_" + count[ CD ]
Line_24 $$ String name = null-->Line_47 $$ name += "_" + count[ FD ]
Line_26 $$ name = part.getFileName()-->Line_47 $$ name += "_" + count[ FD ]
Line_35 $$ name = contentId[0]-->Line_47 $$ name += "_" + count[ FD ]
Line_37 $$ name = "attachment"-->Line_47 $$ name += "_" + count[ FD ]
Line_47 $$ name += "_" + count-->Line_47 $$ name += "_" + count[ FD ]
Line_40 $$ int count = 0-->Line_47 $$ name += "_" + count[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_49 $$ attachment.setName(name)[ CD ]
Line_23 $$ JcrFile attachment = new JcrFile()-->Line_49 $$ attachment.setName(name)[ FD ]
Line_24 $$ String name = null-->Line_49 $$ attachment.setName(name)[ FD ]
Line_26 $$ name = part.getFileName()-->Line_49 $$ attachment.setName(name)[ FD ]
Line_35 $$ name = contentId[0]-->Line_49 $$ attachment.setName(name)[ FD ]
Line_37 $$ name = "attachment"-->Line_49 $$ attachment.setName(name)[ FD ]
Line_47 $$ name += "_" + count-->Line_49 $$ attachment.setName(name)[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_50 $$ ByteArrayOutputStream pout = new ByteArrayOutputStream()[ CD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_51 $$ IOUtils.copy(part.getInputStream(), pout)[ CD ]
Line_50 $$ ByteArrayOutputStream pout = new ByteArrayOutputStream()-->Line_51 $$ IOUtils.copy(part.getInputStream(), pout)[ FD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_51 $$ IOUtils.copy(part.getInputStream(), pout)[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_52 $$ attachment.setDataProvider(new JcrDataProviderImpl(TYPE.BYTES, pout.toByteArray()))[ CD ]
Line_23 $$ JcrFile attachment = new JcrFile()-->Line_52 $$ attachment.setDataProvider(new JcrDataProviderImpl(TYPE.BYTES, pout.toByteArray()))[ FD ]
Line_50 $$ ByteArrayOutputStream pout = new ByteArrayOutputStream()-->Line_52 $$ attachment.setDataProvider(new JcrDataProviderImpl(TYPE.BYTES, pout.toByteArray()))[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_53 $$ attachment.setMimeType(part.getContentType())[ CD ]
Line_23 $$ JcrFile attachment = new JcrFile()-->Line_53 $$ attachment.setMimeType(part.getContentType())[ FD ]
Line_2 $$ private void appendAttachments(final Part part) throws MessagingException, IOException -->Line_53 $$ attachment.setMimeType(part.getContentType())[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_54 $$ attachment.setLastModified(java.util.Calendar.getInstance())[ CD ]
Line_23 $$ JcrFile attachment = new JcrFile()-->Line_54 $$ attachment.setLastModified(java.util.Calendar.getInstance())[ FD ]
Line_22 $$ if (Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()) || StringUtils.isNotEmpty(part.getFileName())) -->Line_55 $$ attachments.add(attachment)[ CD ]
Line_23 $$ JcrFile attachment = new JcrFile()-->Line_55 $$ attachments.add(attachment)[ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_19 $$ for (int i = 0; i < multi.getCount(); i++) [ FD ]
Line_19 $$ for (int i = 0; i < multi.getCount(); i++) -->Line_20 $$ appendAttachments(multi.getBodyPart(i))[ FD ]
