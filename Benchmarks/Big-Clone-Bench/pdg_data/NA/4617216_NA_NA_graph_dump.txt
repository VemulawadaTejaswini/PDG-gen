Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Object downloadObject() throws CommunicationException, FileNotFoundException, InvalidClassException, ClassNotFoundException [ CD ]
Line_2 $$ public Object downloadObject() throws CommunicationException, FileNotFoundException, InvalidClassException, ClassNotFoundException -->Line_3 $$ Object returnObject = null[ CD ]
Line_2 $$ public Object downloadObject() throws CommunicationException, FileNotFoundException, InvalidClassException, ClassNotFoundException -->Line_4 $$ String requestStr = new String()[ CD ]
Line_2 $$ public Object downloadObject() throws CommunicationException, FileNotFoundException, InvalidClassException, ClassNotFoundException -->Line_5 $$ HttpURLConnection connection = null[ CD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) [ CD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) [ CD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) [ CD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()[ CD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()[ FD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ CD ]
Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"-->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ FD ]
Line_4 $$ String requestStr = new String()-->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ FD ]
Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()-->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ FD ]
Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()-->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_12 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_12 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ URL url = new URL(urlString)-->Line_12 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_13 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_13 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_14 $$ connection.setRequestMethod("POST")[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_14 $$ connection.setRequestMethod("POST")[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_15 $$ connection.setDoOutput(true)[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_15 $$ connection.setDoOutput(true)[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_16 $$ connection.setDoInput(true)[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_16 $$ connection.setDoInput(true)[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_17 $$ connection.connect()[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_17 $$ connection.connect()[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_18 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_18 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())[ FD ]
Line_18 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_19 $$ out.println(requestStr)[ FD ]
Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"-->Line_19 $$ out.println(requestStr)[ FD ]
Line_4 $$ String requestStr = new String()-->Line_19 $$ out.println(requestStr)[ FD ]
Line_18 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_20 $$ out.close()[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_21 $$ System.out.println("HTTPCommunication.downloadObject() - Response:" + connection.getResponseCode() + " : " + connection.getResponseMessage())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_21 $$ System.out.println("HTTPCommunication.downloadObject() - Response:" + connection.getResponseCode() + " : " + connection.getResponseMessage())[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_21 $$ System.out.println("HTTPCommunication.downloadObject() - Response:" + connection.getResponseCode() + " : " + connection.getResponseMessage())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_21 $$ System.out.println("HTTPCommunication.downloadObject() - Response:" + connection.getResponseCode() + " : " + connection.getResponseMessage())[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) [ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) [ FD ]
Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) -->Line_23 $$ GZIPInputStream gzipIn = new GZIPInputStream(connection.getInputStream())[ CD ]
Line_5 $$ HttpURLConnection connection = null-->Line_23 $$ GZIPInputStream gzipIn = new GZIPInputStream(connection.getInputStream())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_23 $$ GZIPInputStream gzipIn = new GZIPInputStream(connection.getInputStream())[ FD ]
Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) -->Line_24 $$ ObjectInputStream objectIn = new ObjectInputStream(gzipIn)[ CD ]
Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) -->Line_25 $$ returnObject = objectIn.readObject()[ CD ]
Line_3 $$ Object returnObject = null-->Line_25 $$ returnObject = objectIn.readObject()[ FD ]
Line_25 $$ returnObject = objectIn.readObject()-->Line_25 $$ returnObject = objectIn.readObject()[ FD ]
Line_25 $$ returnObject = objectIn.readObject()-->Line_25 $$ returnObject = objectIn.readObject()[ CD ]
Line_24 $$ ObjectInputStream objectIn = new ObjectInputStream(gzipIn)-->Line_25 $$ returnObject = objectIn.readObject()[ FD ]
Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) -->Line_26 $$ objectIn.close()[ CD ]
Line_24 $$ ObjectInputStream objectIn = new ObjectInputStream(gzipIn)-->Line_26 $$ objectIn.close()[ FD ]
Line_22 $$ if (connection.getResponseCode() == connection.HTTP_OK) -->Line_27 $$ if (connection.getResponseCode() == connection.HTTP_NOT_FOUND) [ CD ]
Line_5 $$ HttpURLConnection connection = null-->Line_27 $$ if (connection.getResponseCode() == connection.HTTP_NOT_FOUND) [ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_27 $$ if (connection.getResponseCode() == connection.HTTP_NOT_FOUND) [ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_28 $$ throw new FileNotFoundException(connection.getResponseMessage())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_28 $$ throw new FileNotFoundException(connection.getResponseMessage())[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_30 $$ throw new CommunicationException(connection.getResponseMessage(), connection.getResponseCode())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_30 $$ throw new CommunicationException(connection.getResponseMessage(), connection.getResponseCode())[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_30 $$ throw new CommunicationException(connection.getResponseMessage(), connection.getResponseCode())[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_30 $$ throw new CommunicationException(connection.getResponseMessage(), connection.getResponseCode())[ FD ]
Line_5 $$ HttpURLConnection connection = null-->Line_48 $$ if (connection != null) [ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_48 $$ if (connection != null) [ FD ]
Line_48 $$ if (connection != null) -->Line_49 $$ connection.disconnect()[ CD ]
Line_5 $$ HttpURLConnection connection = null-->Line_49 $$ connection.disconnect()[ FD ]
Line_12 $$ connection = (HttpURLConnection) url.openConnection()-->Line_49 $$ connection.disconnect()[ FD ]
Line_2 $$ public Object downloadObject() throws CommunicationException, FileNotFoundException, InvalidClassException, ClassNotFoundException -->Line_52 $$ return returnObject[ CD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) [ FD ]
Line_8 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) -->Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()[ FD ]
Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()-->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ FD ]
Line_9 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next()-->Line_10 $$ requestStr += URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&"[ FD ]
