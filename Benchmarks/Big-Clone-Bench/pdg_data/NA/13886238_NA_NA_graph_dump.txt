Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void init() throws GateException [ CD ]
Line_2 $$ public void init() throws GateException -->Line_3 $$ if (reportFile == null)[ CD ]
Line_2 $$ public void init() throws GateException -->Line_4 $$ boolean restarting = false[ CD ]
Line_2 $$ public void init() throws GateException -->Line_5 $$ if (!reportFile.getParentFile().exists() && !reportFile.getParentFile().mkdirs()) [ CD ]
Line_5 $$ if (!reportFile.getParentFile().exists() && !reportFile.getParentFile().mkdirs()) -->Line_5 $$ if (!reportFile.getParentFile().exists() && !reportFile.getParentFile().mkdirs()) [ CD ]
Line_5 $$ if (!reportFile.getParentFile().exists() && !reportFile.getParentFile().mkdirs()) -->Line_5 $$ if (!reportFile.getParentFile().exists() && !reportFile.getParentFile().mkdirs()) [ CD ]
Line_2 $$ public void init() throws GateException -->Line_8 $$ File backupFile = new File(reportFile.getAbsolutePath() + ".bak")[ CD ]
Line_2 $$ public void init() throws GateException -->Line_9 $$ if (reportFile.exists()) [ CD ]
Line_9 $$ if (reportFile.exists()) -->Line_9 $$ if (reportFile.exists()) [ CD ]
Line_9 $$ if (reportFile.exists()) -->Line_10 $$ restarting = true[ CD ]
Line_4 $$ boolean restarting = false-->Line_10 $$ restarting = true[ FD ]
Line_10 $$ restarting = true-->Line_10 $$ restarting = true[ FD ]
Line_9 $$ if (reportFile.exists()) -->Line_11 $$ logger.info("Existing report file found at \"" + reportFile.getAbsolutePath() + "\", attempting to restart")[ CD ]
Line_9 $$ if (reportFile.exists()) -->Line_12 $$ if (!reportFile.renameTo(backupFile)) [ CD ]
Line_12 $$ if (!reportFile.renameTo(backupFile)) -->Line_12 $$ if (!reportFile.renameTo(backupFile)) [ CD ]
Line_12 $$ if (!reportFile.renameTo(backupFile)) -->Line_12 $$ if (!reportFile.renameTo(backupFile)) [ CD ]
Line_8 $$ File backupFile = new File(reportFile.getAbsolutePath() + ".bak")-->Line_12 $$ if (!reportFile.renameTo(backupFile)) [ FD ]
Line_19 $$ int read = in.read(buff)-->Line_19 $$ int read = in.read(buff)[ CD ]
Line_15 $$ InputStream in = new BufferedInputStream(new FileInputStream(reportFile))-->Line_19 $$ int read = in.read(buff)[ FD ]
Line_14 $$ byte[] buff = new byte[32 * 1024]-->Line_19 $$ int read = in.read(buff)[ FD ]
Line_19 $$ int read = in.read(buff)-->Line_20 $$ while (read != -1) [ FD ]
Line_20 $$ while (read != -1) -->Line_21 $$ out.write(buff, 0, read)[ CD ]
Line_17 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(backupFile))-->Line_21 $$ out.write(buff, 0, read)[ FD ]
Line_14 $$ byte[] buff = new byte[32 * 1024]-->Line_21 $$ out.write(buff, 0, read)[ FD ]
Line_19 $$ int read = in.read(buff)-->Line_21 $$ out.write(buff, 0, read)[ FD ]
Line_20 $$ while (read != -1) -->Line_22 $$ read = in.read(buff)[ CD ]
Line_22 $$ read = in.read(buff)-->Line_22 $$ read = in.read(buff)[ FD ]
Line_19 $$ int read = in.read(buff)-->Line_22 $$ read = in.read(buff)[ FD ]
Line_22 $$ read = in.read(buff)-->Line_22 $$ read = in.read(buff)[ CD ]
Line_15 $$ InputStream in = new BufferedInputStream(new FileInputStream(reportFile))-->Line_22 $$ read = in.read(buff)[ FD ]
Line_14 $$ byte[] buff = new byte[32 * 1024]-->Line_22 $$ read = in.read(buff)[ FD ]
Line_17 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(backupFile))-->Line_25 $$ out.close()[ FD ]
Line_15 $$ InputStream in = new BufferedInputStream(new FileInputStream(reportFile))-->Line_28 $$ in.close()[ FD ]
Line_2 $$ public void init() throws GateException -->Line_49 $$ if (restarting) [ CD ]
Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)-->Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)[ CD ]
Line_53 $$ InputStream bakIn = new BufferedInputStream(new FileInputStream(backupFile))-->Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)[ FD ]
Line_57 $$ while (xer.hasNext()) -->Line_57 $$ while (xer.hasNext()) [ CD ]
Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)-->Line_57 $$ while (xer.hasNext()) [ FD ]
Line_57 $$ while (xer.hasNext()) -->Line_58 $$ event = xer.nextEvent()[ CD ]
Line_58 $$ event = xer.nextEvent()-->Line_58 $$ event = xer.nextEvent()[ FD ]
Line_56 $$ XMLEvent event-->Line_58 $$ event = xer.nextEvent()[ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_58 $$ event = xer.nextEvent()[ CD ]
Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)-->Line_58 $$ event = xer.nextEvent()[ FD ]
Line_57 $$ while (xer.hasNext()) -->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ CD ]
Line_58 $$ event = xer.nextEvent()-->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_56 $$ XMLEvent event-->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_56 $$ XMLEvent event-->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_66 $$ while (xer.hasNext()) -->Line_66 $$ while (xer.hasNext()) [ CD ]
Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)-->Line_66 $$ while (xer.hasNext()) [ FD ]
Line_66 $$ while (xer.hasNext()) -->Line_67 $$ event = xer.nextEvent()[ CD ]
Line_67 $$ event = xer.nextEvent()-->Line_67 $$ event = xer.nextEvent()[ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_67 $$ event = xer.nextEvent()[ FD ]
Line_56 $$ XMLEvent event-->Line_67 $$ event = xer.nextEvent()[ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_67 $$ event = xer.nextEvent()[ CD ]
Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)-->Line_67 $$ event = xer.nextEvent()[ FD ]
Line_66 $$ while (xer.hasNext()) -->Line_68 $$ events.add(event)[ CD ]
Line_63 $$ List<XMLEvent> events = new LinkedList<XMLEvent>()-->Line_68 $$ events.add(event)[ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_68 $$ events.add(event)[ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_68 $$ events.add(event)[ FD ]
Line_56 $$ XMLEvent event-->Line_68 $$ events.add(event)[ FD ]
Line_66 $$ while (xer.hasNext()) -->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ CD ]
Line_67 $$ event = xer.nextEvent()-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_56 $$ XMLEvent event-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_56 $$ XMLEvent event-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) -->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ CD ]
Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ FD ]
Line_64 $$ String currentReturnCode = null-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ FD ]
Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ CD ]
Line_67 $$ event = xer.nextEvent()-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ FD ]
Line_56 $$ XMLEvent event-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ FD ]
Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) -->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ CD ]
Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ FD ]
Line_65 $$ String currentDocid = null-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ FD ]
Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ CD ]
Line_67 $$ event = xer.nextEvent()-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ FD ]
Line_56 $$ XMLEvent event-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ FD ]
Line_66 $$ while (xer.hasNext()) -->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ CD ]
Line_67 $$ event = xer.nextEvent()-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_56 $$ XMLEvent event-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_56 $$ XMLEvent event-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) -->Line_74 $$ if (currentReturnCode.equals("SUCCESS") && currentDocid != null) [ CD ]
Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()-->Line_74 $$ if (currentReturnCode.equals("SUCCESS") && currentDocid != null) [ FD ]
Line_64 $$ String currentReturnCode = null-->Line_74 $$ if (currentReturnCode.equals("SUCCESS") && currentDocid != null) [ FD ]
Line_74 $$ if (currentReturnCode.equals("SUCCESS") && currentDocid != null) -->Line_75 $$ completedDocuments.add(currentDocid)[ CD ]
Line_51 $$ Set<String> completedDocuments = new HashSet<String>()-->Line_75 $$ completedDocuments.add(currentDocid)[ FD ]
Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()-->Line_75 $$ completedDocuments.add(currentDocid)[ FD ]
Line_65 $$ String currentDocid = null-->Line_75 $$ completedDocuments.add(currentDocid)[ FD ]
Line_76 $$ for (XMLEvent evt : events) -->Line_77 $$ Tools.writeStaxEvent(evt, reportWriter)[ FD ]
Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) -->Line_80 $$ events.clear()[ CD ]
Line_63 $$ List<XMLEvent> events = new LinkedList<XMLEvent>()-->Line_80 $$ events.clear()[ FD ]
Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) -->Line_81 $$ currentReturnCode = null[ CD ]
Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()-->Line_81 $$ currentReturnCode = null[ FD ]
Line_81 $$ currentReturnCode = null-->Line_81 $$ currentReturnCode = null[ FD ]
Line_64 $$ String currentReturnCode = null-->Line_81 $$ currentReturnCode = null[ FD ]
Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) -->Line_82 $$ currentDocid = null[ CD ]
Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()-->Line_82 $$ currentDocid = null[ FD ]
Line_82 $$ currentDocid = null-->Line_82 $$ currentDocid = null[ FD ]
Line_65 $$ String currentDocid = null-->Line_82 $$ currentDocid = null[ FD ]
Line_66 $$ while (xer.hasNext()) -->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ CD ]
Line_67 $$ event = xer.nextEvent()-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_56 $$ XMLEvent event-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_56 $$ XMLEvent event-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_54 $$ XMLEventReader xer = staxInputFactory.createXMLEventReader(bakIn)-->Line_91 $$ xer.close()[ FD ]
Line_53 $$ InputStream bakIn = new BufferedInputStream(new FileInputStream(backupFile))-->Line_92 $$ bakIn.close()[ FD ]
Line_8 $$ File backupFile = new File(reportFile.getAbsolutePath() + ".bak")-->Line_93 $$ backupFile.delete()[ FD ]
Line_95 $$ List<String> unprocessedDocs = new ArrayList<String>()-->Line_96 $$ unprocessedDocs.addAll(Arrays.asList(documentIDs))[ FD ]
Line_95 $$ List<String> unprocessedDocs = new ArrayList<String>()-->Line_97 $$ unprocessedDocs.removeAll(completedDocuments)[ FD ]
Line_51 $$ Set<String> completedDocuments = new HashSet<String>()-->Line_97 $$ unprocessedDocs.removeAll(completedDocuments)[ FD ]
Line_95 $$ List<String> unprocessedDocs = new ArrayList<String>()-->Line_98 $$ unprocessedDocumentIDs = unprocessedDocs.toArray(new String[unprocessedDocs.size()])[ FD ]
Line_95 $$ List<String> unprocessedDocs = new ArrayList<String>()-->Line_98 $$ unprocessedDocumentIDs = unprocessedDocs.toArray(new String[unprocessedDocs.size()])[ FD ]
Line_22 $$ read = in.read(buff)-->Line_20 $$ while (read != -1) [ FD ]
Line_22 $$ read = in.read(buff)-->Line_20 $$ while (read != -1) [ FD ]
Line_22 $$ read = in.read(buff)-->Line_21 $$ out.write(buff, 0, read)[ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_58 $$ event = xer.nextEvent()-->Line_59 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_68 $$ events.add(event)[ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_69 $$ if (event.isStartElement() && event.asStartElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()[ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()[ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_73 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("processResult")) [ FD ]
Line_70 $$ currentReturnCode = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "returnCode")).getValue()-->Line_74 $$ if (currentReturnCode.equals("SUCCESS") && currentDocid != null) [ FD ]
Line_81 $$ currentReturnCode = null-->Line_74 $$ if (currentReturnCode.equals("SUCCESS") && currentDocid != null) [ FD ]
Line_71 $$ currentDocid = event.asStartElement().getAttributeByName(new QName(XMLConstants.NULL_NS_URI, "id")).getValue()-->Line_75 $$ completedDocuments.add(currentDocid)[ FD ]
Line_82 $$ currentDocid = null-->Line_75 $$ completedDocuments.add(currentDocid)[ FD ]
Line_76 $$ for (XMLEvent evt : events) -->Line_77 $$ Tools.writeStaxEvent(evt, reportWriter)[ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
Line_67 $$ event = xer.nextEvent()-->Line_84 $$ if (event.isEndElement() && event.asEndElement().getName().getLocalPart().equals("documents")) [ FD ]
