Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void start() [ CD ]
Line_2 $$ public void start() -->Line_3 $$ System.err.println("start AutoplotApplet " + VERSION + " @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_4 $$ super.start()[ CD ]
Line_2 $$ public void start() -->Line_6 $$ model.setExceptionHandler(new ExceptionHandler() [ CD ]
Line_6 $$ model.setExceptionHandler(new ExceptionHandler() -->Line_8 $$ t.printStackTrace()[ CD ]
Line_6 $$ model.setExceptionHandler(new ExceptionHandler() -->Line_8 $$ t.printStackTrace()[ FD ]
Line_6 $$ model.setExceptionHandler(new ExceptionHandler() -->Line_11 $$ t.printStackTrace()[ CD ]
Line_6 $$ model.setExceptionHandler(new ExceptionHandler() -->Line_11 $$ t.printStackTrace()[ FD ]
Line_6 $$ model.setExceptionHandler(new ExceptionHandler() -->Line_11 $$ t.printStackTrace()[ FD ]
Line_2 $$ public void start() -->Line_14 $$ model.setApplet(true)[ CD ]
Line_2 $$ public void start() -->Line_15 $$ model.dom.getOptions().setAutolayout(false)[ CD ]
Line_2 $$ public void start() -->Line_16 $$ System.err.println("ApplicationModel created @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_17 $$ model.addDasPeersToApp()[ CD ]
Line_2 $$ public void start() -->Line_18 $$ System.err.println("done addDasPeersToApp @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_25 $$ dom = model.getDocumentModel()[ CD ]
Line_2 $$ public void start() -->Line_26 $$ String debug = getParameter("debug")[ CD ]
Line_2 $$ public void start() -->Line_27 $$ if (debug != null && !debug.equals("true")) [ CD ]
Line_27 $$ if (debug != null && !debug.equals("true")) -->Line_27 $$ if (debug != null && !debug.equals("true")) [ CD ]
Line_2 $$ public void start() -->Line_29 $$ int width = getIntParameter("width", 700)[ CD ]
Line_2 $$ public void start() -->Line_30 $$ int height = getIntParameter("height", 400)[ CD ]
Line_2 $$ public void start() -->Line_31 $$ String fontParam = getStringParameter("font", "")[ CD ]
Line_2 $$ public void start() -->Line_32 $$ String column = getStringParameter("column", "")[ CD ]
Line_2 $$ public void start() -->Line_33 $$ String row = getStringParameter("row", "")[ CD ]
Line_2 $$ public void start() -->Line_34 $$ String scolor = getStringParameter("color", "")[ CD ]
Line_2 $$ public void start() -->Line_35 $$ String srenderType = getStringParameter("renderType", "")[ CD ]
Line_2 $$ public void start() -->Line_36 $$ String stimeRange = getStringParameter("timeRange", "")[ CD ]
Line_2 $$ public void start() -->Line_37 $$ String sfillColor = getStringParameter("fillColor", "")[ CD ]
Line_2 $$ public void start() -->Line_38 $$ String sforegroundColor = getStringParameter("foregroundColor", "")[ CD ]
Line_2 $$ public void start() -->Line_39 $$ String sbackgroundColor = getStringParameter("backgroundColor", "")[ CD ]
Line_2 $$ public void start() -->Line_40 $$ String title = getStringParameter("plot.title", "")[ CD ]
Line_2 $$ public void start() -->Line_41 $$ String xlabel = getStringParameter("plot.xaxis.label", "")[ CD ]
Line_2 $$ public void start() -->Line_42 $$ String xrange = getStringParameter("plot.xaxis.range", "")[ CD ]
Line_2 $$ public void start() -->Line_43 $$ String xlog = getStringParameter("plot.xaxis.log", "")[ CD ]
Line_2 $$ public void start() -->Line_44 $$ String xdrawTickLabels = getStringParameter("plot.xaxis.drawTickLabels", "")[ CD ]
Line_2 $$ public void start() -->Line_45 $$ String ylabel = getStringParameter("plot.yaxis.label", "")[ CD ]
Line_2 $$ public void start() -->Line_46 $$ String yrange = getStringParameter("plot.yaxis.range", "")[ CD ]
Line_2 $$ public void start() -->Line_47 $$ String ylog = getStringParameter("plot.yaxis.log", "")[ CD ]
Line_2 $$ public void start() -->Line_48 $$ String ydrawTickLabels = getStringParameter("plot.yaxis.drawTickLabels", "")[ CD ]
Line_2 $$ public void start() -->Line_49 $$ String zlabel = getStringParameter("plot.zaxis.label", "")[ CD ]
Line_2 $$ public void start() -->Line_50 $$ String zrange = getStringParameter("plot.zaxis.range", "")[ CD ]
Line_2 $$ public void start() -->Line_51 $$ String zlog = getStringParameter("plot.zaxis.log", "")[ CD ]
Line_2 $$ public void start() -->Line_52 $$ String zdrawTickLabels = getStringParameter("plot.zaxis.drawTickLabels", "")[ CD ]
Line_2 $$ public void start() -->Line_53 $$ statusCallback = getStringParameter("statusCallback", "")[ CD ]
Line_2 $$ public void start() -->Line_54 $$ timeCallback = getStringParameter("timeCallback", "")[ CD ]
Line_2 $$ public void start() -->Line_55 $$ clickCallback = getStringParameter("clickCallback", "")[ CD ]
Line_2 $$ public void start() -->Line_56 $$ if (srenderType.equals("fill_to_zero")) [ CD ]
Line_56 $$ if (srenderType.equals("fill_to_zero")) -->Line_56 $$ if (srenderType.equals("fill_to_zero")) [ CD ]
Line_2 $$ public void start() -->Line_59 $$ setInitializationStatus("readParameters")[ CD ]
Line_2 $$ public void start() -->Line_60 $$ System.err.println("done readParameters @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_61 $$ String vap = getParameter("vap")[ CD ]
Line_2 $$ public void start() -->Line_62 $$ if (vap != null) [ CD ]
Line_2 $$ public void start() -->Line_90 $$ appmodel.getCanvas().setSize(width, height)[ CD ]
Line_2 $$ public void start() -->Line_91 $$ appmodel.getCanvas().revalidate()[ CD ]
Line_2 $$ public void start() -->Line_92 $$ appmodel.getCanvas().setPrintingTag("")[ CD ]
Line_2 $$ public void start() -->Line_93 $$ dom.getOptions().setAutolayout("true".equals(getParameter("autolayout")))[ CD ]
Line_2 $$ public void start() -->Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) [ CD ]
Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) -->Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) [ CD ]
Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) -->Line_95 $$ if (!row.equals("")) [ CD ]
Line_95 $$ if (!row.equals("")) -->Line_95 $$ if (!row.equals("")) [ CD ]
Line_95 $$ if (!row.equals("")) -->Line_95 $$ if (!row.equals("")) [ CD ]
Line_95 $$ if (!row.equals("")) -->Line_96 $$ dom.getController().getCanvas().getController().setRow(row)[ CD ]
Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) -->Line_98 $$ if (!column.equals("")) [ CD ]
Line_98 $$ if (!column.equals("")) -->Line_98 $$ if (!column.equals("")) [ CD ]
Line_98 $$ if (!column.equals("")) -->Line_98 $$ if (!column.equals("")) [ CD ]
Line_98 $$ if (!column.equals("")) -->Line_99 $$ dom.getController().getCanvas().getController().setColumn(column)[ CD ]
Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) -->Line_101 $$ dom.getCanvases(0).getRows(0).setTop("0%")[ CD ]
Line_94 $$ if (!dom.getOptions().isAutolayout() && vap == null) -->Line_102 $$ dom.getCanvases(0).getRows(0).setBottom("100%")[ CD ]
Line_2 $$ public void start() -->Line_104 $$ if (!fontParam.equals("")) [ CD ]
Line_104 $$ if (!fontParam.equals("")) -->Line_104 $$ if (!fontParam.equals("")) [ CD ]
Line_104 $$ if (!fontParam.equals("")) -->Line_104 $$ if (!fontParam.equals("")) [ CD ]
Line_104 $$ if (!fontParam.equals("")) -->Line_105 $$ appmodel.canvas.setBaseFont(Font.decode(fontParam))[ CD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_110 $$ resetZoom()[ CD ]
Line_2 $$ public void start() -->Line_113 $$ dom.getPlots(0).getController().getDasPlot().getDasMouseInputAdapter().addMenuItem(item)[ CD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_116 $$ addOverview()[ CD ]
Line_2 $$ public void start() -->Line_119 $$ dom.getPlots(0).getController().getDasPlot().getDasMouseInputAdapter().addMenuItem(overviewMenuItem)[ CD ]
Line_2 $$ public void start() -->Line_120 $$ if (sforegroundColor != null && !sforegroundColor.equals("")) [ CD ]
Line_120 $$ if (sforegroundColor != null && !sforegroundColor.equals("")) -->Line_120 $$ if (sforegroundColor != null && !sforegroundColor.equals("")) [ CD ]
Line_120 $$ if (sforegroundColor != null && !sforegroundColor.equals("")) -->Line_121 $$ appmodel.canvas.setForeground(Color.decode(sforegroundColor))[ CD ]
Line_2 $$ public void start() -->Line_123 $$ if (sbackgroundColor != null && !sbackgroundColor.equals("")) [ CD ]
Line_123 $$ if (sbackgroundColor != null && !sbackgroundColor.equals("")) -->Line_123 $$ if (sbackgroundColor != null && !sbackgroundColor.equals("")) [ CD ]
Line_123 $$ if (sbackgroundColor != null && !sbackgroundColor.equals("")) -->Line_124 $$ appmodel.canvas.setBackground(Color.decode(sbackgroundColor))[ CD ]
Line_2 $$ public void start() -->Line_126 $$ getContentPane().setLayout(new BorderLayout())[ CD ]
Line_2 $$ public void start() -->Line_127 $$ System.err.println("done set parameters @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_128 $$ String surl = getParameter("url")[ CD ]
Line_2 $$ public void start() -->Line_129 $$ String process = getStringParameter("process", "")[ CD ]
Line_2 $$ public void start() -->Line_130 $$ String script = getStringParameter("script", "")[ CD ]
Line_2 $$ public void start() -->Line_131 $$ if (surl == null) [ CD ]
Line_131 $$ if (surl == null) -->Line_132 $$ surl = getParameter("dataSetURL")[ CD ]
Line_2 $$ public void start() -->Line_134 $$ if (surl != null && !surl.equals("")) [ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_134 $$ if (surl != null && !surl.equals("")) [ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_148 $$ if (!stimeRange.equals("")) [ CD ]
Line_148 $$ if (!stimeRange.equals("")) -->Line_148 $$ if (!stimeRange.equals("")) [ CD ]
Line_148 $$ if (!stimeRange.equals("")) -->Line_148 $$ if (!stimeRange.equals("")) [ CD ]
Line_148 $$ if (!stimeRange.equals("")) -->Line_149 $$ timeRange1 = DatumRangeUtil.parseTimeRangeValid(stimeRange)[ CD ]
Line_148 $$ if (!stimeRange.equals("")) -->Line_150 $$ TimeSeriesBrowse tsb = dsource.getCapability(TimeSeriesBrowse.class)[ CD ]
Line_148 $$ if (!stimeRange.equals("")) -->Line_151 $$ if (tsb != null) [ CD ]
Line_151 $$ if (tsb != null) -->Line_152 $$ System.err.println("do tsb.setTimeRange @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_151 $$ if (tsb != null) -->Line_153 $$ tsb.setTimeRange(timeRange1)[ CD ]
Line_151 $$ if (tsb != null) -->Line_154 $$ System.err.println("done tsb.setTimeRange @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_158 $$ if (dsource != null) [ CD ]
Line_158 $$ if (dsource != null) -->Line_159 $$ TimeSeriesBrowse tsb = dsource.getCapability(TimeSeriesBrowse.class)[ CD ]
Line_158 $$ if (dsource != null) -->Line_160 $$ if (tsb == null) [ CD ]
Line_165 $$ if (dsource.getClass().toString().contains("CsvDataSource"))-->Line_165 $$ if (dsource.getClass().toString().contains("CsvDataSource"))[ CD ]
Line_165 $$ if (dsource.getClass().toString().contains("CsvDataSource"))-->Line_165 $$ System.err.println(" WHY IS THIS CsvDataSource!?!?")[ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ FD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_168 $$ System.err.printf("ds[%d]=%s\n", i, ds.slice(i))[ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_168 $$ System.err.printf("ds[%d]=%s\n", i, ds.slice(i))[ FD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_168 $$ System.err.printf("ds[%d]=%s\n", i, ds.slice(i))[ FD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_177 $$ System.err.println("do setDataSource @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_178 $$ appmodel.setDataSource(dsource)[ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_179 $$ System.err.println("done setDataSource @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_180 $$ setInitializationStatus("dataSourceSet")[ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_181 $$ if (stimeRange != null && !stimeRange.equals("")) [ CD ]
Line_181 $$ if (stimeRange != null && !stimeRange.equals("")) -->Line_181 $$ if (stimeRange != null && !stimeRange.equals("")) [ CD ]
Line_181 $$ if (stimeRange != null && !stimeRange.equals("")) -->Line_189 $$ if (UnitsUtil.isTimeLocation(dom.getTimeRange().getUnits())) [ CD ]
Line_189 $$ if (UnitsUtil.isTimeLocation(dom.getTimeRange().getUnits())) -->Line_189 $$ if (UnitsUtil.isTimeLocation(dom.getTimeRange().getUnits())) [ CD ]
Line_189 $$ if (UnitsUtil.isTimeLocation(dom.getTimeRange().getUnits())) -->Line_190 $$ dom.setTimeRange(timeRange1)[ CD ]
Line_134 $$ if (surl != null && !surl.equals("")) -->Line_193 $$ setInitializationStatus("dataSetLoaded")[ CD ]
Line_2 $$ public void start() -->Line_195 $$ System.err.println("done dataSetLoaded @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_196 $$ Plot p = dom.getController().getPlot()[ CD ]
Line_2 $$ public void start() -->Line_197 $$ if (!title.equals("")) [ CD ]
Line_197 $$ if (!title.equals("")) -->Line_197 $$ if (!title.equals("")) [ CD ]
Line_197 $$ if (!title.equals("")) -->Line_197 $$ if (!title.equals("")) [ CD ]
Line_197 $$ if (!title.equals("")) -->Line_198 $$ p.setTitle(title)[ CD ]
Line_2 $$ public void start() -->Line_200 $$ Axis axis = p.getXaxis()[ CD ]
Line_2 $$ public void start() -->Line_201 $$ if (!xlabel.equals("")) [ CD ]
Line_201 $$ if (!xlabel.equals("")) -->Line_201 $$ if (!xlabel.equals("")) [ CD ]
Line_201 $$ if (!xlabel.equals("")) -->Line_201 $$ if (!xlabel.equals("")) [ CD ]
Line_201 $$ if (!xlabel.equals("")) -->Line_202 $$ axis.setLabel(xlabel)[ CD ]
Line_2 $$ public void start() -->Line_204 $$ if (!xrange.equals("")) [ CD ]
Line_204 $$ if (!xrange.equals("")) -->Line_204 $$ if (!xrange.equals("")) [ CD ]
Line_204 $$ if (!xrange.equals("")) -->Line_204 $$ if (!xrange.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_213 $$ if (!xlog.equals("")) [ CD ]
Line_213 $$ if (!xlog.equals("")) -->Line_213 $$ if (!xlog.equals("")) [ CD ]
Line_213 $$ if (!xlog.equals("")) -->Line_213 $$ if (!xlog.equals("")) [ CD ]
Line_213 $$ if (!xlog.equals("")) -->Line_214 $$ axis.setLog("true".equals(xlog))[ CD ]
Line_2 $$ public void start() -->Line_216 $$ if (!xdrawTickLabels.equals("")) [ CD ]
Line_216 $$ if (!xdrawTickLabels.equals("")) -->Line_216 $$ if (!xdrawTickLabels.equals("")) [ CD ]
Line_216 $$ if (!xdrawTickLabels.equals("")) -->Line_216 $$ if (!xdrawTickLabels.equals("")) [ CD ]
Line_216 $$ if (!xdrawTickLabels.equals("")) -->Line_217 $$ axis.setDrawTickLabels("true".equals(xdrawTickLabels))[ CD ]
Line_2 $$ public void start() -->Line_219 $$ axis = p.getYaxis()[ CD ]
Line_2 $$ public void start() -->Line_220 $$ if (!ylabel.equals("")) [ CD ]
Line_220 $$ if (!ylabel.equals("")) -->Line_220 $$ if (!ylabel.equals("")) [ CD ]
Line_220 $$ if (!ylabel.equals("")) -->Line_220 $$ if (!ylabel.equals("")) [ CD ]
Line_220 $$ if (!ylabel.equals("")) -->Line_221 $$ axis.setLabel(ylabel)[ CD ]
Line_2 $$ public void start() -->Line_223 $$ if (!yrange.equals("")) [ CD ]
Line_223 $$ if (!yrange.equals("")) -->Line_223 $$ if (!yrange.equals("")) [ CD ]
Line_223 $$ if (!yrange.equals("")) -->Line_223 $$ if (!yrange.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_232 $$ if (!ylog.equals("")) [ CD ]
Line_232 $$ if (!ylog.equals("")) -->Line_232 $$ if (!ylog.equals("")) [ CD ]
Line_232 $$ if (!ylog.equals("")) -->Line_232 $$ if (!ylog.equals("")) [ CD ]
Line_232 $$ if (!ylog.equals("")) -->Line_233 $$ axis.setLog("true".equals(ylog))[ CD ]
Line_2 $$ public void start() -->Line_235 $$ if (!ydrawTickLabels.equals("")) [ CD ]
Line_235 $$ if (!ydrawTickLabels.equals("")) -->Line_235 $$ if (!ydrawTickLabels.equals("")) [ CD ]
Line_235 $$ if (!ydrawTickLabels.equals("")) -->Line_235 $$ if (!ydrawTickLabels.equals("")) [ CD ]
Line_235 $$ if (!ydrawTickLabels.equals("")) -->Line_236 $$ axis.setDrawTickLabels("true".equals(ydrawTickLabels))[ CD ]
Line_2 $$ public void start() -->Line_238 $$ axis = p.getZaxis()[ CD ]
Line_2 $$ public void start() -->Line_239 $$ if (!zlabel.equals("")) [ CD ]
Line_239 $$ if (!zlabel.equals("")) -->Line_239 $$ if (!zlabel.equals("")) [ CD ]
Line_239 $$ if (!zlabel.equals("")) -->Line_239 $$ if (!zlabel.equals("")) [ CD ]
Line_239 $$ if (!zlabel.equals("")) -->Line_240 $$ axis.setLabel(zlabel)[ CD ]
Line_2 $$ public void start() -->Line_242 $$ if (!zrange.equals("")) [ CD ]
Line_242 $$ if (!zrange.equals("")) -->Line_242 $$ if (!zrange.equals("")) [ CD ]
Line_242 $$ if (!zrange.equals("")) -->Line_242 $$ if (!zrange.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_251 $$ if (!zlog.equals("")) [ CD ]
Line_251 $$ if (!zlog.equals("")) -->Line_251 $$ if (!zlog.equals("")) [ CD ]
Line_251 $$ if (!zlog.equals("")) -->Line_251 $$ if (!zlog.equals("")) [ CD ]
Line_251 $$ if (!zlog.equals("")) -->Line_252 $$ axis.setLog("true".equals(zlog))[ CD ]
Line_2 $$ public void start() -->Line_254 $$ if (!zdrawTickLabels.equals("")) [ CD ]
Line_254 $$ if (!zdrawTickLabels.equals("")) -->Line_254 $$ if (!zdrawTickLabels.equals("")) [ CD ]
Line_254 $$ if (!zdrawTickLabels.equals("")) -->Line_254 $$ if (!zdrawTickLabels.equals("")) [ CD ]
Line_254 $$ if (!zdrawTickLabels.equals("")) -->Line_255 $$ axis.setDrawTickLabels("true".equals(zdrawTickLabels))[ CD ]
Line_2 $$ public void start() -->Line_257 $$ if (srenderType != null && !srenderType.equals("")) [ CD ]
Line_257 $$ if (srenderType != null && !srenderType.equals("")) -->Line_257 $$ if (srenderType != null && !srenderType.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_265 $$ System.err.println("done setRenderType @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_266 $$ if (!scolor.equals("")) [ CD ]
Line_266 $$ if (!scolor.equals("")) -->Line_266 $$ if (!scolor.equals("")) [ CD ]
Line_266 $$ if (!scolor.equals("")) -->Line_266 $$ if (!scolor.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_273 $$ if (!sfillColor.equals("")) [ CD ]
Line_273 $$ if (!sfillColor.equals("")) -->Line_273 $$ if (!sfillColor.equals("")) [ CD ]
Line_273 $$ if (!sfillColor.equals("")) -->Line_273 $$ if (!sfillColor.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_280 $$ if (!sforegroundColor.equals("")) [ CD ]
Line_280 $$ if (!sforegroundColor.equals("")) -->Line_280 $$ if (!sforegroundColor.equals("")) [ CD ]
Line_280 $$ if (!sforegroundColor.equals("")) -->Line_280 $$ if (!sforegroundColor.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_287 $$ if (!sbackgroundColor.equals("")) [ CD ]
Line_287 $$ if (!sbackgroundColor.equals("")) -->Line_287 $$ if (!sbackgroundColor.equals("")) [ CD ]
Line_287 $$ if (!sbackgroundColor.equals("")) -->Line_287 $$ if (!sbackgroundColor.equals("")) [ CD ]
Line_2 $$ public void start() -->Line_294 $$ surl = getParameter("dataSetURL")[ CD ]
Line_2 $$ public void start() -->Line_295 $$ if (surl != null) [ CD ]
Line_295 $$ if (surl != null) -->Line_296 $$ if (surl.startsWith("about:")) [ CD ]
Line_296 $$ if (surl.startsWith("about:")) -->Line_296 $$ if (surl.startsWith("about:")) [ CD ]
Line_296 $$ if (surl.startsWith("about:")) -->Line_297 $$ setDataSetURL(surl)[ CD ]
Line_2 $$ public void start() -->Line_301 $$ getContentPane().remove(progressComponent)[ CD ]
Line_2 $$ public void start() -->Line_302 $$ getContentPane().add(model.getCanvas())[ CD ]
Line_2 $$ public void start() -->Line_303 $$ System.err.println("done add to applet @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_304 $$ validate()[ CD ]
Line_2 $$ public void start() -->Line_305 $$ System.err.println("done applet.validate @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_306 $$ repaint()[ CD ]
Line_2 $$ public void start() -->Line_307 $$ appmodel.getCanvas().setVisible(true)[ CD ]
Line_2 $$ public void start() -->Line_309 $$ repaint()[ CD ]
Line_2 $$ public void start() -->Line_310 $$ System.err.println("ready @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_2 $$ public void start() -->Line_311 $$ setInitializationStatus("ready")[ CD ]
Line_2 $$ public void start() -->Line_312 $$ dom.getController().getPlot().getXaxis().addPropertyChangeListener(Axis.PROP_RANGE, new PropertyChangeListener() [ CD ]
Line_312 $$ dom.getController().getPlot().getXaxis().addPropertyChangeListener(Axis.PROP_RANGE, new PropertyChangeListener() -->Line_314 $$ timeCallback(String.valueOf(evt.getNewValue()))[ CD ]
Line_312 $$ dom.getController().getPlot().getXaxis().addPropertyChangeListener(Axis.PROP_RANGE, new PropertyChangeListener() -->Line_314 $$ timeCallback(String.valueOf(evt.getNewValue()))[ FD ]
Line_2 $$ public void start() -->Line_317 $$ if (!clickCallback.equals("")) [ CD ]
Line_317 $$ if (!clickCallback.equals("")) -->Line_317 $$ if (!clickCallback.equals("")) [ CD ]
Line_317 $$ if (!clickCallback.equals("")) -->Line_317 $$ if (!clickCallback.equals("")) [ CD ]
Line_317 $$ if (!clickCallback.equals("")) -->Line_319 $$ int i = clickCallback.indexOf(",")[ CD ]
Line_317 $$ if (!clickCallback.equals("")) -->Line_320 $$ if (i != -1) [ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_320 $$ if (i != -1) [ FD ]
Line_320 $$ if (i != -1) -->Line_320 $$ if (i != -1) [ CD ]
Line_320 $$ if (i != -1) -->Line_321 $$ int i2 = clickCallback.indexOf("label=")[ CD ]
Line_320 $$ if (i != -1) -->Line_322 $$ if (i2 != -1)[ CD ]
Line_322 $$ if (i2 != -1)-->Line_322 $$ if (i2 != -1)[ CD ]
Line_322 $$ if (i2 != -1)-->Line_322 $$ clickCallbackLabel = clickCallback.substring(i2 + 6).trim()[ CD ]
Line_320 $$ if (i != -1) -->Line_323 $$ clickCallback = clickCallback.substring(0, i).trim()[ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_323 $$ clickCallback = clickCallback.substring(0, i).trim()[ FD ]
Line_317 $$ if (!clickCallback.equals("")) -->Line_325 $$ final DasPlot plot = dom.getPlots(0).getController().getDasPlot()[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_329 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_329 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_329 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_329 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_329 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_333 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ CD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_336 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_332 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_326 $$ MouseModule mm = new MouseModule(plot, new CrossHairRenderer(plot, null, plot.getXAxis(), plot.getYAxis()), clickCallbackLabel) -->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_328 $$ e = SwingUtilities.convertMouseEvent(plot, e, plot.getCanvas())-->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_114 $$ overviewMenuItem = new JCheckBoxMenuItem(new AbstractAction("Context Overview") -->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_108 $$ item = new JMenuItem(new AbstractAction("Reset Zoom") -->Line_337 $$ clickCallback(dom.getPlots(0).getId(), plot, e)[ FD ]
Line_317 $$ if (!clickCallback.equals("")) -->Line_340 $$ plot.getDasMouseInputAdapter().setPrimaryModule(mm)[ CD ]
Line_2 $$ public void start() -->Line_342 $$ p.getController().getDasPlot().getDasMouseInputAdapter().removeMenuItem("Properties")[ CD ]
Line_2 $$ public void start() -->Line_343 $$ dom.getPlots(0).getXaxis().getController().getDasAxis().getDasMouseInputAdapter().removeMenuItem("Properties")[ CD ]
Line_2 $$ public void start() -->Line_344 $$ dom.getPlots(0).getYaxis().getController().getDasAxis().getDasMouseInputAdapter().removeMenuItem("Properties")[ CD ]
Line_2 $$ public void start() -->Line_345 $$ dom.getPlots(0).getZaxis().getController().getDasAxis().getDasMouseInputAdapter().removeMenuItem("Properties")[ CD ]
Line_2 $$ public void start() -->Line_346 $$ if (getStringParameter("contextOverview", "off").equals("on")) [ CD ]
Line_346 $$ if (getStringParameter("contextOverview", "off").equals("on")) -->Line_346 $$ if (getStringParameter("contextOverview", "off").equals("on")) [ CD ]
Line_347 $$ Runnable run = new Runnable() -->Line_349 $$ dom.getController().waitUntilIdle()[ CD ]
Line_347 $$ Runnable run = new Runnable() -->Line_355 $$ dom.getController().waitUntilIdle()[ CD ]
Line_347 $$ Runnable run = new Runnable() -->Line_356 $$ doSetOverview(true)[ CD ]
Line_346 $$ if (getStringParameter("contextOverview", "off").equals("on")) -->Line_359 $$ new Thread(run).start()[ CD ]
Line_2 $$ public void start() -->Line_361 $$ System.err.println("done start AutoplotApplet " + VERSION + " @ " + (System.currentTimeMillis() - t0) + " msec")[ CD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ FD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ FD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) [ FD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_168 $$ System.err.printf("ds[%d]=%s\n", i, ds.slice(i))[ FD ]
Line_167 $$ for (int i = 0; i < Math.min(12, ds.length()); i++) -->Line_168 $$ System.err.printf("ds[%d]=%s\n", i, ds.slice(i))[ FD ]
