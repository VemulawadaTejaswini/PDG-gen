Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testJDBCSavepoints() throws Exception [ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_3 $$ String sql[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_4 $$ String msg[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_5 $$ int i[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_6 $$ PreparedStatement ps[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_7 $$ ResultSet rs[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_8 $$ Savepoint sp1[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_9 $$ Savepoint sp2[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_10 $$ Savepoint sp3[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_11 $$ Savepoint sp4[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_12 $$ Savepoint sp5[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_13 $$ Savepoint sp6[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_14 $$ Savepoint sp7[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_15 $$ int rowcount = 0[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_16 $$ sql = "drop table t if exists"[ CD ]
Line_3 $$ String sql-->Line_16 $$ sql = "drop table t if exists"[ FD ]
Line_16 $$ sql = "drop table t if exists"-->Line_16 $$ sql = "drop table t if exists"[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_17 $$ stmt.executeUpdate(sql)[ CD ]
Line_3 $$ String sql-->Line_17 $$ stmt.executeUpdate(sql)[ FD ]
Line_16 $$ sql = "drop table t if exists"-->Line_17 $$ stmt.executeUpdate(sql)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"[ CD ]
Line_3 $$ String sql-->Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"[ FD ]
Line_16 $$ sql = "drop table t if exists"-->Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"[ FD ]
Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"-->Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_19 $$ stmt.executeUpdate(sql)[ CD ]
Line_3 $$ String sql-->Line_19 $$ stmt.executeUpdate(sql)[ FD ]
Line_16 $$ sql = "drop table t if exists"-->Line_19 $$ stmt.executeUpdate(sql)[ FD ]
Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"-->Line_19 $$ stmt.executeUpdate(sql)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_20 $$ conn1.setAutoCommit(true)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_21 $$ conn1.setAutoCommit(false)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_22 $$ sql = "insert into t values(?,?,?,?)"[ CD ]
Line_3 $$ String sql-->Line_22 $$ sql = "insert into t values(?,?,?,?)"[ FD ]
Line_16 $$ sql = "drop table t if exists"-->Line_22 $$ sql = "insert into t values(?,?,?,?)"[ FD ]
Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"-->Line_22 $$ sql = "insert into t values(?,?,?,?)"[ FD ]
Line_22 $$ sql = "insert into t values(?,?,?,?)"-->Line_22 $$ sql = "insert into t values(?,?,?,?)"[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_23 $$ ps = conn1.prepareStatement(sql)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_23 $$ ps = conn1.prepareStatement(sql)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_23 $$ ps = conn1.prepareStatement(sql)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_23 $$ ps = conn1.prepareStatement(sql)[ CD ]
Line_3 $$ String sql-->Line_23 $$ ps = conn1.prepareStatement(sql)[ FD ]
Line_16 $$ sql = "drop table t if exists"-->Line_23 $$ ps = conn1.prepareStatement(sql)[ FD ]
Line_18 $$ sql = "create table t(id int, fn varchar, ln varchar, zip int)"-->Line_23 $$ ps = conn1.prepareStatement(sql)[ FD ]
Line_22 $$ sql = "insert into t values(?,?,?,?)"-->Line_23 $$ ps = conn1.prepareStatement(sql)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_24 $$ ps.setString(2, "Mary")[ CD ]
Line_6 $$ PreparedStatement ps-->Line_24 $$ ps.setString(2, "Mary")[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_24 $$ ps.setString(2, "Mary")[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_25 $$ ps.setString(3, "Peterson-Clancy")[ CD ]
Line_6 $$ PreparedStatement ps-->Line_25 $$ ps.setString(3, "Peterson-Clancy")[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_25 $$ ps.setString(3, "Peterson-Clancy")[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_26 $$ i = 0[ CD ]
Line_5 $$ int i-->Line_26 $$ i = 0[ FD ]
Line_26 $$ i = 0-->Line_26 $$ i = 0[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_27 $$ for (; i < 10; i++) [ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_2 $$ public void testJDBCSavepoints() throws Exception [ CD ]
Line_5 $$ int i-->Line_27 $$ for (; i < 10; i++) [ FD ]
Line_26 $$ i = 0-->Line_27 $$ for (; i < 10; i++) [ FD ]
Line_27 $$ for (; i < 10; i++) -->Line_27 $$ for (; i < 10; i++) [ CD ]
Line_5 $$ int i-->Line_27 $$ for (; i < 10; i++) [ FD ]
Line_26 $$ i = 0-->Line_27 $$ for (; i < 10; i++) [ FD ]
Line_27 $$ for (; i < 10; i++) -->Line_28 $$ ps.setInt(1, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_28 $$ ps.setInt(1, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_28 $$ ps.setInt(1, i)[ FD ]
Line_5 $$ int i-->Line_28 $$ ps.setInt(1, i)[ FD ]
Line_26 $$ i = 0-->Line_28 $$ ps.setInt(1, i)[ FD ]
Line_27 $$ for (; i < 10; i++) -->Line_29 $$ ps.setInt(4, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_29 $$ ps.setInt(4, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_29 $$ ps.setInt(4, i)[ FD ]
Line_5 $$ int i-->Line_29 $$ ps.setInt(4, i)[ FD ]
Line_26 $$ i = 0-->Line_29 $$ ps.setInt(4, i)[ FD ]
Line_27 $$ for (; i < 10; i++) -->Line_30 $$ ps.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement ps-->Line_30 $$ ps.executeUpdate()[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_30 $$ ps.executeUpdate()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_8 $$ Savepoint sp1-->Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_33 $$ for (; i < 20; i++) [ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_2 $$ public void testJDBCSavepoints() throws Exception [ CD ]
Line_5 $$ int i-->Line_33 $$ for (; i < 20; i++) [ FD ]
Line_26 $$ i = 0-->Line_33 $$ for (; i < 20; i++) [ FD ]
Line_33 $$ for (; i < 20; i++) -->Line_33 $$ for (; i < 20; i++) [ CD ]
Line_5 $$ int i-->Line_33 $$ for (; i < 20; i++) [ FD ]
Line_26 $$ i = 0-->Line_33 $$ for (; i < 20; i++) [ FD ]
Line_33 $$ for (; i < 20; i++) -->Line_34 $$ ps.setInt(1, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_34 $$ ps.setInt(1, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_34 $$ ps.setInt(1, i)[ FD ]
Line_5 $$ int i-->Line_34 $$ ps.setInt(1, i)[ FD ]
Line_26 $$ i = 0-->Line_34 $$ ps.setInt(1, i)[ FD ]
Line_33 $$ for (; i < 20; i++) -->Line_35 $$ ps.setInt(4, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_35 $$ ps.setInt(4, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_35 $$ ps.setInt(4, i)[ FD ]
Line_5 $$ int i-->Line_35 $$ ps.setInt(4, i)[ FD ]
Line_26 $$ i = 0-->Line_35 $$ ps.setInt(4, i)[ FD ]
Line_33 $$ for (; i < 20; i++) -->Line_36 $$ ps.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement ps-->Line_36 $$ ps.executeUpdate()[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_36 $$ ps.executeUpdate()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")[ CD ]
Line_9 $$ Savepoint sp2-->Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")[ FD ]
Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")-->Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")[ FD ]
Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")-->Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_39 $$ for (; i < 30; i++) [ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_2 $$ public void testJDBCSavepoints() throws Exception [ CD ]
Line_5 $$ int i-->Line_39 $$ for (; i < 30; i++) [ FD ]
Line_26 $$ i = 0-->Line_39 $$ for (; i < 30; i++) [ FD ]
Line_39 $$ for (; i < 30; i++) -->Line_39 $$ for (; i < 30; i++) [ CD ]
Line_5 $$ int i-->Line_39 $$ for (; i < 30; i++) [ FD ]
Line_26 $$ i = 0-->Line_39 $$ for (; i < 30; i++) [ FD ]
Line_39 $$ for (; i < 30; i++) -->Line_40 $$ ps.setInt(1, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_40 $$ ps.setInt(1, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_40 $$ ps.setInt(1, i)[ FD ]
Line_5 $$ int i-->Line_40 $$ ps.setInt(1, i)[ FD ]
Line_26 $$ i = 0-->Line_40 $$ ps.setInt(1, i)[ FD ]
Line_39 $$ for (; i < 30; i++) -->Line_41 $$ ps.setInt(4, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_41 $$ ps.setInt(4, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_41 $$ ps.setInt(4, i)[ FD ]
Line_5 $$ int i-->Line_41 $$ ps.setInt(4, i)[ FD ]
Line_26 $$ i = 0-->Line_41 $$ ps.setInt(4, i)[ FD ]
Line_39 $$ for (; i < 30; i++) -->Line_42 $$ ps.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement ps-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_42 $$ ps.executeUpdate()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")[ CD ]
Line_10 $$ Savepoint sp3-->Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")[ FD ]
Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")-->Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")[ FD ]
Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")-->Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_45 $$ for (; i < 40; i++) [ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_2 $$ public void testJDBCSavepoints() throws Exception [ CD ]
Line_5 $$ int i-->Line_45 $$ for (; i < 40; i++) [ FD ]
Line_26 $$ i = 0-->Line_45 $$ for (; i < 40; i++) [ FD ]
Line_45 $$ for (; i < 40; i++) -->Line_45 $$ for (; i < 40; i++) [ CD ]
Line_5 $$ int i-->Line_45 $$ for (; i < 40; i++) [ FD ]
Line_26 $$ i = 0-->Line_45 $$ for (; i < 40; i++) [ FD ]
Line_45 $$ for (; i < 40; i++) -->Line_46 $$ ps.setInt(1, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_46 $$ ps.setInt(1, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_46 $$ ps.setInt(1, i)[ FD ]
Line_5 $$ int i-->Line_46 $$ ps.setInt(1, i)[ FD ]
Line_26 $$ i = 0-->Line_46 $$ ps.setInt(1, i)[ FD ]
Line_45 $$ for (; i < 40; i++) -->Line_47 $$ ps.setInt(4, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_47 $$ ps.setInt(4, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_47 $$ ps.setInt(4, i)[ FD ]
Line_5 $$ int i-->Line_47 $$ ps.setInt(4, i)[ FD ]
Line_26 $$ i = 0-->Line_47 $$ ps.setInt(4, i)[ FD ]
Line_45 $$ for (; i < 40; i++) -->Line_48 $$ ps.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement ps-->Line_48 $$ ps.executeUpdate()[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_48 $$ ps.executeUpdate()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")[ CD ]
Line_11 $$ Savepoint sp4-->Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")[ FD ]
Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")-->Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")[ FD ]
Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")-->Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_51 $$ for (; i < 50; i++) [ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_2 $$ public void testJDBCSavepoints() throws Exception [ CD ]
Line_5 $$ int i-->Line_51 $$ for (; i < 50; i++) [ FD ]
Line_26 $$ i = 0-->Line_51 $$ for (; i < 50; i++) [ FD ]
Line_51 $$ for (; i < 50; i++) -->Line_51 $$ for (; i < 50; i++) [ CD ]
Line_5 $$ int i-->Line_51 $$ for (; i < 50; i++) [ FD ]
Line_26 $$ i = 0-->Line_51 $$ for (; i < 50; i++) [ FD ]
Line_51 $$ for (; i < 50; i++) -->Line_52 $$ ps.setInt(1, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_52 $$ ps.setInt(1, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_52 $$ ps.setInt(1, i)[ FD ]
Line_5 $$ int i-->Line_52 $$ ps.setInt(1, i)[ FD ]
Line_26 $$ i = 0-->Line_52 $$ ps.setInt(1, i)[ FD ]
Line_51 $$ for (; i < 50; i++) -->Line_53 $$ ps.setInt(4, i)[ CD ]
Line_6 $$ PreparedStatement ps-->Line_53 $$ ps.setInt(4, i)[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_53 $$ ps.setInt(4, i)[ FD ]
Line_5 $$ int i-->Line_53 $$ ps.setInt(4, i)[ FD ]
Line_26 $$ i = 0-->Line_53 $$ ps.setInt(4, i)[ FD ]
Line_51 $$ for (; i < 50; i++) -->Line_54 $$ ps.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement ps-->Line_54 $$ ps.executeUpdate()[ FD ]
Line_23 $$ ps = conn1.prepareStatement(sql)-->Line_54 $$ ps.executeUpdate()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")[ CD ]
Line_12 $$ Savepoint sp5-->Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")[ FD ]
Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")-->Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")[ FD ]
Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")-->Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")[ CD ]
Line_13 $$ Savepoint sp6-->Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")[ FD ]
Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")-->Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")[ FD ]
Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")-->Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")[ CD ]
Line_14 $$ Savepoint sp7-->Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")[ FD ]
Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")-->Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")[ FD ]
Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")-->Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_59 $$ rs = stmt.executeQuery("select count(*) from t")[ CD ]
Line_7 $$ ResultSet rs-->Line_59 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_59 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_59 $$ rs = stmt.executeQuery("select count(*) from t")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_60 $$ rs.next()[ CD ]
Line_7 $$ ResultSet rs-->Line_60 $$ rs.next()[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_60 $$ rs.next()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_61 $$ rowcount = rs.getInt(1)[ CD ]
Line_15 $$ int rowcount = 0-->Line_61 $$ rowcount = rs.getInt(1)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_61 $$ rowcount = rs.getInt(1)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_61 $$ rowcount = rs.getInt(1)[ CD ]
Line_7 $$ ResultSet rs-->Line_61 $$ rowcount = rs.getInt(1)[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_61 $$ rowcount = rs.getInt(1)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_62 $$ rs.close()[ CD ]
Line_7 $$ ResultSet rs-->Line_62 $$ rs.close()[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_62 $$ rs.close()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_63 $$ msg = "select count(*) from t value"[ CD ]
Line_4 $$ String msg-->Line_63 $$ msg = "select count(*) from t value"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_63 $$ msg = "select count(*) from t value"[ FD ]
Line_4 $$ String msg-->Line_65 $$ assertEquals(msg, 50, rowcount)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_65 $$ assertEquals(msg, 50, rowcount)[ FD ]
Line_15 $$ int rowcount = 0-->Line_65 $$ assertEquals(msg, 50, rowcount)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_65 $$ assertEquals(msg, 50, rowcount)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_68 $$ conn2.setAutoCommit(false)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_69 $$ conn2.setSavepoint("savepoint1")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_70 $$ conn2.setSavepoint("savepoint2")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_71 $$ msg = "savepoint released succesfully on non-originating connection"[ CD ]
Line_4 $$ String msg-->Line_71 $$ msg = "savepoint released succesfully on non-originating connection"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_71 $$ msg = "savepoint released succesfully on non-originating connection"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_71 $$ msg = "savepoint released succesfully on non-originating connection"[ FD ]
Line_9 $$ Savepoint sp2-->Line_73 $$ conn2.releaseSavepoint(sp2)[ FD ]
Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")-->Line_73 $$ conn2.releaseSavepoint(sp2)[ FD ]
Line_4 $$ String msg-->Line_74 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_74 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_74 $$ assertTrue(msg, false)[ FD ]
Line_8 $$ Savepoint sp1-->Line_78 $$ conn2.rollback(sp1)[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_78 $$ conn2.rollback(sp1)[ FD ]
Line_4 $$ String msg-->Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"[ FD ]
Line_4 $$ String msg-->Line_80 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_80 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_80 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_80 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"[ CD ]
Line_4 $$ String msg-->Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"[ FD ]
Line_4 $$ String msg-->Line_88 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_88 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_88 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_88 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_88 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ CD ]
Line_4 $$ String msg-->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"[ FD ]
Line_4 $$ String msg-->Line_98 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_98 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_98 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_98 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_98 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_98 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_102 $$ conn1.releaseSavepoint(sp6)[ CD ]
Line_13 $$ Savepoint sp6-->Line_102 $$ conn1.releaseSavepoint(sp6)[ FD ]
Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")-->Line_102 $$ conn1.releaseSavepoint(sp6)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ CD ]
Line_4 $$ String msg-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_103 $$ msg = "savepoint released succesfully > 1 times"[ FD ]
Line_13 $$ Savepoint sp6-->Line_105 $$ conn1.releaseSavepoint(sp6)[ FD ]
Line_57 $$ sp6 = conn1.setSavepoint("savepoint6")-->Line_105 $$ conn1.releaseSavepoint(sp6)[ FD ]
Line_4 $$ String msg-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_106 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ CD ]
Line_4 $$ String msg-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"[ FD ]
Line_14 $$ Savepoint sp7-->Line_111 $$ conn1.releaseSavepoint(sp7)[ FD ]
Line_58 $$ sp7 = conn1.setSavepoint("savepoint7")-->Line_111 $$ conn1.releaseSavepoint(sp7)[ FD ]
Line_4 $$ String msg-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_112 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ CD ]
Line_4 $$ String msg-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"[ FD ]
Line_12 $$ Savepoint sp5-->Line_117 $$ conn1.releaseSavepoint(sp5)[ FD ]
Line_56 $$ sp5 = conn1.setSavepoint("savepoint5")-->Line_117 $$ conn1.releaseSavepoint(sp5)[ FD ]
Line_4 $$ String msg-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_120 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_124 $$ conn1.rollback(sp4)[ CD ]
Line_11 $$ Savepoint sp4-->Line_124 $$ conn1.rollback(sp4)[ FD ]
Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")-->Line_124 $$ conn1.rollback(sp4)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_125 $$ rs = stmt.executeQuery("select count(*) from t")[ CD ]
Line_7 $$ ResultSet rs-->Line_125 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_125 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_125 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_125 $$ rs = stmt.executeQuery("select count(*) from t")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_126 $$ rs.next()[ CD ]
Line_7 $$ ResultSet rs-->Line_126 $$ rs.next()[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_126 $$ rs.next()[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_126 $$ rs.next()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_127 $$ rowcount = rs.getInt(1)[ CD ]
Line_15 $$ int rowcount = 0-->Line_127 $$ rowcount = rs.getInt(1)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_127 $$ rowcount = rs.getInt(1)[ FD ]
Line_127 $$ rowcount = rs.getInt(1)-->Line_127 $$ rowcount = rs.getInt(1)[ FD ]
Line_127 $$ rowcount = rs.getInt(1)-->Line_127 $$ rowcount = rs.getInt(1)[ CD ]
Line_7 $$ ResultSet rs-->Line_127 $$ rowcount = rs.getInt(1)[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_127 $$ rowcount = rs.getInt(1)[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_127 $$ rowcount = rs.getInt(1)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_128 $$ rs.close()[ CD ]
Line_7 $$ ResultSet rs-->Line_128 $$ rs.close()[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_128 $$ rs.close()[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_128 $$ rs.close()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ CD ]
Line_4 $$ String msg-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"[ FD ]
Line_4 $$ String msg-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_15 $$ int rowcount = 0-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_127 $$ rowcount = rs.getInt(1)-->Line_131 $$ assertEquals(msg, 40, rowcount)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ CD ]
Line_4 $$ String msg-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"[ FD ]
Line_11 $$ Savepoint sp4-->Line_136 $$ conn1.rollback(sp4)[ FD ]
Line_50 $$ sp4 = conn1.setSavepoint("savepoint4")-->Line_136 $$ conn1.rollback(sp4)[ FD ]
Line_4 $$ String msg-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_137 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_140 $$ conn1.rollback(sp3)[ CD ]
Line_10 $$ Savepoint sp3-->Line_140 $$ conn1.rollback(sp3)[ FD ]
Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")-->Line_140 $$ conn1.rollback(sp3)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_141 $$ rs = stmt.executeQuery("select count(*) from t")[ CD ]
Line_7 $$ ResultSet rs-->Line_141 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_141 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_141 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_141 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_141 $$ rs = stmt.executeQuery("select count(*) from t")[ FD ]
Line_141 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_141 $$ rs = stmt.executeQuery("select count(*) from t")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_142 $$ rs.next()[ CD ]
Line_7 $$ ResultSet rs-->Line_142 $$ rs.next()[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_142 $$ rs.next()[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_142 $$ rs.next()[ FD ]
Line_141 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_142 $$ rs.next()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_143 $$ rowcount = rs.getInt(1)[ CD ]
Line_15 $$ int rowcount = 0-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_127 $$ rowcount = rs.getInt(1)-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_143 $$ rowcount = rs.getInt(1)-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_143 $$ rowcount = rs.getInt(1)-->Line_143 $$ rowcount = rs.getInt(1)[ CD ]
Line_7 $$ ResultSet rs-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_141 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_143 $$ rowcount = rs.getInt(1)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_144 $$ rs.close()[ CD ]
Line_7 $$ ResultSet rs-->Line_144 $$ rs.close()[ FD ]
Line_59 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_144 $$ rs.close()[ FD ]
Line_125 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_144 $$ rs.close()[ FD ]
Line_141 $$ rs = stmt.executeQuery("select count(*) from t")-->Line_144 $$ rs.close()[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ CD ]
Line_4 $$ String msg-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"[ FD ]
Line_4 $$ String msg-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_15 $$ int rowcount = 0-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_61 $$ rowcount = rs.getInt(1)-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_127 $$ rowcount = rs.getInt(1)-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_143 $$ rowcount = rs.getInt(1)-->Line_147 $$ assertEquals(msg, 30, rowcount)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ CD ]
Line_4 $$ String msg-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_150 $$ msg = "savepoint released succesfully after use in rollback"-->Line_150 $$ msg = "savepoint released succesfully after use in rollback"[ FD ]
Line_10 $$ Savepoint sp3-->Line_152 $$ conn1.releaseSavepoint(sp3)[ FD ]
Line_44 $$ sp3 = conn1.setSavepoint("savepoint3")-->Line_152 $$ conn1.releaseSavepoint(sp3)[ FD ]
Line_4 $$ String msg-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_150 $$ msg = "savepoint released succesfully after use in rollback"-->Line_153 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_156 $$ conn1.rollback(sp1)[ CD ]
Line_8 $$ Savepoint sp1-->Line_156 $$ conn1.rollback(sp1)[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_156 $$ conn1.rollback(sp1)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ CD ]
Line_4 $$ String msg-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_150 $$ msg = "savepoint released succesfully after use in rollback"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"-->Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"[ FD ]
Line_9 $$ Savepoint sp2-->Line_159 $$ conn1.rollback(sp2)[ FD ]
Line_38 $$ sp2 = conn1.setSavepoint("savepoint2")-->Line_159 $$ conn1.rollback(sp2)[ FD ]
Line_4 $$ String msg-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_150 $$ msg = "savepoint released succesfully after use in rollback"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"-->Line_160 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_163 $$ conn1.rollback()[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ CD ]
Line_4 $$ String msg-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_150 $$ msg = "savepoint released succesfully after use in rollback"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"-->Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"[ FD ]
Line_8 $$ Savepoint sp1-->Line_166 $$ conn1.releaseSavepoint(sp1)[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_166 $$ conn1.releaseSavepoint(sp1)[ FD ]
Line_4 $$ String msg-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_63 $$ msg = "select count(*) from t value"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_71 $$ msg = "savepoint released succesfully on non-originating connection"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_79 $$ msg = "succesful rollback to savepoint on " + "non-originating connection"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_83 $$ msg = "direct execution of <release savepoint> statement failed to " + "release JDBC-created SQL-savepoint with identical savepoint name"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_92 $$ msg = "direct execution of <rollback to savepoint> statement failed to " + "roll back to existing JDBC-created SQL-savepoint with identical " + "savepoint name"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_103 $$ msg = "savepoint released succesfully > 1 times"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_109 $$ msg = "savepoint released successfully after preceding savepoint released"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_115 $$ msg = "preceding same-point savepoint destroyed by following savepoint release"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_129 $$ msg = "select * rowcount after 50 inserts - 10 rolled back:"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_134 $$ msg = "savepoint rolled back succesfully > 1 times"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_145 $$ msg = "select count(*) after 50 inserts - 20 rolled back:"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_150 $$ msg = "savepoint released succesfully after use in rollback"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_157 $$ msg = "savepoint rolled back without raising an exception after " + "rollback to a preceeding savepoint"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_164 $$ msg = "savepoint released succesfully when it should have been " + "destroyed by a full rollback"-->Line_167 $$ assertTrue(msg, false)[ FD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_170 $$ conn1.setAutoCommit(false)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_8 $$ Savepoint sp1-->Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_172 $$ conn1.rollback()[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_173 $$ conn1.setAutoCommit(false)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_174 $$ conn1.createStatement().executeUpdate("savepoint \"savepoint1\"")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_175 $$ conn1.setAutoCommit(false)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_8 $$ Savepoint sp1-->Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_177 $$ conn1.createStatement().executeUpdate("savepoint \"savepoint1\"")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_178 $$ conn1.setAutoCommit(false)[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_8 $$ Savepoint sp1-->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_32 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_171 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_176 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ FD ]
Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")-->Line_179 $$ sp1 = conn1.setSavepoint("savepoint1")[ CD ]
Line_2 $$ public void testJDBCSavepoints() throws Exception -->Line_180 $$ conn1.createStatement().executeUpdate("savepoint \"savepoint1\"")[ CD ]
