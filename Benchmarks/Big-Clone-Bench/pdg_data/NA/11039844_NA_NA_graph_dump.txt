Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static int load(Context context, URL url) throws Exception [ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_3 $$ int texture[] = new int[1][ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_4 $$ GLES20.glGenTextures(1, texture, 0)[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_5 $$ int textureId = texture[0][ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_6 $$ GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId)[ CD ]
Line_5 $$ int textureId = texture[0]-->Line_6 $$ GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, textureId)[ FD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_7 $$ InputStream is = url.openStream()[ CD ]
Line_7 $$ InputStream is = url.openStream()-->Line_7 $$ InputStream is = url.openStream()[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_7 $$ InputStream is = url.openStream()[ FD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_8 $$ Bitmap tmpBmp[ CD ]
Line_8 $$ Bitmap tmpBmp-->Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)[ FD ]
Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)-->Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)[ FD ]
Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)-->Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)[ CD ]
Line_7 $$ InputStream is = url.openStream()-->Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)[ FD ]
Line_7 $$ InputStream is = url.openStream()-->Line_13 $$ is.close()[ FD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_17 $$ GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MIN_FILTER, GLES20.GL_LINEAR_MIPMAP_NEAREST)[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_18 $$ MyGLUtils.checkGlError("glTexParameterf GL_TEXTURE_MIN_FILTER")[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_19 $$ GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D, GLES20.GL_TEXTURE_MAG_FILTER, GLES20.GL_LINEAR)[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_20 $$ MyGLUtils.checkGlError("glTexParameterf GL_TEXTURE_MAG_FILTER")[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_21 $$ GLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, tmpBmp, 0)[ CD ]
Line_8 $$ Bitmap tmpBmp-->Line_21 $$ GLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, tmpBmp, 0)[ FD ]
Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)-->Line_21 $$ GLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, tmpBmp, 0)[ FD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_22 $$ MyGLUtils.checkGlError("texImage2D")[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_23 $$ GLES20.glGenerateMipmap(GLES20.GL_TEXTURE_2D)[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_24 $$ MyGLUtils.checkGlError("glGenerateMipmap")[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_25 $$ tmpBmp.recycle()[ CD ]
Line_8 $$ Bitmap tmpBmp-->Line_25 $$ tmpBmp.recycle()[ FD ]
Line_10 $$ tmpBmp = BitmapFactory.decodeStream(is)-->Line_25 $$ tmpBmp.recycle()[ FD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_26 $$ GLES20.glBindTexture(GLES20.GL_TEXTURE_2D, 0)[ CD ]
Line_2 $$ public static int load(Context context, URL url) throws Exception -->Line_27 $$ return textureId[ CD ]
