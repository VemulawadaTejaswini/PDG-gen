Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) [ CD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_3 $$ String reqxml = ""[ CD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_4 $$ org.jdom.Document retdoc = null[ CD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_7 $$ if (myport == null || myport.trim().equals("")) [ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_7 $$ if (myport == null || myport.trim().equals("")) [ FD ]
Line_7 $$ if (myport == null || myport.trim().equals("")) -->Line_8 $$ myport = "80"[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_8 $$ myport = "80"[ FD ]
Line_8 $$ myport = "80"-->Line_8 $$ myport = "80"[ FD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_10 $$ if (this.serverURL == null) [ CD ]
Line_12 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_12 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()[ CD ]
Line_12 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_13 $$ if (codebase != null)[ FD ]
Line_13 $$ if (codebase != null)-->Line_13 $$ serverURL = codebase.getHost()[ CD ]
Line_12 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_13 $$ serverURL = codebase.getHost()[ FD ]
Line_10 $$ if (this.serverURL == null) -->Line_18 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)[ CD ]
Line_10 $$ if (this.serverURL == null) -->Line_19 $$ ipdig.show()[ CD ]
Line_18 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_19 $$ ipdig.show()[ FD ]
Line_10 $$ if (this.serverURL == null) -->Line_20 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_20 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_20 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_20 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_20 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_20 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_18 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_20 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_10 $$ if (this.serverURL == null) -->Line_21 $$ myport = ipdig.getPortNo()[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_21 $$ myport = ipdig.getPortNo()[ FD ]
Line_8 $$ myport = "80"-->Line_21 $$ myport = ipdig.getPortNo()[ FD ]
Line_21 $$ myport = ipdig.getPortNo()-->Line_21 $$ myport = ipdig.getPortNo()[ FD ]
Line_21 $$ myport = ipdig.getPortNo()-->Line_21 $$ myport = ipdig.getPortNo()[ CD ]
Line_18 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_21 $$ myport = ipdig.getPortNo()[ FD ]
Line_10 $$ if (this.serverURL == null) -->Line_22 $$ java.util.prefs.Preferences.systemRoot().put("serverurl", serverURL)[ CD ]
Line_10 $$ if (this.serverURL == null) -->Line_23 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_23 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_8 $$ myport = "80"-->Line_23 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_21 $$ myport = ipdig.getPortNo()-->Line_23 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_10 $$ if (this.serverURL == null) -->Line_24 $$ System.out.println(serverURL)[ CD ]
Line_28 $$ java.net.URL url = new java.net.URL("http://" + serverURL + ":" + myport + "/newgenlibctxt/" + servletName)-->Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()[ FD ]
Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_30 $$ urlconn.setDoOutput(true)[ FD ]
Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_31 $$ urlconn.setRequestProperty("Content-type", "text/xml; charset=UTF-8")[ FD ]
Line_32 $$ java.io.OutputStream os = urlconn.getOutputStream()-->Line_32 $$ java.io.OutputStream os = urlconn.getOutputStream()[ CD ]
Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_32 $$ java.io.OutputStream os = urlconn.getOutputStream()[ FD ]
Line_33 $$ String req1xml = request-->Line_37 $$ System.out.println(req1xml)[ FD ]
Line_39 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_40 $$ pw.write(req1xml.getBytes())[ FD ]
Line_33 $$ String req1xml = request-->Line_40 $$ pw.write(req1xml.getBytes())[ FD ]
Line_39 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_41 $$ pw.flush()[ FD ]
Line_39 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_42 $$ pw.close()[ FD ]
Line_36 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_46 $$ dos.write(req1xml)[ FD ]
Line_33 $$ String req1xml = request-->Line_46 $$ dos.write(req1xml)[ FD ]
Line_36 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_47 $$ dos.flush()[ FD ]
Line_36 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_48 $$ dos.close()[ FD ]
Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_49 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_49 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_50 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_50 $$ java.io.InputStream ios = urlconn.getInputStream()[ CD ]
Line_29 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_50 $$ java.io.InputStream ios = urlconn.getInputStream()[ FD ]
Line_4 $$ org.jdom.Document retdoc = null-->Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ FD ]
Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)-->Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ FD ]
Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)-->Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ CD ]
Line_53 $$ java.io.InputStreamReader br = new java.io.InputStreamReader(gip, "UTF-8")-->Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ FD ]
Line_39 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_57 $$ pw.write(reqxml.getBytes())[ FD ]
Line_3 $$ String reqxml = ""-->Line_57 $$ pw.write(reqxml.getBytes())[ FD ]
Line_39 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_58 $$ pw.flush()[ FD ]
Line_39 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_59 $$ pw.close()[ FD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_67 $$ System.out.println(reqxml)[ CD ]
Line_3 $$ String reqxml = ""-->Line_67 $$ System.out.println(reqxml)[ FD ]
Line_2 $$ public String sendRequestHTTPTunelling(java.lang.String servletName, java.lang.String request) -->Line_68 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc)[ CD ]
Line_68 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc)-->Line_68 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc)[ CD ]
Line_4 $$ org.jdom.Document retdoc = null-->Line_68 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc)[ FD ]
Line_54 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)-->Line_68 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc)[ FD ]
