Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ String id = request.getRequestURI().split("/")[3][ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ String id = request.getRequestURI().split("/")[3][ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ if (log.isDebugEnabled())[ CD ]
Line_4 $$ if (log.isDebugEnabled())-->Line_4 $$ if (log.isDebugEnabled())[ CD ]
Line_4 $$ if (log.isDebugEnabled())-->Line_4 $$ log.debug("request: " + id + " from: " + request.getRemoteHost())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ log.debug("request: " + id + " from: " + request.getRemoteHost())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_5 $$ Song song = manager.find(id)[ CD ]
Line_5 $$ Song song = manager.find(id)-->Line_5 $$ Song song = manager.find(id)[ CD ]
Line_3 $$ String id = request.getRequestURI().split("/")[3]-->Line_5 $$ Song song = manager.find(id)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ if (song != null) [ CD ]
Line_5 $$ Song song = manager.find(id)-->Line_6 $$ if (song != null) [ FD ]
Line_6 $$ if (song != null) -->Line_7 $$ File file = new File(song.getFile())[ CD ]
Line_5 $$ Song song = manager.find(id)-->Line_7 $$ File file = new File(song.getFile())[ FD ]
Line_6 $$ if (song != null) -->Line_8 $$ if (file.exists()) [ CD ]
Line_7 $$ File file = new File(song.getFile())-->Line_8 $$ if (file.exists()) [ FD ]
Line_8 $$ if (file.exists()) -->Line_8 $$ if (file.exists()) [ CD ]
Line_7 $$ File file = new File(song.getFile())-->Line_8 $$ if (file.exists()) [ FD ]
Line_8 $$ if (file.exists()) -->Line_9 $$ response.setStatus(HttpServletResponse.SC_OK)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_9 $$ response.setStatus(HttpServletResponse.SC_OK)[ FD ]
Line_8 $$ if (file.exists()) -->Line_10 $$ response.setContentType("audio/" + song.getType())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_10 $$ response.setContentType("audio/" + song.getType())[ FD ]
Line_5 $$ Song song = manager.find(id)-->Line_10 $$ response.setContentType("audio/" + song.getType())[ FD ]
Line_8 $$ if (file.exists()) -->Line_11 $$ response.setContentLength((int) file.length())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_11 $$ response.setContentLength((int) file.length())[ FD ]
Line_7 $$ File file = new File(song.getFile())-->Line_11 $$ response.setContentLength((int) file.length())[ FD ]
Line_8 $$ if (file.exists()) -->Line_12 $$ FileInputStream stream = new FileInputStream(file)[ CD ]
Line_12 $$ FileInputStream stream = new FileInputStream(file)-->Line_14 $$ IOUtils.copy(stream, response.getOutputStream())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_14 $$ IOUtils.copy(stream, response.getOutputStream())[ FD ]
Line_12 $$ FileInputStream stream = new FileInputStream(file)-->Line_16 $$ IOUtils.closeQuietly(stream)[ FD ]
Line_8 $$ if (file.exists()) -->Line_19 $$ log.warn("file not found: " + file)[ CD ]
Line_8 $$ if (file.exists()) -->Line_20 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_20 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ FD ]
Line_6 $$ if (song != null) -->Line_23 $$ log.info("song not found: " + id)[ CD ]
Line_6 $$ if (song != null) -->Line_24 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_24 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ FD ]
