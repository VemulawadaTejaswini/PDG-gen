Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Object execute(Connection connection) throws JAXRException [ CD ]
Line_2 $$ public Object execute(Connection connection) throws JAXRException -->Line_3 $$ RegistryObject registryObject = connection.getRegistryService().getBusinessQueryManager().getRegistryObject(id)[ CD ]
Line_3 $$ RegistryObject registryObject = connection.getRegistryService().getBusinessQueryManager().getRegistryObject(id)-->Line_3 $$ RegistryObject registryObject = connection.getRegistryService().getBusinessQueryManager().getRegistryObject(id)[ CD ]
Line_2 $$ public Object execute(Connection connection) throws JAXRException -->Line_3 $$ RegistryObject registryObject = connection.getRegistryService().getBusinessQueryManager().getRegistryObject(id)[ FD ]
Line_2 $$ public Object execute(Connection connection) throws JAXRException -->Line_4 $$ if (registryObject instanceof ExtrinsicObject) [ CD ]
Line_3 $$ RegistryObject registryObject = connection.getRegistryService().getBusinessQueryManager().getRegistryObject(id)-->Line_4 $$ if (registryObject instanceof ExtrinsicObject) [ FD ]
Line_4 $$ if (registryObject instanceof ExtrinsicObject) -->Line_5 $$ ExtrinsicObject extrinsicObject = (ExtrinsicObject) registryObject[ CD ]
Line_4 $$ if (registryObject instanceof ExtrinsicObject) -->Line_6 $$ DataHandler dataHandler = extrinsicObject.getRepositoryItem()[ CD ]
Line_6 $$ DataHandler dataHandler = extrinsicObject.getRepositoryItem()-->Line_6 $$ DataHandler dataHandler = extrinsicObject.getRepositoryItem()[ CD ]
Line_5 $$ ExtrinsicObject extrinsicObject = (ExtrinsicObject) registryObject-->Line_6 $$ DataHandler dataHandler = extrinsicObject.getRepositoryItem()[ FD ]
Line_4 $$ if (registryObject instanceof ExtrinsicObject) -->Line_7 $$ if (dataHandler != null) [ CD ]
Line_6 $$ DataHandler dataHandler = extrinsicObject.getRepositoryItem()-->Line_7 $$ if (dataHandler != null) [ FD ]
Line_7 $$ if (dataHandler != null) -->Line_8 $$ response.setContentType("text/html")[ CD ]
Line_10 $$ PrintWriter out = response.getWriter()-->Line_10 $$ PrintWriter out = response.getWriter()[ CD ]
Line_11 $$ InputStream is = dataHandler.getInputStream()-->Line_11 $$ InputStream is = dataHandler.getInputStream()[ CD ]
Line_6 $$ DataHandler dataHandler = extrinsicObject.getRepositoryItem()-->Line_11 $$ InputStream is = dataHandler.getInputStream()[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)[ CD ]
Line_10 $$ PrintWriter out = response.getWriter()-->Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_14 $$ xmlStreamWriter.writeStartDocument()[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_15 $$ xmlStreamWriter.writeStartElement("div")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_16 $$ xmlStreamWriter.writeStartElement("textarea")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_17 $$ xmlStreamWriter.writeAttribute("name", "repositoryItem")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_18 $$ xmlStreamWriter.writeAttribute("class", "xml")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_19 $$ xmlStreamWriter.writeAttribute("style", "display:none")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_21 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_22 $$ xmlStreamWriter.writeStartElement("script")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_23 $$ xmlStreamWriter.writeAttribute("class", "javascript")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_24 $$ xmlStreamWriter.writeCharacters("dp.SyntaxHighlighter.HighlightAll('repositoryItem');")[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_25 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_26 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_27 $$ xmlStreamWriter.writeEndDocument()[ FD ]
Line_13 $$ final XMLStreamWriter xmlStreamWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_28 $$ xmlStreamWriter.flush()[ FD ]
Line_11 $$ InputStream is = dataHandler.getInputStream()-->Line_30 $$ is.close()[ FD ]
Line_2 $$ public Object execute(Connection connection) throws JAXRException -->Line_39 $$ return null[ CD ]
