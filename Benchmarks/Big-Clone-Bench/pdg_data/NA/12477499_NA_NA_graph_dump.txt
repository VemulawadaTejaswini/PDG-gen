Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException [ CD ]
Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException -->Line_3 $$ int code = -1[ CD ]
Line_3 $$ int code = -1-->Line_3 $$ int code = -1[ CD ]
Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException -->Line_4 $$ long start = SystemClock.elapsedRealtime()[ CD ]
Line_4 $$ long start = SystemClock.elapsedRealtime()-->Line_4 $$ long start = SystemClock.elapsedRealtime()[ CD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) [ CD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_9 $$ int uid = android.os.Process.myUid()[ CD ]
Line_9 $$ int uid = android.os.Process.myUid()-->Line_9 $$ int uid = android.os.Process.myUid()[ CD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_10 $$ long startTx = NetStat.getUidTxBytes(uid)[ CD ]
Line_10 $$ long startTx = NetStat.getUidTxBytes(uid)-->Line_10 $$ long startTx = NetStat.getUidTxBytes(uid)[ CD ]
Line_9 $$ int uid = android.os.Process.myUid()-->Line_10 $$ long startTx = NetStat.getUidTxBytes(uid)[ FD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_11 $$ long startRx = NetStat.getUidRxBytes(uid)[ CD ]
Line_11 $$ long startRx = NetStat.getUidRxBytes(uid)-->Line_11 $$ long startRx = NetStat.getUidRxBytes(uid)[ CD ]
Line_9 $$ int uid = android.os.Process.myUid()-->Line_11 $$ long startRx = NetStat.getUidRxBytes(uid)[ FD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_12 $$ response = mClient.execute(request, context)[ CD ]
Line_6 $$ HttpResponse response-->Line_12 $$ response = mClient.execute(request, context)[ FD ]
Line_12 $$ response = mClient.execute(request, context)-->Line_12 $$ response = mClient.execute(request, context)[ FD ]
Line_12 $$ response = mClient.execute(request, context)-->Line_12 $$ response = mClient.execute(request, context)[ CD ]
Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException -->Line_12 $$ response = mClient.execute(request, context)[ FD ]
Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException -->Line_12 $$ response = mClient.execute(request, context)[ FD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_13 $$ HttpEntity origEntity = response == null ? null : response.getEntity()[ CD ]
Line_6 $$ HttpResponse response-->Line_13 $$ HttpEntity origEntity = response == null ? null : response.getEntity()[ FD ]
Line_12 $$ response = mClient.execute(request, context)-->Line_13 $$ HttpEntity origEntity = response == null ? null : response.getEntity()[ FD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_14 $$ if (origEntity != null) [ CD ]
Line_13 $$ HttpEntity origEntity = response == null ? null : response.getEntity()-->Line_14 $$ if (origEntity != null) [ FD ]
Line_14 $$ if (origEntity != null) -->Line_15 $$ long now = SystemClock.elapsedRealtime()[ CD ]
Line_15 $$ long now = SystemClock.elapsedRealtime()-->Line_15 $$ long now = SystemClock.elapsedRealtime()[ CD ]
Line_14 $$ if (origEntity != null) -->Line_16 $$ long elapsed = now - start[ CD ]
Line_14 $$ if (origEntity != null) -->Line_17 $$ NetworkStatsEntity entity = new NetworkStatsEntity(origEntity, mAppName, uid, startTx, startRx, elapsed, now)[ CD ]
Line_14 $$ if (origEntity != null) -->Line_18 $$ response.setEntity(entity)[ CD ]
Line_6 $$ HttpResponse response-->Line_18 $$ response.setEntity(entity)[ FD ]
Line_12 $$ response = mClient.execute(request, context)-->Line_18 $$ response.setEntity(entity)[ FD ]
Line_17 $$ NetworkStatsEntity entity = new NetworkStatsEntity(origEntity, mAppName, uid, startTx, startRx, elapsed, now)-->Line_18 $$ response.setEntity(entity)[ FD ]
Line_8 $$ if (NetworkStatsEntity.shouldLogNetworkStats()) -->Line_21 $$ response = mClient.execute(request, context)[ CD ]
Line_6 $$ HttpResponse response-->Line_21 $$ response = mClient.execute(request, context)[ FD ]
Line_12 $$ response = mClient.execute(request, context)-->Line_21 $$ response = mClient.execute(request, context)[ FD ]
Line_21 $$ response = mClient.execute(request, context)-->Line_21 $$ response = mClient.execute(request, context)[ FD ]
Line_21 $$ response = mClient.execute(request, context)-->Line_21 $$ response = mClient.execute(request, context)[ CD ]
Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException -->Line_21 $$ response = mClient.execute(request, context)[ FD ]
Line_2 $$ public HttpResponse executeWithoutRewriting(HttpUriRequest request, HttpContext context) throws IOException -->Line_21 $$ response = mClient.execute(request, context)[ FD ]
Line_3 $$ int code = -1-->Line_23 $$ code = response.getStatusLine().getStatusCode()[ FD ]
Line_23 $$ code = response.getStatusLine().getStatusCode()-->Line_23 $$ code = response.getStatusLine().getStatusCode()[ FD ]
Line_23 $$ code = response.getStatusLine().getStatusCode()-->Line_23 $$ code = response.getStatusLine().getStatusCode()[ CD ]
Line_6 $$ HttpResponse response-->Line_23 $$ code = response.getStatusLine().getStatusCode()[ FD ]
Line_12 $$ response = mClient.execute(request, context)-->Line_23 $$ code = response.getStatusLine().getStatusCode()[ FD ]
Line_21 $$ response = mClient.execute(request, context)-->Line_23 $$ code = response.getStatusLine().getStatusCode()[ FD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_29 $$ values.put(Checkin.Stats.COUNT, 1)[ FD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_30 $$ values.put(Checkin.Stats.SUM, elapsed / 1000.0)[ FD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_31 $$ values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_REQUEST + ":" + mAppName)[ FD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_32 $$ mResolver.insert(Checkin.Stats.CONTENT_URI, values)[ FD ]
Line_33 $$ if (mConnectionAllocated.get() == null && code >= 0) -->Line_34 $$ values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_REUSED + ":" + mAppName)[ CD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_34 $$ values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_REUSED + ":" + mAppName)[ FD ]
Line_33 $$ if (mConnectionAllocated.get() == null && code >= 0) -->Line_35 $$ mResolver.insert(Checkin.Stats.CONTENT_URI, values)[ CD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_35 $$ mResolver.insert(Checkin.Stats.CONTENT_URI, values)[ FD ]
Line_3 $$ int code = -1-->Line_37 $$ String status = code < 0 ? "IOException" : Integer.toString(code)[ FD ]
Line_23 $$ code = response.getStatusLine().getStatusCode()-->Line_37 $$ String status = code < 0 ? "IOException" : Integer.toString(code)[ FD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_38 $$ values.put(Checkin.Stats.TAG, Checkin.Stats.Tag.HTTP_STATUS + ":" + mAppName + ":" + status)[ FD ]
Line_28 $$ ContentValues values = new ContentValues()-->Line_39 $$ mResolver.insert(Checkin.Stats.CONTENT_URI, values)[ FD ]
