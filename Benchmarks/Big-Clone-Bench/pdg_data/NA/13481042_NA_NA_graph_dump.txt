Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String hasheMotDePasse(String mdp) [ CD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_3 $$ MessageDigest sha = null[ CD ]
Line_3 $$ MessageDigest sha = null-->Line_5 $$ sha = MessageDigest.getInstance("SHA-1")[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA-1")-->Line_5 $$ sha = MessageDigest.getInstance("SHA-1")[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA-1")-->Line_5 $$ sha = MessageDigest.getInstance("SHA-1")[ CD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_8 $$ sha.reset()[ CD ]
Line_3 $$ MessageDigest sha = null-->Line_8 $$ sha.reset()[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA-1")-->Line_8 $$ sha.reset()[ FD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_9 $$ sha.update(mdp.getBytes())[ CD ]
Line_3 $$ MessageDigest sha = null-->Line_9 $$ sha.update(mdp.getBytes())[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA-1")-->Line_9 $$ sha.update(mdp.getBytes())[ FD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_9 $$ sha.update(mdp.getBytes())[ FD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_10 $$ byte[] digest = sha.digest()[ CD ]
Line_10 $$ byte[] digest = sha.digest()-->Line_10 $$ byte[] digest = sha.digest()[ CD ]
Line_3 $$ MessageDigest sha = null-->Line_10 $$ byte[] digest = sha.digest()[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA-1")-->Line_10 $$ byte[] digest = sha.digest()[ FD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_11 $$ String pass = new String(Base64.encode(digest))[ CD ]
Line_10 $$ byte[] digest = sha.digest()-->Line_11 $$ String pass = new String(Base64.encode(digest))[ FD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_12 $$ pass = "[ CD ]
Line_11 $$ String pass = new String(Base64.encode(digest))-->Line_12 $$ pass = "[ FD ]
Line_12 $$ pass = "-->Line_12 $$ pass = "[ FD ]
Line_11 $$ String pass = new String(Base64.encode(digest))-->Line_12 $$ pass = "[ FD ]
Line_12 $$ pass = "-->Line_12 $$ pass = "[ FD ]
Line_2 $$ public String hasheMotDePasse(String mdp) -->Line_13 $$ return pass[ CD ]
