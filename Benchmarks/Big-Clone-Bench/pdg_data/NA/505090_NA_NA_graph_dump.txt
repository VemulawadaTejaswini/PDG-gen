Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ URL url = null[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ EventHeap eh = new EventHeap("iw-room2")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Event newEvent[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ float chan1 = -1, chan2 = -1[ CD ]
Line_6 $$ float chan1 = -1, chan2 = -1-->Line_6 $$ float chan1 = -1, chan2 = -1[ CD ]
Line_6 $$ float chan1 = -1, chan2 = -1-->Line_6 $$ float chan1 = -1, chan2 = -1[ CD ]
Line_3 $$ URL url = null-->Line_8 $$ url = new URL("http://iw--bluetooth-ap/cgi-bin/sens.cgi")[ FD ]
Line_8 $$ url = new URL("http://iw--bluetooth-ap/cgi-bin/sens.cgi")-->Line_8 $$ url = new URL("http://iw--bluetooth-ap/cgi-bin/sens.cgi")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ byte buf[] = new byte[1000][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_14 $$ InputStream in = url.openStream()-->Line_14 $$ InputStream in = url.openStream()[ CD ]
Line_3 $$ URL url = null-->Line_14 $$ InputStream in = url.openStream()[ FD ]
Line_8 $$ url = new URL("http://iw--bluetooth-ap/cgi-bin/sens.cgi")-->Line_14 $$ InputStream in = url.openStream()[ FD ]
Line_15 $$ int length = in.read(buf)-->Line_15 $$ int length = in.read(buf)[ CD ]
Line_14 $$ InputStream in = url.openStream()-->Line_15 $$ int length = in.read(buf)[ FD ]
Line_17 $$ String data = page.substring(290)-->Line_17 $$ String data = page.substring(290)[ CD ]
Line_16 $$ String page = new String(buf)-->Line_17 $$ String data = page.substring(290)[ FD ]
Line_17 $$ String data = page.substring(290)-->Line_18 $$ if (data.startsWith("No Sensors Found")) [ FD ]
Line_18 $$ if (data.startsWith("No Sensors Found")) -->Line_18 $$ if (data.startsWith("No Sensors Found")) [ CD ]
Line_17 $$ String data = page.substring(290)-->Line_18 $$ if (data.startsWith("No Sensors Found")) [ FD ]
Line_18 $$ if (data.startsWith("No Sensors Found")) -->Line_19 $$ Thread.sleep(1000)[ CD ]
Line_18 $$ if (data.startsWith("No Sensors Found")) -->Line_21 $$ String sensorID = data.substring(15, 32)[ CD ]
Line_21 $$ String sensorID = data.substring(15, 32)-->Line_21 $$ String sensorID = data.substring(15, 32)[ CD ]
Line_17 $$ String data = page.substring(290)-->Line_21 $$ String sensorID = data.substring(15, 32)[ FD ]
Line_18 $$ if (data.startsWith("No Sensors Found")) -->Line_22 $$ String channel1 = data.substring(163, 167)[ CD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_22 $$ String channel1 = data.substring(163, 167)[ CD ]
Line_17 $$ String data = page.substring(290)-->Line_22 $$ String channel1 = data.substring(163, 167)[ FD ]
Line_18 $$ if (data.startsWith("No Sensors Found")) -->Line_23 $$ String channel2 = data.substring(266, 270)[ CD ]
Line_23 $$ String channel2 = data.substring(266, 270)-->Line_23 $$ String channel2 = data.substring(266, 270)[ CD ]
Line_17 $$ String data = page.substring(290)-->Line_23 $$ String channel2 = data.substring(266, 270)[ FD ]
Line_18 $$ if (data.startsWith("No Sensors Found")) -->Line_24 $$ if (Float.parseFloat(channel1) != chan1) [ CD ]
Line_6 $$ float chan1 = -1, chan2 = -1-->Line_24 $$ if (Float.parseFloat(channel1) != chan1) [ FD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_24 $$ if (Float.parseFloat(channel1) != chan1) [ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_25 $$ System.out.println(sensorID)[ CD ]
Line_21 $$ String sensorID = data.substring(15, 32)-->Line_25 $$ System.out.println(sensorID)[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_26 $$ System.out.println("Channel 1:" + channel1)[ CD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_27 $$ newEvent = new Event("iStuffInputEvent")[ CD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_27 $$ newEvent = new Event("iStuffInputEvent")[ FD ]
Line_5 $$ Event newEvent-->Line_27 $$ newEvent = new Event("iStuffInputEvent")[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_28 $$ newEvent.addField("Device", "Slider")[ CD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_28 $$ newEvent.addField("Device", "Slider")[ FD ]
Line_5 $$ Event newEvent-->Line_28 $$ newEvent.addField("Device", "Slider")[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_29 $$ newEvent.addField("ID", sensorID + ":channel1")[ CD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_29 $$ newEvent.addField("ID", sensorID + ":channel1")[ FD ]
Line_5 $$ Event newEvent-->Line_29 $$ newEvent.addField("ID", sensorID + ":channel1")[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_30 $$ newEvent.addField("Value", channel1)[ CD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_30 $$ newEvent.addField("Value", channel1)[ FD ]
Line_5 $$ Event newEvent-->Line_30 $$ newEvent.addField("Value", channel1)[ FD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_30 $$ newEvent.addField("Value", channel1)[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_31 $$ newEvent.addField("Max", String.valueOf(5))[ CD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_31 $$ newEvent.addField("Max", String.valueOf(5))[ FD ]
Line_5 $$ Event newEvent-->Line_31 $$ newEvent.addField("Max", String.valueOf(5))[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_32 $$ newEvent.addField("Min", String.valueOf(0))[ CD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_32 $$ newEvent.addField("Min", String.valueOf(0))[ FD ]
Line_5 $$ Event newEvent-->Line_32 $$ newEvent.addField("Min", String.valueOf(0))[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_33 $$ eh.putEvent(newEvent)[ CD ]
Line_4 $$ EventHeap eh = new EventHeap("iw-room2")-->Line_33 $$ eh.putEvent(newEvent)[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_33 $$ eh.putEvent(newEvent)[ FD ]
Line_5 $$ Event newEvent-->Line_33 $$ eh.putEvent(newEvent)[ FD ]
Line_24 $$ if (Float.parseFloat(channel1) != chan1) -->Line_34 $$ chan1 = Float.parseFloat(channel1)[ CD ]
Line_34 $$ chan1 = Float.parseFloat(channel1)-->Line_34 $$ chan1 = Float.parseFloat(channel1)[ FD ]
Line_6 $$ float chan1 = -1, chan2 = -1-->Line_34 $$ chan1 = Float.parseFloat(channel1)[ FD ]
Line_34 $$ chan1 = Float.parseFloat(channel1)-->Line_34 $$ chan1 = Float.parseFloat(channel1)[ CD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_34 $$ chan1 = Float.parseFloat(channel1)[ FD ]
Line_14 $$ InputStream in = url.openStream()-->Line_15 $$ int length = in.read(buf)[ FD ]
Line_16 $$ String page = new String(buf)-->Line_17 $$ String data = page.substring(290)[ FD ]
Line_17 $$ String data = page.substring(290)-->Line_18 $$ if (data.startsWith("No Sensors Found")) [ FD ]
Line_17 $$ String data = page.substring(290)-->Line_18 $$ if (data.startsWith("No Sensors Found")) [ FD ]
Line_17 $$ String data = page.substring(290)-->Line_21 $$ String sensorID = data.substring(15, 32)[ FD ]
Line_17 $$ String data = page.substring(290)-->Line_22 $$ String channel1 = data.substring(163, 167)[ FD ]
Line_17 $$ String data = page.substring(290)-->Line_23 $$ String channel2 = data.substring(266, 270)[ FD ]
Line_34 $$ chan1 = Float.parseFloat(channel1)-->Line_24 $$ if (Float.parseFloat(channel1) != chan1) [ FD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_24 $$ if (Float.parseFloat(channel1) != chan1) [ FD ]
Line_21 $$ String sensorID = data.substring(15, 32)-->Line_25 $$ System.out.println(sensorID)[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_28 $$ newEvent.addField("Device", "Slider")[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_29 $$ newEvent.addField("ID", sensorID + ":channel1")[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_30 $$ newEvent.addField("Value", channel1)[ FD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_30 $$ newEvent.addField("Value", channel1)[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_31 $$ newEvent.addField("Max", String.valueOf(5))[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_32 $$ newEvent.addField("Min", String.valueOf(0))[ FD ]
Line_27 $$ newEvent = new Event("iStuffInputEvent")-->Line_33 $$ eh.putEvent(newEvent)[ FD ]
Line_22 $$ String channel1 = data.substring(163, 167)-->Line_34 $$ chan1 = Float.parseFloat(channel1)[ FD ]
