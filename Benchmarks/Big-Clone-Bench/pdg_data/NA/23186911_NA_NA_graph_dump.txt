Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException [ CD ]
Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException -->Line_3 $$ PreparedStatement stmt = null[ CD ]
Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException -->Line_4 $$ if (isNew()) [ CD ]
Line_4 $$ if (isNew()) -->Line_4 $$ if (isNew()) [ CD ]
Line_4 $$ if (isNew()) -->Line_5 $$ String errorMessage = "Unable to delete non-persistent DAO '" + getClass().getName() + "'"[ CD ]
Line_4 $$ if (isNew()) -->Line_6 $$ if (log.isErrorEnabled()) [ CD ]
Line_6 $$ if (log.isErrorEnabled()) -->Line_6 $$ if (log.isErrorEnabled()) [ CD ]
Line_6 $$ if (log.isErrorEnabled()) -->Line_7 $$ log.error(errorMessage)[ CD ]
Line_5 $$ String errorMessage = "Unable to delete non-persistent DAO '" + getClass().getName() + "'"-->Line_7 $$ log.error(errorMessage)[ FD ]
Line_3 $$ PreparedStatement stmt = null-->Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())[ FD ]
Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())-->Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())[ FD ]
Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())-->Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())[ CD ]
Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException -->Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())[ FD ]
Line_3 $$ PreparedStatement stmt = null-->Line_13 $$ stmt.setObject(1, getPrimaryKey())[ FD ]
Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())-->Line_13 $$ stmt.setObject(1, getPrimaryKey())[ FD ]
Line_14 $$ int rowCount = stmt.executeUpdate()-->Line_14 $$ int rowCount = stmt.executeUpdate()[ CD ]
Line_3 $$ PreparedStatement stmt = null-->Line_14 $$ int rowCount = stmt.executeUpdate()[ FD ]
Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())-->Line_14 $$ int rowCount = stmt.executeUpdate()[ FD ]
Line_14 $$ int rowCount = stmt.executeUpdate()-->Line_15 $$ if (rowCount != 1) [ FD ]
Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException -->Line_15 $$ if (rowCount != 1) [ FD ]
Line_15 $$ if (rowCount != 1) -->Line_16 $$ if (commit) [ CD ]
Line_16 $$ if (commit) -->Line_17 $$ conn.rollback()[ CD ]
Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException -->Line_17 $$ conn.rollback()[ FD ]
Line_15 $$ if (rowCount != 1) -->Line_20 $$ if (log.isErrorEnabled()) [ CD ]
Line_20 $$ if (log.isErrorEnabled()) -->Line_20 $$ if (log.isErrorEnabled()) [ CD ]
Line_20 $$ if (log.isErrorEnabled()) -->Line_21 $$ log.error(errorMessage)[ CD ]
Line_5 $$ String errorMessage = "Unable to delete non-persistent DAO '" + getClass().getName() + "'"-->Line_21 $$ log.error(errorMessage)[ FD ]
Line_15 $$ if (rowCount != 1) -->Line_24 $$ if (commit) [ CD ]
Line_24 $$ if (commit) -->Line_25 $$ conn.commit()[ CD ]
Line_2 $$ public void delete(Connection conn, boolean commit) throws SQLException -->Line_25 $$ conn.commit()[ FD ]
Line_3 $$ PreparedStatement stmt = null-->Line_28 $$ OvJdbcUtils.closeStatement(stmt)[ FD ]
Line_12 $$ stmt = conn.prepareStatement(getDeleteSql())-->Line_28 $$ OvJdbcUtils.closeStatement(stmt)[ FD ]
