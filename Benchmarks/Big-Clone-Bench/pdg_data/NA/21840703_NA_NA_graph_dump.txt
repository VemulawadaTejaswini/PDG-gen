Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void parse() throws Exception [ CD ]
Line_2 $$ public void parse() throws Exception -->Line_3 $$ URL url = new URL("http://www.oki.com")[ CD ]
Line_2 $$ public void parse() throws Exception -->Line_4 $$ HtmlParser parser = new HtmlParser()[ CD ]
Line_2 $$ public void parse() throws Exception -->Line_5 $$ byte[] bytes = FileUtilities.getContents(url.openStream(), Integer.MAX_VALUE).toByteArray()[ CD ]
Line_5 $$ byte[] bytes = FileUtilities.getContents(url.openStream(), Integer.MAX_VALUE).toByteArray()-->Line_5 $$ byte[] bytes = FileUtilities.getContents(url.openStream(), Integer.MAX_VALUE).toByteArray()[ CD ]
Line_3 $$ URL url = new URL("http://www.oki.com")-->Line_5 $$ byte[] bytes = FileUtilities.getContents(url.openStream(), Integer.MAX_VALUE).toByteArray()[ FD ]
Line_2 $$ public void parse() throws Exception -->Line_6 $$ OutputStream parsed = parser.parse(new ByteArrayInputStream(bytes), new ByteArrayOutputStream())[ CD ]
Line_6 $$ OutputStream parsed = parser.parse(new ByteArrayInputStream(bytes), new ByteArrayOutputStream())-->Line_6 $$ OutputStream parsed = parser.parse(new ByteArrayInputStream(bytes), new ByteArrayOutputStream())[ CD ]
Line_4 $$ HtmlParser parser = new HtmlParser()-->Line_6 $$ OutputStream parsed = parser.parse(new ByteArrayInputStream(bytes), new ByteArrayOutputStream())[ FD ]
Line_2 $$ public void parse() throws Exception -->Line_7 $$ assertTrue(parsed.toString().indexOf("Oki") > -1)[ CD ]
Line_6 $$ OutputStream parsed = parser.parse(new ByteArrayInputStream(bytes), new ByteArrayOutputStream())-->Line_7 $$ assertTrue(parsed.toString().indexOf("Oki") > -1)[ FD ]
