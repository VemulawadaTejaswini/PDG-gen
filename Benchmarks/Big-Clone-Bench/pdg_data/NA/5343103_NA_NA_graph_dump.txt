Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ if (args.length < 1) [ CD ]
Line_3 $$ if (args.length < 1) -->Line_4 $$ System.err.println("usage: java copyURL URL [LocalFile]")[ CD ]
Line_3 $$ if (args.length < 1) -->Line_5 $$ System.exit(1)[ CD ]
Line_10 $$ URLConnection urlC = url.openConnection()-->Line_10 $$ URLConnection urlC = url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(args[0])-->Line_10 $$ URLConnection urlC = url.openConnection()[ FD ]
Line_11 $$ InputStream is = url.openStream()-->Line_11 $$ InputStream is = url.openStream()[ CD ]
Line_8 $$ URL url = new URL(args[0])-->Line_11 $$ InputStream is = url.openStream()[ FD ]
Line_10 $$ URLConnection urlC = url.openConnection()-->Line_12 $$ System.out.print("Copying resource (type: " + urlC.getContentType())[ FD ]
Line_10 $$ URLConnection urlC = url.openConnection()-->Line_13 $$ Date date = new Date(urlC.getLastModified())[ FD ]
Line_16 $$ if (args.length < 2) -->Line_17 $$ String localFile = null[ CD ]
Line_16 $$ if (args.length < 2) -->Line_18 $$ StringTokenizer st = new StringTokenizer(url.getFile(), "/")[ CD ]
Line_8 $$ URL url = new URL(args[0])-->Line_18 $$ StringTokenizer st = new StringTokenizer(url.getFile(), "/")[ FD ]
Line_16 $$ if (args.length < 2) -->Line_19 $$ while (st.hasMoreTokens()) localFile = st.nextToken()[ CD ]
Line_16 $$ if (args.length < 2) -->Line_16 $$ if (args.length < 2) [ CD ]
Line_19 $$ while (st.hasMoreTokens()) localFile = st.nextToken()-->Line_19 $$ while (st.hasMoreTokens()) localFile = st.nextToken()[ CD ]
Line_18 $$ StringTokenizer st = new StringTokenizer(url.getFile(), "/")-->Line_19 $$ while (st.hasMoreTokens()) localFile = st.nextToken()[ FD ]
Line_19 $$ while (st.hasMoreTokens()) localFile = st.nextToken()-->Line_19 $$ localFile = st.nextToken()[ CD ]
Line_19 $$ localFile = st.nextToken()-->Line_19 $$ localFile = st.nextToken()[ FD ]
Line_17 $$ String localFile = null-->Line_19 $$ localFile = st.nextToken()[ FD ]
Line_19 $$ localFile = st.nextToken()-->Line_19 $$ localFile = st.nextToken()[ CD ]
Line_18 $$ StringTokenizer st = new StringTokenizer(url.getFile(), "/")-->Line_19 $$ localFile = st.nextToken()[ FD ]
Line_16 $$ if (args.length < 2) -->Line_20 $$ fos = new FileOutputStream(localFile)[ CD ]
Line_15 $$ FileOutputStream fos = null-->Line_20 $$ fos = new FileOutputStream(localFile)[ FD ]
Line_20 $$ fos = new FileOutputStream(localFile)-->Line_20 $$ fos = new FileOutputStream(localFile)[ FD ]
Line_16 $$ if (args.length < 2) -->Line_21 $$ fos = new FileOutputStream(args[1])[ CD ]
Line_15 $$ FileOutputStream fos = null-->Line_21 $$ fos = new FileOutputStream(args[1])[ FD ]
Line_20 $$ fos = new FileOutputStream(localFile)-->Line_21 $$ fos = new FileOutputStream(args[1])[ FD ]
Line_21 $$ fos = new FileOutputStream(args[1])-->Line_21 $$ fos = new FileOutputStream(args[1])[ FD ]
Line_23 $$ while ((oneChar = is.read()) != -1) -->Line_23 $$ while ((oneChar = is.read()) != -1) [ FD ]
Line_22 $$ int oneChar, count = 0-->Line_23 $$ while ((oneChar = is.read()) != -1) [ FD ]
Line_23 $$ while ((oneChar = is.read()) != -1) -->Line_23 $$ while ((oneChar = is.read()) != -1) [ CD ]
Line_11 $$ InputStream is = url.openStream()-->Line_23 $$ while ((oneChar = is.read()) != -1) [ FD ]
Line_23 $$ while ((oneChar = is.read()) != -1) -->Line_24 $$ fos.write(oneChar)[ CD ]
Line_15 $$ FileOutputStream fos = null-->Line_24 $$ fos.write(oneChar)[ FD ]
Line_20 $$ fos = new FileOutputStream(localFile)-->Line_24 $$ fos.write(oneChar)[ FD ]
Line_21 $$ fos = new FileOutputStream(args[1])-->Line_24 $$ fos.write(oneChar)[ FD ]
Line_23 $$ while ((oneChar = is.read()) != -1) -->Line_24 $$ fos.write(oneChar)[ FD ]
Line_22 $$ int oneChar, count = 0-->Line_24 $$ fos.write(oneChar)[ FD ]
Line_23 $$ while ((oneChar = is.read()) != -1) -->Line_25 $$ count++[ CD ]
Line_22 $$ int oneChar, count = 0-->Line_25 $$ count++[ FD ]
Line_11 $$ InputStream is = url.openStream()-->Line_27 $$ is.close()[ FD ]
Line_15 $$ FileOutputStream fos = null-->Line_28 $$ fos.close()[ FD ]
Line_20 $$ fos = new FileOutputStream(localFile)-->Line_28 $$ fos.close()[ FD ]
Line_21 $$ fos = new FileOutputStream(args[1])-->Line_28 $$ fos.close()[ FD ]
Line_23 $$ while ((oneChar = is.read()) != -1) -->Line_24 $$ fos.write(oneChar)[ FD ]
