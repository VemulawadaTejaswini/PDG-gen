Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String createPseudoUUID() [ CD ]
Line_4 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_4 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")[ CD ]
Line_4 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_5 $$ messageDigest.update(new UID().toString().getBytes())[ FD ]
Line_7 $$ String localHost = InetAddress.getLocalHost().toString()-->Line_7 $$ String localHost = InetAddress.getLocalHost().toString()[ CD ]
Line_4 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_8 $$ messageDigest.update(localHost.getBytes())[ FD ]
Line_7 $$ String localHost = InetAddress.getLocalHost().toString()-->Line_8 $$ messageDigest.update(localHost.getBytes())[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_12 $$ byte[] digestBytes = messageDigest.digest()[ CD ]
Line_4 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_12 $$ byte[] digestBytes = messageDigest.digest()[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_14 $$ sb.append(toHexString(NumberUtils.readIntBigEndian(digestBytes, 0)))[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_14 $$ sb.append(toHexString(NumberUtils.readIntBigEndian(digestBytes, 0)))[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_15 $$ sb.append('-')[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_16 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 4)))[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_16 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 4)))[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_17 $$ sb.append('-')[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_18 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 6)))[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_18 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 6)))[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_19 $$ sb.append('-')[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_20 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 8)))[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_20 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 8)))[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_21 $$ sb.append('-')[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_22 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 10)))[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_22 $$ sb.append(toHexString(NumberUtils.readShortBigEndian(digestBytes, 10)))[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_23 $$ sb.append(toHexString(NumberUtils.readIntBigEndian(digestBytes, 12)))[ FD ]
Line_12 $$ byte[] digestBytes = messageDigest.digest()-->Line_23 $$ sb.append(toHexString(NumberUtils.readIntBigEndian(digestBytes, 12)))[ FD ]
Line_24 $$ return sb.toString()-->Line_24 $$ return sb.toString()[ CD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_24 $$ return sb.toString()[ FD ]
