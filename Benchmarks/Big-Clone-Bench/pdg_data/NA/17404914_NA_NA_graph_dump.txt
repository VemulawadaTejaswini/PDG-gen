Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception [ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_3 $$ String xmlText = FileHelper.asString(xmlFileName)[ CD ]
Line_3 $$ String xmlText = FileHelper.asString(xmlFileName)-->Line_3 $$ String xmlText = FileHelper.asString(xmlFileName)[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_3 $$ String xmlText = FileHelper.asString(xmlFileName)[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_4 $$ Bundle bundle = new Bundle()[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_5 $$ loadMetricsCfg(bundle, xmlFileName, xmlText)[ CD ]
Line_4 $$ Bundle bundle = new Bundle()-->Line_5 $$ loadMetricsCfg(bundle, xmlFileName, xmlText)[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_5 $$ loadMetricsCfg(bundle, xmlFileName, xmlText)[ FD ]
Line_3 $$ String xmlText = FileHelper.asString(xmlFileName)-->Line_5 $$ loadMetricsCfg(bundle, xmlFileName, xmlText)[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_7 $$ db.begin()[ FD ]
Line_8 $$ PreparedStatement psExists = db.prepareStatement("SELECT e_bundle_id, xml_decl_path, xml_text FROM sdw.e_bundle WHERE xml_decl_path = ?;")-->Line_8 $$ PreparedStatement psExists = db.prepareStatement("SELECT e_bundle_id, xml_decl_path, xml_text FROM sdw.e_bundle WHERE xml_decl_path = ?;")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_8 $$ PreparedStatement psExists = db.prepareStatement("SELECT e_bundle_id, xml_decl_path, xml_text FROM sdw.e_bundle WHERE xml_decl_path = ?;")[ FD ]
Line_8 $$ PreparedStatement psExists = db.prepareStatement("SELECT e_bundle_id, xml_decl_path, xml_text FROM sdw.e_bundle WHERE xml_decl_path = ?;")-->Line_9 $$ psExists.setString(1, xmlFileName)[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_9 $$ psExists.setString(1, xmlFileName)[ FD ]
Line_10 $$ ResultSet rsExists = db.executeQuery(psExists)-->Line_10 $$ ResultSet rsExists = db.executeQuery(psExists)[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_10 $$ ResultSet rsExists = db.executeQuery(psExists)[ FD ]
Line_8 $$ PreparedStatement psExists = db.prepareStatement("SELECT e_bundle_id, xml_decl_path, xml_text FROM sdw.e_bundle WHERE xml_decl_path = ?;")-->Line_10 $$ ResultSet rsExists = db.executeQuery(psExists)[ FD ]
Line_10 $$ ResultSet rsExists = db.executeQuery(psExists)-->Line_11 $$ if (rsExists.next()) [ FD ]
Line_11 $$ if (rsExists.next()) -->Line_11 $$ if (rsExists.next()) [ CD ]
Line_10 $$ ResultSet rsExists = db.executeQuery(psExists)-->Line_11 $$ if (rsExists.next()) [ FD ]
Line_11 $$ if (rsExists.next()) -->Line_12 $$ db.rollback()[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_12 $$ db.rollback()[ FD ]
Line_11 $$ if (rsExists.next()) -->Line_13 $$ return false[ CD ]
Line_15 $$ PreparedStatement psId = db.prepareStatement("SELECT currval('sdw.e_bundle_serial');")-->Line_15 $$ PreparedStatement psId = db.prepareStatement("SELECT currval('sdw.e_bundle_serial');")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_15 $$ PreparedStatement psId = db.prepareStatement("SELECT currval('sdw.e_bundle_serial');")[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_17 $$ psAdd.setString(1, xmlFileName)[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_17 $$ psAdd.setString(1, xmlFileName)[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_18 $$ psAdd.setString(2, xmlText)[ FD ]
Line_3 $$ String xmlText = FileHelper.asString(xmlFileName)-->Line_18 $$ psAdd.setString(2, xmlText)[ FD ]
Line_19 $$ FileInformation fi = bundle.getSingleFileInformation()-->Line_19 $$ FileInformation fi = bundle.getSingleFileInformation()[ CD ]
Line_4 $$ Bundle bundle = new Bundle()-->Line_19 $$ FileInformation fi = bundle.getSingleFileInformation()[ FD ]
Line_20 $$ if (!xmlFileName.equals(fi.filename))-->Line_20 $$ if (!xmlFileName.equals(fi.filename))[ CD ]
Line_20 $$ if (!xmlFileName.equals(fi.filename))-->Line_20 $$ if (!xmlFileName.equals(fi.filename))[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_20 $$ if (!xmlFileName.equals(fi.filename))[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_21 $$ psAdd.setInt(3, Globals.SDW_MAJOR_VER)[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_22 $$ psAdd.setInt(4, Globals.SDW_MINOR_VER)[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_23 $$ psAdd.setInt(5, fi.majorVer)[ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_24 $$ psAdd.setInt(6, fi.minorVer)[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_25 $$ if (1 != db.executeUpdate(psAdd)) [ FD ]
Line_16 $$ PreparedStatement psAdd = db.prepareStatement("INSERT INTO sdw.e_bundle (xml_decl_path, xml_text, sdw_major_version, sdw_minor_version, file_major_version, file_minor_version) VALUES (?, ?, ?, ?, ?, ?);")-->Line_25 $$ if (1 != db.executeUpdate(psAdd)) [ FD ]
Line_28 $$ int bundleId = DbHelper.getIntKey(psId)-->Line_28 $$ int bundleId = DbHelper.getIntKey(psId)[ CD ]
Line_15 $$ PreparedStatement psId = db.prepareStatement("SELECT currval('sdw.e_bundle_serial');")-->Line_28 $$ int bundleId = DbHelper.getIntKey(psId)[ FD ]
Line_29 $$ PreparedStatement psGroupId = db.prepareStatement("SELECT currval('sdw.e_metric_group_serial');")-->Line_29 $$ PreparedStatement psGroupId = db.prepareStatement("SELECT currval('sdw.e_metric_group_serial');")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_29 $$ PreparedStatement psGroupId = db.prepareStatement("SELECT currval('sdw.e_metric_group_serial');")[ FD ]
Line_30 $$ PreparedStatement psAddGroup = db.prepareStatement("INSERT INTO sdw.e_metric_group (bundle_id, metric_group_name) VALUES (?, ?);")-->Line_30 $$ PreparedStatement psAddGroup = db.prepareStatement("INSERT INTO sdw.e_metric_group (bundle_id, metric_group_name) VALUES (?, ?);")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_30 $$ PreparedStatement psAddGroup = db.prepareStatement("INSERT INTO sdw.e_metric_group (bundle_id, metric_group_name) VALUES (?, ?);")[ FD ]
Line_30 $$ PreparedStatement psAddGroup = db.prepareStatement("INSERT INTO sdw.e_metric_group (bundle_id, metric_group_name) VALUES (?, ?);")-->Line_31 $$ psAddGroup.setInt(1, bundleId)[ FD ]
Line_28 $$ int bundleId = DbHelper.getIntKey(psId)-->Line_31 $$ psAddGroup.setInt(1, bundleId)[ FD ]
Line_32 $$ PreparedStatement psMetricId = db.prepareStatement("SELECT currval('sdw.e_metric_name_serial');")-->Line_32 $$ PreparedStatement psMetricId = db.prepareStatement("SELECT currval('sdw.e_metric_name_serial');")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_32 $$ PreparedStatement psMetricId = db.prepareStatement("SELECT currval('sdw.e_metric_name_serial');")[ FD ]
Line_33 $$ PreparedStatement psAddMetric = db.prepareStatement("INSERT INTO sdw.e_metric_name (bundle_id, metric_name) VALUES (?, ?);")-->Line_33 $$ PreparedStatement psAddMetric = db.prepareStatement("INSERT INTO sdw.e_metric_name (bundle_id, metric_name) VALUES (?, ?);")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_33 $$ PreparedStatement psAddMetric = db.prepareStatement("INSERT INTO sdw.e_metric_name (bundle_id, metric_name) VALUES (?, ?);")[ FD ]
Line_33 $$ PreparedStatement psAddMetric = db.prepareStatement("INSERT INTO sdw.e_metric_name (bundle_id, metric_name) VALUES (?, ?);")-->Line_34 $$ psAddMetric.setInt(1, bundleId)[ FD ]
Line_28 $$ int bundleId = DbHelper.getIntKey(psId)-->Line_34 $$ psAddMetric.setInt(1, bundleId)[ FD ]
Line_35 $$ PreparedStatement psAddGroup2Metric = db.prepareStatement("INSERT INTO sdw.e_metric_groups (metric_name_id, metric_group_id) VALUES (?, ?);")-->Line_35 $$ PreparedStatement psAddGroup2Metric = db.prepareStatement("INSERT INTO sdw.e_metric_groups (metric_name_id, metric_group_id) VALUES (?, ?);")[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_35 $$ PreparedStatement psAddGroup2Metric = db.prepareStatement("INSERT INTO sdw.e_metric_groups (metric_name_id, metric_group_id) VALUES (?, ?);")[ FD ]
Line_36 $$ Iterator<MetricGroup> i = bundle.getAllMetricGroups()-->Line_36 $$ Iterator<MetricGroup> i = bundle.getAllMetricGroups()[ CD ]
Line_4 $$ Bundle bundle = new Bundle()-->Line_36 $$ Iterator<MetricGroup> i = bundle.getAllMetricGroups()[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_37 $$ while (i.hasNext()) [ CD ]
Line_36 $$ Iterator<MetricGroup> i = bundle.getAllMetricGroups()-->Line_37 $$ while (i.hasNext()) [ FD ]
Line_37 $$ while (i.hasNext()) -->Line_38 $$ MetricGroup grp = i.next()[ CD ]
Line_38 $$ MetricGroup grp = i.next()-->Line_38 $$ MetricGroup grp = i.next()[ CD ]
Line_36 $$ Iterator<MetricGroup> i = bundle.getAllMetricGroups()-->Line_38 $$ MetricGroup grp = i.next()[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_39 $$ psAddGroup.setString(2, grp.groupName)[ CD ]
Line_30 $$ PreparedStatement psAddGroup = db.prepareStatement("INSERT INTO sdw.e_metric_group (bundle_id, metric_group_name) VALUES (?, ?);")-->Line_39 $$ psAddGroup.setString(2, grp.groupName)[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_40 $$ if (1 != db.executeUpdate(psAddGroup))[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_40 $$ if (1 != db.executeUpdate(psAddGroup))[ FD ]
Line_30 $$ PreparedStatement psAddGroup = db.prepareStatement("INSERT INTO sdw.e_metric_group (bundle_id, metric_group_name) VALUES (?, ?);")-->Line_40 $$ if (1 != db.executeUpdate(psAddGroup))[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_41 $$ int groupId = DbHelper.getIntKey(psGroupId)[ CD ]
Line_41 $$ int groupId = DbHelper.getIntKey(psGroupId)-->Line_41 $$ int groupId = DbHelper.getIntKey(psGroupId)[ CD ]
Line_29 $$ PreparedStatement psGroupId = db.prepareStatement("SELECT currval('sdw.e_metric_group_serial');")-->Line_41 $$ int groupId = DbHelper.getIntKey(psGroupId)[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_42 $$ psAddGroup2Metric.setInt(2, groupId)[ CD ]
Line_35 $$ PreparedStatement psAddGroup2Metric = db.prepareStatement("INSERT INTO sdw.e_metric_groups (metric_name_id, metric_group_id) VALUES (?, ?);")-->Line_42 $$ psAddGroup2Metric.setInt(2, groupId)[ FD ]
Line_41 $$ int groupId = DbHelper.getIntKey(psGroupId)-->Line_42 $$ psAddGroup2Metric.setInt(2, groupId)[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_43 $$ Iterator<String> j = grp.getAllMetricNames()[ CD ]
Line_43 $$ Iterator<String> j = grp.getAllMetricNames()-->Line_43 $$ Iterator<String> j = grp.getAllMetricNames()[ CD ]
Line_38 $$ MetricGroup grp = i.next()-->Line_43 $$ Iterator<String> j = grp.getAllMetricNames()[ FD ]
Line_37 $$ while (i.hasNext()) -->Line_44 $$ while (j.hasNext()) [ CD ]
Line_37 $$ while (i.hasNext()) -->Line_37 $$ while (i.hasNext()) [ CD ]
Line_44 $$ while (j.hasNext()) -->Line_44 $$ while (j.hasNext()) [ CD ]
Line_43 $$ Iterator<String> j = grp.getAllMetricNames()-->Line_44 $$ while (j.hasNext()) [ FD ]
Line_44 $$ while (j.hasNext()) -->Line_45 $$ String metricName = j.next()[ CD ]
Line_45 $$ String metricName = j.next()-->Line_45 $$ String metricName = j.next()[ CD ]
Line_43 $$ Iterator<String> j = grp.getAllMetricNames()-->Line_45 $$ String metricName = j.next()[ FD ]
Line_44 $$ while (j.hasNext()) -->Line_46 $$ psAddMetric.setString(2, metricName)[ CD ]
Line_33 $$ PreparedStatement psAddMetric = db.prepareStatement("INSERT INTO sdw.e_metric_name (bundle_id, metric_name) VALUES (?, ?);")-->Line_46 $$ psAddMetric.setString(2, metricName)[ FD ]
Line_45 $$ String metricName = j.next()-->Line_46 $$ psAddMetric.setString(2, metricName)[ FD ]
Line_44 $$ while (j.hasNext()) -->Line_47 $$ if (1 != db.executeUpdate(psAddMetric))[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_47 $$ if (1 != db.executeUpdate(psAddMetric))[ FD ]
Line_33 $$ PreparedStatement psAddMetric = db.prepareStatement("INSERT INTO sdw.e_metric_name (bundle_id, metric_name) VALUES (?, ?);")-->Line_47 $$ if (1 != db.executeUpdate(psAddMetric))[ FD ]
Line_44 $$ while (j.hasNext()) -->Line_48 $$ int metricId = DbHelper.getIntKey(psMetricId)[ CD ]
Line_48 $$ int metricId = DbHelper.getIntKey(psMetricId)-->Line_48 $$ int metricId = DbHelper.getIntKey(psMetricId)[ CD ]
Line_32 $$ PreparedStatement psMetricId = db.prepareStatement("SELECT currval('sdw.e_metric_name_serial');")-->Line_48 $$ int metricId = DbHelper.getIntKey(psMetricId)[ FD ]
Line_44 $$ while (j.hasNext()) -->Line_49 $$ psAddGroup2Metric.setInt(1, metricId)[ CD ]
Line_35 $$ PreparedStatement psAddGroup2Metric = db.prepareStatement("INSERT INTO sdw.e_metric_groups (metric_name_id, metric_group_id) VALUES (?, ?);")-->Line_49 $$ psAddGroup2Metric.setInt(1, metricId)[ FD ]
Line_48 $$ int metricId = DbHelper.getIntKey(psMetricId)-->Line_49 $$ psAddGroup2Metric.setInt(1, metricId)[ FD ]
Line_44 $$ while (j.hasNext()) -->Line_50 $$ if (1 != db.executeUpdate(psAddGroup2Metric))[ CD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_50 $$ if (1 != db.executeUpdate(psAddGroup2Metric))[ FD ]
Line_35 $$ PreparedStatement psAddGroup2Metric = db.prepareStatement("INSERT INTO sdw.e_metric_groups (metric_name_id, metric_group_id) VALUES (?, ?);")-->Line_50 $$ if (1 != db.executeUpdate(psAddGroup2Metric))[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_55 $$ db.rollback()[ FD ]
Line_2 $$ public static boolean installMetricsCfg(Db db, String xmlFileName) throws Exception -->Line_58 $$ db.commitUnless()[ FD ]
Line_41 $$ int groupId = DbHelper.getIntKey(psGroupId)-->Line_42 $$ psAddGroup2Metric.setInt(2, groupId)[ FD ]
Line_38 $$ MetricGroup grp = i.next()-->Line_43 $$ Iterator<String> j = grp.getAllMetricNames()[ FD ]
Line_45 $$ String metricName = j.next()-->Line_46 $$ psAddMetric.setString(2, metricName)[ FD ]
Line_48 $$ int metricId = DbHelper.getIntKey(psMetricId)-->Line_49 $$ psAddGroup2Metric.setInt(1, metricId)[ FD ]
