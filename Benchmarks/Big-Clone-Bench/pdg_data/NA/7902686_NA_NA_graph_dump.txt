Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public MapInfo loadLocalMapData(String fileName) [ CD ]
Line_2 $$ public MapInfo loadLocalMapData(String fileName) -->Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)[ CD ]
Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)-->Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)[ CD ]
Line_2 $$ public MapInfo loadLocalMapData(String fileName) -->Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)[ FD ]
Line_2 $$ public MapInfo loadLocalMapData(String fileName) -->Line_4 $$ if (info != null && info.getContent() == null) [ CD ]
Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)-->Line_4 $$ if (info != null && info.getContent() == null) [ FD ]
Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()-->Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()[ CD ]
Line_7 $$ URL fetchUrl = new URL(localMapContextUrl, fileName)-->Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()[ FD ]
Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()-->Line_9 $$ if (urlconnection.getContentEncoding() != null) [ FD ]
Line_9 $$ if (urlconnection.getContentEncoding() != null) -->Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))[ CD ]
Line_6 $$ BufferedReader bufferedreader-->Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))[ FD ]
Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))-->Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))[ FD ]
Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()-->Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))[ FD ]
Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()-->Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))[ FD ]
Line_9 $$ if (urlconnection.getContentEncoding() != null) -->Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))[ CD ]
Line_6 $$ BufferedReader bufferedreader-->Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))[ FD ]
Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))-->Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))[ FD ]
Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))-->Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))[ FD ]
Line_8 $$ URLConnection urlconnection = fetchUrl.openConnection()-->Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))[ FD ]
Line_16 $$ while ((line = bufferedreader.readLine()) != null) -->Line_16 $$ while ((line = bufferedreader.readLine()) != null) [ FD ]
Line_14 $$ String line-->Line_16 $$ while ((line = bufferedreader.readLine()) != null) [ FD ]
Line_16 $$ while ((line = bufferedreader.readLine()) != null) -->Line_16 $$ while ((line = bufferedreader.readLine()) != null) [ CD ]
Line_6 $$ BufferedReader bufferedreader-->Line_16 $$ while ((line = bufferedreader.readLine()) != null) [ FD ]
Line_10 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), urlconnection.getContentEncoding()))-->Line_16 $$ while ((line = bufferedreader.readLine()) != null) [ FD ]
Line_12 $$ bufferedreader = new BufferedReader(new InputStreamReader(urlconnection.getInputStream(), "utf-8"))-->Line_16 $$ while ((line = bufferedreader.readLine()) != null) [ FD ]
Line_16 $$ while ((line = bufferedreader.readLine()) != null) -->Line_17 $$ mapContent.append(line)[ CD ]
Line_15 $$ StringBuilder mapContent = new StringBuilder()-->Line_17 $$ mapContent.append(line)[ FD ]
Line_16 $$ while ((line = bufferedreader.readLine()) != null) -->Line_17 $$ mapContent.append(line)[ FD ]
Line_14 $$ String line-->Line_17 $$ mapContent.append(line)[ FD ]
Line_16 $$ while ((line = bufferedreader.readLine()) != null) -->Line_18 $$ mapContent.append("\n")[ CD ]
Line_15 $$ StringBuilder mapContent = new StringBuilder()-->Line_18 $$ mapContent.append("\n")[ FD ]
Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)-->Line_20 $$ info.setContent(mapContent.toString())[ FD ]
Line_15 $$ StringBuilder mapContent = new StringBuilder()-->Line_20 $$ info.setContent(mapContent.toString())[ FD ]
Line_21 $$ GameMapImplementation gameMap = GameMapImplementation.createFromMapInfo(info)-->Line_21 $$ GameMapImplementation gameMap = GameMapImplementation.createFromMapInfo(info)[ CD ]
Line_3 $$ MapInfo info = mapCacheLocal.get(fileName)-->Line_21 $$ GameMapImplementation gameMap = GameMapImplementation.createFromMapInfo(info)[ FD ]
Line_2 $$ public MapInfo loadLocalMapData(String fileName) -->Line_26 $$ return info[ CD ]
Line_16 $$ while ((line = bufferedreader.readLine()) != null) -->Line_17 $$ mapContent.append(line)[ FD ]
