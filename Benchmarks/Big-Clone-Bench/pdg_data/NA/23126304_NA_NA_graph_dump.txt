Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws SinaduraCoreException [ CD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws SinaduraCoreException -->Line_3 $$ byte[] respBytes = null[ CD ]
Line_7 $$ if (this.proxy == null)-->Line_7 $$ tsaConnection = url.openConnection()[ CD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_7 $$ tsaConnection = url.openConnection()[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_7 $$ tsaConnection = url.openConnection()[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_7 $$ tsaConnection = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(this.tsaURL)-->Line_7 $$ tsaConnection = url.openConnection()[ FD ]
Line_7 $$ if (this.proxy == null)-->Line_7 $$ tsaConnection = url.openConnection(this.proxy)[ CD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_7 $$ tsaConnection = url.openConnection(this.proxy)[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_7 $$ tsaConnection = url.openConnection(this.proxy)[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_7 $$ tsaConnection = url.openConnection(this.proxy)[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_7 $$ tsaConnection = url.openConnection(this.proxy)[ CD ]
Line_5 $$ URL url = new URL(this.tsaURL)-->Line_7 $$ tsaConnection = url.openConnection(this.proxy)[ FD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_8 $$ tsaConnection.setDoInput(true)[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_8 $$ tsaConnection.setDoInput(true)[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_8 $$ tsaConnection.setDoInput(true)[ FD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_9 $$ tsaConnection.setDoOutput(true)[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_9 $$ tsaConnection.setDoOutput(true)[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_9 $$ tsaConnection.setDoOutput(true)[ FD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_10 $$ tsaConnection.setUseCaches(false)[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_10 $$ tsaConnection.setUseCaches(false)[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_10 $$ tsaConnection.setUseCaches(false)[ FD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_11 $$ tsaConnection.setRequestProperty("Content-Type", "application/timestamp-query")[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_11 $$ tsaConnection.setRequestProperty("Content-Type", "application/timestamp-query")[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_11 $$ tsaConnection.setRequestProperty("Content-Type", "application/timestamp-query")[ FD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_12 $$ tsaConnection.setRequestProperty("Content-Transfer-Encoding", "binary")[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_12 $$ tsaConnection.setRequestProperty("Content-Transfer-Encoding", "binary")[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_12 $$ tsaConnection.setRequestProperty("Content-Transfer-Encoding", "binary")[ FD ]
Line_13 $$ if ((this.tsaUsername != null) && !this.tsaUsername.equals("")) -->Line_13 $$ if ((this.tsaUsername != null) && !this.tsaUsername.equals("")) [ CD ]
Line_13 $$ if ((this.tsaUsername != null) && !this.tsaUsername.equals("")) -->Line_14 $$ String userPassword = this.tsaUsername + ":" + this.tsaPassword[ CD ]
Line_13 $$ if ((this.tsaUsername != null) && !this.tsaUsername.equals("")) -->Line_15 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + new String(new sun.misc.BASE64Encoder().encode(userPassword.getBytes())))[ CD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_15 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + new String(new sun.misc.BASE64Encoder().encode(userPassword.getBytes())))[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_15 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + new String(new sun.misc.BASE64Encoder().encode(userPassword.getBytes())))[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_15 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + new String(new sun.misc.BASE64Encoder().encode(userPassword.getBytes())))[ FD ]
Line_14 $$ String userPassword = this.tsaUsername + ":" + this.tsaPassword-->Line_15 $$ tsaConnection.setRequestProperty("Authorization", "Basic " + new String(new sun.misc.BASE64Encoder().encode(userPassword.getBytes())))[ FD ]
Line_17 $$ OutputStream out = tsaConnection.getOutputStream()-->Line_17 $$ OutputStream out = tsaConnection.getOutputStream()[ CD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_17 $$ OutputStream out = tsaConnection.getOutputStream()[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_17 $$ OutputStream out = tsaConnection.getOutputStream()[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_17 $$ OutputStream out = tsaConnection.getOutputStream()[ FD ]
Line_17 $$ OutputStream out = tsaConnection.getOutputStream()-->Line_18 $$ out.write(requestBytes)[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws SinaduraCoreException -->Line_18 $$ out.write(requestBytes)[ FD ]
Line_17 $$ OutputStream out = tsaConnection.getOutputStream()-->Line_19 $$ out.close()[ FD ]
Line_20 $$ InputStream inp = tsaConnection.getInputStream()-->Line_20 $$ InputStream inp = tsaConnection.getInputStream()[ CD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_20 $$ InputStream inp = tsaConnection.getInputStream()[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_20 $$ InputStream inp = tsaConnection.getInputStream()[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_20 $$ InputStream inp = tsaConnection.getInputStream()[ FD ]
Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_23 $$ int bytesRead = 0-->Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ CD ]
Line_20 $$ InputStream inp = tsaConnection.getInputStream()-->Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_22 $$ byte[] buffer = new byte[1024]-->Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_25 $$ baos.write(buffer, 0, bytesRead)[ CD ]
Line_21 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_25 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_22 $$ byte[] buffer = new byte[1024]-->Line_25 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_25 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_23 $$ int bytesRead = 0-->Line_25 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_3 $$ byte[] respBytes = null-->Line_27 $$ respBytes = baos.toByteArray()[ FD ]
Line_27 $$ respBytes = baos.toByteArray()-->Line_27 $$ respBytes = baos.toByteArray()[ FD ]
Line_27 $$ respBytes = baos.toByteArray()-->Line_27 $$ respBytes = baos.toByteArray()[ CD ]
Line_21 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_27 $$ respBytes = baos.toByteArray()[ FD ]
Line_28 $$ String encoding = tsaConnection.getContentEncoding()-->Line_28 $$ String encoding = tsaConnection.getContentEncoding()[ CD ]
Line_6 $$ URLConnection tsaConnection = null-->Line_28 $$ String encoding = tsaConnection.getContentEncoding()[ FD ]
Line_7 $$ tsaConnection = url.openConnection()-->Line_28 $$ String encoding = tsaConnection.getContentEncoding()[ FD ]
Line_7 $$ tsaConnection = url.openConnection(this.proxy)-->Line_28 $$ String encoding = tsaConnection.getContentEncoding()[ FD ]
Line_28 $$ String encoding = tsaConnection.getContentEncoding()-->Line_29 $$ if (encoding != null && encoding.equalsIgnoreCase("base64")) [ FD ]
Line_29 $$ if (encoding != null && encoding.equalsIgnoreCase("base64")) -->Line_30 $$ sun.misc.BASE64Decoder dec = new sun.misc.BASE64Decoder()[ CD ]
Line_29 $$ if (encoding != null && encoding.equalsIgnoreCase("base64")) -->Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))[ CD ]
Line_3 $$ byte[] respBytes = null-->Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))[ FD ]
Line_27 $$ respBytes = baos.toByteArray()-->Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))[ FD ]
Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))-->Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))[ FD ]
Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))-->Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))[ CD ]
Line_30 $$ sun.misc.BASE64Decoder dec = new sun.misc.BASE64Decoder()-->Line_31 $$ respBytes = dec.decodeBuffer(new String(respBytes))[ FD ]
Line_2 $$ protected byte[] getTSAResponse(byte[] requestBytes) throws SinaduraCoreException -->Line_38 $$ return respBytes[ CD ]
Line_24 $$ while ((bytesRead = inp.read(buffer, 0, buffer.length)) >= 0) -->Line_25 $$ baos.write(buffer, 0, bytesRead)[ FD ]
