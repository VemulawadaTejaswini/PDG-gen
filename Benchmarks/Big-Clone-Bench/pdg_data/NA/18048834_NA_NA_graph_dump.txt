Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException [ CD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)[ CD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)[ FD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_4 $$ if (con == null) [ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_4 $$ if (con == null) [ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_8 $$ con.setAutoCommit(false)[ FD ]
Line_9 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()-->Line_9 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()[ CD ]
Line_2 $$ public void delete(DeleteInterceptorChain chain, DistinguishedName dn, LDAPConstraints constraints) throws LDAPException -->Line_9 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()[ FD ]
Line_10 $$ PreparedStatement ps = con.prepareStatement(this.deleteSQL)-->Line_10 $$ PreparedStatement ps = con.prepareStatement(this.deleteSQL)[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_10 $$ PreparedStatement ps = con.prepareStatement(this.deleteSQL)[ FD ]
Line_10 $$ PreparedStatement ps = con.prepareStatement(this.deleteSQL)-->Line_11 $$ ps.setString(1, uid)[ FD ]
Line_9 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()-->Line_11 $$ ps.setString(1, uid)[ FD ]
Line_10 $$ PreparedStatement ps = con.prepareStatement(this.deleteSQL)-->Line_12 $$ ps.executeUpdate()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_13 $$ con.commit()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_16 $$ con.rollback()[ FD ]
