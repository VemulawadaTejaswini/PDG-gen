Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) [ CD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_3 $$ if (!inputFile.exists() || inputFile.length() <= 0) [ CD ]
Line_3 $$ if (!inputFile.exists() || inputFile.length() <= 0) -->Line_3 $$ if (!inputFile.exists() || inputFile.length() <= 0) [ CD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_3 $$ if (!inputFile.exists() || inputFile.length() <= 0) [ FD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_3 $$ if (!inputFile.exists() || inputFile.length() <= 0) [ FD ]
Line_3 $$ if (!inputFile.exists() || inputFile.length() <= 0) -->Line_4 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_NOT_FOUND, "No such file" + ": " + inputFile)[ CD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_6 $$ if (username != null && password != null) [ CD ]
Line_6 $$ if (username != null && password != null) -->Line_7 $$ Authenticator.setDefault(new Authenticator() [ CD ]
Line_7 $$ Authenticator.setDefault(new Authenticator() -->Line_9 $$ return new PasswordAuthentication(username, password.toCharArray())[ CD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_9 $$ return new PasswordAuthentication(username, password.toCharArray())[ FD ]
Line_6 $$ if (username != null && password != null) -->Line_13 $$ Authenticator.setDefault(new Authenticator() [ CD ]
Line_13 $$ Authenticator.setDefault(new Authenticator() -->Line_15 $$ return null[ CD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_22 $$ urlC = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_30 $$ urlC.setRequestProperty("Content-Length", "" + inputFile.length())[ FD ]
Line_38 $$ while ((bytesRead = dis.read(buf)) != -1) -->Line_39 $$ dos.write(buf, 0, bytesRead)[ CD ]
Line_45 $$ if (code < 200 || code >= 300) -->Line_46 $$ os.close()[ CD ]
Line_45 $$ if (code < 200 || code >= 300) -->Line_47 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_OTHER_ERROR, "Server does not accept PUT.  Response Code=" + code)[ CD ]
Line_53 $$ while ((bytesRead = respIs.read(buf)) != -1) -->Line_54 $$ response.append(new String(buf))[ CD ]
Line_63 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) -->Line_64 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_NOT_FOUND, "File not found on server")[ CD ]
Line_63 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) -->Line_65 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) [ CD ]
Line_65 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) -->Line_66 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_AUTH_REQUIRED, "Authorizaton required")[ CD ]
Line_65 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) -->Line_67 $$ if (urlC.getResponseCode() != HttpURLConnection.HTTP_OK) [ CD ]
Line_67 $$ if (urlC.getResponseCode() != HttpURLConnection.HTTP_OK) -->Line_68 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_OTHER_ERROR, "HTTP Error" + ": " + urlC.getResponseCode() + ": " + urlC.getResponseMessage())[ CD ]
Line_72 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) -->Line_73 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_NOT_FOUND, "File not found on server")[ CD ]
Line_72 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) -->Line_74 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) [ CD ]
Line_74 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) -->Line_75 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_AUTH_REQUIRED, "Authorizaton required")[ CD ]
Line_74 $$ if (urlC.getResponseCode() == HttpURLConnection.HTTP_UNAUTHORIZED) -->Line_76 $$ if (urlC.getResponseCode() != HttpURLConnection.HTTP_OK) [ CD ]
Line_76 $$ if (urlC.getResponseCode() != HttpURLConnection.HTTP_OK) -->Line_77 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_OTHER_ERROR, "HTTP Error" + " " + urlC.getResponseCode() + ": " + urlC.getResponseMessage())[ CD ]
Line_76 $$ if (urlC.getResponseCode() != HttpURLConnection.HTTP_OK) -->Line_79 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_OTHER_ERROR, "HTTP I/O Exception" + ":", e1)[ CD ]
Line_2 $$ public static HttpClientStatus putRemoteCalendar(URL url, final String username, final String password, File inputFile) -->Line_86 $$ return new HttpClientStatus(HttpClientStatus.HTTP_STATUS_SUCCESS, "File successfully uploaded")[ CD ]
