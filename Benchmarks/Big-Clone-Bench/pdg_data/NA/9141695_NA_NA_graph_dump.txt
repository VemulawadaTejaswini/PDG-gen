Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_3 $$ MD5Encoder encoder = new MD5Encoder()[ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_4 $$ String ha2 = null[ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_5 $$ MessageDigest md5 = null[ CD ]
Line_5 $$ MessageDigest md5 = null-->Line_7 $$ md5 = MessageDigest.getInstance("MD5")[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_7 $$ md5 = MessageDigest.getInstance("MD5")[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_7 $$ md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_11 $$ if (method == null || uri == null) [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_14 $$ if (qop != null && qop.equals("auth-int")) [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_14 $$ if (qop != null && qop.equals("auth-int")) [ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_17 $$ if (nonce == null) [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_17 $$ if (nonce == null) [ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_20 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_20 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) [ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_20 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) [ FD ]
Line_20 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) -->Line_21 $$ if (nonceCount == null || cnonce == null) [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_25 $$ md5.update((method + ":" + uri).getBytes())[ CD ]
Line_5 $$ MessageDigest md5 = null-->Line_25 $$ md5.update((method + ":" + uri).getBytes())[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_25 $$ md5.update((method + ":" + uri).getBytes())[ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_26 $$ ha2 = encoder.encode(md5.digest())[ CD ]
Line_4 $$ String ha2 = null-->Line_26 $$ ha2 = encoder.encode(md5.digest())[ FD ]
Line_26 $$ ha2 = encoder.encode(md5.digest())-->Line_26 $$ ha2 = encoder.encode(md5.digest())[ FD ]
Line_26 $$ ha2 = encoder.encode(md5.digest())-->Line_26 $$ ha2 = encoder.encode(md5.digest())[ CD ]
Line_3 $$ MD5Encoder encoder = new MD5Encoder()-->Line_26 $$ ha2 = encoder.encode(md5.digest())[ FD ]
Line_5 $$ MessageDigest md5 = null-->Line_26 $$ ha2 = encoder.encode(md5.digest())[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_26 $$ ha2 = encoder.encode(md5.digest())[ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_27 $$ md5.update((ha1 + ":" + nonce + ":").getBytes())[ CD ]
Line_5 $$ MessageDigest md5 = null-->Line_27 $$ md5.update((ha1 + ":" + nonce + ":").getBytes())[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_27 $$ md5.update((ha1 + ":" + nonce + ":").getBytes())[ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_28 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) [ CD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_28 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) [ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_28 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) [ FD ]
Line_28 $$ if (qop != null && (qop.equals("auth") || qop.equals("auth-int"))) -->Line_29 $$ md5.update((nonceCount + ":" + cnonce + ":" + qop + ":").getBytes())[ CD ]
Line_5 $$ MessageDigest md5 = null-->Line_29 $$ md5.update((nonceCount + ":" + cnonce + ":" + qop + ":").getBytes())[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_29 $$ md5.update((nonceCount + ":" + cnonce + ":" + qop + ":").getBytes())[ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_31 $$ md5.update(ha2.getBytes())[ CD ]
Line_5 $$ MessageDigest md5 = null-->Line_31 $$ md5.update(ha2.getBytes())[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_31 $$ md5.update(ha2.getBytes())[ FD ]
Line_4 $$ String ha2 = null-->Line_31 $$ md5.update(ha2.getBytes())[ FD ]
Line_26 $$ ha2 = encoder.encode(md5.digest())-->Line_31 $$ md5.update(ha2.getBytes())[ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_32 $$ String response = encoder.encode(md5.digest())[ CD ]
Line_32 $$ String response = encoder.encode(md5.digest())-->Line_32 $$ String response = encoder.encode(md5.digest())[ CD ]
Line_3 $$ MD5Encoder encoder = new MD5Encoder()-->Line_32 $$ String response = encoder.encode(md5.digest())[ FD ]
Line_5 $$ MessageDigest md5 = null-->Line_32 $$ String response = encoder.encode(md5.digest())[ FD ]
Line_7 $$ md5 = MessageDigest.getInstance("MD5")-->Line_32 $$ String response = encoder.encode(md5.digest())[ FD ]
Line_2 $$ public static String calcResponse(String ha1, String nonce, String nonceCount, String cnonce, String qop, String method, String uri) throws FatalException, MD5DigestException -->Line_33 $$ return response[ CD ]
