Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testSetRequestProperty() throws Exception [ CD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_3 $$ MockHTTPServer httpServer = new MockHTTPServer("HTTP Server for User-Specified Request Property", 2)[ CD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_4 $$ httpServer.start()[ CD ]
Line_3 $$ MockHTTPServer httpServer = new MockHTTPServer("HTTP Server for User-Specified Request Property", 2)-->Line_4 $$ httpServer.start()[ FD ]
Line_6 $$ if (!httpServer.started) -->Line_6 $$ if (!httpServer.started) [ CD ]
Line_6 $$ if (!httpServer.started) -->Line_7 $$ bound.wait(5000)[ CD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()[ CD ]
Line_3 $$ MockHTTPServer httpServer = new MockHTTPServer("HTTP Server for User-Specified Request Property", 2)-->Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_11 $$ assertEquals(0, urlConnection.getRequestProperties().size())[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_11 $$ assertEquals(0, urlConnection.getRequestProperties().size())[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_12 $$ final String PROPERTY1 = "Accept"[ CD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_13 $$ final String PROPERTY2 = "Connection"[ CD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_14 $$ urlConnection.setRequestProperty(PROPERTY1, null)[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_14 $$ urlConnection.setRequestProperty(PROPERTY1, null)[ FD ]
Line_12 $$ final String PROPERTY1 = "Accept"-->Line_14 $$ urlConnection.setRequestProperty(PROPERTY1, null)[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_15 $$ urlConnection.setRequestProperty(PROPERTY1, null)[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_15 $$ urlConnection.setRequestProperty(PROPERTY1, null)[ FD ]
Line_12 $$ final String PROPERTY1 = "Accept"-->Line_15 $$ urlConnection.setRequestProperty(PROPERTY1, null)[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_16 $$ urlConnection.setRequestProperty(PROPERTY2, "keep-alive")[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_16 $$ urlConnection.setRequestProperty(PROPERTY2, "keep-alive")[ FD ]
Line_13 $$ final String PROPERTY2 = "Connection"-->Line_16 $$ urlConnection.setRequestProperty(PROPERTY2, "keep-alive")[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_17 $$ assertEquals(2, urlConnection.getRequestProperties().size())[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_17 $$ assertEquals(2, urlConnection.getRequestProperties().size())[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_18 $$ assertNull(urlConnection.getRequestProperty(PROPERTY1))[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_18 $$ assertNull(urlConnection.getRequestProperty(PROPERTY1))[ FD ]
Line_12 $$ final String PROPERTY1 = "Accept"-->Line_18 $$ assertNull(urlConnection.getRequestProperty(PROPERTY1))[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_19 $$ assertEquals("keep-alive", urlConnection.getRequestProperty(PROPERTY2))[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_19 $$ assertEquals("keep-alive", urlConnection.getRequestProperty(PROPERTY2))[ FD ]
Line_13 $$ final String PROPERTY2 = "Connection"-->Line_19 $$ assertEquals("keep-alive", urlConnection.getRequestProperty(PROPERTY2))[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_20 $$ urlConnection.setRequestProperty(PROPERTY1, "/")[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_20 $$ urlConnection.setRequestProperty(PROPERTY1, "/")[ FD ]
Line_12 $$ final String PROPERTY1 = "Accept"-->Line_20 $$ urlConnection.setRequestProperty(PROPERTY1, "/")[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_21 $$ urlConnection.setRequestProperty(PROPERTY2, null)[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_21 $$ urlConnection.setRequestProperty(PROPERTY2, null)[ FD ]
Line_13 $$ final String PROPERTY2 = "Connection"-->Line_21 $$ urlConnection.setRequestProperty(PROPERTY2, null)[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_22 $$ assertEquals("/", urlConnection.getRequestProperty(PROPERTY1))[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_22 $$ assertEquals("/", urlConnection.getRequestProperty(PROPERTY1))[ FD ]
Line_12 $$ final String PROPERTY1 = "Accept"-->Line_22 $$ assertEquals("/", urlConnection.getRequestProperty(PROPERTY1))[ FD ]
Line_2 $$ public void testSetRequestProperty() throws Exception -->Line_23 $$ assertNull(urlConnection.getRequestProperty(PROPERTY2))[ CD ]
Line_10 $$ HttpURLConnection urlConnection = (HttpURLConnection) new URL("http://localhost:" + httpServer.port()).openConnection()-->Line_23 $$ assertNull(urlConnection.getRequestProperty(PROPERTY2))[ FD ]
Line_13 $$ final String PROPERTY2 = "Connection"-->Line_23 $$ assertNull(urlConnection.getRequestProperty(PROPERTY2))[ FD ]
