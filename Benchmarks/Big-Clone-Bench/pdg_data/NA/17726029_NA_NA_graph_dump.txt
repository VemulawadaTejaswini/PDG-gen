Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String getRandomGUID(final boolean secure) [ CD ]
Line_2 $$ private String getRandomGUID(final boolean secure) -->Line_3 $$ MessageDigest md5 = null[ CD ]
Line_2 $$ private String getRandomGUID(final boolean secure) -->Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()[ CD ]
Line_3 $$ MessageDigest md5 = null-->Line_6 $$ md5 = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ md5 = MessageDigest.getInstance("MD5")-->Line_6 $$ md5 = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ md5 = MessageDigest.getInstance("MD5")-->Line_6 $$ md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_11 $$ final long time = System.currentTimeMillis()-->Line_11 $$ final long time = System.currentTimeMillis()[ CD ]
Line_13 $$ if (secure) -->Line_14 $$ rand = mySecureRand.nextLong()[ CD ]
Line_12 $$ final long rand-->Line_14 $$ rand = mySecureRand.nextLong()[ FD ]
Line_14 $$ rand = mySecureRand.nextLong()-->Line_14 $$ rand = mySecureRand.nextLong()[ FD ]
Line_14 $$ rand = mySecureRand.nextLong()-->Line_14 $$ rand = mySecureRand.nextLong()[ CD ]
Line_13 $$ if (secure) -->Line_16 $$ rand = myRand.nextLong()[ CD ]
Line_12 $$ final long rand-->Line_16 $$ rand = myRand.nextLong()[ FD ]
Line_14 $$ rand = mySecureRand.nextLong()-->Line_16 $$ rand = myRand.nextLong()[ FD ]
Line_16 $$ rand = myRand.nextLong()-->Line_16 $$ rand = myRand.nextLong()[ FD ]
Line_16 $$ rand = myRand.nextLong()-->Line_16 $$ rand = myRand.nextLong()[ CD ]
Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_18 $$ sbValueBeforeMD5.append(id)[ FD ]
Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_19 $$ sbValueBeforeMD5.append(SEMI_COLON)[ FD ]
Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_20 $$ sbValueBeforeMD5.append(Long.toString(time))[ FD ]
Line_11 $$ final long time = System.currentTimeMillis()-->Line_20 $$ sbValueBeforeMD5.append(Long.toString(time))[ FD ]
Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_21 $$ sbValueBeforeMD5.append(SEMI_COLON)[ FD ]
Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_22 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_12 $$ final long rand-->Line_22 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_14 $$ rand = mySecureRand.nextLong()-->Line_22 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_16 $$ rand = myRand.nextLong()-->Line_22 $$ sbValueBeforeMD5.append(Long.toString(rand))[ FD ]
Line_4 $$ final StringBuffer sbValueBeforeMD5 = new StringBuffer()-->Line_23 $$ valueBeforeMD5 = sbValueBeforeMD5.toString()[ FD ]
Line_3 $$ MessageDigest md5 = null-->Line_24 $$ md5.update(valueBeforeMD5.getBytes())[ FD ]
Line_6 $$ md5 = MessageDigest.getInstance("MD5")-->Line_24 $$ md5.update(valueBeforeMD5.getBytes())[ FD ]
Line_25 $$ final byte[] array = md5.digest()-->Line_25 $$ final byte[] array = md5.digest()[ CD ]
Line_3 $$ MessageDigest md5 = null-->Line_25 $$ final byte[] array = md5.digest()[ FD ]
Line_6 $$ md5 = MessageDigest.getInstance("MD5")-->Line_25 $$ final byte[] array = md5.digest()[ FD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_27 $$ for (int j = 0; j < array.length; ++j) [ CD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_27 $$ for (int j = 0; j < array.length; ++j) [ CD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_27 $$ for (int j = 0; j < array.length; ++j) [ FD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_28 $$ final int bufferIndex = array[j] & SHIFT_SPACE[ CD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_29 $$ if (ZERO_TEST > bufferIndex)[ CD ]
Line_28 $$ final int bufferIndex = array[j] & SHIFT_SPACE-->Line_29 $$ if (ZERO_TEST > bufferIndex)[ FD ]
Line_29 $$ if (ZERO_TEST > bufferIndex)-->Line_29 $$ sb.append(CHAR_ZERO)[ CD ]
Line_26 $$ final StringBuffer sb = new StringBuffer()-->Line_29 $$ sb.append(CHAR_ZERO)[ FD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_30 $$ sb.append(Integer.toHexString(bufferIndex))[ CD ]
Line_26 $$ final StringBuffer sb = new StringBuffer()-->Line_30 $$ sb.append(Integer.toHexString(bufferIndex))[ FD ]
Line_28 $$ final int bufferIndex = array[j] & SHIFT_SPACE-->Line_30 $$ sb.append(Integer.toHexString(bufferIndex))[ FD ]
Line_32 $$ return sb.toString()-->Line_32 $$ return sb.toString()[ CD ]
Line_26 $$ final StringBuffer sb = new StringBuffer()-->Line_32 $$ return sb.toString()[ FD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_27 $$ for (int j = 0; j < array.length; ++j) [ FD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_27 $$ for (int j = 0; j < array.length; ++j) [ FD ]
Line_27 $$ for (int j = 0; j < array.length; ++j) -->Line_27 $$ for (int j = 0; j < array.length; ++j) [ FD ]
Line_28 $$ final int bufferIndex = array[j] & SHIFT_SPACE-->Line_29 $$ if (ZERO_TEST > bufferIndex)[ FD ]
Line_28 $$ final int bufferIndex = array[j] & SHIFT_SPACE-->Line_30 $$ sb.append(Integer.toHexString(bufferIndex))[ FD ]
