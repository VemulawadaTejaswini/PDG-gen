Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void executa(String arquivo, String filial, String ip) [ CD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_3 $$ String drive = arquivo.substring(0, 2)[ CD ]
Line_3 $$ String drive = arquivo.substring(0, 2)-->Line_3 $$ String drive = arquivo.substring(0, 2)[ CD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_3 $$ String drive = arquivo.substring(0, 2)[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_4 $$ if (drive.indexOf(":") == -1)[ CD ]
Line_3 $$ String drive = arquivo.substring(0, 2)-->Line_4 $$ if (drive.indexOf(":") == -1)[ FD ]
Line_4 $$ if (drive.indexOf(":") == -1)-->Line_4 $$ drive = ""[ CD ]
Line_3 $$ String drive = arquivo.substring(0, 2)-->Line_4 $$ drive = ""[ FD ]
Line_4 $$ drive = ""-->Line_4 $$ drive = ""[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_5 $$ Properties p = Util.lerPropriedades(arquivo)[ CD ]
Line_5 $$ Properties p = Util.lerPropriedades(arquivo)-->Line_5 $$ Properties p = Util.lerPropriedades(arquivo)[ CD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_5 $$ Properties p = Util.lerPropriedades(arquivo)[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_6 $$ String servidor = p.getProperty("servidor")[ CD ]
Line_6 $$ String servidor = p.getProperty("servidor")-->Line_6 $$ String servidor = p.getProperty("servidor")[ CD ]
Line_5 $$ Properties p = Util.lerPropriedades(arquivo)-->Line_6 $$ String servidor = p.getProperty("servidor")[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_7 $$ String impressora = p.getProperty("fila")[ CD ]
Line_7 $$ String impressora = p.getProperty("fila")-->Line_7 $$ String impressora = p.getProperty("fila")[ CD ]
Line_5 $$ Properties p = Util.lerPropriedades(arquivo)-->Line_7 $$ String impressora = p.getProperty("fila")[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_8 $$ String arqRel = new String(drive + p.getProperty("arquivo"))[ CD ]
Line_5 $$ Properties p = Util.lerPropriedades(arquivo)-->Line_8 $$ String arqRel = new String(drive + p.getProperty("arquivo"))[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_9 $$ String copias = p.getProperty("copias")[ CD ]
Line_9 $$ String copias = p.getProperty("copias")-->Line_9 $$ String copias = p.getProperty("copias")[ CD ]
Line_5 $$ Properties p = Util.lerPropriedades(arquivo)-->Line_9 $$ String copias = p.getProperty("copias")[ FD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ CD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ FD ]
Line_6 $$ String servidor = p.getProperty("servidor")-->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ CD ]
Line_2 $$ public static void executa(String arquivo, String filial, String ip) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ FD ]
Line_6 $$ String servidor = p.getProperty("servidor")-->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_11 $$ Socket s = null[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_12 $$ int tentativas = 0[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_13 $$ boolean conectado = false[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_14 $$ while (!conectado) [ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ CD ]
Line_14 $$ while (!conectado) -->Line_14 $$ while (!conectado) [ CD ]
Line_13 $$ boolean conectado = false-->Line_14 $$ while (!conectado) [ FD ]
Line_12 $$ int tentativas = 0-->Line_16 $$ tentativas++[ FD ]
Line_18 $$ s = new Socket(ip, 7000)-->Line_18 $$ s = new Socket(ip, 7000)[ FD ]
Line_11 $$ Socket s = null-->Line_18 $$ s = new Socket(ip, 7000)[ FD ]
Line_19 $$ conectado = s.isConnected()-->Line_19 $$ conectado = s.isConnected()[ FD ]
Line_13 $$ boolean conectado = false-->Line_19 $$ conectado = s.isConnected()[ FD ]
Line_19 $$ conectado = s.isConnected()-->Line_19 $$ conectado = s.isConnected()[ CD ]
Line_18 $$ s = new Socket(ip, 7000)-->Line_19 $$ conectado = s.isConnected()[ FD ]
Line_11 $$ Socket s = null-->Line_19 $$ conectado = s.isConnected()[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_29 $$ FileInputStream in = null[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_30 $$ BufferedOutputStream out = null[ CD ]
Line_29 $$ FileInputStream in = null-->Line_32 $$ in = new FileInputStream(new File(arqRel))[ FD ]
Line_32 $$ in = new FileInputStream(new File(arqRel))-->Line_32 $$ in = new FileInputStream(new File(arqRel))[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))[ FD ]
Line_18 $$ s = new Socket(ip, 7000)-->Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))[ FD ]
Line_11 $$ Socket s = null-->Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_39 $$ String arqtr = arqRel.substring(2)[ CD ]
Line_39 $$ String arqtr = arqRel.substring(2)-->Line_39 $$ String arqtr = arqRel.substring(2)[ CD ]
Line_8 $$ String arqRel = new String(drive + p.getProperty("arquivo"))-->Line_39 $$ String arqtr = arqRel.substring(2)[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_40 $$ System.out.println("Proximo arquivo: " + arqRel + " ->" + arqtr)[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_41 $$ while (arqtr.length() < 30) arqtr += " "[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ CD ]
Line_39 $$ String arqtr = arqRel.substring(2)-->Line_41 $$ while (arqtr.length() < 30) arqtr += " "[ FD ]
Line_41 $$ while (arqtr.length() < 30) arqtr += " "-->Line_41 $$ arqtr += " "[ CD ]
Line_41 $$ arqtr += " "-->Line_41 $$ arqtr += " "[ FD ]
Line_39 $$ String arqtr = arqRel.substring(2)-->Line_41 $$ arqtr += " "[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_42 $$ while (impressora.length() < 30) impressora += " "[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ CD ]
Line_7 $$ String impressora = p.getProperty("fila")-->Line_42 $$ while (impressora.length() < 30) impressora += " "[ FD ]
Line_42 $$ while (impressora.length() < 30) impressora += " "-->Line_42 $$ impressora += " "[ CD ]
Line_42 $$ impressora += " "-->Line_42 $$ impressora += " "[ FD ]
Line_7 $$ String impressora = p.getProperty("fila")-->Line_42 $$ impressora += " "[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_43 $$ byte aux[] = new byte[30][ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_44 $$ byte cop[] = new byte[2][ CD ]
Line_41 $$ arqtr += " "-->Line_46 $$ aux = arqtr.getBytes("UTF8")[ FD ]
Line_39 $$ String arqtr = arqRel.substring(2)-->Line_46 $$ aux = arqtr.getBytes("UTF8")[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_47 $$ out.write(aux)[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_47 $$ out.write(aux)[ FD ]
Line_42 $$ impressora += " "-->Line_48 $$ aux = impressora.getBytes("UTF8")[ FD ]
Line_7 $$ String impressora = p.getProperty("fila")-->Line_48 $$ aux = impressora.getBytes("UTF8")[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_49 $$ out.write(aux)[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_49 $$ out.write(aux)[ FD ]
Line_9 $$ String copias = p.getProperty("copias")-->Line_50 $$ cop = copias.getBytes("UTF8")[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_51 $$ out.write(cop)[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_51 $$ out.write(cop)[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_52 $$ out.flush()[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_52 $$ out.flush()[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_58 $$ byte b[] = new byte[1024][ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_59 $$ int nBytes[ CD ]
Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)-->Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)[ FD ]
Line_59 $$ int nBytes-->Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)[ FD ]
Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)-->Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)[ CD ]
Line_29 $$ FileInputStream in = null-->Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)[ FD ]
Line_32 $$ in = new FileInputStream(new File(arqRel))-->Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)[ FD ]
Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)-->Line_61 $$ out.write(b, 0, nBytes)[ CD ]
Line_30 $$ BufferedOutputStream out = null-->Line_61 $$ out.write(b, 0, nBytes)[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_61 $$ out.write(b, 0, nBytes)[ FD ]
Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)-->Line_61 $$ out.write(b, 0, nBytes)[ FD ]
Line_59 $$ int nBytes-->Line_61 $$ out.write(b, 0, nBytes)[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_62 $$ out.flush()[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_62 $$ out.flush()[ FD ]
Line_30 $$ BufferedOutputStream out = null-->Line_63 $$ out.close()[ FD ]
Line_33 $$ out = new BufferedOutputStream(new GZIPOutputStream(s.getOutputStream()))-->Line_63 $$ out.close()[ FD ]
Line_29 $$ FileInputStream in = null-->Line_64 $$ in.close()[ FD ]
Line_32 $$ in = new FileInputStream(new File(arqRel))-->Line_64 $$ in.close()[ FD ]
Line_18 $$ s = new Socket(ip, 7000)-->Line_65 $$ s.close()[ FD ]
Line_11 $$ Socket s = null-->Line_65 $$ s.close()[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_69 $$ System.out.println("Arquivo " + arqRel + " foi transmitido. \n\n")[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_75 $$ SimpleDateFormat dfArq = new SimpleDateFormat("yyyy-MM-dd")[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_76 $$ SimpleDateFormat dfLog = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_77 $$ String arqLog = "log" + filial + dfArq.format(new Date()) + ".txt"[ CD ]
Line_75 $$ SimpleDateFormat dfArq = new SimpleDateFormat("yyyy-MM-dd")-->Line_77 $$ String arqLog = "log" + filial + dfArq.format(new Date()) + ".txt"[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_78 $$ PrintWriter pw = null[ CD ]
Line_78 $$ PrintWriter pw = null-->Line_80 $$ pw = new PrintWriter(new FileWriter(arqLog, true))[ FD ]
Line_80 $$ pw = new PrintWriter(new FileWriter(arqLog, true))-->Line_80 $$ pw = new PrintWriter(new FileWriter(arqLog, true))[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_84 $$ pw.println("Arquivo:  " + arquivo + "  " + dfLog.format(new Date()))[ CD ]
Line_78 $$ PrintWriter pw = null-->Line_84 $$ pw.println("Arquivo:  " + arquivo + "  " + dfLog.format(new Date()))[ FD ]
Line_80 $$ pw = new PrintWriter(new FileWriter(arqLog, true))-->Line_84 $$ pw.println("Arquivo:  " + arquivo + "  " + dfLog.format(new Date()))[ FD ]
Line_76 $$ SimpleDateFormat dfLog = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")-->Line_84 $$ pw.println("Arquivo:  " + arquivo + "  " + dfLog.format(new Date()))[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_85 $$ pw.flush()[ CD ]
Line_78 $$ PrintWriter pw = null-->Line_85 $$ pw.flush()[ FD ]
Line_80 $$ pw = new PrintWriter(new FileWriter(arqLog, true))-->Line_85 $$ pw.flush()[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_86 $$ pw.close()[ CD ]
Line_78 $$ PrintWriter pw = null-->Line_86 $$ pw.close()[ FD ]
Line_80 $$ pw = new PrintWriter(new FileWriter(arqLog, true))-->Line_86 $$ pw.close()[ FD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_87 $$ File f = new File(arquivo)[ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_88 $$ while (!f.delete()) [ CD ]
Line_10 $$ if (filial.equalsIgnoreCase(servidor)) -->Line_10 $$ if (filial.equalsIgnoreCase(servidor)) [ CD ]
Line_88 $$ while (!f.delete()) -->Line_88 $$ while (!f.delete()) [ CD ]
Line_88 $$ while (!f.delete()) -->Line_88 $$ while (!f.delete()) [ CD ]
Line_87 $$ File f = new File(arquivo)-->Line_88 $$ while (!f.delete()) [ FD ]
Line_88 $$ while (!f.delete()) -->Line_89 $$ System.out.println("Erro apagando " + arquivo)[ CD ]
Line_19 $$ conectado = s.isConnected()-->Line_14 $$ while (!conectado) [ FD ]
Line_18 $$ s = new Socket(ip, 7000)-->Line_19 $$ conectado = s.isConnected()[ FD ]
Line_41 $$ arqtr += " "-->Line_41 $$ while (arqtr.length() < 30) arqtr += " "[ FD ]
Line_42 $$ impressora += " "-->Line_42 $$ while (impressora.length() < 30) impressora += " "[ FD ]
Line_61 $$ while ((nBytes = in.read(b)) != -1) out.write(b, 0, nBytes)-->Line_61 $$ out.write(b, 0, nBytes)[ FD ]
