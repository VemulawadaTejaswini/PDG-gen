Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public APIResponse create(Application application) throws Exception [ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_3 $$ APIResponse response = new APIResponse()[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_5 $$ connection.setDoOutput(true)[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_6 $$ connection.setRequestMethod("POST")[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_7 $$ connection.setRequestProperty("Content-Type", "application/json; charset=utf-8")[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_8 $$ connection.setUseCaches(false)[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_9 $$ connection.setConnectTimeout(TIMEOUT)[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_10 $$ connection.connect()[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_11 $$ marshaller.marshal(application, new MappedXMLStreamWriter(new MappedNamespaceConvention(new Configuration()), new OutputStreamWriter(connection.getOutputStream(), "utf-8")))[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_11 $$ marshaller.marshal(application, new MappedXMLStreamWriter(new MappedNamespaceConvention(new Configuration()), new OutputStreamWriter(connection.getOutputStream(), "utf-8")))[ FD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_12 $$ connection.getOutputStream().flush()[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_13 $$ connection.getOutputStream().close()[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) [ CD ]
Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_15 $$ JSONObject obj = new JSONObject(new String(new BufferedReader(new InputStreamReader(connection.getInputStream(), "utf-8")).readLine()))[ CD ]
Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_16 $$ response.setDone(true)[ CD ]
Line_3 $$ APIResponse response = new APIResponse()-->Line_16 $$ response.setDone(true)[ FD ]
Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_17 $$ response.setMessage(unmarshaller.unmarshal(new MappedXMLStreamReader(obj, new MappedNamespaceConvention(new Configuration()))))[ CD ]
Line_3 $$ APIResponse response = new APIResponse()-->Line_17 $$ response.setMessage(unmarshaller.unmarshal(new MappedXMLStreamReader(obj, new MappedNamespaceConvention(new Configuration()))))[ FD ]
Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_18 $$ connection.getInputStream().close()[ CD ]
Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_20 $$ response.setDone(false)[ CD ]
Line_3 $$ APIResponse response = new APIResponse()-->Line_20 $$ response.setDone(false)[ FD ]
Line_14 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) -->Line_21 $$ response.setMessage("Create Application Error Code: Http (" + connection.getResponseCode() + ")")[ CD ]
Line_3 $$ APIResponse response = new APIResponse()-->Line_21 $$ response.setMessage("Create Application Error Code: Http (" + connection.getResponseCode() + ")")[ FD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_23 $$ connection.disconnect()[ CD ]
Line_2 $$ public APIResponse create(Application application) throws Exception -->Line_24 $$ return response[ CD ]
