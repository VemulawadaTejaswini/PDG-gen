Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException [ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_3 $$ long sTime = System.currentTimeMillis()[ CD ]
Line_3 $$ long sTime = System.currentTimeMillis()-->Line_3 $$ long sTime = System.currentTimeMillis()[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_4 $$ if (DEBUG)[ CD ]
Line_4 $$ if (DEBUG)-->Line_4 $$ System.out.println("INGESTING FILE TO FEDORA:fileName =" + fileName + "fileType =" + fileType + "t = 0")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_5 $$ String host = FedoraUtils.getFedoraProperty(this, "admin.ftp.address")[ CD ]
Line_5 $$ String host = FedoraUtils.getFedoraProperty(this, "admin.ftp.address")-->Line_5 $$ String host = FedoraUtils.getFedoraProperty(this, "admin.ftp.address")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_6 $$ String url = FedoraUtils.getFedoraProperty(this, "admin.ftp.url")[ CD ]
Line_6 $$ String url = FedoraUtils.getFedoraProperty(this, "admin.ftp.url")-->Line_6 $$ String url = FedoraUtils.getFedoraProperty(this, "admin.ftp.url")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_7 $$ int port = Integer.parseInt(FedoraUtils.getFedoraProperty(this, "admin.ftp.port"))[ CD ]
Line_7 $$ int port = Integer.parseInt(FedoraUtils.getFedoraProperty(this, "admin.ftp.port"))-->Line_7 $$ int port = Integer.parseInt(FedoraUtils.getFedoraProperty(this, "admin.ftp.port"))[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_8 $$ String userName = FedoraUtils.getFedoraProperty(this, "admin.ftp.username")[ CD ]
Line_8 $$ String userName = FedoraUtils.getFedoraProperty(this, "admin.ftp.username")-->Line_8 $$ String userName = FedoraUtils.getFedoraProperty(this, "admin.ftp.username")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_9 $$ String password = FedoraUtils.getFedoraProperty(this, "admin.ftp.password")[ CD ]
Line_9 $$ String password = FedoraUtils.getFedoraProperty(this, "admin.ftp.password")-->Line_9 $$ String password = FedoraUtils.getFedoraProperty(this, "admin.ftp.password")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_10 $$ String directory = FedoraUtils.getFedoraProperty(this, "admin.ftp.directory")[ CD ]
Line_10 $$ String directory = FedoraUtils.getFedoraProperty(this, "admin.ftp.directory")-->Line_10 $$ String directory = FedoraUtils.getFedoraProperty(this, "admin.ftp.directory")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_11 $$ FTPClient client = new FTPClient()[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_12 $$ client.connect(host, port)[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_12 $$ client.connect(host, port)[ FD ]
Line_5 $$ String host = FedoraUtils.getFedoraProperty(this, "admin.ftp.address")-->Line_12 $$ client.connect(host, port)[ FD ]
Line_7 $$ int port = Integer.parseInt(FedoraUtils.getFedoraProperty(this, "admin.ftp.port"))-->Line_12 $$ client.connect(host, port)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_13 $$ client.login(userName, password)[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_13 $$ client.login(userName, password)[ FD ]
Line_8 $$ String userName = FedoraUtils.getFedoraProperty(this, "admin.ftp.username")-->Line_13 $$ client.login(userName, password)[ FD ]
Line_9 $$ String password = FedoraUtils.getFedoraProperty(this, "admin.ftp.password")-->Line_13 $$ client.login(userName, password)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_14 $$ client.changeWorkingDirectory(directory)[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_14 $$ client.changeWorkingDirectory(directory)[ FD ]
Line_10 $$ String directory = FedoraUtils.getFedoraProperty(this, "admin.ftp.directory")-->Line_14 $$ client.changeWorkingDirectory(directory)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_15 $$ client.setFileType(FTP.BINARY_FILE_TYPE)[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_15 $$ client.setFileType(FTP.BINARY_FILE_TYPE)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_16 $$ client.storeFile(fileName, new FileInputStream(file.getAbsolutePath().replaceAll("%20", " ")))[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_16 $$ client.storeFile(fileName, new FileInputStream(file.getAbsolutePath().replaceAll("%20", " ")))[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_16 $$ client.storeFile(fileName, new FileInputStream(file.getAbsolutePath().replaceAll("%20", " ")))[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_16 $$ client.storeFile(fileName, new FileInputStream(file.getAbsolutePath().replaceAll("%20", " ")))[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_17 $$ client.logout()[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_17 $$ client.logout()[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_18 $$ client.disconnect()[ CD ]
Line_11 $$ FTPClient client = new FTPClient()-->Line_18 $$ client.disconnect()[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_19 $$ if (DEBUG)[ CD ]
Line_19 $$ if (DEBUG)-->Line_19 $$ System.out.println("INGESTING FILE TO FEDORA: Writting to FTP Server:" + (System.currentTimeMillis() - sTime))[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_20 $$ fileName = url + fileName[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_20 $$ fileName = url + fileName[ FD ]
Line_20 $$ fileName = url + fileName-->Line_20 $$ fileName = url + fileName[ FD ]
Line_6 $$ String url = FedoraUtils.getFedoraProperty(this, "admin.ftp.url")-->Line_20 $$ fileName = url + fileName[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_20 $$ fileName = url + fileName[ FD ]
Line_20 $$ fileName = url + fileName-->Line_20 $$ fileName = url + fileName[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_21 $$ int BUFFER_SIZE = 10240[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_22 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_23 $$ String s = new String()[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_24 $$ BufferedInputStream fis = new BufferedInputStream(new FileInputStream(new File(getResource(templateFileName).getFile().replaceAll("%20", " "))))[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_24 $$ BufferedInputStream fis = new BufferedInputStream(new FileInputStream(new File(getResource(templateFileName).getFile().replaceAll("%20", " "))))[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_25 $$ byte[] buf = new byte[BUFFER_SIZE][ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_26 $$ int ch[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_27 $$ int len[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_28 $$ while ((len = fis.read(buf)) > 0) [ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException [ CD ]
Line_28 $$ while ((len = fis.read(buf)) > 0) -->Line_28 $$ while ((len = fis.read(buf)) > 0) [ FD ]
Line_27 $$ int len-->Line_28 $$ while ((len = fis.read(buf)) > 0) [ FD ]
Line_28 $$ while ((len = fis.read(buf)) > 0) -->Line_28 $$ while ((len = fis.read(buf)) > 0) [ CD ]
Line_24 $$ BufferedInputStream fis = new BufferedInputStream(new FileInputStream(new File(getResource(templateFileName).getFile().replaceAll("%20", " "))))-->Line_28 $$ while ((len = fis.read(buf)) > 0) [ FD ]
Line_25 $$ byte[] buf = new byte[BUFFER_SIZE]-->Line_28 $$ while ((len = fis.read(buf)) > 0) [ FD ]
Line_28 $$ while ((len = fis.read(buf)) > 0) -->Line_29 $$ s = s + new String(buf)[ CD ]
Line_29 $$ s = s + new String(buf)-->Line_29 $$ s = s + new String(buf)[ FD ]
Line_23 $$ String s = new String()-->Line_29 $$ s = s + new String(buf)[ FD ]
Line_29 $$ s = s + new String(buf)-->Line_29 $$ s = s + new String(buf)[ FD ]
Line_23 $$ String s = new String()-->Line_29 $$ s = s + new String(buf)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_31 $$ fis.close()[ CD ]
Line_24 $$ BufferedInputStream fis = new BufferedInputStream(new FileInputStream(new File(getResource(templateFileName).getFile().replaceAll("%20", " "))))-->Line_31 $$ fis.close()[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_32 $$ if (DEBUG)[ CD ]
Line_32 $$ if (DEBUG)-->Line_32 $$ System.out.println("INGESTING FILE TO FEDORA: Read Mets File:" + (System.currentTimeMillis() - sTime))[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ CD ]
Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)-->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ CD ]
Line_29 $$ s = s + new String(buf)-->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_23 $$ String s = new String()-->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_20 $$ fileName = url + fileName-->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_34 $$ if (DEBUG)[ CD ]
Line_34 $$ if (DEBUG)-->Line_34 $$ System.out.println("INGESTING FILE TO FEDORA: Resplaced Metadata:" + (System.currentTimeMillis() - sTime))[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_35 $$ File METSfile = File.createTempFile("vueMETSMap", ".xml")[ CD ]
Line_35 $$ File METSfile = File.createTempFile("vueMETSMap", ".xml")-->Line_35 $$ File METSfile = File.createTempFile("vueMETSMap", ".xml")[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_36 $$ FileOutputStream fos = new FileOutputStream(METSfile)[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_37 $$ fos.write(r.getBytes())[ CD ]
Line_36 $$ FileOutputStream fos = new FileOutputStream(METSfile)-->Line_37 $$ fos.write(r.getBytes())[ FD ]
Line_33 $$ String r = updateMetadata(s, fileName, file.getName(), fileType, properties)-->Line_37 $$ fos.write(r.getBytes())[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_38 $$ fos.close()[ CD ]
Line_36 $$ FileOutputStream fos = new FileOutputStream(METSfile)-->Line_38 $$ fos.close()[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_39 $$ if (DEBUG)[ CD ]
Line_39 $$ if (DEBUG)-->Line_39 $$ System.out.println("INGESTING FILE TO FEDORA: Ingest complete:" + (System.currentTimeMillis() - sTime))[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_40 $$ String pid = "Method Not Supported any more"[ CD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_41 $$ System.out.println(" METSfile= " + METSfile.getPath() + " PID = " + pid)[ CD ]
Line_35 $$ File METSfile = File.createTempFile("vueMETSMap", ".xml")-->Line_41 $$ System.out.println(" METSfile= " + METSfile.getPath() + " PID = " + pid)[ FD ]
Line_2 $$ public osid.shared.Id ingest(String fileName, String templateFileName, String fileType, File file, Properties properties) throws osid.dr.DigitalRepositoryException, java.net.SocketException, java.io.IOException, osid.shared.SharedException, javax.xml.rpc.ServiceException -->Line_42 $$ return new PID(pid)[ CD ]
Line_29 $$ s = s + new String(buf)-->Line_29 $$ s = s + new String(buf)[ FD ]
