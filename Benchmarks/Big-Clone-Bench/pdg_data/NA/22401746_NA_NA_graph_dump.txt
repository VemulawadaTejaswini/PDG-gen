Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) [ CD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_3 $$ String reqxml = ""[ CD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_4 $$ org.jdom.Document retdoc = null[ CD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_7 $$ if (this.serverURL == null) [ CD ]
Line_9 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_9 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()[ CD ]
Line_9 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_10 $$ if (codebase != null)[ FD ]
Line_10 $$ if (codebase != null)-->Line_10 $$ serverURL = codebase.getHost()[ CD ]
Line_9 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_10 $$ serverURL = codebase.getHost()[ FD ]
Line_7 $$ if (this.serverURL == null) -->Line_15 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)[ CD ]
Line_7 $$ if (this.serverURL == null) -->Line_16 $$ ipdig.show()[ CD ]
Line_15 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_16 $$ ipdig.show()[ FD ]
Line_7 $$ if (this.serverURL == null) -->Line_17 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_17 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_17 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_17 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_17 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_17 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_15 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_17 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_7 $$ if (this.serverURL == null) -->Line_18 $$ myport = ipdig.getPortNo()[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_18 $$ myport = ipdig.getPortNo()[ FD ]
Line_18 $$ myport = ipdig.getPortNo()-->Line_18 $$ myport = ipdig.getPortNo()[ FD ]
Line_18 $$ myport = ipdig.getPortNo()-->Line_18 $$ myport = ipdig.getPortNo()[ CD ]
Line_15 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_18 $$ myport = ipdig.getPortNo()[ FD ]
Line_7 $$ if (this.serverURL == null) -->Line_19 $$ java.util.prefs.Preferences.systemRoot().put("serverurl", serverURL)[ CD ]
Line_7 $$ if (this.serverURL == null) -->Line_20 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ CD ]
Line_6 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_20 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_18 $$ myport = ipdig.getPortNo()-->Line_20 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_7 $$ if (this.serverURL == null) -->Line_21 $$ System.out.println(serverURL)[ CD ]
Line_25 $$ java.net.URL url = new java.net.URL("http://" + serverURL + ":" + myport + "/newgenlibctxt/" + servletName)-->Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()[ FD ]
Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_27 $$ urlconn.setDoOutput(true)[ FD ]
Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_28 $$ urlconn.setRequestProperty("Content-type", "text/xml; charset=UTF-8")[ FD ]
Line_29 $$ java.io.OutputStream os = urlconn.getOutputStream()-->Line_29 $$ java.io.OutputStream os = urlconn.getOutputStream()[ CD ]
Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_29 $$ java.io.OutputStream os = urlconn.getOutputStream()[ FD ]
Line_30 $$ String req1xml = request-->Line_34 $$ System.out.println(req1xml)[ FD ]
Line_33 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_35 $$ dos.write(req1xml)[ FD ]
Line_30 $$ String req1xml = request-->Line_35 $$ dos.write(req1xml)[ FD ]
Line_33 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_36 $$ dos.flush()[ FD ]
Line_33 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_37 $$ dos.close()[ FD ]
Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_38 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_38 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_39 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_39 $$ java.io.InputStream ios = urlconn.getInputStream()[ CD ]
Line_26 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_39 $$ java.io.InputStream ios = urlconn.getInputStream()[ FD ]
Line_4 $$ org.jdom.Document retdoc = null-->Line_43 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ FD ]
Line_43 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)-->Line_43 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ FD ]
Line_43 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)-->Line_43 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ CD ]
Line_42 $$ java.io.InputStreamReader br = new java.io.InputStreamReader(gip, "UTF-8")-->Line_43 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br)[ FD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_49 $$ System.out.println(reqxml)[ CD ]
Line_3 $$ String reqxml = ""-->Line_49 $$ System.out.println(reqxml)[ FD ]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) -->Line_50 $$ return ""[ CD ]
