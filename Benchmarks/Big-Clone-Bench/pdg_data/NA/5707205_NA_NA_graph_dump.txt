Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ Log.d(LOG_TAG, "Fetching " + url)[ CD ]
Line_2 $$ public void run() -->Line_4 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext)[ CD ]
Line_2 $$ public void run() -->Line_5 $$ dbHelper.open()[ CD ]
Line_4 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext)-->Line_5 $$ dbHelper.open()[ FD ]
Line_2 $$ public void run() -->Line_6 $$ boolean errorOccurred = true[ CD ]
Line_2 $$ public void run() -->Line_7 $$ int notifyId = 0[ CD ]
Line_2 $$ public void run() -->Line_8 $$ String host = AppUtils.getHostFromUrl(url)[ CD ]
Line_8 $$ String host = AppUtils.getHostFromUrl(url)-->Line_8 $$ String host = AppUtils.getHostFromUrl(url)[ CD ]
Line_8 $$ String host = AppUtils.getHostFromUrl(url)-->Line_10 $$ if (host == null) [ FD ]
Line_10 $$ if (host == null) -->Line_11 $$ Log.d(LOG_TAG, "Bad url " + url)[ CD ]
Line_10 $$ if (host == null) -->Line_12 $$ errorOccurred = true[ CD ]
Line_6 $$ boolean errorOccurred = true-->Line_12 $$ errorOccurred = true[ FD ]
Line_12 $$ errorOccurred = true-->Line_12 $$ errorOccurred = true[ FD ]
Line_10 $$ if (host == null) -->Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)[ CD ]
Line_7 $$ int notifyId = 0-->Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)[ FD ]
Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)-->Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)[ FD ]
Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)-->Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)[ CD ]
Line_10 $$ if (host == null) -->Line_15 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext)[ CD ]
Line_15 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext)-->Line_15 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext)[ CD ]
Line_10 $$ if (host == null) -->Line_16 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent))[ CD ]
Line_16 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent))-->Line_16 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent))[ CD ]
Line_15 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext)-->Line_16 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent))[ FD ]
Line_10 $$ if (host == null) -->Line_17 $$ Log.d(LOG_TAG, "Using user agent=" + userAgent)[ CD ]
Line_10 $$ if (host == null) -->Line_18 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent)[ CD ]
Line_18 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent)-->Line_18 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent)[ CD ]
Line_16 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent))-->Line_18 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent)[ FD ]
Line_10 $$ if (host == null) -->Line_19 $$ URI uri = new URI(url)[ CD ]
Line_10 $$ if (host == null) -->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ CD ]
Line_19 $$ URI uri = new URI(url)-->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ FD ]
Line_19 $$ URI uri = new URI(url)-->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ FD ]
Line_19 $$ URI uri = new URI(url)-->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ FD ]
Line_19 $$ URI uri = new URI(url)-->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ FD ]
Line_19 $$ URI uri = new URI(url)-->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ FD ]
Line_19 $$ URI uri = new URI(url)-->Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)[ FD ]
Line_10 $$ if (host == null) -->Line_21 $$ norm = norm.normalize()[ CD ]
Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)-->Line_21 $$ norm = norm.normalize()[ FD ]
Line_21 $$ norm = norm.normalize()-->Line_21 $$ norm = norm.normalize()[ FD ]
Line_21 $$ norm = norm.normalize()-->Line_21 $$ norm = norm.normalize()[ CD ]
Line_20 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null)-->Line_21 $$ norm = norm.normalize()[ FD ]
Line_21 $$ norm = norm.normalize()-->Line_21 $$ norm = norm.normalize()[ FD ]
Line_10 $$ if (host == null) -->Line_22 $$ HttpUriRequest get = new HttpGet(norm)[ CD ]
Line_10 $$ if (host == null) -->Line_23 $$ HttpResponse response = ahc.execute(get)[ CD ]
Line_23 $$ HttpResponse response = ahc.execute(get)-->Line_23 $$ HttpResponse response = ahc.execute(get)[ CD ]
Line_18 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent)-->Line_23 $$ HttpResponse response = ahc.execute(get)[ FD ]
Line_22 $$ HttpUriRequest get = new HttpGet(norm)-->Line_23 $$ HttpResponse response = ahc.execute(get)[ FD ]
Line_10 $$ if (host == null) -->Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) [ CD ]
Line_23 $$ HttpResponse response = ahc.execute(get)-->Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) [ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_25 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_25 $$ HttpEntity entity = response.getEntity()-->Line_25 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_23 $$ HttpResponse response = ahc.execute(get)-->Line_25 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_26 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_27 $$ entity.writeTo(baos)[ CD ]
Line_25 $$ HttpEntity entity = response.getEntity()-->Line_27 $$ entity.writeTo(baos)[ FD ]
Line_26 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_27 $$ entity.writeTo(baos)[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_28 $$ String data = baos.toString()[ CD ]
Line_28 $$ String data = baos.toString()-->Line_28 $$ String data = baos.toString()[ CD ]
Line_26 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_28 $$ String data = baos.toString()[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) [ CD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ CD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_30 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL)[ CD ]
Line_30 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL)-->Line_30 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL)[ CD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ CD ]
Line_31 $$ data = data.replaceAll(p.pattern(), "")-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
Line_28 $$ String data = baos.toString()-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
Line_31 $$ data = data.replaceAll(p.pattern(), "")-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ CD ]
Line_31 $$ data = data.replaceAll(p.pattern(), "")-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
Line_28 $$ String data = baos.toString()-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
Line_30 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL)-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_33 $$ long sysMillis = System.currentTimeMillis()[ CD ]
Line_33 $$ long sysMillis = System.currentTimeMillis()-->Line_33 $$ long sysMillis = System.currentTimeMillis()[ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))[ CD ]
Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))-->Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))[ CD ]
Line_33 $$ long sysMillis = System.currentTimeMillis()-->Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))[ FD ]
Line_15 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext)-->Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_35 $$ FileOutputStream strm = new FileOutputStream(newFileName)[ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_36 $$ Log.d(LOG_TAG, "Writing to " + newFileName + " for url " + url)[ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)[ CD ]
Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)-->Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)[ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)[ CD ]
Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)-->Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)[ FD ]
Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)-->Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)[ FD ]
Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)-->Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)[ CD ]
Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)-->Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)[ FD ]
Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)-->Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_39 $$ strm.write(jsData.getBytes())[ CD ]
Line_35 $$ FileOutputStream strm = new FileOutputStream(newFileName)-->Line_39 $$ strm.write(jsData.getBytes())[ FD ]
Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)-->Line_39 $$ strm.write(jsData.getBytes())[ FD ]
Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)-->Line_39 $$ strm.write(jsData.getBytes())[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_40 $$ strm.write(data.getBytes())[ CD ]
Line_35 $$ FileOutputStream strm = new FileOutputStream(newFileName)-->Line_40 $$ strm.write(data.getBytes())[ FD ]
Line_31 $$ data = data.replaceAll(p.pattern(), "")-->Line_40 $$ strm.write(data.getBytes())[ FD ]
Line_28 $$ String data = baos.toString()-->Line_40 $$ strm.write(data.getBytes())[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_41 $$ strm.write(jsData.getBytes())[ CD ]
Line_35 $$ FileOutputStream strm = new FileOutputStream(newFileName)-->Line_41 $$ strm.write(jsData.getBytes())[ FD ]
Line_37 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext)-->Line_41 $$ strm.write(jsData.getBytes())[ FD ]
Line_38 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS)-->Line_41 $$ strm.write(jsData.getBytes())[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_42 $$ strm.flush()[ CD ]
Line_35 $$ FileOutputStream strm = new FileOutputStream(newFileName)-->Line_42 $$ strm.flush()[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_43 $$ strm.close()[ CD ]
Line_35 $$ FileOutputStream strm = new FileOutputStream(newFileName)-->Line_43 $$ strm.close()[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_44 $$ String entryName = getTitle(newFileName, url)[ CD ]
Line_44 $$ String entryName = getTitle(newFileName, url)-->Line_44 $$ String entryName = getTitle(newFileName, url)[ CD ]
Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))-->Line_44 $$ String entryName = getTitle(newFileName, url)[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)[ CD ]
Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)-->Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)[ CD ]
Line_4 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext)-->Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)[ FD ]
Line_44 $$ String entryName = getTitle(newFileName, url)-->Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)[ FD ]
Line_34 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false))-->Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)[ FD ]
Line_33 $$ long sysMillis = System.currentTimeMillis()-->Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_46 $$ postToast("Downloaded \"" + entryName + "\"")[ CD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_47 $$ errorOccurred = false[ CD ]
Line_6 $$ boolean errorOccurred = true-->Line_47 $$ errorOccurred = false[ FD ]
Line_12 $$ errorOccurred = true-->Line_47 $$ errorOccurred = false[ FD ]
Line_47 $$ errorOccurred = false-->Line_47 $$ errorOccurred = false[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_48 $$ if (deleteRowId != 0) [ CD ]
Line_48 $$ if (deleteRowId != 0) -->Line_49 $$ Log.d(LOG_TAG, "Deleting rowId=" + deleteRowId)[ CD ]
Line_48 $$ if (deleteRowId != 0) -->Line_50 $$ dbHelper.deleteEntry(deleteRowId)[ CD ]
Line_4 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext)-->Line_50 $$ dbHelper.deleteEntry(deleteRowId)[ FD ]
Line_48 $$ if (deleteRowId != 0) -->Line_51 $$ if (url == null)[ CD ]
Line_51 $$ if (url == null)-->Line_51 $$ postToast("Item Deleted")[ CD ]
Line_48 $$ if (deleteRowId != 0) -->Line_52 $$ mContext.startActivity(new Intent(mContext, RetainActivity.class))[ CD ]
Line_48 $$ if (deleteRowId != 0) -->Line_54 $$ showNotification("Download Complete", entryName, android.R.drawable.stat_sys_download_done, newRowId)[ CD ]
Line_44 $$ String entryName = getTitle(newFileName, url)-->Line_54 $$ showNotification("Download Complete", entryName, android.R.drawable.stat_sys_download_done, newRowId)[ FD ]
Line_45 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis)-->Line_54 $$ showNotification("Download Complete", entryName, android.R.drawable.stat_sys_download_done, newRowId)[ FD ]
Line_24 $$ if (response.getStatusLine().getStatusCode() == 200) -->Line_57 $$ Log.e(LOG_TAG, "Response code=" + String.valueOf(response.getStatusLine().getStatusCode()))[ CD ]
Line_23 $$ HttpResponse response = ahc.execute(get)-->Line_57 $$ Log.e(LOG_TAG, "Response code=" + String.valueOf(response.getStatusLine().getStatusCode()))[ FD ]
Line_2 $$ public void run() -->Line_69 $$ hideNotification(notifyId)[ CD ]
Line_7 $$ int notifyId = 0-->Line_69 $$ hideNotification(notifyId)[ FD ]
Line_14 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0)-->Line_69 $$ hideNotification(notifyId)[ FD ]
Line_2 $$ public void run() -->Line_70 $$ if (errorOccurred && host != null) [ CD ]
Line_6 $$ boolean errorOccurred = true-->Line_70 $$ if (errorOccurred && host != null) [ FD ]
Line_12 $$ errorOccurred = true-->Line_70 $$ if (errorOccurred && host != null) [ FD ]
Line_47 $$ errorOccurred = false-->Line_70 $$ if (errorOccurred && host != null) [ FD ]
Line_70 $$ if (errorOccurred && host != null) -->Line_71 $$ showNotification("Error Downloading", host, android.R.drawable.stat_notify_error, 0)[ CD ]
Line_8 $$ String host = AppUtils.getHostFromUrl(url)-->Line_71 $$ showNotification("Error Downloading", host, android.R.drawable.stat_notify_error, 0)[ FD ]
Line_70 $$ if (errorOccurred && host != null) -->Line_72 $$ postToast("Error fetching " + host)[ CD ]
Line_2 $$ public void run() -->Line_74 $$ dbHelper.close()[ CD ]
Line_4 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext)-->Line_74 $$ dbHelper.close()[ FD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ FD ]
Line_29 $$ for (int i = 0; i < undesirables.length; i++) -->Line_29 $$ for (int i = 0; i < undesirables.length; i++) [ FD ]
Line_31 $$ data = data.replaceAll(p.pattern(), "")-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
Line_30 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL)-->Line_31 $$ data = data.replaceAll(p.pattern(), "")[ FD ]
