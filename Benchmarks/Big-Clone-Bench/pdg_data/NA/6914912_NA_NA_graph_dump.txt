Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] a) throws Exception [ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_3 $$ HashMap<String, Integer> numberOfOccurencesOfThisComboe = new HashMap<String, Integer>()[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_4 $$ HashMap<String, String> fileToCATHMapping = new HashMap<String, String>()[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_5 $$ ArrayList<String> allFilesToBeCopied = new ArrayList<String>()[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_6 $$ new File(outputDir).mkdirs()[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_7 $$ FileReader fis = new FileReader(completeFileWithDirToCathFileList)[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_8 $$ BufferedReader bis = new BufferedReader(fis)[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_9 $$ String line = ""[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_10 $$ String currentCombo = ""[ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_11 $$ while ((line = bis.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_2 $$ public static void main(String[] a) throws Exception [ CD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_11 $$ while ((line = bis.readLine()) != null) [ FD ]
Line_9 $$ String line = ""-->Line_11 $$ while ((line = bis.readLine()) != null) [ FD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_11 $$ while ((line = bis.readLine()) != null) [ CD ]
Line_8 $$ BufferedReader bis = new BufferedReader(fis)-->Line_11 $$ while ((line = bis.readLine()) != null) [ FD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_12 $$ String[] allEntries = line.split("\\s+")[ CD ]
Line_12 $$ String[] allEntries = line.split("\\s+")-->Line_12 $$ String[] allEntries = line.split("\\s+")[ CD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_12 $$ String[] allEntries = line.split("\\s+")[ FD ]
Line_9 $$ String line = ""-->Line_12 $$ String[] allEntries = line.split("\\s+")[ FD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_13 $$ String fileName = allEntries[0][ CD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4][ CD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3][ CD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_16 $$ fileToCATHMapping.put(fileName, reducedComboForFilteringOut)[ CD ]
Line_4 $$ HashMap<String, String> fileToCATHMapping = new HashMap<String, String>()-->Line_16 $$ fileToCATHMapping.put(fileName, reducedComboForFilteringOut)[ FD ]
Line_13 $$ String fileName = allEntries[0]-->Line_16 $$ fileToCATHMapping.put(fileName, reducedComboForFilteringOut)[ FD ]
Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3]-->Line_16 $$ fileToCATHMapping.put(fileName, reducedComboForFilteringOut)[ FD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_17 $$ if (currentCombo.equals(thisCombo)) [ CD ]
Line_10 $$ String currentCombo = ""-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4]-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_17 $$ if (currentCombo.equals(thisCombo)) -->Line_17 $$ if (currentCombo.equals(thisCombo)) [ CD ]
Line_10 $$ String currentCombo = ""-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4]-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_17 $$ if (currentCombo.equals(thisCombo)) -->Line_19 $$ System.out.println("merke: " + fileName)[ CD ]
Line_17 $$ if (currentCombo.equals(thisCombo)) -->Line_20 $$ allFilesToBeCopied.add(fileName)[ CD ]
Line_5 $$ ArrayList<String> allFilesToBeCopied = new ArrayList<String>()-->Line_20 $$ allFilesToBeCopied.add(fileName)[ FD ]
Line_13 $$ String fileName = allEntries[0]-->Line_20 $$ allFilesToBeCopied.add(fileName)[ FD ]
Line_17 $$ if (currentCombo.equals(thisCombo)) -->Line_21 $$ currentCombo = thisCombo[ CD ]
Line_21 $$ currentCombo = thisCombo-->Line_21 $$ currentCombo = thisCombo[ FD ]
Line_10 $$ String currentCombo = ""-->Line_21 $$ currentCombo = thisCombo[ FD ]
Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4]-->Line_21 $$ currentCombo = thisCombo[ FD ]
Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)-->Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)[ CD ]
Line_4 $$ HashMap<String, String> fileToCATHMapping = new HashMap<String, String>()-->Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)[ FD ]
Line_13 $$ String fileName = allEntries[0]-->Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)[ FD ]
Line_24 $$ for (String fileName : allFilesToBeCopied) -->Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)[ FD ]
Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) -->Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) [ CD ]
Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) -->Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) [ CD ]
Line_3 $$ HashMap<String, Integer> numberOfOccurencesOfThisComboe = new HashMap<String, Integer>()-->Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) [ FD ]
Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3]-->Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) [ FD ]
Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)-->Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) [ FD ]
Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) -->Line_27 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, 1)[ CD ]
Line_3 $$ HashMap<String, Integer> numberOfOccurencesOfThisComboe = new HashMap<String, Integer>()-->Line_27 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, 1)[ FD ]
Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3]-->Line_27 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, 1)[ FD ]
Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)-->Line_27 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, 1)[ FD ]
Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) -->Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)[ CD ]
Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)-->Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)[ CD ]
Line_3 $$ HashMap<String, Integer> numberOfOccurencesOfThisComboe = new HashMap<String, Integer>()-->Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)[ FD ]
Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3]-->Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)[ FD ]
Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)-->Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)[ FD ]
Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) -->Line_30 $$ thisCounter = thisCounter + 1[ CD ]
Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)-->Line_30 $$ thisCounter = thisCounter + 1[ FD ]
Line_30 $$ thisCounter = thisCounter + 1-->Line_30 $$ thisCounter = thisCounter + 1[ FD ]
Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)-->Line_30 $$ thisCounter = thisCounter + 1[ FD ]
Line_30 $$ thisCounter = thisCounter + 1-->Line_30 $$ thisCounter = thisCounter + 1[ FD ]
Line_26 $$ if (!numberOfOccurencesOfThisComboe.containsKey(reducedComboForFilteringOut)) -->Line_31 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, thisCounter)[ CD ]
Line_3 $$ HashMap<String, Integer> numberOfOccurencesOfThisComboe = new HashMap<String, Integer>()-->Line_31 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, thisCounter)[ FD ]
Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3]-->Line_31 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, thisCounter)[ FD ]
Line_25 $$ String reducedComboForFilteringOut = fileToCATHMapping.get(fileName)-->Line_31 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, thisCounter)[ FD ]
Line_29 $$ Integer thisCounter = numberOfOccurencesOfThisComboe.get(reducedComboForFilteringOut)-->Line_31 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, thisCounter)[ FD ]
Line_30 $$ thisCounter = thisCounter + 1-->Line_31 $$ numberOfOccurencesOfThisComboe.put(reducedComboForFilteringOut, thisCounter)[ FD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_34 $$ HashSet<String> isSingleElement = new HashSet<String>()[ CD ]
Line_3 $$ HashMap<String, Integer> numberOfOccurencesOfThisComboe = new HashMap<String, Integer>()-->Line_35 $$ for (Entry<String, Integer> thisEntry : numberOfOccurencesOfThisComboe.entrySet()) [ FD ]
Line_35 $$ for (Entry<String, Integer> thisEntry : numberOfOccurencesOfThisComboe.entrySet()) -->Line_36 $$ if (thisEntry.getValue() == 1) [ FD ]
Line_36 $$ if (thisEntry.getValue() == 1) -->Line_37 $$ System.out.println("single: " + thisEntry.getKey())[ CD ]
Line_35 $$ for (Entry<String, Integer> thisEntry : numberOfOccurencesOfThisComboe.entrySet()) -->Line_37 $$ System.out.println("single: " + thisEntry.getKey())[ FD ]
Line_36 $$ if (thisEntry.getValue() == 1) -->Line_38 $$ isSingleElement.add(thisEntry.getKey())[ CD ]
Line_34 $$ HashSet<String> isSingleElement = new HashSet<String>()-->Line_38 $$ isSingleElement.add(thisEntry.getKey())[ FD ]
Line_35 $$ for (Entry<String, Integer> thisEntry : numberOfOccurencesOfThisComboe.entrySet()) -->Line_38 $$ isSingleElement.add(thisEntry.getKey())[ FD ]
Line_36 $$ if (thisEntry.getValue() == 1) -->Line_40 $$ System.out.println("not single: " + thisEntry.getKey())[ CD ]
Line_35 $$ for (Entry<String, Integer> thisEntry : numberOfOccurencesOfThisComboe.entrySet()) -->Line_40 $$ System.out.println("not single: " + thisEntry.getKey())[ FD ]
Line_2 $$ public static void main(String[] a) throws Exception -->Line_43 $$ System.out.println(allFilesToBeCopied.size())[ CD ]
Line_5 $$ ArrayList<String> allFilesToBeCopied = new ArrayList<String>()-->Line_43 $$ System.out.println(allFilesToBeCopied.size())[ FD ]
Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) -->Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) [ CD ]
Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) -->Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) [ CD ]
Line_34 $$ HashSet<String> isSingleElement = new HashSet<String>()-->Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) [ FD ]
Line_4 $$ HashMap<String, String> fileToCATHMapping = new HashMap<String, String>()-->Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) [ FD ]
Line_44 $$ for (String file : allFilesToBeCopied) -->Line_45 $$ if (!isSingleElement.contains(fileToCATHMapping.get(file))) [ FD ]
Line_47 $$ FileChannel srcChannel = new FileInputStream(CathDir + file).getChannel()-->Line_47 $$ FileChannel srcChannel = new FileInputStream(CathDir + file).getChannel()[ CD ]
Line_48 $$ FileChannel dstChannel = new FileOutputStream(outputDir + file).getChannel()-->Line_48 $$ FileChannel dstChannel = new FileOutputStream(outputDir + file).getChannel()[ CD ]
Line_48 $$ FileChannel dstChannel = new FileOutputStream(outputDir + file).getChannel()-->Line_49 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_47 $$ FileChannel srcChannel = new FileInputStream(CathDir + file).getChannel()-->Line_49 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_47 $$ FileChannel srcChannel = new FileInputStream(CathDir + file).getChannel()-->Line_49 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_47 $$ FileChannel srcChannel = new FileInputStream(CathDir + file).getChannel()-->Line_50 $$ srcChannel.close()[ FD ]
Line_48 $$ FileChannel dstChannel = new FileOutputStream(outputDir + file).getChannel()-->Line_51 $$ dstChannel.close()[ FD ]
Line_11 $$ while ((line = bis.readLine()) != null) -->Line_12 $$ String[] allEntries = line.split("\\s+")[ FD ]
Line_13 $$ String fileName = allEntries[0]-->Line_16 $$ fileToCATHMapping.put(fileName, reducedComboForFilteringOut)[ FD ]
Line_15 $$ String reducedComboForFilteringOut = allEntries[1] + allEntries[2] + allEntries[3]-->Line_16 $$ fileToCATHMapping.put(fileName, reducedComboForFilteringOut)[ FD ]
Line_21 $$ currentCombo = thisCombo-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4]-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_21 $$ currentCombo = thisCombo-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4]-->Line_17 $$ if (currentCombo.equals(thisCombo)) [ FD ]
Line_13 $$ String fileName = allEntries[0]-->Line_20 $$ allFilesToBeCopied.add(fileName)[ FD ]
Line_14 $$ String thisCombo = allEntries[1] + allEntries[2] + allEntries[3] + allEntries[4]-->Line_21 $$ currentCombo = thisCombo[ FD ]
