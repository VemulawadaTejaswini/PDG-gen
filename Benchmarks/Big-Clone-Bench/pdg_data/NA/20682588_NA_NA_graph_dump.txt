Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException [ CD ]
Line_4 $$ double mapserver_scale = getDownloadScale(wanted_mapblast_scale)-->Line_4 $$ double mapserver_scale = getDownloadScale(wanted_mapblast_scale)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_4 $$ double mapserver_scale = getDownloadScale(wanted_mapblast_scale)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_5 $$ URL url = new URL(getUrl(latitude, longitude, mapserver_scale, image_width, image_height))[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_5 $$ URL url = new URL(getUrl(latitude, longitude, mapserver_scale, image_width, image_height))[ FD ]
Line_4 $$ double mapserver_scale = getDownloadScale(wanted_mapblast_scale)-->Line_5 $$ URL url = new URL(getUrl(latitude, longitude, mapserver_scale, image_width, image_height))[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_5 $$ URL url = new URL(getUrl(latitude, longitude, mapserver_scale, image_width, image_height))[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_5 $$ URL url = new URL(getUrl(latitude, longitude, mapserver_scale, image_width, image_height))[ FD ]
Line_6 $$ if (Debug.DEBUG)-->Line_6 $$ Debug.println("map_download", "loading map from url: " + url)[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(getUrl(latitude, longitude, mapserver_scale, image_width, image_height))-->Line_7 $$ URLConnection connection = url.openConnection()[ FD ]
Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) [ CD ]
Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_9 $$ String proxy_userid = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USERNAME)[ CD ]
Line_9 $$ String proxy_userid = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USERNAME)-->Line_9 $$ String proxy_userid = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USERNAME)[ CD ]
Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_10 $$ String proxy_password = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_PASSWORD)[ CD ]
Line_10 $$ String proxy_password = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_PASSWORD)-->Line_10 $$ String proxy_password = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_PASSWORD)[ CD ]
Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_11 $$ String auth_string = proxy_userid + ":" + proxy_password[ CD ]
Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ CD ]
Line_11 $$ String auth_string = proxy_userid + ":" + proxy_password-->Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())-->Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_11 $$ String auth_string = proxy_userid + ":" + proxy_password-->Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())-->Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_8 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_13 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_13 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ FD ]
Line_11 $$ String auth_string = proxy_userid + ":" + proxy_password-->Line_13 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ FD ]
Line_12 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())-->Line_13 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_15 $$ connection = setRequestProperties(connection)[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_15 $$ connection = setRequestProperties(connection)[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_15 $$ connection = setRequestProperties(connection)[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_15 $$ connection = setRequestProperties(connection)[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_15 $$ connection = setRequestProperties(connection)[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_16 $$ connection.connect()[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_16 $$ connection.connect()[ FD ]
Line_17 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_17 $$ String mime_type = connection.getContentType().toLowerCase()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_17 $$ String mime_type = connection.getContentType().toLowerCase()[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_17 $$ String mime_type = connection.getContentType().toLowerCase()[ FD ]
Line_18 $$ if (!mime_type.startsWith("image")) -->Line_18 $$ if (!mime_type.startsWith("image")) [ CD ]
Line_18 $$ if (!mime_type.startsWith("image")) -->Line_18 $$ if (!mime_type.startsWith("image")) [ CD ]
Line_17 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_18 $$ if (!mime_type.startsWith("image")) [ FD ]
Line_18 $$ if (!mime_type.startsWith("image")) -->Line_19 $$ if (mime_type.startsWith("text")) [ CD ]
Line_17 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_19 $$ if (mime_type.startsWith("text")) [ FD ]
Line_19 $$ if (mime_type.startsWith("text")) -->Line_19 $$ if (mime_type.startsWith("text")) [ CD ]
Line_17 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_19 $$ if (mime_type.startsWith("text")) [ FD ]
Line_19 $$ if (mime_type.startsWith("text")) -->Line_20 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)[ CD ]
Line_19 $$ if (mime_type.startsWith("text")) -->Line_21 $$ viewer.setSize(640, 480)[ CD ]
Line_20 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)-->Line_21 $$ viewer.setSize(640, 480)[ FD ]
Line_19 $$ if (mime_type.startsWith("text")) -->Line_22 $$ viewer.setTitle("ERROR on loading url: " + url)[ CD ]
Line_20 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)-->Line_22 $$ viewer.setTitle("ERROR on loading url: " + url)[ FD ]
Line_19 $$ if (mime_type.startsWith("text")) -->Line_23 $$ viewer.setVisible(true)[ CD ]
Line_20 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)-->Line_23 $$ viewer.setVisible(true)[ FD ]
Line_28 $$ int content_length = connection.getContentLength()-->Line_28 $$ int content_length = connection.getContentLength()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_28 $$ int content_length = connection.getContentLength()[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_28 $$ int content_length = connection.getContentLength()[ FD ]
Line_28 $$ int content_length = connection.getContentLength()-->Line_29 $$ if (content_length < 0)[ FD ]
Line_29 $$ if (content_length < 0)-->Line_29 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, Integer.MIN_VALUE)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_29 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, Integer.MIN_VALUE)[ FD ]
Line_29 $$ if (content_length < 0)-->Line_29 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, content_length)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_29 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, content_length)[ FD ]
Line_28 $$ int content_length = connection.getContentLength()-->Line_29 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, content_length)[ FD ]
Line_30 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)-->Line_30 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)[ CD ]
Line_17 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_30 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)[ FD ]
Line_17 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_30 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)[ FD ]
Line_32 $$ MapInfo map_info = new MapInfo()-->Line_33 $$ map_info.setLatitude(latitude)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_33 $$ map_info.setLatitude(latitude)[ FD ]
Line_32 $$ MapInfo map_info = new MapInfo()-->Line_34 $$ map_info.setLongitude(longitude)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_34 $$ map_info.setLongitude(longitude)[ FD ]
Line_32 $$ MapInfo map_info = new MapInfo()-->Line_35 $$ map_info.setScale((float) getCorrectedMapblastScale(wanted_mapblast_scale))[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_35 $$ map_info.setScale((float) getCorrectedMapblastScale(wanted_mapblast_scale))[ FD ]
Line_32 $$ MapInfo map_info = new MapInfo()-->Line_36 $$ map_info.setWidth(image_width)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_36 $$ map_info.setWidth(image_width)[ FD ]
Line_32 $$ MapInfo map_info = new MapInfo()-->Line_37 $$ map_info.setHeight(image_height)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_37 $$ map_info.setHeight(image_height)[ FD ]
Line_32 $$ MapInfo map_info = new MapInfo()-->Line_38 $$ map_info.setFilename(filename)[ FD ]
Line_31 $$ String filename = file_path_wo_extension + extension-->Line_38 $$ map_info.setFilename(filename)[ FD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_41 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)[ FD ]
Line_15 $$ connection = setRequestProperties(connection)-->Line_41 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_43 $$ int num_bytes = 0-->Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) [ CD ]
Line_41 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)-->Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_40 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_45 $$ out.write(buffer, 0, num_bytes)[ CD ]
Line_39 $$ FileOutputStream out = new FileOutputStream(filename)-->Line_45 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_40 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_45 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_45 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_43 $$ int num_bytes = 0-->Line_45 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_46 $$ sum_bytes += num_bytes[ CD ]
Line_46 $$ sum_bytes += num_bytes-->Line_46 $$ sum_bytes += num_bytes[ FD ]
Line_42 $$ int sum_bytes = 0-->Line_46 $$ sum_bytes += num_bytes[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_46 $$ sum_bytes += num_bytes[ FD ]
Line_43 $$ int num_bytes = 0-->Line_46 $$ sum_bytes += num_bytes[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_47 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_47 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
Line_46 $$ sum_bytes += num_bytes-->Line_47 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
Line_42 $$ int sum_bytes = 0-->Line_47 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_49 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_41 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)-->Line_50 $$ in.close()[ FD ]
Line_39 $$ FileOutputStream out = new FileOutputStream(filename)-->Line_51 $$ out.close()[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_55 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_60 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_64 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_56 $$ String message = nrhe.getMessage() + ":\n" + resources_.getString(DownloadMouseModeLayer.KEY_LOCALIZE_MESSAGE_DOWNLOAD_ERROR_NO_ROUTE_TO_HOST_MESSAGE)-->Line_67 $$ if (message == null) [ FD ]
Line_67 $$ if (message == null) -->Line_68 $$ Throwable cause = e.getCause()[ CD ]
Line_68 $$ Throwable cause = e.getCause()-->Line_68 $$ Throwable cause = e.getCause()[ CD ]
Line_67 $$ if (message == null) -->Line_69 $$ if (cause != null)[ CD ]
Line_68 $$ Throwable cause = e.getCause()-->Line_69 $$ if (cause != null)[ FD ]
Line_69 $$ if (cause != null)-->Line_69 $$ message = cause.getMessage()[ CD ]
Line_56 $$ String message = nrhe.getMessage() + ":\n" + resources_.getString(DownloadMouseModeLayer.KEY_LOCALIZE_MESSAGE_DOWNLOAD_ERROR_NO_ROUTE_TO_HOST_MESSAGE)-->Line_69 $$ message = cause.getMessage()[ FD ]
Line_69 $$ message = cause.getMessage()-->Line_69 $$ message = cause.getMessage()[ FD ]
Line_69 $$ message = cause.getMessage()-->Line_69 $$ message = cause.getMessage()[ CD ]
Line_68 $$ Throwable cause = e.getCause()-->Line_69 $$ message = cause.getMessage()[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_45 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_44 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_46 $$ sum_bytes += num_bytes[ FD ]
Line_46 $$ sum_bytes += num_bytes-->Line_47 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
