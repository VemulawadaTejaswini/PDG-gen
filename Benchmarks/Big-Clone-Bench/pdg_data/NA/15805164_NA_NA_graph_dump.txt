Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException [ CD ]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm)-->Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm)[ CD ]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm)-->Line_5 $$ digest.reset()[ FD ]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm)-->Line_6 $$ digest.update(((String) salt).getBytes("UTF-8"))[ FD ]
Line_4 $$ MessageDigest digest = MessageDigest.getInstance(digestAlgorithm)-->Line_7 $$ String encodedRawPass = new String(digest.digest(rawPass.getBytes("UTF-8")))[ FD ]
Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException -->Line_7 $$ String encodedRawPass = new String(digest.digest(rawPass.getBytes("UTF-8")))[ FD ]
Line_8 $$ return encodedRawPass.equals(encPass)-->Line_8 $$ return encodedRawPass.equals(encPass)[ CD ]
Line_7 $$ String encodedRawPass = new String(digest.digest(rawPass.getBytes("UTF-8")))-->Line_8 $$ return encodedRawPass.equals(encPass)[ FD ]
Line_2 $$ public boolean isPasswordValid(String encPass, String rawPass, Object salt) throws DataAccessException -->Line_8 $$ return encodedRawPass.equals(encPass)[ FD ]
Line_10 $$ throw new DataAccessException("Error al codificar la contrase�a", e) -->Line_10 $$ throw new DataAccessException("Error al codificar la contrase�a", e) [ CD ]
