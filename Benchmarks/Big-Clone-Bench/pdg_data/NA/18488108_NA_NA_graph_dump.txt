Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void saveZipComponents(ZipComponents zipComponents, File zipFile) throws FileNotFoundException, IOException, Exception [ CD ]
Line_2 $$ public static void saveZipComponents(ZipComponents zipComponents, File zipFile) throws FileNotFoundException, IOException, Exception -->Line_3 $$ ZipOutputStream zipOutStream = new ZipOutputStream(new FileOutputStream(zipFile))[ CD ]
Line_2 $$ public static void saveZipComponents(ZipComponents zipComponents, File zipFile) throws FileNotFoundException, IOException, Exception -->Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) [ FD ]
Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) -->Line_5 $$ ZipEntry newEntry = new ZipEntry(comp.getName())[ FD ]
Line_3 $$ ZipOutputStream zipOutStream = new ZipOutputStream(new FileOutputStream(zipFile))-->Line_6 $$ zipOutStream.putNextEntry(newEntry)[ FD ]
Line_5 $$ ZipEntry newEntry = new ZipEntry(comp.getName())-->Line_6 $$ zipOutStream.putNextEntry(newEntry)[ FD ]
Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) -->Line_7 $$ if (comp.isDirectory()) [ FD ]
Line_7 $$ if (comp.isDirectory()) -->Line_7 $$ if (comp.isDirectory()) [ CD ]
Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) -->Line_7 $$ if (comp.isDirectory()) [ FD ]
Line_7 $$ if (comp.isDirectory()) -->Line_9 $$ if (comp.getName().endsWith("document.xml") || comp.getName().endsWith("document.xml.rels")) [ CD ]
Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) -->Line_9 $$ if (comp.getName().endsWith("document.xml") || comp.getName().endsWith("document.xml.rels")) [ FD ]
Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) -->Line_9 $$ if (comp.getName().endsWith("document.xml") || comp.getName().endsWith("document.xml.rels")) [ FD ]
Line_7 $$ if (comp.isDirectory()) -->Line_11 $$ InputStream inputStream = comp.getInputStream()[ CD ]
Line_11 $$ InputStream inputStream = comp.getInputStream()-->Line_11 $$ InputStream inputStream = comp.getInputStream()[ CD ]
Line_4 $$ for (ZipComponent comp : zipComponents.getComponents()) -->Line_11 $$ InputStream inputStream = comp.getInputStream()[ FD ]
Line_7 $$ if (comp.isDirectory()) -->Line_12 $$ IOUtils.copy(inputStream, zipOutStream)[ CD ]
Line_11 $$ InputStream inputStream = comp.getInputStream()-->Line_12 $$ IOUtils.copy(inputStream, zipOutStream)[ FD ]
Line_3 $$ ZipOutputStream zipOutStream = new ZipOutputStream(new FileOutputStream(zipFile))-->Line_12 $$ IOUtils.copy(inputStream, zipOutStream)[ FD ]
Line_7 $$ if (comp.isDirectory()) -->Line_13 $$ inputStream.close()[ CD ]
Line_11 $$ InputStream inputStream = comp.getInputStream()-->Line_13 $$ inputStream.close()[ FD ]
Line_2 $$ public static void saveZipComponents(ZipComponents zipComponents, File zipFile) throws FileNotFoundException, IOException, Exception -->Line_16 $$ zipOutStream.close()[ CD ]
Line_3 $$ ZipOutputStream zipOutStream = new ZipOutputStream(new FileOutputStream(zipFile))-->Line_16 $$ zipOutStream.close()[ FD ]
