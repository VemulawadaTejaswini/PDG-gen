Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testRelativeRedirect2() throws Exception [ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_3 $$ int port = this.localServer.getServicePort()[ CD ]
Line_3 $$ int port = this.localServer.getServicePort()-->Line_3 $$ int port = this.localServer.getServicePort()[ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_4 $$ String host = this.localServer.getServiceHostName()[ CD ]
Line_4 $$ String host = this.localServer.getServiceHostName()-->Line_4 $$ String host = this.localServer.getServiceHostName()[ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_5 $$ this.localServer.register("*", new RelativeRedirectService2())[ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_6 $$ DefaultHttpClient client = new DefaultHttpClient()[ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_7 $$ HttpContext context = new BasicHttpContext()[ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_8 $$ client.getParams().setBooleanParameter(ClientPNames.REJECT_RELATIVE_REDIRECT, false)[ CD ]
Line_6 $$ DefaultHttpClient client = new DefaultHttpClient()-->Line_8 $$ client.getParams().setBooleanParameter(ClientPNames.REJECT_RELATIVE_REDIRECT, false)[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_9 $$ HttpGet httpget = new HttpGet("/test/oldlocation")[ CD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ CD ]
Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)-->Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ CD ]
Line_6 $$ DefaultHttpClient client = new DefaultHttpClient()-->Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ FD ]
Line_9 $$ HttpGet httpget = new HttpGet("/test/oldlocation")-->Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ FD ]
Line_7 $$ HttpContext context = new BasicHttpContext()-->Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_11 $$ HttpEntity e = response.getEntity()[ CD ]
Line_11 $$ HttpEntity e = response.getEntity()-->Line_11 $$ HttpEntity e = response.getEntity()[ CD ]
Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)-->Line_11 $$ HttpEntity e = response.getEntity()[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_12 $$ if (e != null) [ CD ]
Line_11 $$ HttpEntity e = response.getEntity()-->Line_12 $$ if (e != null) [ FD ]
Line_12 $$ if (e != null) -->Line_13 $$ e.consumeContent()[ CD ]
Line_11 $$ HttpEntity e = response.getEntity()-->Line_13 $$ e.consumeContent()[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_15 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)[ CD ]
Line_7 $$ HttpContext context = new BasicHttpContext()-->Line_15 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_16 $$ HttpHost targetHost = (HttpHost) context.getAttribute(ExecutionContext.HTTP_TARGET_HOST)[ CD ]
Line_7 $$ HttpContext context = new BasicHttpContext()-->Line_16 $$ HttpHost targetHost = (HttpHost) context.getAttribute(ExecutionContext.HTTP_TARGET_HOST)[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_17 $$ assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode())[ CD ]
Line_10 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)-->Line_17 $$ assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode())[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_18 $$ assertEquals("/test/relativelocation", reqWrapper.getRequestLine().getUri())[ CD ]
Line_15 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)-->Line_18 $$ assertEquals("/test/relativelocation", reqWrapper.getRequestLine().getUri())[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_19 $$ assertEquals(host, targetHost.getHostName())[ CD ]
Line_4 $$ String host = this.localServer.getServiceHostName()-->Line_19 $$ assertEquals(host, targetHost.getHostName())[ FD ]
Line_16 $$ HttpHost targetHost = (HttpHost) context.getAttribute(ExecutionContext.HTTP_TARGET_HOST)-->Line_19 $$ assertEquals(host, targetHost.getHostName())[ FD ]
Line_2 $$ public void testRelativeRedirect2() throws Exception -->Line_20 $$ assertEquals(port, targetHost.getPort())[ CD ]
Line_3 $$ int port = this.localServer.getServicePort()-->Line_20 $$ assertEquals(port, targetHost.getPort())[ FD ]
Line_16 $$ HttpHost targetHost = (HttpHost) context.getAttribute(ExecutionContext.HTTP_TARGET_HOST)-->Line_20 $$ assertEquals(port, targetHost.getPort())[ FD ]
