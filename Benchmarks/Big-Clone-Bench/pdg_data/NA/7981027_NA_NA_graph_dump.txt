Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException [ CD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_3 $$ byte[] pwdInDb = hexStringToByte(passwordInDb)[ CD ]
Line_3 $$ byte[] pwdInDb = hexStringToByte(passwordInDb)-->Line_3 $$ byte[] pwdInDb = hexStringToByte(passwordInDb)[ CD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_3 $$ byte[] pwdInDb = hexStringToByte(passwordInDb)[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_4 $$ byte[] salt = new byte[SALT_LENGTH][ CD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_5 $$ System.arraycopy(pwdInDb, 0, salt, 0, SALT_LENGTH)[ CD ]
Line_3 $$ byte[] pwdInDb = hexStringToByte(passwordInDb)-->Line_5 $$ System.arraycopy(pwdInDb, 0, salt, 0, SALT_LENGTH)[ FD ]
Line_4 $$ byte[] salt = new byte[SALT_LENGTH]-->Line_5 $$ System.arraycopy(pwdInDb, 0, salt, 0, SALT_LENGTH)[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_7 $$ md.update(salt)[ CD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_7 $$ md.update(salt)[ FD ]
Line_4 $$ byte[] salt = new byte[SALT_LENGTH]-->Line_7 $$ md.update(salt)[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_8 $$ md.update(password.getBytes("UTF-8"))[ CD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_8 $$ md.update(password.getBytes("UTF-8"))[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_8 $$ md.update(password.getBytes("UTF-8"))[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_9 $$ byte[] digest = md.digest()[ CD ]
Line_9 $$ byte[] digest = md.digest()-->Line_9 $$ byte[] digest = md.digest()[ CD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_9 $$ byte[] digest = md.digest()[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_10 $$ byte[] digestInDb = new byte[pwdInDb.length - SALT_LENGTH][ CD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_11 $$ System.arraycopy(pwdInDb, SALT_LENGTH, digestInDb, 0, digestInDb.length)[ CD ]
Line_3 $$ byte[] pwdInDb = hexStringToByte(passwordInDb)-->Line_11 $$ System.arraycopy(pwdInDb, SALT_LENGTH, digestInDb, 0, digestInDb.length)[ FD ]
Line_10 $$ byte[] digestInDb = new byte[pwdInDb.length - SALT_LENGTH]-->Line_11 $$ System.arraycopy(pwdInDb, SALT_LENGTH, digestInDb, 0, digestInDb.length)[ FD ]
Line_2 $$ public static boolean validPassword(String password, String passwordInDb) throws NoSuchAlgorithmException, UnsupportedEncodingException -->Line_12 $$ if (Arrays.equals(digest, digestInDb)) [ CD ]
Line_9 $$ byte[] digest = md.digest()-->Line_12 $$ if (Arrays.equals(digest, digestInDb)) [ FD ]
Line_10 $$ byte[] digestInDb = new byte[pwdInDb.length - SALT_LENGTH]-->Line_12 $$ if (Arrays.equals(digest, digestInDb)) [ FD ]
Line_12 $$ if (Arrays.equals(digest, digestInDb)) -->Line_12 $$ if (Arrays.equals(digest, digestInDb)) [ CD ]
Line_9 $$ byte[] digest = md.digest()-->Line_12 $$ if (Arrays.equals(digest, digestInDb)) [ FD ]
Line_10 $$ byte[] digestInDb = new byte[pwdInDb.length - SALT_LENGTH]-->Line_12 $$ if (Arrays.equals(digest, digestInDb)) [ FD ]
Line_12 $$ if (Arrays.equals(digest, digestInDb)) -->Line_13 $$ return true[ CD ]
Line_12 $$ if (Arrays.equals(digest, digestInDb)) -->Line_15 $$ return false[ CD ]
