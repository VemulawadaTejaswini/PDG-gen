Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private boolean importTablesData(Connection conn) [ CD ]
Line_5 $$ boolean autoCommit = conn.getAutoCommit()-->Line_5 $$ boolean autoCommit = conn.getAutoCommit()[ CD ]
Line_2 $$ private boolean importTablesData(Connection conn) -->Line_5 $$ boolean autoCommit = conn.getAutoCommit()[ FD ]
Line_2 $$ private boolean importTablesData(Connection conn) -->Line_6 $$ conn.setAutoCommit(false)[ FD ]
Line_7 $$ String dbType = this.getFromSession("database")-->Line_7 $$ String dbType = this.getFromSession("database")[ CD ]
Line_8 $$ List statements = ParseDBDumpFile.parse(SystemGlobals.getValue(ConfigKeys.CONFIG_DIR) + "/database/" + dbType + "/" + dbType + "_data_dump.sql")-->Line_8 $$ List statements = ParseDBDumpFile.parse(SystemGlobals.getValue(ConfigKeys.CONFIG_DIR) + "/database/" + dbType + "/" + dbType + "_data_dump.sql")[ CD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) [ CD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) [ CD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) [ CD ]
Line_8 $$ List statements = ParseDBDumpFile.parse(SystemGlobals.getValue(ConfigKeys.CONFIG_DIR) + "/database/" + dbType + "/" + dbType + "_data_dump.sql")-->Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_10 $$ String query = (String) iter.next()[ CD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_10 $$ String query = (String) iter.next()[ FD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_11 $$ if (query == null || "".equals(query.trim())) [ CD ]
Line_10 $$ String query = (String) iter.next()-->Line_11 $$ if (query == null || "".equals(query.trim())) [ FD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_14 $$ query = query.trim()[ CD ]
Line_10 $$ String query = (String) iter.next()-->Line_14 $$ query = query.trim()[ FD ]
Line_14 $$ query = query.trim()-->Line_14 $$ query = query.trim()[ FD ]
Line_14 $$ query = query.trim()-->Line_14 $$ query = query.trim()[ CD ]
Line_10 $$ String query = (String) iter.next()-->Line_14 $$ query = query.trim()[ FD ]
Line_14 $$ query = query.trim()-->Line_14 $$ query = query.trim()[ FD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_15 $$ Statement s = conn.createStatement()[ CD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_15 $$ Statement s = conn.createStatement()[ CD ]
Line_2 $$ private boolean importTablesData(Connection conn) -->Line_15 $$ Statement s = conn.createStatement()[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_14 $$ query = query.trim()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_14 $$ query = query.trim()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_14 $$ query = query.trim()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) -->Line_18 $$ s.executeUpdate(query)[ CD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_18 $$ s.executeUpdate(query)[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_18 $$ s.executeUpdate(query)[ FD ]
Line_14 $$ query = query.trim()-->Line_18 $$ s.executeUpdate(query)[ FD ]
Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) -->Line_19 $$ if (query.startsWith("SELECT")) [ CD ]
Line_10 $$ String query = (String) iter.next()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_14 $$ query = query.trim()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_19 $$ if (query.startsWith("SELECT")) -->Line_19 $$ if (query.startsWith("SELECT")) [ CD ]
Line_10 $$ String query = (String) iter.next()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_14 $$ query = query.trim()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_19 $$ if (query.startsWith("SELECT")) -->Line_20 $$ s.executeQuery(query)[ CD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_20 $$ s.executeQuery(query)[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_20 $$ s.executeQuery(query)[ FD ]
Line_14 $$ query = query.trim()-->Line_20 $$ s.executeQuery(query)[ FD ]
Line_25 $$ status = false-->Line_25 $$ status = false[ FD ]
Line_4 $$ boolean status = true-->Line_25 $$ status = false[ FD ]
Line_2 $$ private boolean importTablesData(Connection conn) -->Line_26 $$ conn.rollback()[ FD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_31 $$ s.close()[ FD ]
Line_2 $$ private boolean importTablesData(Connection conn) -->Line_34 $$ conn.setAutoCommit(autoCommit)[ FD ]
Line_5 $$ boolean autoCommit = conn.getAutoCommit()-->Line_34 $$ conn.setAutoCommit(autoCommit)[ FD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator iter = statements.iterator(); iter.hasNext(); ) -->Line_10 $$ String query = (String) iter.next()[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_11 $$ if (query == null || "".equals(query.trim())) [ FD ]
Line_14 $$ query = query.trim()-->Line_11 $$ if (query == null || "".equals(query.trim())) [ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_14 $$ query = query.trim()[ FD ]
Line_14 $$ query = query.trim()-->Line_14 $$ query = query.trim()[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_14 $$ query = query.trim()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_14 $$ query = query.trim()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_14 $$ query = query.trim()-->Line_17 $$ if (query.startsWith("UPDATE") || query.startsWith("INSERT") || query.startsWith("SET")) [ FD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_18 $$ s.executeUpdate(query)[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_18 $$ s.executeUpdate(query)[ FD ]
Line_14 $$ query = query.trim()-->Line_18 $$ s.executeUpdate(query)[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_14 $$ query = query.trim()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_14 $$ query = query.trim()-->Line_19 $$ if (query.startsWith("SELECT")) [ FD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_20 $$ s.executeQuery(query)[ FD ]
Line_10 $$ String query = (String) iter.next()-->Line_20 $$ s.executeQuery(query)[ FD ]
Line_14 $$ query = query.trim()-->Line_20 $$ s.executeQuery(query)[ FD ]
Line_15 $$ Statement s = conn.createStatement()-->Line_31 $$ s.close()[ FD ]
