Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String encodePassword(String rawPass, Object salt) [ CD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_3 $$ MessageDigest sha[ CD ]
Line_3 $$ MessageDigest sha-->Line_5 $$ sha = MessageDigest.getInstance("SHA")[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA")-->Line_5 $$ sha = MessageDigest.getInstance("SHA")[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA")-->Line_5 $$ sha = MessageDigest.getInstance("SHA")[ CD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_9 $$ sha.update(rawPass.getBytes())[ CD ]
Line_3 $$ MessageDigest sha-->Line_9 $$ sha.update(rawPass.getBytes())[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA")-->Line_9 $$ sha.update(rawPass.getBytes())[ FD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_9 $$ sha.update(rawPass.getBytes())[ FD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_10 $$ if (salt != null) [ CD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_10 $$ if (salt != null) [ FD ]
Line_10 $$ if (salt != null) -->Line_11 $$ Assert.isInstanceOf(byte[].class, salt, "Salt value must be a byte array")[ CD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_11 $$ Assert.isInstanceOf(byte[].class, salt, "Salt value must be a byte array")[ FD ]
Line_10 $$ if (salt != null) -->Line_12 $$ sha.update((byte[]) salt)[ CD ]
Line_3 $$ MessageDigest sha-->Line_12 $$ sha.update((byte[]) salt)[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA")-->Line_12 $$ sha.update((byte[]) salt)[ FD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_14 $$ byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt)[ CD ]
Line_14 $$ byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt)-->Line_14 $$ byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt)[ CD ]
Line_3 $$ MessageDigest sha-->Line_14 $$ byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt)[ FD ]
Line_5 $$ sha = MessageDigest.getInstance("SHA")-->Line_14 $$ byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt)[ FD ]
Line_2 $$ public String encodePassword(String rawPass, Object salt) -->Line_15 $$ return (salt == null ? SHA_PREFIX : SSHA_PREFIX) + new String(Base64.encodeBase64(hash))[ CD ]
Line_14 $$ byte[] hash = combineHashAndSalt(sha.digest(), (byte[]) salt)-->Line_15 $$ return (salt == null ? SHA_PREFIX : SSHA_PREFIX) + new String(Base64.encodeBase64(hash))[ FD ]
