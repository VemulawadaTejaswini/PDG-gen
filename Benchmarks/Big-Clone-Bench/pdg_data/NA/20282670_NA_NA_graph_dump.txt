Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception [ CD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_3 $$ FTPClient ftpClient = new FTPClient()[ CD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_4 $$ ftpClient.setControlEncoding("euc-kr")[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_4 $$ ftpClient.setControlEncoding("euc-kr")[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ CD ]
Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ CD ]
Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ CD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_5 $$ if (!EgovWebUtil.isIPAddress(synchrnServerVO.getServerIp())) [ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_6 $$ throw new RuntimeException("IP is needed. (" + synchrnServerVO.getServerIp() + ")")[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())[ CD ]
Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())-->Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())[ CD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ FD ]
Line_8 $$ InetAddress host = InetAddress.getByName(synchrnServerVO.getServerIp())-->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_9 $$ ftpClient.connect(host, Integer.parseInt(synchrnServerVO.getServerPort()))[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_10 $$ ftpClient.login(synchrnServerVO.getFtpId(), synchrnServerVO.getFtpPassword())[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_11 $$ ftpClient.changeWorkingDirectory(synchrnServerVO.getSynchrnLc())[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_11 $$ ftpClient.changeWorkingDirectory(synchrnServerVO.getSynchrnLc())[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_11 $$ ftpClient.changeWorkingDirectory(synchrnServerVO.getSynchrnLc())[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_12 $$ File downFile = new File(EgovWebUtil.filePathBlackList(synchrnServerVO.getFilePath() + fileNm))[ CD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_12 $$ File downFile = new File(EgovWebUtil.filePathBlackList(synchrnServerVO.getFilePath() + fileNm))[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_13 $$ OutputStream outputStream = null[ CD ]
Line_13 $$ OutputStream outputStream = null-->Line_15 $$ outputStream = new FileOutputStream(downFile)[ FD ]
Line_15 $$ outputStream = new FileOutputStream(downFile)-->Line_15 $$ outputStream = new FileOutputStream(downFile)[ FD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_16 $$ ftpClient.retrieveFile(fileNm, outputStream)[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_16 $$ ftpClient.retrieveFile(fileNm, outputStream)[ FD ]
Line_13 $$ OutputStream outputStream = null-->Line_16 $$ ftpClient.retrieveFile(fileNm, outputStream)[ FD ]
Line_15 $$ outputStream = new FileOutputStream(downFile)-->Line_16 $$ ftpClient.retrieveFile(fileNm, outputStream)[ FD ]
Line_13 $$ OutputStream outputStream = null-->Line_20 $$ if (outputStream != null)[ FD ]
Line_15 $$ outputStream = new FileOutputStream(downFile)-->Line_20 $$ if (outputStream != null)[ FD ]
Line_20 $$ if (outputStream != null)-->Line_20 $$ outputStream.close()[ CD ]
Line_13 $$ OutputStream outputStream = null-->Line_20 $$ outputStream.close()[ FD ]
Line_15 $$ outputStream = new FileOutputStream(downFile)-->Line_20 $$ outputStream.close()[ FD ]
Line_2 $$ public void downloadFtpFile(SynchrnServerVO synchrnServerVO, String fileNm) throws Exception -->Line_22 $$ ftpClient.logout()[ CD ]
Line_3 $$ FTPClient ftpClient = new FTPClient()-->Line_22 $$ ftpClient.logout()[ FD ]
