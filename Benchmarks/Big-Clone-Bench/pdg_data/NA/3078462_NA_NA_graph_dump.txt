Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void handle() [ CD ]
Line_2 $$ public void handle() -->Line_3 $$ FileChannel srcChannel, destChannel[ CD ]
Line_2 $$ public void handle() -->Line_4 $$ String destOutFile = databaseName + ".script." + System.currentTimeMillis()[ CD ]
Line_2 $$ public void handle() -->Line_5 $$ String destOutFileCompressed = databaseName + ".script." + System.currentTimeMillis() + ".gz"[ CD ]
Line_2 $$ public void handle() -->Line_6 $$ if (rotateDest != null) [ CD ]
Line_6 $$ if (rotateDest != null) -->Line_7 $$ (new File(rotateDest)).mkdirs()[ CD ]
Line_6 $$ if (rotateDest != null) -->Line_8 $$ if (destOutFile.indexOf("/") != -1) [ CD ]
Line_4 $$ String destOutFile = databaseName + ".script." + System.currentTimeMillis()-->Line_8 $$ if (destOutFile.indexOf("/") != -1) [ FD ]
Line_8 $$ if (destOutFile.indexOf("/") != -1) -->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ CD ]
Line_4 $$ String destOutFile = databaseName + ".script." + System.currentTimeMillis()-->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_4 $$ String destOutFile = databaseName + ".script." + System.currentTimeMillis()-->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_4 $$ String destOutFile = databaseName + ".script." + System.currentTimeMillis()-->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_9 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_6 $$ if (rotateDest != null) -->Line_11 $$ if (destOutFileCompressed.indexOf("/") != -1) [ CD ]
Line_5 $$ String destOutFileCompressed = databaseName + ".script." + System.currentTimeMillis() + ".gz"-->Line_11 $$ if (destOutFileCompressed.indexOf("/") != -1) [ FD ]
Line_11 $$ if (destOutFileCompressed.indexOf("/") != -1) -->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ CD ]
Line_5 $$ String destOutFileCompressed = databaseName + ".script." + System.currentTimeMillis() + ".gz"-->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_5 $$ String destOutFileCompressed = databaseName + ".script." + System.currentTimeMillis() + ".gz"-->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_5 $$ String destOutFileCompressed = databaseName + ".script." + System.currentTimeMillis() + ".gz"-->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_12 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_2 $$ public void handle() -->Line_15 $$ if (rotateCompress) [ CD ]
Line_21 $$ while ((len = in.read(buf)) > 0) -->Line_21 $$ while ((len = in.read(buf)) > 0) [ FD ]
Line_20 $$ int len-->Line_21 $$ while ((len = in.read(buf)) > 0) [ FD ]
Line_21 $$ while ((len = in.read(buf)) > 0) -->Line_21 $$ while ((len = in.read(buf)) > 0) [ CD ]
Line_18 $$ FileInputStream in = new FileInputStream(databaseName + ".script")-->Line_21 $$ while ((len = in.read(buf)) > 0) [ FD ]
Line_21 $$ while ((len = in.read(buf)) > 0) -->Line_22 $$ out.write(buf, 0, len)[ CD ]
Line_17 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = in.read(buf)) > 0) -->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_20 $$ int len-->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_18 $$ FileInputStream in = new FileInputStream(databaseName + ".script")-->Line_24 $$ in.close()[ FD ]
Line_17 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_25 $$ out.finish()[ FD ]
Line_17 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_26 $$ out.close()[ FD ]
Line_18 $$ FileInputStream in = new FileInputStream(databaseName + ".script")-->Line_28 $$ in = null[ FD ]
Line_28 $$ in = null-->Line_28 $$ in = null[ FD ]
Line_17 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_29 $$ out = null[ FD ]
Line_29 $$ out = null-->Line_29 $$ out = null[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()[ FD ]
Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()-->Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()[ FD ]
Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()-->Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()[ CD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()[ FD ]
Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()[ FD ]
Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()[ CD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_48 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_48 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_48 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()-->Line_48 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_48 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()-->Line_48 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_49 $$ srcChannel.close()[ FD ]
Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()-->Line_49 $$ srcChannel.close()[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_50 $$ destChannel.close()[ FD ]
Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_50 $$ destChannel.close()[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_51 $$ srcChannel = null[ FD ]
Line_36 $$ srcChannel = new FileInputStream(databaseName + ".script").getChannel()-->Line_51 $$ srcChannel = null[ FD ]
Line_51 $$ srcChannel = null-->Line_51 $$ srcChannel = null[ FD ]
Line_3 $$ FileChannel srcChannel, destChannel-->Line_52 $$ destChannel = null[ FD ]
Line_42 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_52 $$ destChannel = null[ FD ]
Line_52 $$ destChannel = null-->Line_52 $$ destChannel = null[ FD ]
Line_15 $$ if (rotateCompress) -->Line_57 $$ Debug.debug("Rotated database file '" + databaseName + ".script' to '" + destOutFile + "'")[ CD ]
Line_2 $$ public void handle() -->Line_59 $$ if (rotateDest != null) [ CD ]
Line_59 $$ if (rotateDest != null) -->Line_60 $$ long comparisonTime = rotateDays * (60 * 60 * 24 * 1000)[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_61 $$ long currentTime = System.currentTimeMillis()[ CD ]
Line_61 $$ long currentTime = System.currentTimeMillis()-->Line_61 $$ long currentTime = System.currentTimeMillis()[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_62 $$ File fileList[] = (new File(rotateDest)).listFiles()[ CD ]
Line_62 $$ File fileList[] = (new File(rotateDest)).listFiles()-->Line_62 $$ File fileList[] = (new File(rotateDest)).listFiles()[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_63 $$ DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd")[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_64 $$ java.util.Date date = new java.util.Date(currentTime)[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_65 $$ String archiveFile = format1.format(date).toString() + ".zip"[ CD ]
Line_63 $$ DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd")-->Line_65 $$ String archiveFile = format1.format(date).toString() + ".zip"[ FD ]
Line_64 $$ java.util.Date date = new java.util.Date(currentTime)-->Line_65 $$ String archiveFile = format1.format(date).toString() + ".zip"[ FD ]
Line_59 $$ if (rotateDest != null) -->Line_66 $$ if (rotateArchive != null) [ CD ]
Line_66 $$ if (rotateArchive != null) -->Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile[ CD ]
Line_65 $$ String archiveFile = format1.format(date).toString() + ".zip"-->Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile[ FD ]
Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile-->Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile[ FD ]
Line_65 $$ String archiveFile = format1.format(date).toString() + ".zip"-->Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile[ FD ]
Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile-->Line_67 $$ archiveFile = rotateArchive + "/" + archiveFile[ FD ]
Line_66 $$ if (rotateArchive != null) -->Line_68 $$ (new File(rotateArchive)).mkdirs()[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_70 $$ Archive archive = new Archive(archiveFile)[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ CD ]
Line_59 $$ if (rotateDest != null) -->Line_59 $$ if (rotateDest != null) [ CD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ CD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ CD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_72 $$ String currentFilename = fileList[i].getName()[ CD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_72 $$ String currentFilename = fileList[i].getName()[ CD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_73 $$ long timeDifference = (currentTime - fileList[i].lastModified())[ CD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ CD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ FD ]
Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) -->Line_75 $$ if (rotateDest != null) [ CD ]
Line_75 $$ if (rotateDest != null) -->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ CD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) -->Line_78 $$ if (timeDifference > comparisonTime) [ CD ]
Line_73 $$ long timeDifference = (currentTime - fileList[i].lastModified())-->Line_78 $$ if (timeDifference > comparisonTime) [ FD ]
Line_60 $$ long comparisonTime = rotateDays * (60 * 60 * 24 * 1000)-->Line_78 $$ if (timeDifference > comparisonTime) [ FD ]
Line_78 $$ if (timeDifference > comparisonTime) -->Line_79 $$ archive.addFile(fileList[i].getName(), currentFilename)[ CD ]
Line_70 $$ Archive archive = new Archive(archiveFile)-->Line_79 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_79 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_79 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_78 $$ if (timeDifference > comparisonTime) -->Line_80 $$ fileList[i].delete()[ CD ]
Line_59 $$ if (rotateDest != null) -->Line_84 $$ archive = null[ CD ]
Line_70 $$ Archive archive = new Archive(archiveFile)-->Line_84 $$ archive = null[ FD ]
Line_84 $$ archive = null-->Line_84 $$ archive = null[ FD ]
Line_59 $$ if (rotateDest != null) -->Line_86 $$ format1 = null[ CD ]
Line_63 $$ DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd")-->Line_86 $$ format1 = null[ FD ]
Line_86 $$ format1 = null-->Line_86 $$ format1 = null[ FD ]
Line_59 $$ if (rotateDest != null) -->Line_87 $$ date = null[ CD ]
Line_64 $$ java.util.Date date = new java.util.Date(currentTime)-->Line_87 $$ date = null[ FD ]
Line_87 $$ date = null-->Line_87 $$ date = null[ FD ]
Line_21 $$ while ((len = in.read(buf)) > 0) -->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_71 $$ for (int i = 0; i < fileList.length; i++) -->Line_71 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_74 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(".script.") != -1)) [ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_76 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_73 $$ long timeDifference = (currentTime - fileList[i].lastModified())-->Line_78 $$ if (timeDifference > comparisonTime) [ FD ]
Line_72 $$ String currentFilename = fileList[i].getName()-->Line_79 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_76 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_79 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
