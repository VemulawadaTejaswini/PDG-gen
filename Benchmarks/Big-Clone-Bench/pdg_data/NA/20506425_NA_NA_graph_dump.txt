Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) [ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_3 $$ if ("include".equals(localName)) [ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_3 $$ if ("include".equals(localName)) [ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_3 $$ if ("include".equals(localName)) [ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_3 $$ if ("include".equals(localName)) [ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_4 $$ this.inXInclude++[ CD ]
Line_3 $$ if ("include".equals(localName)) -->Line_5 $$ String href = atts.getValue("href")[ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_5 $$ String href = atts.getValue("href")[ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_5 $$ String href = atts.getValue("href")[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_6 $$ if ((href == null) || "".equals(href.trim())) [ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_6 $$ if ((href == null) || "".equals(href.trim())) [ FD ]
Line_6 $$ if ((href == null) || "".equals(href.trim())) -->Line_7 $$ href = null[ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_7 $$ href = null[ FD ]
Line_7 $$ href = null-->Line_7 $$ href = null[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_9 $$ String parse = atts.getValue("parse")[ CD ]
Line_9 $$ String parse = atts.getValue("parse")-->Line_9 $$ String parse = atts.getValue("parse")[ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_9 $$ String parse = atts.getValue("parse")[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_10 $$ if ((parse == null) || "".equals(parse.trim())) [ CD ]
Line_9 $$ String parse = atts.getValue("parse")-->Line_10 $$ if ((parse == null) || "".equals(parse.trim())) [ FD ]
Line_10 $$ if ((parse == null) || "".equals(parse.trim())) -->Line_11 $$ parse = "xml"[ CD ]
Line_9 $$ String parse = atts.getValue("parse")-->Line_11 $$ parse = "xml"[ FD ]
Line_11 $$ parse = "xml"-->Line_11 $$ parse = "xml"[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_13 $$ String xpointer = atts.getValue("xpointer")[ CD ]
Line_13 $$ String xpointer = atts.getValue("xpointer")-->Line_13 $$ String xpointer = atts.getValue("xpointer")[ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_13 $$ String xpointer = atts.getValue("xpointer")[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_14 $$ if ((xpointer == null) || "".equals(xpointer.trim())) [ CD ]
Line_13 $$ String xpointer = atts.getValue("xpointer")-->Line_14 $$ if ((xpointer == null) || "".equals(xpointer.trim())) [ FD ]
Line_14 $$ if ((xpointer == null) || "".equals(xpointer.trim())) -->Line_15 $$ xpointer = null[ CD ]
Line_13 $$ String xpointer = atts.getValue("xpointer")-->Line_15 $$ xpointer = null[ FD ]
Line_15 $$ xpointer = null-->Line_15 $$ xpointer = null[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_17 $$ String encoding = atts.getValue("encoding")[ CD ]
Line_17 $$ String encoding = atts.getValue("encoding")-->Line_17 $$ String encoding = atts.getValue("encoding")[ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_17 $$ String encoding = atts.getValue("encoding")[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_18 $$ if ((encoding == null) || "".equals(encoding.trim())) [ CD ]
Line_17 $$ String encoding = atts.getValue("encoding")-->Line_18 $$ if ((encoding == null) || "".equals(encoding.trim())) [ FD ]
Line_18 $$ if ((encoding == null) || "".equals(encoding.trim())) -->Line_19 $$ encoding = null[ CD ]
Line_17 $$ String encoding = atts.getValue("encoding")-->Line_19 $$ encoding = null[ FD ]
Line_19 $$ encoding = null-->Line_19 $$ encoding = null[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_21 $$ String accept = atts.getValue("accept")[ CD ]
Line_21 $$ String accept = atts.getValue("accept")-->Line_21 $$ String accept = atts.getValue("accept")[ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_21 $$ String accept = atts.getValue("accept")[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_22 $$ if ((accept == null) || "".equals(accept.trim())) [ CD ]
Line_21 $$ String accept = atts.getValue("accept")-->Line_22 $$ if ((accept == null) || "".equals(accept.trim())) [ FD ]
Line_22 $$ if ((accept == null) || "".equals(accept.trim())) -->Line_23 $$ accept = null[ CD ]
Line_21 $$ String accept = atts.getValue("accept")-->Line_23 $$ accept = null[ FD ]
Line_23 $$ accept = null-->Line_23 $$ accept = null[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_25 $$ String accept_language = atts.getValue("accept-language")[ CD ]
Line_25 $$ String accept_language = atts.getValue("accept-language")-->Line_25 $$ String accept_language = atts.getValue("accept-language")[ CD ]
Line_2 $$ private void handleXInclude(final String localName, final Attributes atts) -->Line_25 $$ String accept_language = atts.getValue("accept-language")[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_26 $$ if ((accept_language == null) || "".equals(accept_language.trim())) [ CD ]
Line_25 $$ String accept_language = atts.getValue("accept-language")-->Line_26 $$ if ((accept_language == null) || "".equals(accept_language.trim())) [ FD ]
Line_26 $$ if ((accept_language == null) || "".equals(accept_language.trim())) -->Line_27 $$ accept_language = null[ CD ]
Line_25 $$ String accept_language = atts.getValue("accept-language")-->Line_27 $$ accept_language = null[ FD ]
Line_27 $$ accept_language = null-->Line_27 $$ accept_language = null[ FD ]
Line_3 $$ if ("include".equals(localName)) -->Line_29 $$ if (href != null) [ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_29 $$ if (href != null) [ FD ]
Line_7 $$ href = null-->Line_29 $$ if (href != null) [ FD ]
Line_29 $$ if (href != null) -->Line_30 $$ if (href.indexOf(":/") == -1) [ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_30 $$ if (href.indexOf(":/") == -1) [ FD ]
Line_7 $$ href = null-->Line_30 $$ if (href.indexOf(":/") == -1) [ FD ]
Line_30 $$ if (href.indexOf(":/") == -1) -->Line_31 $$ if (href.startsWith("/")) [ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_31 $$ if (href.startsWith("/")) [ FD ]
Line_7 $$ href = null-->Line_31 $$ if (href.startsWith("/")) [ FD ]
Line_31 $$ if (href.startsWith("/")) -->Line_31 $$ if (href.startsWith("/")) [ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_31 $$ if (href.startsWith("/")) [ FD ]
Line_7 $$ href = null-->Line_31 $$ if (href.startsWith("/")) [ FD ]
Line_31 $$ if (href.startsWith("/")) -->Line_32 $$ href = href.substring(1)[ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_32 $$ href = href.substring(1)[ FD ]
Line_7 $$ href = null-->Line_32 $$ href = href.substring(1)[ FD ]
Line_32 $$ href = href.substring(1)-->Line_32 $$ href = href.substring(1)[ FD ]
Line_32 $$ href = href.substring(1)-->Line_32 $$ href = href.substring(1)[ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_32 $$ href = href.substring(1)[ FD ]
Line_7 $$ href = null-->Line_32 $$ href = href.substring(1)[ FD ]
Line_32 $$ href = href.substring(1)-->Line_32 $$ href = href.substring(1)[ FD ]
Line_30 $$ if (href.indexOf(":/") == -1) -->Line_34 $$ href = this.documentURI + href[ CD ]
Line_5 $$ String href = atts.getValue("href")-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_7 $$ href = null-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_32 $$ href = href.substring(1)-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_34 $$ href = this.documentURI + href-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_5 $$ String href = atts.getValue("href")-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_7 $$ href = null-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_32 $$ href = href.substring(1)-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_34 $$ href = this.documentURI + href-->Line_34 $$ href = this.documentURI + href[ FD ]
Line_29 $$ if (href != null) -->Line_36 $$ if (this.localParser.get() == null) [ CD ]
Line_36 $$ if (this.localParser.get() == null) -->Line_37 $$ this.localParser.set(new CShaniDomParser())[ CD ]
Line_29 $$ if (href != null) -->Line_39 $$ CShaniDomParser p = (CShaniDomParser) this.localParser.get()[ CD ]
Line_29 $$ if (href != null) -->Line_40 $$ InputStream in = null[ CD ]
Line_43 $$ URLConnection connection = url.openConnection()-->Line_43 $$ URLConnection connection = url.openConnection()[ CD ]
Line_42 $$ URL url = new URL(href)-->Line_43 $$ URLConnection connection = url.openConnection()[ FD ]
Line_21 $$ String accept = atts.getValue("accept")-->Line_44 $$ if (accept != null) [ FD ]
Line_23 $$ accept = null-->Line_44 $$ if (accept != null) [ FD ]
Line_44 $$ if (accept != null) -->Line_45 $$ connection.addRequestProperty("Accept", accept)[ CD ]
Line_43 $$ URLConnection connection = url.openConnection()-->Line_45 $$ connection.addRequestProperty("Accept", accept)[ FD ]
Line_21 $$ String accept = atts.getValue("accept")-->Line_45 $$ connection.addRequestProperty("Accept", accept)[ FD ]
Line_23 $$ accept = null-->Line_45 $$ connection.addRequestProperty("Accept", accept)[ FD ]
Line_25 $$ String accept_language = atts.getValue("accept-language")-->Line_47 $$ if (accept_language != null) [ FD ]
Line_27 $$ accept_language = null-->Line_47 $$ if (accept_language != null) [ FD ]
Line_47 $$ if (accept_language != null) -->Line_48 $$ connection.addRequestProperty("Accept-Language", accept_language)[ CD ]
Line_43 $$ URLConnection connection = url.openConnection()-->Line_48 $$ connection.addRequestProperty("Accept-Language", accept_language)[ FD ]
Line_25 $$ String accept_language = atts.getValue("accept-language")-->Line_48 $$ connection.addRequestProperty("Accept-Language", accept_language)[ FD ]
Line_27 $$ accept_language = null-->Line_48 $$ connection.addRequestProperty("Accept-Language", accept_language)[ FD ]
Line_40 $$ InputStream in = null-->Line_50 $$ in = connection.getInputStream()[ FD ]
Line_50 $$ in = connection.getInputStream()-->Line_50 $$ in = connection.getInputStream()[ FD ]
Line_50 $$ in = connection.getInputStream()-->Line_50 $$ in = connection.getInputStream()[ CD ]
Line_43 $$ URLConnection connection = url.openConnection()-->Line_50 $$ in = connection.getInputStream()[ FD ]
Line_17 $$ String encoding = atts.getValue("encoding")-->Line_52 $$ if (encoding != null) [ FD ]
Line_19 $$ encoding = null-->Line_52 $$ if (encoding != null) [ FD ]
Line_52 $$ if (encoding != null) -->Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))[ CD ]
Line_51 $$ ADocument doc = null-->Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))[ FD ]
Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))-->Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))[ FD ]
Line_39 $$ CShaniDomParser p = (CShaniDomParser) this.localParser.get()-->Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))[ FD ]
Line_52 $$ if (encoding != null) -->Line_55 $$ doc = (ADocument) p.parse(in)[ CD ]
Line_51 $$ ADocument doc = null-->Line_55 $$ doc = (ADocument) p.parse(in)[ FD ]
Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))-->Line_55 $$ doc = (ADocument) p.parse(in)[ FD ]
Line_55 $$ doc = (ADocument) p.parse(in)-->Line_55 $$ doc = (ADocument) p.parse(in)[ FD ]
Line_39 $$ CShaniDomParser p = (CShaniDomParser) this.localParser.get()-->Line_55 $$ doc = (ADocument) p.parse(in)[ FD ]
Line_40 $$ InputStream in = null-->Line_55 $$ doc = (ADocument) p.parse(in)[ FD ]
Line_50 $$ in = connection.getInputStream()-->Line_55 $$ doc = (ADocument) p.parse(in)[ FD ]
Line_13 $$ String xpointer = atts.getValue("xpointer")-->Line_57 $$ if (xpointer == null) [ FD ]
Line_15 $$ xpointer = null-->Line_57 $$ if (xpointer == null) [ FD ]
Line_57 $$ if (xpointer == null) -->Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())[ CD ]
Line_51 $$ ADocument doc = null-->Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())[ FD ]
Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))-->Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())[ FD ]
Line_55 $$ doc = (ADocument) p.parse(in)-->Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())[ FD ]
Line_57 $$ if (xpointer == null) -->Line_59 $$ converter.setProperty("http://xml.org/sax/properties/lexical-handler", this.lHandler)[ CD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_59 $$ converter.setProperty("http://xml.org/sax/properties/lexical-handler", this.lHandler)[ FD ]
Line_57 $$ if (xpointer == null) -->Line_60 $$ converter.setContentHandler(this.cHandler)[ CD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_60 $$ converter.setContentHandler(this.cHandler)[ FD ]
Line_57 $$ if (xpointer == null) -->Line_61 $$ converter.setDocumentHandler(this.dHandler)[ CD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_61 $$ converter.setDocumentHandler(this.dHandler)[ FD ]
Line_57 $$ if (xpointer == null) -->Line_62 $$ converter.setDTDHandler(this.dtdHandler)[ CD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_62 $$ converter.setDTDHandler(this.dtdHandler)[ FD ]
Line_57 $$ if (xpointer == null) -->Line_63 $$ converter.serialize()[ CD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_63 $$ converter.serialize()[ FD ]
Line_57 $$ if (xpointer == null) -->Line_65 $$ XPath xpath = new DOMXPath(xpointer)[ CD ]
Line_57 $$ if (xpointer == null) -->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ CD ]
Line_57 $$ if (xpointer == null) -->Line_57 $$ if (xpointer == null) [ CD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ CD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ CD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ CD ]
Line_51 $$ ADocument doc = null-->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ FD ]
Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))-->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ FD ]
Line_55 $$ doc = (ADocument) p.parse(in)-->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ FD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_67 $$ CNamespace ns = (CNamespace) it.next()[ CD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_67 $$ CNamespace ns = (CNamespace) it.next()[ FD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ CD ]
Line_65 $$ XPath xpath = new DOMXPath(xpointer)-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_67 $$ CNamespace ns = (CNamespace) it.next()-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_67 $$ CNamespace ns = (CNamespace) it.next()-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_67 $$ CNamespace ns = (CNamespace) it.next()-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_57 $$ if (xpointer == null) -->Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())[ CD ]
Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())-->Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())[ CD ]
Line_65 $$ XPath xpath = new DOMXPath(xpointer)-->Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())[ FD ]
Line_51 $$ ADocument doc = null-->Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())[ FD ]
Line_53 $$ doc = (ADocument) p.parse(new InputStreamReader(in, encoding))-->Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())[ FD ]
Line_55 $$ doc = (ADocument) p.parse(in)-->Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())[ FD ]
Line_57 $$ if (xpointer == null) -->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ CD ]
Line_57 $$ if (xpointer == null) -->Line_57 $$ if (xpointer == null) [ CD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ CD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ CD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ CD ]
Line_70 $$ List result = xpath.selectNodes(doc.getDocumentElement())-->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_72 $$ final Node node = (Node) it.next()[ CD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_72 $$ final Node node = (Node) it.next()[ FD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_72 $$ final Node node = (Node) it.next()[ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)[ CD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_74 $$ converter.setProperty("http://xml.org/sax/properties/lexical-handler", this.lHandler)[ CD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_74 $$ converter.setProperty("http://xml.org/sax/properties/lexical-handler", this.lHandler)[ FD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_74 $$ converter.setProperty("http://xml.org/sax/properties/lexical-handler", this.lHandler)[ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_75 $$ converter.setContentHandler(this.cHandler)[ CD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_75 $$ converter.setContentHandler(this.cHandler)[ FD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_75 $$ converter.setContentHandler(this.cHandler)[ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_76 $$ converter.setDocumentHandler(this.dHandler)[ CD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_76 $$ converter.setDocumentHandler(this.dHandler)[ FD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_76 $$ converter.setDocumentHandler(this.dHandler)[ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_77 $$ converter.setDTDHandler(this.dtdHandler)[ CD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_77 $$ converter.setDTDHandler(this.dtdHandler)[ FD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_77 $$ converter.setDTDHandler(this.dtdHandler)[ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_78 $$ converter.serialize()[ CD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_78 $$ converter.serialize()[ FD ]
Line_58 $$ CDOM2SAX converter = new CDOM2SAX(doc.getDocumentElement())-->Line_78 $$ converter.serialize()[ FD ]
Line_40 $$ InputStream in = null-->Line_85 $$ in.close()[ FD ]
Line_50 $$ in = connection.getInputStream()-->Line_85 $$ in.close()[ FD ]
Line_40 $$ InputStream in = null-->Line_86 $$ in = null[ FD ]
Line_50 $$ in = connection.getInputStream()-->Line_86 $$ in = null[ FD ]
Line_86 $$ in = null-->Line_86 $$ in = null[ FD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) [ FD ]
Line_66 $$ for (Iterator it = doc.getNamespaceList().iterator(); it.hasNext(); ) -->Line_67 $$ CNamespace ns = (CNamespace) it.next()[ FD ]
Line_67 $$ CNamespace ns = (CNamespace) it.next()-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_67 $$ CNamespace ns = (CNamespace) it.next()-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_67 $$ CNamespace ns = (CNamespace) it.next()-->Line_68 $$ xpath.addNamespace(ns.getPrefix() == null ? "" : ns.getPrefix(), ns.getNamespaceURI())[ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) [ FD ]
Line_71 $$ for (final Iterator it = result.iterator(); it.hasNext(); ) -->Line_72 $$ final Node node = (Node) it.next()[ FD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_74 $$ converter.setProperty("http://xml.org/sax/properties/lexical-handler", this.lHandler)[ FD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_75 $$ converter.setContentHandler(this.cHandler)[ FD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_76 $$ converter.setDocumentHandler(this.dHandler)[ FD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_77 $$ converter.setDTDHandler(this.dtdHandler)[ FD ]
Line_73 $$ CDOM2SAX converter = new CDOM2SAX(node)-->Line_78 $$ converter.serialize()[ FD ]
