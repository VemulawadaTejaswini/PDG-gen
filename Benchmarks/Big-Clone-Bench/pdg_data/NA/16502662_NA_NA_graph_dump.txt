Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String hash(String toEncripty) [ CD ]
Line_2 $$ public static String hash(String toEncripty) -->Line_3 $$ if (toEncripty != null) [ CD ]
Line_2 $$ public static String hash(String toEncripty) -->Line_3 $$ if (toEncripty != null) [ FD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_7 $$ md.update(toEncripty.getBytes())[ FD ]
Line_2 $$ public static String hash(String toEncripty) -->Line_7 $$ md.update(toEncripty.getBytes())[ FD ]
Line_8 $$ byte[] hash = md.digest()-->Line_8 $$ byte[] hash = md.digest()[ CD ]
Line_6 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_8 $$ byte[] hash = md.digest()[ FD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ if ((0xff & hash[i]) < 0x10)[ CD ]
Line_11 $$ if ((0xff & hash[i]) < 0x10)-->Line_11 $$ hexString.append("0" + Integer.toHexString((0xFF & hash[i])))[ CD ]
Line_9 $$ StringBuffer hexString = new StringBuffer()-->Line_11 $$ hexString.append("0" + Integer.toHexString((0xFF & hash[i])))[ FD ]
Line_11 $$ if ((0xff & hash[i]) < 0x10)-->Line_11 $$ hexString.append(Integer.toHexString(0xFF & hash[i]))[ CD ]
Line_9 $$ StringBuffer hexString = new StringBuffer()-->Line_11 $$ hexString.append(Integer.toHexString(0xFF & hash[i]))[ FD ]
Line_2 $$ public static String hash(String toEncripty) -->Line_13 $$ toEncripty = hexString.toString()[ FD ]
Line_13 $$ toEncripty = hexString.toString()-->Line_13 $$ toEncripty = hexString.toString()[ FD ]
Line_13 $$ toEncripty = hexString.toString()-->Line_13 $$ toEncripty = hexString.toString()[ CD ]
Line_9 $$ StringBuffer hexString = new StringBuffer()-->Line_13 $$ toEncripty = hexString.toString()[ FD ]
Line_2 $$ public static String hash(String toEncripty) -->Line_19 $$ return toEncripty[ CD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ for (int i = 0; i < hash.length; i++) [ FD ]
