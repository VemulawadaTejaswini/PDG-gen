Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException [ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_3 $$ if (is == null) [ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_3 $$ if (is == null) [ FD ]
Line_3 $$ if (is == null) -->Line_4 $$ return new DownloadedContent.InMemory(new byte[] [ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_7 $$ final byte[] buffer = new byte[1024][ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_8 $$ int nbRead[ CD ]
Line_10 $$ while ((nbRead = is.read(buffer)) != -1) -->Line_10 $$ while ((nbRead = is.read(buffer)) != -1) [ FD ]
Line_8 $$ int nbRead-->Line_10 $$ while ((nbRead = is.read(buffer)) != -1) [ FD ]
Line_10 $$ while ((nbRead = is.read(buffer)) != -1) -->Line_10 $$ while ((nbRead = is.read(buffer)) != -1) [ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_10 $$ while ((nbRead = is.read(buffer)) != -1) [ FD ]
Line_7 $$ final byte[] buffer = new byte[1024]-->Line_10 $$ while ((nbRead = is.read(buffer)) != -1) [ FD ]
Line_10 $$ while ((nbRead = is.read(buffer)) != -1) -->Line_11 $$ bos.write(buffer, 0, nbRead)[ CD ]
Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_11 $$ bos.write(buffer, 0, nbRead)[ FD ]
Line_7 $$ final byte[] buffer = new byte[1024]-->Line_11 $$ bos.write(buffer, 0, nbRead)[ FD ]
Line_10 $$ while ((nbRead = is.read(buffer)) != -1) -->Line_11 $$ bos.write(buffer, 0, nbRead)[ FD ]
Line_8 $$ int nbRead-->Line_11 $$ bos.write(buffer, 0, nbRead)[ FD ]
Line_10 $$ while ((nbRead = is.read(buffer)) != -1) -->Line_12 $$ if (bos.size() > MAX_IN_MEMORY) [ CD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_12 $$ if (bos.size() > MAX_IN_MEMORY) [ CD ]
Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_12 $$ if (bos.size() > MAX_IN_MEMORY) [ FD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_13 $$ final File file = File.createTempFile("htmlunit", ".tmp")[ CD ]
Line_13 $$ final File file = File.createTempFile("htmlunit", ".tmp")-->Line_13 $$ final File file = File.createTempFile("htmlunit", ".tmp")[ CD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_14 $$ file.deleteOnExit()[ CD ]
Line_13 $$ final File file = File.createTempFile("htmlunit", ".tmp")-->Line_14 $$ file.deleteOnExit()[ FD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)[ CD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_16 $$ bos.writeTo(fos)[ CD ]
Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_16 $$ bos.writeTo(fos)[ FD ]
Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)-->Line_16 $$ bos.writeTo(fos)[ FD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_17 $$ IOUtils.copyLarge(is, fos)[ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_17 $$ IOUtils.copyLarge(is, fos)[ FD ]
Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)-->Line_17 $$ IOUtils.copyLarge(is, fos)[ FD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_18 $$ fos.close()[ CD ]
Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)-->Line_18 $$ fos.close()[ FD ]
Line_12 $$ if (bos.size() > MAX_IN_MEMORY) -->Line_19 $$ return new DownloadedContent.OnFile(file)[ CD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_23 $$ IOUtils.closeQuietly(is)[ FD ]
Line_2 $$ public static DownloadedContent downloadContent(final InputStream is) throws IOException -->Line_25 $$ return new DownloadedContent.InMemory(bos.toByteArray())[ CD ]
Line_6 $$ final ByteArrayOutputStream bos = new ByteArrayOutputStream()-->Line_25 $$ return new DownloadedContent.InMemory(bos.toByteArray())[ FD ]
Line_10 $$ while ((nbRead = is.read(buffer)) != -1) -->Line_11 $$ bos.write(buffer, 0, nbRead)[ FD ]
Line_13 $$ final File file = File.createTempFile("htmlunit", ".tmp")-->Line_14 $$ file.deleteOnExit()[ FD ]
Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)-->Line_16 $$ bos.writeTo(fos)[ FD ]
Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)-->Line_17 $$ IOUtils.copyLarge(is, fos)[ FD ]
Line_15 $$ final FileOutputStream fos = new FileOutputStream(file)-->Line_18 $$ fos.close()[ FD ]
