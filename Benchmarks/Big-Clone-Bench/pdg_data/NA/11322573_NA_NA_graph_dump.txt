Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void preprocessObjects(GeoObject[] objects) throws IOException [ CD ]
Line_2 $$ private void preprocessObjects(GeoObject[] objects) throws IOException -->Line_3 $$ System.out.println("objects.length " + objects.length)[ CD ]
Line_2 $$ private void preprocessObjects(GeoObject[] objects) throws IOException -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ CD ]
Line_2 $$ private void preprocessObjects(GeoObject[] objects) throws IOException -->Line_2 $$ private void preprocessObjects(GeoObject[] objects) throws IOException [ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_5 $$ String fileName = objects[i].getPath()[ CD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_5 $$ String fileName = objects[i].getPath()[ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_6 $$ int dotindex = fileName.lastIndexOf(".")[ CD ]
Line_6 $$ int dotindex = fileName.lastIndexOf(".")-->Line_6 $$ int dotindex = fileName.lastIndexOf(".")[ CD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_6 $$ int dotindex = fileName.lastIndexOf(".")[ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_7 $$ dotindex = dotindex < 0 ? 0 : dotindex[ CD ]
Line_6 $$ int dotindex = fileName.lastIndexOf(".")-->Line_7 $$ dotindex = dotindex < 0 ? 0 : dotindex[ FD ]
Line_7 $$ dotindex = dotindex < 0 ? 0 : dotindex-->Line_7 $$ dotindex = dotindex < 0 ? 0 : dotindex[ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_8 $$ String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + "w"[ CD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_8 $$ String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + "w"[ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_9 $$ System.out.println("i: " + " world filename " + tmp)[ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_10 $$ File worldFile = new File(tmp)[ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_11 $$ if (worldFile.exists()) [ CD ]
Line_10 $$ File worldFile = new File(tmp)-->Line_11 $$ if (worldFile.exists()) [ FD ]
Line_11 $$ if (worldFile.exists()) -->Line_11 $$ if (worldFile.exists()) [ CD ]
Line_10 $$ File worldFile = new File(tmp)-->Line_11 $$ if (worldFile.exists()) [ FD ]
Line_11 $$ if (worldFile.exists()) -->Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))[ CD ]
Line_11 $$ if (worldFile.exists()) -->Line_13 $$ if (staticDebugOn)[ CD ]
Line_13 $$ if (staticDebugOn)-->Line_13 $$ debug("b4nextline: ")[ CD ]
Line_11 $$ if (worldFile.exists()) -->Line_14 $$ line = worldFileReader.readLine()[ CD ]
Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))-->Line_14 $$ line = worldFileReader.readLine()[ FD ]
Line_11 $$ if (worldFile.exists()) -->Line_15 $$ if (staticDebugOn)[ CD ]
Line_15 $$ if (staticDebugOn)-->Line_15 $$ debug("line: " + line)[ CD ]
Line_11 $$ if (worldFile.exists()) -->Line_16 $$ if (line != null) [ CD ]
Line_16 $$ if (line != null) -->Line_17 $$ line = worldFileReader.readLine()[ CD ]
Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))-->Line_17 $$ line = worldFileReader.readLine()[ FD ]
Line_16 $$ if (line != null) -->Line_18 $$ if (staticDebugOn)[ CD ]
Line_18 $$ if (staticDebugOn)-->Line_18 $$ debug("line: " + line)[ CD ]
Line_16 $$ if (line != null) -->Line_20 $$ objects[i].setLon(Double.valueOf(tokenizer.nextToken()).doubleValue())[ CD ]
Line_16 $$ if (line != null) -->Line_21 $$ line = worldFileReader.readLine()[ CD ]
Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))-->Line_21 $$ line = worldFileReader.readLine()[ FD ]
Line_16 $$ if (line != null) -->Line_22 $$ if (staticDebugOn)[ CD ]
Line_22 $$ if (staticDebugOn)-->Line_22 $$ debug("line: " + line)[ CD ]
Line_16 $$ if (line != null) -->Line_24 $$ objects[i].setLat(Double.valueOf(tokenizer.nextToken()).doubleValue())[ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_27 $$ File file = new File(objects[i].getPath())[ CD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_28 $$ if (file.exists()) [ CD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_28 $$ if (file.exists()) [ FD ]
Line_28 $$ if (file.exists()) -->Line_28 $$ if (file.exists()) [ CD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_28 $$ if (file.exists()) [ FD ]
Line_28 $$ if (file.exists()) -->Line_29 $$ System.out.println("object src file found ")[ CD ]
Line_28 $$ if (file.exists()) -->Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)[ CD ]
Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)-->Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)[ CD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)[ FD ]
Line_28 $$ if (file.exists()) -->Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex[ CD ]
Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)-->Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex[ FD ]
Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex[ FD ]
Line_28 $$ if (file.exists()) -->Line_32 $$ if (slashindex == 0) [ CD ]
Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)-->Line_32 $$ if (slashindex == 0) [ FD ]
Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_32 $$ if (slashindex == 0) [ FD ]
Line_32 $$ if (slashindex == 0) -->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ CD ]
Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)-->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ FD ]
Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ FD ]
Line_33 $$ slashindex = fileName.lastIndexOf("/")-->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ FD ]
Line_33 $$ slashindex = fileName.lastIndexOf("/")-->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ CD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ FD ]
Line_32 $$ if (slashindex == 0) -->Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex[ CD ]
Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)-->Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex[ FD ]
Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex[ FD ]
Line_33 $$ slashindex = fileName.lastIndexOf("/")-->Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex[ FD ]
Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex[ FD ]
Line_28 $$ if (file.exists()) -->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ CD ]
Line_8 $$ String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + "w"-->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ FD ]
Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())-->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ FD ]
Line_28 $$ if (file.exists()) -->Line_37 $$ System.out.println("filename " + destinationDirectory + XPlat.fileSep + tmp)[ CD ]
Line_28 $$ if (file.exists()) -->Line_38 $$ objects[i].setPath(tmp)[ CD ]
Line_8 $$ String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + "w"-->Line_38 $$ objects[i].setPath(tmp)[ FD ]
Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())-->Line_38 $$ objects[i].setPath(tmp)[ FD ]
Line_28 $$ if (file.exists()) -->Line_39 $$ file = new File(fileName)[ CD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_39 $$ file = new File(fileName)[ FD ]
Line_39 $$ file = new File(fileName)-->Line_39 $$ file = new File(fileName)[ FD ]
Line_28 $$ if (file.exists()) -->Line_40 $$ if (file.exists()) [ CD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_40 $$ if (file.exists()) [ FD ]
Line_39 $$ file = new File(fileName)-->Line_40 $$ if (file.exists()) [ FD ]
Line_40 $$ if (file.exists()) -->Line_40 $$ if (file.exists()) [ CD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_40 $$ if (file.exists()) [ FD ]
Line_39 $$ file = new File(fileName)-->Line_40 $$ if (file.exists()) [ FD ]
Line_40 $$ if (file.exists()) -->Line_41 $$ DataInputStream dataIn = new DataInputStream(new BufferedInputStream(new FileInputStream(fileName)))[ CD ]
Line_40 $$ if (file.exists()) -->Line_42 $$ DataOutputStream dataOut = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationDirectory + XPlat.fileSep + tmp)))[ CD ]
Line_40 $$ if (file.exists()) -->Line_43 $$ System.out.println("copying to " + destinationDirectory + XPlat.fileSep + tmp)[ CD ]
Line_40 $$ if (file.exists()) -->Line_44 $$ for (; ; ) [ CD ]
Line_40 $$ if (file.exists()) -->Line_40 $$ if (file.exists()) [ CD ]
Line_42 $$ DataOutputStream dataOut = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationDirectory + XPlat.fileSep + tmp)))-->Line_46 $$ dataOut.writeShort(dataIn.readShort())[ FD ]
Line_41 $$ DataInputStream dataIn = new DataInputStream(new BufferedInputStream(new FileInputStream(fileName)))-->Line_46 $$ dataOut.writeShort(dataIn.readShort())[ FD ]
Line_40 $$ if (file.exists()) -->Line_53 $$ dataOut.close()[ CD ]
Line_42 $$ DataOutputStream dataOut = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationDirectory + XPlat.fileSep + tmp)))-->Line_53 $$ dataOut.close()[ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < objects.length; i++) -->Line_4 $$ for (int i = 0; i < objects.length; i++) [ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_6 $$ int dotindex = fileName.lastIndexOf(".")[ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_8 $$ String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + "w"[ FD ]
Line_10 $$ File worldFile = new File(tmp)-->Line_11 $$ if (worldFile.exists()) [ FD ]
Line_10 $$ File worldFile = new File(tmp)-->Line_11 $$ if (worldFile.exists()) [ FD ]
Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))-->Line_14 $$ line = worldFileReader.readLine()[ FD ]
Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))-->Line_17 $$ line = worldFileReader.readLine()[ FD ]
Line_12 $$ BufferedReader worldFileReader = new BufferedReader(new InputStreamReader(new FileInputStream(worldFile)))-->Line_21 $$ line = worldFileReader.readLine()[ FD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_28 $$ if (file.exists()) [ FD ]
Line_39 $$ file = new File(fileName)-->Line_28 $$ if (file.exists()) [ FD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_28 $$ if (file.exists()) [ FD ]
Line_39 $$ file = new File(fileName)-->Line_28 $$ if (file.exists()) [ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)[ FD ]
Line_30 $$ int slashindex = fileName.lastIndexOf(java.io.File.separator)-->Line_32 $$ if (slashindex == 0) [ FD ]
Line_31 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_32 $$ if (slashindex == 0) [ FD ]
Line_33 $$ slashindex = fileName.lastIndexOf("/")-->Line_32 $$ if (slashindex == 0) [ FD ]
Line_34 $$ slashindex = slashindex < 0 ? 0 : slashindex-->Line_32 $$ if (slashindex == 0) [ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_33 $$ slashindex = fileName.lastIndexOf("/")[ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ FD ]
Line_5 $$ String fileName = objects[i].getPath()-->Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())[ FD ]
Line_8 $$ String tmp = dotindex < 1 ? fileName : fileName.substring(0, dotindex + 3) + "w"-->Line_38 $$ objects[i].setPath(tmp)[ FD ]
Line_36 $$ tmp = slashindex < 1 ? fileName : fileName.substring(slashindex + 1, fileName.length())-->Line_38 $$ objects[i].setPath(tmp)[ FD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_40 $$ if (file.exists()) [ FD ]
Line_39 $$ file = new File(fileName)-->Line_40 $$ if (file.exists()) [ FD ]
Line_27 $$ File file = new File(objects[i].getPath())-->Line_40 $$ if (file.exists()) [ FD ]
Line_39 $$ file = new File(fileName)-->Line_40 $$ if (file.exists()) [ FD ]
Line_42 $$ DataOutputStream dataOut = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(destinationDirectory + XPlat.fileSep + tmp)))-->Line_53 $$ dataOut.close()[ FD ]
