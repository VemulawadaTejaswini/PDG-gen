Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void _getPlotTypes() [ CD ]
Line_2 $$ public void _getPlotTypes() -->Line_3 $$ boolean gotPlots = false[ CD ]
Line_2 $$ public void _getPlotTypes() -->Line_4 $$ while (!gotPlots) [ CD ]
Line_2 $$ public void _getPlotTypes() -->Line_2 $$ public void _getPlotTypes() [ CD ]
Line_4 $$ while (!gotPlots) -->Line_4 $$ while (!gotPlots) [ CD ]
Line_3 $$ boolean gotPlots = false-->Line_4 $$ while (!gotPlots) [ FD ]
Line_9 $$ URL dataurl = new URL(getDocumentBase(), plotTypeFile)-->Line_10 $$ BufferedReader readme = new BufferedReader(new InputStreamReader(new GZIPInputStream(dataurl.openStream())))[ FD ]
Line_11 $$ while (true) -->Line_12 $$ String S = readme.readLine()[ CD ]
Line_12 $$ String S = readme.readLine()-->Line_12 $$ String S = readme.readLine()[ CD ]
Line_10 $$ BufferedReader readme = new BufferedReader(new InputStreamReader(new GZIPInputStream(dataurl.openStream())))-->Line_12 $$ String S = readme.readLine()[ FD ]
Line_11 $$ while (true) -->Line_13 $$ if (S == null)[ CD ]
Line_12 $$ String S = readme.readLine()-->Line_13 $$ if (S == null)[ FD ]
Line_11 $$ while (true) -->Line_14 $$ StringTokenizer st = new StringTokenizer(S)[ CD ]
Line_11 $$ while (true) -->Line_15 $$ _myPlotTypes[0].addElement(st.nextToken())[ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_15 $$ _myPlotTypes[0].addElement(st.nextToken())[ FD ]
Line_11 $$ while (true) -->Line_16 $$ if (st.hasMoreTokens()) [ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_16 $$ if (st.hasMoreTokens()) [ FD ]
Line_16 $$ if (st.hasMoreTokens()) -->Line_16 $$ if (st.hasMoreTokens()) [ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_16 $$ if (st.hasMoreTokens()) [ FD ]
Line_16 $$ if (st.hasMoreTokens()) -->Line_17 $$ _myPlotTypes[1].addElement(st.nextToken())[ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_17 $$ _myPlotTypes[1].addElement(st.nextToken())[ FD ]
Line_16 $$ if (st.hasMoreTokens()) -->Line_19 $$ _myPlotTypes[1].addElement((String) _myPlotTypes[0].lastElement())[ CD ]
Line_22 $$ gotPlots = true-->Line_22 $$ gotPlots = true[ FD ]
Line_3 $$ boolean gotPlots = false-->Line_22 $$ gotPlots = true[ FD ]
Line_22 $$ gotPlots = true-->Line_26 $$ gotPlots = false[ FD ]
Line_26 $$ gotPlots = false-->Line_26 $$ gotPlots = false[ FD ]
Line_3 $$ boolean gotPlots = false-->Line_26 $$ gotPlots = false[ FD ]
Line_22 $$ gotPlots = true-->Line_4 $$ while (!gotPlots) [ FD ]
Line_26 $$ gotPlots = false-->Line_4 $$ while (!gotPlots) [ FD ]
Line_9 $$ URL dataurl = new URL(getDocumentBase(), plotTypeFile)-->Line_10 $$ BufferedReader readme = new BufferedReader(new InputStreamReader(new GZIPInputStream(dataurl.openStream())))[ FD ]
Line_12 $$ String S = readme.readLine()-->Line_13 $$ if (S == null)[ FD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_15 $$ _myPlotTypes[0].addElement(st.nextToken())[ FD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_16 $$ if (st.hasMoreTokens()) [ FD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_16 $$ if (st.hasMoreTokens()) [ FD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(S)-->Line_17 $$ _myPlotTypes[1].addElement(st.nextToken())[ FD ]
