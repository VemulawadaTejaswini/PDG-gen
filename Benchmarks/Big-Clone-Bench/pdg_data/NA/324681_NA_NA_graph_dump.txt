Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean import_status(String filename) [ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_3 $$ int pieceId[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_4 $$ int i, j, col, row[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_5 $$ int rotation[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_6 $$ int number[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_7 $$ boolean byurl = false[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_8 $$ e2piece temppiece[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_9 $$ String lineread[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_10 $$ StringTokenizer tok[ CD ]
Line_2 $$ public boolean import_status(String filename) -->Line_11 $$ BufferedReader entree[ CD ]
Line_7 $$ boolean byurl = false-->Line_13 $$ if (byurl == true) [ FD ]
Line_13 $$ if (byurl == true) -->Line_14 $$ URL url = new URL(baseURL, filename)[ CD ]
Line_13 $$ if (byurl == true) -->Line_15 $$ InputStream in = url.openStream()[ CD ]
Line_15 $$ InputStream in = url.openStream()-->Line_15 $$ InputStream in = url.openStream()[ CD ]
Line_14 $$ URL url = new URL(baseURL, filename)-->Line_15 $$ InputStream in = url.openStream()[ FD ]
Line_13 $$ if (byurl == true) -->Line_16 $$ entree = new BufferedReader(new InputStreamReader(in))[ CD ]
Line_11 $$ BufferedReader entree-->Line_16 $$ entree = new BufferedReader(new InputStreamReader(in))[ FD ]
Line_16 $$ entree = new BufferedReader(new InputStreamReader(in))-->Line_16 $$ entree = new BufferedReader(new InputStreamReader(in))[ FD ]
Line_13 $$ if (byurl == true) -->Line_18 $$ entree = new BufferedReader(new FileReader(filename))[ CD ]
Line_11 $$ BufferedReader entree-->Line_18 $$ entree = new BufferedReader(new FileReader(filename))[ FD ]
Line_16 $$ entree = new BufferedReader(new InputStreamReader(in))-->Line_18 $$ entree = new BufferedReader(new FileReader(filename))[ FD ]
Line_18 $$ entree = new BufferedReader(new FileReader(filename))-->Line_18 $$ entree = new BufferedReader(new FileReader(filename))[ FD ]
Line_3 $$ int pieceId-->Line_20 $$ pieceId = 0[ FD ]
Line_20 $$ pieceId = 0-->Line_20 $$ pieceId = 0[ FD ]
Line_4 $$ int i, j, col, row-->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ CD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_4 $$ int i, j, col, row-->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ CD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_4 $$ int i, j, col, row-->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ CD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ CD ]
Line_4 $$ int i, j, col, row-->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ CD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_4 $$ int i, j, col, row-->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ CD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_4 $$ int i, j, col, row-->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_23 $$ unplace_piece_at(i, j)[ CD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_23 $$ unplace_piece_at(i, j)[ FD ]
Line_4 $$ int i, j, col, row-->Line_23 $$ unplace_piece_at(i, j)[ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_23 $$ unplace_piece_at(i, j)[ FD ]
Line_4 $$ int i, j, col, row-->Line_23 $$ unplace_piece_at(i, j)[ FD ]
Line_26 $$ while (true) -->Line_27 $$ lineread = entree.readLine()[ CD ]
Line_27 $$ lineread = entree.readLine()-->Line_27 $$ lineread = entree.readLine()[ FD ]
Line_9 $$ String lineread-->Line_27 $$ lineread = entree.readLine()[ FD ]
Line_27 $$ lineread = entree.readLine()-->Line_27 $$ lineread = entree.readLine()[ CD ]
Line_11 $$ BufferedReader entree-->Line_27 $$ lineread = entree.readLine()[ FD ]
Line_16 $$ entree = new BufferedReader(new InputStreamReader(in))-->Line_27 $$ lineread = entree.readLine()[ FD ]
Line_18 $$ entree = new BufferedReader(new FileReader(filename))-->Line_27 $$ lineread = entree.readLine()[ FD ]
Line_26 $$ while (true) -->Line_28 $$ if (lineread == null) [ CD ]
Line_27 $$ lineread = entree.readLine()-->Line_28 $$ if (lineread == null) [ FD ]
Line_9 $$ String lineread-->Line_28 $$ if (lineread == null) [ FD ]
Line_26 $$ while (true) -->Line_31 $$ tok = new StringTokenizer(lineread, " ")[ CD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_31 $$ tok = new StringTokenizer(lineread, " ")[ FD ]
Line_10 $$ StringTokenizer tok-->Line_31 $$ tok = new StringTokenizer(lineread, " ")[ FD ]
Line_26 $$ while (true) -->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ CD ]
Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ FD ]
Line_3 $$ int pieceId-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ FD ]
Line_20 $$ pieceId = 0-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ FD ]
Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ CD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ FD ]
Line_10 $$ StringTokenizer tok-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ FD ]
Line_26 $$ while (true) -->Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1[ CD ]
Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1-->Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_4 $$ int i, j, col, row-->Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_10 $$ StringTokenizer tok-->Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_26 $$ while (true) -->Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1[ CD ]
Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1-->Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_4 $$ int i, j, col, row-->Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_10 $$ StringTokenizer tok-->Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_26 $$ while (true) -->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ CD ]
Line_35 $$ rotation = Integer.parseInt(tok.nextToken())-->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ FD ]
Line_5 $$ int rotation-->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ FD ]
Line_35 $$ rotation = Integer.parseInt(tok.nextToken())-->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ CD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ FD ]
Line_10 $$ StringTokenizer tok-->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ FD ]
Line_26 $$ while (true) -->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ CD ]
Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_3 $$ int pieceId-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_20 $$ pieceId = 0-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_4 $$ int i, j, col, row-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_4 $$ int i, j, col, row-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_26 $$ while (true) -->Line_37 $$ temppiece = board.get_piece_at(col, row)[ CD ]
Line_37 $$ temppiece = board.get_piece_at(col, row)-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_8 $$ e2piece temppiece-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_37 $$ temppiece = board.get_piece_at(col, row)-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ CD ]
Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_4 $$ int i, j, col, row-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_4 $$ int i, j, col, row-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_26 $$ while (true) -->Line_38 $$ temppiece.reset_rotation()[ CD ]
Line_37 $$ temppiece = board.get_piece_at(col, row)-->Line_38 $$ temppiece.reset_rotation()[ FD ]
Line_8 $$ e2piece temppiece-->Line_38 $$ temppiece.reset_rotation()[ FD ]
Line_26 $$ while (true) -->Line_39 $$ temppiece.rotate(rotation)[ CD ]
Line_37 $$ temppiece = board.get_piece_at(col, row)-->Line_39 $$ temppiece.rotate(rotation)[ FD ]
Line_8 $$ e2piece temppiece-->Line_39 $$ temppiece.rotate(rotation)[ FD ]
Line_35 $$ rotation = Integer.parseInt(tok.nextToken())-->Line_39 $$ temppiece.rotate(rotation)[ FD ]
Line_5 $$ int rotation-->Line_39 $$ temppiece.rotate(rotation)[ FD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_21 $$ for (i = 0; i < board.colnb; i++) -->Line_21 $$ for (i = 0; i < board.colnb; i++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_22 $$ for (j = 0; j < board.rownb; j++) [ FD ]
Line_22 $$ for (j = 0; j < board.rownb; j++) -->Line_23 $$ unplace_piece_at(i, j)[ FD ]
Line_27 $$ lineread = entree.readLine()-->Line_28 $$ if (lineread == null) [ FD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())[ FD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1[ FD ]
Line_31 $$ tok = new StringTokenizer(lineread, " ")-->Line_35 $$ rotation = Integer.parseInt(tok.nextToken())[ FD ]
Line_32 $$ pieceId = Integer.parseInt(tok.nextToken())-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1-->Line_36 $$ place_piece_at(pieceId, col, row, 0)[ FD ]
Line_33 $$ col = Integer.parseInt(tok.nextToken()) - 1-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_34 $$ row = Integer.parseInt(tok.nextToken()) - 1-->Line_37 $$ temppiece = board.get_piece_at(col, row)[ FD ]
Line_37 $$ temppiece = board.get_piece_at(col, row)-->Line_38 $$ temppiece.reset_rotation()[ FD ]
Line_37 $$ temppiece = board.get_piece_at(col, row)-->Line_39 $$ temppiece.rotate(rotation)[ FD ]
Line_35 $$ rotation = Integer.parseInt(tok.nextToken())-->Line_39 $$ temppiece.rotate(rotation)[ FD ]
