Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyTo(File folder) [ CD ]
Line_2 $$ public void copyTo(File folder) -->Line_3 $$ if (!isNewFile()) [ CD ]
Line_3 $$ if (!isNewFile()) -->Line_3 $$ if (!isNewFile()) [ CD ]
Line_3 $$ if (!isNewFile()) -->Line_3 $$ if (!isNewFile()) [ CD ]
Line_3 $$ if (!isNewFile()) -->Line_4 $$ return[ CD ]
Line_2 $$ public void copyTo(File folder) -->Line_6 $$ if (!folder.exists()) [ CD ]
Line_6 $$ if (!folder.exists()) -->Line_6 $$ if (!folder.exists()) [ CD ]
Line_6 $$ if (!folder.exists()) -->Line_6 $$ if (!folder.exists()) [ CD ]
Line_2 $$ public void copyTo(File folder) -->Line_6 $$ if (!folder.exists()) [ FD ]
Line_6 $$ if (!folder.exists()) -->Line_7 $$ folder.mkdir()[ CD ]
Line_2 $$ public void copyTo(File folder) -->Line_7 $$ folder.mkdir()[ FD ]
Line_2 $$ public void copyTo(File folder) -->Line_9 $$ File dest = new File(folder, name)[ CD ]
Line_17 $$ while ((readLength = in.read(readBuf)) != -1) -->Line_17 $$ while ((readLength = in.read(readBuf)) != -1) [ FD ]
Line_14 $$ int readLength-->Line_17 $$ while ((readLength = in.read(readBuf)) != -1) [ FD ]
Line_17 $$ while ((readLength = in.read(readBuf)) != -1) -->Line_17 $$ while ((readLength = in.read(readBuf)) != -1) [ CD ]
Line_11 $$ FileInputStream in = new FileInputStream(currentPath)-->Line_17 $$ while ((readLength = in.read(readBuf)) != -1) [ FD ]
Line_13 $$ byte[] readBuf = new byte[1024 * 512]-->Line_17 $$ while ((readLength = in.read(readBuf)) != -1) [ FD ]
Line_17 $$ while ((readLength = in.read(readBuf)) != -1) -->Line_18 $$ out.write(readBuf, 0, readLength)[ CD ]
Line_12 $$ FileOutputStream out = new FileOutputStream(dest)-->Line_18 $$ out.write(readBuf, 0, readLength)[ FD ]
Line_13 $$ byte[] readBuf = new byte[1024 * 512]-->Line_18 $$ out.write(readBuf, 0, readLength)[ FD ]
Line_17 $$ while ((readLength = in.read(readBuf)) != -1) -->Line_18 $$ out.write(readBuf, 0, readLength)[ FD ]
Line_14 $$ int readLength-->Line_18 $$ out.write(readBuf, 0, readLength)[ FD ]
Line_11 $$ FileInputStream in = new FileInputStream(currentPath)-->Line_20 $$ in.close()[ FD ]
Line_12 $$ FileOutputStream out = new FileOutputStream(dest)-->Line_21 $$ out.close()[ FD ]
Line_22 $$ if (canceled) -->Line_23 $$ dest.delete()[ CD ]
Line_9 $$ File dest = new File(folder, name)-->Line_23 $$ dest.delete()[ FD ]
Line_17 $$ while ((readLength = in.read(readBuf)) != -1) -->Line_18 $$ out.write(readBuf, 0, readLength)[ FD ]
