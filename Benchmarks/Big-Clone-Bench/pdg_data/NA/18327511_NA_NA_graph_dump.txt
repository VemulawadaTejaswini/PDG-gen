Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ DefaultHttpClient httpclient = new DefaultHttpClient()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ httpclient.getCredentialsProvider().setCredentials(new AuthScope("localhost", 80), new UsernamePasswordCredentials("username", "password"))[ CD ]
Line_3 $$ DefaultHttpClient httpclient = new DefaultHttpClient()-->Line_4 $$ httpclient.getCredentialsProvider().setCredentials(new AuthScope("localhost", 80), new UsernamePasswordCredentials("username", "password"))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ BasicHttpContext localcontext = new BasicHttpContext()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ DigestScheme digestAuth = new DigestScheme()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ digestAuth.overrideParamter("realm", "some realm")[ CD ]
Line_6 $$ DigestScheme digestAuth = new DigestScheme()-->Line_7 $$ digestAuth.overrideParamter("realm", "some realm")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ digestAuth.overrideParamter("nonce", "whatever")[ CD ]
Line_6 $$ DigestScheme digestAuth = new DigestScheme()-->Line_8 $$ digestAuth.overrideParamter("nonce", "whatever")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ localcontext.setAttribute("preemptive-auth", digestAuth)[ CD ]
Line_5 $$ BasicHttpContext localcontext = new BasicHttpContext()-->Line_9 $$ localcontext.setAttribute("preemptive-auth", digestAuth)[ FD ]
Line_6 $$ DigestScheme digestAuth = new DigestScheme()-->Line_9 $$ localcontext.setAttribute("preemptive-auth", digestAuth)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ httpclient.addRequestInterceptor(new PreemptiveAuth(), 0)[ CD ]
Line_3 $$ DefaultHttpClient httpclient = new DefaultHttpClient()-->Line_10 $$ httpclient.addRequestInterceptor(new PreemptiveAuth(), 0)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ httpclient.addResponseInterceptor(new PersistentDigest())[ CD ]
Line_3 $$ DefaultHttpClient httpclient = new DefaultHttpClient()-->Line_11 $$ httpclient.addResponseInterceptor(new PersistentDigest())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ HttpHost targetHost = new HttpHost("localhost", 80, "http")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ HttpGet httpget = new HttpGet("/")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ System.out.println("executing request: " + httpget.getRequestLine())[ CD ]
Line_13 $$ HttpGet httpget = new HttpGet("/")-->Line_14 $$ System.out.println("executing request: " + httpget.getRequestLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ System.out.println("to target: " + targetHost)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)[ CD ]
Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)-->Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)[ CD ]
Line_3 $$ DefaultHttpClient httpclient = new DefaultHttpClient()-->Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)[ FD ]
Line_12 $$ HttpHost targetHost = new HttpHost("localhost", 80, "http")-->Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)[ FD ]
Line_13 $$ HttpGet httpget = new HttpGet("/")-->Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)[ FD ]
Line_5 $$ BasicHttpContext localcontext = new BasicHttpContext()-->Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)[ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_18 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_18 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)-->Line_18 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_19 $$ System.out.println("----------------------------------------")[ CD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_20 $$ System.out.println(response.getStatusLine())[ CD ]
Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)-->Line_20 $$ System.out.println(response.getStatusLine())[ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_21 $$ if (entity != null) [ CD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_21 $$ if (entity != null) [ FD ]
Line_21 $$ if (entity != null) -->Line_22 $$ System.out.println("Response content length: " + entity.getContentLength())[ CD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_22 $$ System.out.println("Response content length: " + entity.getContentLength())[ FD ]
Line_21 $$ if (entity != null) -->Line_23 $$ entity.consumeContent()[ CD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_23 $$ entity.consumeContent()[ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_16 $$ for (int i = 0; i < 3; i++) -->Line_16 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)-->Line_18 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_17 $$ HttpResponse response = httpclient.execute(targetHost, httpget, localcontext)-->Line_20 $$ System.out.println(response.getStatusLine())[ FD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_21 $$ if (entity != null) [ FD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_22 $$ System.out.println("Response content length: " + entity.getContentLength())[ FD ]
Line_18 $$ HttpEntity entity = response.getEntity()-->Line_23 $$ entity.consumeContent()[ FD ]
