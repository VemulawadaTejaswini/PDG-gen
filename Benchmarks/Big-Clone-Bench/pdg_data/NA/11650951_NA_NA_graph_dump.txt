Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException [ CD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_3 $$ Properties bundle = null[ CD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_4 $$ final ClassLoader loader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_4 $$ final ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_4 $$ final ClassLoader loader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_5 $$ final URL url = loader.getResource(propertiesName)[ CD ]
Line_5 $$ final URL url = loader.getResource(propertiesName)-->Line_5 $$ final URL url = loader.getResource(propertiesName)[ CD ]
Line_4 $$ final ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_5 $$ final URL url = loader.getResource(propertiesName)[ FD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_5 $$ final URL url = loader.getResource(propertiesName)[ FD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_6 $$ if (url == null) [ CD ]
Line_5 $$ final URL url = loader.getResource(propertiesName)-->Line_6 $$ if (url == null) [ FD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_9 $$ final InputStream is = url.openStream()[ CD ]
Line_9 $$ final InputStream is = url.openStream()-->Line_9 $$ final InputStream is = url.openStream()[ CD ]
Line_5 $$ final URL url = loader.getResource(propertiesName)-->Line_9 $$ final InputStream is = url.openStream()[ FD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_10 $$ if (is != null) [ CD ]
Line_9 $$ final InputStream is = url.openStream()-->Line_10 $$ if (is != null) [ FD ]
Line_10 $$ if (is != null) -->Line_11 $$ bundle = new Properties()[ CD ]
Line_3 $$ Properties bundle = null-->Line_11 $$ bundle = new Properties()[ FD ]
Line_11 $$ bundle = new Properties()-->Line_11 $$ bundle = new Properties()[ FD ]
Line_10 $$ if (is != null) -->Line_12 $$ bundle.load(is)[ CD ]
Line_3 $$ Properties bundle = null-->Line_12 $$ bundle.load(is)[ FD ]
Line_11 $$ bundle = new Properties()-->Line_12 $$ bundle.load(is)[ FD ]
Line_9 $$ final InputStream is = url.openStream()-->Line_12 $$ bundle.load(is)[ FD ]
Line_2 $$ private Properties loadProperties(final String propertiesName) throws IOException -->Line_16 $$ return bundle[ CD ]
