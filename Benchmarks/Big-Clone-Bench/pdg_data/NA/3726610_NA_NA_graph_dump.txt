Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void processFile(StreamDriver driver, String sourceName) throws Exception [ CD ]
Line_2 $$ private static void processFile(StreamDriver driver, String sourceName) throws Exception -->Line_3 $$ String destName = sourceName + ".xml"[ CD ]
Line_2 $$ private static void processFile(StreamDriver driver, String sourceName) throws Exception -->Line_4 $$ File dest = new File(destName)[ CD ]
Line_2 $$ private static void processFile(StreamDriver driver, String sourceName) throws Exception -->Line_5 $$ if (dest.exists()) [ CD ]
Line_4 $$ File dest = new File(destName)-->Line_5 $$ if (dest.exists()) [ FD ]
Line_5 $$ if (dest.exists()) -->Line_5 $$ if (dest.exists()) [ CD ]
Line_4 $$ File dest = new File(destName)-->Line_5 $$ if (dest.exists()) [ FD ]
Line_2 $$ private static void processFile(StreamDriver driver, String sourceName) throws Exception -->Line_8 $$ FileChannel sourceChannel = new FileInputStream(sourceName).getChannel()[ CD ]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(sourceName).getChannel()-->Line_8 $$ FileChannel sourceChannel = new FileInputStream(sourceName).getChannel()[ CD ]
Line_10 $$ MappedByteBuffer sourceByteBuffer = sourceChannel.map(FileChannel.MapMode.READ_ONLY, 0, sourceChannel.size())-->Line_10 $$ MappedByteBuffer sourceByteBuffer = sourceChannel.map(FileChannel.MapMode.READ_ONLY, 0, sourceChannel.size())[ CD ]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(sourceName).getChannel()-->Line_10 $$ MappedByteBuffer sourceByteBuffer = sourceChannel.map(FileChannel.MapMode.READ_ONLY, 0, sourceChannel.size())[ FD ]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(sourceName).getChannel()-->Line_10 $$ MappedByteBuffer sourceByteBuffer = sourceChannel.map(FileChannel.MapMode.READ_ONLY, 0, sourceChannel.size())[ FD ]
Line_11 $$ CharsetDecoder decoder = Charset.forName("ISO-8859-15").newDecoder()-->Line_11 $$ CharsetDecoder decoder = Charset.forName("ISO-8859-15").newDecoder()[ CD ]
Line_12 $$ CharBuffer sourceBuffer = decoder.decode(sourceByteBuffer)-->Line_12 $$ CharBuffer sourceBuffer = decoder.decode(sourceByteBuffer)[ CD ]
Line_11 $$ CharsetDecoder decoder = Charset.forName("ISO-8859-15").newDecoder()-->Line_12 $$ CharBuffer sourceBuffer = decoder.decode(sourceByteBuffer)[ FD ]
Line_10 $$ MappedByteBuffer sourceByteBuffer = sourceChannel.map(FileChannel.MapMode.READ_ONLY, 0, sourceChannel.size())-->Line_12 $$ CharBuffer sourceBuffer = decoder.decode(sourceByteBuffer)[ FD ]
Line_2 $$ private static void processFile(StreamDriver driver, String sourceName) throws Exception -->Line_13 $$ driver.generateXmlDocument(sourceBuffer, new FileOutputStream(dest))[ FD ]
Line_12 $$ CharBuffer sourceBuffer = decoder.decode(sourceByteBuffer)-->Line_13 $$ driver.generateXmlDocument(sourceBuffer, new FileOutputStream(dest))[ FD ]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(sourceName).getChannel()-->Line_15 $$ sourceChannel.close()[ FD ]
