Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void onMessage(Message message) [ CD ]
Line_4 $$ ExchangeImpl ex = new ExchangeImpl()-->Line_5 $$ ex.setInMessage(message)[ FD ]
Line_2 $$ public void onMessage(Message message) -->Line_5 $$ ex.setInMessage(message)[ FD ]
Line_6 $$ Conduit backChannel = message.getDestination().getBackChannel(message, null, null)-->Line_6 $$ Conduit backChannel = message.getDestination().getBackChannel(message, null, null)[ CD ]
Line_2 $$ public void onMessage(Message message) -->Line_6 $$ Conduit backChannel = message.getDestination().getBackChannel(message, null, null)[ FD ]
Line_2 $$ public void onMessage(Message message) -->Line_6 $$ Conduit backChannel = message.getDestination().getBackChannel(message, null, null)[ FD ]
Line_7 $$ MessageImpl res = new MessageImpl()-->Line_8 $$ res.put(Message.CONTENT_TYPE, "text/html")[ FD ]
Line_6 $$ Conduit backChannel = message.getDestination().getBackChannel(message, null, null)-->Line_9 $$ backChannel.prepare(res)[ FD ]
Line_7 $$ MessageImpl res = new MessageImpl()-->Line_9 $$ backChannel.prepare(res)[ FD ]
Line_10 $$ OutputStream out = res.getContent(OutputStream.class)-->Line_10 $$ OutputStream out = res.getContent(OutputStream.class)[ CD ]
Line_7 $$ MessageImpl res = new MessageImpl()-->Line_10 $$ OutputStream out = res.getContent(OutputStream.class)[ FD ]
Line_11 $$ FileInputStream is = new FileInputStream("test.html")-->Line_12 $$ IOUtils.copy(is, out, 2048)[ FD ]
Line_10 $$ OutputStream out = res.getContent(OutputStream.class)-->Line_12 $$ IOUtils.copy(is, out, 2048)[ FD ]
Line_10 $$ OutputStream out = res.getContent(OutputStream.class)-->Line_13 $$ out.flush()[ FD ]
Line_10 $$ OutputStream out = res.getContent(OutputStream.class)-->Line_14 $$ out.close()[ FD ]
Line_11 $$ FileInputStream is = new FileInputStream("test.html")-->Line_15 $$ is.close()[ FD ]
Line_6 $$ Conduit backChannel = message.getDestination().getBackChannel(message, null, null)-->Line_16 $$ backChannel.close(res)[ FD ]
Line_7 $$ MessageImpl res = new MessageImpl()-->Line_16 $$ backChannel.close(res)[ FD ]
