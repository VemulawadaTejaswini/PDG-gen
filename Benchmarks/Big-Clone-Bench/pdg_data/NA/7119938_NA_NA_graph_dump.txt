Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException [ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_3 $$ File fullDir = new File(REMOTE_BASE_DIR.getCanonicalPath())[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException [ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ CD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ CD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ fullDir = new File(fullDir, file.get(i))[ CD ]
Line_4 $$ fullDir = new File(fullDir, file.get(i))-->Line_4 $$ fullDir = new File(fullDir, file.get(i))[ FD ]
Line_3 $$ File fullDir = new File(REMOTE_BASE_DIR.getCanonicalPath())-->Line_4 $$ fullDir = new File(fullDir, file.get(i))[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_4 $$ fullDir = new File(fullDir, file.get(i))[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ fullDir = new File(fullDir, file.get(i))[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_5 $$ fullDir.mkdirs()[ CD ]
Line_4 $$ fullDir = new File(fullDir, file.get(i))-->Line_5 $$ fullDir.mkdirs()[ FD ]
Line_3 $$ File fullDir = new File(REMOTE_BASE_DIR.getCanonicalPath())-->Line_5 $$ fullDir.mkdirs()[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_6 $$ File outputFile = new File(fullDir, file.get(file.size() - 1))[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_6 $$ File outputFile = new File(fullDir, file.get(file.size() - 1))[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_6 $$ File outputFile = new File(fullDir, file.get(file.size() - 1))[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_7 $$ FileOutputStream outStream = new FileOutputStream(outputFile)[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException [ CD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ CD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ CD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ CD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ outStream.write(byteIn)[ CD ]
Line_7 $$ FileOutputStream outStream = new FileOutputStream(outputFile)-->Line_8 $$ outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ outStream.write(byteIn)[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_9 $$ fileInput.close()[ CD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_9 $$ fileInput.close()[ FD ]
Line_2 $$ public void putFile(CompoundName file, FileInputStream fileInput) throws IOException -->Line_10 $$ outStream.close()[ CD ]
Line_7 $$ FileOutputStream outStream = new FileOutputStream(outputFile)-->Line_10 $$ outStream.close()[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))[ FD ]
Line_4 $$ for (int i = 0; i < file.size() - 1; i++) fullDir = new File(fullDir, file.get(i))-->Line_4 $$ fullDir = new File(fullDir, file.get(i))[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ outStream.write(byteIn)[ FD ]
Line_8 $$ for (int byteIn = fileInput.read(); byteIn != -1; byteIn = fileInput.read()) outStream.write(byteIn)-->Line_8 $$ outStream.write(byteIn)[ FD ]
