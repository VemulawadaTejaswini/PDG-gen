Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void createBackup() [ CD ]
Line_2 $$ public static void createBackup() -->Line_3 $$ String workspacePath = Workspace.INSTANCE.getWorkspace()[ CD ]
Line_3 $$ String workspacePath = Workspace.INSTANCE.getWorkspace()-->Line_3 $$ String workspacePath = Workspace.INSTANCE.getWorkspace()[ CD ]
Line_2 $$ public static void createBackup() -->Line_4 $$ if (workspacePath.length() == 0)[ CD ]
Line_3 $$ String workspacePath = Workspace.INSTANCE.getWorkspace()-->Line_4 $$ if (workspacePath.length() == 0)[ FD ]
Line_4 $$ if (workspacePath.length() == 0)-->Line_4 $$ return[ CD ]
Line_2 $$ public static void createBackup() -->Line_5 $$ workspacePath += "/"[ CD ]
Line_3 $$ String workspacePath = Workspace.INSTANCE.getWorkspace()-->Line_5 $$ workspacePath += "/"[ FD ]
Line_5 $$ workspacePath += "/"-->Line_5 $$ workspacePath += "/"[ FD ]
Line_2 $$ public static void createBackup() -->Line_6 $$ String backupPath = workspacePath + "Backup"[ CD ]
Line_2 $$ public static void createBackup() -->Line_7 $$ File directory = new File(backupPath)[ CD ]
Line_2 $$ public static void createBackup() -->Line_8 $$ if (!directory.exists())[ CD ]
Line_8 $$ if (!directory.exists())-->Line_8 $$ if (!directory.exists())[ CD ]
Line_8 $$ if (!directory.exists())-->Line_8 $$ if (!directory.exists())[ CD ]
Line_7 $$ File directory = new File(backupPath)-->Line_8 $$ if (!directory.exists())[ FD ]
Line_8 $$ if (!directory.exists())-->Line_8 $$ directory.mkdirs()[ CD ]
Line_7 $$ File directory = new File(backupPath)-->Line_8 $$ directory.mkdirs()[ FD ]
Line_2 $$ public static void createBackup() -->Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()[ CD ]
Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()-->Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()[ CD ]
Line_2 $$ public static void createBackup() -->Line_10 $$ dateString = dateString.replace(" ", "_")[ CD ]
Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()-->Line_10 $$ dateString = dateString.replace(" ", "_")[ FD ]
Line_10 $$ dateString = dateString.replace(" ", "_")-->Line_10 $$ dateString = dateString.replace(" ", "_")[ FD ]
Line_10 $$ dateString = dateString.replace(" ", "_")-->Line_10 $$ dateString = dateString.replace(" ", "_")[ CD ]
Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()-->Line_10 $$ dateString = dateString.replace(" ", "_")[ FD ]
Line_10 $$ dateString = dateString.replace(" ", "_")-->Line_10 $$ dateString = dateString.replace(" ", "_")[ FD ]
Line_2 $$ public static void createBackup() -->Line_11 $$ dateString = dateString.replace(":", "")[ CD ]
Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()-->Line_11 $$ dateString = dateString.replace(":", "")[ FD ]
Line_10 $$ dateString = dateString.replace(" ", "_")-->Line_11 $$ dateString = dateString.replace(":", "")[ FD ]
Line_11 $$ dateString = dateString.replace(":", "")-->Line_11 $$ dateString = dateString.replace(":", "")[ FD ]
Line_11 $$ dateString = dateString.replace(":", "")-->Line_11 $$ dateString = dateString.replace(":", "")[ CD ]
Line_9 $$ String dateString = DataUtils.DateAndTimeOfNowAsLocalString()-->Line_11 $$ dateString = dateString.replace(":", "")[ FD ]
Line_10 $$ dateString = dateString.replace(" ", "_")-->Line_11 $$ dateString = dateString.replace(":", "")[ FD ]
Line_11 $$ dateString = dateString.replace(":", "")-->Line_11 $$ dateString = dateString.replace(":", "")[ FD ]
Line_2 $$ public static void createBackup() -->Line_12 $$ backupPath += "/Backup_" + dateString + ".zip"[ CD ]
Line_6 $$ String backupPath = workspacePath + "Backup"-->Line_12 $$ backupPath += "/Backup_" + dateString + ".zip"[ FD ]
Line_12 $$ backupPath += "/Backup_" + dateString + ".zip"-->Line_12 $$ backupPath += "/Backup_" + dateString + ".zip"[ FD ]
Line_2 $$ public static void createBackup() -->Line_13 $$ ArrayList<String> backupedFiles = new ArrayList<String>()[ CD ]
Line_2 $$ public static void createBackup() -->Line_14 $$ backupedFiles.add("Database/Database.properties")[ CD ]
Line_13 $$ ArrayList<String> backupedFiles = new ArrayList<String>()-->Line_14 $$ backupedFiles.add("Database/Database.properties")[ FD ]
Line_2 $$ public static void createBackup() -->Line_15 $$ backupedFiles.add("Database/Database.script")[ CD ]
Line_13 $$ ArrayList<String> backupedFiles = new ArrayList<String>()-->Line_15 $$ backupedFiles.add("Database/Database.script")[ FD ]
Line_2 $$ public static void createBackup() -->Line_16 $$ FileInputStream in[ CD ]
Line_2 $$ public static void createBackup() -->Line_17 $$ byte[] data = new byte[1024][ CD ]
Line_2 $$ public static void createBackup() -->Line_18 $$ int read = 0[ CD ]
Line_20 $$ ZipOutputStream zip = new ZipOutputStream(new FileOutputStream(backupPath))-->Line_21 $$ zip.setMethod(ZipOutputStream.DEFLATED)[ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ CD ]
Line_13 $$ ArrayList<String> backupedFiles = new ArrayList<String>()-->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ CD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ CD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_23 $$ String backupedFile = backupedFiles.get(i)[ CD ]
Line_23 $$ String backupedFile = backupedFiles.get(i)-->Line_23 $$ String backupedFile = backupedFiles.get(i)[ CD ]
Line_13 $$ ArrayList<String> backupedFiles = new ArrayList<String>()-->Line_23 $$ String backupedFile = backupedFiles.get(i)[ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_23 $$ String backupedFile = backupedFiles.get(i)[ FD ]
Line_25 $$ File inFile = new File(workspacePath + backupedFile)-->Line_26 $$ if (inFile.exists()) [ FD ]
Line_26 $$ if (inFile.exists()) -->Line_26 $$ if (inFile.exists()) [ CD ]
Line_25 $$ File inFile = new File(workspacePath + backupedFile)-->Line_26 $$ if (inFile.exists()) [ FD ]
Line_26 $$ if (inFile.exists()) -->Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)[ CD ]
Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)-->Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)[ FD ]
Line_16 $$ FileInputStream in-->Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)[ FD ]
Line_26 $$ if (inFile.exists()) -->Line_28 $$ if (in != null) [ CD ]
Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)-->Line_28 $$ if (in != null) [ FD ]
Line_16 $$ FileInputStream in-->Line_28 $$ if (in != null) [ FD ]
Line_28 $$ if (in != null) -->Line_29 $$ ZipEntry entry = new ZipEntry(backupedFile)[ CD ]
Line_28 $$ if (in != null) -->Line_30 $$ zip.putNextEntry(entry)[ CD ]
Line_20 $$ ZipOutputStream zip = new ZipOutputStream(new FileOutputStream(backupPath))-->Line_30 $$ zip.putNextEntry(entry)[ FD ]
Line_29 $$ ZipEntry entry = new ZipEntry(backupedFile)-->Line_30 $$ zip.putNextEntry(entry)[ FD ]
Line_28 $$ if (in != null) -->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ CD ]
Line_28 $$ if (in != null) -->Line_28 $$ if (in != null) [ CD ]
Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)-->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ FD ]
Line_18 $$ int read = 0-->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ FD ]
Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)-->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ CD ]
Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)-->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ FD ]
Line_16 $$ FileInputStream in-->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ FD ]
Line_17 $$ byte[] data = new byte[1024]-->Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)[ FD ]
Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)-->Line_31 $$ zip.write(data, 0, read)[ CD ]
Line_20 $$ ZipOutputStream zip = new ZipOutputStream(new FileOutputStream(backupPath))-->Line_31 $$ zip.write(data, 0, read)[ FD ]
Line_17 $$ byte[] data = new byte[1024]-->Line_31 $$ zip.write(data, 0, read)[ FD ]
Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)-->Line_31 $$ zip.write(data, 0, read)[ FD ]
Line_18 $$ int read = 0-->Line_31 $$ zip.write(data, 0, read)[ FD ]
Line_28 $$ if (in != null) -->Line_32 $$ zip.closeEntry()[ CD ]
Line_20 $$ ZipOutputStream zip = new ZipOutputStream(new FileOutputStream(backupPath))-->Line_32 $$ zip.closeEntry()[ FD ]
Line_28 $$ if (in != null) -->Line_33 $$ in.close()[ CD ]
Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)-->Line_33 $$ in.close()[ FD ]
Line_16 $$ FileInputStream in-->Line_33 $$ in.close()[ FD ]
Line_20 $$ ZipOutputStream zip = new ZipOutputStream(new FileOutputStream(backupPath))-->Line_40 $$ zip.close()[ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) [ FD ]
Line_22 $$ for (int i = 0; i < backupedFiles.size(); i++) -->Line_23 $$ String backupedFile = backupedFiles.get(i)[ FD ]
Line_25 $$ File inFile = new File(workspacePath + backupedFile)-->Line_26 $$ if (inFile.exists()) [ FD ]
Line_25 $$ File inFile = new File(workspacePath + backupedFile)-->Line_26 $$ if (inFile.exists()) [ FD ]
Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)-->Line_28 $$ if (in != null) [ FD ]
Line_29 $$ ZipEntry entry = new ZipEntry(backupedFile)-->Line_30 $$ zip.putNextEntry(entry)[ FD ]
Line_27 $$ in = new FileInputStream(workspacePath + backupedFile)-->Line_33 $$ in.close()[ FD ]
Line_31 $$ while ((read = in.read(data, 0, 1024)) != -1) zip.write(data, 0, read)-->Line_31 $$ zip.write(data, 0, read)[ FD ]
