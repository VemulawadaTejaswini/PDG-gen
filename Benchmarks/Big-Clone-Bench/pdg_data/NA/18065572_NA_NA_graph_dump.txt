Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String executePost(String urlStr, String content) [ CD ]
Line_2 $$ public static String executePost(String urlStr, String content) -->Line_3 $$ StringBuffer result = new StringBuffer()[ CD ]
Line_6 $$ URL url = new URL(urlStr)-->Line_7 $$ System.out.println("Host: " + url.getHost())[ FD ]
Line_6 $$ URL url = new URL(urlStr)-->Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_10 $$ connection.setDoOutput(true)[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_11 $$ connection.setDoInput(true)[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_12 $$ connection.setRequestProperty("Content-Type", "text/xml; charset=utf-8")[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_13 $$ connection.setRequestProperty("Content-Length", "" + content.length())[ FD ]
Line_2 $$ public static String executePost(String urlStr, String content) -->Line_13 $$ connection.setRequestProperty("Content-Length", "" + content.length())[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_14 $$ connection.setRequestProperty("SOAPAction", "\"http://niki-bt.act.cmis.csiro.org/SMSService/SendText\"")[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_15 $$ connection.setRequestMethod("POST")[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_16 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())[ FD ]
Line_16 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_17 $$ out.print(content)[ FD ]
Line_2 $$ public static String executePost(String urlStr, String content) -->Line_17 $$ out.print(content)[ FD ]
Line_16 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_18 $$ out.flush()[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_19 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_21 $$ while ((inputLine = in.readLine()) != null) -->Line_21 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_20 $$ String inputLine-->Line_21 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_21 $$ while ((inputLine = in.readLine()) != null) -->Line_21 $$ while ((inputLine = in.readLine()) != null) [ CD ]
Line_19 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_21 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_21 $$ while ((inputLine = in.readLine()) != null) -->Line_22 $$ result.append(inputLine)[ CD ]
Line_3 $$ StringBuffer result = new StringBuffer()-->Line_22 $$ result.append(inputLine)[ FD ]
Line_21 $$ while ((inputLine = in.readLine()) != null) -->Line_22 $$ result.append(inputLine)[ FD ]
Line_20 $$ String inputLine-->Line_22 $$ result.append(inputLine)[ FD ]
Line_19 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_24 $$ in.close()[ FD ]
Line_16 $$ PrintWriter out = new PrintWriter(connection.getOutputStream())-->Line_25 $$ out.close()[ FD ]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_26 $$ connection.disconnect()[ FD ]
Line_2 $$ public static String executePost(String urlStr, String content) -->Line_32 $$ String msg = result.toString()[ CD ]
Line_32 $$ String msg = result.toString()-->Line_32 $$ String msg = result.toString()[ CD ]
Line_3 $$ StringBuffer result = new StringBuffer()-->Line_32 $$ String msg = result.toString()[ FD ]
Line_2 $$ public static String executePost(String urlStr, String content) -->Line_33 $$ if (msg != null) [ CD ]
Line_32 $$ String msg = result.toString()-->Line_33 $$ if (msg != null) [ FD ]
Line_33 $$ if (msg != null) -->Line_34 $$ int beginCut = msg.indexOf('>')[ CD ]
Line_34 $$ int beginCut = msg.indexOf('>')-->Line_34 $$ int beginCut = msg.indexOf('>')[ CD ]
Line_32 $$ String msg = result.toString()-->Line_34 $$ int beginCut = msg.indexOf('>')[ FD ]
Line_33 $$ if (msg != null) -->Line_35 $$ int endCut = msg.lastIndexOf('<')[ CD ]
Line_35 $$ int endCut = msg.lastIndexOf('<')-->Line_35 $$ int endCut = msg.lastIndexOf('<')[ CD ]
Line_32 $$ String msg = result.toString()-->Line_35 $$ int endCut = msg.lastIndexOf('<')[ FD ]
Line_33 $$ if (msg != null) -->Line_36 $$ if (beginCut != -1 && endCut != -1) [ CD ]
Line_36 $$ if (beginCut != -1 && endCut != -1) -->Line_37 $$ return msg.substring(beginCut + 1, endCut)[ CD ]
Line_37 $$ return msg.substring(beginCut + 1, endCut)-->Line_37 $$ return msg.substring(beginCut + 1, endCut)[ CD ]
Line_32 $$ String msg = result.toString()-->Line_37 $$ return msg.substring(beginCut + 1, endCut)[ FD ]
Line_35 $$ int endCut = msg.lastIndexOf('<')-->Line_37 $$ return msg.substring(beginCut + 1, endCut)[ FD ]
Line_2 $$ public static String executePost(String urlStr, String content) -->Line_40 $$ return null[ CD ]
Line_21 $$ while ((inputLine = in.readLine()) != null) -->Line_22 $$ result.append(inputLine)[ FD ]
