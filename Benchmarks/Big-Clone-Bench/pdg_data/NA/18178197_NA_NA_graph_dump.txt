Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void publish() [ CD ]
Line_2 $$ private void publish() -->Line_3 $$ if (uploadPrototypeBox.isSelected()) [ CD ]
Line_3 $$ if (uploadPrototypeBox.isSelected()) -->Line_3 $$ if (uploadPrototypeBox.isSelected()) [ CD ]
Line_9 $$ if (url.getProtocol().equals("file")) -->Line_9 $$ if (url.getProtocol().equals("file")) [ CD ]
Line_5 $$ URL url = new URL(prototypeURLField.getText())-->Line_9 $$ if (url.getProtocol().equals("file")) [ FD ]
Line_9 $$ if (url.getProtocol().equals("file")) -->Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))[ CD ]
Line_7 $$ PrintStream ps-->Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))[ FD ]
Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))-->Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))[ FD ]
Line_5 $$ URL url = new URL(prototypeURLField.getText())-->Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))[ FD ]
Line_9 $$ if (url.getProtocol().equals("file")) -->Line_12 $$ URLConnection urlc = url.openConnection()[ CD ]
Line_12 $$ URLConnection urlc = url.openConnection()-->Line_12 $$ URLConnection urlc = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(prototypeURLField.getText())-->Line_12 $$ URLConnection urlc = url.openConnection()[ FD ]
Line_9 $$ if (url.getProtocol().equals("file")) -->Line_13 $$ urlc.setDoOutput(true)[ CD ]
Line_12 $$ URLConnection urlc = url.openConnection()-->Line_13 $$ urlc.setDoOutput(true)[ FD ]
Line_9 $$ if (url.getProtocol().equals("file")) -->Line_14 $$ if (urlc instanceof HttpURLConnection) [ CD ]
Line_12 $$ URLConnection urlc = url.openConnection()-->Line_14 $$ if (urlc instanceof HttpURLConnection) [ FD ]
Line_14 $$ if (urlc instanceof HttpURLConnection) -->Line_15 $$ huc = ((HttpURLConnection) urlc)[ CD ]
Line_8 $$ HttpURLConnection huc = null-->Line_15 $$ huc = ((HttpURLConnection) urlc)[ FD ]
Line_15 $$ huc = ((HttpURLConnection) urlc)-->Line_15 $$ huc = ((HttpURLConnection) urlc)[ FD ]
Line_14 $$ if (urlc instanceof HttpURLConnection) -->Line_16 $$ huc.setRequestMethod("PUT")[ CD ]
Line_8 $$ HttpURLConnection huc = null-->Line_16 $$ huc.setRequestMethod("PUT")[ FD ]
Line_15 $$ huc = ((HttpURLConnection) urlc)-->Line_16 $$ huc.setRequestMethod("PUT")[ FD ]
Line_9 $$ if (url.getProtocol().equals("file")) -->Line_18 $$ ps = new PrintStream(urlc.getOutputStream())[ CD ]
Line_7 $$ PrintStream ps-->Line_18 $$ ps = new PrintStream(urlc.getOutputStream())[ FD ]
Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))-->Line_18 $$ ps = new PrintStream(urlc.getOutputStream())[ FD ]
Line_18 $$ ps = new PrintStream(urlc.getOutputStream())-->Line_18 $$ ps = new PrintStream(urlc.getOutputStream())[ FD ]
Line_12 $$ URLConnection urlc = url.openConnection()-->Line_18 $$ ps = new PrintStream(urlc.getOutputStream())[ FD ]
Line_7 $$ PrintStream ps-->Line_20 $$ target.writePrototype(ps)[ FD ]
Line_10 $$ ps = new PrintStream(new FileOutputStream(url.getFile()))-->Line_20 $$ target.writePrototype(ps)[ FD ]
Line_18 $$ ps = new PrintStream(urlc.getOutputStream())-->Line_20 $$ target.writePrototype(ps)[ FD ]
Line_8 $$ HttpURLConnection huc = null-->Line_21 $$ if (huc != null) [ FD ]
Line_15 $$ huc = ((HttpURLConnection) urlc)-->Line_21 $$ if (huc != null) [ FD ]
Line_21 $$ if (huc != null) -->Line_22 $$ huc.getResponseCode()[ CD ]
Line_8 $$ HttpURLConnection huc = null-->Line_22 $$ huc.getResponseCode()[ FD ]
Line_15 $$ huc = ((HttpURLConnection) urlc)-->Line_22 $$ huc.getResponseCode()[ FD ]
Line_2 $$ private void publish() -->Line_28 $$ if (postMetadataBox.isSelected()) [ CD ]
Line_28 $$ if (postMetadataBox.isSelected()) -->Line_28 $$ if (postMetadataBox.isSelected()) [ CD ]
Line_30 $$ Hashtable env = new Hashtable()-->Line_31 $$ env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory")[ FD ]
Line_30 $$ Hashtable env = new Hashtable()-->Line_32 $$ env.put(Context.PROVIDER_URL, directoryURLField.getText())[ FD ]
Line_30 $$ Hashtable env = new Hashtable()-->Line_33 $$ env.put(Context.SECURITY_PRINCIPAL, directoryPrincipalField.getText())[ FD ]
Line_30 $$ Hashtable env = new Hashtable()-->Line_34 $$ env.put(Context.SECURITY_CREDENTIALS, directoryCredentialsField.getText())[ FD ]
Line_36 $$ Preferences prefs = Preferences.userNodeForPackage(getClass())-->Line_36 $$ Preferences prefs = Preferences.userNodeForPackage(getClass())[ CD ]
Line_36 $$ Preferences prefs = Preferences.userNodeForPackage(getClass())-->Line_37 $$ prefs.put("directoryURL", directoryURLField.getText())[ FD ]
Line_36 $$ Preferences prefs = Preferences.userNodeForPackage(getClass())-->Line_38 $$ prefs.put("directoryPrincipal", directoryPrincipalField.getText())[ FD ]
Line_36 $$ Preferences prefs = Preferences.userNodeForPackage(getClass())-->Line_39 $$ prefs.put("directoryCredentials", directoryCredentialsField.getText())[ FD ]
Line_40 $$ BasicAttributes attr = new BasicAttributes()-->Line_41 $$ attr.put(OBJECT_CLASS, RDS_RESOURCE)[ FD ]
Line_40 $$ BasicAttributes attr = new BasicAttributes()-->Line_42 $$ attr.put(CONTENT_TYPE, PROTOTYPE_TYPE)[ FD ]
Line_43 $$ if (uploadPrototypeBox.isSelected()) -->Line_43 $$ if (uploadPrototypeBox.isSelected()) [ CD ]
Line_43 $$ if (uploadPrototypeBox.isSelected()) -->Line_44 $$ attr.put(IMPLEMENTATION_URL, prototypeURLField.getText())[ CD ]
Line_40 $$ BasicAttributes attr = new BasicAttributes()-->Line_44 $$ attr.put(IMPLEMENTATION_URL, prototypeURLField.getText())[ FD ]
Line_47 $$ Preferences attrPrefs = prefs.node("attributes")-->Line_47 $$ Preferences attrPrefs = prefs.node("attributes")[ CD ]
Line_36 $$ Preferences prefs = Preferences.userNodeForPackage(getClass())-->Line_47 $$ Preferences attrPrefs = prefs.node("attributes")[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ CD ]
Line_46 $$ DefaultTableModel dtm = (DefaultTableModel) attributesTable.getModel()-->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ CD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ CD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ CD ]
Line_40 $$ BasicAttributes attr = new BasicAttributes()-->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_46 $$ DefaultTableModel dtm = (DefaultTableModel) attributesTable.getModel()-->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_46 $$ DefaultTableModel dtm = (DefaultTableModel) attributesTable.getModel()-->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ CD ]
Line_47 $$ Preferences attrPrefs = prefs.node("attributes")-->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_46 $$ DefaultTableModel dtm = (DefaultTableModel) attributesTable.getModel()-->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_46 $$ DefaultTableModel dtm = (DefaultTableModel) attributesTable.getModel()-->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_52 $$ NameParser np = dirContext.getNameParser("")-->Line_52 $$ NameParser np = dirContext.getNameParser("")[ CD ]
Line_35 $$ InitialDirContext dirContext = new InitialDirContext(env)-->Line_52 $$ NameParser np = dirContext.getNameParser("")[ FD ]
Line_53 $$ Enumeration comps = new ResourceName(prototypeNameField.getText()).getAll()-->Line_53 $$ Enumeration comps = new ResourceName(prototypeNameField.getText()).getAll()[ CD ]
Line_55 $$ Name resourcedn = np.parse("")-->Line_55 $$ Name resourcedn = np.parse("")[ CD ]
Line_52 $$ NameParser np = dirContext.getNameParser("")-->Line_55 $$ Name resourcedn = np.parse("")[ FD ]
Line_56 $$ while (comps.hasMoreElements()) -->Line_56 $$ while (comps.hasMoreElements()) [ CD ]
Line_53 $$ Enumeration comps = new ResourceName(prototypeNameField.getText()).getAll()-->Line_56 $$ while (comps.hasMoreElements()) [ FD ]
Line_56 $$ while (comps.hasMoreElements()) -->Line_57 $$ resourcedn.add(RC + "=" + (String) comps.nextElement())[ CD ]
Line_55 $$ Name resourcedn = np.parse("")-->Line_57 $$ resourcedn.add(RC + "=" + (String) comps.nextElement())[ FD ]
Line_53 $$ Enumeration comps = new ResourceName(prototypeNameField.getText()).getAll()-->Line_57 $$ resourcedn.add(RC + "=" + (String) comps.nextElement())[ FD ]
Line_35 $$ InitialDirContext dirContext = new InitialDirContext(env)-->Line_59 $$ dirContext.createSubcontext(resourcedn)[ FD ]
Line_55 $$ Name resourcedn = np.parse("")-->Line_59 $$ dirContext.createSubcontext(resourcedn)[ FD ]
Line_35 $$ InitialDirContext dirContext = new InitialDirContext(env)-->Line_63 $$ dirContext.modifyAttributes(resourcedn, DirContext.REPLACE_ATTRIBUTE, attr)[ FD ]
Line_55 $$ Name resourcedn = np.parse("")-->Line_63 $$ dirContext.modifyAttributes(resourcedn, DirContext.REPLACE_ATTRIBUTE, attr)[ FD ]
Line_40 $$ BasicAttributes attr = new BasicAttributes()-->Line_63 $$ dirContext.modifyAttributes(resourcedn, DirContext.REPLACE_ATTRIBUTE, attr)[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) [ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_49 $$ attr.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
Line_48 $$ for (int i = 0; i < dtm.getRowCount(); i++) -->Line_50 $$ attrPrefs.put((String) dtm.getValueAt(i, 0), (String) dtm.getValueAt(i, 1))[ FD ]
