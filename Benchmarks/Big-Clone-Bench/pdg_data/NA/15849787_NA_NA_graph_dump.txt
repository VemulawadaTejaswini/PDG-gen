Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Document getDocument(String string, String defaultCharset) [ CD ]
Line_2 $$ public static Document getDocument(String string, String defaultCharset) -->Line_3 $$ DOMParser parser = new DOMParser()[ CD ]
Line_5 $$ URL url = new URL(string)-->Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_7 $$ con.setConnectTimeout(10000)[ FD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_8 $$ con.setUseCaches(false)[ FD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_9 $$ con.addRequestProperty("_", UUID.randomUUID().toString())[ FD ]
Line_10 $$ String contentType = con.getContentType()-->Line_10 $$ String contentType = con.getContentType()[ CD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_10 $$ String contentType = con.getContentType()[ FD ]
Line_10 $$ String contentType = con.getContentType()-->Line_11 $$ if (contentType == null) [ FD ]
Line_11 $$ if (contentType == null) -->Line_12 $$ return null[ CD ]
Line_14 $$ String charsetSearch = contentType.replaceFirst("(?i).*charset=(.*)", "$1")-->Line_14 $$ String charsetSearch = contentType.replaceFirst("(?i).*charset=(.*)", "$1")[ CD ]
Line_10 $$ String contentType = con.getContentType()-->Line_14 $$ String charsetSearch = contentType.replaceFirst("(?i).*charset=(.*)", "$1")[ FD ]
Line_15 $$ String contentTypeCharset = con.getContentEncoding()-->Line_15 $$ String contentTypeCharset = con.getContentEncoding()[ CD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_15 $$ String contentTypeCharset = con.getContentEncoding()[ FD ]
Line_17 $$ if (!contentType.equals(charsetSearch)) -->Line_17 $$ if (!contentType.equals(charsetSearch)) [ CD ]
Line_17 $$ if (!contentType.equals(charsetSearch)) -->Line_17 $$ if (!contentType.equals(charsetSearch)) [ CD ]
Line_10 $$ String contentType = con.getContentType()-->Line_17 $$ if (!contentType.equals(charsetSearch)) [ FD ]
Line_14 $$ String charsetSearch = contentType.replaceFirst("(?i).*charset=(.*)", "$1")-->Line_17 $$ if (!contentType.equals(charsetSearch)) [ FD ]
Line_17 $$ if (!contentType.equals(charsetSearch)) -->Line_18 $$ contentTypeCharset = charsetSearch[ CD ]
Line_15 $$ String contentTypeCharset = con.getContentEncoding()-->Line_18 $$ contentTypeCharset = charsetSearch[ FD ]
Line_18 $$ contentTypeCharset = charsetSearch-->Line_18 $$ contentTypeCharset = charsetSearch[ FD ]
Line_14 $$ String charsetSearch = contentType.replaceFirst("(?i).*charset=(.*)", "$1")-->Line_18 $$ contentTypeCharset = charsetSearch[ FD ]
Line_15 $$ String contentTypeCharset = con.getContentEncoding()-->Line_20 $$ if (contentTypeCharset == null) [ FD ]
Line_18 $$ contentTypeCharset = charsetSearch-->Line_20 $$ if (contentTypeCharset == null) [ FD ]
Line_20 $$ if (contentTypeCharset == null) -->Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))[ CD ]
Line_16 $$ BufferedReader reader = null-->Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))[ FD ]
Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))-->Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))[ FD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))[ FD ]
Line_20 $$ if (contentTypeCharset == null) -->Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))[ CD ]
Line_16 $$ BufferedReader reader = null-->Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))[ FD ]
Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))-->Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))[ FD ]
Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))-->Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))[ FD ]
Line_6 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection()-->Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))[ FD ]
Line_3 $$ DOMParser parser = new DOMParser()-->Line_26 $$ parser.setFeature("http://xml.org/sax/features/namespaces", false)[ FD ]
Line_3 $$ DOMParser parser = new DOMParser()-->Line_27 $$ parser.parse(source)[ FD ]
Line_25 $$ InputSource source = new InputSource(reader)-->Line_27 $$ parser.parse(source)[ FD ]
Line_28 $$ Document document = parser.getDocument()-->Line_28 $$ Document document = parser.getDocument()[ CD ]
Line_3 $$ DOMParser parser = new DOMParser()-->Line_28 $$ Document document = parser.getDocument()[ FD ]
Line_29 $$ String metaTagCharset = getMetaTagCharset(document)-->Line_29 $$ String metaTagCharset = getMetaTagCharset(document)[ CD ]
Line_28 $$ Document document = parser.getDocument()-->Line_29 $$ String metaTagCharset = getMetaTagCharset(document)[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) [ CD ]
Line_29 $$ String metaTagCharset = getMetaTagCharset(document)-->Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) [ FD ]
Line_15 $$ String contentTypeCharset = con.getContentEncoding()-->Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) [ FD ]
Line_18 $$ contentTypeCharset = charsetSearch-->Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) [ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_31 $$ HttpURLConnection reconnection = (HttpURLConnection) url.openConnection()[ CD ]
Line_5 $$ URL url = new URL(string)-->Line_31 $$ HttpURLConnection reconnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_32 $$ reconnection.setConnectTimeout(10000)[ CD ]
Line_31 $$ HttpURLConnection reconnection = (HttpURLConnection) url.openConnection()-->Line_32 $$ reconnection.setConnectTimeout(10000)[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_33 $$ reconnection.setUseCaches(false)[ CD ]
Line_31 $$ HttpURLConnection reconnection = (HttpURLConnection) url.openConnection()-->Line_33 $$ reconnection.setUseCaches(false)[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_34 $$ reconnection.addRequestProperty("_", UUID.randomUUID().toString())[ CD ]
Line_31 $$ HttpURLConnection reconnection = (HttpURLConnection) url.openConnection()-->Line_34 $$ reconnection.addRequestProperty("_", UUID.randomUUID().toString())[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))[ CD ]
Line_16 $$ BufferedReader reader = null-->Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))[ FD ]
Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))-->Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))[ FD ]
Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))-->Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))[ FD ]
Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))-->Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))[ FD ]
Line_31 $$ HttpURLConnection reconnection = (HttpURLConnection) url.openConnection()-->Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_36 $$ source = new InputSource(reader)[ CD ]
Line_25 $$ InputSource source = new InputSource(reader)-->Line_36 $$ source = new InputSource(reader)[ FD ]
Line_36 $$ source = new InputSource(reader)-->Line_36 $$ source = new InputSource(reader)[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_37 $$ parser.setFeature("http://xml.org/sax/features/namespaces", false)[ CD ]
Line_3 $$ DOMParser parser = new DOMParser()-->Line_37 $$ parser.setFeature("http://xml.org/sax/features/namespaces", false)[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_38 $$ parser.parse(source)[ CD ]
Line_3 $$ DOMParser parser = new DOMParser()-->Line_38 $$ parser.parse(source)[ FD ]
Line_25 $$ InputSource source = new InputSource(reader)-->Line_38 $$ parser.parse(source)[ FD ]
Line_36 $$ source = new InputSource(reader)-->Line_38 $$ parser.parse(source)[ FD ]
Line_30 $$ if (metaTagCharset != null && !metaTagCharset.equals(contentTypeCharset)) -->Line_39 $$ document = parser.getDocument()[ CD ]
Line_28 $$ Document document = parser.getDocument()-->Line_39 $$ document = parser.getDocument()[ FD ]
Line_39 $$ document = parser.getDocument()-->Line_39 $$ document = parser.getDocument()[ FD ]
Line_39 $$ document = parser.getDocument()-->Line_39 $$ document = parser.getDocument()[ CD ]
Line_3 $$ DOMParser parser = new DOMParser()-->Line_39 $$ document = parser.getDocument()[ FD ]
Line_16 $$ BufferedReader reader = null-->Line_41 $$ reader.close()[ FD ]
Line_21 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), defaultCharset))-->Line_41 $$ reader.close()[ FD ]
Line_23 $$ reader = new BufferedReader(new InputStreamReader(con.getInputStream(), contentTypeCharset))-->Line_41 $$ reader.close()[ FD ]
Line_35 $$ reader = new BufferedReader(new InputStreamReader(reconnection.getInputStream(), metaTagCharset))-->Line_41 $$ reader.close()[ FD ]
Line_44 $$ if (!"UTF-8".equals(defaultCharset)) -->Line_44 $$ if (!"UTF-8".equals(defaultCharset)) [ CD ]
Line_44 $$ if (!"UTF-8".equals(defaultCharset)) -->Line_44 $$ if (!"UTF-8".equals(defaultCharset)) [ CD ]
Line_2 $$ public static Document getDocument(String string, String defaultCharset) -->Line_44 $$ if (!"UTF-8".equals(defaultCharset)) [ FD ]
Line_44 $$ if (!"UTF-8".equals(defaultCharset)) -->Line_45 $$ return getDocument(string, "UTF-8")[ CD ]
Line_45 $$ return getDocument(string, "UTF-8")-->Line_45 $$ return getDocument(string, "UTF-8")[ CD ]
Line_2 $$ public static Document getDocument(String string, String defaultCharset) -->Line_45 $$ return getDocument(string, "UTF-8")[ FD ]
