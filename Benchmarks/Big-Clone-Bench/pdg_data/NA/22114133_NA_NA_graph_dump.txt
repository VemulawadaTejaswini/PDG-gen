Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void actionPerformed(ActionEvent e) [ CD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_3 $$ String cmd = e.getActionCommand()[ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_3 $$ String cmd = e.getActionCommand()[ CD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_3 $$ String cmd = e.getActionCommand()[ FD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_4 $$ boolean askRestart = false[ CD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_5 $$ if (cmd == null)[ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_5 $$ if (cmd == null)[ FD ]
Line_5 $$ if (cmd == null)-->Line_5 $$ return[ CD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_6 $$ if (cmd.equals("GRAPHVIZ")) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_6 $$ if (cmd.equals("GRAPHVIZ")) [ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_6 $$ if (cmd.equals("GRAPHVIZ")) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_6 $$ if (cmd.equals("GRAPHVIZ")) [ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_7 $$ JFileChooser chooser = new JFileChooser()[ CD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_8 $$ chooser.setFileFilter(new fi.kaila.suku.util.SettingFilter("exe"))[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_8 $$ chooser.setFileFilter(new fi.kaila.suku.util.SettingFilter("exe"))[ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_9 $$ chooser.setDialogTitle("Open exe file")[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_9 $$ chooser.setDialogTitle("Open exe file")[ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_10 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) [ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_10 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) [ FD ]
Line_10 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_11 $$ Suku.kontroller.putPref(owner, "GRAPHVIZ", "")[ CD ]
Line_10 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_12 $$ graphVizPath.setText("")[ CD ]
Line_10 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_13 $$ owner.mToolsAuxGraphviz.setEnabled(false)[ CD ]
Line_10 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_14 $$ return[ CD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_16 $$ File f = chooser.getSelectedFile()[ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_16 $$ File f = chooser.getSelectedFile()[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_16 $$ File f = chooser.getSelectedFile()[ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_17 $$ if (f == null) [ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_17 $$ if (f == null) [ FD ]
Line_17 $$ if (f == null) -->Line_18 $$ return[ CD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_20 $$ String filename = f.getAbsolutePath()[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_20 $$ String filename = f.getAbsolutePath()[ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_20 $$ String filename = f.getAbsolutePath()[ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_21 $$ if (filename == null || filename.isEmpty()) [ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_21 $$ if (filename == null || filename.isEmpty()) [ FD ]
Line_21 $$ if (filename == null || filename.isEmpty()) -->Line_22 $$ Suku.kontroller.putPref(owner, "GRAPHVIZ", "")[ CD ]
Line_21 $$ if (filename == null || filename.isEmpty()) -->Line_23 $$ graphVizPath.setText("")[ CD ]
Line_21 $$ if (filename == null || filename.isEmpty()) -->Line_24 $$ owner.mToolsAuxGraphviz.setEnabled(false)[ CD ]
Line_21 $$ if (filename == null || filename.isEmpty()) -->Line_25 $$ return[ CD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_27 $$ Suku.kontroller.putPref(owner, "GRAPHVIZ", filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_27 $$ Suku.kontroller.putPref(owner, "GRAPHVIZ", filename)[ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_28 $$ graphVizPath.setText(filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_28 $$ graphVizPath.setText(filename)[ FD ]
Line_6 $$ if (cmd.equals("GRAPHVIZ")) -->Line_29 $$ owner.mToolsAuxGraphviz.setEnabled(true)[ CD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_31 $$ if (cmd.equals("IMAGEMAGICK")) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_31 $$ if (cmd.equals("IMAGEMAGICK")) [ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_31 $$ if (cmd.equals("IMAGEMAGICK")) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_31 $$ if (cmd.equals("IMAGEMAGICK")) [ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_33 $$ chooser.setFileFilter(new fi.kaila.suku.util.SettingFilter("exe"))[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_33 $$ chooser.setFileFilter(new fi.kaila.suku.util.SettingFilter("exe"))[ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_34 $$ chooser.setDialogTitle("Open exe file")[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_34 $$ chooser.setDialogTitle("Open exe file")[ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_35 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) [ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_35 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) [ FD ]
Line_35 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_36 $$ Suku.kontroller.putPref(owner, "IMAGEMAGICK", "")[ CD ]
Line_35 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_37 $$ imageMagickPath.setText("")[ CD ]
Line_35 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_38 $$ return[ CD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_40 $$ File f = chooser.getSelectedFile()[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_40 $$ File f = chooser.getSelectedFile()[ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_41 $$ if (f == null) [ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_41 $$ if (f == null) [ FD ]
Line_41 $$ if (f == null) -->Line_42 $$ return[ CD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_44 $$ String filename = f.getAbsolutePath()[ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_44 $$ String filename = f.getAbsolutePath()[ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_45 $$ if (filename == null || filename.isEmpty()) [ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_45 $$ if (filename == null || filename.isEmpty()) [ FD ]
Line_45 $$ if (filename == null || filename.isEmpty()) -->Line_46 $$ Suku.kontroller.putPref(owner, "IMAGEMAGICK", "")[ CD ]
Line_45 $$ if (filename == null || filename.isEmpty()) -->Line_47 $$ imageMagickPath.setText("")[ CD ]
Line_45 $$ if (filename == null || filename.isEmpty()) -->Line_48 $$ return[ CD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_50 $$ Suku.kontroller.putPref(owner, "IMAGEMAGICK", filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_50 $$ Suku.kontroller.putPref(owner, "IMAGEMAGICK", filename)[ FD ]
Line_31 $$ if (cmd.equals("IMAGEMAGICK")) -->Line_51 $$ imageMagickPath.setText(filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_51 $$ imageMagickPath.setText(filename)[ FD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) [ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) [ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_55 $$ chooser.setFileFilter(new fi.kaila.suku.util.SettingFilter("xls"))[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_55 $$ chooser.setFileFilter(new fi.kaila.suku.util.SettingFilter("xls"))[ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_56 $$ chooser.setDialogTitle("Open xls file")[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_56 $$ chooser.setDialogTitle("Open xls file")[ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_57 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) [ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_57 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) [ FD ]
Line_57 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_58 $$ Suku.kontroller.putPref(owner, "FINFAMILY.XLS", "")[ CD ]
Line_57 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_59 $$ excelPath.setText("")[ CD ]
Line_57 $$ if (chooser.showOpenDialog(owner) != JFileChooser.APPROVE_OPTION) -->Line_60 $$ return[ CD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_62 $$ File f = chooser.getSelectedFile()[ CD ]
Line_7 $$ JFileChooser chooser = new JFileChooser()-->Line_62 $$ File f = chooser.getSelectedFile()[ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_63 $$ if (f == null) [ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_63 $$ if (f == null) [ FD ]
Line_63 $$ if (f == null) -->Line_64 $$ return[ CD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_66 $$ String filename = f.getAbsolutePath()[ CD ]
Line_16 $$ File f = chooser.getSelectedFile()-->Line_66 $$ String filename = f.getAbsolutePath()[ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_67 $$ if (filename == null || filename.isEmpty()) [ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_67 $$ if (filename == null || filename.isEmpty()) [ FD ]
Line_67 $$ if (filename == null || filename.isEmpty()) -->Line_68 $$ Suku.kontroller.putPref(owner, "FINFAMILY.XLS", "")[ CD ]
Line_67 $$ if (filename == null || filename.isEmpty()) -->Line_69 $$ excelPath.setText("")[ CD ]
Line_67 $$ if (filename == null || filename.isEmpty()) -->Line_70 $$ return[ CD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_72 $$ Suku.kontroller.putPref(owner, "FINFAMILY.XLS", filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_72 $$ Suku.kontroller.putPref(owner, "FINFAMILY.XLS", filename)[ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_73 $$ excelPath.setText(filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_73 $$ excelPath.setText(filename)[ FD ]
Line_53 $$ if (cmd.equals("FINFAMILY.XLS")) -->Line_74 $$ missingKeys = checkForMissingNames(filename)[ CD ]
Line_20 $$ String filename = f.getAbsolutePath()-->Line_74 $$ missingKeys = checkForMissingNames(filename)[ FD ]
Line_2 $$ public void actionPerformed(ActionEvent e) -->Line_76 $$ if (cmd.equals(Resurses.OK)) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_76 $$ if (cmd.equals(Resurses.OK)) [ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_76 $$ if (cmd.equals(Resurses.OK)) [ CD ]
Line_3 $$ String cmd = e.getActionCommand()-->Line_76 $$ if (cmd.equals(Resurses.OK)) [ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_77 $$ String newPath = Suku.kontroller.getPref(owner, "FINFAMILY.XLS", "")[ CD ]
Line_77 $$ String newPath = Suku.kontroller.getPref(owner, "FINFAMILY.XLS", "")-->Line_77 $$ String newPath = Suku.kontroller.getPref(owner, "FINFAMILY.XLS", "")[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_78 $$ if (!newPath.equals(exPath)) [ CD ]
Line_78 $$ if (!newPath.equals(exPath)) -->Line_78 $$ if (!newPath.equals(exPath)) [ CD ]
Line_78 $$ if (!newPath.equals(exPath)) -->Line_78 $$ if (!newPath.equals(exPath)) [ CD ]
Line_77 $$ String newPath = Suku.kontroller.getPref(owner, "FINFAMILY.XLS", "")-->Line_78 $$ if (!newPath.equals(exPath)) [ FD ]
Line_78 $$ if (!newPath.equals(exPath)) -->Line_79 $$ askRestart = true[ CD ]
Line_4 $$ boolean askRestart = false-->Line_79 $$ askRestart = true[ FD ]
Line_79 $$ askRestart = true-->Line_79 $$ askRestart = true[ FD ]
Line_78 $$ if (!newPath.equals(exPath)) -->Line_80 $$ Suku.setFinFamilyXls(newPath)[ CD ]
Line_77 $$ String newPath = Suku.kontroller.getPref(owner, "FINFAMILY.XLS", "")-->Line_80 $$ Suku.setFinFamilyXls(newPath)[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_82 $$ String input = (String) serverUrl.getSelectedItem()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_83 $$ if (input == null) [ CD ]
Line_82 $$ String input = (String) serverUrl.getSelectedItem()-->Line_83 $$ if (input == null) [ FD ]
Line_83 $$ if (input == null) -->Line_84 $$ input = ""[ CD ]
Line_82 $$ String input = (String) serverUrl.getSelectedItem()-->Line_84 $$ input = ""[ FD ]
Line_84 $$ input = ""-->Line_84 $$ input = ""[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_86 $$ if (input.isEmpty()) [ CD ]
Line_82 $$ String input = (String) serverUrl.getSelectedItem()-->Line_86 $$ if (input.isEmpty()) [ FD ]
Line_84 $$ input = ""-->Line_86 $$ if (input.isEmpty()) [ FD ]
Line_86 $$ if (input.isEmpty()) -->Line_86 $$ if (input.isEmpty()) [ CD ]
Line_82 $$ String input = (String) serverUrl.getSelectedItem()-->Line_86 $$ if (input.isEmpty()) [ FD ]
Line_84 $$ input = ""-->Line_86 $$ if (input.isEmpty()) [ FD ]
Line_86 $$ if (input.isEmpty()) -->Line_87 $$ Suku.kontroller.putPref(owner, "SERVERURL", "")[ CD ]
Line_86 $$ if (input.isEmpty()) -->Line_88 $$ if (!originUrl.isEmpty()) [ CD ]
Line_88 $$ if (!originUrl.isEmpty()) -->Line_88 $$ if (!originUrl.isEmpty()) [ CD ]
Line_88 $$ if (!originUrl.isEmpty()) -->Line_88 $$ if (!originUrl.isEmpty()) [ CD ]
Line_88 $$ if (!originUrl.isEmpty()) -->Line_89 $$ askRestart = true[ CD ]
Line_4 $$ boolean askRestart = false-->Line_89 $$ askRestart = true[ FD ]
Line_79 $$ askRestart = true-->Line_89 $$ askRestart = true[ FD ]
Line_89 $$ askRestart = true-->Line_89 $$ askRestart = true[ FD ]
Line_86 $$ if (input.isEmpty()) -->Line_92 $$ URL url[ CD ]
Line_86 $$ if (input.isEmpty()) -->Line_93 $$ String resp = null[ CD ]
Line_92 $$ URL url-->Line_95 $$ url = new URL(input + "SukuServlet")[ FD ]
Line_95 $$ url = new URL(input + "SukuServlet")-->Line_95 $$ url = new URL(input + "SukuServlet")[ FD ]
Line_92 $$ URL url-->Line_96 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection()[ FD ]
Line_95 $$ url = new URL(input + "SukuServlet")-->Line_96 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection()[ FD ]
Line_97 $$ int resu = uc.getResponseCode()-->Line_97 $$ int resu = uc.getResponseCode()[ CD ]
Line_96 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection()-->Line_97 $$ int resu = uc.getResponseCode()[ FD ]
Line_97 $$ int resu = uc.getResponseCode()-->Line_98 $$ if (resu == 200) [ FD ]
Line_98 $$ if (resu == 200) -->Line_99 $$ byte buff[] = new byte[1024][ CD ]
Line_98 $$ if (resu == 200) -->Line_100 $$ InputStream in = uc.getInputStream()[ CD ]
Line_100 $$ InputStream in = uc.getInputStream()-->Line_100 $$ InputStream in = uc.getInputStream()[ CD ]
Line_96 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection()-->Line_100 $$ InputStream in = uc.getInputStream()[ FD ]
Line_98 $$ if (resu == 200) -->Line_101 $$ int len = in.read(buff)[ CD ]
Line_101 $$ int len = in.read(buff)-->Line_101 $$ int len = in.read(buff)[ CD ]
Line_100 $$ InputStream in = uc.getInputStream()-->Line_101 $$ int len = in.read(buff)[ FD ]
Line_98 $$ if (resu == 200) -->Line_102 $$ resp = new String(buff, 0, len)[ CD ]
Line_93 $$ String resp = null-->Line_102 $$ resp = new String(buff, 0, len)[ FD ]
Line_102 $$ resp = new String(buff, 0, len)-->Line_102 $$ resp = new String(buff, 0, len)[ FD ]
Line_98 $$ if (resu == 200) -->Line_103 $$ uc.disconnect()[ CD ]
Line_96 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection()-->Line_103 $$ uc.disconnect()[ FD ]
Line_86 $$ if (input.isEmpty()) -->Line_108 $$ if (resp != null && resp.toLowerCase().startsWith("finfamily")) [ CD ]
Line_93 $$ String resp = null-->Line_108 $$ if (resp != null && resp.toLowerCase().startsWith("finfamily")) [ FD ]
Line_102 $$ resp = new String(buff, 0, len)-->Line_108 $$ if (resp != null && resp.toLowerCase().startsWith("finfamily")) [ FD ]
Line_108 $$ if (resp != null && resp.toLowerCase().startsWith("finfamily")) -->Line_109 $$ Suku.kontroller.putPref(owner, "SERVERURL", input)[ CD ]
Line_82 $$ String input = (String) serverUrl.getSelectedItem()-->Line_109 $$ Suku.kontroller.putPref(owner, "SERVERURL", input)[ FD ]
Line_84 $$ input = ""-->Line_109 $$ Suku.kontroller.putPref(owner, "SERVERURL", input)[ FD ]
Line_108 $$ if (resp != null && resp.toLowerCase().startsWith("finfamily")) -->Line_110 $$ if (!input.equals(originUrl)) [ CD ]
Line_110 $$ if (!input.equals(originUrl)) -->Line_110 $$ if (!input.equals(originUrl)) [ CD ]
Line_110 $$ if (!input.equals(originUrl)) -->Line_110 $$ if (!input.equals(originUrl)) [ CD ]
Line_82 $$ String input = (String) serverUrl.getSelectedItem()-->Line_110 $$ if (!input.equals(originUrl)) [ FD ]
Line_84 $$ input = ""-->Line_110 $$ if (!input.equals(originUrl)) [ FD ]
Line_110 $$ if (!input.equals(originUrl)) -->Line_111 $$ askRestart = true[ CD ]
Line_4 $$ boolean askRestart = false-->Line_111 $$ askRestart = true[ FD ]
Line_79 $$ askRestart = true-->Line_111 $$ askRestart = true[ FD ]
Line_89 $$ askRestart = true-->Line_111 $$ askRestart = true[ FD ]
Line_111 $$ askRestart = true-->Line_111 $$ askRestart = true[ FD ]
Line_108 $$ if (resp != null && resp.toLowerCase().startsWith("finfamily")) -->Line_114 $$ JOptionPane.showMessageDialog(this, Resurses.getString("SERVER_ERROR"), Resurses.getString(Resurses.SUKU), JOptionPane.ERROR_MESSAGE)[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_117 $$ int newLoca = loca.getSelectedIndex()[ CD ]
Line_117 $$ int newLoca = loca.getSelectedIndex()-->Line_117 $$ int newLoca = loca.getSelectedIndex()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_118 $$ Suku.kontroller.putPref(owner, Resurses.LOCALE, locas[newLoca])[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_119 $$ if (!originLanguage.equals(locas[newLoca])) [ CD ]
Line_119 $$ if (!originLanguage.equals(locas[newLoca])) -->Line_119 $$ if (!originLanguage.equals(locas[newLoca])) [ CD ]
Line_119 $$ if (!originLanguage.equals(locas[newLoca])) -->Line_119 $$ if (!originLanguage.equals(locas[newLoca])) [ CD ]
Line_119 $$ if (!originLanguage.equals(locas[newLoca])) -->Line_120 $$ askRestart = true[ CD ]
Line_4 $$ boolean askRestart = false-->Line_120 $$ askRestart = true[ FD ]
Line_79 $$ askRestart = true-->Line_120 $$ askRestart = true[ FD ]
Line_89 $$ askRestart = true-->Line_120 $$ askRestart = true[ FD ]
Line_111 $$ askRestart = true-->Line_120 $$ askRestart = true[ FD ]
Line_120 $$ askRestart = true-->Line_120 $$ askRestart = true[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_122 $$ int newLang = repolang.getSelectedIndex()[ CD ]
Line_122 $$ int newLang = repolang.getSelectedIndex()-->Line_122 $$ int newLang = repolang.getSelectedIndex()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_123 $$ if (newLang >= 0) [ CD ]
Line_122 $$ int newLang = repolang.getSelectedIndex()-->Line_123 $$ if (newLang >= 0) [ FD ]
Line_123 $$ if (newLang >= 0) -->Line_124 $$ Suku.kontroller.putPref(owner, Resurses.REPOLANG, Suku.getRepoLanguage(newLang, true))[ CD ]
Line_122 $$ int newLang = repolang.getSelectedIndex()-->Line_124 $$ Suku.kontroller.putPref(owner, Resurses.REPOLANG, Suku.getRepoLanguage(newLang, true))[ FD ]
Line_123 $$ if (newLang >= 0) -->Line_125 $$ Resurses.setLanguage(Suku.getRepoLanguage(newLang, true))[ CD ]
Line_122 $$ int newLang = repolang.getSelectedIndex()-->Line_125 $$ Resurses.setLanguage(Suku.getRepoLanguage(newLang, true))[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_127 $$ int imageScaler = imageScaling.getSelectedIndex()[ CD ]
Line_127 $$ int imageScaler = imageScaling.getSelectedIndex()-->Line_127 $$ int imageScaler = imageScaling.getSelectedIndex()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_128 $$ Suku.kontroller.putPref(owner, "SCALE_IMAGE", "" + imageScaler)[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_129 $$ owner.setImageScalerIndex(imageScaler)[ CD ]
Line_127 $$ int imageScaler = imageScaling.getSelectedIndex()-->Line_129 $$ owner.setImageScalerIndex(imageScaler)[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_130 $$ int seleId = defaultCountryCode.getSelectedIndex()[ CD ]
Line_130 $$ int seleId = defaultCountryCode.getSelectedIndex()-->Line_130 $$ int seleId = defaultCountryCode.getSelectedIndex()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_131 $$ if (seleId >= 0) [ CD ]
Line_130 $$ int seleId = defaultCountryCode.getSelectedIndex()-->Line_131 $$ if (seleId >= 0) [ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_139 $$ int newDateIndex = dateFormat.getSelectedIndex()[ CD ]
Line_139 $$ int newDateIndex = dateFormat.getSelectedIndex()-->Line_139 $$ int newDateIndex = dateFormat.getSelectedIndex()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_140 $$ Suku.kontroller.putPref(owner, Resurses.DATEFORMAT, dateCodes[newDateIndex])[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_141 $$ Resurses.setDateFormat(dateCodes[newDateIndex])[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_142 $$ Utils.resetSukuModel()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_143 $$ boolean openStreetMap = useOpenStreetMap.isSelected()[ CD ]
Line_143 $$ boolean openStreetMap = useOpenStreetMap.isSelected()-->Line_143 $$ boolean openStreetMap = useOpenStreetMap.isSelected()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_144 $$ Suku.kontroller.putPref(owner, "USE_OPEN_STREETMAP", "" + openStreetMap)[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_145 $$ String fntSize = dbFontSize.getText()[ CD ]
Line_145 $$ String fntSize = dbFontSize.getText()-->Line_145 $$ String fntSize = dbFontSize.getText()[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_146 $$ Suku.kontroller.putPref(owner, "DB_VIEW_FONTSIZE", fntSize)[ CD ]
Line_145 $$ String fntSize = dbFontSize.getText()-->Line_146 $$ Suku.kontroller.putPref(owner, "DB_VIEW_FONTSIZE", fntSize)[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_147 $$ String lf = lfNames[lookAndFeel.getSelectedIndex()][ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_148 $$ Suku.kontroller.putPref(owner, "LOOK_AND_FEEL", lf)[ CD ]
Line_147 $$ String lf = lfNames[lookAndFeel.getSelectedIndex()]-->Line_148 $$ Suku.kontroller.putPref(owner, "LOOK_AND_FEEL", lf)[ FD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_149 $$ int lfIdx = -1[ CD ]
Line_149 $$ int lfIdx = -1-->Line_149 $$ int lfIdx = -1[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_76 $$ if (cmd.equals(Resurses.OK)) [ CD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ CD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ CD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ FD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_151 $$ if (lafInfo[i].getName().equalsIgnoreCase(lf)) [ CD ]
Line_147 $$ String lf = lfNames[lookAndFeel.getSelectedIndex()]-->Line_151 $$ if (lafInfo[i].getName().equalsIgnoreCase(lf)) [ FD ]
Line_151 $$ if (lafInfo[i].getName().equalsIgnoreCase(lf)) -->Line_151 $$ if (lafInfo[i].getName().equalsIgnoreCase(lf)) [ CD ]
Line_147 $$ String lf = lfNames[lookAndFeel.getSelectedIndex()]-->Line_151 $$ if (lafInfo[i].getName().equalsIgnoreCase(lf)) [ FD ]
Line_151 $$ if (lafInfo[i].getName().equalsIgnoreCase(lf)) -->Line_152 $$ lfIdx = i[ CD ]
Line_152 $$ lfIdx = i-->Line_152 $$ lfIdx = i[ FD ]
Line_149 $$ int lfIdx = -1-->Line_152 $$ lfIdx = i[ FD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_152 $$ lfIdx = i[ FD ]
Line_152 $$ lfIdx = i-->Line_157 $$ if (lfIdx < 0) [ FD ]
Line_149 $$ int lfIdx = -1-->Line_157 $$ if (lfIdx < 0) [ FD ]
Line_157 $$ if (lfIdx < 0) -->Line_158 $$ UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName())[ CD ]
Line_157 $$ if (lfIdx < 0) -->Line_160 $$ UIManager.setLookAndFeel(lafInfo[lfIdx].getClassName())[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_166 $$ setVisible(false)[ CD ]
Line_76 $$ if (cmd.equals(Resurses.OK)) -->Line_167 $$ if (askRestart) [ CD ]
Line_167 $$ if (askRestart) -->Line_168 $$ if (missingKeys != null && !missingKeys.isEmpty()) [ CD ]
Line_168 $$ if (missingKeys != null && !missingKeys.isEmpty()) -->Line_168 $$ if (missingKeys != null && !missingKeys.isEmpty()) [ CD ]
Line_168 $$ if (missingKeys != null && !missingKeys.isEmpty()) -->Line_169 $$ SukuPad pad = new SukuPad(this, missingKeys)[ CD ]
Line_168 $$ if (missingKeys != null && !missingKeys.isEmpty()) -->Line_170 $$ pad.setVisible(true)[ CD ]
Line_169 $$ SukuPad pad = new SukuPad(this, missingKeys)-->Line_170 $$ pad.setVisible(true)[ FD ]
Line_167 $$ if (askRestart) -->Line_172 $$ JOptionPane.showMessageDialog(this, Resurses.getString("RESTART_FINFAMILY"), Resurses.getString(Resurses.SUKU), JOptionPane.INFORMATION_MESSAGE)[ CD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ FD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ FD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_150 $$ for (int i = 0; i < lafInfo.length; i++) [ FD ]
Line_150 $$ for (int i = 0; i < lafInfo.length; i++) -->Line_152 $$ lfIdx = i[ FD ]
