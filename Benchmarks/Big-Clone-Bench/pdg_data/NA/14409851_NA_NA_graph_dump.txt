Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void test() throws Exception [ CD ]
Line_2 $$ public void test() throws Exception -->Line_3 $$ File temp = File.createTempFile("test", ".test")[ CD ]
Line_3 $$ File temp = File.createTempFile("test", ".test")-->Line_3 $$ File temp = File.createTempFile("test", ".test")[ CD ]
Line_2 $$ public void test() throws Exception -->Line_4 $$ temp.deleteOnExit()[ CD ]
Line_3 $$ File temp = File.createTempFile("test", ".test")-->Line_4 $$ temp.deleteOnExit()[ FD ]
Line_2 $$ public void test() throws Exception -->Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")[ CD ]
Line_2 $$ public void test() throws Exception -->Line_6 $$ s.addText("Test")[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_6 $$ s.addText("Test")[ FD ]
Line_2 $$ public void test() throws Exception -->Line_7 $$ s.getOutputStream().write("ing is important".getBytes("UTF-8"))[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_7 $$ s.getOutputStream().write("ing is important".getBytes("UTF-8"))[ FD ]
Line_2 $$ public void test() throws Exception -->Line_8 $$ s.getWriter().write(" but overrated")[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_8 $$ s.getWriter().write(" but overrated")[ FD ]
Line_2 $$ public void test() throws Exception -->Line_9 $$ assertEquals("Testing is important but overrated", s.getText())[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_9 $$ assertEquals("Testing is important but overrated", s.getText())[ FD ]
Line_2 $$ public void test() throws Exception -->Line_10 $$ s.close(ResponseStateOk.getInstance())[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_10 $$ s.close(ResponseStateOk.getInstance())[ FD ]
Line_2 $$ public void test() throws Exception -->Line_11 $$ assertEquals("Testing is important but overrated", s.getText())[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_11 $$ assertEquals("Testing is important but overrated", s.getText())[ FD ]
Line_2 $$ public void test() throws Exception -->Line_12 $$ InputStream input = s.getInputStream()[ CD ]
Line_12 $$ InputStream input = s.getInputStream()-->Line_12 $$ InputStream input = s.getInputStream()[ CD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_12 $$ InputStream input = s.getInputStream()[ FD ]
Line_2 $$ public void test() throws Exception -->Line_13 $$ StringWriter writer = new StringWriter()[ CD ]
Line_2 $$ public void test() throws Exception -->Line_14 $$ IOUtils.copy(input, writer, "UTF-8")[ CD ]
Line_12 $$ InputStream input = s.getInputStream()-->Line_14 $$ IOUtils.copy(input, writer, "UTF-8")[ FD ]
Line_13 $$ StringWriter writer = new StringWriter()-->Line_14 $$ IOUtils.copy(input, writer, "UTF-8")[ FD ]
Line_2 $$ public void test() throws Exception -->Line_15 $$ assertEquals("Testing is important but overrated", writer.toString())[ CD ]
Line_13 $$ StringWriter writer = new StringWriter()-->Line_15 $$ assertEquals("Testing is important but overrated", writer.toString())[ FD ]
Line_5 $$ StorageFile s = new StorageFile(temp, "UTF-8")-->Line_17 $$ s.getOutputStream()[ FD ]
