Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) [ CD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_3 $$ String inputString = null, value = null[ CD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_4 $$ int col = 0[ CD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_5 $$ double b = 0[ CD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_6 $$ Matrix cij = new Matrix(nrow, ncol)[ CD ]
Line_8 $$ URL url = filename.getClass().getResource(filename)-->Line_8 $$ URL url = filename.getClass().getResource(filename)[ CD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_8 $$ URL url = filename.getClass().getResource(filename)[ FD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_8 $$ URL url = filename.getClass().getResource(filename)[ FD ]
Line_8 $$ URL url = filename.getClass().getResource(filename)-->Line_9 $$ LineNumberReader lnr = new LineNumberReader(new InputStreamReader(url.openStream()))[ FD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ CD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ CD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ CD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ CD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ CD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ CD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_11 $$ inputString = lnr.readLine()[ CD ]
Line_11 $$ inputString = lnr.readLine()-->Line_11 $$ inputString = lnr.readLine()[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_11 $$ inputString = lnr.readLine()[ FD ]
Line_11 $$ inputString = lnr.readLine()-->Line_11 $$ inputString = lnr.readLine()[ CD ]
Line_9 $$ LineNumberReader lnr = new LineNumberReader(new InputStreamReader(url.openStream()))-->Line_11 $$ inputString = lnr.readLine()[ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_12 $$ int found = -2[ CD ]
Line_12 $$ int found = -2-->Line_12 $$ int found = -2[ CD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_13 $$ while (found != -1) [ CD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ CD ]
Line_12 $$ int found = -2-->Line_13 $$ while (found != -1) [ FD ]
Line_13 $$ while (found != -1) -->Line_14 $$ found = inputString.indexOf(";")[ CD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_14 $$ found = inputString.indexOf(";")[ FD ]
Line_12 $$ int found = -2-->Line_14 $$ found = inputString.indexOf(";")[ FD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_14 $$ found = inputString.indexOf(";")[ CD ]
Line_11 $$ inputString = lnr.readLine()-->Line_14 $$ found = inputString.indexOf(";")[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_14 $$ found = inputString.indexOf(";")[ FD ]
Line_13 $$ while (found != -1) -->Line_15 $$ if (found != -1) [ CD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_15 $$ if (found != -1) [ FD ]
Line_12 $$ int found = -2-->Line_15 $$ if (found != -1) [ FD ]
Line_15 $$ if (found != -1) -->Line_16 $$ value = inputString.substring(0, found)[ CD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_16 $$ value = inputString.substring(0, found)[ CD ]
Line_11 $$ inputString = lnr.readLine()-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_12 $$ int found = -2-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_15 $$ if (found != -1) -->Line_17 $$ inputString = inputString.substring(found + 1)[ CD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_11 $$ inputString = lnr.readLine()-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_17 $$ inputString = inputString.substring(found + 1)[ CD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_11 $$ inputString = lnr.readLine()-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_15 $$ if (found != -1) -->Line_19 $$ value = inputString[ CD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_19 $$ value = inputString[ FD ]
Line_19 $$ value = inputString-->Line_19 $$ value = inputString[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_19 $$ value = inputString[ FD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_19 $$ value = inputString[ FD ]
Line_11 $$ inputString = lnr.readLine()-->Line_19 $$ value = inputString[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_19 $$ value = inputString[ FD ]
Line_13 $$ while (found != -1) -->Line_21 $$ col = col + 1[ CD ]
Line_21 $$ col = col + 1-->Line_21 $$ col = col + 1[ FD ]
Line_4 $$ int col = 0-->Line_21 $$ col = col + 1[ FD ]
Line_21 $$ col = col + 1-->Line_21 $$ col = col + 1[ FD ]
Line_4 $$ int col = 0-->Line_21 $$ col = col + 1[ FD ]
Line_13 $$ while (found != -1) -->Line_22 $$ if (col == 3) [ CD ]
Line_21 $$ col = col + 1-->Line_22 $$ if (col == 3) [ FD ]
Line_4 $$ int col = 0-->Line_22 $$ if (col == 3) [ FD ]
Line_22 $$ if (col == 3) -->Line_23 $$ if (value != null)[ CD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_23 $$ if (value != null)[ FD ]
Line_19 $$ value = inputString-->Line_23 $$ if (value != null)[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_23 $$ if (value != null)[ FD ]
Line_23 $$ if (value != null)-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ CD ]
Line_6 $$ Matrix cij = new Matrix(nrow, ncol)-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_19 $$ value = inputString-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_3 $$ String inputString = null, value = null-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_23 $$ if (value != null)-->Line_23 $$ cij.set(i, j, 0)[ CD ]
Line_6 $$ Matrix cij = new Matrix(nrow, ncol)-->Line_23 $$ cij.set(i, j, 0)[ FD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_23 $$ cij.set(i, j, 0)[ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_23 $$ cij.set(i, j, 0)[ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_26 $$ col = 0[ CD ]
Line_21 $$ col = col + 1-->Line_26 $$ col = 0[ FD ]
Line_26 $$ col = 0-->Line_26 $$ col = 0[ FD ]
Line_4 $$ int col = 0-->Line_26 $$ col = 0[ FD ]
Line_2 $$ static Matrix readMatrix1(String filename, int nrow, int ncol) -->Line_31 $$ return cij[ CD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int i = 0; i < nrow; i++) for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ FD ]
Line_10 $$ for (int j = 0; j < ncol; j++) -->Line_10 $$ for (int j = 0; j < ncol; j++) [ FD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_13 $$ while (found != -1) [ FD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_13 $$ while (found != -1) [ FD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_14 $$ found = inputString.indexOf(";")[ FD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_15 $$ if (found != -1) [ FD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_14 $$ found = inputString.indexOf(";")-->Line_16 $$ value = inputString.substring(0, found)[ FD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_17 $$ inputString = inputString.substring(found + 1)[ FD ]
Line_17 $$ inputString = inputString.substring(found + 1)-->Line_19 $$ value = inputString[ FD ]
Line_21 $$ col = col + 1-->Line_21 $$ col = col + 1[ FD ]
Line_21 $$ col = col + 1-->Line_22 $$ if (col == 3) [ FD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_23 $$ if (value != null)[ FD ]
Line_19 $$ value = inputString-->Line_23 $$ if (value != null)[ FD ]
Line_16 $$ value = inputString.substring(0, found)-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
Line_19 $$ value = inputString-->Line_23 $$ cij.set(i, j, Double.parseDouble(value))[ FD ]
