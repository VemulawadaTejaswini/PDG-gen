Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException [ CD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_3 $$ final int MAX_DAILY_BACKUPS = 5[ CD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_4 $$ File cacheFolder = getBackupFolder()[ CD ]
Line_4 $$ File cacheFolder = getBackupFolder()-->Line_4 $$ File cacheFolder = getBackupFolder()[ CD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_5 $$ cacheLog.debug("Making a daily backup of current Beehive archive...")[ CD ]
Line_7 $$ File oldestDaily = new File(DAILY_BACKUP_PREFIX + "." + MAX_DAILY_BACKUPS)-->Line_8 $$ if (oldestDaily.exists()) [ FD ]
Line_8 $$ if (oldestDaily.exists()) -->Line_8 $$ if (oldestDaily.exists()) [ CD ]
Line_7 $$ File oldestDaily = new File(DAILY_BACKUP_PREFIX + "." + MAX_DAILY_BACKUPS)-->Line_8 $$ if (oldestDaily.exists()) [ FD ]
Line_8 $$ if (oldestDaily.exists()) -->Line_9 $$ moveToWeeklyBackup(oldestDaily)[ CD ]
Line_7 $$ File oldestDaily = new File(DAILY_BACKUP_PREFIX + "." + MAX_DAILY_BACKUPS)-->Line_9 $$ moveToWeeklyBackup(oldestDaily)[ FD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) [ CD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) [ CD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) [ FD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)[ CD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))[ CD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_14 $$ if (!daily.exists()) [ CD ]
Line_14 $$ if (!daily.exists()) -->Line_14 $$ if (!daily.exists()) [ CD ]
Line_14 $$ if (!daily.exists()) -->Line_14 $$ if (!daily.exists()) [ CD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_14 $$ if (!daily.exists()) [ FD ]
Line_14 $$ if (!daily.exists()) -->Line_15 $$ cacheLog.debug("Daily backup file ''[ CD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_15 $$ cacheLog.debug("Daily backup file ''[ FD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_18 $$ if (!daily.renameTo(target)) [ CD ]
Line_18 $$ if (!daily.renameTo(target)) -->Line_18 $$ if (!daily.renameTo(target)) [ CD ]
Line_18 $$ if (!daily.renameTo(target)) -->Line_18 $$ if (!daily.renameTo(target)) [ CD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_18 $$ if (!daily.renameTo(target)) [ FD ]
Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))-->Line_18 $$ if (!daily.renameTo(target)) [ FD ]
Line_18 $$ if (!daily.renameTo(target)) -->Line_19 $$ sortBackups()[ CD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_20 $$ throw new CacheOperationException("There was an error moving ''[ FD ]
Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))-->Line_20 $$ throw new CacheOperationException("There was an error moving ''[ FD ]
Line_18 $$ if (!daily.renameTo(target)) -->Line_22 $$ cacheLog.debug("Moved " + daily.getAbsolutePath() + " to " + target.getAbsolutePath())[ CD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_22 $$ cacheLog.debug("Moved " + daily.getAbsolutePath() + " to " + target.getAbsolutePath())[ FD ]
Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))-->Line_22 $$ cacheLog.debug("Moved " + daily.getAbsolutePath() + " to " + target.getAbsolutePath())[ FD ]
Line_4 $$ File cacheFolder = getBackupFolder()-->Line_26 $$ throw new ConfigurationException("Security Manager has denied read/write access to daily backup files in ''[ FD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_28 $$ File beehiveArchive = getCachedArchive()[ CD ]
Line_28 $$ File beehiveArchive = getCachedArchive()-->Line_28 $$ File beehiveArchive = getCachedArchive()[ CD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_29 $$ File tempBackupArchive = new File(cacheFolder, BEEHIVE_ARCHIVE_NAME + ".tmp")[ CD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_30 $$ BufferedInputStream archiveReader = null[ CD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_31 $$ BufferedOutputStream tempBackupWriter = null[ CD ]
Line_30 $$ BufferedInputStream archiveReader = null-->Line_33 $$ archiveReader = new BufferedInputStream(new FileInputStream(beehiveArchive))[ FD ]
Line_33 $$ archiveReader = new BufferedInputStream(new FileInputStream(beehiveArchive))-->Line_33 $$ archiveReader = new BufferedInputStream(new FileInputStream(beehiveArchive))[ FD ]
Line_31 $$ BufferedOutputStream tempBackupWriter = null-->Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))[ FD ]
Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))-->Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))[ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_35 $$ int len, bytecount = 0-->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ CD ]
Line_30 $$ BufferedInputStream archiveReader = null-->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_33 $$ archiveReader = new BufferedInputStream(new FileInputStream(beehiveArchive))-->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_37 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_36 $$ final int BUFFER_SIZE = 4096-->Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) [ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ CD ]
Line_31 $$ BufferedOutputStream tempBackupWriter = null-->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ FD ]
Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))-->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ FD ]
Line_37 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ FD ]
Line_35 $$ int len, bytecount = 0-->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_40 $$ bytecount += len[ CD ]
Line_40 $$ bytecount += len-->Line_40 $$ bytecount += len[ FD ]
Line_35 $$ int len, bytecount = 0-->Line_40 $$ bytecount += len[ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_40 $$ bytecount += len[ FD ]
Line_35 $$ int len, bytecount = 0-->Line_40 $$ bytecount += len[ FD ]
Line_31 $$ BufferedOutputStream tempBackupWriter = null-->Line_42 $$ tempBackupWriter.flush()[ FD ]
Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))-->Line_42 $$ tempBackupWriter.flush()[ FD ]
Line_43 $$ long originalFileSize = beehiveArchive.length()-->Line_43 $$ long originalFileSize = beehiveArchive.length()[ CD ]
Line_28 $$ File beehiveArchive = getCachedArchive()-->Line_43 $$ long originalFileSize = beehiveArchive.length()[ FD ]
Line_43 $$ long originalFileSize = beehiveArchive.length()-->Line_44 $$ if (originalFileSize != bytecount) [ FD ]
Line_40 $$ bytecount += len-->Line_44 $$ if (originalFileSize != bytecount) [ FD ]
Line_35 $$ int len, bytecount = 0-->Line_44 $$ if (originalFileSize != bytecount) [ FD ]
Line_28 $$ File beehiveArchive = getCachedArchive()-->Line_47 $$ cacheLog.debug("Finished copying ''[ FD ]
Line_29 $$ File tempBackupArchive = new File(cacheFolder, BEEHIVE_ARCHIVE_NAME + ".tmp")-->Line_47 $$ cacheLog.debug("Finished copying ''[ FD ]
Line_30 $$ BufferedInputStream archiveReader = null-->Line_53 $$ if (archiveReader != null) [ FD ]
Line_33 $$ archiveReader = new BufferedInputStream(new FileInputStream(beehiveArchive))-->Line_53 $$ if (archiveReader != null) [ FD ]
Line_30 $$ BufferedInputStream archiveReader = null-->Line_55 $$ archiveReader.close()[ FD ]
Line_33 $$ archiveReader = new BufferedInputStream(new FileInputStream(beehiveArchive))-->Line_55 $$ archiveReader.close()[ FD ]
Line_28 $$ File beehiveArchive = getCachedArchive()-->Line_57 $$ cacheLog.warn("Failed to close stream to ''[ FD ]
Line_31 $$ BufferedOutputStream tempBackupWriter = null-->Line_60 $$ if (tempBackupWriter != null) [ FD ]
Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))-->Line_60 $$ if (tempBackupWriter != null) [ FD ]
Line_31 $$ BufferedOutputStream tempBackupWriter = null-->Line_62 $$ tempBackupWriter.close()[ FD ]
Line_34 $$ tempBackupWriter = new BufferedOutputStream(new FileOutputStream(tempBackupArchive))-->Line_62 $$ tempBackupWriter.close()[ FD ]
Line_29 $$ File tempBackupArchive = new File(cacheFolder, BEEHIVE_ARCHIVE_NAME + ".tmp")-->Line_64 $$ cacheLog.warn("Failed to close stream to ''[ FD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_68 $$ validateArchive(tempBackupArchive)[ CD ]
Line_29 $$ File tempBackupArchive = new File(cacheFolder, BEEHIVE_ARCHIVE_NAME + ".tmp")-->Line_68 $$ validateArchive(tempBackupArchive)[ FD ]
Line_2 $$ private void makeDailyBackup() throws CacheOperationException, ConfigurationException -->Line_69 $$ File newestDaily = getNewestDailyBackupFile()[ CD ]
Line_69 $$ File newestDaily = getNewestDailyBackupFile()-->Line_69 $$ File newestDaily = getNewestDailyBackupFile()[ CD ]
Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) -->Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) [ CD ]
Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) -->Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) [ CD ]
Line_29 $$ File tempBackupArchive = new File(cacheFolder, BEEHIVE_ARCHIVE_NAME + ".tmp")-->Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) [ FD ]
Line_69 $$ File newestDaily = getNewestDailyBackupFile()-->Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) [ FD ]
Line_29 $$ File tempBackupArchive = new File(cacheFolder, BEEHIVE_ARCHIVE_NAME + ".tmp")-->Line_72 $$ throw new CacheOperationException("Error moving ''[ FD ]
Line_69 $$ File newestDaily = getNewestDailyBackupFile()-->Line_72 $$ throw new CacheOperationException("Error moving ''[ FD ]
Line_71 $$ if (!tempBackupArchive.renameTo(newestDaily)) -->Line_74 $$ cacheLog.info("Backup complete. Saved in ''[ CD ]
Line_69 $$ File newestDaily = getNewestDailyBackupFile()-->Line_74 $$ cacheLog.info("Backup complete. Saved in ''[ FD ]
Line_69 $$ File newestDaily = getNewestDailyBackupFile()-->Line_77 $$ throw new ConfigurationException("Security Manager has denied write access to ''[ FD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) [ FD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) [ FD ]
Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) -->Line_11 $$ for (int index = MAX_DAILY_BACKUPS - 1; index > 0; index--) [ FD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_14 $$ if (!daily.exists()) [ FD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_15 $$ cacheLog.debug("Daily backup file ''[ FD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_18 $$ if (!daily.renameTo(target)) [ FD ]
Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))-->Line_18 $$ if (!daily.renameTo(target)) [ FD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_20 $$ throw new CacheOperationException("There was an error moving ''[ FD ]
Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))-->Line_20 $$ throw new CacheOperationException("There was an error moving ''[ FD ]
Line_12 $$ File daily = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + index)-->Line_22 $$ cacheLog.debug("Moved " + daily.getAbsolutePath() + " to " + target.getAbsolutePath())[ FD ]
Line_13 $$ File target = new File(cacheFolder, DAILY_BACKUP_PREFIX + "." + (index + 1))-->Line_22 $$ cacheLog.debug("Moved " + daily.getAbsolutePath() + " to " + target.getAbsolutePath())[ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_39 $$ tempBackupWriter.write(buffer, 0, len)[ FD ]
Line_38 $$ while ((len = archiveReader.read(buffer, 0, BUFFER_SIZE)) != -1) -->Line_40 $$ bytecount += len[ FD ]
