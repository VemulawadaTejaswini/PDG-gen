Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String obfuscateString(String string) [ CD ]
Line_2 $$ public String obfuscateString(String string) -->Line_3 $$ String obfuscatedString = null[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance(ENCRYPTION_ALGORITHM)-->Line_5 $$ MessageDigest md = MessageDigest.getInstance(ENCRYPTION_ALGORITHM)[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance(ENCRYPTION_ALGORITHM)-->Line_6 $$ md.update(string.getBytes())[ FD ]
Line_2 $$ public String obfuscateString(String string) -->Line_6 $$ md.update(string.getBytes())[ FD ]
Line_7 $$ byte[] digest = md.digest()-->Line_7 $$ byte[] digest = md.digest()[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance(ENCRYPTION_ALGORITHM)-->Line_7 $$ byte[] digest = md.digest()[ FD ]
Line_3 $$ String obfuscatedString = null-->Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')[ FD ]
Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')-->Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')[ FD ]
Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')-->Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')[ CD ]
Line_7 $$ byte[] digest = md.digest()-->Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')[ FD ]
Line_3 $$ String obfuscatedString = null-->Line_11 $$ obfuscatedString = LABEL_FAILED_TO_OBFUSCATE[ FD ]
Line_8 $$ obfuscatedString = new String(Base64.encode(digest)).replace(DELIM_PATH, '=')-->Line_11 $$ obfuscatedString = LABEL_FAILED_TO_OBFUSCATE[ FD ]
Line_11 $$ obfuscatedString = LABEL_FAILED_TO_OBFUSCATE-->Line_11 $$ obfuscatedString = LABEL_FAILED_TO_OBFUSCATE[ FD ]
Line_2 $$ public String obfuscateString(String string) -->Line_13 $$ return obfuscatedString[ CD ]
