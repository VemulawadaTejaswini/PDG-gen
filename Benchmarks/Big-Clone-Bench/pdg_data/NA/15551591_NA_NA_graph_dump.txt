Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void doIt() throws GlobalMapperTileTranslatorException [ CD ]
Line_2 $$ public void doIt() throws GlobalMapperTileTranslatorException -->Line_3 $$ if (StringUtils.isEmpty(dstGuid))[ CD ]
Line_3 $$ if (StringUtils.isEmpty(dstGuid))-->Line_3 $$ if (StringUtils.isEmpty(dstGuid))[ CD ]
Line_2 $$ public void doIt() throws GlobalMapperTileTranslatorException -->Line_4 $$ if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists())[ CD ]
Line_4 $$ if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists())-->Line_4 $$ if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists())[ CD ]
Line_4 $$ if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists())-->Line_4 $$ if (srcDir == null || !srcDir.isDirectory() || !srcDir.exists())[ CD ]
Line_7 $$ final XFile dstDir = new XFile(dstParentDir, dstGuid)-->Line_8 $$ dstDir.mkdir()[ FD ]
Line_10 $$ if (srcDir.isDirectory() && srcDir.exists()) -->Line_11 $$ for (int i = 0; i < 18; i++) [ CD ]
Line_10 $$ if (srcDir.isDirectory() && srcDir.exists()) -->Line_10 $$ if (srcDir.isDirectory() && srcDir.exists()) [ CD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_11 $$ for (int i = 0; i < 18; i++) [ CD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_11 $$ for (int i = 0; i < 18; i++) [ CD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_11 $$ for (int i = 0; i < 18; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)[ CD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ CD ]
Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ CD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ FD ]
Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ CD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ FD ]
Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())-->Line_13 $$ zDir = new XFile(srcDir, "Z" + i)[ CD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_13 $$ zDir = new XFile(srcDir, "Z" + i)[ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_13 $$ zDir = new XFile(srcDir, "Z" + i)[ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ CD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_15 $$ for (String fileName : zDir.list()) [ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_15 $$ for (String fileName : zDir.list()) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) [ FD ]
Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) -->Line_18 $$ final String[] yx[ CD ]
Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) -->Line_19 $$ if (fileName.indexOf('.') > 0) [ CD ]
Line_15 $$ for (String fileName : zDir.list()) -->Line_19 $$ if (fileName.indexOf('.') > 0) [ FD ]
Line_19 $$ if (fileName.indexOf('.') > 0) -->Line_20 $$ String[] fileExt = fileName.split("\\.")[ CD ]
Line_20 $$ String[] fileExt = fileName.split("\\.")-->Line_20 $$ String[] fileExt = fileName.split("\\.")[ CD ]
Line_15 $$ for (String fileName : zDir.list()) -->Line_20 $$ String[] fileExt = fileName.split("\\.")[ FD ]
Line_19 $$ if (fileName.indexOf('.') > 0) -->Line_21 $$ yx = fileExt[0].split("_")[ CD ]
Line_18 $$ final String[] yx-->Line_21 $$ yx = fileExt[0].split("_")[ FD ]
Line_21 $$ yx = fileExt[0].split("_")-->Line_21 $$ yx = fileExt[0].split("_")[ FD ]
Line_21 $$ yx = fileExt[0].split("_")-->Line_21 $$ yx = fileExt[0].split("_")[ CD ]
Line_19 $$ if (fileName.indexOf('.') > 0) -->Line_22 $$ yx = fileName.split("_")[ CD ]
Line_18 $$ final String[] yx-->Line_22 $$ yx = fileName.split("_")[ FD ]
Line_21 $$ yx = fileExt[0].split("_")-->Line_22 $$ yx = fileName.split("_")[ FD ]
Line_22 $$ yx = fileName.split("_")-->Line_22 $$ yx = fileName.split("_")[ FD ]
Line_22 $$ yx = fileName.split("_")-->Line_22 $$ yx = fileName.split("_")[ CD ]
Line_15 $$ for (String fileName : zDir.list()) -->Line_22 $$ yx = fileName.split("_")[ FD ]
Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) -->Line_23 $$ if (yx.length > 1) [ CD ]
Line_23 $$ if (yx.length > 1) -->Line_24 $$ final int x = Integer.valueOf(yx[1])[ CD ]
Line_24 $$ final int x = Integer.valueOf(yx[1])-->Line_24 $$ final int x = Integer.valueOf(yx[1])[ CD ]
Line_23 $$ if (yx.length > 1) -->Line_25 $$ final int y = Integer.valueOf(yx[0])[ CD ]
Line_25 $$ final int y = Integer.valueOf(yx[0])-->Line_25 $$ final int y = Integer.valueOf(yx[0])[ CD ]
Line_23 $$ if (yx.length > 1) -->Line_26 $$ z = 17 - i[ CD ]
Line_26 $$ z = 17 - i-->Line_26 $$ z = 17 - i[ FD ]
Line_6 $$ int z-->Line_26 $$ z = 17 - i[ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_26 $$ z = 17 - i[ FD ]
Line_23 $$ if (yx.length > 1) -->Line_27 $$ XFileOutputStream out = null[ CD ]
Line_23 $$ if (yx.length > 1) -->Line_28 $$ XFileInputStream in = null[ CD ]
Line_31 $$ if (override || !(isExist(outFile, file))) -->Line_31 $$ if (override || !(isExist(outFile, file))) [ CD ]
Line_30 $$ final XFile outFile = new XFile(dstDir, x + "_" + y + "_" + z)-->Line_31 $$ if (override || !(isExist(outFile, file))) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_31 $$ if (override || !(isExist(outFile, file))) [ FD ]
Line_31 $$ if (override || !(isExist(outFile, file))) -->Line_32 $$ out = new XFileOutputStream(outFile)[ CD ]
Line_27 $$ XFileOutputStream out = null-->Line_32 $$ out = new XFileOutputStream(outFile)[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_32 $$ out = new XFileOutputStream(outFile)[ FD ]
Line_31 $$ if (override || !(isExist(outFile, file))) -->Line_33 $$ in = new XFileInputStream(file)[ CD ]
Line_28 $$ XFileInputStream in = null-->Line_33 $$ in = new XFileInputStream(file)[ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_33 $$ in = new XFileInputStream(file)[ FD ]
Line_31 $$ if (override || !(isExist(outFile, file))) -->Line_34 $$ IOUtils.copy(in, out)[ CD ]
Line_28 $$ XFileInputStream in = null-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_27 $$ XFileOutputStream out = null-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_36 $$ if (n % 999 == 0) -->Line_37 $$ logger.info(i + " tiles were copied from 'incoming'")[ CD ]
Line_9 $$ int n = 1-->Line_42 $$ n++[ FD ]
Line_27 $$ XFileOutputStream out = null-->Line_44 $$ if (out != null) [ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_44 $$ if (out != null) [ FD ]
Line_44 $$ if (out != null) -->Line_45 $$ out.flush()[ CD ]
Line_27 $$ XFileOutputStream out = null-->Line_45 $$ out.flush()[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_45 $$ out.flush()[ FD ]
Line_44 $$ if (out != null) -->Line_46 $$ out.close()[ CD ]
Line_27 $$ XFileOutputStream out = null-->Line_46 $$ out.close()[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_46 $$ out.close()[ FD ]
Line_28 $$ XFileInputStream in = null-->Line_48 $$ if (in != null) [ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_48 $$ if (in != null) [ FD ]
Line_48 $$ if (in != null) -->Line_49 $$ in.close()[ CD ]
Line_28 $$ XFileInputStream in = null-->Line_49 $$ in.close()[ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_49 $$ in.close()[ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_11 $$ for (int i = 0; i < 18; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_11 $$ for (int i = 0; i < 18; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_11 $$ for (int i = 0; i < 18; i++) [ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_13 $$ if (!zDir.isDirectory() || !zDir.exists())[ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_14 $$ if (zDir.isDirectory() && zDir.exists()) [ FD ]
Line_12 $$ XFile zDir = new XFile(srcDir, "z" + i)-->Line_15 $$ for (String fileName : zDir.list()) [ FD ]
Line_13 $$ zDir = new XFile(srcDir, "Z" + i)-->Line_15 $$ for (String fileName : zDir.list()) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_17 $$ if (file.isFile() && file.exists() && file.canRead()) [ FD ]
Line_15 $$ for (String fileName : zDir.list()) -->Line_19 $$ if (fileName.indexOf('.') > 0) [ FD ]
Line_15 $$ for (String fileName : zDir.list()) -->Line_20 $$ String[] fileExt = fileName.split("\\.")[ FD ]
Line_15 $$ for (String fileName : zDir.list()) -->Line_22 $$ yx = fileName.split("_")[ FD ]
Line_11 $$ for (int i = 0; i < 18; i++) -->Line_26 $$ z = 17 - i[ FD ]
Line_30 $$ final XFile outFile = new XFile(dstDir, x + "_" + y + "_" + z)-->Line_31 $$ if (override || !(isExist(outFile, file))) [ FD ]
Line_16 $$ XFile file = new XFile(zDir, fileName)-->Line_31 $$ if (override || !(isExist(outFile, file))) [ FD ]
Line_28 $$ XFileInputStream in = null-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_27 $$ XFileOutputStream out = null-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_34 $$ IOUtils.copy(in, out)[ FD ]
Line_27 $$ XFileOutputStream out = null-->Line_44 $$ if (out != null) [ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_44 $$ if (out != null) [ FD ]
Line_27 $$ XFileOutputStream out = null-->Line_45 $$ out.flush()[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_45 $$ out.flush()[ FD ]
Line_27 $$ XFileOutputStream out = null-->Line_46 $$ out.close()[ FD ]
Line_32 $$ out = new XFileOutputStream(outFile)-->Line_46 $$ out.close()[ FD ]
Line_28 $$ XFileInputStream in = null-->Line_48 $$ if (in != null) [ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_48 $$ if (in != null) [ FD ]
Line_28 $$ XFileInputStream in = null-->Line_49 $$ in.close()[ FD ]
Line_33 $$ in = new XFileInputStream(file)-->Line_49 $$ in.close()[ FD ]
