Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException [ CD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_3 $$ if (!localFile.exists()) [ CD ]
Line_3 $$ if (!localFile.exists()) -->Line_3 $$ if (!localFile.exists()) [ CD ]
Line_3 $$ if (!localFile.exists()) -->Line_3 $$ if (!localFile.exists()) [ CD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_3 $$ if (!localFile.exists()) [ FD ]
Line_3 $$ if (!localFile.exists()) -->Line_4 $$ FTPClient ftp = new FTPClient()[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_7 $$ ftp.configure(conf)[ FD ]
Line_6 $$ FTPClientConfig conf = new FTPClientConfig(FTPClientConfig.SYST_UNIX)-->Line_7 $$ ftp.configure(conf)[ FD ]
Line_8 $$ String hostname = connector.getUrl().getHost()-->Line_8 $$ String hostname = connector.getUrl().getHost()[ CD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_8 $$ String hostname = connector.getUrl().getHost()[ FD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_9 $$ ftp.connect(hostname)[ FD ]
Line_8 $$ String hostname = connector.getUrl().getHost()-->Line_9 $$ ftp.connect(hostname)[ FD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_11 $$ log.info(ftp.getReplyString())[ FD ]
Line_12 $$ boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword())-->Line_12 $$ boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword())[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_12 $$ boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword())[ FD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_12 $$ boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword())[ FD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_12 $$ boolean loggedIn = ftp.login(connector.getUsername(), connector.getPassword())[ FD ]
Line_13 $$ if (loggedIn) -->Line_14 $$ log.info("downloading file: " + remotePath)[ CD ]
Line_13 $$ if (loggedIn) -->Line_15 $$ ftp.setFileTransferMode(FTPClient.BINARY_FILE_TYPE)[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_15 $$ ftp.setFileTransferMode(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_13 $$ if (loggedIn) -->Line_16 $$ ftp.setFileType(FTPClient.BINARY_FILE_TYPE)[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_16 $$ ftp.setFileType(FTPClient.BINARY_FILE_TYPE)[ FD ]
Line_13 $$ if (loggedIn) -->Line_17 $$ ftp.enterLocalPassiveMode()[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_17 $$ ftp.enterLocalPassiveMode()[ FD ]
Line_13 $$ if (loggedIn) -->Line_18 $$ final long fileSize = getFileSize(ftp, remotePath)[ CD ]
Line_18 $$ final long fileSize = getFileSize(ftp, remotePath)-->Line_18 $$ final long fileSize = getFileSize(ftp, remotePath)[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_18 $$ final long fileSize = getFileSize(ftp, remotePath)[ FD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_18 $$ final long fileSize = getFileSize(ftp, remotePath)[ FD ]
Line_13 $$ if (loggedIn) -->Line_19 $$ FileOutputStream dfile = new FileOutputStream(localFile)[ CD ]
Line_13 $$ if (loggedIn) -->Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() [ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() [ FD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() [ FD ]
Line_19 $$ FileOutputStream dfile = new FileOutputStream(localFile)-->Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() [ FD ]
Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() -->Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)[ CD ]
Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)-->Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)[ CD ]
Line_18 $$ final long fileSize = getFileSize(ftp, remotePath)-->Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)[ FD ]
Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() -->Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)[ FD ]
Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() -->Line_24 $$ int delta = percent - worked[ CD ]
Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() -->Line_25 $$ if (delta > 0) [ CD ]
Line_24 $$ int delta = percent - worked-->Line_25 $$ if (delta > 0) [ FD ]
Line_25 $$ if (delta > 0) -->Line_26 $$ if (monitor != null) [ CD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_26 $$ if (monitor != null) [ FD ]
Line_26 $$ if (monitor != null) -->Line_27 $$ monitor.worked(delta)[ CD ]
Line_2 $$ protected static void download(FtpSiteConnector connector, File localFile, String remotePath, final IProgressMonitor monitor) throws FtpException -->Line_27 $$ monitor.worked(delta)[ FD ]
Line_24 $$ int delta = percent - worked-->Line_27 $$ monitor.worked(delta)[ FD ]
Line_25 $$ if (delta > 0) -->Line_29 $$ worked = percent[ CD ]
Line_29 $$ worked = percent-->Line_29 $$ worked = percent[ FD ]
Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)-->Line_29 $$ worked = percent[ FD ]
Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() -->Line_35 $$ long percent = (totalBytesTransferred * 100) / totalBytes[ CD ]
Line_20 $$ ftp.retrieveFile(remotePath, dfile, new CopyStreamListener() -->Line_36 $$ return Long.valueOf(percent).intValue()[ CD ]
Line_36 $$ return Long.valueOf(percent).intValue()-->Line_36 $$ return Long.valueOf(percent).intValue()[ CD ]
Line_35 $$ long percent = (totalBytesTransferred * 100) / totalBytes-->Line_36 $$ return Long.valueOf(percent).intValue()[ FD ]
Line_23 $$ int percent = percent(fileSize, totalBytesTransferred)-->Line_36 $$ return Long.valueOf(percent).intValue()[ FD ]
Line_13 $$ if (loggedIn) -->Line_39 $$ dfile.flush()[ CD ]
Line_19 $$ FileOutputStream dfile = new FileOutputStream(localFile)-->Line_39 $$ dfile.flush()[ FD ]
Line_13 $$ if (loggedIn) -->Line_40 $$ dfile.close()[ CD ]
Line_19 $$ FileOutputStream dfile = new FileOutputStream(localFile)-->Line_40 $$ dfile.close()[ FD ]
Line_13 $$ if (loggedIn) -->Line_41 $$ ftp.logout()[ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_41 $$ ftp.logout()[ FD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_45 $$ ftp.disconnect()[ FD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_53 $$ if (ftp.isConnected()) [ FD ]
Line_53 $$ if (ftp.isConnected()) -->Line_53 $$ if (ftp.isConnected()) [ CD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_53 $$ if (ftp.isConnected()) [ FD ]
Line_4 $$ FTPClient ftp = new FTPClient()-->Line_55 $$ ftp.disconnect()[ FD ]
