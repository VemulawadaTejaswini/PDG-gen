Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException [ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_3 $$ if (entry.isDirectory()) [ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_3 $$ if (entry.isDirectory()) [ FD ]
Line_3 $$ if (entry.isDirectory()) -->Line_3 $$ if (entry.isDirectory()) [ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_3 $$ if (entry.isDirectory()) [ FD ]
Line_3 $$ if (entry.isDirectory()) -->Line_4 $$ createDir(new File(outputDir, entry.getName()))[ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_4 $$ createDir(new File(outputDir, entry.getName()))[ FD ]
Line_3 $$ if (entry.isDirectory()) -->Line_5 $$ return[ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_7 $$ File outputFile = new File(outputDir, entry.getName())[ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_7 $$ File outputFile = new File(outputDir, entry.getName())[ FD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_8 $$ if (!outputFile.getParentFile().exists()) [ CD ]
Line_8 $$ if (!outputFile.getParentFile().exists()) -->Line_8 $$ if (!outputFile.getParentFile().exists()) [ CD ]
Line_8 $$ if (!outputFile.getParentFile().exists()) -->Line_8 $$ if (!outputFile.getParentFile().exists()) [ CD ]
Line_7 $$ File outputFile = new File(outputDir, entry.getName())-->Line_8 $$ if (!outputFile.getParentFile().exists()) [ FD ]
Line_8 $$ if (!outputFile.getParentFile().exists()) -->Line_9 $$ createDir(outputFile.getParentFile())[ CD ]
Line_7 $$ File outputFile = new File(outputDir, entry.getName())-->Line_9 $$ createDir(outputFile.getParentFile())[ FD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_11 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))[ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_11 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_11 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_12 $$ BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile))[ CD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_13 $$ IOUtils.copy(inputStream, outputStream)[ CD ]
Line_11 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_13 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_12 $$ BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile))-->Line_13 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_14 $$ outputStream.close()[ CD ]
Line_12 $$ BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile))-->Line_14 $$ outputStream.close()[ FD ]
Line_2 $$ private void unzipEntry(ZipFile zipfile, ZipEntry entry, File outputDir) throws IOException -->Line_15 $$ inputStream.close()[ CD ]
Line_11 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_15 $$ inputStream.close()[ FD ]
