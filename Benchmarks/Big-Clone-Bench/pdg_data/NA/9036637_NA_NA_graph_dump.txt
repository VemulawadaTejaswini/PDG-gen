Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) [ CD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) [ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) [ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_4 $$ logger.debug("Report exception to devs...")[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()[ CD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")[ CD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_7 $$ int ln = 0[ CD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_8 $$ for (StackTraceElement el : ex.getStackTrace()) [ FD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_7 $$ int ln = 0-->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_8 $$ for (StackTraceElement el : ex.getStackTrace()) -->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_8 $$ for (StackTraceElement el : ex.getStackTrace()) -->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_8 $$ for (StackTraceElement el : ex.getStackTrace()) -->Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_11 $$ data += "&lines=" + ln[ CD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_11 $$ data += "&lines=" + ln[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_11 $$ data += "&lines=" + ln[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_11 $$ data += "&lines=" + ln[ FD ]
Line_11 $$ data += "&lines=" + ln-->Line_11 $$ data += "&lines=" + ln[ FD ]
Line_7 $$ int ln = 0-->Line_11 $$ data += "&lines=" + ln[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ CD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ FD ]
Line_11 $$ data += "&lines=" + ln-->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ FD ]
Line_12 $$ data += "&Suppl-Description=" + ex.toString()-->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ FD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_12 $$ data += "&Suppl-Description=" + ex.toString()[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ CD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_11 $$ data += "&lines=" + ln-->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_12 $$ data += "&Suppl-Description=" + ex.toString()-->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ CD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_11 $$ data += "&lines=" + ln-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_12 $$ data += "&Suppl-Description=" + ex.toString()-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)-->Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_15 $$ if (suppl != null) [ CD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_15 $$ if (suppl != null) [ FD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_16 $$ for (String key : suppl.keySet()) [ FD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_11 $$ data += "&lines=" + ln-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_12 $$ data += "&Suppl-Description=" + ex.toString()-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)-->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_2 $$ public static boolean reportException(Throwable ex, HashMap<String, String> suppl) -->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_16 $$ for (String key : suppl.keySet()) -->Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)[ FD ]
Line_22 $$ URLConnection conn = url.openConnection()-->Line_22 $$ URLConnection conn = url.openConnection()[ CD ]
Line_21 $$ URL url = new URL("http://www.merobase.com:7777/org.code_conjurer.udc/CrashReport")-->Line_22 $$ URLConnection conn = url.openConnection()[ FD ]
Line_22 $$ URLConnection conn = url.openConnection()-->Line_23 $$ conn.setDoOutput(true)[ FD ]
Line_22 $$ URLConnection conn = url.openConnection()-->Line_24 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_24 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_25 $$ writer.write(data)[ FD ]
Line_5 $$ String data = "reportType=exception&" + "message=" + ex.getMessage()-->Line_25 $$ writer.write(data)[ FD ]
Line_6 $$ data += "&build=" + Platform.getBundle("de.uni_mannheim.swt.codeconjurer").getHeaders().get("Bundle-Version")-->Line_25 $$ writer.write(data)[ FD ]
Line_9 $$ data += "&st_line_" + ++ln + "=" + el.getClassName() + "#" + el.getMethodName() + "<" + el.getLineNumber() + ">"-->Line_25 $$ writer.write(data)[ FD ]
Line_11 $$ data += "&lines=" + ln-->Line_25 $$ writer.write(data)[ FD ]
Line_12 $$ data += "&Suppl-Description=" + ex.toString()-->Line_25 $$ writer.write(data)[ FD ]
Line_13 $$ data += "&Suppl-Server=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_SERVER)-->Line_25 $$ writer.write(data)[ FD ]
Line_14 $$ data += "&Suppl-User=" + Activator.getDefault().getPreferenceStore().getString(PreferenceConstants.P_USERNAME)-->Line_25 $$ writer.write(data)[ FD ]
Line_17 $$ data += "&Suppl-" + key + "=" + suppl.get(key)-->Line_25 $$ writer.write(data)[ FD ]
Line_24 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_26 $$ writer.flush()[ FD ]
Line_22 $$ URLConnection conn = url.openConnection()-->Line_28 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_30 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_29 $$ String line-->Line_30 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_30 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_28 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_30 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_30 $$ while ((line = reader.readLine()) != null) -->Line_31 $$ answer.append(line + "\r\n")[ CD ]
Line_27 $$ StringBuffer answer = new StringBuffer()-->Line_31 $$ answer.append(line + "\r\n")[ FD ]
Line_24 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_33 $$ writer.close()[ FD ]
Line_28 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_34 $$ reader.close()[ FD ]
Line_27 $$ StringBuffer answer = new StringBuffer()-->Line_35 $$ logger.debug(answer.toString())[ FD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_40 $$ return true[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_42 $$ logger.debug("Reporting not wished!")[ CD ]
Line_3 $$ if (Activator.getDefault().getPreferenceStore().getBoolean(PreferenceConstants.P_CRASH_REPORTING)) -->Line_43 $$ return false[ CD ]
