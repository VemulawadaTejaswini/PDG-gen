Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private ArrayList<Stock> fetchStockData(Stock[] stocks) throws IOException [ CD ]
Line_2 $$ private ArrayList<Stock> fetchStockData(Stock[] stocks) throws IOException -->Line_3 $$ Log.d(TAG, "Fetching stock data from Yahoo")[ CD ]
Line_2 $$ private ArrayList<Stock> fetchStockData(Stock[] stocks) throws IOException -->Line_4 $$ ArrayList<Stock> newStocks = new ArrayList<Stock>(stocks.length)[ CD ]
Line_2 $$ private ArrayList<Stock> fetchStockData(Stock[] stocks) throws IOException -->Line_5 $$ if (stocks.length > 0) [ CD ]
Line_5 $$ if (stocks.length > 0) -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append(stock.getSymbol())[ FD ]
Line_7 $$ for (Stock stock : stocks) -->Line_8 $$ sb.append(stock.getSymbol())[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append('+')[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_11 $$ sb.deleteCharAt(sb.length() - 1)[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.deleteCharAt(sb.length() - 1)[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.deleteCharAt(sb.length() - 1)[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_12 $$ String urlStr = "http://finance.yahoo.com/d/quotes.csv?f=sb2n&s=" + sb.toString()[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ String urlStr = "http://finance.yahoo.com/d/quotes.csv?f=sb2n&s=" + sb.toString()[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_13 $$ HttpClient client = new DefaultHttpClient()[ CD ]
Line_5 $$ if (stocks.length > 0) -->Line_14 $$ HttpGet request = new HttpGet(urlStr.toString())[ CD ]
Line_12 $$ String urlStr = "http://finance.yahoo.com/d/quotes.csv?f=sb2n&s=" + sb.toString()-->Line_14 $$ HttpGet request = new HttpGet(urlStr.toString())[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_15 $$ HttpResponse response = client.execute(request)[ CD ]
Line_15 $$ HttpResponse response = client.execute(request)-->Line_15 $$ HttpResponse response = client.execute(request)[ CD ]
Line_13 $$ HttpClient client = new DefaultHttpClient()-->Line_15 $$ HttpResponse response = client.execute(request)[ FD ]
Line_14 $$ HttpGet request = new HttpGet(urlStr.toString())-->Line_15 $$ HttpResponse response = client.execute(request)[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_16 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))[ CD ]
Line_15 $$ HttpResponse response = client.execute(request)-->Line_16 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_17 $$ String line = reader.readLine()[ CD ]
Line_17 $$ String line = reader.readLine()-->Line_17 $$ String line = reader.readLine()[ CD ]
Line_16 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))-->Line_17 $$ String line = reader.readLine()[ FD ]
Line_5 $$ if (stocks.length > 0) -->Line_18 $$ int i = 0[ CD ]
Line_5 $$ if (stocks.length > 0) -->Line_19 $$ Log.d(TAG, "Parsing stock data from Yahoo")[ CD ]
Line_5 $$ if (stocks.length > 0) -->Line_20 $$ while (line != null) [ CD ]
Line_5 $$ if (stocks.length > 0) -->Line_5 $$ if (stocks.length > 0) [ CD ]
Line_17 $$ String line = reader.readLine()-->Line_20 $$ while (line != null) [ FD ]
Line_20 $$ while (line != null) -->Line_21 $$ Log.d(TAG, "Parsing: " + line)[ CD ]
Line_20 $$ while (line != null) -->Line_22 $$ String[] values = line.split(",")[ CD ]
Line_22 $$ String[] values = line.split(",")-->Line_22 $$ String[] values = line.split(",")[ CD ]
Line_17 $$ String line = reader.readLine()-->Line_22 $$ String[] values = line.split(",")[ FD ]
Line_20 $$ while (line != null) -->Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())[ CD ]
Line_20 $$ while (line != null) -->Line_24 $$ stock.setCurrentPrice(Double.parseDouble(values[1]))[ CD ]
Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())-->Line_24 $$ stock.setCurrentPrice(Double.parseDouble(values[1]))[ FD ]
Line_7 $$ for (Stock stock : stocks) -->Line_24 $$ stock.setCurrentPrice(Double.parseDouble(values[1]))[ FD ]
Line_20 $$ while (line != null) -->Line_25 $$ stock.setName(values[2])[ CD ]
Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())-->Line_25 $$ stock.setName(values[2])[ FD ]
Line_7 $$ for (Stock stock : stocks) -->Line_25 $$ stock.setName(values[2])[ FD ]
Line_20 $$ while (line != null) -->Line_26 $$ Log.d(TAG, "Parsed Stock: " + stock)[ CD ]
Line_20 $$ while (line != null) -->Line_27 $$ newStocks.add(stock)[ CD ]
Line_4 $$ ArrayList<Stock> newStocks = new ArrayList<Stock>(stocks.length)-->Line_27 $$ newStocks.add(stock)[ FD ]
Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())-->Line_27 $$ newStocks.add(stock)[ FD ]
Line_7 $$ for (Stock stock : stocks) -->Line_27 $$ newStocks.add(stock)[ FD ]
Line_20 $$ while (line != null) -->Line_28 $$ line = reader.readLine()[ CD ]
Line_28 $$ line = reader.readLine()-->Line_28 $$ line = reader.readLine()[ FD ]
Line_17 $$ String line = reader.readLine()-->Line_28 $$ line = reader.readLine()[ FD ]
Line_28 $$ line = reader.readLine()-->Line_28 $$ line = reader.readLine()[ CD ]
Line_16 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))-->Line_28 $$ line = reader.readLine()[ FD ]
Line_20 $$ while (line != null) -->Line_29 $$ i++[ CD ]
Line_18 $$ int i = 0-->Line_29 $$ i++[ FD ]
Line_2 $$ private ArrayList<Stock> fetchStockData(Stock[] stocks) throws IOException -->Line_32 $$ return newStocks[ CD ]
Line_28 $$ line = reader.readLine()-->Line_20 $$ while (line != null) [ FD ]
Line_28 $$ line = reader.readLine()-->Line_20 $$ while (line != null) [ FD ]
Line_28 $$ line = reader.readLine()-->Line_22 $$ String[] values = line.split(",")[ FD ]
Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())-->Line_24 $$ stock.setCurrentPrice(Double.parseDouble(values[1]))[ FD ]
Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())-->Line_25 $$ stock.setName(values[2])[ FD ]
Line_23 $$ Stock stock = new Stock(stocks[i], stocks[i].getId())-->Line_27 $$ newStocks.add(stock)[ FD ]
