Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException [ CD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_4 $$ long now = 0[ CD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_5 $$ if (XmlRpc.debug) [ CD ]
Line_5 $$ if (XmlRpc.debug) -->Line_6 $$ System.err.println("Client calling procedure '" + method + "' with parameters " + params)[ CD ]
Line_5 $$ if (XmlRpc.debug) -->Line_7 $$ now = System.currentTimeMillis()[ CD ]
Line_4 $$ long now = 0-->Line_7 $$ now = System.currentTimeMillis()[ FD ]
Line_7 $$ now = System.currentTimeMillis()-->Line_7 $$ now = System.currentTimeMillis()[ FD ]
Line_7 $$ now = System.currentTimeMillis()-->Line_7 $$ now = System.currentTimeMillis()[ CD ]
Line_11 $$ if (buffer == null) -->Line_14 $$ buffer.reset()[ CD ]
Line_16 $$ XmlWriter writer = new XmlWriter(buffer)-->Line_17 $$ writeRequest(writer, method, params)[ FD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_17 $$ writeRequest(writer, method, params)[ FD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_17 $$ writeRequest(writer, method, params)[ FD ]
Line_16 $$ XmlWriter writer = new XmlWriter(buffer)-->Line_18 $$ writer.flush()[ FD ]
Line_19 $$ byte[] request = buffer.toByteArray()-->Line_19 $$ byte[] request = buffer.toByteArray()[ CD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_20 $$ URLConnection con = url.openConnection()[ CD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_21 $$ con.setDoInput(true)[ FD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_22 $$ con.setDoOutput(true)[ FD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_23 $$ con.setUseCaches(false)[ FD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_24 $$ con.setAllowUserInteraction(false)[ FD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_25 $$ con.setRequestProperty("Content-Length", Integer.toString(request.length))[ FD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_26 $$ con.setRequestProperty("Content-Type", "text/xml")[ FD ]
Line_27 $$ if (auth != null) -->Line_28 $$ con.setRequestProperty("Authorization", "Basic " + auth)[ CD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_28 $$ con.setRequestProperty("Authorization", "Basic " + auth)[ FD ]
Line_30 $$ OutputStream out = con.getOutputStream()-->Line_30 $$ OutputStream out = con.getOutputStream()[ CD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_30 $$ OutputStream out = con.getOutputStream()[ FD ]
Line_30 $$ OutputStream out = con.getOutputStream()-->Line_31 $$ out.write(request)[ FD ]
Line_19 $$ byte[] request = buffer.toByteArray()-->Line_31 $$ out.write(request)[ FD ]
Line_30 $$ OutputStream out = con.getOutputStream()-->Line_32 $$ out.flush()[ FD ]
Line_30 $$ OutputStream out = con.getOutputStream()-->Line_33 $$ out.close()[ FD ]
Line_34 $$ InputStream in = con.getInputStream()-->Line_34 $$ InputStream in = con.getInputStream()[ CD ]
Line_20 $$ URLConnection con = url.openConnection()-->Line_34 $$ InputStream in = con.getInputStream()[ FD ]
Line_34 $$ InputStream in = con.getInputStream()-->Line_35 $$ parse(in)[ FD ]
Line_37 $$ if (XmlRpc.debug) -->Line_38 $$ x.printStackTrace()[ CD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_42 $$ if (fault) [ CD ]
Line_42 $$ if (fault) -->Line_43 $$ XmlRpcException exception = null[ CD ]
Line_45 $$ Hashtable f = (Hashtable) result-->Line_46 $$ String faultString = (String) f.get("faultString")[ FD ]
Line_47 $$ int faultCode = Integer.parseInt(f.get("faultCode").toString())-->Line_47 $$ int faultCode = Integer.parseInt(f.get("faultCode").toString())[ CD ]
Line_45 $$ Hashtable f = (Hashtable) result-->Line_47 $$ int faultCode = Integer.parseInt(f.get("faultCode").toString())[ FD ]
Line_43 $$ XmlRpcException exception = null-->Line_48 $$ exception = new XmlRpcException(faultCode, faultString.trim())[ FD ]
Line_48 $$ exception = new XmlRpcException(faultCode, faultString.trim())-->Line_48 $$ exception = new XmlRpcException(faultCode, faultString.trim())[ FD ]
Line_46 $$ String faultString = (String) f.get("faultString")-->Line_48 $$ exception = new XmlRpcException(faultCode, faultString.trim())[ FD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_54 $$ if (XmlRpc.debug) [ CD ]
Line_54 $$ if (XmlRpc.debug) -->Line_55 $$ System.err.println("Spent " + (System.currentTimeMillis() - now) + " in request")[ CD ]
Line_2 $$ Object execute(String method, Vector params) throws XmlRpcException, IOException -->Line_57 $$ return result[ CD ]
