Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String getFileContents(String path) [ CD ]
Line_2 $$ public static String getFileContents(String path) -->Line_3 $$ BufferedReader buffReader = null[ CD ]
Line_2 $$ public static String getFileContents(String path) -->Line_4 $$ if (path.indexOf("://") != -1) [ CD ]
Line_2 $$ public static String getFileContents(String path) -->Line_4 $$ if (path.indexOf("://") != -1) [ FD ]
Line_4 $$ if (path.indexOf("://") != -1) -->Line_5 $$ URL url = null[ CD ]
Line_5 $$ URL url = null-->Line_7 $$ url = new URL(path)[ FD ]
Line_7 $$ url = new URL(path)-->Line_7 $$ url = new URL(path)[ FD ]
Line_12 $$ String encoding = XMLKit.getDeclaredXMLEncoding(url.openStream())-->Line_12 $$ String encoding = XMLKit.getDeclaredXMLEncoding(url.openStream())[ CD ]
Line_5 $$ URL url = null-->Line_12 $$ String encoding = XMLKit.getDeclaredXMLEncoding(url.openStream())[ FD ]
Line_7 $$ url = new URL(path)-->Line_12 $$ String encoding = XMLKit.getDeclaredXMLEncoding(url.openStream())[ FD ]
Line_3 $$ BufferedReader buffReader = null-->Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))[ FD ]
Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))-->Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))[ FD ]
Line_5 $$ URL url = null-->Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))[ FD ]
Line_7 $$ url = new URL(path)-->Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))[ FD ]
Line_4 $$ if (path.indexOf("://") != -1) -->Line_18 $$ File toRead = null[ CD ]
Line_18 $$ File toRead = null-->Line_20 $$ toRead = getExistingFile(path)[ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_20 $$ toRead = getExistingFile(path)[ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_20 $$ toRead = getExistingFile(path)[ CD ]
Line_2 $$ public static String getFileContents(String path) -->Line_20 $$ toRead = getExistingFile(path)[ FD ]
Line_4 $$ if (path.indexOf("://") != -1) -->Line_24 $$ if (toRead.isAbsolute()) [ CD ]
Line_18 $$ File toRead = null-->Line_24 $$ if (toRead.isAbsolute()) [ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_24 $$ if (toRead.isAbsolute()) [ FD ]
Line_24 $$ if (toRead.isAbsolute()) -->Line_24 $$ if (toRead.isAbsolute()) [ CD ]
Line_18 $$ File toRead = null-->Line_24 $$ if (toRead.isAbsolute()) [ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_24 $$ if (toRead.isAbsolute()) [ FD ]
Line_24 $$ if (toRead.isAbsolute()) -->Line_25 $$ String parent = toRead.getParent()[ CD ]
Line_25 $$ String parent = toRead.getParent()-->Line_25 $$ String parent = toRead.getParent()[ CD ]
Line_18 $$ File toRead = null-->Line_25 $$ String parent = toRead.getParent()[ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_25 $$ String parent = toRead.getParent()[ FD ]
Line_25 $$ String parent = toRead.getParent()-->Line_27 $$ workingDirectory.push(URLTools.createValidURL(parent))[ FD ]
Line_4 $$ if (path.indexOf("://") != -1) -->Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) [ CD ]
Line_18 $$ File toRead = null-->Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) [ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) [ FD ]
Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) -->Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) [ CD ]
Line_18 $$ File toRead = null-->Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) [ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) [ FD ]
Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) -->Line_33 $$ path = toRead.getAbsolutePath()[ CD ]
Line_2 $$ public static String getFileContents(String path) -->Line_33 $$ path = toRead.getAbsolutePath()[ FD ]
Line_33 $$ path = toRead.getAbsolutePath()-->Line_33 $$ path = toRead.getAbsolutePath()[ FD ]
Line_33 $$ path = toRead.getAbsolutePath()-->Line_33 $$ path = toRead.getAbsolutePath()[ CD ]
Line_18 $$ File toRead = null-->Line_33 $$ path = toRead.getAbsolutePath()[ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_33 $$ path = toRead.getAbsolutePath()[ FD ]
Line_3 $$ BufferedReader buffReader = null-->Line_36 $$ buffReader = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding))[ FD ]
Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))-->Line_36 $$ buffReader = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding))[ FD ]
Line_36 $$ buffReader = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding))-->Line_36 $$ buffReader = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding))[ FD ]
Line_18 $$ File toRead = null-->Line_42 $$ assert toRead.exists() : "getExistingFile() returned a non-existent file"[ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_42 $$ assert toRead.exists() : "getExistingFile() returned a non-existent file"[ FD ]
Line_32 $$ if (toRead.exists() && !toRead.isDirectory()) -->Line_43 $$ if (toRead.isDirectory()) [ CD ]
Line_18 $$ File toRead = null-->Line_43 $$ if (toRead.isDirectory()) [ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_43 $$ if (toRead.isDirectory()) [ FD ]
Line_43 $$ if (toRead.isDirectory()) -->Line_43 $$ if (toRead.isDirectory()) [ CD ]
Line_18 $$ File toRead = null-->Line_43 $$ if (toRead.isDirectory()) [ FD ]
Line_20 $$ toRead = getExistingFile(path)-->Line_43 $$ if (toRead.isDirectory()) [ FD ]
Line_2 $$ public static String getFileContents(String path) -->Line_48 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_2 $$ public static String getFileContents(String path) -->Line_49 $$ String line[ CD ]
Line_51 $$ while ((line = buffReader.readLine()) != null) -->Line_51 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_49 $$ String line-->Line_51 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_51 $$ while ((line = buffReader.readLine()) != null) -->Line_51 $$ while ((line = buffReader.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader buffReader = null-->Line_51 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))-->Line_51 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_36 $$ buffReader = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding))-->Line_51 $$ while ((line = buffReader.readLine()) != null) [ FD ]
Line_51 $$ while ((line = buffReader.readLine()) != null) -->Line_52 $$ result.append(line)[ CD ]
Line_48 $$ StringBuilder result = new StringBuilder()-->Line_52 $$ result.append(line)[ FD ]
Line_51 $$ while ((line = buffReader.readLine()) != null) -->Line_52 $$ result.append(line)[ FD ]
Line_49 $$ String line-->Line_52 $$ result.append(line)[ FD ]
Line_3 $$ BufferedReader buffReader = null-->Line_54 $$ buffReader.close()[ FD ]
Line_13 $$ buffReader = new BufferedReader(new InputStreamReader(url.openStream(), encoding))-->Line_54 $$ buffReader.close()[ FD ]
Line_36 $$ buffReader = new BufferedReader(new InputStreamReader(new FileInputStream(path), encoding))-->Line_54 $$ buffReader.close()[ FD ]
Line_2 $$ public static String getFileContents(String path) -->Line_59 $$ return result.toString()[ CD ]
Line_59 $$ return result.toString()-->Line_59 $$ return result.toString()[ CD ]
Line_48 $$ StringBuilder result = new StringBuilder()-->Line_59 $$ return result.toString()[ FD ]
Line_51 $$ while ((line = buffReader.readLine()) != null) -->Line_52 $$ result.append(line)[ FD ]
