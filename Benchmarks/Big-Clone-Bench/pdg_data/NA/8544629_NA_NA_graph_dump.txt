Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void copyContent(String filename) throws IOException [ CD ]
Line_2 $$ protected void copyContent(String filename) throws IOException -->Line_3 $$ InputStream in = null[ CD ]
Line_5 $$ String resourceDir = System.getProperty("resourceDir")-->Line_5 $$ String resourceDir = System.getProperty("resourceDir")[ CD ]
Line_6 $$ File resource = new File(resourceDir, filename)-->Line_8 $$ if (resource.exists()) [ FD ]
Line_8 $$ if (resource.exists()) -->Line_8 $$ if (resource.exists()) [ CD ]
Line_6 $$ File resource = new File(resourceDir, filename)-->Line_8 $$ if (resource.exists()) [ FD ]
Line_8 $$ if (resource.exists()) -->Line_9 $$ in = new FileInputStream(resource)[ CD ]
Line_3 $$ InputStream in = null-->Line_9 $$ in = new FileInputStream(resource)[ FD ]
Line_9 $$ in = new FileInputStream(resource)-->Line_9 $$ in = new FileInputStream(resource)[ FD ]
Line_8 $$ if (resource.exists()) -->Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)[ CD ]
Line_3 $$ InputStream in = null-->Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)[ FD ]
Line_9 $$ in = new FileInputStream(resource)-->Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)[ FD ]
Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)-->Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)[ FD ]
Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)-->Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)[ CD ]
Line_3 $$ InputStream in = null-->Line_13 $$ IOUtils.copy(in, out)[ FD ]
Line_9 $$ in = new FileInputStream(resource)-->Line_13 $$ IOUtils.copy(in, out)[ FD ]
Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)-->Line_13 $$ IOUtils.copy(in, out)[ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_13 $$ IOUtils.copy(in, out)[ FD ]
Line_7 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_14 $$ setResponseData(out.toByteArray())[ FD ]
Line_3 $$ InputStream in = null-->Line_16 $$ if (in != null) [ FD ]
Line_9 $$ in = new FileInputStream(resource)-->Line_16 $$ if (in != null) [ FD ]
Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)-->Line_16 $$ if (in != null) [ FD ]
Line_16 $$ if (in != null) -->Line_17 $$ in.close()[ CD ]
Line_3 $$ InputStream in = null-->Line_17 $$ in.close()[ FD ]
Line_9 $$ in = new FileInputStream(resource)-->Line_17 $$ in.close()[ FD ]
Line_11 $$ in = LOADER.getResourceAsStream(RES_PKG + filename)-->Line_17 $$ in.close()[ FD ]
