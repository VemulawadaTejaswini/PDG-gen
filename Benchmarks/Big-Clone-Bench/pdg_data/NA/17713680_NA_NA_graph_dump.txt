Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ if (args.length != 3) [ CD ]
Line_3 $$ if (args.length != 3) -->Line_4 $$ System.out.println("Usage: HexStrToBin enc/dec <infileName> <outfilename>")[ CD ]
Line_3 $$ if (args.length != 3) -->Line_5 $$ System.exit(1)[ CD ]
Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_10 $$ int len = 0-->Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)[ CD ]
Line_9 $$ InputStream in = new FileInputStream(args[1])-->Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ os.write(buf, 0, len)[ CD ]
Line_8 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_10 $$ int len = 0-->Line_12 $$ os.write(buf, 0, len)[ FD ]
Line_9 $$ InputStream in = new FileInputStream(args[1])-->Line_13 $$ in.close()[ FD ]
Line_8 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_14 $$ os.close()[ FD ]
Line_16 $$ if (args[0].equals("dec"))-->Line_16 $$ if (args[0].equals("dec"))[ CD ]
Line_16 $$ if (args[0].equals("dec"))-->Line_16 $$ data = decode(os.toString())[ CD ]
Line_15 $$ byte[] data = null-->Line_16 $$ data = decode(os.toString())[ FD ]
Line_16 $$ data = decode(os.toString())-->Line_16 $$ data = decode(os.toString())[ FD ]
Line_16 $$ data = decode(os.toString())-->Line_16 $$ data = decode(os.toString())[ CD ]
Line_8 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_16 $$ data = decode(os.toString())[ FD ]
Line_16 $$ if (args[0].equals("dec"))-->Line_17 $$ String strData = encode(os.toByteArray())[ CD ]
Line_17 $$ String strData = encode(os.toByteArray())-->Line_17 $$ String strData = encode(os.toByteArray())[ CD ]
Line_8 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_17 $$ String strData = encode(os.toByteArray())[ FD ]
Line_16 $$ if (args[0].equals("dec"))-->Line_18 $$ data = strData.getBytes()[ CD ]
Line_15 $$ byte[] data = null-->Line_18 $$ data = strData.getBytes()[ FD ]
Line_16 $$ data = decode(os.toString())-->Line_18 $$ data = strData.getBytes()[ FD ]
Line_18 $$ data = strData.getBytes()-->Line_18 $$ data = strData.getBytes()[ FD ]
Line_18 $$ data = strData.getBytes()-->Line_18 $$ data = strData.getBytes()[ CD ]
Line_17 $$ String strData = encode(os.toByteArray())-->Line_18 $$ data = strData.getBytes()[ FD ]
Line_20 $$ FileOutputStream fos = new FileOutputStream(args[2])-->Line_21 $$ fos.write(data)[ FD ]
Line_15 $$ byte[] data = null-->Line_21 $$ fos.write(data)[ FD ]
Line_16 $$ data = decode(os.toString())-->Line_21 $$ fos.write(data)[ FD ]
Line_18 $$ data = strData.getBytes()-->Line_21 $$ fos.write(data)[ FD ]
Line_20 $$ FileOutputStream fos = new FileOutputStream(args[2])-->Line_22 $$ fos.close()[ FD ]
Line_12 $$ while ((len = in.read(buf)) > 0) os.write(buf, 0, len)-->Line_12 $$ os.write(buf, 0, len)[ FD ]
