Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void copyObjects(File[] source, String target) [ CD ]
Line_2 $$ private static void copyObjects(File[] source, String target) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ CD ]
Line_2 $$ private static void copyObjects(File[] source, String target) -->Line_2 $$ private static void copyObjects(File[] source, String target) [ CD ]
Line_3 $$ for (int i = 0; i < source.length; i++) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ CD ]
Line_3 $$ for (int i = 0; i < source.length; i++) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ CD ]
Line_3 $$ for (int i = 0; i < source.length; i++) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ FD ]
Line_10 $$ while ((c = in.read()) != -1) out.write(c)-->Line_10 $$ while ((c = in.read()) != -1) out.write(c)[ FD ]
Line_9 $$ int c-->Line_10 $$ while ((c = in.read()) != -1) out.write(c)[ FD ]
Line_10 $$ while ((c = in.read()) != -1) out.write(c)-->Line_10 $$ while ((c = in.read()) != -1) out.write(c)[ CD ]
Line_7 $$ FileReader in = new FileReader(inputFile)-->Line_10 $$ while ((c = in.read()) != -1) out.write(c)[ FD ]
Line_10 $$ while ((c = in.read()) != -1) out.write(c)-->Line_10 $$ out.write(c)[ CD ]
Line_8 $$ FileWriter out = new FileWriter(outputFile)-->Line_10 $$ out.write(c)[ FD ]
Line_10 $$ while ((c = in.read()) != -1) out.write(c)-->Line_10 $$ out.write(c)[ FD ]
Line_9 $$ int c-->Line_10 $$ out.write(c)[ FD ]
Line_7 $$ FileReader in = new FileReader(inputFile)-->Line_11 $$ in.close()[ FD ]
Line_8 $$ FileWriter out = new FileWriter(outputFile)-->Line_12 $$ out.close()[ FD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())[ CD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())[ CD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())[ FD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ Logger.error("     " + ex.getStackTrace()[j].toString())[ CD ]
Line_3 $$ for (int i = 0; i < source.length; i++) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ FD ]
Line_3 $$ for (int i = 0; i < source.length; i++) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ FD ]
Line_3 $$ for (int i = 0; i < source.length; i++) -->Line_3 $$ for (int i = 0; i < source.length; i++) [ FD ]
Line_7 $$ FileReader in = new FileReader(inputFile)-->Line_11 $$ in.close()[ FD ]
Line_8 $$ FileWriter out = new FileWriter(outputFile)-->Line_12 $$ out.close()[ FD ]
Line_10 $$ while ((c = in.read()) != -1) out.write(c)-->Line_10 $$ out.write(c)[ FD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())[ FD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())[ FD ]
Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())-->Line_15 $$ for (int j = 0; j < ex.getStackTrace().length; j++) Logger.error("     " + ex.getStackTrace()[j].toString())[ FD ]
