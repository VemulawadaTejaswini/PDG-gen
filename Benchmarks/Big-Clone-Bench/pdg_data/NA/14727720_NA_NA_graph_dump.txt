Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) [ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_3 $$ logger.info("[rawHttpPost.in]:: " + Arrays.asList(new Object[] [ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_4 $$ URLConnection urlConn[ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_5 $$ DataOutputStream printout[ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_6 $$ DataInputStream input[ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_7 $$ byte[] responseBody = null[ CD ]
Line_4 $$ URLConnection urlConn-->Line_9 $$ urlConn = serverTimeStamp.openConnection()[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_9 $$ urlConn = serverTimeStamp.openConnection()[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_9 $$ urlConn = serverTimeStamp.openConnection()[ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_9 $$ urlConn = serverTimeStamp.openConnection()[ FD ]
Line_4 $$ URLConnection urlConn-->Line_10 $$ urlConn.setDoInput(true)[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_10 $$ urlConn.setDoInput(true)[ FD ]
Line_4 $$ URLConnection urlConn-->Line_11 $$ urlConn.setDoOutput(true)[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_11 $$ urlConn.setDoOutput(true)[ FD ]
Line_4 $$ URLConnection urlConn-->Line_12 $$ urlConn.setUseCaches(false)[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_12 $$ urlConn.setUseCaches(false)[ FD ]
Line_13 $$ Iterator iter = reqProperties.entrySet().iterator()-->Line_13 $$ Iterator iter = reqProperties.entrySet().iterator()[ CD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_13 $$ Iterator iter = reqProperties.entrySet().iterator()[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_14 $$ while (iter.hasNext()) [ CD ]
Line_13 $$ Iterator iter = reqProperties.entrySet().iterator()-->Line_14 $$ while (iter.hasNext()) [ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_15 $$ Map.Entry entry = (Map.Entry) iter.next()[ CD ]
Line_13 $$ Iterator iter = reqProperties.entrySet().iterator()-->Line_15 $$ Map.Entry entry = (Map.Entry) iter.next()[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ CD ]
Line_4 $$ URLConnection urlConn-->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ FD ]
Line_15 $$ Map.Entry entry = (Map.Entry) iter.next()-->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ FD ]
Line_15 $$ Map.Entry entry = (Map.Entry) iter.next()-->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ FD ]
Line_5 $$ DataOutputStream printout-->Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())[ FD ]
Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())-->Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())[ FD ]
Line_4 $$ URLConnection urlConn-->Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())[ FD ]
Line_5 $$ DataOutputStream printout-->Line_20 $$ printout.write(postData)[ FD ]
Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())-->Line_20 $$ printout.write(postData)[ FD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_20 $$ printout.write(postData)[ FD ]
Line_5 $$ DataOutputStream printout-->Line_21 $$ printout.flush()[ FD ]
Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())-->Line_21 $$ printout.flush()[ FD ]
Line_5 $$ DataOutputStream printout-->Line_22 $$ printout.close()[ FD ]
Line_19 $$ printout = new DataOutputStream(urlConn.getOutputStream())-->Line_22 $$ printout.close()[ FD ]
Line_6 $$ DataInputStream input-->Line_23 $$ input = new DataInputStream(urlConn.getInputStream())[ FD ]
Line_23 $$ input = new DataInputStream(urlConn.getInputStream())-->Line_23 $$ input = new DataInputStream(urlConn.getInputStream())[ FD ]
Line_4 $$ URLConnection urlConn-->Line_23 $$ input = new DataInputStream(urlConn.getInputStream())[ FD ]
Line_9 $$ urlConn = serverTimeStamp.openConnection()-->Line_23 $$ input = new DataInputStream(urlConn.getInputStream())[ FD ]
Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) -->Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_25 $$ int bytesRead = 0-->Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) -->Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) [ CD ]
Line_6 $$ DataInputStream input-->Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_23 $$ input = new DataInputStream(urlConn.getInputStream())-->Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_24 $$ byte[] buffer = new byte[1024]-->Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) [ FD ]
Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) -->Line_28 $$ baos.write(buffer, 0, bytesRead)[ CD ]
Line_26 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_28 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_24 $$ byte[] buffer = new byte[1024]-->Line_28 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) -->Line_28 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_25 $$ int bytesRead = 0-->Line_28 $$ baos.write(buffer, 0, bytesRead)[ FD ]
Line_6 $$ DataInputStream input-->Line_30 $$ input.close()[ FD ]
Line_23 $$ input = new DataInputStream(urlConn.getInputStream())-->Line_30 $$ input.close()[ FD ]
Line_7 $$ byte[] responseBody = null-->Line_31 $$ responseBody = baos.toByteArray()[ FD ]
Line_31 $$ responseBody = baos.toByteArray()-->Line_31 $$ responseBody = baos.toByteArray()[ FD ]
Line_31 $$ responseBody = baos.toByteArray()-->Line_31 $$ responseBody = baos.toByteArray()[ CD ]
Line_26 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_31 $$ responseBody = baos.toByteArray()[ FD ]
Line_2 $$ private byte[] rawHttpPost(URL serverTimeStamp, Hashtable reqProperties, byte[] postData) -->Line_37 $$ return responseBody[ CD ]
Line_15 $$ Map.Entry entry = (Map.Entry) iter.next()-->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ FD ]
Line_15 $$ Map.Entry entry = (Map.Entry) iter.next()-->Line_16 $$ urlConn.setRequestProperty((String) entry.getKey(), (String) entry.getValue())[ FD ]
Line_27 $$ while ((bytesRead = input.read(buffer, 0, buffer.length)) >= 0) -->Line_28 $$ baos.write(buffer, 0, bytesRead)[ FD ]
