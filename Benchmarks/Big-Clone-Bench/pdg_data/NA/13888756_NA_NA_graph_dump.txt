Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected Template read(URL url) throws TemplateException [ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_3 $$ String parent = Parent(url)[ CD ]
Line_3 $$ String parent = Parent(url)-->Line_3 $$ String parent = Parent(url)[ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_3 $$ String parent = Parent(url)[ FD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_4 $$ TemplateLoaderContext context = new TemplateLoaderContext(this, parent, false)[ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_5 $$ String contents[ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_6 $$ InputStream in = null[ CD ]
Line_6 $$ InputStream in = null-->Line_8 $$ in = url.openStream()[ FD ]
Line_8 $$ in = url.openStream()-->Line_8 $$ in = url.openStream()[ FD ]
Line_8 $$ in = url.openStream()-->Line_8 $$ in = url.openStream()[ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_8 $$ in = url.openStream()[ FD ]
Line_5 $$ String contents-->Line_9 $$ contents = this.readToString(new java.io.InputStreamReader(in))[ FD ]
Line_9 $$ contents = this.readToString(new java.io.InputStreamReader(in))-->Line_9 $$ contents = this.readToString(new java.io.InputStreamReader(in))[ FD ]
Line_9 $$ contents = this.readToString(new java.io.InputStreamReader(in))-->Line_9 $$ contents = this.readToString(new java.io.InputStreamReader(in))[ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_11 $$ throw new TemplateException(url.toString(), exc)[ FD ]
Line_6 $$ InputStream in = null-->Line_14 $$ in.close()[ FD ]
Line_8 $$ in = url.openStream()-->Line_14 $$ in.close()[ FD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_18 $$ TemplateParser parser = this.parser[ CD ]
Line_2 $$ protected Template read(URL url) throws TemplateException -->Line_19 $$ if (null == parser)[ CD ]
Line_18 $$ TemplateParser parser = this.parser-->Line_19 $$ if (null == parser)[ FD ]
Line_19 $$ if (null == parser)-->Line_19 $$ return (new Template(contents, context))[ CD ]
Line_19 $$ if (null == parser)-->Line_19 $$ return (new Template(parser, contents, context))[ CD ]
