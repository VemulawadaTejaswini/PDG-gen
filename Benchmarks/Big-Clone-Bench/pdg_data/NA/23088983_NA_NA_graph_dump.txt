Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException [ CD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_4 $$ String tmp = null[ CD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_5 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_6 $$ while ((tmp = reader.readLine()) != null) [ CD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException [ CD ]
Line_6 $$ while ((tmp = reader.readLine()) != null) -->Line_6 $$ while ((tmp = reader.readLine()) != null) [ FD ]
Line_4 $$ String tmp = null-->Line_6 $$ while ((tmp = reader.readLine()) != null) [ FD ]
Line_6 $$ while ((tmp = reader.readLine()) != null) -->Line_6 $$ while ((tmp = reader.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_6 $$ while ((tmp = reader.readLine()) != null) [ FD ]
Line_6 $$ while ((tmp = reader.readLine()) != null) -->Line_7 $$ buffer.append(tmp)[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_7 $$ buffer.append(tmp)[ FD ]
Line_6 $$ while ((tmp = reader.readLine()) != null) -->Line_7 $$ buffer.append(tmp)[ FD ]
Line_4 $$ String tmp = null-->Line_7 $$ buffer.append(tmp)[ FD ]
Line_2 $$ public Epg unmarshallFromUrl(URL url) throws IOException -->Line_9 $$ return unmarshall(buffer.toString().getBytes())[ CD ]
Line_9 $$ return unmarshall(buffer.toString().getBytes())-->Line_9 $$ return unmarshall(buffer.toString().getBytes())[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ return unmarshall(buffer.toString().getBytes())[ FD ]
Line_6 $$ while ((tmp = reader.readLine()) != null) -->Line_7 $$ buffer.append(tmp)[ FD ]
