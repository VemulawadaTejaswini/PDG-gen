Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public byte[] transfer(@Nullable final TransferListener transferListener) [ CD ]
Line_4 $$ InputStream inputStream = url.openStream()-->Line_4 $$ InputStream inputStream = url.openStream()[ CD ]
Line_4 $$ InputStream inputStream = url.openStream()-->Line_5 $$ ByteArrayOutputStream outputStream = new ByteArrayOutputStream(inputStream.available())[ FD ]
Line_2 $$ public byte[] transfer(@Nullable final TransferListener transferListener) -->Line_6 $$ if (transferListener != null) [ FD ]
Line_6 $$ if (transferListener != null) -->Line_7 $$ inputStream = new ObservableInputStream(inputStream, transferListener)[ CD ]
Line_4 $$ InputStream inputStream = url.openStream()-->Line_7 $$ inputStream = new ObservableInputStream(inputStream, transferListener)[ FD ]
Line_7 $$ inputStream = new ObservableInputStream(inputStream, transferListener)-->Line_7 $$ inputStream = new ObservableInputStream(inputStream, transferListener)[ FD ]
Line_5 $$ ByteArrayOutputStream outputStream = new ByteArrayOutputStream(inputStream.available())-->Line_9 $$ ByteStreams.copy(InputSuppliers.asInputSupplier(inputStream), outputStream)[ FD ]
Line_4 $$ InputStream inputStream = url.openStream()-->Line_9 $$ ByteStreams.copy(InputSuppliers.asInputSupplier(inputStream), outputStream)[ FD ]
Line_7 $$ inputStream = new ObservableInputStream(inputStream, transferListener)-->Line_9 $$ ByteStreams.copy(InputSuppliers.asInputSupplier(inputStream), outputStream)[ FD ]
Line_10 $$ return outputStream.toByteArray()-->Line_10 $$ return outputStream.toByteArray()[ CD ]
Line_5 $$ ByteArrayOutputStream outputStream = new ByteArrayOutputStream(inputStream.available())-->Line_10 $$ return outputStream.toByteArray()[ FD ]
