Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void convertFile() [ CD ]
Line_2 $$ private void convertFile() -->Line_3 $$ final File fileToConvert = filePanel.getInputFile()[ CD ]
Line_3 $$ final File fileToConvert = filePanel.getInputFile()-->Line_3 $$ final File fileToConvert = filePanel.getInputFile()[ CD ]
Line_2 $$ private void convertFile() -->Line_4 $$ final File convertedFile = filePanel.getOutputFile()[ CD ]
Line_4 $$ final File convertedFile = filePanel.getOutputFile()-->Line_4 $$ final File convertedFile = filePanel.getOutputFile()[ CD ]
Line_2 $$ private void convertFile() -->Line_5 $$ if (fileToConvert == null || convertedFile == null) [ CD ]
Line_5 $$ if (fileToConvert == null || convertedFile == null) -->Line_6 $$ Main.showMessage("Select valid files for both input and output")[ CD ]
Line_5 $$ if (fileToConvert == null || convertedFile == null) -->Line_7 $$ return[ CD ]
Line_2 $$ private void convertFile() -->Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) [ CD ]
Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) -->Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) [ CD ]
Line_3 $$ final File fileToConvert = filePanel.getInputFile()-->Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) [ FD ]
Line_4 $$ final File convertedFile = filePanel.getOutputFile()-->Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) [ FD ]
Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) -->Line_10 $$ Main.showMessage("Input and Output files are same.. select different files")[ CD ]
Line_9 $$ if (fileToConvert.getName().equals(convertedFile.getName())) -->Line_11 $$ return[ CD ]
Line_2 $$ private void convertFile() -->Line_13 $$ final int len = (int) fileToConvert.length()[ CD ]
Line_3 $$ final File fileToConvert = filePanel.getInputFile()-->Line_13 $$ final int len = (int) fileToConvert.length()[ FD ]
Line_2 $$ private void convertFile() -->Line_14 $$ progressBar.setMinimum(0)[ CD ]
Line_2 $$ private void convertFile() -->Line_15 $$ progressBar.setMaximum(len)[ CD ]
Line_13 $$ final int len = (int) fileToConvert.length()-->Line_15 $$ progressBar.setMaximum(len)[ FD ]
Line_2 $$ private void convertFile() -->Line_16 $$ progressBar.setValue(0)[ CD ]
Line_3 $$ final File fileToConvert = filePanel.getInputFile()-->Line_18 $$ fileCopy(fileToConvert, fileToConvert.getAbsolutePath() + ".bakup")[ FD ]
Line_3 $$ final File fileToConvert = filePanel.getInputFile()-->Line_18 $$ fileCopy(fileToConvert, fileToConvert.getAbsolutePath() + ".bakup")[ FD ]
Line_2 $$ private void convertFile() -->Line_23 $$ final BufferedReader bufferedReader[ CD ]
Line_23 $$ final BufferedReader bufferedReader-->Line_25 $$ bufferedReader = new BufferedReader(new FileReader(fileToConvert))[ FD ]
Line_25 $$ bufferedReader = new BufferedReader(new FileReader(fileToConvert))-->Line_25 $$ bufferedReader = new BufferedReader(new FileReader(fileToConvert))[ FD ]
Line_2 $$ private void convertFile() -->Line_30 $$ final BufferedWriter bufferedWriter[ CD ]
Line_30 $$ final BufferedWriter bufferedWriter-->Line_32 $$ bufferedWriter = new BufferedWriter(new FileWriter(convertedFile))[ FD ]
Line_32 $$ bufferedWriter = new BufferedWriter(new FileWriter(convertedFile))-->Line_32 $$ bufferedWriter = new BufferedWriter(new FileWriter(convertedFile))[ FD ]
Line_2 $$ private void convertFile() -->Line_37 $$ String input[ CD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_39 $$ while ((input = bufferedReader.readLine()) != null) [ FD ]
Line_37 $$ String input-->Line_39 $$ while ((input = bufferedReader.readLine()) != null) [ FD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_39 $$ while ((input = bufferedReader.readLine()) != null) [ CD ]
Line_23 $$ final BufferedReader bufferedReader-->Line_39 $$ while ((input = bufferedReader.readLine()) != null) [ FD ]
Line_25 $$ bufferedReader = new BufferedReader(new FileReader(fileToConvert))-->Line_39 $$ while ((input = bufferedReader.readLine()) != null) [ FD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_40 $$ if (stopRequested) [ CD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_43 $$ bufferedWriter.write(parseLine(input))[ CD ]
Line_30 $$ final BufferedWriter bufferedWriter-->Line_43 $$ bufferedWriter.write(parseLine(input))[ FD ]
Line_32 $$ bufferedWriter = new BufferedWriter(new FileWriter(convertedFile))-->Line_43 $$ bufferedWriter.write(parseLine(input))[ FD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_43 $$ bufferedWriter.write(parseLine(input))[ FD ]
Line_37 $$ String input-->Line_43 $$ bufferedWriter.write(parseLine(input))[ FD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_44 $$ bufferedWriter.newLine()[ CD ]
Line_30 $$ final BufferedWriter bufferedWriter-->Line_44 $$ bufferedWriter.newLine()[ FD ]
Line_32 $$ bufferedWriter = new BufferedWriter(new FileWriter(convertedFile))-->Line_44 $$ bufferedWriter.newLine()[ FD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_45 $$ progressBar.setValue(progressBar.getValue() + input.length())[ CD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_45 $$ progressBar.setValue(progressBar.getValue() + input.length())[ FD ]
Line_37 $$ String input-->Line_45 $$ progressBar.setValue(progressBar.getValue() + input.length())[ FD ]
Line_23 $$ final BufferedReader bufferedReader-->Line_52 $$ bufferedReader.close()[ FD ]
Line_25 $$ bufferedReader = new BufferedReader(new FileReader(fileToConvert))-->Line_52 $$ bufferedReader.close()[ FD ]
Line_30 $$ final BufferedWriter bufferedWriter-->Line_53 $$ bufferedWriter.close()[ FD ]
Line_32 $$ bufferedWriter = new BufferedWriter(new FileWriter(convertedFile))-->Line_53 $$ bufferedWriter.close()[ FD ]
Line_2 $$ private void convertFile() -->Line_59 $$ if (!stopRequested) [ CD ]
Line_59 $$ if (!stopRequested) -->Line_60 $$ filePanel.readOutputFile()[ CD ]
Line_59 $$ if (!stopRequested) -->Line_61 $$ progressBar.setValue(progressBar.getMaximum())[ CD ]
Line_59 $$ if (!stopRequested) -->Line_62 $$ Main.setStatus("Transliterate Done.")[ CD ]
Line_2 $$ private void convertFile() -->Line_64 $$ progressBar.setValue(progressBar.getMinimum())[ CD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_43 $$ bufferedWriter.write(parseLine(input))[ FD ]
Line_39 $$ while ((input = bufferedReader.readLine()) != null) -->Line_45 $$ progressBar.setValue(progressBar.getValue() + input.length())[ FD ]
