Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String encryptUserPassword(int userId, String password) [ CD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_3 $$ password = password.trim()[ CD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_3 $$ password = password.trim()[ FD ]
Line_3 $$ password = password.trim()-->Line_3 $$ password = password.trim()[ FD ]
Line_3 $$ password = password.trim()-->Line_3 $$ password = password.trim()[ CD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_3 $$ password = password.trim()[ FD ]
Line_3 $$ password = password.trim()-->Line_3 $$ password = password.trim()[ FD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_4 $$ if (password.length() == 0) [ CD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_4 $$ if (password.length() == 0) [ FD ]
Line_3 $$ password = password.trim()-->Line_4 $$ if (password.length() == 0) [ FD ]
Line_4 $$ if (password.length() == 0) -->Line_5 $$ return ""[ CD ]
Line_4 $$ if (password.length() == 0) -->Line_7 $$ MessageDigest md[ CD ]
Line_7 $$ MessageDigest md-->Line_9 $$ md = MessageDigest.getInstance("SHA")[ FD ]
Line_9 $$ md = MessageDigest.getInstance("SHA")-->Line_9 $$ md = MessageDigest.getInstance("SHA")[ FD ]
Line_9 $$ md = MessageDigest.getInstance("SHA")-->Line_9 $$ md = MessageDigest.getInstance("SHA")[ CD ]
Line_4 $$ if (password.length() == 0) -->Line_13 $$ md.update(String.valueOf(userId).getBytes())[ CD ]
Line_7 $$ MessageDigest md-->Line_13 $$ md.update(String.valueOf(userId).getBytes())[ FD ]
Line_9 $$ md = MessageDigest.getInstance("SHA")-->Line_13 $$ md.update(String.valueOf(userId).getBytes())[ FD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_13 $$ md.update(String.valueOf(userId).getBytes())[ FD ]
Line_4 $$ if (password.length() == 0) -->Line_14 $$ md.update(password.getBytes())[ CD ]
Line_7 $$ MessageDigest md-->Line_14 $$ md.update(password.getBytes())[ FD ]
Line_9 $$ md = MessageDigest.getInstance("SHA")-->Line_14 $$ md.update(password.getBytes())[ FD ]
Line_2 $$ private String encryptUserPassword(int userId, String password) -->Line_14 $$ md.update(password.getBytes())[ FD ]
Line_3 $$ password = password.trim()-->Line_14 $$ md.update(password.getBytes())[ FD ]
Line_4 $$ if (password.length() == 0) -->Line_15 $$ byte b[] = md.digest()[ CD ]
Line_15 $$ byte b[] = md.digest()-->Line_15 $$ byte b[] = md.digest()[ CD ]
Line_7 $$ MessageDigest md-->Line_15 $$ byte b[] = md.digest()[ FD ]
Line_9 $$ md = MessageDigest.getInstance("SHA")-->Line_15 $$ byte b[] = md.digest()[ FD ]
Line_4 $$ if (password.length() == 0) -->Line_16 $$ StringBuffer sb = new StringBuffer(1 + b.length * 2)[ CD ]
Line_4 $$ if (password.length() == 0) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ CD ]
Line_4 $$ if (password.length() == 0) -->Line_4 $$ if (password.length() == 0) [ CD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_18 $$ int ii = b[i][ CD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_19 $$ if (ii < 0) [ CD ]
Line_18 $$ int ii = b[i]-->Line_19 $$ if (ii < 0) [ FD ]
Line_19 $$ if (ii < 0) -->Line_20 $$ ii = 256 + ii[ CD ]
Line_18 $$ int ii = b[i]-->Line_20 $$ ii = 256 + ii[ FD ]
Line_20 $$ ii = 256 + ii-->Line_20 $$ ii = 256 + ii[ FD ]
Line_18 $$ int ii = b[i]-->Line_20 $$ ii = 256 + ii[ FD ]
Line_20 $$ ii = 256 + ii-->Line_20 $$ ii = 256 + ii[ FD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_22 $$ sb.append(getHexadecimalValue2(ii))[ CD ]
Line_16 $$ StringBuffer sb = new StringBuffer(1 + b.length * 2)-->Line_22 $$ sb.append(getHexadecimalValue2(ii))[ FD ]
Line_18 $$ int ii = b[i]-->Line_22 $$ sb.append(getHexadecimalValue2(ii))[ FD ]
Line_20 $$ ii = 256 + ii-->Line_22 $$ sb.append(getHexadecimalValue2(ii))[ FD ]
Line_4 $$ if (password.length() == 0) -->Line_24 $$ return sb.toString()[ CD ]
Line_24 $$ return sb.toString()-->Line_24 $$ return sb.toString()[ CD ]
Line_16 $$ StringBuffer sb = new StringBuffer(1 + b.length * 2)-->Line_24 $$ return sb.toString()[ FD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < b.length; i++) -->Line_17 $$ for (int i = 0; i < b.length; i++) [ FD ]
Line_18 $$ int ii = b[i]-->Line_19 $$ if (ii < 0) [ FD ]
Line_20 $$ ii = 256 + ii-->Line_19 $$ if (ii < 0) [ FD ]
Line_18 $$ int ii = b[i]-->Line_20 $$ ii = 256 + ii[ FD ]
Line_20 $$ ii = 256 + ii-->Line_20 $$ ii = 256 + ii[ FD ]
Line_18 $$ int ii = b[i]-->Line_22 $$ sb.append(getHexadecimalValue2(ii))[ FD ]
Line_20 $$ ii = 256 + ii-->Line_22 $$ sb.append(getHexadecimalValue2(ii))[ FD ]
