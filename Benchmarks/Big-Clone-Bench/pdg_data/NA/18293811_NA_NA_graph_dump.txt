Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void copy(String from_name, String to_name) throws IOException [ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_3 $$ File from_file = new File(from_name)[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_4 $$ File to_file = new File(to_name)[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_5 $$ if (!from_file.exists())[ CD ]
Line_5 $$ if (!from_file.exists())-->Line_5 $$ if (!from_file.exists())[ CD ]
Line_5 $$ if (!from_file.exists())-->Line_5 $$ if (!from_file.exists())[ CD ]
Line_3 $$ File from_file = new File(from_name)-->Line_5 $$ if (!from_file.exists())[ FD ]
Line_5 $$ if (!from_file.exists())-->Line_5 $$ abort("�������� ���� �� ���������" + from_file)[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_6 $$ if (!from_file.isFile())[ CD ]
Line_6 $$ if (!from_file.isFile())-->Line_6 $$ if (!from_file.isFile())[ CD ]
Line_6 $$ if (!from_file.isFile())-->Line_6 $$ if (!from_file.isFile())[ CD ]
Line_3 $$ File from_file = new File(from_name)-->Line_6 $$ if (!from_file.isFile())[ FD ]
Line_6 $$ if (!from_file.isFile())-->Line_6 $$ abort("���������� ����������� ��������" + from_file)[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_7 $$ if (!from_file.canRead())[ CD ]
Line_7 $$ if (!from_file.canRead())-->Line_7 $$ if (!from_file.canRead())[ CD ]
Line_7 $$ if (!from_file.canRead())-->Line_7 $$ if (!from_file.canRead())[ CD ]
Line_3 $$ File from_file = new File(from_name)-->Line_7 $$ if (!from_file.canRead())[ FD ]
Line_7 $$ if (!from_file.canRead())-->Line_7 $$ abort("�������� ���� ���������� ��� ������" + from_file)[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_8 $$ if (from_file.isDirectory())[ CD ]
Line_3 $$ File from_file = new File(from_name)-->Line_8 $$ if (from_file.isDirectory())[ FD ]
Line_8 $$ if (from_file.isDirectory())-->Line_8 $$ if (from_file.isDirectory())[ CD ]
Line_3 $$ File from_file = new File(from_name)-->Line_8 $$ if (from_file.isDirectory())[ FD ]
Line_8 $$ if (from_file.isDirectory())-->Line_8 $$ to_file = new File(to_file, from_file.getName())[ CD ]
Line_4 $$ File to_file = new File(to_name)-->Line_8 $$ to_file = new File(to_file, from_file.getName())[ FD ]
Line_8 $$ to_file = new File(to_file, from_file.getName())-->Line_8 $$ to_file = new File(to_file, from_file.getName())[ FD ]
Line_3 $$ File from_file = new File(from_name)-->Line_8 $$ to_file = new File(to_file, from_file.getName())[ FD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_9 $$ if (to_file.exists()) [ CD ]
Line_4 $$ File to_file = new File(to_name)-->Line_9 $$ if (to_file.exists()) [ FD ]
Line_8 $$ to_file = new File(to_file, from_file.getName())-->Line_9 $$ if (to_file.exists()) [ FD ]
Line_9 $$ if (to_file.exists()) -->Line_9 $$ if (to_file.exists()) [ CD ]
Line_4 $$ File to_file = new File(to_name)-->Line_9 $$ if (to_file.exists()) [ FD ]
Line_8 $$ to_file = new File(to_file, from_file.getName())-->Line_9 $$ if (to_file.exists()) [ FD ]
Line_9 $$ if (to_file.exists()) -->Line_10 $$ if (!to_file.canWrite())[ CD ]
Line_10 $$ if (!to_file.canWrite())-->Line_10 $$ if (!to_file.canWrite())[ CD ]
Line_10 $$ if (!to_file.canWrite())-->Line_10 $$ if (!to_file.canWrite())[ CD ]
Line_4 $$ File to_file = new File(to_name)-->Line_10 $$ if (!to_file.canWrite())[ FD ]
Line_8 $$ to_file = new File(to_file, from_file.getName())-->Line_10 $$ if (!to_file.canWrite())[ FD ]
Line_10 $$ if (!to_file.canWrite())-->Line_10 $$ abort("�������� ���� ���������� ��� ������" + to_file)[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_11 $$ System.out.println("������������ ������� ����?" + to_file.getName() + "?(Y/N):")[ CD ]
Line_4 $$ File to_file = new File(to_name)-->Line_11 $$ System.out.println("������������ ������� ����?" + to_file.getName() + "?(Y/N):")[ FD ]
Line_8 $$ to_file = new File(to_file, from_file.getName())-->Line_11 $$ System.out.println("������������ ������� ����?" + to_file.getName() + "?(Y/N):")[ FD ]
Line_9 $$ if (to_file.exists()) -->Line_12 $$ System.out.flush()[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_13 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_14 $$ String response = in.readLine()[ CD ]
Line_14 $$ String response = in.readLine()-->Line_14 $$ String response = in.readLine()[ CD ]
Line_13 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_14 $$ String response = in.readLine()[ FD ]
Line_9 $$ if (to_file.exists()) -->Line_15 $$ if (!response.equals("Y") && !response.equals("y"))[ CD ]
Line_15 $$ if (!response.equals("Y") && !response.equals("y"))-->Line_15 $$ if (!response.equals("Y") && !response.equals("y"))[ CD ]
Line_14 $$ String response = in.readLine()-->Line_15 $$ if (!response.equals("Y") && !response.equals("y"))[ FD ]
Line_15 $$ if (!response.equals("Y") && !response.equals("y"))-->Line_15 $$ if (!response.equals("Y") && !response.equals("y"))[ CD ]
Line_14 $$ String response = in.readLine()-->Line_15 $$ if (!response.equals("Y") && !response.equals("y"))[ FD ]
Line_15 $$ if (!response.equals("Y") && !response.equals("y"))-->Line_15 $$ abort("������������ ���� �� ��� �����������")[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_17 $$ String parent = to_file.getParent()[ CD ]
Line_17 $$ String parent = to_file.getParent()-->Line_17 $$ String parent = to_file.getParent()[ CD ]
Line_4 $$ File to_file = new File(to_name)-->Line_17 $$ String parent = to_file.getParent()[ FD ]
Line_8 $$ to_file = new File(to_file, from_file.getName())-->Line_17 $$ String parent = to_file.getParent()[ FD ]
Line_9 $$ if (to_file.exists()) -->Line_18 $$ if (parent == null)[ CD ]
Line_17 $$ String parent = to_file.getParent()-->Line_18 $$ if (parent == null)[ FD ]
Line_18 $$ if (parent == null)-->Line_18 $$ parent = System.getProperty("user.dir")[ CD ]
Line_17 $$ String parent = to_file.getParent()-->Line_18 $$ parent = System.getProperty("user.dir")[ FD ]
Line_18 $$ parent = System.getProperty("user.dir")-->Line_18 $$ parent = System.getProperty("user.dir")[ FD ]
Line_18 $$ parent = System.getProperty("user.dir")-->Line_18 $$ parent = System.getProperty("user.dir")[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_19 $$ File dir = new File(parent)[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_20 $$ if (!dir.exists())[ CD ]
Line_20 $$ if (!dir.exists())-->Line_20 $$ if (!dir.exists())[ CD ]
Line_20 $$ if (!dir.exists())-->Line_20 $$ if (!dir.exists())[ CD ]
Line_19 $$ File dir = new File(parent)-->Line_20 $$ if (!dir.exists())[ FD ]
Line_20 $$ if (!dir.exists())-->Line_20 $$ abort("������� ���������� �� ���������" + parent)[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_21 $$ if (!dir.isFile())[ CD ]
Line_21 $$ if (!dir.isFile())-->Line_21 $$ if (!dir.isFile())[ CD ]
Line_21 $$ if (!dir.isFile())-->Line_21 $$ if (!dir.isFile())[ CD ]
Line_19 $$ File dir = new File(parent)-->Line_21 $$ if (!dir.isFile())[ FD ]
Line_21 $$ if (!dir.isFile())-->Line_21 $$ abort("�� �������� ���������" + parent)[ CD ]
Line_9 $$ if (to_file.exists()) -->Line_22 $$ if (!dir.canWrite())[ CD ]
Line_22 $$ if (!dir.canWrite())-->Line_22 $$ if (!dir.canWrite())[ CD ]
Line_22 $$ if (!dir.canWrite())-->Line_22 $$ if (!dir.canWrite())[ CD ]
Line_19 $$ File dir = new File(parent)-->Line_22 $$ if (!dir.canWrite())[ FD ]
Line_22 $$ if (!dir.canWrite())-->Line_22 $$ abort("������ �� ������" + parent)[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_24 $$ FileInputStream from = null[ CD ]
Line_2 $$ private static void copy(String from_name, String to_name) throws IOException -->Line_25 $$ FileOutputStream to = null[ CD ]
Line_24 $$ FileInputStream from = null-->Line_27 $$ from = new FileInputStream(from_file)[ FD ]
Line_27 $$ from = new FileInputStream(from_file)-->Line_27 $$ from = new FileInputStream(from_file)[ FD ]
Line_25 $$ FileOutputStream to = null-->Line_28 $$ to = new FileOutputStream(to_file)[ FD ]
Line_28 $$ to = new FileOutputStream(to_file)-->Line_28 $$ to = new FileOutputStream(to_file)[ FD ]
Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)-->Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)[ FD ]
Line_30 $$ int bytes_read-->Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)[ FD ]
Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)-->Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)[ CD ]
Line_24 $$ FileInputStream from = null-->Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)[ FD ]
Line_27 $$ from = new FileInputStream(from_file)-->Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)[ FD ]
Line_29 $$ byte[] buffer = new byte[4096]-->Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)[ FD ]
Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)-->Line_31 $$ to.write(buffer, 0, bytes_read)[ CD ]
Line_25 $$ FileOutputStream to = null-->Line_31 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_28 $$ to = new FileOutputStream(to_file)-->Line_31 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_29 $$ byte[] buffer = new byte[4096]-->Line_31 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)-->Line_31 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_30 $$ int bytes_read-->Line_31 $$ to.write(buffer, 0, bytes_read)[ FD ]
Line_24 $$ FileInputStream from = null-->Line_33 $$ if (from != null)[ FD ]
Line_27 $$ from = new FileInputStream(from_file)-->Line_33 $$ if (from != null)[ FD ]
Line_24 $$ FileInputStream from = null-->Line_34 $$ from.close()[ FD ]
Line_27 $$ from = new FileInputStream(from_file)-->Line_34 $$ from.close()[ FD ]
Line_25 $$ FileOutputStream to = null-->Line_38 $$ if (to != null)[ FD ]
Line_28 $$ to = new FileOutputStream(to_file)-->Line_38 $$ if (to != null)[ FD ]
Line_25 $$ FileOutputStream to = null-->Line_39 $$ to.close()[ FD ]
Line_28 $$ to = new FileOutputStream(to_file)-->Line_39 $$ to.close()[ FD ]
Line_31 $$ while ((bytes_read = from.read(buffer)) != -1) to.write(buffer, 0, bytes_read)-->Line_31 $$ to.write(buffer, 0, bytes_read)[ FD ]
