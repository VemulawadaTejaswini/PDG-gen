Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException [ CD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")-->Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")[ CD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_4 $$ connection.setAutoCommit(false)[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")-->Line_4 $$ connection.setAutoCommit(false)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")[ CD ]
Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")-->Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")-->Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_6 $$ ps.setString(1, myField)[ CD ]
Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")-->Line_6 $$ ps.setString(1, myField)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_6 $$ ps.setString(1, myField)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_7 $$ ps.setString(2, condition1)[ CD ]
Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")-->Line_7 $$ ps.setString(2, condition1)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_7 $$ ps.setString(2, condition1)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_8 $$ ps.setString(3, condition2)[ CD ]
Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")-->Line_8 $$ ps.setString(3, condition2)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_8 $$ ps.setString(3, condition2)[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_10 $$ // If more than 10 entries change, panic and rollback[ CD ]
Line_10 $$ // If more than 10 entries change, panic and rollback-->Line_10 $$ // If more than 10 entries change, panic and rollback[ CD ]
Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")-->Line_10 $$ // If more than 10 entries change, panic and rollback[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_11 $$ if (numChanged > 10) [ CD ]
Line_10 $$ // If more than 10 entries change, panic and rollback-->Line_11 $$ if (numChanged > 10) [ FD ]
Line_11 $$ if (numChanged > 10) -->Line_12 $$ connection.rollback()[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")-->Line_12 $$ connection.rollback()[ FD ]
Line_11 $$ if (numChanged > 10) -->Line_14 $$ connection.commit()[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")-->Line_14 $$ connection.commit()[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_16 $$ ps.close()[ CD ]
Line_5 $$ PreparedStatement ps = connection.prepareStatement("UPDATE myTable SET myField = ? WHERE myOtherField1 = ? AND myOtherField2 = ?")-->Line_16 $$ ps.close()[ FD ]
Line_2 $$ public static void Sample1(String myField, String condition1, String condition2) throws SQLException -->Line_17 $$ connection.close()[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password")-->Line_17 $$ connection.close()[ FD ]
