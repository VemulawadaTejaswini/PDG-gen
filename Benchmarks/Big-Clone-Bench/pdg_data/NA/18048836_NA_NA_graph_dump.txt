Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException [ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)[ FD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_4 $$ if (con == null) [ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_4 $$ if (con == null) [ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_8 $$ con.setAutoCommit(false)[ FD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_9 $$ HashMap<String, String> ldap2db = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_LDAP2DB + this.dbInsertName)[ FD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_10 $$ Iterator<LDAPModification> it = mods.iterator()[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_10 $$ Iterator<LDAPModification> it = mods.iterator()[ FD ]
Line_12 $$ while (it.hasNext()) -->Line_12 $$ while (it.hasNext()) [ CD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_12 $$ while (it.hasNext()) [ FD ]
Line_12 $$ while (it.hasNext()) -->Line_13 $$ LDAPModification mod = it.next()[ CD ]
Line_13 $$ LDAPModification mod = it.next()-->Line_13 $$ LDAPModification mod = it.next()[ CD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_13 $$ LDAPModification mod = it.next()[ FD ]
Line_12 $$ while (it.hasNext()) -->Line_14 $$ if (mod.getOp() != LDAPModification.REPLACE) [ CD ]
Line_13 $$ LDAPModification mod = it.next()-->Line_14 $$ if (mod.getOp() != LDAPModification.REPLACE) [ FD ]
Line_12 $$ while (it.hasNext()) -->Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "[ CD ]
Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "-->Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "[ FD ]
Line_11 $$ String sql = "UPDATE " + this.tableName + " SET "-->Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "[ FD ]
Line_9 $$ HashMap<String, String> ldap2db = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_LDAP2DB + this.dbInsertName)-->Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "[ FD ]
Line_13 $$ LDAPModification mod = it.next()-->Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "[ FD ]
Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "-->Line_19 $$ sql += " WHERE " + this.rdnField + "=?"[ FD ]
Line_11 $$ String sql = "UPDATE " + this.tableName + " SET "-->Line_19 $$ sql += " WHERE " + this.rdnField + "=?"[ FD ]
Line_19 $$ sql += " WHERE " + this.rdnField + "=?"-->Line_19 $$ sql += " WHERE " + this.rdnField + "=?"[ FD ]
Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)-->Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)[ FD ]
Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "-->Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)[ FD ]
Line_11 $$ String sql = "UPDATE " + this.tableName + " SET "-->Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)[ FD ]
Line_19 $$ sql += " WHERE " + this.rdnField + "=?"-->Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)[ FD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_21 $$ it = mods.iterator()[ FD ]
Line_21 $$ it = mods.iterator()-->Line_21 $$ it = mods.iterator()[ FD ]
Line_21 $$ it = mods.iterator()-->Line_21 $$ it = mods.iterator()[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_21 $$ it = mods.iterator()[ FD ]
Line_23 $$ while (it.hasNext()) -->Line_23 $$ while (it.hasNext()) [ CD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_23 $$ while (it.hasNext()) [ FD ]
Line_21 $$ it = mods.iterator()-->Line_23 $$ while (it.hasNext()) [ FD ]
Line_23 $$ while (it.hasNext()) -->Line_24 $$ LDAPModification mod = it.next()[ CD ]
Line_24 $$ LDAPModification mod = it.next()-->Line_24 $$ LDAPModification mod = it.next()[ CD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_24 $$ LDAPModification mod = it.next()[ FD ]
Line_21 $$ it = mods.iterator()-->Line_24 $$ LDAPModification mod = it.next()[ FD ]
Line_23 $$ while (it.hasNext()) -->Line_25 $$ ps.setString(i, mod.getAttribute().getStringValue())[ CD ]
Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)-->Line_25 $$ ps.setString(i, mod.getAttribute().getStringValue())[ FD ]
Line_22 $$ int i = 1-->Line_25 $$ ps.setString(i, mod.getAttribute().getStringValue())[ FD ]
Line_24 $$ LDAPModification mod = it.next()-->Line_25 $$ ps.setString(i, mod.getAttribute().getStringValue())[ FD ]
Line_13 $$ LDAPModification mod = it.next()-->Line_25 $$ ps.setString(i, mod.getAttribute().getStringValue())[ FD ]
Line_23 $$ while (it.hasNext()) -->Line_26 $$ i++[ CD ]
Line_22 $$ int i = 1-->Line_26 $$ i++[ FD ]
Line_28 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()-->Line_28 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_28 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()[ FD ]
Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)-->Line_29 $$ ps.setString(i, uid)[ FD ]
Line_22 $$ int i = 1-->Line_29 $$ ps.setString(i, uid)[ FD ]
Line_28 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()-->Line_29 $$ ps.setString(i, uid)[ FD ]
Line_20 $$ PreparedStatement ps = con.prepareStatement(sql)-->Line_30 $$ ps.executeUpdate()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_31 $$ con.commit()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + this.dbInsertName)-->Line_34 $$ con.rollback()[ FD ]
Line_13 $$ LDAPModification mod = it.next()-->Line_14 $$ if (mod.getOp() != LDAPModification.REPLACE) [ FD ]
Line_13 $$ LDAPModification mod = it.next()-->Line_17 $$ sql += ldap2db.get(mod.getAttribute().getName()) + "=? "[ FD ]
Line_24 $$ LDAPModification mod = it.next()-->Line_25 $$ ps.setString(i, mod.getAttribute().getStringValue())[ FD ]
