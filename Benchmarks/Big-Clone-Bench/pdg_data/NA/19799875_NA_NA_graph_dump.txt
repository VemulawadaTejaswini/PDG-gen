Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_4 $$ URL url = new URL("http://www.sourceforge.net/projects/beobachter/files/beobachter_version.html")-->Line_5 $$ InputStreamReader reader = new InputStreamReader(url.openStream())[ FD ]
Line_7 $$ String version = buffer.readLine()-->Line_7 $$ String version = buffer.readLine()[ CD ]
Line_6 $$ BufferedReader buffer = new BufferedReader(reader)-->Line_7 $$ String version = buffer.readLine()[ FD ]
Line_6 $$ BufferedReader buffer = new BufferedReader(reader)-->Line_8 $$ buffer.close()[ FD ]
Line_5 $$ InputStreamReader reader = new InputStreamReader(url.openStream())-->Line_9 $$ reader.close()[ FD ]
Line_10 $$ int serverVersion = Integer.valueOf(version.replaceAll("\\.", "")).intValue()-->Line_10 $$ int serverVersion = Integer.valueOf(version.replaceAll("\\.", "")).intValue()[ CD ]
Line_7 $$ String version = buffer.readLine()-->Line_10 $$ int serverVersion = Integer.valueOf(version.replaceAll("\\.", "")).intValue()[ FD ]
Line_11 $$ int currentVersion = Integer.valueOf(Constants.APP_VERSION.replaceAll("\\.", "")).intValue()-->Line_11 $$ int currentVersion = Integer.valueOf(Constants.APP_VERSION.replaceAll("\\.", "")).intValue()[ CD ]
Line_10 $$ int serverVersion = Integer.valueOf(version.replaceAll("\\.", "")).intValue()-->Line_12 $$ if (serverVersion > currentVersion) [ FD ]
Line_11 $$ int currentVersion = Integer.valueOf(Constants.APP_VERSION.replaceAll("\\.", "")).intValue()-->Line_12 $$ if (serverVersion > currentVersion) [ FD ]
Line_12 $$ if (serverVersion > currentVersion) -->Line_13 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_12 $$ if (serverVersion > currentVersion) -->Line_14 $$ sb.append(MessageFormat.format(Translator.t("New_version_0_available"), new Object[] [ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(MessageFormat.format(Translator.t("New_version_0_available"), new Object[] [ FD ]
Line_12 $$ if (serverVersion > currentVersion) -->Line_15 $$ sb.append(Translator.t("Please_visit_us_on_sourceforge")).append(Constants.LINE_SEP)[ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(Translator.t("Please_visit_us_on_sourceforge")).append(Constants.LINE_SEP)[ FD ]
Line_12 $$ if (serverVersion > currentVersion) -->Line_16 $$ DialogFactory.showInformationMessage(MainGUI.instance, sb.toString())[ CD ]
Line_13 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ DialogFactory.showInformationMessage(MainGUI.instance, sb.toString())[ FD ]
Line_12 $$ if (serverVersion > currentVersion) -->Line_17 $$ if (serverVersion <= currentVersion) [ CD ]
Line_10 $$ int serverVersion = Integer.valueOf(version.replaceAll("\\.", "")).intValue()-->Line_17 $$ if (serverVersion <= currentVersion) [ FD ]
Line_11 $$ int currentVersion = Integer.valueOf(Constants.APP_VERSION.replaceAll("\\.", "")).intValue()-->Line_17 $$ if (serverVersion <= currentVersion) [ FD ]
Line_17 $$ if (serverVersion <= currentVersion) -->Line_18 $$ DialogFactory.showInformationMessage(MainGUI.instance, Translator.t("There_are_not_updates_available"))[ CD ]
