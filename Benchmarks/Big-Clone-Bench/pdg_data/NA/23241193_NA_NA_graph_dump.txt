Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void publishCMap(LWMap map) throws IOException [ CD ]
Line_4 $$ File savedCMap = PublishUtil.createIMSCP(Publisher.resourceVector)-->Line_4 $$ File savedCMap = PublishUtil.createIMSCP(Publisher.resourceVector)[ CD ]
Line_4 $$ File savedCMap = PublishUtil.createIMSCP(Publisher.resourceVector)-->Line_7 $$ int fileLength = (int) savedCMap.length()[ FD ]
Line_5 $$ InputStream istream = new BufferedInputStream(new FileInputStream(savedCMap))-->Line_9 $$ while (istream.read(bytes, 0, fileLength) != -1) ostream.write(bytes, 0, fileLength)[ FD ]
Line_7 $$ int fileLength = (int) savedCMap.length()-->Line_9 $$ while (istream.read(bytes, 0, fileLength) != -1) ostream.write(bytes, 0, fileLength)[ FD ]
Line_9 $$ while (istream.read(bytes, 0, fileLength) != -1) ostream.write(bytes, 0, fileLength)-->Line_9 $$ ostream.write(bytes, 0, fileLength)[ CD ]
Line_6 $$ OutputStream ostream = new BufferedOutputStream(new FileOutputStream(ActionUtil.selectFile("IMSCP", "zip")))-->Line_9 $$ ostream.write(bytes, 0, fileLength)[ FD ]
Line_7 $$ int fileLength = (int) savedCMap.length()-->Line_9 $$ ostream.write(bytes, 0, fileLength)[ FD ]
Line_5 $$ InputStream istream = new BufferedInputStream(new FileInputStream(savedCMap))-->Line_10 $$ istream.close()[ FD ]
Line_6 $$ OutputStream ostream = new BufferedOutputStream(new FileOutputStream(ActionUtil.selectFile("IMSCP", "zip")))-->Line_11 $$ ostream.close()[ FD ]
