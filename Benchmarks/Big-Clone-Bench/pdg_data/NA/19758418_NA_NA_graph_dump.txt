Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String post(String strUrl, String data) throws Exception [ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_3 $$ URL url = new URL(strUrl)[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_4 $$ final String method = "POST"[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_5 $$ final String host = url.getHost()[ CD ]
Line_5 $$ final String host = url.getHost()-->Line_5 $$ final String host = url.getHost()[ CD ]
Line_3 $$ URL url = new URL(strUrl)-->Line_5 $$ final String host = url.getHost()[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_6 $$ final String contentType = "application/x-www-form-urlencoded"[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_7 $$ final int contentLength = getContentLength(data)[ CD ]
Line_7 $$ final int contentLength = getContentLength(data)-->Line_7 $$ final int contentLength = getContentLength(data)[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_7 $$ final int contentLength = getContentLength(data)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_8 $$ final String encoding = "UTF-8"[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_9 $$ final String connection = "Close"[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_10 $$ Config.log(DEBUG, "Sending data to: " + url + " (host=" + host + ", encoding=" + encoding + ", method=" + method + ", Content-Type=" + contentType + ", Content-Length=" + contentLength + ", Connection=" + connection + "):" + "\r\n" + data)[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(strUrl)-->Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_12 $$ conn.setDoOutput(true)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_13 $$ conn.setRequestMethod(method)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn.setRequestMethod(method)[ FD ]
Line_4 $$ final String method = "POST"-->Line_13 $$ conn.setRequestMethod(method)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_14 $$ conn.setRequestProperty("host", host)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setRequestProperty("host", host)[ FD ]
Line_5 $$ final String host = url.getHost()-->Line_14 $$ conn.setRequestProperty("host", host)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_15 $$ conn.setRequestProperty("content-type", contentType)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ conn.setRequestProperty("content-type", contentType)[ FD ]
Line_6 $$ final String contentType = "application/x-www-form-urlencoded"-->Line_15 $$ conn.setRequestProperty("content-type", contentType)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_16 $$ conn.setRequestProperty("Content-Encoding", encoding)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ conn.setRequestProperty("Content-Encoding", encoding)[ FD ]
Line_8 $$ final String encoding = "UTF-8"-->Line_16 $$ conn.setRequestProperty("Content-Encoding", encoding)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_17 $$ conn.setRequestProperty("content-length", contentLength + "")[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_17 $$ conn.setRequestProperty("content-length", contentLength + "")[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_18 $$ conn.setRequestProperty("connection", connection)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_18 $$ conn.setRequestProperty("connection", connection)[ FD ]
Line_9 $$ final String connection = "Close"-->Line_18 $$ conn.setRequestProperty("connection", connection)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_19 $$ if (tools.valid(Config.JSON_RPC_WEBSERVER_USERNAME) && tools.valid(Config.JSON_RPC_WEBSERVER_PASSWORD)) [ CD ]
Line_19 $$ if (tools.valid(Config.JSON_RPC_WEBSERVER_USERNAME) && tools.valid(Config.JSON_RPC_WEBSERVER_PASSWORD)) -->Line_20 $$ String authString = Config.JSON_RPC_WEBSERVER_USERNAME + ":" + Config.JSON_RPC_WEBSERVER_PASSWORD[ CD ]
Line_19 $$ if (tools.valid(Config.JSON_RPC_WEBSERVER_USERNAME) && tools.valid(Config.JSON_RPC_WEBSERVER_PASSWORD)) -->Line_21 $$ String authStringEnc = new sun.misc.BASE64Encoder().encode(authString.getBytes())[ CD ]
Line_21 $$ String authStringEnc = new sun.misc.BASE64Encoder().encode(authString.getBytes())-->Line_21 $$ String authStringEnc = new sun.misc.BASE64Encoder().encode(authString.getBytes())[ CD ]
Line_20 $$ String authString = Config.JSON_RPC_WEBSERVER_USERNAME + ":" + Config.JSON_RPC_WEBSERVER_PASSWORD-->Line_21 $$ String authStringEnc = new sun.misc.BASE64Encoder().encode(authString.getBytes())[ FD ]
Line_19 $$ if (tools.valid(Config.JSON_RPC_WEBSERVER_USERNAME) && tools.valid(Config.JSON_RPC_WEBSERVER_PASSWORD)) -->Line_22 $$ conn.setRequestProperty("Authorization", "Basic " + authStringEnc)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_22 $$ conn.setRequestProperty("Authorization", "Basic " + authStringEnc)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_24 $$ conn.setReadTimeout((int) (Config.JSON_RPC_TIMEOUT_SECONDS * 1000))[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_24 $$ conn.setReadTimeout((int) (Config.JSON_RPC_TIMEOUT_SECONDS * 1000))[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_25 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_25 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_26 $$ writer.write(data)[ CD ]
Line_25 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_26 $$ writer.write(data)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_26 $$ writer.write(data)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_27 $$ writer.flush()[ CD ]
Line_25 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_27 $$ writer.flush()[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_28 $$ writer.close()[ CD ]
Line_25 $$ OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())-->Line_28 $$ writer.close()[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_29 $$ int responseCode = 400[ CD ]
Line_29 $$ int responseCode = 400-->Line_31 $$ responseCode = conn.getResponseCode()[ FD ]
Line_31 $$ responseCode = conn.getResponseCode()-->Line_31 $$ responseCode = conn.getResponseCode()[ FD ]
Line_31 $$ responseCode = conn.getResponseCode()-->Line_31 $$ responseCode = conn.getResponseCode()[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_31 $$ responseCode = conn.getResponseCode()[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())[ CD ]
Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())-->Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())[ FD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_36 $$ if (response == null) [ CD ]
Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())-->Line_36 $$ if (response == null) [ FD ]
Line_36 $$ if (response == null) -->Line_37 $$ return null[ CD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_39 $$ Config.log(DEBUG, "Raw response from POST. Response Code = " + conn.getResponseCode() + " (" + conn.getResponseMessage() + "):\r\n" + response)[ CD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_39 $$ Config.log(DEBUG, "Raw response from POST. Response Code = " + conn.getResponseCode() + " (" + conn.getResponseMessage() + "):\r\n" + response)[ FD ]
Line_11 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_39 $$ Config.log(DEBUG, "Raw response from POST. Response Code = " + conn.getResponseCode() + " (" + conn.getResponseMessage() + "):\r\n" + response)[ FD ]
Line_2 $$ public static String post(String strUrl, String data) throws Exception -->Line_40 $$ return response.toString()[ CD ]
Line_40 $$ return response.toString()-->Line_40 $$ return response.toString()[ CD ]
Line_35 $$ String response = readStream(responseCode == 200 ? conn.getInputStream() : conn.getErrorStream())-->Line_40 $$ return response.toString()[ FD ]
