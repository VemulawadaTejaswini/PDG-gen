Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException [ CD ]
Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException -->Line_3 $$ if (truncateFirst) [ CD ]
Line_3 $$ if (truncateFirst) -->Line_4 $$ this.executeUpdate("TRUNCATE TABLE " + tempTableName)[ CD ]
Line_3 $$ if (truncateFirst) -->Line_5 $$ Categories.dataDb().debug("TABLE " + tempTableName + " TRUNCATED.")[ CD ]
Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException -->Line_7 $$ PreparedStatement ps = null[ CD ]
Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException -->Line_8 $$ int rows = 0[ CD ]
Line_7 $$ PreparedStatement ps = null-->Line_11 $$ ps = this.conn.prepareStatement(insert)[ FD ]
Line_11 $$ ps = this.conn.prepareStatement(insert)-->Line_11 $$ ps = this.conn.prepareStatement(insert)[ FD ]
Line_11 $$ ps = this.conn.prepareStatement(insert)-->Line_11 $$ ps = this.conn.prepareStatement(insert)[ CD ]
Line_10 $$ String insert = "INSERT INTO " + tempTableName + " VALUES (?)"-->Line_11 $$ ps = this.conn.prepareStatement(insert)[ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ CD ]
Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_13 $$ ps.setLong(1, ((Long) cons.get(i)).longValue())[ CD ]
Line_7 $$ PreparedStatement ps = null-->Line_13 $$ ps.setLong(1, ((Long) cons.get(i)).longValue())[ FD ]
Line_11 $$ ps = this.conn.prepareStatement(insert)-->Line_13 $$ ps.setLong(1, ((Long) cons.get(i)).longValue())[ FD ]
Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException -->Line_13 $$ ps.setLong(1, ((Long) cons.get(i)).longValue())[ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_13 $$ ps.setLong(1, ((Long) cons.get(i)).longValue())[ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_14 $$ rows = ps.executeUpdate()[ CD ]
Line_14 $$ rows = ps.executeUpdate()-->Line_14 $$ rows = ps.executeUpdate()[ FD ]
Line_8 $$ int rows = 0-->Line_14 $$ rows = ps.executeUpdate()[ FD ]
Line_14 $$ rows = ps.executeUpdate()-->Line_14 $$ rows = ps.executeUpdate()[ CD ]
Line_7 $$ PreparedStatement ps = null-->Line_14 $$ rows = ps.executeUpdate()[ FD ]
Line_11 $$ ps = this.conn.prepareStatement(insert)-->Line_14 $$ rows = ps.executeUpdate()[ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_15 $$ if ((i % 500) == 0) [ CD ]
Line_15 $$ if ((i % 500) == 0) -->Line_16 $$ this.conn.commit()[ CD ]
Line_7 $$ PreparedStatement ps = null-->Line_24 $$ if (ps != null) [ FD ]
Line_11 $$ ps = this.conn.prepareStatement(insert)-->Line_24 $$ if (ps != null) [ FD ]
Line_24 $$ if (ps != null) -->Line_25 $$ ps.close()[ CD ]
Line_7 $$ PreparedStatement ps = null-->Line_25 $$ ps.close()[ FD ]
Line_11 $$ ps = this.conn.prepareStatement(insert)-->Line_25 $$ ps.close()[ FD ]
Line_2 $$ private int saveToTempTable(ArrayList cons, String tempTableName, boolean truncateFirst) throws SQLException -->Line_28 $$ return rows[ CD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_12 $$ for (int i = 0; i < cons.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < cons.size(); i++) -->Line_13 $$ ps.setLong(1, ((Long) cons.get(i)).longValue())[ FD ]
