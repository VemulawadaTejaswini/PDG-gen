Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void checkFilesAndCopyValid(String filename) [ CD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_3 $$ downloadResults()[ CD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_4 $$ loadResults()[ CD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_5 $$ File tmpFolderF = new File(tmpFolder)[ CD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_6 $$ deleteFileFromTMPFolder(tmpFolderF)[ CD ]
Line_5 $$ File tmpFolderF = new File(tmpFolder)-->Line_6 $$ deleteFileFromTMPFolder(tmpFolderF)[ FD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_7 $$ ZipReader zr = new ZipReader()[ CD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_8 $$ zr.UnzipFile(filename)[ CD ]
Line_7 $$ ZipReader zr = new ZipReader()-->Line_8 $$ zr.UnzipFile(filename)[ FD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_8 $$ zr.UnzipFile(filename)[ FD ]
Line_12 $$ JAXBElement<?> element = ElementJAXB.getJAXBElement()-->Line_12 $$ JAXBElement<?> element = ElementJAXB.getJAXBElement()[ CD ]
Line_12 $$ JAXBElement<?> element = ElementJAXB.getJAXBElement()-->Line_13 $$ Ppa1VysledkyCviceniType pvct = (Ppa1VysledkyCviceniType) element.getValue()[ FD ]
Line_15 $$ File[] zipFolderList = zipFolder.listFiles()-->Line_15 $$ File[] zipFolderList = zipFolder.listFiles()[ CD ]
Line_14 $$ File zipFolder = new File(tmpFolder).listFiles()[0].listFiles()[0].listFiles()[0]-->Line_15 $$ File[] zipFolderList = zipFolder.listFiles()[ FD ]
Line_16 $$ for (File studentDirectory : zipFolderList) -->Line_17 $$ if (studentDirectory.isDirectory()) [ FD ]
Line_17 $$ if (studentDirectory.isDirectory()) -->Line_17 $$ if (studentDirectory.isDirectory()) [ CD ]
Line_16 $$ for (File studentDirectory : zipFolderList) -->Line_17 $$ if (studentDirectory.isDirectory()) [ FD ]
Line_17 $$ if (studentDirectory.isDirectory()) -->Line_18 $$ String osobniCisloZeSlozky = studentDirectory.getName().split("-")[0][ CD ]
Line_16 $$ for (File studentDirectory : zipFolderList) -->Line_18 $$ String osobniCisloZeSlozky = studentDirectory.getName().split("-")[0][ FD ]
Line_17 $$ if (studentDirectory.isDirectory()) -->Line_19 $$ LogManager.getInstance().changeLog("Prov��ov�n� soubor� studenta s ��slem: " + osobniCisloZeSlozky)[ CD ]
Line_17 $$ if (studentDirectory.isDirectory()) -->Line_20 $$ List<StudentType> students = (List<StudentType>) pvct.getStudent()[ CD ]
Line_13 $$ Ppa1VysledkyCviceniType pvct = (Ppa1VysledkyCviceniType) element.getValue()-->Line_20 $$ List<StudentType> students = (List<StudentType>) pvct.getStudent()[ FD ]
Line_18 $$ String osobniCisloZeSlozky = studentDirectory.getName().split("-")[0]-->Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) [ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) [ CD ]
Line_18 $$ String osobniCisloZeSlozky = studentDirectory.getName().split("-")[0]-->Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) [ FD ]
Line_21 $$ for (StudentType student : students) -->Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) [ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_23 $$ int pzp = student.getDomaciUlohy().getPosledniZpracovanyPokus().getCislo().intValue()[ CD ]
Line_23 $$ int pzp = student.getDomaciUlohy().getPosledniZpracovanyPokus().getCislo().intValue()-->Line_23 $$ int pzp = student.getDomaciUlohy().getPosledniZpracovanyPokus().getCislo().intValue()[ CD ]
Line_21 $$ for (StudentType student : students) -->Line_23 $$ int pzp = student.getDomaciUlohy().getPosledniZpracovanyPokus().getCislo().intValue()[ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_24 $$ DomaciUlohyType dut = student.getDomaciUlohy()[ CD ]
Line_24 $$ DomaciUlohyType dut = student.getDomaciUlohy()-->Line_24 $$ DomaciUlohyType dut = student.getDomaciUlohy()[ CD ]
Line_21 $$ for (StudentType student : students) -->Line_24 $$ DomaciUlohyType dut = student.getDomaciUlohy()[ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_25 $$ ChybneOdevzdaneType chot = dut.getChybneOdevzdane()[ CD ]
Line_25 $$ ChybneOdevzdaneType chot = dut.getChybneOdevzdane()-->Line_25 $$ ChybneOdevzdaneType chot = dut.getChybneOdevzdane()[ CD ]
Line_24 $$ DomaciUlohyType dut = student.getDomaciUlohy()-->Line_25 $$ ChybneOdevzdaneType chot = dut.getChybneOdevzdane()[ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_26 $$ ObjectFactory of = new ObjectFactory()[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_27 $$ File[] pokusyDirectories = studentDirectory.listFiles()[ CD ]
Line_27 $$ File[] pokusyDirectories = studentDirectory.listFiles()-->Line_27 $$ File[] pokusyDirectories = studentDirectory.listFiles()[ CD ]
Line_16 $$ for (File studentDirectory : zipFolderList) -->Line_27 $$ File[] pokusyDirectories = studentDirectory.listFiles()[ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_28 $$ NodeList souboryNL = result.getElementsByTagName("soubor")[ CD ]
Line_28 $$ NodeList souboryNL = result.getElementsByTagName("soubor")-->Line_28 $$ NodeList souboryNL = result.getElementsByTagName("soubor")[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_29 $$ int start = souboryNL.getLength() - 1[ CD ]
Line_28 $$ NodeList souboryNL = result.getElementsByTagName("soubor")-->Line_29 $$ int start = souboryNL.getLength() - 1[ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_30 $$ boolean samostatnaPrace = false[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) [ CD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ CD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ CD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ FD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) [ CD ]
Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) -->Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0][ CD ]
Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) -->Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) [ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) [ FD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_35 $$ String[] partsOfFilename = testedFile.getName().split("_")[ CD ]
Line_35 $$ String[] partsOfFilename = testedFile.getName().split("_")-->Line_35 $$ String[] partsOfFilename = testedFile.getName().split("_")[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_35 $$ String[] partsOfFilename = testedFile.getName().split("_")[ FD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""[ CD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_37 $$ String[] posledniCastSouboru = null[ CD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_38 $$ if (partsOfFilename.length == 4) [ CD ]
Line_38 $$ if (partsOfFilename.length == 4) -->Line_39 $$ posledniCastSouboru = partsOfFilename[3].split("[.]")[ CD ]
Line_37 $$ String[] posledniCastSouboru = null-->Line_39 $$ posledniCastSouboru = partsOfFilename[3].split("[.]")[ FD ]
Line_39 $$ posledniCastSouboru = partsOfFilename[3].split("[.]")-->Line_39 $$ posledniCastSouboru = partsOfFilename[3].split("[.]")[ FD ]
Line_39 $$ posledniCastSouboru = partsOfFilename[3].split("[.]")-->Line_39 $$ posledniCastSouboru = partsOfFilename[3].split("[.]")[ CD ]
Line_38 $$ if (partsOfFilename.length == 4) -->Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0][ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0][ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0][ FD ]
Line_38 $$ if (partsOfFilename.length == 4) -->Line_41 $$ if (posledniCastSouboru.length <= 1)[ CD ]
Line_41 $$ if (posledniCastSouboru.length <= 1)-->Line_41 $$ priponaSouboru = ""[ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_41 $$ priponaSouboru = ""[ FD ]
Line_41 $$ priponaSouboru = ""-->Line_41 $$ priponaSouboru = ""[ FD ]
Line_41 $$ if (posledniCastSouboru.length <= 1)-->Line_41 $$ priponaSouboru = posledniCastSouboru[1][ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_41 $$ priponaSouboru = posledniCastSouboru[1][ FD ]
Line_41 $$ priponaSouboru = ""-->Line_41 $$ priponaSouboru = posledniCastSouboru[1][ FD ]
Line_41 $$ priponaSouboru = posledniCastSouboru[1]-->Line_41 $$ priponaSouboru = posledniCastSouboru[1][ FD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()[ CD ]
Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()-->Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()[ CD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_44 $$ List<SouborType> lst = chot.getSoubor()[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_44 $$ List<SouborType> lst = chot.getSoubor()[ CD ]
Line_25 $$ ChybneOdevzdaneType chot = dut.getChybneOdevzdane()-->Line_44 $$ List<SouborType> lst = chot.getSoubor()[ FD ]
Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) -->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ CD ]
Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()-->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ FD ]
Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) -->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ CD ]
Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()-->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ FD ]
Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) -->Line_46 $$ samostatnaPrace = true[ CD ]
Line_46 $$ samostatnaPrace = true-->Line_46 $$ samostatnaPrace = true[ FD ]
Line_30 $$ boolean samostatnaPrace = false-->Line_46 $$ samostatnaPrace = true[ FD ]
Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) -->Line_48 $$ samostatnaPrace = false[ CD ]
Line_46 $$ samostatnaPrace = true-->Line_48 $$ samostatnaPrace = false[ FD ]
Line_48 $$ samostatnaPrace = false-->Line_48 $$ samostatnaPrace = false[ FD ]
Line_30 $$ boolean samostatnaPrace = false-->Line_48 $$ samostatnaPrace = false[ FD ]
Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) -->Line_49 $$ if (partsOfFilename.length != 4) [ CD ]
Line_49 $$ if (partsOfFilename.length != 4) -->Line_50 $$ SouborType st = new SouborType()[ CD ]
Line_49 $$ if (partsOfFilename.length != 4) -->Line_51 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_51 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_51 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_49 $$ if (partsOfFilename.length != 4) -->Line_52 $$ st.setDuvod("�patn� struktura jm�na souboru.")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_52 $$ st.setDuvod("�patn� struktura jm�na souboru.")[ FD ]
Line_49 $$ if (partsOfFilename.length != 4) -->Line_53 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_53 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_53 $$ lst.add(st)[ FD ]
Line_49 $$ if (partsOfFilename.length != 4) -->Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) [ CD ]
Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) -->Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) [ CD ]
Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) -->Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) [ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) [ FD ]
Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) -->Line_57 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_57 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_57 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) -->Line_58 $$ st.setDuvod("�patn� za��tek jm�na souboru.")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_58 $$ st.setDuvod("�patn� za��tek jm�na souboru.")[ FD ]
Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) -->Line_59 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_59 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_59 $$ lst.add(st)[ FD ]
Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) -->Line_61 $$ if (!priponaSouboru.equals("java")) [ CD ]
Line_61 $$ if (!priponaSouboru.equals("java")) -->Line_61 $$ if (!priponaSouboru.equals("java")) [ CD ]
Line_61 $$ if (!priponaSouboru.equals("java")) -->Line_61 $$ if (!priponaSouboru.equals("java")) [ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_61 $$ if (!priponaSouboru.equals("java")) [ FD ]
Line_41 $$ priponaSouboru = ""-->Line_61 $$ if (!priponaSouboru.equals("java")) [ FD ]
Line_41 $$ priponaSouboru = posledniCastSouboru[1]-->Line_61 $$ if (!priponaSouboru.equals("java")) [ FD ]
Line_61 $$ if (!priponaSouboru.equals("java")) -->Line_63 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_63 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_63 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_61 $$ if (!priponaSouboru.equals("java")) -->Line_64 $$ st.setDuvod("�patn� p��pona souboru.")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_64 $$ st.setDuvod("�patn� p��pona souboru.")[ FD ]
Line_61 $$ if (!priponaSouboru.equals("java")) -->Line_65 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_65 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_65 $$ lst.add(st)[ FD ]
Line_61 $$ if (!priponaSouboru.equals("java")) -->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ CD ]
Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) -->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ CD ]
Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) -->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ FD ]
Line_18 $$ String osobniCisloZeSlozky = studentDirectory.getName().split("-")[0]-->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ FD ]
Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) -->Line_69 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_69 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_69 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) -->Line_70 $$ st.setDuvod("Nesouhlas� osobn� ��sla.")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_70 $$ st.setDuvod("Nesouhlas� osobn� ��sla.")[ FD ]
Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) -->Line_71 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_71 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_71 $$ lst.add(st)[ FD ]
Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) -->Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) [ CD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_75 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_75 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_75 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_76 $$ st.setDuvod("V�ce p��pon souboru.")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_76 $$ st.setDuvod("V�ce p��pon souboru.")[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_77 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_77 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_77 $$ lst.add(st)[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_80 $$ long cisloCviceni, cisloUlohy[ CD ]
Line_82 $$ if (partsOfFilename[1].length() == 4) -->Line_83 $$ String cisloS = partsOfFilename[1].substring(2)[ CD ]
Line_83 $$ String cisloS = partsOfFilename[1].substring(2)-->Line_83 $$ String cisloS = partsOfFilename[1].substring(2)[ CD ]
Line_82 $$ if (partsOfFilename[1].length() == 4) -->Line_84 $$ long cisloL = Long.parseLong(cisloS)[ CD ]
Line_84 $$ long cisloL = Long.parseLong(cisloS)-->Line_84 $$ long cisloL = Long.parseLong(cisloS)[ CD ]
Line_83 $$ String cisloS = partsOfFilename[1].substring(2)-->Line_84 $$ long cisloL = Long.parseLong(cisloS)[ FD ]
Line_82 $$ if (partsOfFilename[1].length() == 4) -->Line_85 $$ cisloCviceni = cisloL[ CD ]
Line_80 $$ long cisloCviceni, cisloUlohy-->Line_85 $$ cisloCviceni = cisloL[ FD ]
Line_85 $$ cisloCviceni = cisloL-->Line_85 $$ cisloCviceni = cisloL[ FD ]
Line_84 $$ long cisloL = Long.parseLong(cisloS)-->Line_85 $$ cisloCviceni = cisloL[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_91 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_91 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_92 $$ st.setDuvod("Chyb� (nebo je chybn�) ��slo cvi�en�")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_93 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_93 $$ lst.add(st)[ FD ]
Line_97 $$ if (partsOfFilename[2].length() > 0) -->Line_99 $$ long cisloL = Long.parseLong(cisloS)[ CD ]
Line_83 $$ String cisloS = partsOfFilename[1].substring(2)-->Line_99 $$ long cisloL = Long.parseLong(cisloS)[ FD ]
Line_97 $$ if (partsOfFilename[2].length() > 0) -->Line_100 $$ cisloUlohy = cisloL[ CD ]
Line_80 $$ long cisloCviceni, cisloUlohy-->Line_100 $$ cisloUlohy = cisloL[ FD ]
Line_100 $$ cisloUlohy = cisloL-->Line_100 $$ cisloUlohy = cisloL[ FD ]
Line_84 $$ long cisloL = Long.parseLong(cisloS)-->Line_100 $$ cisloUlohy = cisloL[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_106 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_106 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_107 $$ st.setDuvod("Chyb� (nebo je chybn�) ��slo �lohy")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_108 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_108 $$ lst.add(st)[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_111 $$ CislaUloh ci = new CislaUloh()[ CD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_112 $$ List<long[]> cviceni = ci.getSeznamCviceni()[ CD ]
Line_112 $$ List<long[]> cviceni = ci.getSeznamCviceni()-->Line_112 $$ List<long[]> cviceni = ci.getSeznamCviceni()[ CD ]
Line_111 $$ CislaUloh ci = new CislaUloh()-->Line_112 $$ List<long[]> cviceni = ci.getSeznamCviceni()[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false[ CD ]
Line_80 $$ long cisloCviceni, cisloUlohy-->Line_115 $$ if (c[0] == cisloCviceni) [ FD ]
Line_85 $$ cisloCviceni = cisloL-->Line_115 $$ if (c[0] == cisloCviceni) [ FD ]
Line_115 $$ if (c[0] == cisloCviceni) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ CD ]
Line_115 $$ if (c[0] == cisloCviceni) -->Line_115 $$ if (c[0] == cisloCviceni) [ CD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ CD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ CD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_117 $$ if (c[j] == cisloUlohy) [ CD ]
Line_80 $$ long cisloCviceni, cisloUlohy-->Line_117 $$ if (c[j] == cisloUlohy) [ FD ]
Line_100 $$ cisloUlohy = cisloL-->Line_117 $$ if (c[j] == cisloUlohy) [ FD ]
Line_117 $$ if (c[j] == cisloUlohy) -->Line_118 $$ nalezenaUl = true[ CD ]
Line_118 $$ nalezenaUl = true-->Line_118 $$ nalezenaUl = true[ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_118 $$ nalezenaUl = true[ FD ]
Line_115 $$ if (c[0] == cisloCviceni) -->Line_122 $$ nalezenoCv = true[ CD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_122 $$ nalezenoCv = true[ FD ]
Line_122 $$ nalezenoCv = true-->Line_122 $$ nalezenoCv = true[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_126 $$ if (!nalezenoCv) [ CD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_122 $$ nalezenoCv = true-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_126 $$ if (!nalezenoCv) -->Line_126 $$ if (!nalezenoCv) [ CD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_122 $$ nalezenoCv = true-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_126 $$ if (!nalezenoCv) -->Line_128 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_128 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_128 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_126 $$ if (!nalezenoCv) -->Line_129 $$ st.setDuvod("Neplatn� ��slo cvi�en�")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_129 $$ st.setDuvod("Neplatn� ��slo cvi�en�")[ FD ]
Line_126 $$ if (!nalezenoCv) -->Line_130 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_130 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_130 $$ lst.add(st)[ FD ]
Line_73 $$ if (partsOfFilename[3].split("[.]").length > 2) -->Line_133 $$ if (!nalezenaUl) [ CD ]
Line_118 $$ nalezenaUl = true-->Line_133 $$ if (!nalezenaUl) [ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_133 $$ if (!nalezenaUl) [ FD ]
Line_133 $$ if (!nalezenaUl) -->Line_133 $$ if (!nalezenaUl) [ CD ]
Line_118 $$ nalezenaUl = true-->Line_133 $$ if (!nalezenaUl) [ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_133 $$ if (!nalezenaUl) [ FD ]
Line_133 $$ if (!nalezenaUl) -->Line_135 $$ st.setJmeno(testedFile.getName())[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_135 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_135 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_133 $$ if (!nalezenaUl) -->Line_136 $$ st.setDuvod("Neplatn� ��slo �lohy")[ CD ]
Line_50 $$ SouborType st = new SouborType()-->Line_136 $$ st.setDuvod("Neplatn� ��slo �lohy")[ FD ]
Line_133 $$ if (!nalezenaUl) -->Line_137 $$ lst.add(st)[ CD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_137 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_137 $$ lst.add(st)[ FD ]
Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) -->Line_145 $$ if (zipFile.exists()) [ CD ]
Line_145 $$ if (zipFile.exists()) -->Line_145 $$ if (zipFile.exists()) [ CD ]
Line_145 $$ if (zipFile.exists()) -->Line_146 $$ String[] s = zipFile.getName().split("_")[ CD ]
Line_145 $$ if (zipFile.exists()) -->Line_147 $$ if (s.length >= 3) [ CD ]
Line_147 $$ if (s.length >= 3) -->Line_148 $$ String[] date = s[1].split("-"), time = s[2].split("-")[ CD ]
Line_147 $$ if (s.length >= 3) -->Line_148 $$ String[] date = s[1].split("-"), time = s[2].split("-")[ CD ]
Line_147 $$ if (s.length >= 3) -->Line_150 $$ dateFromZipFile.set(Integer.parseInt(date[0]), Integer.parseInt(date[1]) - 1, Integer.parseInt(date[2]), Integer.parseInt(time[0]), Integer.parseInt(time[1]), 0)[ CD ]
Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) -->Line_155 $$ for (int j = start; j >= 0; j--) [ CD ]
Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) -->Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) [ CD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_155 $$ for (int j = start; j >= 0; j--) [ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ CD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ CD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_155 $$ for (int j = start; j >= 0; j--) [ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()[ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()[ CD ]
Line_28 $$ NodeList souboryNL = result.getElementsByTagName("soubor")-->Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()[ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()[ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()[ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ CD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ CD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ CD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ CD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) [ CD ]
Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) -->Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) [ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) [ FD ]
Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) -->Line_159 $$ String[] obsahElementuCas = vlastnostiSouboruNL.item(k).getTextContent().split(" ")[ CD ]
Line_159 $$ String[] obsahElementuCas = vlastnostiSouboruNL.item(k).getTextContent().split(" ")-->Line_159 $$ String[] obsahElementuCas = vlastnostiSouboruNL.item(k).getTextContent().split(" ")[ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_159 $$ String[] obsahElementuCas = vlastnostiSouboruNL.item(k).getTextContent().split(" ")[ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_159 $$ String[] obsahElementuCas = vlastnostiSouboruNL.item(k).getTextContent().split(" ")[ FD ]
Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) -->Line_160 $$ String[] datumZElementu = obsahElementuCas[0].split("-"), casZElementu = obsahElementuCas[1].split("-")[ CD ]
Line_160 $$ String[] datumZElementu = obsahElementuCas[0].split("-"), casZElementu = obsahElementuCas[1].split("-")-->Line_160 $$ String[] datumZElementu = obsahElementuCas[0].split("-"), casZElementu = obsahElementuCas[1].split("-")[ CD ]
Line_160 $$ String[] datumZElementu = obsahElementuCas[0].split("-"), casZElementu = obsahElementuCas[1].split("-")-->Line_160 $$ String[] datumZElementu = obsahElementuCas[0].split("-"), casZElementu = obsahElementuCas[1].split("-")[ CD ]
Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) -->Line_161 $$ Calendar datumACasZElementu = new GregorianCalendar()[ CD ]
Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) -->Line_162 $$ datumACasZElementu.set(Integer.parseInt(datumZElementu[0]), Integer.parseInt(datumZElementu[1]) - 1, Integer.parseInt(datumZElementu[2]), Integer.parseInt(casZElementu[0]), Integer.parseInt(casZElementu[1]), Integer.parseInt(casZElementu[2]))[ CD ]
Line_161 $$ Calendar datumACasZElementu = new GregorianCalendar()-->Line_162 $$ datumACasZElementu.set(Integer.parseInt(datumZElementu[0]), Integer.parseInt(datumZElementu[1]) - 1, Integer.parseInt(datumZElementu[2]), Integer.parseInt(casZElementu[0]), Integer.parseInt(casZElementu[1]), Integer.parseInt(casZElementu[2]))[ FD ]
Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) -->Line_163 $$ if ((dateFromZipFile != null) && (datumACasZElementu.compareTo(dateFromZipFile) > 0)) [ CD ]
Line_161 $$ Calendar datumACasZElementu = new GregorianCalendar()-->Line_163 $$ if ((dateFromZipFile != null) && (datumACasZElementu.compareTo(dateFromZipFile) > 0)) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) [ CD ]
Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) -->Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) [ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) [ FD ]
Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) -->Line_169 $$ shodaJmenaSouboru = vlastnostiSouboruNL.item(k).getTextContent().equals(testedFile.getName())[ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_169 $$ shodaJmenaSouboru = vlastnostiSouboruNL.item(k).getTextContent().equals(testedFile.getName())[ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_169 $$ shodaJmenaSouboru = vlastnostiSouboruNL.item(k).getTextContent().equals(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_169 $$ shodaJmenaSouboru = vlastnostiSouboruNL.item(k).getTextContent().equals(testedFile.getName())[ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) [ CD ]
Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) -->Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) [ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) [ FD ]
Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) -->Line_172 $$ vysledekValidaceSouboru = vlastnostiSouboruNL.item(k).getTextContent()[ CD ]
Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()-->Line_172 $$ vysledekValidaceSouboru = vlastnostiSouboruNL.item(k).getTextContent()[ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_172 $$ vysledekValidaceSouboru = vlastnostiSouboruNL.item(k).getTextContent()[ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_175 $$ if (shodaJmenaSouboru) [ CD ]
Line_175 $$ if (shodaJmenaSouboru) -->Line_176 $$ start = --j[ CD ]
Line_176 $$ start = --j-->Line_176 $$ start = --j[ FD ]
Line_29 $$ int start = souboryNL.getLength() - 1-->Line_176 $$ start = --j[ FD ]
Line_176 $$ start = --j-->Line_176 $$ start = --j[ CD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_176 $$ start = --j[ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_176 $$ start = --j[ FD ]
Line_32 $$ if ((pokusyDirectories[i].isDirectory()) && (pzp < Integer.parseInt(pokusyDirectories[i].getName().split("_")[1].trim()))) -->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ CD ]
Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) -->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ CD ]
Line_46 $$ samostatnaPrace = true-->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ FD ]
Line_48 $$ samostatnaPrace = false-->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ FD ]
Line_30 $$ boolean samostatnaPrace = false-->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ FD ]
Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) -->Line_182 $$ String cisloCviceniS = testedFile.getName().split("_")[1].substring(2)[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_182 $$ String cisloCviceniS = testedFile.getName().split("_")[1].substring(2)[ FD ]
Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) -->Line_183 $$ int cisloCviceniI = Integer.parseInt(cisloCviceniS)[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_184 $$ String cisloUlohyS = testedFile.getName().split("_")[2][ FD ]
Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) -->Line_185 $$ int cisloUlohyI = Integer.parseInt(cisloUlohyS)[ CD ]
Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) -->Line_186 $$ List<CviceniType> lct = student.getDomaciUlohy().getCviceni()[ CD ]
Line_21 $$ for (StudentType student : students) -->Line_186 $$ List<CviceniType> lct = student.getDomaciUlohy().getCviceni()[ FD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) [ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_189 $$ MezniTerminOdevzdaniVcasType mtovt = ct.getMezniTerminOdevzdaniVcas()[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_191 $$ mtovGC.set(mtovt.getDatum().getYear(), mtovt.getDatum().getMonth() - 1, mtovt.getDatum().getDay(), 23, 59, 59)[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_193 $$ fileTimeStamp.setTimeInMillis(testedFile.lastModified())[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_193 $$ fileTimeStamp.setTimeInMillis(testedFile.lastModified())[ FD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_194 $$ String[] datumSouboru = String.format("%tF", fileTimeStamp).split("-")[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_195 $$ String[] casSouboru = String.format("%tT", fileTimeStamp).split(":")[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_196 $$ XMLGregorianCalendar xmlGCDate = DatatypeFactory.newInstance().newXMLGregorianCalendarDate(Integer.parseInt(datumSouboru[0]), Integer.parseInt(datumSouboru[1]), Integer.parseInt(datumSouboru[2]), DatatypeConstants.FIELD_UNDEFINED)[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_197 $$ XMLGregorianCalendar xmlGCTime = DatatypeFactory.newInstance().newXMLGregorianCalendarTime(Integer.parseInt(casSouboru[0]), Integer.parseInt(casSouboru[1]), Integer.parseInt(casSouboru[2]), DatatypeConstants.FIELD_UNDEFINED)[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_198 $$ if (fileTimeStamp.compareTo(mtovGC) <= 0)[ CD ]
Line_188 $$ if (ct.getCislo().intValue() == cisloCviceniI) -->Line_199 $$ List<UlohaType> lut = ct.getUloha()[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) [ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_202 $$ List<OdevzdanoType> lot = ut.getOdevzdano()[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_203 $$ OdevzdanoType ot = of.createOdevzdanoType()[ CD ]
Line_26 $$ ObjectFactory of = new ObjectFactory()-->Line_203 $$ OdevzdanoType ot = of.createOdevzdanoType()[ FD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_204 $$ ot.setDatum(xmlGCDate)[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_205 $$ ot.setCas(xmlGCTime)[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_206 $$ OdevzdanoVcasType ovt = of.createOdevzdanoVcasType()[ CD ]
Line_26 $$ ObjectFactory of = new ObjectFactory()-->Line_206 $$ OdevzdanoVcasType ovt = of.createOdevzdanoVcasType()[ FD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_207 $$ ovt.setVysledek(odevzdanoVcas)[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_208 $$ ValidatorType vt = of.createValidatorType()[ CD ]
Line_26 $$ ObjectFactory of = new ObjectFactory()-->Line_208 $$ ValidatorType vt = of.createValidatorType()[ FD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_209 $$ vt.setVysledek(vysledekValidaceSouboru.equals("true"))[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_210 $$ ot.setOdevzdanoVcas(ovt)[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_211 $$ ot.setValidator(vt)[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_212 $$ lot.add(ot)[ CD ]
Line_201 $$ if (ut.getCislo().intValue() == cisloUlohyI) -->Line_213 $$ if (vt.isVysledek()) [ CD ]
Line_213 $$ if (vt.isVysledek()) -->Line_213 $$ if (vt.isVysledek()) [ CD ]
Line_213 $$ if (vt.isVysledek()) -->Line_214 $$ String test = String.format("%s%s%02d", validovane, File.separator, ct.getCislo().intValue())[ CD ]
Line_213 $$ if (vt.isVysledek()) -->Line_215 $$ if (!(new File(test).exists())) [ CD ]
Line_215 $$ if (!(new File(test).exists())) -->Line_215 $$ if (!(new File(test).exists())) [ CD ]
Line_215 $$ if (!(new File(test).exists())) -->Line_216 $$ LogManager.getInstance().log("Nebyla provedena p��prava soubor�. Chyb� slo�ka " + test.substring(Ppa1Cviceni.USER_DIR.length()) + ".")[ CD ]
Line_215 $$ if (!(new File(test).exists())) -->Line_217 $$ return[ CD ]
Line_215 $$ if (!(new File(test).exists())) -->Line_219 $$ copyValidFile(testedFile, ct.getCislo().intValue())[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_219 $$ copyValidFile(testedFile, ct.getCislo().intValue())[ FD ]
Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) -->Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) [ CD ]
Line_46 $$ samostatnaPrace = true-->Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) [ FD ]
Line_48 $$ samostatnaPrace = false-->Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) [ FD ]
Line_30 $$ boolean samostatnaPrace = false-->Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) [ FD ]
Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) -->Line_229 $$ String[] partsOfFilename = testedFile.getName().split("_")[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_229 $$ String[] partsOfFilename = testedFile.getName().split("_")[ FD ]
Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) -->Line_230 $$ String[] partsOfLastPartOfFilename = partsOfFilename[partsOfFilename.length - 1].split("[.]")[ CD ]
Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) -->Line_233 $$ if ((partsOfLastPartOfFilename.length == 2) && (priponaZeSouboru.equals("java"))) [ CD ]
Line_233 $$ if ((partsOfLastPartOfFilename.length == 2) && (priponaZeSouboru.equals("java"))) -->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ CD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_21 $$ for (StudentType student : students) -->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_236 $$ fileTimeStamp.setTimeInMillis(testedFile.lastModified())[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_236 $$ fileTimeStamp.setTimeInMillis(testedFile.lastModified())[ FD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_237 $$ String[] datumSouboru = String.format("%tF", fileTimeStamp).split("-")[ CD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_238 $$ String[] casSouboru = String.format("%tT", fileTimeStamp).split(":")[ CD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_239 $$ XMLGregorianCalendar xmlGCDate = DatatypeFactory.newInstance().newXMLGregorianCalendarDate(Integer.parseInt(datumSouboru[0]), Integer.parseInt(datumSouboru[1]), Integer.parseInt(datumSouboru[2]), DatatypeConstants.FIELD_UNDEFINED)[ CD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_240 $$ XMLGregorianCalendar xmlGCTime = DatatypeFactory.newInstance().newXMLGregorianCalendarTime(Integer.parseInt(casSouboru[0]), Integer.parseInt(casSouboru[1]), Integer.parseInt(casSouboru[2]), DatatypeConstants.FIELD_UNDEFINED)[ CD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_241 $$ List<UlozenoType> lut = student.getSamostatnaPrace().getUlozeno()[ CD ]
Line_21 $$ for (StudentType student : students) -->Line_241 $$ List<UlozenoType> lut = student.getSamostatnaPrace().getUlozeno()[ FD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_242 $$ if (lut.isEmpty()) [ CD ]
Line_242 $$ if (lut.isEmpty()) -->Line_242 $$ if (lut.isEmpty()) [ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_243 $$ File samostatnaPraceNewFile = new File(sp + File.separator + testedFile.getName())[ FD ]
Line_242 $$ if (lut.isEmpty()) -->Line_244 $$ if (samostatnaPraceNewFile.exists()) [ CD ]
Line_244 $$ if (samostatnaPraceNewFile.exists()) -->Line_244 $$ if (samostatnaPraceNewFile.exists()) [ CD ]
Line_244 $$ if (samostatnaPraceNewFile.exists()) -->Line_245 $$ samostatnaPraceNewFile.delete()[ CD ]
Line_244 $$ if (samostatnaPraceNewFile.exists()) -->Line_246 $$ samostatnaPraceNewFile.createNewFile()[ CD ]
Line_242 $$ if (lut.isEmpty()) -->Line_253 $$ while ((line = br.readLine()) != null) fw.write(line + EOL)[ CD ]
Line_242 $$ if (lut.isEmpty()) -->Line_242 $$ if (lut.isEmpty()) [ CD ]
Line_253 $$ while ((line = br.readLine()) != null) fw.write(line + EOL)-->Line_253 $$ fw.write(line + EOL)[ CD ]
Line_242 $$ if (lut.isEmpty()) -->Line_254 $$ br.close()[ CD ]
Line_242 $$ if (lut.isEmpty()) -->Line_255 $$ fw.close()[ CD ]
Line_242 $$ if (lut.isEmpty()) -->Line_256 $$ samostatnaPraceNewFile.setLastModified(testedFile.lastModified())[ CD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_256 $$ samostatnaPraceNewFile.setLastModified(testedFile.lastModified())[ FD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_258 $$ UlozenoType ut = of.createUlozenoType()[ CD ]
Line_26 $$ ObjectFactory of = new ObjectFactory()-->Line_258 $$ UlozenoType ut = of.createUlozenoType()[ FD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_259 $$ ut.setDatum(xmlGCDate)[ CD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_260 $$ ut.setCas(xmlGCTime)[ CD ]
Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) -->Line_261 $$ lut.add(0, ut)[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_267 $$ PosledniZpracovanyPokusType pzpt = new PosledniZpracovanyPokusType()[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_268 $$ String[] slozkaPoslednihoPokusu = pokusyDirectories[pokusyDirectories.length - 1].getName().split("_")[ CD ]
Line_268 $$ String[] slozkaPoslednihoPokusu = pokusyDirectories[pokusyDirectories.length - 1].getName().split("_")-->Line_268 $$ String[] slozkaPoslednihoPokusu = pokusyDirectories[pokusyDirectories.length - 1].getName().split("_")[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_269 $$ int cisloPokusu = Integer.parseInt(slozkaPoslednihoPokusu[slozkaPoslednihoPokusu.length - 1].trim())[ CD ]
Line_269 $$ int cisloPokusu = Integer.parseInt(slozkaPoslednihoPokusu[slozkaPoslednihoPokusu.length - 1].trim())-->Line_269 $$ int cisloPokusu = Integer.parseInt(slozkaPoslednihoPokusu[slozkaPoslednihoPokusu.length - 1].trim())[ CD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_270 $$ pzpt.setCislo(new BigInteger(String.valueOf(cisloPokusu)))[ CD ]
Line_267 $$ PosledniZpracovanyPokusType pzpt = new PosledniZpracovanyPokusType()-->Line_270 $$ pzpt.setCislo(new BigInteger(String.valueOf(cisloPokusu)))[ FD ]
Line_269 $$ int cisloPokusu = Integer.parseInt(slozkaPoslednihoPokusu[slozkaPoslednihoPokusu.length - 1].trim())-->Line_270 $$ pzpt.setCislo(new BigInteger(String.valueOf(cisloPokusu)))[ FD ]
Line_22 $$ if (student.getOsobniCislo().equals(osobniCisloZeSlozky)) -->Line_271 $$ student.getDomaciUlohy().setPosledniZpracovanyPokus(pzpt)[ CD ]
Line_267 $$ PosledniZpracovanyPokusType pzpt = new PosledniZpracovanyPokusType()-->Line_271 $$ student.getDomaciUlohy().setPosledniZpracovanyPokus(pzpt)[ FD ]
Line_21 $$ for (StudentType student : students) -->Line_271 $$ student.getDomaciUlohy().setPosledniZpracovanyPokus(pzpt)[ FD ]
Line_12 $$ JAXBElement<?> element = ElementJAXB.getJAXBElement()-->Line_277 $$ ElementJAXB.setJAXBElement(element)[ FD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_289 $$ LogManager.getInstance().log("Maz�n� rozbalen�ch soubor� ...")[ CD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_290 $$ deleteFileFromTMPFolder(tmpFolderF)[ CD ]
Line_5 $$ File tmpFolderF = new File(tmpFolder)-->Line_290 $$ deleteFileFromTMPFolder(tmpFolderF)[ FD ]
Line_2 $$ public void checkFilesAndCopyValid(String filename) -->Line_291 $$ LogManager.getInstance().changeLog("Maz�n� rozbalen�ch soubor� ... OK")[ CD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ FD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ FD ]
Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) -->Line_31 $$ for (int i = (pokusyDirectories.length - 1); i >= 0; i--) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_34 $$ if ((testedFile.exists()) && (testedFile.isFile())) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_35 $$ String[] partsOfFilename = testedFile.getName().split("_")[ FD ]
Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()-->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ FD ]
Line_43 $$ String samostatnaPraceNazev = Konfigurace.getInstance().getSamostatnaPraceNazev()-->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_45 $$ if (testedFile.getName().startsWith(samostatnaPraceNazev)) [ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_51 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_51 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_52 $$ st.setDuvod("�patn� struktura jm�na souboru.")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_53 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_53 $$ lst.add(st)[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_55 $$ if (!testedFile.getName().startsWith("Ppa1_cv")) [ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_57 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_57 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_58 $$ st.setDuvod("�patn� za��tek jm�na souboru.")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_59 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_59 $$ lst.add(st)[ FD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_61 $$ if (!priponaSouboru.equals("java")) [ FD ]
Line_41 $$ priponaSouboru = ""-->Line_61 $$ if (!priponaSouboru.equals("java")) [ FD ]
Line_41 $$ priponaSouboru = posledniCastSouboru[1]-->Line_61 $$ if (!priponaSouboru.equals("java")) [ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_63 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_63 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_64 $$ st.setDuvod("�patn� p��pona souboru.")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_65 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_65 $$ lst.add(st)[ FD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_67 $$ if (!osobniCisloZeSouboru.equals(osobniCisloZeSlozky)) [ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_69 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_69 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_70 $$ st.setDuvod("Nesouhlas� osobn� ��sla.")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_71 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_71 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_75 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_75 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_76 $$ st.setDuvod("V�ce p��pon souboru.")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_77 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_77 $$ lst.add(st)[ FD ]
Line_83 $$ String cisloS = partsOfFilename[1].substring(2)-->Line_84 $$ long cisloL = Long.parseLong(cisloS)[ FD ]
Line_84 $$ long cisloL = Long.parseLong(cisloS)-->Line_85 $$ cisloCviceni = cisloL[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_91 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_91 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_92 $$ st.setDuvod("Chyb� (nebo je chybn�) ��slo cvi�en�")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_93 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_93 $$ lst.add(st)[ FD ]
Line_83 $$ String cisloS = partsOfFilename[1].substring(2)-->Line_99 $$ long cisloL = Long.parseLong(cisloS)[ FD ]
Line_84 $$ long cisloL = Long.parseLong(cisloS)-->Line_100 $$ cisloUlohy = cisloL[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_106 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_106 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_107 $$ st.setDuvod("Chyb� (nebo je chybn�) ��slo �lohy")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_108 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_108 $$ lst.add(st)[ FD ]
Line_111 $$ CislaUloh ci = new CislaUloh()-->Line_112 $$ List<long[]> cviceni = ci.getSeznamCviceni()[ FD ]
Line_80 $$ long cisloCviceni, cisloUlohy-->Line_115 $$ if (c[0] == cisloCviceni) [ FD ]
Line_85 $$ cisloCviceni = cisloL-->Line_115 $$ if (c[0] == cisloCviceni) [ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_122 $$ nalezenoCv = true-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_122 $$ nalezenoCv = true-->Line_126 $$ if (!nalezenoCv) [ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_128 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_128 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_129 $$ st.setDuvod("Neplatn� ��slo cvi�en�")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_130 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_130 $$ lst.add(st)[ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_133 $$ if (!nalezenaUl) [ FD ]
Line_113 $$ boolean nalezenoCv = false, nalezenaUl = false-->Line_133 $$ if (!nalezenaUl) [ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_135 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_135 $$ st.setJmeno(testedFile.getName())[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_136 $$ st.setDuvod("Neplatn� ��slo �lohy")[ FD ]
Line_44 $$ List<SouborType> lst = chot.getSoubor()-->Line_137 $$ lst.add(st)[ FD ]
Line_50 $$ SouborType st = new SouborType()-->Line_137 $$ lst.add(st)[ FD ]
Line_46 $$ samostatnaPrace = true-->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ FD ]
Line_48 $$ samostatnaPrace = false-->Line_180 $$ if (shodaJmenaSouboru && !samostatnaPrace) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_182 $$ String cisloCviceniS = testedFile.getName().split("_")[1].substring(2)[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_184 $$ String cisloUlohyS = testedFile.getName().split("_")[2][ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_193 $$ fileTimeStamp.setTimeInMillis(testedFile.lastModified())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_219 $$ copyValidFile(testedFile, ct.getCislo().intValue())[ FD ]
Line_46 $$ samostatnaPrace = true-->Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) [ FD ]
Line_48 $$ samostatnaPrace = false-->Line_228 $$ if (shodaJmenaSouboru && samostatnaPrace) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_229 $$ String[] partsOfFilename = testedFile.getName().split("_")[ FD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_36 $$ String osobniCisloZeSouboru = "", priponaSouboru = ""-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_40 $$ osobniCisloZeSouboru = posledniCastSouboru[0]-->Line_234 $$ if (student.getOsobniCislo().equals(osobniCisloZeSouboru)) [ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_236 $$ fileTimeStamp.setTimeInMillis(testedFile.lastModified())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_243 $$ File samostatnaPraceNewFile = new File(sp + File.separator + testedFile.getName())[ FD ]
Line_33 $$ File testedFile = pokusyDirectories[i].listFiles()[0]-->Line_256 $$ samostatnaPraceNewFile.setLastModified(testedFile.lastModified())[ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ FD ]
Line_116 $$ for (int j = 1; j < c.length; j++) -->Line_116 $$ for (int j = 1; j < c.length; j++) [ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_155 $$ for (int j = start; j >= 0; j--) [ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_156 $$ NodeList vlastnostiSouboruNL = souboryNL.item(j).getChildNodes()[ FD ]
Line_155 $$ for (int j = start; j >= 0; j--) -->Line_176 $$ start = --j[ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_158 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("cas")) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_159 $$ String[] obsahElementuCas = vlastnostiSouboruNL.item(k).getTextContent().split(" ")[ FD ]
Line_161 $$ Calendar datumACasZElementu = new GregorianCalendar()-->Line_162 $$ datumACasZElementu.set(Integer.parseInt(datumZElementu[0]), Integer.parseInt(datumZElementu[1]) - 1, Integer.parseInt(datumZElementu[2]), Integer.parseInt(casZElementu[0]), Integer.parseInt(casZElementu[1]), Integer.parseInt(casZElementu[2]))[ FD ]
Line_161 $$ Calendar datumACasZElementu = new GregorianCalendar()-->Line_163 $$ if ((dateFromZipFile != null) && (datumACasZElementu.compareTo(dateFromZipFile) > 0)) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_168 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("nazev")) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_169 $$ shodaJmenaSouboru = vlastnostiSouboruNL.item(k).getTextContent().equals(testedFile.getName())[ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_171 $$ if (vlastnostiSouboruNL.item(k).getNodeName().equals("vysledek")) [ FD ]
Line_157 $$ for (int k = 0; k < vlastnostiSouboruNL.getLength(); k++) -->Line_172 $$ vysledekValidaceSouboru = vlastnostiSouboruNL.item(k).getTextContent()[ FD ]
