Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void setup() [ CD ]
Line_5 $$ URL url = Sysutil.getURL("world.env")-->Line_5 $$ URL url = Sysutil.getURL("world.env")[ CD ]
Line_5 $$ URL url = Sysutil.getURL("world.env")-->Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_8 $$ while ((line = br.readLine()) != null) [ FD ]
Line_7 $$ String line-->Line_8 $$ while ((line = br.readLine()) != null) [ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_8 $$ while ((line = br.readLine()) != null) [ CD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_8 $$ while ((line = br.readLine()) != null) [ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_9 $$ String[] fields = line.split(",")[ CD ]
Line_9 $$ String[] fields = line.split(",")-->Line_9 $$ String[] fields = line.split(",")[ CD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_9 $$ String[] fields = line.split(",")[ FD ]
Line_7 $$ String line-->Line_9 $$ String[] fields = line.split(",")[ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_10 $$ if (fields[0].equalsIgnoreCase("skybox")) [ CD ]
Line_10 $$ if (fields[0].equalsIgnoreCase("skybox")) -->Line_10 $$ if (fields[0].equalsIgnoreCase("skybox")) [ CD ]
Line_10 $$ if (fields[0].equalsIgnoreCase("skybox")) -->Line_11 $$ env.setRoom(new EnvSkyRoom(fields[1]))[ CD ]
Line_10 $$ if (fields[0].equalsIgnoreCase("skybox")) -->Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) [ CD ]
Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) -->Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) [ CD ]
Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) -->Line_13 $$ env.setCameraXYZ(Double.parseDouble(fields[1]), Double.parseDouble(fields[2]), Double.parseDouble(fields[3]))[ CD ]
Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) -->Line_14 $$ env.setCameraYaw(Double.parseDouble(fields[4]))[ CD ]
Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) -->Line_15 $$ env.setCameraPitch(Double.parseDouble(fields[5]))[ CD ]
Line_12 $$ if (fields[0].equalsIgnoreCase("camera")) -->Line_16 $$ if (fields[0].equalsIgnoreCase("terrain")) [ CD ]
Line_16 $$ if (fields[0].equalsIgnoreCase("terrain")) -->Line_16 $$ if (fields[0].equalsIgnoreCase("terrain")) [ CD ]
Line_16 $$ if (fields[0].equalsIgnoreCase("terrain")) -->Line_18 $$ terrain.setTexture(fields[2])[ CD ]
Line_16 $$ if (fields[0].equalsIgnoreCase("terrain")) -->Line_19 $$ env.addObject(terrain)[ CD ]
Line_16 $$ if (fields[0].equalsIgnoreCase("terrain")) -->Line_20 $$ if (fields[0].equalsIgnoreCase("object")) [ CD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_20 $$ if (fields[0].equalsIgnoreCase("object")) [ CD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()[ CD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_22 $$ n.setX(Double.parseDouble(fields[1]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_22 $$ n.setX(Double.parseDouble(fields[1]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_23 $$ n.setY(Double.parseDouble(fields[2]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_23 $$ n.setY(Double.parseDouble(fields[2]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_24 $$ n.setZ(Double.parseDouble(fields[3]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_24 $$ n.setZ(Double.parseDouble(fields[3]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_25 $$ n.setScale(Double.parseDouble(fields[4]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_25 $$ n.setScale(Double.parseDouble(fields[4]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_26 $$ n.setRotateX(Double.parseDouble(fields[5]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_26 $$ n.setRotateX(Double.parseDouble(fields[5]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_27 $$ n.setRotateY(Double.parseDouble(fields[6]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_27 $$ n.setRotateY(Double.parseDouble(fields[6]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_28 $$ n.setRotateZ(Double.parseDouble(fields[7]))[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_28 $$ n.setRotateZ(Double.parseDouble(fields[7]))[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_29 $$ n.setTexture(fields[9])[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_29 $$ n.setTexture(fields[9])[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_30 $$ n.setModel(fields[8])[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_30 $$ n.setModel(fields[8])[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_31 $$ n.setEnv(env)[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_31 $$ n.setEnv(env)[ FD ]
Line_20 $$ if (fields[0].equalsIgnoreCase("object")) -->Line_32 $$ env.addObject(n)[ CD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_32 $$ env.addObject(n)[ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_9 $$ String[] fields = line.split(",")[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_22 $$ n.setX(Double.parseDouble(fields[1]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_23 $$ n.setY(Double.parseDouble(fields[2]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_24 $$ n.setZ(Double.parseDouble(fields[3]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_25 $$ n.setScale(Double.parseDouble(fields[4]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_26 $$ n.setRotateX(Double.parseDouble(fields[5]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_27 $$ n.setRotateY(Double.parseDouble(fields[6]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_28 $$ n.setRotateZ(Double.parseDouble(fields[7]))[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_29 $$ n.setTexture(fields[9])[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_30 $$ n.setModel(fields[8])[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_31 $$ n.setEnv(env)[ FD ]
Line_21 $$ GameObject n = (GameObject) Class.forName(fields[10]).newInstance()-->Line_32 $$ env.addObject(n)[ FD ]
