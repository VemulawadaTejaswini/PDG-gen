Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void verifyAvailability() [ CD ]
Line_2 $$ private void verifyAvailability() -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ CD ]
Line_2 $$ private void verifyAvailability() -->Line_2 $$ private void verifyAvailability() [ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_4 $$ String hostEntry = (String) servers.get(i)[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_4 $$ String hostEntry = (String) servers.get(i)[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))[ CD ]
Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))-->Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)[ CD ]
Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)-->Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_7 $$ String urlLocation = "http://" + hostString + ":" + portString + "/"[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_8 $$ String urlData = null[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_9 $$ String urlMatch = null[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_10 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_10 $$ long startTime = System.currentTimeMillis()-->Line_10 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_11 $$ URL url = null[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_12 $$ HttpURLConnection conn = null[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_13 $$ InputStream istream = null[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_14 $$ if (serverRequests.get(hostEntry) != null) [ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_14 $$ if (serverRequests.get(hostEntry) != null) [ FD ]
Line_14 $$ if (serverRequests.get(hostEntry) != null) -->Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)[ FD ]
Line_14 $$ if (serverRequests.get(hostEntry) != null) -->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ CD ]
Line_8 $$ String urlData = null-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ FD ]
Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ FD ]
Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ CD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ FD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ FD ]
Line_9 $$ String urlMatch = null-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ CD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ FD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ FD ]
Line_9 $$ String urlMatch = null-->Line_20 $$ urlMatch = null[ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_20 $$ urlMatch = null[ FD ]
Line_20 $$ urlMatch = null-->Line_20 $$ urlMatch = null[ FD ]
Line_14 $$ if (serverRequests.get(hostEntry) != null) -->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ CD ]
Line_7 $$ String urlLocation = "http://" + hostString + ":" + portString + "/"-->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ FD ]
Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData-->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ FD ]
Line_8 $$ String urlData = null-->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ FD ]
Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))-->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ FD ]
Line_11 $$ URL url = null-->Line_25 $$ url = new URL(urlLocation)[ FD ]
Line_25 $$ url = new URL(urlLocation)-->Line_25 $$ url = new URL(urlLocation)[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_26 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_26 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_11 $$ URL url = null-->Line_26 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_25 $$ url = new URL(urlLocation)-->Line_26 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_29 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_13 $$ InputStream istream = null-->Line_33 $$ istream = conn.getInputStream()[ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_33 $$ istream = conn.getInputStream()[ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_33 $$ istream = conn.getInputStream()[ CD ]
Line_12 $$ HttpURLConnection conn = null-->Line_33 $$ istream = conn.getInputStream()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_33 $$ istream = conn.getInputStream()[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_36 $$ if (conn.getResponseCode() != 401) [ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_36 $$ if (conn.getResponseCode() != 401) [ FD ]
Line_36 $$ if (conn.getResponseCode() != 401) -->Line_37 $$ System.err.println("*** Warning: Unable to contact host '" + hostEntry + "': " + e)[ CD ]
Line_36 $$ if (conn.getResponseCode() != 401) -->Line_38 $$ serverTimes.put(hostEntry, "0")[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_38 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_43 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_47 $$ int response = 501[ CD ]
Line_47 $$ int response = 501-->Line_49 $$ response = conn.getResponseCode()[ FD ]
Line_49 $$ response = conn.getResponseCode()-->Line_49 $$ response = conn.getResponseCode()[ FD ]
Line_49 $$ response = conn.getResponseCode()-->Line_49 $$ response = conn.getResponseCode()[ CD ]
Line_12 $$ HttpURLConnection conn = null-->Line_49 $$ response = conn.getResponseCode()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_49 $$ response = conn.getResponseCode()[ FD ]
Line_50 $$ if (response != 200 && response != 401) -->Line_51 $$ System.err.println("*** Warning: Connection to host '" + hostEntry + "' returns response: " + response)[ CD ]
Line_50 $$ if (response != 200 && response != 401) -->Line_52 $$ serverTimes.put(hostEntry, "0")[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_52 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_57 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_60 $$ if (response != 401) [ CD ]
Line_47 $$ int response = 501-->Line_60 $$ if (response != 401) [ FD ]
Line_49 $$ response = conn.getResponseCode()-->Line_60 $$ if (response != 401) [ FD ]
Line_60 $$ if (response != 401) -->Line_61 $$ int contentLength = conn.getContentLength()[ CD ]
Line_61 $$ int contentLength = conn.getContentLength()-->Line_61 $$ int contentLength = conn.getContentLength()[ CD ]
Line_12 $$ HttpURLConnection conn = null-->Line_61 $$ int contentLength = conn.getContentLength()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_61 $$ int contentLength = conn.getContentLength()[ FD ]
Line_60 $$ if (response != 401) -->Line_62 $$ if (contentLength == -1) [ CD ]
Line_61 $$ int contentLength = conn.getContentLength()-->Line_62 $$ if (contentLength == -1) [ FD ]
Line_62 $$ if (contentLength == -1) -->Line_63 $$ contentLength = 4096[ CD ]
Line_61 $$ int contentLength = conn.getContentLength()-->Line_63 $$ contentLength = 4096[ FD ]
Line_63 $$ contentLength = 4096-->Line_63 $$ contentLength = 4096[ FD ]
Line_60 $$ if (response != 401) -->Line_65 $$ byte data[] = new byte[contentLength][ CD ]
Line_60 $$ if (response != 401) -->Line_66 $$ int curPos = 0[ CD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_68 $$ int dataRead = 0-->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ CD ]
Line_13 $$ InputStream istream = null-->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_66 $$ int curPos = 0-->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_70 $$ if (dataRead == 0) [ CD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_70 $$ if (dataRead == 0) [ FD ]
Line_68 $$ int dataRead = 0-->Line_70 $$ if (dataRead == 0) [ FD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_73 $$ curPos += dataRead[ CD ]
Line_73 $$ curPos += dataRead-->Line_73 $$ curPos += dataRead[ FD ]
Line_66 $$ int curPos = 0-->Line_73 $$ curPos += dataRead[ FD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_73 $$ curPos += dataRead[ FD ]
Line_68 $$ int dataRead = 0-->Line_73 $$ curPos += dataRead[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_77 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_60 $$ if (response != 401) -->Line_80 $$ if (urlMatch != null) [ CD ]
Line_9 $$ String urlMatch = null-->Line_80 $$ if (urlMatch != null) [ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_80 $$ if (urlMatch != null) [ FD ]
Line_20 $$ urlMatch = null-->Line_80 $$ if (urlMatch != null) [ FD ]
Line_80 $$ if (urlMatch != null) -->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ CD ]
Line_9 $$ String urlMatch = null-->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ FD ]
Line_20 $$ urlMatch = null-->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ FD ]
Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) -->Line_84 $$ System.err.println("*** Warning: Host '" + hostEntry + "' does not match search string.  Reports '" + urlContents + "'")[ CD ]
Line_13 $$ InputStream istream = null-->Line_86 $$ istream.close()[ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_86 $$ istream.close()[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_87 $$ conn.disconnect()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_87 $$ conn.disconnect()[ FD ]
Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) -->Line_90 $$ serverTimes.put(hostEntry, "0")[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_90 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_13 $$ InputStream istream = null-->Line_96 $$ istream.close()[ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_96 $$ istream.close()[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_97 $$ conn.disconnect()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_97 $$ conn.disconnect()[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_100 $$ serverStatus.put(hostEntry, "1")[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_100 $$ serverStatus.put(hostEntry, "1")[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_101 $$ String timeResponse = Long.toString(System.currentTimeMillis() - startTime)[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_102 $$ Debug.log("Response time for '" + hostEntry + "' is " + timeResponse + " ms.")[ CD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_103 $$ serverTimes.put(hostEntry, timeResponse)[ CD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_103 $$ serverTimes.put(hostEntry, timeResponse)[ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_3 $$ for (int i = 0; i < servers.size(); i++) [ FD ]
Line_3 $$ for (int i = 0; i < servers.size(); i++) -->Line_4 $$ String hostEntry = (String) servers.get(i)[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_5 $$ String hostString = hostEntry.substring(0, hostEntry.indexOf(":"))[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_6 $$ String portString = hostEntry.substring(hostEntry.indexOf(":") + 1)[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_14 $$ if (serverRequests.get(hostEntry) != null) [ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)[ FD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ FD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))[ FD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ FD ]
Line_15 $$ String requestData = (String) serverRequests.get(hostEntry)-->Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)[ FD ]
Line_8 $$ String urlData = null-->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ FD ]
Line_16 $$ urlData = requestData.substring(0, requestData.indexOf("\t"))-->Line_22 $$ urlLocation = "http://" + hostString + ":" + portString + "/" + urlData[ FD ]
Line_11 $$ URL url = null-->Line_26 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_25 $$ url = new URL(urlLocation)-->Line_26 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_29 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_33 $$ istream = conn.getInputStream()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_33 $$ istream = conn.getInputStream()[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_36 $$ if (conn.getResponseCode() != 401) [ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_36 $$ if (conn.getResponseCode() != 401) [ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_38 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_43 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_49 $$ response = conn.getResponseCode()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_49 $$ response = conn.getResponseCode()[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_52 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_57 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_47 $$ int response = 501-->Line_60 $$ if (response != 401) [ FD ]
Line_49 $$ response = conn.getResponseCode()-->Line_60 $$ if (response != 401) [ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_61 $$ int contentLength = conn.getContentLength()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_61 $$ int contentLength = conn.getContentLength()[ FD ]
Line_61 $$ int contentLength = conn.getContentLength()-->Line_62 $$ if (contentLength == -1) [ FD ]
Line_63 $$ contentLength = 4096-->Line_62 $$ if (contentLength == -1) [ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_77 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_9 $$ String urlMatch = null-->Line_80 $$ if (urlMatch != null) [ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_80 $$ if (urlMatch != null) [ FD ]
Line_20 $$ urlMatch = null-->Line_80 $$ if (urlMatch != null) [ FD ]
Line_9 $$ String urlMatch = null-->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ FD ]
Line_18 $$ urlMatch = requestData.substring(requestData.indexOf("\t") + 1)-->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ FD ]
Line_20 $$ urlMatch = null-->Line_83 $$ if (urlContents.indexOf(urlMatch) == -1) [ FD ]
Line_13 $$ InputStream istream = null-->Line_86 $$ istream.close()[ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_86 $$ istream.close()[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_87 $$ conn.disconnect()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_87 $$ conn.disconnect()[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_90 $$ serverTimes.put(hostEntry, "0")[ FD ]
Line_13 $$ InputStream istream = null-->Line_96 $$ istream.close()[ FD ]
Line_33 $$ istream = conn.getInputStream()-->Line_96 $$ istream.close()[ FD ]
Line_12 $$ HttpURLConnection conn = null-->Line_97 $$ conn.disconnect()[ FD ]
Line_26 $$ conn = (HttpURLConnection) url.openConnection()-->Line_97 $$ conn.disconnect()[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_100 $$ serverStatus.put(hostEntry, "1")[ FD ]
Line_4 $$ String hostEntry = (String) servers.get(i)-->Line_103 $$ serverTimes.put(hostEntry, timeResponse)[ FD ]
Line_73 $$ curPos += dataRead-->Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_70 $$ if (dataRead == 0) [ FD ]
Line_69 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_73 $$ curPos += dataRead[ FD ]
