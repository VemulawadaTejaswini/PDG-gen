Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encriptarPassword(String aPassword) throws BusinessException [ CD ]
Line_2 $$ public static String encriptarPassword(String aPassword) throws BusinessException -->Line_3 $$ ILogger logger = LogFactory.getLogger(User.class)[ CD ]
Line_3 $$ ILogger logger = LogFactory.getLogger(User.class)-->Line_3 $$ ILogger logger = LogFactory.getLogger(User.class)[ CD ]
Line_2 $$ public static String encriptarPassword(String aPassword) throws BusinessException -->Line_4 $$ String methodId = "encriptarPassword"[ CD ]
Line_6 $$ MessageDigest currentAlgorithm = MessageDigest.getInstance("MD5")-->Line_6 $$ MessageDigest currentAlgorithm = MessageDigest.getInstance("MD5")[ CD ]
Line_6 $$ MessageDigest currentAlgorithm = MessageDigest.getInstance("MD5")-->Line_7 $$ currentAlgorithm.reset()[ FD ]
Line_6 $$ MessageDigest currentAlgorithm = MessageDigest.getInstance("MD5")-->Line_8 $$ currentAlgorithm.update(aPassword.getBytes())[ FD ]
Line_2 $$ public static String encriptarPassword(String aPassword) throws BusinessException -->Line_8 $$ currentAlgorithm.update(aPassword.getBytes())[ FD ]
Line_9 $$ byte[] hash = currentAlgorithm.digest()-->Line_9 $$ byte[] hash = currentAlgorithm.digest()[ CD ]
Line_6 $$ MessageDigest currentAlgorithm = MessageDigest.getInstance("MD5")-->Line_9 $$ byte[] hash = currentAlgorithm.digest()[ FD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_12 $$ int v = hash[i] & 0xFF[ CD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ if (v < 16)[ CD ]
Line_12 $$ int v = hash[i] & 0xFF-->Line_13 $$ if (v < 16)[ FD ]
Line_13 $$ if (v < 16)-->Line_13 $$ d += "0"[ CD ]
Line_13 $$ d += "0"-->Line_13 $$ d += "0"[ FD ]
Line_10 $$ String d = ""-->Line_13 $$ d += "0"[ FD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ CD ]
Line_13 $$ d += "0"-->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ FD ]
Line_14 $$ d += Integer.toString(v, 16).toUpperCase()-->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ FD ]
Line_10 $$ String d = ""-->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ FD ]
Line_14 $$ d += Integer.toString(v, 16).toUpperCase()-->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ CD ]
Line_12 $$ int v = hash[i] & 0xFF-->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ FD ]
Line_16 $$ return d.toLowerCase()-->Line_16 $$ return d.toLowerCase()[ CD ]
Line_13 $$ d += "0"-->Line_16 $$ return d.toLowerCase()[ FD ]
Line_14 $$ d += Integer.toString(v, 16).toUpperCase()-->Line_16 $$ return d.toLowerCase()[ FD ]
Line_10 $$ String d = ""-->Line_16 $$ return d.toLowerCase()[ FD ]
Line_3 $$ ILogger logger = LogFactory.getLogger(User.class)-->Line_18 $$ logger.logError(methodId + "error al encriptar password:" + nsae, nsae)[ FD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_12 $$ int v = hash[i] & 0xFF-->Line_13 $$ if (v < 16)[ FD ]
Line_12 $$ int v = hash[i] & 0xFF-->Line_14 $$ d += Integer.toString(v, 16).toUpperCase()[ FD ]
