Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void writeValue(Value v) throws IOException, SQLException [ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_3 $$ int type = v.getType()[ CD ]
Line_3 $$ int type = v.getType()-->Line_3 $$ int type = v.getType()[ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_3 $$ int type = v.getType()[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_4 $$ writeInt(type)[ CD ]
Line_3 $$ int type = v.getType()-->Line_4 $$ writeInt(type)[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_10 $$ writeBytes(v.getBytesNoCopy())[ FD ]
Line_14 $$ ValueUuid uuid = (ValueUuid) v-->Line_15 $$ writeLong(uuid.getHigh())[ FD ]
Line_14 $$ ValueUuid uuid = (ValueUuid) v-->Line_16 $$ writeLong(uuid.getLow())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_20 $$ writeBoolean(v.getBoolean().booleanValue())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_23 $$ writeByte(v.getByte())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_26 $$ writeLong(v.getTimeNoCopy().getTime())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_29 $$ writeLong(v.getDateNoCopy().getTime())[ FD ]
Line_33 $$ Timestamp ts = v.getTimestampNoCopy()-->Line_33 $$ Timestamp ts = v.getTimestampNoCopy()[ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_33 $$ Timestamp ts = v.getTimestampNoCopy()[ FD ]
Line_33 $$ Timestamp ts = v.getTimestampNoCopy()-->Line_34 $$ writeLong(ts.getTime())[ FD ]
Line_33 $$ Timestamp ts = v.getTimestampNoCopy()-->Line_35 $$ writeInt(ts.getNanos())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_39 $$ writeString(v.getString())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_42 $$ writeDouble(v.getDouble())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_45 $$ writeFloat(v.getFloat())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_48 $$ writeInt(v.getInt())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_51 $$ writeLong(v.getLong())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_54 $$ writeInt(v.getShort())[ FD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_59 $$ writeString(v.getString())[ FD ]
Line_63 $$ long length = v.getPrecision()-->Line_63 $$ long length = v.getPrecision()[ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_63 $$ long length = v.getPrecision()[ FD ]
Line_64 $$ if (SysProperties.CHECK && length < 0) -->Line_65 $$ Message.throwInternalError("length: " + length)[ CD ]
Line_63 $$ long length = v.getPrecision()-->Line_67 $$ writeLong(length)[ FD ]
Line_68 $$ InputStream in = v.getInputStream()-->Line_68 $$ InputStream in = v.getInputStream()[ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_68 $$ InputStream in = v.getInputStream()[ FD ]
Line_69 $$ long written = IOUtils.copyAndCloseInput(in, out)-->Line_69 $$ long written = IOUtils.copyAndCloseInput(in, out)[ CD ]
Line_68 $$ InputStream in = v.getInputStream()-->Line_69 $$ long written = IOUtils.copyAndCloseInput(in, out)[ FD ]
Line_70 $$ if (SysProperties.CHECK && written != length) -->Line_71 $$ Message.throwInternalError("length:" + length + " written:" + written)[ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_78 $$ long length = v.getPrecision()[ FD ]
Line_79 $$ if (SysProperties.CHECK && length < 0) -->Line_80 $$ Message.throwInternalError("length: " + length)[ CD ]
Line_63 $$ long length = v.getPrecision()-->Line_82 $$ writeLong(length)[ FD ]
Line_83 $$ Reader reader = v.getReader()-->Line_83 $$ Reader reader = v.getReader()[ CD ]
Line_2 $$ public void writeValue(Value v) throws IOException, SQLException -->Line_83 $$ Reader reader = v.getReader()[ FD ]
Line_83 $$ Reader reader = v.getReader()-->Line_89 $$ long written = IOUtils.copyAndCloseInput(reader, writer)[ FD ]
Line_90 $$ if (SysProperties.CHECK && written != length) -->Line_91 $$ Message.throwInternalError("length:" + length + " written:" + written)[ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_113 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_113 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_113 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_114 $$ writeString(meta.getColumnName(i + 1))[ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_115 $$ writeInt(meta.getColumnType(i + 1))[ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_116 $$ writeInt(meta.getPrecision(i + 1))[ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_117 $$ writeInt(meta.getScale(i + 1))[ CD ]
Line_119 $$ while (rs.next()) -->Line_119 $$ while (rs.next()) [ CD ]
Line_119 $$ while (rs.next()) -->Line_120 $$ writeBoolean(true)[ CD ]
Line_119 $$ while (rs.next()) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_119 $$ while (rs.next()) -->Line_119 $$ while (rs.next()) [ CD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ CD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_122 $$ int t = DataType.convertSQLTypeToValueType(meta.getColumnType(i + 1))[ CD ]
Line_122 $$ int t = DataType.convertSQLTypeToValueType(meta.getColumnType(i + 1))-->Line_122 $$ int t = DataType.convertSQLTypeToValueType(meta.getColumnType(i + 1))[ CD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)[ CD ]
Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)-->Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)[ CD ]
Line_122 $$ int t = DataType.convertSQLTypeToValueType(meta.getColumnType(i + 1))-->Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)[ FD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_124 $$ writeValue(val)[ CD ]
Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)-->Line_124 $$ writeValue(val)[ FD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_113 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_113 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_113 $$ for (int i = 0; i < columnCount; i++) -->Line_113 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_121 $$ for (int i = 0; i < columnCount; i++) -->Line_121 $$ for (int i = 0; i < columnCount; i++) [ FD ]
Line_122 $$ int t = DataType.convertSQLTypeToValueType(meta.getColumnType(i + 1))-->Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)[ FD ]
Line_123 $$ Value val = DataType.readValue(session, rs, i + 1, t)-->Line_124 $$ writeValue(val)[ FD ]
