Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException [ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")[ FD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_4 $$ if (con == null) [ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_4 $$ if (con == null) [ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_8 $$ con.setAutoCommit(false)[ FD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")[ FD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_10 $$ Iterator<LDAPModification> it = mods.iterator()[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_10 $$ Iterator<LDAPModification> it = mods.iterator()[ FD ]
Line_11 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()-->Line_11 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_11 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()[ FD ]
Line_12 $$ int id = this.getId(dn, con)-->Line_12 $$ int id = this.getId(dn, con)[ CD ]
Line_2 $$ public void modify(ModifyInterceptorChain chain, DistinguishedName dn, ArrayList<LDAPModification> mods, LDAPConstraints constraints) throws LDAPException -->Line_12 $$ int id = this.getId(dn, con)[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_12 $$ int id = this.getId(dn, con)[ FD ]
Line_13 $$ while (it.hasNext()) -->Line_13 $$ while (it.hasNext()) [ CD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_13 $$ while (it.hasNext()) [ FD ]
Line_13 $$ while (it.hasNext()) -->Line_14 $$ LDAPModification mod = it.next()[ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_14 $$ LDAPModification mod = it.next()[ CD ]
Line_10 $$ Iterator<LDAPModification> it = mods.iterator()-->Line_14 $$ LDAPModification mod = it.next()[ FD ]
Line_13 $$ while (it.hasNext()) -->Line_15 $$ if (mod.getOp() == LDAPModification.REPLACE) [ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_15 $$ if (mod.getOp() == LDAPModification.REPLACE) [ FD ]
Line_15 $$ if (mod.getOp() == LDAPModification.REPLACE) -->Line_16 $$ String attributeName = mod.getAttribute().getName()[ CD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_16 $$ String attributeName = mod.getAttribute().getName()[ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_16 $$ String attributeName = mod.getAttribute().getName()[ FD ]
Line_15 $$ if (mod.getOp() == LDAPModification.REPLACE) -->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ CD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ FD ]
Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) -->Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")[ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")[ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")[ FD ]
Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) -->Line_19 $$ ps.setString(1, mod.getAttribute().getStringValue())[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_19 $$ ps.setString(1, mod.getAttribute().getStringValue())[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_19 $$ ps.setString(1, mod.getAttribute().getStringValue())[ FD ]
Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) -->Line_20 $$ ps.setString(2, uid)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_20 $$ ps.setString(2, uid)[ FD ]
Line_11 $$ String uid = ((RDN) dn.getDN().getRDNs().get(0)).getValue()-->Line_20 $$ ps.setString(2, uid)[ FD ]
Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) -->Line_21 $$ ps.executeUpdate()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_21 $$ ps.executeUpdate()[ FD ]
Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) -->Line_22 $$ ps.close()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_22 $$ ps.close()[ FD ]
Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) -->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ CD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ FD ]
Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) -->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ CD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ FD ]
Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) -->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ CD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ CD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_26 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_26 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_27 $$ ps.setInt(1, id)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_27 $$ ps.setInt(1, id)[ FD ]
Line_12 $$ int id = this.getId(dn, con)-->Line_27 $$ ps.setInt(1, id)[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_28 $$ ps.executeUpdate()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_28 $$ ps.executeUpdate()[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_29 $$ ps.close()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_29 $$ ps.close()[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_32 $$ String[] vals = mod.getAttribute().getStringValueArray()[ CD ]
Line_32 $$ String[] vals = mod.getAttribute().getStringValueArray()-->Line_32 $$ String[] vals = mod.getAttribute().getStringValueArray()[ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_32 $$ String[] vals = mod.getAttribute().getStringValueArray()[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ CD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_34 $$ pssel.setString(1, vals[i])[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_34 $$ pssel.setString(1, vals[i])[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_35 $$ ResultSet rs = pssel.executeQuery()[ CD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_35 $$ ResultSet rs = pssel.executeQuery()[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_35 $$ ResultSet rs = pssel.executeQuery()[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_36 $$ if (!rs.next()) [ CD ]
Line_36 $$ if (!rs.next()) -->Line_36 $$ if (!rs.next()) [ CD ]
Line_36 $$ if (!rs.next()) -->Line_36 $$ if (!rs.next()) [ CD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_36 $$ if (!rs.next()) [ FD ]
Line_36 $$ if (!rs.next()) -->Line_37 $$ con.rollback()[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_37 $$ con.rollback()[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_40 $$ int lid = rs.getInt("id")[ CD ]
Line_40 $$ int lid = rs.getInt("id")-->Line_40 $$ int lid = rs.getInt("id")[ CD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_40 $$ int lid = rs.getInt("id")[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_41 $$ ps.setInt(1, id)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_41 $$ ps.setInt(1, id)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_41 $$ ps.setInt(1, id)[ FD ]
Line_12 $$ int id = this.getId(dn, con)-->Line_41 $$ ps.setInt(1, id)[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_42 $$ ps.setInt(2, lid)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_42 $$ ps.setInt(2, lid)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_42 $$ ps.setInt(2, lid)[ FD ]
Line_40 $$ int lid = rs.getInt("id")-->Line_42 $$ ps.setInt(2, lid)[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_43 $$ ps.executeUpdate()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_43 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_43 $$ ps.executeUpdate()[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_45 $$ ps.close()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_45 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_45 $$ ps.close()[ FD ]
Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) -->Line_46 $$ pssel.close()[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_46 $$ pssel.close()[ FD ]
Line_15 $$ if (mod.getOp() == LDAPModification.REPLACE) -->Line_48 $$ if (mod.getOp() == LDAPModification.DELETE) [ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_48 $$ if (mod.getOp() == LDAPModification.DELETE) [ FD ]
Line_48 $$ if (mod.getOp() == LDAPModification.DELETE) -->Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ CD ]
Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ FD ]
Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_50 $$ String[] vals = mod.getAttribute().getStringValueArray()[ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_50 $$ String[] vals = mod.getAttribute().getStringValueArray()[ FD ]
Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_51 $$ if (vals.length == 0) [ CD ]
Line_51 $$ if (vals.length == 0) -->Line_52 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_52 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM locationmap WHERE person=?")[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_53 $$ ps.setInt(1, id)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_53 $$ ps.setInt(1, id)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_53 $$ ps.setInt(1, id)[ FD ]
Line_12 $$ int id = this.getId(dn, con)-->Line_53 $$ ps.setInt(1, id)[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_54 $$ ps.executeUpdate()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_54 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_54 $$ ps.executeUpdate()[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_55 $$ ps.close()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_55 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_55 $$ ps.close()[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_57 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM locationmap WHERE person=? and location=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_57 $$ PreparedStatement ps = con.prepareStatement("DELETE FROM locationmap WHERE person=? and location=?")[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_58 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_58 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_51 $$ if (vals.length == 0) -->Line_51 $$ if (vals.length == 0) [ CD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_60 $$ pssel.setString(1, vals[i])[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_60 $$ pssel.setString(1, vals[i])[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_61 $$ ResultSet rs = pssel.executeQuery()[ CD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_61 $$ ResultSet rs = pssel.executeQuery()[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_61 $$ ResultSet rs = pssel.executeQuery()[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_62 $$ if (!rs.next()) [ CD ]
Line_62 $$ if (!rs.next()) -->Line_62 $$ if (!rs.next()) [ CD ]
Line_62 $$ if (!rs.next()) -->Line_62 $$ if (!rs.next()) [ CD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_62 $$ if (!rs.next()) [ FD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_62 $$ if (!rs.next()) [ FD ]
Line_62 $$ if (!rs.next()) -->Line_63 $$ con.rollback()[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_63 $$ con.rollback()[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_66 $$ int lid = rs.getInt("id")[ CD ]
Line_66 $$ int lid = rs.getInt("id")-->Line_66 $$ int lid = rs.getInt("id")[ CD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_66 $$ int lid = rs.getInt("id")[ FD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_66 $$ int lid = rs.getInt("id")[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_67 $$ ps.setInt(1, id)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_67 $$ ps.setInt(1, id)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_67 $$ ps.setInt(1, id)[ FD ]
Line_12 $$ int id = this.getId(dn, con)-->Line_67 $$ ps.setInt(1, id)[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_68 $$ ps.setInt(2, lid)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_68 $$ ps.setInt(2, lid)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_68 $$ ps.setInt(2, lid)[ FD ]
Line_66 $$ int lid = rs.getInt("id")-->Line_68 $$ ps.setInt(2, lid)[ FD ]
Line_40 $$ int lid = rs.getInt("id")-->Line_68 $$ ps.setInt(2, lid)[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_69 $$ ps.executeUpdate()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_69 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_69 $$ ps.executeUpdate()[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_71 $$ ps.close()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_71 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_71 $$ ps.close()[ FD ]
Line_51 $$ if (vals.length == 0) -->Line_72 $$ pssel.close()[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_72 $$ pssel.close()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_75 $$ throw new LDAPException("Can not delete attribute " + mod.getAttribute().getName(), LDAPException.INVALID_ATTRIBUTE_SYNTAX, "")[ FD ]
Line_48 $$ if (mod.getOp() == LDAPModification.DELETE) -->Line_77 $$ if (mod.getOp() == LDAPModification.ADD) [ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_77 $$ if (mod.getOp() == LDAPModification.ADD) [ FD ]
Line_77 $$ if (mod.getOp() == LDAPModification.ADD) -->Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ CD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ FD ]
Line_9 $$ HashMap<String, String> db2ldap = (HashMap<String, String>) chain.getRequest().get(JdbcInsert.MYVD_DB_DB2LDAP + "LDAPBaseServer")-->Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ FD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_79 $$ String[] vals = mod.getAttribute().getStringValueArray()[ CD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_79 $$ String[] vals = mod.getAttribute().getStringValueArray()[ FD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_80 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_80 $$ PreparedStatement ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")[ FD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_81 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_81 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")[ FD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ CD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ CD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_83 $$ pssel.setString(1, vals[i])[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_83 $$ pssel.setString(1, vals[i])[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_84 $$ ResultSet rs = pssel.executeQuery()[ CD ]
Line_84 $$ ResultSet rs = pssel.executeQuery()-->Line_84 $$ ResultSet rs = pssel.executeQuery()[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_84 $$ ResultSet rs = pssel.executeQuery()[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_85 $$ if (!rs.next()) [ CD ]
Line_85 $$ if (!rs.next()) -->Line_85 $$ if (!rs.next()) [ CD ]
Line_85 $$ if (!rs.next()) -->Line_85 $$ if (!rs.next()) [ CD ]
Line_84 $$ ResultSet rs = pssel.executeQuery()-->Line_85 $$ if (!rs.next()) [ FD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_85 $$ if (!rs.next()) [ FD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_85 $$ if (!rs.next()) [ FD ]
Line_85 $$ if (!rs.next()) -->Line_86 $$ con.rollback()[ CD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_86 $$ con.rollback()[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_89 $$ int lid = rs.getInt("id")[ CD ]
Line_89 $$ int lid = rs.getInt("id")-->Line_89 $$ int lid = rs.getInt("id")[ CD ]
Line_84 $$ ResultSet rs = pssel.executeQuery()-->Line_89 $$ int lid = rs.getInt("id")[ FD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_89 $$ int lid = rs.getInt("id")[ FD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_89 $$ int lid = rs.getInt("id")[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_90 $$ ps.setInt(1, id)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_90 $$ ps.setInt(1, id)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_90 $$ ps.setInt(1, id)[ FD ]
Line_12 $$ int id = this.getId(dn, con)-->Line_90 $$ ps.setInt(1, id)[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_91 $$ ps.setInt(2, lid)[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_91 $$ ps.setInt(2, lid)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_91 $$ ps.setInt(2, lid)[ FD ]
Line_89 $$ int lid = rs.getInt("id")-->Line_91 $$ ps.setInt(2, lid)[ FD ]
Line_66 $$ int lid = rs.getInt("id")-->Line_91 $$ ps.setInt(2, lid)[ FD ]
Line_40 $$ int lid = rs.getInt("id")-->Line_91 $$ ps.setInt(2, lid)[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_92 $$ ps.executeUpdate()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_92 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_92 $$ ps.executeUpdate()[ FD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_94 $$ ps.close()[ CD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_94 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_94 $$ ps.close()[ FD ]
Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) -->Line_95 $$ pssel.close()[ CD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_95 $$ pssel.close()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_97 $$ throw new LDAPException("Can not delete attribute " + mod.getAttribute().getName(), LDAPException.INVALID_ATTRIBUTE_SYNTAX, "")[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_101 $$ con.commit()[ FD ]
Line_3 $$ Connection con = (Connection) chain.getRequest().get(JdbcInsert.MYVD_DB_CON + "LDAPBaseServer")-->Line_104 $$ con.rollback()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_15 $$ if (mod.getOp() == LDAPModification.REPLACE) [ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_16 $$ String attributeName = mod.getAttribute().getName()[ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_17 $$ if (attributeName.equals(db2ldap.get("first")) || attributeName.equals(db2ldap.get("last"))) [ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_19 $$ ps.setString(1, mod.getAttribute().getStringValue())[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_19 $$ ps.setString(1, mod.getAttribute().getStringValue())[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_19 $$ ps.setString(1, mod.getAttribute().getStringValue())[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_20 $$ ps.setString(2, uid)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_20 $$ ps.setString(2, uid)[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_21 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_21 $$ ps.executeUpdate()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_22 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_22 $$ ps.close()[ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_23 $$ if (attributeName.equals(db2ldap.get("username"))) [ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ FD ]
Line_16 $$ String attributeName = mod.getAttribute().getName()-->Line_25 $$ if (attributeName.equals(db2ldap.get("name"))) [ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_27 $$ ps.setInt(1, id)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_27 $$ ps.setInt(1, id)[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_28 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_28 $$ ps.executeUpdate()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_29 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_29 $$ ps.close()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_32 $$ String[] vals = mod.getAttribute().getStringValueArray()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_45 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_45 $$ ps.close()[ FD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_46 $$ pssel.close()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_48 $$ if (mod.getOp() == LDAPModification.DELETE) [ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_49 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_50 $$ String[] vals = mod.getAttribute().getStringValueArray()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_53 $$ ps.setInt(1, id)[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_53 $$ ps.setInt(1, id)[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_54 $$ ps.executeUpdate()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_54 $$ ps.executeUpdate()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_55 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_55 $$ ps.close()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_71 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_71 $$ ps.close()[ FD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_72 $$ pssel.close()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_75 $$ throw new LDAPException("Can not delete attribute " + mod.getAttribute().getName(), LDAPException.INVALID_ATTRIBUTE_SYNTAX, "")[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_77 $$ if (mod.getOp() == LDAPModification.ADD) [ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_78 $$ if (mod.getAttribute().getName().equals(db2ldap.get("name"))) [ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_79 $$ String[] vals = mod.getAttribute().getStringValueArray()[ FD ]
Line_18 $$ PreparedStatement ps = con.prepareStatement("UPDATE USERS SET " + (attributeName.equals(db2ldap.get("first")) ? "first" : "last") + "=? WHERE username=?")-->Line_94 $$ ps.close()[ FD ]
Line_30 $$ ps = con.prepareStatement("INSERT INTO locationmap (person,location) VALUES (?,?)")-->Line_94 $$ ps.close()[ FD ]
Line_31 $$ PreparedStatement pssel = con.prepareStatement("SELECT id FROM LOCATIONS WHERE name=?")-->Line_95 $$ pssel.close()[ FD ]
Line_14 $$ LDAPModification mod = it.next()-->Line_97 $$ throw new LDAPException("Can not delete attribute " + mod.getAttribute().getName(), LDAPException.INVALID_ATTRIBUTE_SYNTAX, "")[ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_33 $$ for (int i = 0; i < vals.length; i++) -->Line_33 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_36 $$ if (!rs.next()) [ FD ]
Line_35 $$ ResultSet rs = pssel.executeQuery()-->Line_40 $$ int lid = rs.getInt("id")[ FD ]
Line_40 $$ int lid = rs.getInt("id")-->Line_42 $$ ps.setInt(2, lid)[ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_59 $$ for (int i = 0; i < vals.length; i++) -->Line_59 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_62 $$ if (!rs.next()) [ FD ]
Line_61 $$ ResultSet rs = pssel.executeQuery()-->Line_66 $$ int lid = rs.getInt("id")[ FD ]
Line_66 $$ int lid = rs.getInt("id")-->Line_68 $$ ps.setInt(2, lid)[ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_82 $$ for (int i = 0; i < vals.length; i++) -->Line_82 $$ for (int i = 0; i < vals.length; i++) [ FD ]
Line_84 $$ ResultSet rs = pssel.executeQuery()-->Line_85 $$ if (!rs.next()) [ FD ]
Line_84 $$ ResultSet rs = pssel.executeQuery()-->Line_89 $$ int lid = rs.getInt("id")[ FD ]
Line_89 $$ int lid = rs.getInt("id")-->Line_91 $$ ps.setInt(2, lid)[ FD ]
