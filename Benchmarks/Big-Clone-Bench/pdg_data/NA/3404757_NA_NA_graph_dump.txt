Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_3 $$ URL url = null[ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_4 $$ if (connectionType.equals(SQL.ORACLE)) [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_4 $$ if (connectionType.equals(SQL.ORACLE)) [ FD ]
Line_4 $$ if (connectionType.equals(SQL.ORACLE)) -->Line_4 $$ if (connectionType.equals(SQL.ORACLE)) [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_4 $$ if (connectionType.equals(SQL.ORACLE)) [ FD ]
Line_4 $$ if (connectionType.equals(SQL.ORACLE)) -->Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")[ CD ]
Line_3 $$ URL url = null-->Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")[ FD ]
Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")-->Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")[ FD ]
Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")-->Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")[ CD ]
Line_4 $$ if (connectionType.equals(SQL.ORACLE)) -->Line_6 $$ if (connectionType.equals(SQL.SQL2K)) [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_6 $$ if (connectionType.equals(SQL.SQL2K)) [ FD ]
Line_6 $$ if (connectionType.equals(SQL.SQL2K)) -->Line_6 $$ if (connectionType.equals(SQL.SQL2K)) [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_6 $$ if (connectionType.equals(SQL.SQL2K)) [ FD ]
Line_6 $$ if (connectionType.equals(SQL.SQL2K)) -->Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")[ CD ]
Line_3 $$ URL url = null-->Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")[ FD ]
Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")-->Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")[ FD ]
Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")-->Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")[ FD ]
Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")-->Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")[ CD ]
Line_6 $$ if (connectionType.equals(SQL.SQL2K)) -->Line_8 $$ if (connectionType.equals(SQL.CACHE)) [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_8 $$ if (connectionType.equals(SQL.CACHE)) [ FD ]
Line_8 $$ if (connectionType.equals(SQL.CACHE)) -->Line_8 $$ if (connectionType.equals(SQL.CACHE)) [ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_8 $$ if (connectionType.equals(SQL.CACHE)) [ FD ]
Line_8 $$ if (connectionType.equals(SQL.CACHE)) -->Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")[ CD ]
Line_3 $$ URL url = null-->Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")[ FD ]
Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")-->Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")[ FD ]
Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")-->Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")[ FD ]
Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")-->Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")[ FD ]
Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")-->Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")[ CD ]
Line_2 $$ public InputStream getDaoConfig(String connectionType) throws IOException -->Line_11 $$ return url.openStream()[ CD ]
Line_11 $$ return url.openStream()-->Line_11 $$ return url.openStream()[ CD ]
Line_3 $$ URL url = null-->Line_11 $$ return url.openStream()[ FD ]
Line_5 $$ url = DTSWFDBConfig.class.getResource("oracle.xml")-->Line_11 $$ return url.openStream()[ FD ]
Line_7 $$ url = DTSWFDBConfig.class.getResource("sql2k.xml")-->Line_11 $$ return url.openStream()[ FD ]
Line_9 $$ url = DTSWFDBConfig.class.getResource("cache.xml")-->Line_11 $$ return url.openStream()[ FD ]
