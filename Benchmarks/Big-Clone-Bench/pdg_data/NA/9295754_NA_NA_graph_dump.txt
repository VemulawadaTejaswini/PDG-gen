Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encryptPassword(String password) [ CD ]
Line_4 $$ MessageDigest digest = java.security.MessageDigest.getInstance("SHA1")-->Line_4 $$ MessageDigest digest = java.security.MessageDigest.getInstance("SHA1")[ CD ]
Line_4 $$ MessageDigest digest = java.security.MessageDigest.getInstance("SHA1")-->Line_5 $$ digest.update(password.getBytes("UTF-8"))[ FD ]
Line_2 $$ public static String encryptPassword(String password) -->Line_5 $$ digest.update(password.getBytes("UTF-8"))[ FD ]
Line_6 $$ byte[] hash = digest.digest()-->Line_6 $$ byte[] hash = digest.digest()[ CD ]
Line_4 $$ MessageDigest digest = java.security.MessageDigest.getInstance("SHA1")-->Line_6 $$ byte[] hash = digest.digest()[ FD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ int halfbyte = (hash[i] >>> 4) & 0x0F[ CD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ int two_halfs = 0[ CD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ do [ CD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_11 $$ do -->Line_12 $$ if ((0 <= halfbyte) && (halfbyte <= 9)) [ CD ]
Line_12 $$ if ((0 <= halfbyte) && (halfbyte <= 9)) -->Line_13 $$ buf.append((char) ('0' + halfbyte))[ CD ]
Line_7 $$ StringBuffer buf = new StringBuffer()-->Line_13 $$ buf.append((char) ('0' + halfbyte))[ FD ]
Line_12 $$ if ((0 <= halfbyte) && (halfbyte <= 9)) -->Line_15 $$ buf.append((char) ('a' + (halfbyte - 10)))[ CD ]
Line_7 $$ StringBuffer buf = new StringBuffer()-->Line_15 $$ buf.append((char) ('a' + (halfbyte - 10)))[ FD ]
Line_11 $$ do -->Line_17 $$ halfbyte = hash[i] & 0x0F[ CD ]
Line_17 $$ halfbyte = hash[i] & 0x0F-->Line_17 $$ halfbyte = hash[i] & 0x0F[ FD ]
Line_9 $$ int halfbyte = (hash[i] >>> 4) & 0x0F-->Line_17 $$ halfbyte = hash[i] & 0x0F[ FD ]
Line_10 $$ int two_halfs = 0-->Line_11 $$ do [ FD ]
Line_20 $$ return buf.toString()-->Line_20 $$ return buf.toString()[ CD ]
Line_7 $$ StringBuffer buf = new StringBuffer()-->Line_20 $$ return buf.toString()[ FD ]
Line_2 $$ public static String encryptPassword(String password) -->Line_23 $$ return null[ CD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < hash.length; i++) -->Line_8 $$ for (int i = 0; i < hash.length; i++) [ FD ]
