Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void unpack(File destDirectory, boolean delete) [ CD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_3 $$ if (delete)[ CD ]
Line_3 $$ if (delete)-->Line_3 $$ delete(destDirectory)[ CD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_3 $$ delete(destDirectory)[ FD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_4 $$ if (destDirectory.exists())[ CD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_4 $$ if (destDirectory.exists())[ FD ]
Line_4 $$ if (destDirectory.exists())-->Line_4 $$ if (destDirectory.exists())[ CD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_4 $$ if (destDirectory.exists())[ FD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_5 $$ this.destDirectory = destDirectory[ CD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_5 $$ this.destDirectory = destDirectory[ FD ]
Line_2 $$ public void unpack(File destDirectory, boolean delete) -->Line_6 $$ this.manifestFile = new File(destDirectory, MANIFEST_FILE_NAME)[ CD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) [ FD ]
Line_9 $$ ZipEntry zipEntry-->Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) [ FD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) [ CD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_11 $$ File destFile = new File(destDirectory, zipEntry.getName())[ CD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_11 $$ File destFile = new File(destDirectory, zipEntry.getName())[ FD ]
Line_9 $$ ZipEntry zipEntry-->Line_11 $$ File destFile = new File(destDirectory, zipEntry.getName())[ FD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_12 $$ destFile.getParentFile().mkdirs()[ CD ]
Line_11 $$ File destFile = new File(destDirectory, zipEntry.getName())-->Line_12 $$ destFile.getParentFile().mkdirs()[ FD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_13 $$ if (!zipEntry.isDirectory()) [ CD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_13 $$ if (!zipEntry.isDirectory()) [ CD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_13 $$ if (!zipEntry.isDirectory()) [ CD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_13 $$ if (!zipEntry.isDirectory()) [ FD ]
Line_9 $$ ZipEntry zipEntry-->Line_13 $$ if (!zipEntry.isDirectory()) [ FD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_14 $$ BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(destFile), BUFFER_SIZE)[ CD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_15 $$ byte[] buffer = new byte[BUFFER_SIZE][ CD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_16 $$ int length[ CD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)[ CD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_13 $$ if (!zipEntry.isDirectory()) [ CD ]
Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)-->Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)[ FD ]
Line_16 $$ int length-->Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)[ FD ]
Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)-->Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)[ CD ]
Line_15 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)[ FD ]
Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)-->Line_17 $$ output.write(buffer, 0, length)[ CD ]
Line_14 $$ BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(destFile), BUFFER_SIZE)-->Line_17 $$ output.write(buffer, 0, length)[ FD ]
Line_15 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_17 $$ output.write(buffer, 0, length)[ FD ]
Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)-->Line_17 $$ output.write(buffer, 0, length)[ FD ]
Line_16 $$ int length-->Line_17 $$ output.write(buffer, 0, length)[ FD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_18 $$ output.close()[ CD ]
Line_14 $$ BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(destFile), BUFFER_SIZE)-->Line_18 $$ output.close()[ FD ]
Line_13 $$ if (!zipEntry.isDirectory()) -->Line_19 $$ zipInputStream.closeEntry()[ CD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_11 $$ File destFile = new File(destDirectory, zipEntry.getName())[ FD ]
Line_11 $$ File destFile = new File(destDirectory, zipEntry.getName())-->Line_12 $$ destFile.getParentFile().mkdirs()[ FD ]
Line_10 $$ while ((zipEntry = zipInputStream.getNextEntry()) != null) -->Line_13 $$ if (!zipEntry.isDirectory()) [ FD ]
Line_14 $$ BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(destFile), BUFFER_SIZE)-->Line_18 $$ output.close()[ FD ]
Line_17 $$ while ((length = zipInputStream.read(buffer, 0, BUFFER_SIZE)) != -1) output.write(buffer, 0, length)-->Line_17 $$ output.write(buffer, 0, length)[ FD ]
