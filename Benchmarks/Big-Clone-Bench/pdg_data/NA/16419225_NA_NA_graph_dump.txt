Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encrypt(String algorithm, String str) [ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(algorithm)-->Line_4 $$ MessageDigest md = MessageDigest.getInstance(algorithm)[ CD ]
Line_2 $$ public static String encrypt(String algorithm, String str) -->Line_4 $$ MessageDigest md = MessageDigest.getInstance(algorithm)[ FD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(algorithm)-->Line_5 $$ md.update(str.getBytes())[ FD ]
Line_2 $$ public static String encrypt(String algorithm, String str) -->Line_5 $$ md.update(str.getBytes())[ FD ]
Line_7 $$ byte[] bytes = md.digest()-->Line_7 $$ byte[] bytes = md.digest()[ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance(algorithm)-->Line_7 $$ byte[] bytes = md.digest()[ FD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ for (int i = 0; i < bytes.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ for (int i = 0; i < bytes.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_9 $$ int b = bytes[i] & 0xFF[ CD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_10 $$ if (b < 0x10)[ CD ]
Line_9 $$ int b = bytes[i] & 0xFF-->Line_10 $$ if (b < 0x10)[ FD ]
Line_10 $$ if (b < 0x10)-->Line_10 $$ sb.append('0')[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_10 $$ sb.append('0')[ FD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_11 $$ sb.append(Integer.toHexString(b))[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_11 $$ sb.append(Integer.toHexString(b))[ FD ]
Line_9 $$ int b = bytes[i] & 0xFF-->Line_11 $$ sb.append(Integer.toHexString(b))[ FD ]
Line_13 $$ return sb.toString()-->Line_13 $$ return sb.toString()[ CD ]
Line_6 $$ StringBuffer sb = new StringBuffer()-->Line_13 $$ return sb.toString()[ FD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < bytes.length; i++) -->Line_8 $$ for (int i = 0; i < bytes.length; i++) [ FD ]
Line_9 $$ int b = bytes[i] & 0xFF-->Line_10 $$ if (b < 0x10)[ FD ]
Line_9 $$ int b = bytes[i] & 0xFF-->Line_11 $$ sb.append(Integer.toHexString(b))[ FD ]
