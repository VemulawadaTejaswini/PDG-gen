Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception [ CD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_3 $$ int n = 512 * 1024[ CD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_4 $$ AtomicInteger total = new AtomicInteger(0)[ CD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_5 $$ ServerSocket ss = startSinkServer(total)[ CD ]
Line_5 $$ ServerSocket ss = startSinkServer(total)-->Line_5 $$ ServerSocket ss = startSinkServer(total)[ CD ]
Line_4 $$ AtomicInteger total = new AtomicInteger(0)-->Line_5 $$ ServerSocket ss = startSinkServer(total)[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_6 $$ URL url = new URL("http://localhost:" + ss.getLocalPort() + "/test1")[ CD ]
Line_5 $$ ServerSocket ss = startSinkServer(total)-->Line_6 $$ URL url = new URL("http://localhost:" + ss.getLocalPort() + "/test1")[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_6 $$ URL url = new URL("http://localhost:" + ss.getLocalPort() + "/test1")-->Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_8 $$ conn.setDoOutput(true)[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_9 $$ conn.setRequestMethod("POST")[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.setRequestMethod("POST")[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_10 $$ if (uploadKind == UploadKind.CHUNKED) [ CD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_10 $$ if (uploadKind == UploadKind.CHUNKED) [ FD ]
Line_10 $$ if (uploadKind == UploadKind.CHUNKED) -->Line_11 $$ conn.setChunkedStreamingMode(-1)[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.setChunkedStreamingMode(-1)[ FD ]
Line_10 $$ if (uploadKind == UploadKind.CHUNKED) -->Line_13 $$ conn.setFixedLengthStreamingMode(n)[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn.setFixedLengthStreamingMode(n)[ FD ]
Line_3 $$ int n = 512 * 1024-->Line_13 $$ conn.setFixedLengthStreamingMode(n)[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_15 $$ OutputStream out = conn.getOutputStream()[ CD ]
Line_15 $$ OutputStream out = conn.getOutputStream()-->Line_15 $$ OutputStream out = conn.getOutputStream()[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ OutputStream out = conn.getOutputStream()[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) [ CD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) [ FD ]
Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) -->Line_17 $$ for (int i = 0; i < n; ++i) [ CD ]
Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) -->Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) [ CD ]
Line_3 $$ int n = 512 * 1024-->Line_17 $$ for (int i = 0; i < n; ++i) [ FD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_17 $$ for (int i = 0; i < n; ++i) [ CD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_17 $$ for (int i = 0; i < n; ++i) [ CD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_17 $$ for (int i = 0; i < n; ++i) [ FD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_18 $$ out.write('x')[ CD ]
Line_15 $$ OutputStream out = conn.getOutputStream()-->Line_18 $$ out.write('x')[ FD ]
Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) -->Line_21 $$ byte[] buf = new byte[writeKind == WriteKind.SMALL_BUFFERS ? 256 : 64 * 1024][ CD ]
Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) -->Line_22 $$ Arrays.fill(buf, (byte) 'x')[ CD ]
Line_21 $$ byte[] buf = new byte[writeKind == WriteKind.SMALL_BUFFERS ? 256 : 64 * 1024]-->Line_22 $$ Arrays.fill(buf, (byte) 'x')[ FD ]
Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ CD ]
Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) -->Line_16 $$ if (writeKind == WriteKind.BYTE_BY_BYTE) [ CD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_3 $$ int n = 512 * 1024-->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ CD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ CD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_24 $$ out.write(buf, 0, Math.min(buf.length, n - i))[ CD ]
Line_15 $$ OutputStream out = conn.getOutputStream()-->Line_24 $$ out.write(buf, 0, Math.min(buf.length, n - i))[ FD ]
Line_21 $$ byte[] buf = new byte[writeKind == WriteKind.SMALL_BUFFERS ? 256 : 64 * 1024]-->Line_24 $$ out.write(buf, 0, Math.min(buf.length, n - i))[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_27 $$ out.close()[ CD ]
Line_15 $$ OutputStream out = conn.getOutputStream()-->Line_27 $$ out.close()[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_28 $$ assertTrue(conn.getResponseCode() > 0)[ CD ]
Line_7 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_28 $$ assertTrue(conn.getResponseCode() > 0)[ FD ]
Line_2 $$ private void doUpload(UploadKind uploadKind, WriteKind writeKind) throws Exception -->Line_29 $$ assertEquals(uploadKind == UploadKind.CHUNKED ? -1 : n, total.get())[ CD ]
Line_4 $$ AtomicInteger total = new AtomicInteger(0)-->Line_29 $$ assertEquals(uploadKind == UploadKind.CHUNKED ? -1 : n, total.get())[ FD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_17 $$ for (int i = 0; i < n; ++i) [ FD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_17 $$ for (int i = 0; i < n; ++i) [ FD ]
Line_17 $$ for (int i = 0; i < n; ++i) -->Line_17 $$ for (int i = 0; i < n; ++i) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
Line_23 $$ for (int i = 0; i < n; i += buf.length) -->Line_23 $$ for (int i = 0; i < n; i += buf.length) [ FD ]
