Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void downloadFile(File file, String url) [ CD ]
Line_2 $$ private void downloadFile(File file, String url) -->Line_3 $$ String state = Environment.getExternalStorageState()[ CD ]
Line_3 $$ String state = Environment.getExternalStorageState()-->Line_3 $$ String state = Environment.getExternalStorageState()[ CD ]
Line_2 $$ private void downloadFile(File file, String url) -->Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) [ CD ]
Line_3 $$ String state = Environment.getExternalStorageState()-->Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) [ FD ]
Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) -->Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) [ CD ]
Line_3 $$ String state = Environment.getExternalStorageState()-->Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) [ FD ]
Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) -->Line_5 $$ InputStream in = null[ CD ]
Line_4 $$ if (Environment.MEDIA_MOUNTED.equals(state)) -->Line_6 $$ BufferedOutputStream out = null[ CD ]
Line_5 $$ InputStream in = null-->Line_8 $$ in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE)[ FD ]
Line_8 $$ in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE)-->Line_8 $$ in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE)[ FD ]
Line_6 $$ BufferedOutputStream out = null-->Line_10 $$ out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE)[ FD ]
Line_10 $$ out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE)-->Line_10 $$ out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE)[ FD ]
Line_5 $$ InputStream in = null-->Line_12 $$ while (in.read(bytes) > 0) [ FD ]
Line_8 $$ in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE)-->Line_12 $$ while (in.read(bytes) > 0) [ FD ]
Line_11 $$ byte[] bytes = new byte[IO_BUFFER_SIZE]-->Line_12 $$ while (in.read(bytes) > 0) [ FD ]
Line_12 $$ while (in.read(bytes) > 0) -->Line_13 $$ out.write(bytes)[ CD ]
Line_6 $$ BufferedOutputStream out = null-->Line_13 $$ out.write(bytes)[ FD ]
Line_10 $$ out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE)-->Line_13 $$ out.write(bytes)[ FD ]
Line_11 $$ byte[] bytes = new byte[IO_BUFFER_SIZE]-->Line_13 $$ out.write(bytes)[ FD ]
Line_5 $$ InputStream in = null-->Line_18 $$ if (in != null) [ FD ]
Line_8 $$ in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE)-->Line_18 $$ if (in != null) [ FD ]
Line_5 $$ InputStream in = null-->Line_20 $$ in.close()[ FD ]
Line_8 $$ in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE)-->Line_20 $$ in.close()[ FD ]
Line_6 $$ BufferedOutputStream out = null-->Line_25 $$ if (out != null) [ FD ]
Line_10 $$ out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE)-->Line_25 $$ if (out != null) [ FD ]
Line_6 $$ BufferedOutputStream out = null-->Line_27 $$ out.close()[ FD ]
Line_10 $$ out = new BufferedOutputStream(outStream, IO_BUFFER_SIZE)-->Line_27 $$ out.close()[ FD ]
