Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) [ CD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_3 $$ String osRoot = OSRoot.getRoot()[ CD ]
Line_3 $$ String osRoot = OSRoot.getRoot()-->Line_3 $$ String osRoot = OSRoot.getRoot()[ CD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_4 $$ String fname = ""[ CD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_5 $$ Object retobj = null[ CD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_6 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_6 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_6 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_8 $$ if (myport == null || myport.trim().equals("")) [ CD ]
Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_8 $$ if (myport == null || myport.trim().equals("")) [ FD ]
Line_8 $$ if (myport == null || myport.trim().equals("")) -->Line_9 $$ myport = "80"[ CD ]
Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_9 $$ myport = "80"[ FD ]
Line_9 $$ myport = "80"-->Line_9 $$ myport = "80"[ FD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_11 $$ if (this.serverURL == null) [ CD ]
Line_13 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_13 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()[ CD ]
Line_13 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_14 $$ if (codebase != null)[ FD ]
Line_14 $$ if (codebase != null)-->Line_14 $$ serverURL = codebase.getHost()[ CD ]
Line_13 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_14 $$ serverURL = codebase.getHost()[ FD ]
Line_11 $$ if (this.serverURL == null) -->Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)[ CD ]
Line_11 $$ if (this.serverURL == null) -->Line_20 $$ ipdig.show()[ CD ]
Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_20 $$ ipdig.show()[ FD ]
Line_11 $$ if (this.serverURL == null) -->Line_21 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_6 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_21 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_21 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_21 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_21 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_21 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_21 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_11 $$ if (this.serverURL == null) -->Line_22 $$ myport = ipdig.getPortNo()[ CD ]
Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_22 $$ myport = ipdig.getPortNo()[ FD ]
Line_9 $$ myport = "80"-->Line_22 $$ myport = ipdig.getPortNo()[ FD ]
Line_22 $$ myport = ipdig.getPortNo()-->Line_22 $$ myport = ipdig.getPortNo()[ FD ]
Line_22 $$ myport = ipdig.getPortNo()-->Line_22 $$ myport = ipdig.getPortNo()[ CD ]
Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_22 $$ myport = ipdig.getPortNo()[ FD ]
Line_11 $$ if (this.serverURL == null) -->Line_23 $$ java.util.prefs.Preferences.systemRoot().put("serverurl", serverURL)[ CD ]
Line_11 $$ if (this.serverURL == null) -->Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ CD ]
Line_7 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_9 $$ myport = "80"-->Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_22 $$ myport = ipdig.getPortNo()-->Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_11 $$ if (this.serverURL == null) -->Line_25 $$ System.out.println(serverURL)[ CD ]
Line_29 $$ java.net.URL url = new java.net.URL("http://" + serverURL + ":" + myport + "/newgenlibctxt/" + servletName)-->Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()[ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_31 $$ urlconn.setDoOutput(true)[ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_32 $$ urlconn.setRequestProperty("Content-type", "text/xml; charset=UTF-8")[ FD ]
Line_33 $$ java.io.OutputStream os = urlconn.getOutputStream()-->Line_33 $$ java.io.OutputStream os = urlconn.getOutputStream()[ CD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_33 $$ java.io.OutputStream os = urlconn.getOutputStream()[ FD ]
Line_34 $$ String req1xml = request-->Line_38 $$ System.out.println(req1xml)[ FD ]
Line_40 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_41 $$ pw.write(req1xml.getBytes())[ FD ]
Line_34 $$ String req1xml = request-->Line_41 $$ pw.write(req1xml.getBytes())[ FD ]
Line_40 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_42 $$ pw.flush()[ FD ]
Line_40 $$ java.io.FileOutputStream pw = new java.io.FileOutputStream("log.txt")-->Line_43 $$ pw.close()[ FD ]
Line_37 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_47 $$ dos.write(req1xml)[ FD ]
Line_34 $$ String req1xml = request-->Line_47 $$ dos.write(req1xml)[ FD ]
Line_37 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_48 $$ dos.flush()[ FD ]
Line_37 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_49 $$ dos.close()[ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_50 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_50 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_51 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_51 $$ java.io.InputStream ios = urlconn.getInputStream()[ CD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_51 $$ java.io.InputStream ios = urlconn.getInputStream()[ FD ]
Line_53 $$ if (!f1.exists())-->Line_53 $$ if (!f1.exists())[ CD ]
Line_53 $$ if (!f1.exists())-->Line_53 $$ if (!f1.exists())[ CD ]
Line_52 $$ java.io.File f1 = new java.io.File(osRoot + "/localattachments/Reports")-->Line_53 $$ if (!f1.exists())[ FD ]
Line_53 $$ if (!f1.exists())-->Line_53 $$ f1.mkdirs()[ CD ]
Line_52 $$ java.io.File f1 = new java.io.File(osRoot + "/localattachments/Reports")-->Line_53 $$ f1.mkdirs()[ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_55 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("application/vnd.oasis.opendocument.text")) [ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_55 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("application/vnd.oasis.opendocument.text")) [ FD ]
Line_55 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("application/vnd.oasis.opendocument.text")) -->Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")[ CD ]
Line_54 $$ java.io.File file = null-->Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")[ FD ]
Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")-->Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")[ FD ]
Line_55 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("application/vnd.oasis.opendocument.text")) -->Line_57 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("text/html")) [ CD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_57 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("text/html")) [ FD ]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_57 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("text/html")) [ FD ]
Line_57 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("text/html")) -->Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")[ CD ]
Line_54 $$ java.io.File file = null-->Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")[ FD ]
Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")-->Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")[ FD ]
Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")-->Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")[ FD ]
Line_57 $$ if (urlconn.getContentType() != null && urlconn.getContentType().trim().equals("text/html")) -->Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")[ CD ]
Line_54 $$ java.io.File file = null-->Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")[ FD ]
Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")-->Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")[ FD ]
Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")-->Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")[ FD ]
Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")-->Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")[ FD ]
Line_54 $$ java.io.File file = null-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_62 $$ file = new java.io.File(file.getAbsolutePath())-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_54 $$ java.io.File file = null-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_62 $$ file = new java.io.File(file.getAbsolutePath())-->Line_62 $$ file = new java.io.File(file.getAbsolutePath())[ FD ]
Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)-->Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)[ FD ]
Line_64 $$ int c-->Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)[ FD ]
Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)-->Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)[ CD ]
Line_51 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)[ FD ]
Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)-->Line_65 $$ fos.write(c)[ CD ]
Line_63 $$ java.io.FileOutputStream fos = new java.io.FileOutputStream(file)-->Line_65 $$ fos.write(c)[ FD ]
Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)-->Line_65 $$ fos.write(c)[ FD ]
Line_64 $$ int c-->Line_65 $$ fos.write(c)[ FD ]
Line_63 $$ java.io.FileOutputStream fos = new java.io.FileOutputStream(file)-->Line_66 $$ fos.close()[ FD ]
Line_51 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_67 $$ ios.close()[ FD ]
Line_4 $$ String fname = ""-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_68 $$ fname = file.getAbsolutePath()-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_68 $$ fname = file.getAbsolutePath()-->Line_68 $$ fname = file.getAbsolutePath()[ CD ]
Line_54 $$ java.io.File file = null-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_56 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".odt")-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_58 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".html")-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_60 $$ file = new java.io.File(osRoot + "/localattachments/Reports/" + System.currentTimeMillis() + ".xls")-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_62 $$ file = new java.io.File(file.getAbsolutePath())-->Line_68 $$ fname = file.getAbsolutePath()[ FD ]
Line_4 $$ String fname = ""-->Line_69 $$ System.out.println(fname)[ FD ]
Line_68 $$ fname = file.getAbsolutePath()-->Line_69 $$ System.out.println(fname)[ FD ]
Line_2 $$ public Object sendRequestObjectResponse(java.lang.String servletName, java.lang.String request) -->Line_75 $$ return fname[ CD ]
Line_65 $$ while ((c = ios.read()) != -1) fos.write(c)-->Line_65 $$ fos.write(c)[ FD ]
