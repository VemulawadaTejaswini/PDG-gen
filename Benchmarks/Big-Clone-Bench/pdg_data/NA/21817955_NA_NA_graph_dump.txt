Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception [ CD ]
Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception -->Line_3 $$ Connection con = null[ CD ]
Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception -->Line_4 $$ PreparedStatement ps = null[ CD ]
Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception -->Line_5 $$ ResultSet result = null[ CD ]
Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception -->Line_6 $$ int moveCount = showOrder.length[ CD ]
Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception -->Line_7 $$ DBOperation dbo = factory.createDBOperation(POOL_NAME)[ CD ]
Line_7 $$ DBOperation dbo = factory.createDBOperation(POOL_NAME)-->Line_7 $$ DBOperation dbo = factory.createDBOperation(POOL_NAME)[ CD ]
Line_2 $$ public void movePrior(String[] showOrder, String[] orgID, String targetShowOrder, String targetOrgID) throws Exception -->Line_8 $$ String strQuery = "select show_order from " + Common.ORGANIZE_TABLE + " where show_order=" + showOrder[moveCount - 1] + " and organize_id= '" + orgID[moveCount - 1] + "'"[ CD ]
Line_3 $$ Connection con = null-->Line_10 $$ con = dbo.getConnection()[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_10 $$ con = dbo.getConnection()[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_10 $$ con = dbo.getConnection()[ CD ]
Line_7 $$ DBOperation dbo = factory.createDBOperation(POOL_NAME)-->Line_10 $$ con = dbo.getConnection()[ FD ]
Line_3 $$ Connection con = null-->Line_11 $$ con.setAutoCommit(false)[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_11 $$ con.setAutoCommit(false)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_12 $$ ps = con.prepareStatement(strQuery)[ FD ]
Line_12 $$ ps = con.prepareStatement(strQuery)-->Line_12 $$ ps = con.prepareStatement(strQuery)[ FD ]
Line_12 $$ ps = con.prepareStatement(strQuery)-->Line_12 $$ ps = con.prepareStatement(strQuery)[ CD ]
Line_3 $$ Connection con = null-->Line_12 $$ ps = con.prepareStatement(strQuery)[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_12 $$ ps = con.prepareStatement(strQuery)[ FD ]
Line_8 $$ String strQuery = "select show_order from " + Common.ORGANIZE_TABLE + " where show_order=" + showOrder[moveCount - 1] + " and organize_id= '" + orgID[moveCount - 1] + "'"-->Line_12 $$ ps = con.prepareStatement(strQuery)[ FD ]
Line_5 $$ ResultSet result = null-->Line_13 $$ result = ps.executeQuery()[ FD ]
Line_13 $$ result = ps.executeQuery()-->Line_13 $$ result = ps.executeQuery()[ FD ]
Line_13 $$ result = ps.executeQuery()-->Line_13 $$ result = ps.executeQuery()[ CD ]
Line_4 $$ PreparedStatement ps = null-->Line_13 $$ result = ps.executeQuery()[ FD ]
Line_12 $$ ps = con.prepareStatement(strQuery)-->Line_13 $$ result = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet result = null-->Line_15 $$ if (result.next()) [ FD ]
Line_13 $$ result = ps.executeQuery()-->Line_15 $$ if (result.next()) [ FD ]
Line_15 $$ if (result.next()) -->Line_15 $$ if (result.next()) [ CD ]
Line_5 $$ ResultSet result = null-->Line_15 $$ if (result.next()) [ FD ]
Line_13 $$ result = ps.executeQuery()-->Line_15 $$ if (result.next()) [ FD ]
Line_15 $$ if (result.next()) -->Line_16 $$ maxOrderNo = result.getInt(1)[ CD ]
Line_14 $$ int maxOrderNo = 0-->Line_16 $$ maxOrderNo = result.getInt(1)[ FD ]
Line_16 $$ maxOrderNo = result.getInt(1)-->Line_16 $$ maxOrderNo = result.getInt(1)[ FD ]
Line_16 $$ maxOrderNo = result.getInt(1)-->Line_16 $$ maxOrderNo = result.getInt(1)[ CD ]
Line_5 $$ ResultSet result = null-->Line_16 $$ maxOrderNo = result.getInt(1)[ FD ]
Line_13 $$ result = ps.executeQuery()-->Line_16 $$ maxOrderNo = result.getInt(1)[ FD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_20 $$ for (int i = 0; i < showOrder.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_20 $$ for (int i = 0; i < showOrder.length; i++) [ CD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_20 $$ for (int i = 0; i < showOrder.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_21 $$ sqls[i + 1] = "update " + Common.ORGANIZE_TABLE + " set show_order=show_order-1" + " where show_order=" + showOrder[i] + " and organize_id= '" + orgID[i] + "'"[ CD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_23 $$ for (int j = 0; j < sqls.length; j++) [ CD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_23 $$ for (int j = 0; j < sqls.length; j++) [ CD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_23 $$ for (int j = 0; j < sqls.length; j++) [ FD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_24 $$ ps = con.prepareStatement(sqls[j])[ CD ]
Line_24 $$ ps = con.prepareStatement(sqls[j])-->Line_24 $$ ps = con.prepareStatement(sqls[j])[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_24 $$ ps = con.prepareStatement(sqls[j])[ FD ]
Line_12 $$ ps = con.prepareStatement(strQuery)-->Line_24 $$ ps = con.prepareStatement(sqls[j])[ FD ]
Line_24 $$ ps = con.prepareStatement(sqls[j])-->Line_24 $$ ps = con.prepareStatement(sqls[j])[ CD ]
Line_3 $$ Connection con = null-->Line_24 $$ ps = con.prepareStatement(sqls[j])[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_24 $$ ps = con.prepareStatement(sqls[j])[ FD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_25 $$ int resultCount = ps.executeUpdate()[ CD ]
Line_25 $$ int resultCount = ps.executeUpdate()-->Line_25 $$ int resultCount = ps.executeUpdate()[ CD ]
Line_24 $$ ps = con.prepareStatement(sqls[j])-->Line_25 $$ int resultCount = ps.executeUpdate()[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_25 $$ int resultCount = ps.executeUpdate()[ FD ]
Line_12 $$ ps = con.prepareStatement(strQuery)-->Line_25 $$ int resultCount = ps.executeUpdate()[ FD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_26 $$ if (resultCount != 1) [ CD ]
Line_25 $$ int resultCount = ps.executeUpdate()-->Line_26 $$ if (resultCount != 1) [ FD ]
Line_3 $$ Connection con = null-->Line_30 $$ con.commit()[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_30 $$ con.commit()[ FD ]
Line_3 $$ Connection con = null-->Line_32 $$ if (con != null) [ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_32 $$ if (con != null) [ FD ]
Line_32 $$ if (con != null) -->Line_33 $$ con.rollback()[ CD ]
Line_3 $$ Connection con = null-->Line_33 $$ con.rollback()[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_33 $$ con.rollback()[ FD ]
Line_3 $$ Connection con = null-->Line_37 $$ con.setAutoCommit(true)[ FD ]
Line_10 $$ con = dbo.getConnection()-->Line_37 $$ con.setAutoCommit(true)[ FD ]
Line_7 $$ DBOperation dbo = factory.createDBOperation(POOL_NAME)-->Line_38 $$ close(dbo, ps, result)[ FD ]
Line_24 $$ ps = con.prepareStatement(sqls[j])-->Line_38 $$ close(dbo, ps, result)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_38 $$ close(dbo, ps, result)[ FD ]
Line_12 $$ ps = con.prepareStatement(strQuery)-->Line_38 $$ close(dbo, ps, result)[ FD ]
Line_5 $$ ResultSet result = null-->Line_38 $$ close(dbo, ps, result)[ FD ]
Line_13 $$ result = ps.executeQuery()-->Line_38 $$ close(dbo, ps, result)[ FD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_20 $$ for (int i = 0; i < showOrder.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_20 $$ for (int i = 0; i < showOrder.length; i++) [ FD ]
Line_20 $$ for (int i = 0; i < showOrder.length; i++) -->Line_20 $$ for (int i = 0; i < showOrder.length; i++) [ FD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_23 $$ for (int j = 0; j < sqls.length; j++) [ FD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_23 $$ for (int j = 0; j < sqls.length; j++) [ FD ]
Line_23 $$ for (int j = 0; j < sqls.length; j++) -->Line_23 $$ for (int j = 0; j < sqls.length; j++) [ FD ]
Line_24 $$ ps = con.prepareStatement(sqls[j])-->Line_25 $$ int resultCount = ps.executeUpdate()[ FD ]
Line_25 $$ int resultCount = ps.executeUpdate()-->Line_26 $$ if (resultCount != 1) [ FD ]
