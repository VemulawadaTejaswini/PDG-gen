Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedImage image = ImageIO.read(BitmapFont.class.getResource("Candara-38-Bold.png"))[ CD ]
Line_3 $$ BufferedImage image = ImageIO.read(BitmapFont.class.getResource("Candara-38-Bold.png"))-->Line_3 $$ BufferedImage image = ImageIO.read(BitmapFont.class.getResource("Candara-38-Bold.png"))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ URL url = BitmapFontData.class.getResource("Candara-38-Bold.fnt")[ CD ]
Line_4 $$ URL url = BitmapFontData.class.getResource("Candara-38-Bold.fnt")-->Line_4 $$ URL url = BitmapFontData.class.getResource("Candara-38-Bold.fnt")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ BitmapFontData bitmapFontData = new BitmapFontData(url.openStream(), true)[ CD ]
Line_4 $$ URL url = BitmapFontData.class.getResource("Candara-38-Bold.fnt")-->Line_5 $$ BitmapFontData bitmapFontData = new BitmapFontData(url.openStream(), true)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ BitmapFont font = new BitmapFont(bitmapFontData, true)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ font.drawMultiLine("Hello world\nthis is a\ntest!!!", 100, 100)[ CD ]
Line_6 $$ BitmapFont font = new BitmapFont(bitmapFontData, true)-->Line_7 $$ font.drawMultiLine("Hello world\nthis is a\ntest!!!", 100, 100)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ VertexData vertexData = font.createVertexData()[ CD ]
Line_8 $$ VertexData vertexData = font.createVertexData()-->Line_8 $$ VertexData vertexData = font.createVertexData()[ CD ]
Line_6 $$ BitmapFont font = new BitmapFont(bitmapFontData, true)-->Line_8 $$ VertexData vertexData = font.createVertexData()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ Display.setDisplayMode(new DisplayMode(640, 480))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ Display.create()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ RenderPass renderPass = new RenderPass()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ renderPass.setClearMask(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT)[ CD ]
Line_11 $$ RenderPass renderPass = new RenderPass()-->Line_12 $$ renderPass.setClearMask(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ renderPass.setClearColor(new Color4f(0.3f, 0.4f, 0.5f, 1f))[ CD ]
Line_11 $$ RenderPass renderPass = new RenderPass()-->Line_13 $$ renderPass.setClearColor(new Color4f(0.3f, 0.4f, 0.5f, 1f))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ renderPass.setView(View.createOrtho(0, 640, 0, 480, -1000, 1000))[ CD ]
Line_11 $$ RenderPass renderPass = new RenderPass()-->Line_14 $$ renderPass.setView(View.createOrtho(0, 640, 0, 480, -1000, 1000))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ ByteBuffer[][] pixels = [ CD ]
Line_3 $$ BufferedImage image = ImageIO.read(BitmapFont.class.getResource("Candara-38-Bold.png"))-->Line_15 $$ ByteBuffer[][] pixels = [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ Texture texture = new Texture(TextureType.TEXTURE_2D, 4, image.getWidth(), image.getHeight(), 0, Format.BGRA, pixels, false, false)[ CD ]
Line_3 $$ BufferedImage image = ImageIO.read(BitmapFont.class.getResource("Candara-38-Bold.png"))-->Line_16 $$ Texture texture = new Texture(TextureType.TEXTURE_2D, 4, image.getWidth(), image.getHeight(), 0, Format.BGRA, pixels, false, false)[ FD ]
Line_3 $$ BufferedImage image = ImageIO.read(BitmapFont.class.getResource("Candara-38-Bold.png"))-->Line_16 $$ Texture texture = new Texture(TextureType.TEXTURE_2D, 4, image.getWidth(), image.getHeight(), 0, Format.BGRA, pixels, false, false)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ Shape shape = new Shape(vertexData)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ shape.getState().setUnit(0, new Unit(texture))[ CD ]
Line_17 $$ Shape shape = new Shape(vertexData)-->Line_18 $$ shape.getState().setUnit(0, new Unit(texture))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_19 $$ shape.getState().setBlendEnabled(true)[ CD ]
Line_17 $$ Shape shape = new Shape(vertexData)-->Line_19 $$ shape.getState().setBlendEnabled(true)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ shape.getState().setBlendSrcFunc(BlendSrcFunc.SRC_ALPHA)[ CD ]
Line_17 $$ Shape shape = new Shape(vertexData)-->Line_20 $$ shape.getState().setBlendSrcFunc(BlendSrcFunc.SRC_ALPHA)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_21 $$ shape.getState().setBlendDstFunc(BlendDstFunc.ONE_MINUS_SRC_ALPHA)[ CD ]
Line_17 $$ Shape shape = new Shape(vertexData)-->Line_21 $$ shape.getState().setBlendDstFunc(BlendDstFunc.ONE_MINUS_SRC_ALPHA)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_22 $$ renderPass.getRootNode().addShape(shape)[ CD ]
Line_17 $$ Shape shape = new Shape(vertexData)-->Line_22 $$ renderPass.getRootNode().addShape(shape)[ FD ]
Line_11 $$ RenderPass renderPass = new RenderPass()-->Line_22 $$ renderPass.getRootNode().addShape(shape)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_23 $$ Renderer renderer = new Renderer(new SceneGraph(renderPass))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_24 $$ while (!Display.isCloseRequested()) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_24 $$ while (!Display.isCloseRequested()) -->Line_24 $$ while (!Display.isCloseRequested()) [ CD ]
Line_24 $$ while (!Display.isCloseRequested()) -->Line_24 $$ while (!Display.isCloseRequested()) [ CD ]
Line_24 $$ while (!Display.isCloseRequested()) -->Line_25 $$ renderer.render()[ CD ]
Line_23 $$ Renderer renderer = new Renderer(new SceneGraph(renderPass))-->Line_25 $$ renderer.render()[ FD ]
Line_24 $$ while (!Display.isCloseRequested()) -->Line_26 $$ Display.update()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_28 $$ Display.destroy()[ CD ]
