Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public HttpURLConnection openConnection() throws IOException [ CD ]
Line_2 $$ public HttpURLConnection openConnection() throws IOException -->Line_3 $$ URL url = new URL("http", host, request)[ CD ]
Line_2 $$ public HttpURLConnection openConnection() throws IOException -->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL("http", host, request)-->Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public HttpURLConnection openConnection() throws IOException -->Line_5 $$ connection.setRequestMethod(method)[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_5 $$ connection.setRequestMethod(method)[ FD ]
Line_2 $$ public HttpURLConnection openConnection() throws IOException -->Line_6 $$ connection.setRequestProperty("Host", host)[ CD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_6 $$ connection.setRequestProperty("Host", host)[ FD ]
Line_7 $$ for (Map.Entry<String, List<String>> entry : mapOfHeaders.entrySet()) -->Line_8 $$ for (String value : entry.getValue()) [ FD ]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.addRequestProperty(entry.getKey(), value)[ FD ]
Line_8 $$ for (String value : entry.getValue()) -->Line_9 $$ connection.addRequestProperty(entry.getKey(), value)[ FD ]
Line_7 $$ for (Map.Entry<String, List<String>> entry : mapOfHeaders.entrySet()) -->Line_9 $$ connection.addRequestProperty(entry.getKey(), value)[ FD ]
Line_2 $$ public HttpURLConnection openConnection() throws IOException -->Line_12 $$ return connection[ CD ]
