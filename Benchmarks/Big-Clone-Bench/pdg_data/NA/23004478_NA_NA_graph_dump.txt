Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int onPut(Operation operation) [ CD ]
Line_5 $$ if (logger.isDebugEnabled()) -->Line_5 $$ if (logger.isDebugEnabled()) [ CD ]
Line_5 $$ if (logger.isDebugEnabled()) -->Line_6 $$ logger.debug("Connection accepted, total number of connections: " + MuleObexRequestHandler.connections)[ CD ]
Line_2 $$ public int onPut(Operation operation) -->Line_9 $$ int result = ResponseCodes.OBEX_HTTP_OK[ CD ]
Line_2 $$ public int onPut(Operation operation) -->Line_11 $$ headers = operation.getReceivedHeaders()[ FD ]
Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) -->Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) [ CD ]
Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) -->Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) [ CD ]
Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) -->Line_13 $$ Long fileSize = (Long) headers.getHeader(HeaderSet.LENGTH)[ CD ]
Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) -->Line_14 $$ if (fileSize == null) [ CD ]
Line_13 $$ Long fileSize = (Long) headers.getHeader(HeaderSet.LENGTH)-->Line_14 $$ if (fileSize == null) [ FD ]
Line_14 $$ if (fileSize == null) -->Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED[ CD ]
Line_9 $$ int result = ResponseCodes.OBEX_HTTP_OK-->Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED[ FD ]
Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED-->Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED[ FD ]
Line_12 $$ if (!this.maxFileSize.equals(ObexServer.UNLIMMITED_FILE_SIZE)) -->Line_17 $$ if (fileSize > this.maxFileSize) [ CD ]
Line_13 $$ Long fileSize = (Long) headers.getHeader(HeaderSet.LENGTH)-->Line_17 $$ if (fileSize > this.maxFileSize) [ FD ]
Line_17 $$ if (fileSize > this.maxFileSize) -->Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE[ CD ]
Line_9 $$ int result = ResponseCodes.OBEX_HTTP_OK-->Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE[ FD ]
Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED-->Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE[ FD ]
Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE-->Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE[ FD ]
Line_9 $$ int result = ResponseCodes.OBEX_HTTP_OK-->Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) [ FD ]
Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED-->Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) [ FD ]
Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE-->Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) [ FD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_22 $$ InputStream in = operation.openInputStream()[ CD ]
Line_22 $$ InputStream in = operation.openInputStream()-->Line_22 $$ InputStream in = operation.openInputStream()[ CD ]
Line_2 $$ public int onPut(Operation operation) -->Line_22 $$ InputStream in = operation.openInputStream()[ FD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_23 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_24 $$ IOUtils.copy(in, out)[ CD ]
Line_22 $$ InputStream in = operation.openInputStream()-->Line_24 $$ IOUtils.copy(in, out)[ FD ]
Line_23 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_24 $$ IOUtils.copy(in, out)[ FD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_25 $$ in.close()[ CD ]
Line_22 $$ InputStream in = operation.openInputStream()-->Line_25 $$ in.close()[ FD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_26 $$ out.close()[ CD ]
Line_23 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_26 $$ out.close()[ FD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_27 $$ data = out.toByteArray()[ CD ]
Line_23 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_27 $$ data = out.toByteArray()[ FD ]
Line_21 $$ if (result != ResponseCodes.OBEX_HTTP_OK) -->Line_28 $$ if (interrupted) [ CD ]
Line_28 $$ if (interrupted) -->Line_30 $$ result = ResponseCodes.OBEX_HTTP_GONE[ CD ]
Line_9 $$ int result = ResponseCodes.OBEX_HTTP_OK-->Line_30 $$ result = ResponseCodes.OBEX_HTTP_GONE[ FD ]
Line_15 $$ result = ResponseCodes.OBEX_HTTP_LENGTH_REQUIRED-->Line_30 $$ result = ResponseCodes.OBEX_HTTP_GONE[ FD ]
Line_18 $$ result = ResponseCodes.OBEX_HTTP_REQ_TOO_LARGE-->Line_30 $$ result = ResponseCodes.OBEX_HTTP_GONE[ FD ]
Line_30 $$ result = ResponseCodes.OBEX_HTTP_GONE-->Line_30 $$ result = ResponseCodes.OBEX_HTTP_GONE[ FD ]
Line_42 $$ if (logger.isDebugEnabled()) -->Line_42 $$ if (logger.isDebugEnabled()) [ CD ]
Line_42 $$ if (logger.isDebugEnabled()) -->Line_43 $$ logger.debug("Connection closed, total number of connections: " + MuleObexRequestHandler.connections)[ CD ]
