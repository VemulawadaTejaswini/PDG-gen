Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ boolean rotateLeft = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ boolean rotateRight = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ boolean exclude = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ boolean reset = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ float quality = 0f[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int thumbArea = 12000[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_10 $$ if (args[i].equals("-rotl"))[ CD ]
Line_10 $$ if (args[i].equals("-rotl"))-->Line_10 $$ if (args[i].equals("-rotl"))[ CD ]
Line_10 $$ if (args[i].equals("-rotl"))-->Line_10 $$ rotateLeft = true[ CD ]
Line_10 $$ rotateLeft = true-->Line_10 $$ rotateLeft = true[ FD ]
Line_3 $$ boolean rotateLeft = false-->Line_10 $$ rotateLeft = true[ FD ]
Line_10 $$ if (args[i].equals("-rotl"))-->Line_10 $$ if (args[i].equals("-rotr"))[ CD ]
Line_10 $$ if (args[i].equals("-rotr"))-->Line_10 $$ if (args[i].equals("-rotr"))[ CD ]
Line_10 $$ if (args[i].equals("-rotr"))-->Line_10 $$ rotateRight = true[ CD ]
Line_10 $$ rotateRight = true-->Line_10 $$ rotateRight = true[ FD ]
Line_4 $$ boolean rotateRight = false-->Line_10 $$ rotateRight = true[ FD ]
Line_10 $$ if (args[i].equals("-rotr"))-->Line_10 $$ if (args[i].equals("-exclude"))[ CD ]
Line_10 $$ if (args[i].equals("-exclude"))-->Line_10 $$ if (args[i].equals("-exclude"))[ CD ]
Line_10 $$ if (args[i].equals("-exclude"))-->Line_10 $$ exclude = true[ CD ]
Line_10 $$ exclude = true-->Line_10 $$ exclude = true[ FD ]
Line_5 $$ boolean exclude = false-->Line_10 $$ exclude = true[ FD ]
Line_10 $$ if (args[i].equals("-exclude"))-->Line_10 $$ if (args[i].equals("-reset"))[ CD ]
Line_10 $$ if (args[i].equals("-reset"))-->Line_10 $$ if (args[i].equals("-reset"))[ CD ]
Line_10 $$ if (args[i].equals("-reset"))-->Line_10 $$ reset = true[ CD ]
Line_10 $$ reset = true-->Line_10 $$ reset = true[ FD ]
Line_6 $$ boolean reset = false-->Line_10 $$ reset = true[ FD ]
Line_10 $$ if (args[i].equals("-reset"))-->Line_10 $$ if (args[i].equals("-quality"))[ CD ]
Line_10 $$ if (args[i].equals("-quality"))-->Line_10 $$ if (args[i].equals("-quality"))[ CD ]
Line_10 $$ if (args[i].equals("-quality"))-->Line_10 $$ quality = Float.parseFloat(args[++i])[ CD ]
Line_10 $$ quality = Float.parseFloat(args[++i])-->Line_10 $$ quality = Float.parseFloat(args[++i])[ FD ]
Line_7 $$ float quality = 0f-->Line_10 $$ quality = Float.parseFloat(args[++i])[ FD ]
Line_10 $$ quality = Float.parseFloat(args[++i])-->Line_10 $$ quality = Float.parseFloat(args[++i])[ CD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_10 $$ quality = Float.parseFloat(args[++i])[ FD ]
Line_10 $$ if (args[i].equals("-quality"))-->Line_10 $$ if (args[i].equals("-area"))[ CD ]
Line_10 $$ if (args[i].equals("-area"))-->Line_10 $$ if (args[i].equals("-area"))[ CD ]
Line_10 $$ if (args[i].equals("-area"))-->Line_10 $$ thumbArea = Integer.parseInt(args[++i])[ CD ]
Line_10 $$ thumbArea = Integer.parseInt(args[++i])-->Line_10 $$ thumbArea = Integer.parseInt(args[++i])[ FD ]
Line_8 $$ int thumbArea = 12000-->Line_10 $$ thumbArea = Integer.parseInt(args[++i])[ FD ]
Line_10 $$ thumbArea = Integer.parseInt(args[++i])-->Line_10 $$ thumbArea = Integer.parseInt(args[++i])[ CD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_10 $$ thumbArea = Integer.parseInt(args[++i])[ FD ]
Line_10 $$ if (args[i].equals("-area"))-->Line_11 $$ File f = new File(args[i])[ CD ]
Line_14 $$ if (exclude) -->Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")[ CD ]
Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")-->Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")[ FD ]
Line_14 $$ if (exclude) -->Line_16 $$ InputStream is = url.openStream()[ CD ]
Line_16 $$ InputStream is = url.openStream()-->Line_16 $$ InputStream is = url.openStream()[ CD ]
Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")-->Line_16 $$ InputStream is = url.openStream()[ FD ]
Line_14 $$ if (exclude) -->Line_17 $$ File dest = t.getExcludeFile()[ CD ]
Line_17 $$ File dest = t.getExcludeFile()-->Line_17 $$ File dest = t.getExcludeFile()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_17 $$ File dest = t.getExcludeFile()[ FD ]
Line_14 $$ if (exclude) -->Line_18 $$ OutputStream os = new FileOutputStream(dest)[ CD ]
Line_14 $$ if (exclude) -->Line_19 $$ byte[] buf = new byte[1024][ CD ]
Line_14 $$ if (exclude) -->Line_20 $$ int len[ CD ]
Line_14 $$ if (exclude) -->Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ CD ]
Line_14 $$ if (exclude) -->Line_14 $$ if (exclude) [ CD ]
Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_20 $$ int len-->Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ CD ]
Line_16 $$ InputStream is = url.openStream()-->Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_19 $$ byte[] buf = new byte[1024]-->Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_21 $$ os.write(buf, 0, len)[ CD ]
Line_18 $$ OutputStream os = new FileOutputStream(dest)-->Line_21 $$ os.write(buf, 0, len)[ FD ]
Line_19 $$ byte[] buf = new byte[1024]-->Line_21 $$ os.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_21 $$ os.write(buf, 0, len)[ FD ]
Line_20 $$ int len-->Line_21 $$ os.write(buf, 0, len)[ FD ]
Line_14 $$ if (exclude) -->Line_22 $$ os.close()[ CD ]
Line_18 $$ OutputStream os = new FileOutputStream(dest)-->Line_22 $$ os.close()[ FD ]
Line_14 $$ if (exclude) -->Line_23 $$ is.close()[ CD ]
Line_16 $$ InputStream is = url.openStream()-->Line_23 $$ is.close()[ FD ]
Line_14 $$ if (exclude) -->Line_24 $$ t.getOutFile().delete()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_24 $$ t.getOutFile().delete()[ FD ]
Line_14 $$ if (exclude) -->Line_25 $$ t.getThumbFile().delete()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_25 $$ t.getThumbFile().delete()[ FD ]
Line_14 $$ if (exclude) -->Line_26 $$ System.exit(0)[ CD ]
Line_28 $$ if (reset) -->Line_29 $$ t.getOutFile().delete()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_29 $$ t.getOutFile().delete()[ FD ]
Line_28 $$ if (reset) -->Line_30 $$ t.getThumbFile().delete()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_30 $$ t.getThumbFile().delete()[ FD ]
Line_28 $$ if (reset) -->Line_31 $$ t.getExcludeFile().delete()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_31 $$ t.getExcludeFile().delete()[ FD ]
Line_28 $$ if (reset) -->Line_32 $$ System.exit(0)[ CD ]
Line_10 $$ quality = Float.parseFloat(args[++i])-->Line_34 $$ if (quality > 0)[ FD ]
Line_7 $$ float quality = 0f-->Line_34 $$ if (quality > 0)[ FD ]
Line_34 $$ if (quality > 0)-->Line_34 $$ t.setQuality(quality)[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_34 $$ t.setQuality(quality)[ FD ]
Line_10 $$ quality = Float.parseFloat(args[++i])-->Line_34 $$ t.setQuality(quality)[ FD ]
Line_7 $$ float quality = 0f-->Line_34 $$ t.setQuality(quality)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ if (t.getType() == Tools.THUMB || t.getType() == Tools.EXCLUDE)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ if (t.getType() == Tools.THUMB || t.getType() == Tools.EXCLUDE)[ FD ]
Line_35 $$ if (t.getType() == Tools.THUMB || t.getType() == Tools.EXCLUDE)-->Line_35 $$ t.load(t.getBaseFile())[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getBaseFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getBaseFile())[ FD ]
Line_35 $$ if (t.getType() == Tools.THUMB || t.getType() == Tools.EXCLUDE)-->Line_35 $$ t.load(t.getSourceFile())[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getSourceFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getSourceFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_36 $$ File out = t.getOutFile()[ FD ]
Line_10 $$ rotateRight = true-->Line_37 $$ if (rotateLeft)[ FD ]
Line_4 $$ boolean rotateRight = false-->Line_37 $$ if (rotateLeft)[ FD ]
Line_37 $$ if (rotateLeft)-->Line_37 $$ t.rotateLeft()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_37 $$ t.rotateLeft()[ FD ]
Line_37 $$ if (rotateLeft)-->Line_37 $$ if (rotateRight)[ CD ]
Line_37 $$ if (rotateRight)-->Line_37 $$ t.rotateRight()[ CD ]
Line_13 $$ Tools t = new Tools(f)-->Line_37 $$ t.rotateRight()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_38 $$ t.save(out)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_39 $$ t.getExcludeFile().delete()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_40 $$ t.getThumbFile().delete()[ FD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_9 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_10 $$ quality = Float.parseFloat(args[++i])[ FD ]
Line_9 $$ for (int i = 0; i < args.length; i++) -->Line_10 $$ thumbArea = Integer.parseInt(args[++i])[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")[ FD ]
Line_15 $$ URL url = t.getClass().getResource("exclude.jpg")-->Line_16 $$ InputStream is = url.openStream()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_17 $$ File dest = t.getExcludeFile()[ FD ]
Line_18 $$ OutputStream os = new FileOutputStream(dest)-->Line_22 $$ os.close()[ FD ]
Line_16 $$ InputStream is = url.openStream()-->Line_23 $$ is.close()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_24 $$ t.getOutFile().delete()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_25 $$ t.getThumbFile().delete()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_29 $$ t.getOutFile().delete()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_30 $$ t.getThumbFile().delete()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_31 $$ t.getExcludeFile().delete()[ FD ]
Line_10 $$ quality = Float.parseFloat(args[++i])-->Line_34 $$ if (quality > 0)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_34 $$ t.setQuality(quality)[ FD ]
Line_10 $$ quality = Float.parseFloat(args[++i])-->Line_34 $$ t.setQuality(quality)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ if (t.getType() == Tools.THUMB || t.getType() == Tools.EXCLUDE)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ if (t.getType() == Tools.THUMB || t.getType() == Tools.EXCLUDE)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getBaseFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getBaseFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getSourceFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_35 $$ t.load(t.getSourceFile())[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_36 $$ File out = t.getOutFile()[ FD ]
Line_10 $$ rotateRight = true-->Line_37 $$ if (rotateLeft)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_37 $$ t.rotateLeft()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_37 $$ t.rotateRight()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_38 $$ t.save(out)[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_39 $$ t.getExcludeFile().delete()[ FD ]
Line_13 $$ Tools t = new Tools(f)-->Line_40 $$ t.getThumbFile().delete()[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) os.write(buf, 0, len)-->Line_21 $$ os.write(buf, 0, len)[ FD ]
