Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception [ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ log.debug("MapAction saveImageMap()")[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ String imageURL = RequestUtil.getRequest(request, "imgUrl")[ CD ]
Line_4 $$ String imageURL = RequestUtil.getRequest(request, "imgUrl")-->Line_4 $$ String imageURL = RequestUtil.getRequest(request, "imgUrl")[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ String imageURL = RequestUtil.getRequest(request, "imgUrl")[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_5 $$ DataInputStream di = null[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_6 $$ FileOutputStream fo = null[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_7 $$ byte[] b = new byte[1][ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_8 $$ URL url = new URL(imageURL)[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_9 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_9 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(imageURL)-->Line_9 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_10 $$ urlConnection.connect()[ CD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_10 $$ urlConnection.connect()[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_11 $$ response.setContentType("application/octet-stream")[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_11 $$ response.setContentType("application/octet-stream")[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_12 $$ response.setHeader("Content-disposition", "attachment;filename=" + "map.png")[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_12 $$ response.setHeader("Content-disposition", "attachment;filename=" + "map.png")[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_13 $$ OutputStream outstream = response.getOutputStream()[ CD ]
Line_13 $$ OutputStream outstream = response.getOutputStream()-->Line_13 $$ OutputStream outstream = response.getOutputStream()[ CD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_13 $$ OutputStream outstream = response.getOutputStream()[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_14 $$ byte abyte0[] = new byte[4096][ CD ]
Line_9 $$ URLConnection urlConnection = url.openConnection()-->Line_16 $$ BufferedInputStream instream = new BufferedInputStream(urlConnection.getInputStream())[ FD ]
Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)-->Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)[ FD ]
Line_17 $$ int i-->Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)[ FD ]
Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)-->Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)[ CD ]
Line_16 $$ BufferedInputStream instream = new BufferedInputStream(urlConnection.getInputStream())-->Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)[ FD ]
Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)-->Line_18 $$ outstream.write(abyte0, 0, i)[ CD ]
Line_13 $$ OutputStream outstream = response.getOutputStream()-->Line_18 $$ outstream.write(abyte0, 0, i)[ FD ]
Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)-->Line_18 $$ outstream.write(abyte0, 0, i)[ FD ]
Line_17 $$ int i-->Line_18 $$ outstream.write(abyte0, 0, i)[ FD ]
Line_16 $$ BufferedInputStream instream = new BufferedInputStream(urlConnection.getInputStream())-->Line_19 $$ instream.close()[ FD ]
Line_2 $$ public ActionForward saveImageMap(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_23 $$ return null[ CD ]
Line_18 $$ while ((i = instream.read(abyte0, 0, 4096)) != -1) outstream.write(abyte0, 0, i)-->Line_18 $$ outstream.write(abyte0, 0, i)[ FD ]
