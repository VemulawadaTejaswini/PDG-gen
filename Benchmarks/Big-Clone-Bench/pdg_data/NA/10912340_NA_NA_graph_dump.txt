Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean chequearMarca(int a, int m, int d) [ CD ]
Line_2 $$ public boolean chequearMarca(int a, int m, int d) -->Line_3 $$ boolean existe = false[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_12 $$ filenamezip = "recordatorio" + i + ".zip"[ CD ]
Line_12 $$ filenamezip = "recordatorio" + i + ".zip"-->Line_12 $$ filenamezip = "recordatorio" + i + ".zip"[ FD ]
Line_7 $$ String filenamezip = ""-->Line_12 $$ filenamezip = "recordatorio" + i + ".zip"[ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_13 $$ filenametxt = "recordatorio" + i + ".txt"[ CD ]
Line_13 $$ filenametxt = "recordatorio" + i + ".txt"-->Line_13 $$ filenametxt = "recordatorio" + i + ".txt"[ FD ]
Line_6 $$ String filenametxt = ""-->Line_13 $$ filenametxt = "recordatorio" + i + ".txt"[ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_14 $$ BufferedOutputStream dest = null[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_15 $$ BufferedInputStream is = null[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_16 $$ ZipEntry entry[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_17 $$ ZipFile zipfile = new ZipFile(filenamezip)[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_18 $$ Enumeration e = zipfile.entries()[ CD ]
Line_18 $$ Enumeration e = zipfile.entries()-->Line_18 $$ Enumeration e = zipfile.entries()[ CD ]
Line_17 $$ ZipFile zipfile = new ZipFile(filenamezip)-->Line_18 $$ Enumeration e = zipfile.entries()[ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_19 $$ while (e.hasMoreElements()) [ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ CD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_19 $$ while (e.hasMoreElements()) [ CD ]
Line_18 $$ Enumeration e = zipfile.entries()-->Line_19 $$ while (e.hasMoreElements()) [ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_20 $$ entry = (ZipEntry) e.nextElement()[ CD ]
Line_20 $$ entry = (ZipEntry) e.nextElement()-->Line_20 $$ entry = (ZipEntry) e.nextElement()[ FD ]
Line_16 $$ ZipEntry entry-->Line_20 $$ entry = (ZipEntry) e.nextElement()[ FD ]
Line_18 $$ Enumeration e = zipfile.entries()-->Line_20 $$ entry = (ZipEntry) e.nextElement()[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ CD ]
Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_15 $$ BufferedInputStream is = null-->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_17 $$ ZipFile zipfile = new ZipFile(filenamezip)-->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_20 $$ entry = (ZipEntry) e.nextElement()-->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_16 $$ ZipEntry entry-->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_22 $$ int count[ CD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_23 $$ byte data[] = new byte[buffer][ CD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_24 $$ FileOutputStream fos = new FileOutputStream(entry.getName())[ CD ]
Line_20 $$ entry = (ZipEntry) e.nextElement()-->Line_24 $$ FileOutputStream fos = new FileOutputStream(entry.getName())[ FD ]
Line_16 $$ ZipEntry entry-->Line_24 $$ FileOutputStream fos = new FileOutputStream(entry.getName())[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_25 $$ dest = new BufferedOutputStream(fos, buffer)[ CD ]
Line_25 $$ dest = new BufferedOutputStream(fos, buffer)-->Line_25 $$ dest = new BufferedOutputStream(fos, buffer)[ FD ]
Line_14 $$ BufferedOutputStream dest = null-->Line_25 $$ dest = new BufferedOutputStream(fos, buffer)[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)[ CD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_19 $$ while (e.hasMoreElements()) [ CD ]
Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)-->Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)[ FD ]
Line_22 $$ int count-->Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)[ FD ]
Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)-->Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)[ CD ]
Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)[ FD ]
Line_15 $$ BufferedInputStream is = null-->Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)[ FD ]
Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)-->Line_26 $$ dest.write(data, 0, count)[ CD ]
Line_25 $$ dest = new BufferedOutputStream(fos, buffer)-->Line_26 $$ dest.write(data, 0, count)[ FD ]
Line_14 $$ BufferedOutputStream dest = null-->Line_26 $$ dest.write(data, 0, count)[ FD ]
Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)-->Line_26 $$ dest.write(data, 0, count)[ FD ]
Line_22 $$ int count-->Line_26 $$ dest.write(data, 0, count)[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_27 $$ dest.flush()[ CD ]
Line_25 $$ dest = new BufferedOutputStream(fos, buffer)-->Line_27 $$ dest.flush()[ FD ]
Line_14 $$ BufferedOutputStream dest = null-->Line_27 $$ dest.flush()[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_28 $$ dest.close()[ CD ]
Line_25 $$ dest = new BufferedOutputStream(fos, buffer)-->Line_28 $$ dest.close()[ FD ]
Line_14 $$ BufferedOutputStream dest = null-->Line_28 $$ dest.close()[ FD ]
Line_19 $$ while (e.hasMoreElements()) -->Line_29 $$ is.close()[ CD ]
Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_29 $$ is.close()[ FD ]
Line_15 $$ BufferedInputStream is = null-->Line_29 $$ is.close()[ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_32 $$ dia = Integer.parseInt(input.readLine())[ CD ]
Line_32 $$ dia = Integer.parseInt(input.readLine())-->Line_32 $$ dia = Integer.parseInt(input.readLine())[ FD ]
Line_8 $$ int dia = 0-->Line_32 $$ dia = Integer.parseInt(input.readLine())[ FD ]
Line_32 $$ dia = Integer.parseInt(input.readLine())-->Line_32 $$ dia = Integer.parseInt(input.readLine())[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_33 $$ mes = Integer.parseInt(input.readLine())[ CD ]
Line_33 $$ mes = Integer.parseInt(input.readLine())-->Line_33 $$ mes = Integer.parseInt(input.readLine())[ FD ]
Line_9 $$ int mes = 0-->Line_33 $$ mes = Integer.parseInt(input.readLine())[ FD ]
Line_33 $$ mes = Integer.parseInt(input.readLine())-->Line_33 $$ mes = Integer.parseInt(input.readLine())[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_34 $$ ano = Integer.parseInt(input.readLine())[ CD ]
Line_34 $$ ano = Integer.parseInt(input.readLine())-->Line_34 $$ ano = Integer.parseInt(input.readLine())[ FD ]
Line_10 $$ int ano = 0-->Line_34 $$ ano = Integer.parseInt(input.readLine())[ FD ]
Line_34 $$ ano = Integer.parseInt(input.readLine())-->Line_34 $$ ano = Integer.parseInt(input.readLine())[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_35 $$ if (ano == a && mes == m && dia == d)[ CD ]
Line_35 $$ if (ano == a && mes == m && dia == d)-->Line_35 $$ existe = true[ CD ]
Line_35 $$ existe = true-->Line_35 $$ existe = true[ FD ]
Line_3 $$ boolean existe = false-->Line_35 $$ existe = true[ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_36 $$ input.close()[ CD ]
Line_18 $$ Enumeration e = zipfile.entries()-->Line_39 $$ JOptionPane.showMessageDialog(null, "Error en: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_2 $$ public boolean chequearMarca(int a, int m, int d) -->Line_41 $$ return (existe)[ CD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ FD ]
Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) -->Line_11 $$ for (int i = 1; i < cantidadArchivos; i++) [ FD ]
Line_17 $$ ZipFile zipfile = new ZipFile(filenamezip)-->Line_18 $$ Enumeration e = zipfile.entries()[ FD ]
Line_20 $$ entry = (ZipEntry) e.nextElement()-->Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_20 $$ entry = (ZipEntry) e.nextElement()-->Line_24 $$ FileOutputStream fos = new FileOutputStream(entry.getName())[ FD ]
Line_25 $$ dest = new BufferedOutputStream(fos, buffer)-->Line_27 $$ dest.flush()[ FD ]
Line_25 $$ dest = new BufferedOutputStream(fos, buffer)-->Line_28 $$ dest.close()[ FD ]
Line_21 $$ is = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_29 $$ is.close()[ FD ]
Line_26 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count)-->Line_26 $$ dest.write(data, 0, count)[ FD ]
