Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_3 $$ if (log.isTraceEnabled()) [ CD ]
Line_3 $$ if (log.isTraceEnabled()) -->Line_3 $$ if (log.isTraceEnabled()) [ CD ]
Line_3 $$ if (log.isTraceEnabled()) -->Line_4 $$ log.trace("doGet(requestURI=" + request.getRequestURI() + ")")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_4 $$ log.trace("doGet(requestURI=" + request.getRequestURI() + ")")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_6 $$ ServletConfig sc = getServletConfig()[ CD ]
Line_6 $$ ServletConfig sc = getServletConfig()-->Line_6 $$ ServletConfig sc = getServletConfig()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_7 $$ String uriPrefix = request.getContextPath() + "/" + request.getServletPath()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_7 $$ String uriPrefix = request.getContextPath() + "/" + request.getServletPath()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_7 $$ String uriPrefix = request.getContextPath() + "/" + request.getServletPath()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())[ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())[ FD ]
Line_7 $$ String uriPrefix = request.getContextPath() + "/" + request.getServletPath()-->Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_9 $$ if (log.isTraceEnabled()) [ CD ]
Line_9 $$ if (log.isTraceEnabled()) -->Line_9 $$ if (log.isTraceEnabled()) [ CD ]
Line_9 $$ if (log.isTraceEnabled()) -->Line_10 $$ log.trace("Request for resource '" + resUri + "'")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_12 $$ boolean allowAccess = true[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_13 $$ String prefixesSpec = sc.getInitParameter(PARAM_ALLOWED_PREFIXES)[ CD ]
Line_13 $$ String prefixesSpec = sc.getInitParameter(PARAM_ALLOWED_PREFIXES)-->Line_13 $$ String prefixesSpec = sc.getInitParameter(PARAM_ALLOWED_PREFIXES)[ CD ]
Line_6 $$ ServletConfig sc = getServletConfig()-->Line_13 $$ String prefixesSpec = sc.getInitParameter(PARAM_ALLOWED_PREFIXES)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_14 $$ if (null != prefixesSpec && prefixesSpec.length() > 0) [ CD ]
Line_13 $$ String prefixesSpec = sc.getInitParameter(PARAM_ALLOWED_PREFIXES)-->Line_14 $$ if (null != prefixesSpec && prefixesSpec.length() > 0) [ FD ]
Line_14 $$ if (null != prefixesSpec && prefixesSpec.length() > 0) -->Line_15 $$ String[] prefixes = prefixesSpec.split(";")[ CD ]
Line_15 $$ String[] prefixes = prefixesSpec.split(";")-->Line_15 $$ String[] prefixes = prefixesSpec.split(";")[ CD ]
Line_13 $$ String prefixesSpec = sc.getInitParameter(PARAM_ALLOWED_PREFIXES)-->Line_15 $$ String[] prefixes = prefixesSpec.split(";")[ FD ]
Line_14 $$ if (null != prefixesSpec && prefixesSpec.length() > 0) -->Line_16 $$ allowAccess = false[ CD ]
Line_12 $$ boolean allowAccess = true-->Line_16 $$ allowAccess = false[ FD ]
Line_16 $$ allowAccess = false-->Line_16 $$ allowAccess = false[ FD ]
Line_14 $$ if (null != prefixesSpec && prefixesSpec.length() > 0) -->Line_17 $$ if (log.isTraceEnabled()) [ CD ]
Line_17 $$ if (log.isTraceEnabled()) -->Line_17 $$ if (log.isTraceEnabled()) [ CD ]
Line_17 $$ if (log.isTraceEnabled()) -->Line_18 $$ log.trace("allowedPrefixes specified; checking access")[ CD ]
Line_21 $$ if (log.isTraceEnabled()) -->Line_21 $$ if (log.isTraceEnabled()) [ CD ]
Line_21 $$ if (log.isTraceEnabled()) -->Line_22 $$ log.trace("Checking resource URI '" + resUri + "' against allowed prefix '" + prefix + "'")[ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_24 $$ if (resUri.startsWith(prefix)) [ FD ]
Line_20 $$ for (String prefix : prefixes) -->Line_24 $$ if (resUri.startsWith(prefix)) [ FD ]
Line_24 $$ if (resUri.startsWith(prefix)) -->Line_24 $$ if (resUri.startsWith(prefix)) [ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_24 $$ if (resUri.startsWith(prefix)) [ FD ]
Line_20 $$ for (String prefix : prefixes) -->Line_24 $$ if (resUri.startsWith(prefix)) [ FD ]
Line_24 $$ if (resUri.startsWith(prefix)) -->Line_25 $$ if (log.isTraceEnabled()) [ CD ]
Line_25 $$ if (log.isTraceEnabled()) -->Line_25 $$ if (log.isTraceEnabled()) [ CD ]
Line_25 $$ if (log.isTraceEnabled()) -->Line_26 $$ log.trace("Found matching prefix for resource URI '" + resUri + "': '" + prefix + "'")[ CD ]
Line_24 $$ if (resUri.startsWith(prefix)) -->Line_28 $$ allowAccess = true[ CD ]
Line_12 $$ boolean allowAccess = true-->Line_28 $$ allowAccess = true[ FD ]
Line_16 $$ allowAccess = false-->Line_28 $$ allowAccess = true[ FD ]
Line_28 $$ allowAccess = true-->Line_28 $$ allowAccess = true[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_33 $$ if (!allowAccess) [ CD ]
Line_12 $$ boolean allowAccess = true-->Line_33 $$ if (!allowAccess) [ FD ]
Line_16 $$ allowAccess = false-->Line_33 $$ if (!allowAccess) [ FD ]
Line_28 $$ allowAccess = true-->Line_33 $$ if (!allowAccess) [ FD ]
Line_33 $$ if (!allowAccess) -->Line_33 $$ if (!allowAccess) [ CD ]
Line_12 $$ boolean allowAccess = true-->Line_33 $$ if (!allowAccess) [ FD ]
Line_16 $$ allowAccess = false-->Line_33 $$ if (!allowAccess) [ FD ]
Line_28 $$ allowAccess = true-->Line_33 $$ if (!allowAccess) [ FD ]
Line_33 $$ if (!allowAccess) -->Line_34 $$ if (log.isWarnEnabled()) [ CD ]
Line_34 $$ if (log.isWarnEnabled()) -->Line_34 $$ if (log.isWarnEnabled()) [ CD ]
Line_34 $$ if (log.isWarnEnabled()) -->Line_35 $$ log.warn("Requested for resource that does not match with" + " allowed prefixes: " + resUri)[ CD ]
Line_33 $$ if (!allowAccess) -->Line_37 $$ response.sendError(HttpServletResponse.SC_FORBIDDEN)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_37 $$ response.sendError(HttpServletResponse.SC_FORBIDDEN)[ FD ]
Line_33 $$ if (!allowAccess) -->Line_38 $$ return[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)[ CD ]
Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)-->Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)[ CD ]
Line_6 $$ ServletConfig sc = getServletConfig()-->Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_41 $$ if (null != resPrefix && resPrefix.length() > 0) [ CD ]
Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)-->Line_41 $$ if (null != resPrefix && resPrefix.length() > 0) [ FD ]
Line_41 $$ if (null != resPrefix && resPrefix.length() > 0) -->Line_42 $$ if (log.isTraceEnabled()) [ CD ]
Line_42 $$ if (log.isTraceEnabled()) -->Line_42 $$ if (log.isTraceEnabled()) [ CD ]
Line_42 $$ if (log.isTraceEnabled()) -->Line_43 $$ log.trace("resourcePrefix specified: " + resPrefix)[ CD ]
Line_41 $$ if (null != resPrefix && resPrefix.length() > 0) -->Line_45 $$ if (resPrefix.endsWith("/")) [ CD ]
Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)-->Line_45 $$ if (resPrefix.endsWith("/")) [ FD ]
Line_45 $$ if (resPrefix.endsWith("/")) -->Line_45 $$ if (resPrefix.endsWith("/")) [ CD ]
Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)-->Line_45 $$ if (resPrefix.endsWith("/")) [ FD ]
Line_45 $$ if (resPrefix.endsWith("/")) -->Line_46 $$ resUri = resPrefix + resUri[ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_46 $$ resUri = resPrefix + resUri[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_46 $$ resUri = resPrefix + resUri[ FD ]
Line_40 $$ String resPrefix = sc.getInitParameter(PARAM_RESOURCE_PREFIX)-->Line_46 $$ resUri = resPrefix + resUri[ FD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_46 $$ resUri = resPrefix + resUri[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_46 $$ resUri = resPrefix + resUri[ FD ]
Line_45 $$ if (resPrefix.endsWith("/")) -->Line_48 $$ resUri = resPrefix + "/" + resUri[ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_48 $$ resUri = resPrefix + "/" + resUri[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_48 $$ resUri = resPrefix + "/" + resUri[ FD ]
Line_48 $$ resUri = resPrefix + "/" + resUri-->Line_48 $$ resUri = resPrefix + "/" + resUri[ FD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_48 $$ resUri = resPrefix + "/" + resUri[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_48 $$ resUri = resPrefix + "/" + resUri[ FD ]
Line_48 $$ resUri = resPrefix + "/" + resUri-->Line_48 $$ resUri = resPrefix + "/" + resUri[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_48 $$ resUri = resPrefix + "/" + resUri-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ CD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_48 $$ resUri = resPrefix + "/" + resUri-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")-->Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_52 $$ if (log.isTraceEnabled()) [ CD ]
Line_52 $$ if (log.isTraceEnabled()) -->Line_52 $$ if (log.isTraceEnabled()) [ CD ]
Line_52 $$ if (log.isTraceEnabled()) -->Line_53 $$ log.trace("Qualified (prefixed) resource URI: " + resUri)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)[ CD ]
Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)-->Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)[ CD ]
Line_6 $$ ServletConfig sc = getServletConfig()-->Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_56 $$ if (null == baseClassName || 0 == baseClassName.length()) [ CD ]
Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)-->Line_56 $$ if (null == baseClassName || 0 == baseClassName.length()) [ FD ]
Line_56 $$ if (null == baseClassName || 0 == baseClassName.length()) -->Line_57 $$ if (log.isTraceEnabled()) [ CD ]
Line_57 $$ if (log.isTraceEnabled()) -->Line_57 $$ if (log.isTraceEnabled()) [ CD ]
Line_57 $$ if (log.isTraceEnabled()) -->Line_58 $$ log.trace("No baseClass initialization parameter specified; using default: " + ResourceLoaderServlet.class.getName())[ CD ]
Line_56 $$ if (null == baseClassName || 0 == baseClassName.length()) -->Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()[ CD ]
Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)-->Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()[ FD ]
Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()-->Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()[ FD ]
Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()-->Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()[ CD ]
Line_56 $$ if (null == baseClassName || 0 == baseClassName.length()) -->Line_62 $$ if (log.isTraceEnabled()) [ CD ]
Line_62 $$ if (log.isTraceEnabled()) -->Line_62 $$ if (log.isTraceEnabled()) [ CD ]
Line_62 $$ if (log.isTraceEnabled()) -->Line_63 $$ log.trace("Using baseClass: " + baseClassName)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_66 $$ Class baseClass[ CD ]
Line_66 $$ Class baseClass-->Line_68 $$ baseClass = Class.forName(baseClassName)[ FD ]
Line_68 $$ baseClass = Class.forName(baseClassName)-->Line_68 $$ baseClass = Class.forName(baseClassName)[ FD ]
Line_68 $$ baseClass = Class.forName(baseClassName)-->Line_68 $$ baseClass = Class.forName(baseClassName)[ CD ]
Line_55 $$ String baseClassName = sc.getInitParameter(PARAM_BASE_CLASS)-->Line_68 $$ baseClass = Class.forName(baseClassName)[ FD ]
Line_60 $$ baseClassName = ResourceLoaderServlet.class.getName()-->Line_68 $$ baseClass = Class.forName(baseClassName)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ CD ]
Line_72 $$ URL resUrl = baseClass.getResource(resUri)-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ CD ]
Line_66 $$ Class baseClass-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ FD ]
Line_68 $$ baseClass = Class.forName(baseClassName)-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ FD ]
Line_8 $$ String resUri = request.getRequestURI().substring(uriPrefix.length())-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ FD ]
Line_46 $$ resUri = resPrefix + resUri-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ FD ]
Line_48 $$ resUri = resPrefix + "/" + resUri-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ FD ]
Line_51 $$ resUri = resUri.replaceAll("\\/\\/+", "/")-->Line_72 $$ URL resUrl = baseClass.getResource(resUri)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_73 $$ if (null != resUrl) [ CD ]
Line_72 $$ URL resUrl = baseClass.getResource(resUri)-->Line_73 $$ if (null != resUrl) [ FD ]
Line_73 $$ if (null != resUrl) -->Line_74 $$ if (log.isTraceEnabled()) [ CD ]
Line_74 $$ if (log.isTraceEnabled()) -->Line_74 $$ if (log.isTraceEnabled()) [ CD ]
Line_74 $$ if (log.isTraceEnabled()) -->Line_75 $$ log.trace("Sending resource: " + resUrl)[ CD ]
Line_73 $$ if (null != resUrl) -->Line_77 $$ URLConnection urlc = resUrl.openConnection()[ CD ]
Line_77 $$ URLConnection urlc = resUrl.openConnection()-->Line_77 $$ URLConnection urlc = resUrl.openConnection()[ CD ]
Line_72 $$ URL resUrl = baseClass.getResource(resUri)-->Line_77 $$ URLConnection urlc = resUrl.openConnection()[ FD ]
Line_73 $$ if (null != resUrl) -->Line_78 $$ response.setContentType(urlc.getContentType())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_78 $$ response.setContentType(urlc.getContentType())[ FD ]
Line_77 $$ URLConnection urlc = resUrl.openConnection()-->Line_78 $$ response.setContentType(urlc.getContentType())[ FD ]
Line_73 $$ if (null != resUrl) -->Line_79 $$ response.setContentLength(urlc.getContentLength())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_79 $$ response.setContentLength(urlc.getContentLength())[ FD ]
Line_77 $$ URLConnection urlc = resUrl.openConnection()-->Line_79 $$ response.setContentLength(urlc.getContentLength())[ FD ]
Line_73 $$ if (null != resUrl) -->Line_80 $$ response.setStatus(HttpServletResponse.SC_OK)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_80 $$ response.setStatus(HttpServletResponse.SC_OK)[ FD ]
Line_73 $$ if (null != resUrl) -->Line_81 $$ final byte[] buf = new byte[255][ CD ]
Line_73 $$ if (null != resUrl) -->Line_82 $$ int r = 0[ CD ]
Line_73 $$ if (null != resUrl) -->Line_83 $$ InputStream in = new BufferedInputStream(urlc.getInputStream())[ CD ]
Line_77 $$ URLConnection urlc = resUrl.openConnection()-->Line_83 $$ InputStream in = new BufferedInputStream(urlc.getInputStream())[ FD ]
Line_73 $$ if (null != resUrl) -->Line_84 $$ OutputStream out = new BufferedOutputStream(response.getOutputStream())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_84 $$ OutputStream out = new BufferedOutputStream(response.getOutputStream())[ FD ]
Line_73 $$ if (null != resUrl) -->Line_85 $$ do [ CD ]
Line_73 $$ if (null != resUrl) -->Line_73 $$ if (null != resUrl) [ CD ]
Line_82 $$ int r = 0-->Line_85 $$ do [ FD ]
Line_85 $$ do -->Line_86 $$ r = in.read(buf, 0, 255)[ CD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_86 $$ r = in.read(buf, 0, 255)[ FD ]
Line_82 $$ int r = 0-->Line_86 $$ r = in.read(buf, 0, 255)[ FD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_86 $$ r = in.read(buf, 0, 255)[ CD ]
Line_83 $$ InputStream in = new BufferedInputStream(urlc.getInputStream())-->Line_86 $$ r = in.read(buf, 0, 255)[ FD ]
Line_81 $$ final byte[] buf = new byte[255]-->Line_86 $$ r = in.read(buf, 0, 255)[ FD ]
Line_85 $$ do -->Line_87 $$ if (r > 0) [ CD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_87 $$ if (r > 0) [ FD ]
Line_82 $$ int r = 0-->Line_87 $$ if (r > 0) [ FD ]
Line_87 $$ if (r > 0) -->Line_88 $$ out.write(buf, 0, r)[ CD ]
Line_84 $$ OutputStream out = new BufferedOutputStream(response.getOutputStream())-->Line_88 $$ out.write(buf, 0, r)[ FD ]
Line_81 $$ final byte[] buf = new byte[255]-->Line_88 $$ out.write(buf, 0, r)[ FD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_88 $$ out.write(buf, 0, r)[ FD ]
Line_82 $$ int r = 0-->Line_88 $$ out.write(buf, 0, r)[ FD ]
Line_73 $$ if (null != resUrl) -->Line_91 $$ in.close()[ CD ]
Line_83 $$ InputStream in = new BufferedInputStream(urlc.getInputStream())-->Line_91 $$ in.close()[ FD ]
Line_73 $$ if (null != resUrl) -->Line_92 $$ out.flush()[ CD ]
Line_84 $$ OutputStream out = new BufferedOutputStream(response.getOutputStream())-->Line_92 $$ out.flush()[ FD ]
Line_73 $$ if (null != resUrl) -->Line_93 $$ out.close()[ CD ]
Line_84 $$ OutputStream out = new BufferedOutputStream(response.getOutputStream())-->Line_93 $$ out.close()[ FD ]
Line_73 $$ if (null != resUrl) -->Line_95 $$ response.sendError(HttpServletResponse.SC_NOT_FOUND, "Resource not found")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException -->Line_95 $$ response.sendError(HttpServletResponse.SC_NOT_FOUND, "Resource not found")[ FD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_85 $$ do [ FD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_85 $$ do [ FD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_87 $$ if (r > 0) [ FD ]
Line_86 $$ r = in.read(buf, 0, 255)-->Line_88 $$ out.write(buf, 0, r)[ FD ]
