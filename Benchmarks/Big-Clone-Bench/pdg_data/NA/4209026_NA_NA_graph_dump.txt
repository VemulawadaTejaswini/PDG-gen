Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Collection<Module> loadModules() [ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_3 $$ URL url = getClass().getResource("/modules.xml")[ CD ]
Line_3 $$ URL url = getClass().getResource("/modules.xml")-->Line_3 $$ URL url = getClass().getResource("/modules.xml")[ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_4 $$ if (url == null) [ CD ]
Line_3 $$ URL url = getClass().getResource("/modules.xml")-->Line_4 $$ if (url == null) [ FD ]
Line_4 $$ if (url == null) -->Line_5 $$ java.util.logging.Logger.getLogger(ModuleLoader.class.getName()).log(java.util.logging.Level.SEVERE, "Cannot find modules.xml file in classpath")[ CD ]
Line_4 $$ if (url == null) -->Line_6 $$ return Collections.<Module>emptyList()[ CD ]
Line_6 $$ return Collections.<Module>emptyList()-->Line_6 $$ return Collections.<Module>emptyList()[ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_8 $$ DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance()[ CD ]
Line_8 $$ DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance()-->Line_8 $$ DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance()[ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_9 $$ Document document = null[ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_10 $$ InputStream input = null[ CD ]
Line_10 $$ InputStream input = null-->Line_12 $$ input = url.openStream()[ FD ]
Line_12 $$ input = url.openStream()-->Line_12 $$ input = url.openStream()[ FD ]
Line_12 $$ input = url.openStream()-->Line_12 $$ input = url.openStream()[ CD ]
Line_3 $$ URL url = getClass().getResource("/modules.xml")-->Line_12 $$ input = url.openStream()[ FD ]
Line_13 $$ DocumentBuilder bui = fac.newDocumentBuilder()-->Line_13 $$ DocumentBuilder bui = fac.newDocumentBuilder()[ CD ]
Line_8 $$ DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance()-->Line_13 $$ DocumentBuilder bui = fac.newDocumentBuilder()[ FD ]
Line_9 $$ Document document = null-->Line_14 $$ document = bui.parse(url.openStream())[ FD ]
Line_14 $$ document = bui.parse(url.openStream())-->Line_14 $$ document = bui.parse(url.openStream())[ FD ]
Line_14 $$ document = bui.parse(url.openStream())-->Line_14 $$ document = bui.parse(url.openStream())[ CD ]
Line_13 $$ DocumentBuilder bui = fac.newDocumentBuilder()-->Line_14 $$ document = bui.parse(url.openStream())[ FD ]
Line_3 $$ URL url = getClass().getResource("/modules.xml")-->Line_14 $$ document = bui.parse(url.openStream())[ FD ]
Line_10 $$ InputStream input = null-->Line_22 $$ if (input != null) [ FD ]
Line_12 $$ input = url.openStream()-->Line_22 $$ if (input != null) [ FD ]
Line_10 $$ InputStream input = null-->Line_24 $$ input.close()[ FD ]
Line_12 $$ input = url.openStream()-->Line_24 $$ input.close()[ FD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_30 $$ if (document == null) [ CD ]
Line_9 $$ Document document = null-->Line_30 $$ if (document == null) [ FD ]
Line_14 $$ document = bui.parse(url.openStream())-->Line_30 $$ if (document == null) [ FD ]
Line_30 $$ if (document == null) -->Line_31 $$ return Collections.<Module>emptyList()[ CD ]
Line_31 $$ return Collections.<Module>emptyList()-->Line_31 $$ return Collections.<Module>emptyList()[ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_33 $$ List<Module> modules = new LinkedList<Module>()[ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")[ CD ]
Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")-->Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")[ CD ]
Line_9 $$ Document document = null-->Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")[ FD ]
Line_14 $$ document = bui.parse(url.openStream())-->Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")[ FD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ CD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_2 $$ public Collection<Module> loadModules() [ CD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ CD ]
Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")-->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ CD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ CD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_36 $$ Element moduleListNode = (Element) moduleListNodes.item(i)[ CD ]
Line_34 $$ NodeList moduleListNodes = document.getElementsByTagName("module-list")-->Line_36 $$ Element moduleListNode = (Element) moduleListNodes.item(i)[ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_36 $$ Element moduleListNode = (Element) moduleListNodes.item(i)[ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")[ CD ]
Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")-->Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")[ CD ]
Line_36 $$ Element moduleListNode = (Element) moduleListNodes.item(i)-->Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")[ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ CD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ CD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ CD ]
Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")-->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ CD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ CD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_39 $$ Element moduleNode = (Element) moduleNodes.item(j)[ CD ]
Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")-->Line_39 $$ Element moduleNode = (Element) moduleNodes.item(j)[ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_39 $$ Element moduleNode = (Element) moduleNodes.item(j)[ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_40 $$ String moduleClass = moduleNode.getAttribute("class")[ CD ]
Line_40 $$ String moduleClass = moduleNode.getAttribute("class")-->Line_40 $$ String moduleClass = moduleNode.getAttribute("class")[ CD ]
Line_39 $$ Element moduleNode = (Element) moduleNodes.item(j)-->Line_40 $$ String moduleClass = moduleNode.getAttribute("class")[ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_41 $$ if (moduleClass != null) [ CD ]
Line_40 $$ String moduleClass = moduleNode.getAttribute("class")-->Line_41 $$ if (moduleClass != null) [ FD ]
Line_41 $$ if (moduleClass != null) -->Line_42 $$ instantiateModule(moduleClass, modules)[ CD ]
Line_40 $$ String moduleClass = moduleNode.getAttribute("class")-->Line_42 $$ instantiateModule(moduleClass, modules)[ FD ]
Line_33 $$ List<Module> modules = new LinkedList<Module>()-->Line_42 $$ instantiateModule(moduleClass, modules)[ FD ]
Line_2 $$ public Collection<Module> loadModules() -->Line_46 $$ return modules[ CD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < moduleListNodes.getLength(); i++) -->Line_36 $$ Element moduleListNode = (Element) moduleListNodes.item(i)[ FD ]
Line_36 $$ Element moduleListNode = (Element) moduleListNodes.item(i)-->Line_37 $$ NodeList moduleNodes = moduleListNode.getElementsByTagName("module")[ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < moduleNodes.getLength(); j++) -->Line_39 $$ Element moduleNode = (Element) moduleNodes.item(j)[ FD ]
Line_39 $$ Element moduleNode = (Element) moduleNodes.item(j)-->Line_40 $$ String moduleClass = moduleNode.getAttribute("class")[ FD ]
Line_40 $$ String moduleClass = moduleNode.getAttribute("class")-->Line_41 $$ if (moduleClass != null) [ FD ]
Line_40 $$ String moduleClass = moduleNode.getAttribute("class")-->Line_42 $$ instantiateModule(moduleClass, modules)[ FD ]
