Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected boolean process(final TranscodeJobImpl job) [ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_3 $$ TranscodePipe pipe = null[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_5 $$ DeviceImpl device = job.getDevice()[ CD ]
Line_5 $$ DeviceImpl device = job.getDevice()-->Line_5 $$ DeviceImpl device = job.getDevice()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_5 $$ DeviceImpl device = job.getDevice()[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_6 $$ device.setTranscoding(true)[ CD ]
Line_5 $$ DeviceImpl device = job.getDevice()-->Line_6 $$ device.setTranscoding(true)[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_8 $$ job.starts()[ FD ]
Line_9 $$ TranscodeProvider provider = job.getProfile().getProvider()-->Line_9 $$ TranscodeProvider provider = job.getProfile().getProvider()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_9 $$ TranscodeProvider provider = job.getProfile().getProvider()[ FD ]
Line_11 $$ TranscodeProfile profile = job.getProfile()-->Line_11 $$ TranscodeProfile profile = job.getProfile()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_11 $$ TranscodeProfile profile = job.getProfile()[ FD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()[ FD ]
Line_9 $$ TranscodeProvider provider = job.getProfile().getProvider()-->Line_15 $$ if (provider == null) [ FD ]
Line_15 $$ if (provider == null) -->Line_16 $$ xcode_required = false[ CD ]
Line_14 $$ boolean xcode_required-->Line_16 $$ xcode_required = false[ FD ]
Line_16 $$ xcode_required = false-->Line_16 $$ xcode_required = false[ FD ]
Line_15 $$ if (provider == null) -->Line_17 $$ provider_analysis = null[ CD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_17 $$ provider_analysis = null[ FD ]
Line_17 $$ provider_analysis = null-->Line_17 $$ provider_analysis = null[ FD ]
Line_15 $$ if (provider == null) -->Line_19 $$ provider_analysis = analyse(job)[ CD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_19 $$ provider_analysis = analyse(job)[ FD ]
Line_17 $$ provider_analysis = null-->Line_19 $$ provider_analysis = analyse(job)[ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_19 $$ provider_analysis = analyse(job)[ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_19 $$ provider_analysis = analyse(job)[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_19 $$ provider_analysis = analyse(job)[ FD ]
Line_15 $$ if (provider == null) -->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ CD ]
Line_14 $$ boolean xcode_required-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ FD ]
Line_16 $$ xcode_required = false-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ FD ]
Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ FD ]
Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ CD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ FD ]
Line_17 $$ provider_analysis = null-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)[ FD ]
Line_15 $$ if (provider == null) -->Line_21 $$ int tt_req[ CD ]
Line_15 $$ if (provider == null) -->Line_22 $$ if (job.isStream()) [ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_22 $$ if (job.isStream()) [ FD ]
Line_22 $$ if (job.isStream()) -->Line_22 $$ if (job.isStream()) [ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_22 $$ if (job.isStream()) [ FD ]
Line_22 $$ if (job.isStream()) -->Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS[ CD ]
Line_21 $$ int tt_req-->Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS[ FD ]
Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS-->Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS[ FD ]
Line_22 $$ if (job.isStream()) -->Line_25 $$ tt_req = job.getTranscodeRequirement()[ CD ]
Line_21 $$ int tt_req-->Line_25 $$ tt_req = job.getTranscodeRequirement()[ FD ]
Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS-->Line_25 $$ tt_req = job.getTranscodeRequirement()[ FD ]
Line_25 $$ tt_req = job.getTranscodeRequirement()-->Line_25 $$ tt_req = job.getTranscodeRequirement()[ FD ]
Line_25 $$ tt_req = job.getTranscodeRequirement()-->Line_25 $$ tt_req = job.getTranscodeRequirement()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_25 $$ tt_req = job.getTranscodeRequirement()[ FD ]
Line_22 $$ if (job.isStream()) -->Line_26 $$ if (device instanceof TranscodeTarget) [ CD ]
Line_5 $$ DeviceImpl device = job.getDevice()-->Line_26 $$ if (device instanceof TranscodeTarget) [ FD ]
Line_26 $$ if (device instanceof TranscodeTarget) -->Line_27 $$ if (provider_analysis.getLongProperty(TranscodeProviderAnalysis.PT_VIDEO_HEIGHT) == 0) [ CD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_27 $$ if (provider_analysis.getLongProperty(TranscodeProviderAnalysis.PT_VIDEO_HEIGHT) == 0) [ FD ]
Line_17 $$ provider_analysis = null-->Line_27 $$ if (provider_analysis.getLongProperty(TranscodeProviderAnalysis.PT_VIDEO_HEIGHT) == 0) [ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_27 $$ if (provider_analysis.getLongProperty(TranscodeProviderAnalysis.PT_VIDEO_HEIGHT) == 0) [ FD ]
Line_27 $$ if (provider_analysis.getLongProperty(TranscodeProviderAnalysis.PT_VIDEO_HEIGHT) == 0) -->Line_28 $$ if (((TranscodeTarget) device).isAudioCompatible(transcode_file)) [ CD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_28 $$ if (((TranscodeTarget) device).isAudioCompatible(transcode_file)) [ FD ]
Line_28 $$ if (((TranscodeTarget) device).isAudioCompatible(transcode_file)) -->Line_28 $$ if (((TranscodeTarget) device).isAudioCompatible(transcode_file)) [ CD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_28 $$ if (((TranscodeTarget) device).isAudioCompatible(transcode_file)) [ FD ]
Line_28 $$ if (((TranscodeTarget) device).isAudioCompatible(transcode_file)) -->Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER[ CD ]
Line_21 $$ int tt_req-->Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER[ FD ]
Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS-->Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER[ FD ]
Line_25 $$ tt_req = job.getTranscodeRequirement()-->Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER[ FD ]
Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER-->Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER[ FD ]
Line_15 $$ if (provider == null) -->Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) [ CD ]
Line_21 $$ int tt_req-->Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) [ FD ]
Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS-->Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) [ FD ]
Line_25 $$ tt_req = job.getTranscodeRequirement()-->Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) [ FD ]
Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER-->Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) [ FD ]
Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) -->Line_35 $$ xcode_required = false[ CD ]
Line_14 $$ boolean xcode_required-->Line_35 $$ xcode_required = false[ FD ]
Line_16 $$ xcode_required = false-->Line_35 $$ xcode_required = false[ FD ]
Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)-->Line_35 $$ xcode_required = false[ FD ]
Line_35 $$ xcode_required = false-->Line_35 $$ xcode_required = false[ FD ]
Line_34 $$ if (tt_req == TranscodeTarget.TRANSCODE_NEVER) -->Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) [ CD ]
Line_21 $$ int tt_req-->Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) [ FD ]
Line_23 $$ tt_req = TranscodeTarget.TRANSCODE_ALWAYS-->Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) [ FD ]
Line_25 $$ tt_req = job.getTranscodeRequirement()-->Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) [ FD ]
Line_29 $$ tt_req = TranscodeTarget.TRANSCODE_NEVER-->Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) [ FD ]
Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) -->Line_37 $$ xcode_required = true[ CD ]
Line_14 $$ boolean xcode_required-->Line_37 $$ xcode_required = true[ FD ]
Line_16 $$ xcode_required = false-->Line_37 $$ xcode_required = true[ FD ]
Line_20 $$ xcode_required = provider_analysis.getBooleanProperty(TranscodeProviderAnalysis.PT_TRANSCODE_REQUIRED)-->Line_37 $$ xcode_required = true[ FD ]
Line_35 $$ xcode_required = false-->Line_37 $$ xcode_required = true[ FD ]
Line_37 $$ xcode_required = true-->Line_37 $$ xcode_required = true[ FD ]
Line_36 $$ if (tt_req == TranscodeTarget.TRANSCODE_ALWAYS) -->Line_38 $$ provider_analysis.setBooleanProperty(TranscodeProviderAnalysis.PT_FORCE_TRANSCODE, true)[ CD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_38 $$ provider_analysis.setBooleanProperty(TranscodeProviderAnalysis.PT_FORCE_TRANSCODE, true)[ FD ]
Line_17 $$ provider_analysis = null-->Line_38 $$ provider_analysis.setBooleanProperty(TranscodeProviderAnalysis.PT_FORCE_TRANSCODE, true)[ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_38 $$ provider_analysis.setBooleanProperty(TranscodeProviderAnalysis.PT_FORCE_TRANSCODE, true)[ FD ]
Line_41 $$ if (xcode_required) -->Line_42 $$ final AESemaphore xcode_sem = new AESemaphore("xcode:proc")[ CD ]
Line_41 $$ if (xcode_required) -->Line_43 $$ final TranscodeProviderJob[] provider_job = [ CD ]
Line_41 $$ if (xcode_required) -->Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() [ CD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() [ CD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_52 $$ last_eta = eta_secs[ CD ]
Line_52 $$ last_eta = eta_secs-->Line_52 $$ last_eta = eta_secs[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_52 $$ last_eta = eta_secs[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_53 $$ last_percent = percent[ CD ]
Line_53 $$ last_percent = percent-->Line_53 $$ last_percent = percent[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_53 $$ last_percent = percent[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_54 $$ TranscodeProviderJob prov_job = provider_job[0][ CD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_55 $$ if (prov_job == null) [ CD ]
Line_54 $$ TranscodeProviderJob prov_job = provider_job[0]-->Line_55 $$ if (prov_job == null) [ FD ]
Line_55 $$ if (prov_job == null) -->Line_56 $$ return[ CD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_58 $$ int job_state = job.getState()[ CD ]
Line_58 $$ int job_state = job.getState()-->Line_58 $$ int job_state = job.getState()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_58 $$ int job_state = job.getState()[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_59 $$ if (job_state == TranscodeJob.ST_CANCELLED || job_state == TranscodeJob.ST_REMOVED) [ CD ]
Line_59 $$ if (job_state == TranscodeJob.ST_CANCELLED || job_state == TranscodeJob.ST_REMOVED) -->Line_60 $$ prov_job.cancel()[ CD ]
Line_54 $$ TranscodeProviderJob prov_job = provider_job[0]-->Line_60 $$ prov_job.cancel()[ FD ]
Line_59 $$ if (job_state == TranscodeJob.ST_CANCELLED || job_state == TranscodeJob.ST_REMOVED) -->Line_61 $$ if (paused || job_state == TranscodeJob.ST_PAUSED) [ CD ]
Line_61 $$ if (paused || job_state == TranscodeJob.ST_PAUSED) -->Line_62 $$ prov_job.pause()[ CD ]
Line_54 $$ TranscodeProviderJob prov_job = provider_job[0]-->Line_62 $$ prov_job.pause()[ FD ]
Line_61 $$ if (paused || job_state == TranscodeJob.ST_PAUSED) -->Line_64 $$ if (job_state == TranscodeJob.ST_RUNNING) [ CD ]
Line_58 $$ int job_state = job.getState()-->Line_64 $$ if (job_state == TranscodeJob.ST_RUNNING) [ FD ]
Line_64 $$ if (job_state == TranscodeJob.ST_RUNNING) -->Line_65 $$ prov_job.resume()[ CD ]
Line_54 $$ TranscodeProviderJob prov_job = provider_job[0]-->Line_65 $$ prov_job.resume()[ FD ]
Line_61 $$ if (paused || job_state == TranscodeJob.ST_PAUSED) -->Line_67 $$ job.updateProgress(percent, eta_secs)[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_67 $$ job.updateProgress(percent, eta_secs)[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_67 $$ job.updateProgress(percent, eta_secs)[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_67 $$ job.updateProgress(percent, eta_secs)[ FD ]
Line_61 $$ if (paused || job_state == TranscodeJob.ST_PAUSED) -->Line_68 $$ prov_job.setMaxBytesPerSecond(max_bytes_per_sec)[ CD ]
Line_54 $$ TranscodeProviderJob prov_job = provider_job[0]-->Line_68 $$ prov_job.setMaxBytesPerSecond(max_bytes_per_sec)[ FD ]
Line_61 $$ if (paused || job_state == TranscodeJob.ST_PAUSED) -->Line_69 $$ if (!resolution_updated) [ CD ]
Line_69 $$ if (!resolution_updated) -->Line_69 $$ if (!resolution_updated) [ CD ]
Line_69 $$ if (!resolution_updated) -->Line_70 $$ if (new_width > 0 && new_height > 0) [ CD ]
Line_70 $$ if (new_width > 0 && new_height > 0) -->Line_71 $$ transcode_file.setResolution(new_width, new_height)[ CD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_71 $$ transcode_file.setResolution(new_width, new_height)[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_71 $$ transcode_file.setResolution(new_width, new_height)[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_71 $$ transcode_file.setResolution(new_width, new_height)[ FD ]
Line_70 $$ if (new_width > 0 && new_height > 0) -->Line_72 $$ resolution_updated = true[ CD ]
Line_72 $$ resolution_updated = true-->Line_72 $$ resolution_updated = true[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_78 $$ if (Constants.isOSX && job.getEnableAutoRetry() && job.canUseDirectInput() && job.getAutoRetryCount() == 0) [ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_78 $$ if (Constants.isOSX && job.getEnableAutoRetry() && job.canUseDirectInput() && job.getAutoRetryCount() == 0) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_78 $$ if (Constants.isOSX && job.getEnableAutoRetry() && job.canUseDirectInput() && job.getAutoRetryCount() == 0) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_78 $$ if (Constants.isOSX && job.getEnableAutoRetry() && job.canUseDirectInput() && job.getAutoRetryCount() == 0) [ FD ]
Line_78 $$ if (Constants.isOSX && job.getEnableAutoRetry() && job.canUseDirectInput() && job.getAutoRetryCount() == 0) -->Line_79 $$ if (connect_rate > 5 && last_percent < 100) [ CD ]
Line_79 $$ if (connect_rate > 5 && last_percent < 100) -->Line_80 $$ long eta = (long) eta_average.update(last_eta)[ CD ]
Line_52 $$ last_eta = eta_secs-->Line_80 $$ long eta = (long) eta_average.update(last_eta)[ FD ]
Line_79 $$ if (connect_rate > 5 && last_percent < 100) -->Line_81 $$ eta_samples++[ CD ]
Line_79 $$ if (connect_rate > 5 && last_percent < 100) -->Line_82 $$ if (eta_samples >= ETA_AVERAGE_SIZE) [ CD ]
Line_82 $$ if (eta_samples >= ETA_AVERAGE_SIZE) -->Line_83 $$ long total_time = (eta * 100) / (100 - last_percent)[ CD ]
Line_82 $$ if (eta_samples >= ETA_AVERAGE_SIZE) -->Line_84 $$ long total_write = total_time * write_speed[ CD ]
Line_82 $$ if (eta_samples >= ETA_AVERAGE_SIZE) -->Line_85 $$ DiskManagerFileInfo file = job.getFile()[ CD ]
Line_85 $$ DiskManagerFileInfo file = job.getFile()-->Line_85 $$ DiskManagerFileInfo file = job.getFile()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_85 $$ DiskManagerFileInfo file = job.getFile()[ FD ]
Line_82 $$ if (eta_samples >= ETA_AVERAGE_SIZE) -->Line_86 $$ long length = file.getLength()[ CD ]
Line_86 $$ long length = file.getLength()-->Line_86 $$ long length = file.getLength()[ CD ]
Line_85 $$ DiskManagerFileInfo file = job.getFile()-->Line_86 $$ long length = file.getLength()[ FD ]
Line_82 $$ if (eta_samples >= ETA_AVERAGE_SIZE) -->Line_87 $$ if (length > 0) [ CD ]
Line_86 $$ long length = file.getLength()-->Line_87 $$ if (length > 0) [ FD ]
Line_87 $$ if (length > 0) -->Line_88 $$ double over_write = ((double) total_write) / length[ CD ]
Line_87 $$ if (length > 0) -->Line_89 $$ if (over_write > 5.0) [ CD ]
Line_88 $$ double over_write = ((double) total_write) / length-->Line_89 $$ if (over_write > 5.0) [ FD ]
Line_89 $$ if (over_write > 5.0) -->Line_90 $$ failed(new TranscodeException("Overwrite limit exceeded, abandoning transcode"))[ CD ]
Line_89 $$ if (over_write > 5.0) -->Line_91 $$ provider_job[0].cancel()[ CD ]
Line_79 $$ if (connect_rate > 5 && last_percent < 100) -->Line_96 $$ eta_samples = 0[ CD ]
Line_96 $$ eta_samples = 0-->Line_96 $$ eta_samples = 0[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_101 $$ if (error[0] == null) [ CD ]
Line_101 $$ if (error[0] == null) -->Line_102 $$ error[0] = e[ CD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_102 $$ error[0] = e[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_104 $$ xcode_sem.release()[ CD ]
Line_42 $$ final AESemaphore xcode_sem = new AESemaphore("xcode:proc")-->Line_104 $$ xcode_sem.release()[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_107 $$ xcode_sem.release()[ CD ]
Line_42 $$ final AESemaphore xcode_sem = new AESemaphore("xcode:proc")-->Line_107 $$ xcode_sem.release()[ FD ]
Line_41 $$ if (xcode_required) -->Line_110 $$ boolean direct_input = job.useDirectInput()[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_110 $$ boolean direct_input = job.useDirectInput()[ FD ]
Line_41 $$ if (xcode_required) -->Line_111 $$ if (job.isStream()) [ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_111 $$ if (job.isStream()) [ FD ]
Line_111 $$ if (job.isStream()) -->Line_111 $$ if (job.isStream()) [ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_111 $$ if (job.isStream()) [ FD ]
Line_112 $$ pipe = new TranscodePipeStreamSource2(new TranscodePipeStreamSource2.streamListener() -->Line_114 $$ job.setStream(is)[ CD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_114 $$ job.setStream(is)[ FD ]
Line_112 $$ pipe = new TranscodePipeStreamSource2(new TranscodePipeStreamSource2.streamListener() -->Line_114 $$ job.setStream(is)[ FD ]
Line_111 $$ if (job.isStream()) -->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ CD ]
Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ CD ]
Line_9 $$ TranscodeProvider provider = job.getProfile().getProvider()-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_17 $$ provider_analysis = null-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_11 $$ TranscodeProfile profile = job.getProfile()-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_3 $$ TranscodePipe pipe = null-->Line_117 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, new URL("tcp://127.0.0.1:" + pipe.getPort()))[ FD ]
Line_111 $$ if (job.isStream()) -->Line_119 $$ File output_file = transcode_file.getCacheFile()[ CD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_119 $$ File output_file = transcode_file.getCacheFile()[ FD ]
Line_111 $$ if (job.isStream()) -->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ CD ]
Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())-->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ CD ]
Line_9 $$ TranscodeProvider provider = job.getProfile().getProvider()-->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_13 $$ TranscodeProviderAnalysis provider_analysis-->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_17 $$ provider_analysis = null-->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_19 $$ provider_analysis = analyse(job)-->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_11 $$ TranscodeProfile profile = job.getProfile()-->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_120 $$ provider_job[0] = provider.transcode(xcode_adapter, provider_analysis, direct_input, job.getFile(), profile, output_file.toURI().toURL())[ FD ]
Line_41 $$ if (xcode_required) -->Line_122 $$ provider_job[0].setMaxBytesPerSecond(max_bytes_per_sec)[ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_127 $$ if (changed_job == job) [ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_127 $$ if (changed_job == job) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_127 $$ if (changed_job == job) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_127 $$ if (changed_job == job) [ FD ]
Line_127 $$ if (changed_job == job) -->Line_128 $$ int state = job.getState()[ CD ]
Line_128 $$ int state = job.getState()-->Line_128 $$ int state = job.getState()[ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_128 $$ int state = job.getState()[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_128 $$ int state = job.getState()[ FD ]
Line_127 $$ if (changed_job == job) -->Line_129 $$ if (state == TranscodeJob.ST_PAUSED) [ CD ]
Line_128 $$ int state = job.getState()-->Line_129 $$ if (state == TranscodeJob.ST_PAUSED) [ FD ]
Line_129 $$ if (state == TranscodeJob.ST_PAUSED) -->Line_130 $$ provider_job[0].pause()[ CD ]
Line_129 $$ if (state == TranscodeJob.ST_PAUSED) -->Line_131 $$ if (state == TranscodeJob.ST_RUNNING) [ CD ]
Line_128 $$ int state = job.getState()-->Line_131 $$ if (state == TranscodeJob.ST_RUNNING) [ FD ]
Line_131 $$ if (state == TranscodeJob.ST_RUNNING) -->Line_132 $$ provider_job[0].resume()[ CD ]
Line_131 $$ if (state == TranscodeJob.ST_RUNNING) -->Line_133 $$ if (state == TranscodeJob.ST_CANCELLED || state == TranscodeJob.ST_STOPPED) [ CD ]
Line_133 $$ if (state == TranscodeJob.ST_CANCELLED || state == TranscodeJob.ST_STOPPED) -->Line_134 $$ provider_job[0].cancel()[ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_139 $$ if (removed_job == job) [ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_139 $$ if (removed_job == job) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_139 $$ if (removed_job == job) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_139 $$ if (removed_job == job) [ FD ]
Line_139 $$ if (removed_job == job) -->Line_140 $$ provider_job[0].cancel()[ CD ]
Line_42 $$ final AESemaphore xcode_sem = new AESemaphore("xcode:proc")-->Line_146 $$ xcode_sem.reserve()[ FD ]
Line_41 $$ if (xcode_required) -->Line_150 $$ if (error[0] != null) [ CD ]
Line_41 $$ if (xcode_required) -->Line_154 $$ DiskManagerFileInfo source = job.getFile()[ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_154 $$ DiskManagerFileInfo source = job.getFile()[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_154 $$ DiskManagerFileInfo source = job.getFile()[ FD ]
Line_41 $$ if (xcode_required) -->Line_155 $$ transcode_file.setTranscodeRequired(false)[ CD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_155 $$ transcode_file.setTranscodeRequired(false)[ FD ]
Line_41 $$ if (xcode_required) -->Line_156 $$ if (job.isStream()) [ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_156 $$ if (job.isStream()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_156 $$ if (job.isStream()) [ FD ]
Line_156 $$ if (job.isStream()) -->Line_156 $$ if (job.isStream()) [ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_156 $$ if (job.isStream()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_156 $$ if (job.isStream()) [ FD ]
Line_156 $$ if (job.isStream()) -->Line_157 $$ PluginInterface av_pi = PluginInitializer.getDefaultInterface().getPluginManager().getPluginInterfaceByID("azupnpav")[ CD ]
Line_156 $$ if (job.isStream()) -->Line_158 $$ if (av_pi == null) [ CD ]
Line_156 $$ if (job.isStream()) -->Line_161 $$ IPCInterface av_ipc = av_pi.getIPC()[ CD ]
Line_156 $$ if (job.isStream()) -->Line_163 $$ if (url_str == null || url_str.length() == 0) [ CD ]
Line_163 $$ if (url_str == null || url_str.length() == 0) -->Line_164 $$ File source_file = source.getFile()[ CD ]
Line_163 $$ if (url_str == null || url_str.length() == 0) -->Line_165 $$ if (source_file.exists()) [ CD ]
Line_165 $$ if (source_file.exists()) -->Line_165 $$ if (source_file.exists()) [ CD ]
Line_165 $$ if (source_file.exists()) -->Line_166 $$ job.setStream(new BufferedInputStream(new FileInputStream(source_file)))[ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_166 $$ job.setStream(new BufferedInputStream(new FileInputStream(source_file)))[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_166 $$ job.setStream(new BufferedInputStream(new FileInputStream(source_file)))[ FD ]
Line_163 $$ if (url_str == null || url_str.length() == 0) -->Line_172 $$ job.setStream(source_url.openConnection().getInputStream())[ CD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_172 $$ job.setStream(source_url.openConnection().getInputStream())[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_172 $$ job.setStream(source_url.openConnection().getInputStream())[ FD ]
Line_156 $$ if (job.isStream()) -->Line_175 $$ if (device.getAlwaysCacheFiles()) [ CD ]
Line_5 $$ DeviceImpl device = job.getDevice()-->Line_175 $$ if (device.getAlwaysCacheFiles()) [ FD ]
Line_175 $$ if (device.getAlwaysCacheFiles()) -->Line_175 $$ if (device.getAlwaysCacheFiles()) [ CD ]
Line_5 $$ DeviceImpl device = job.getDevice()-->Line_175 $$ if (device.getAlwaysCacheFiles()) [ FD ]
Line_175 $$ if (device.getAlwaysCacheFiles()) -->Line_176 $$ PluginInterface av_pi = PluginInitializer.getDefaultInterface().getPluginManager().getPluginInterfaceByID("azupnpav")[ CD ]
Line_175 $$ if (device.getAlwaysCacheFiles()) -->Line_177 $$ if (av_pi == null) [ CD ]
Line_175 $$ if (device.getAlwaysCacheFiles()) -->Line_180 $$ IPCInterface av_ipc = av_pi.getIPC()[ CD ]
Line_175 $$ if (device.getAlwaysCacheFiles()) -->Line_184 $$ if (url_str == null || url_str.length() == 0) [ CD ]
Line_184 $$ if (url_str == null || url_str.length() == 0) -->Line_185 $$ File source_file = source.getFile()[ CD ]
Line_184 $$ if (url_str == null || url_str.length() == 0) -->Line_186 $$ if (source_file.exists()) [ CD ]
Line_186 $$ if (source_file.exists()) -->Line_186 $$ if (source_file.exists()) [ CD ]
Line_186 $$ if (source_file.exists()) -->Line_188 $$ length = source_file.length()[ CD ]
Line_184 $$ if (url_str == null || url_str.length() == 0) -->Line_194 $$ URLConnection connection = source_url.openConnection()[ CD ]
Line_184 $$ if (url_str == null || url_str.length() == 0) -->Line_195 $$ is = source_url.openConnection().getInputStream()[ CD ]
Line_184 $$ if (url_str == null || url_str.length() == 0) -->Line_196 $$ String s = connection.getHeaderField("content-length")[ CD ]
Line_184 $$ if (url_str == null || url_str.length() == 0) -->Line_197 $$ if (s != null) [ CD ]
Line_197 $$ if (s != null) -->Line_198 $$ length = Long.parseLong(s)[ CD ]
Line_197 $$ if (s != null) -->Line_200 $$ length = -1[ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_209 $$ if (changed_job == job) [ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_209 $$ if (changed_job == job) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_209 $$ if (changed_job == job) [ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_209 $$ if (changed_job == job) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_209 $$ if (changed_job == job) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_209 $$ if (changed_job == job) [ FD ]
Line_209 $$ if (changed_job == job) -->Line_210 $$ int state = job.getState()[ CD ]
Line_210 $$ int state = job.getState()-->Line_210 $$ int state = job.getState()[ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_210 $$ int state = job.getState()[ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_210 $$ int state = job.getState()[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_210 $$ int state = job.getState()[ FD ]
Line_209 $$ if (changed_job == job) -->Line_211 $$ if (state == TranscodeJob.ST_PAUSED) [ CD ]
Line_210 $$ int state = job.getState()-->Line_211 $$ if (state == TranscodeJob.ST_PAUSED) [ FD ]
Line_128 $$ int state = job.getState()-->Line_211 $$ if (state == TranscodeJob.ST_PAUSED) [ FD ]
Line_211 $$ if (state == TranscodeJob.ST_PAUSED) -->Line_212 $$ if (state == TranscodeJob.ST_RUNNING) [ CD ]
Line_210 $$ int state = job.getState()-->Line_212 $$ if (state == TranscodeJob.ST_RUNNING) [ FD ]
Line_128 $$ int state = job.getState()-->Line_212 $$ if (state == TranscodeJob.ST_RUNNING) [ FD ]
Line_212 $$ if (state == TranscodeJob.ST_RUNNING) -->Line_213 $$ if (state == TranscodeJob.ST_CANCELLED || state == TranscodeJob.ST_STOPPED) [ CD ]
Line_213 $$ if (state == TranscodeJob.ST_CANCELLED || state == TranscodeJob.ST_STOPPED) -->Line_214 $$ cancel_copy[0] = true[ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_219 $$ if (removed_job == job) [ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_219 $$ if (removed_job == job) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_219 $$ if (removed_job == job) [ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_219 $$ if (removed_job == job) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_219 $$ if (removed_job == job) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_219 $$ if (removed_job == job) [ FD ]
Line_219 $$ if (removed_job == job) -->Line_220 $$ cancel_copy[0] = true[ CD ]
Line_12 $$ final TranscodeFileImpl transcode_file = job.getTranscodeFile()-->Line_226 $$ os = new FileOutputStream(transcode_file.getCacheFile())[ FD ]
Line_229 $$ while (true) -->Line_230 $$ if (cancel_copy[0]) [ CD ]
Line_229 $$ while (true) -->Line_233 $$ int len = is.read(buffer)[ CD ]
Line_233 $$ int len = is.read(buffer)-->Line_233 $$ int len = is.read(buffer)[ CD ]
Line_112 $$ pipe = new TranscodePipeStreamSource2(new TranscodePipeStreamSource2.streamListener() -->Line_233 $$ int len = is.read(buffer)[ FD ]
Line_229 $$ while (true) -->Line_234 $$ if (len <= 0) [ CD ]
Line_233 $$ int len = is.read(buffer)-->Line_234 $$ if (len <= 0) [ FD ]
Line_229 $$ while (true) -->Line_237 $$ os.write(buffer, 0, len)[ CD ]
Line_233 $$ int len = is.read(buffer)-->Line_237 $$ os.write(buffer, 0, len)[ FD ]
Line_229 $$ while (true) -->Line_239 $$ if (length > 0) [ CD ]
Line_86 $$ long length = file.getLength()-->Line_239 $$ if (length > 0) [ FD ]
Line_239 $$ if (length > 0) -->Line_240 $$ job.updateProgress((int) (total_copied * 100 / length), -1)[ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_240 $$ job.updateProgress((int) (total_copied * 100 / length), -1)[ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_240 $$ job.updateProgress((int) (total_copied * 100 / length), -1)[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_240 $$ job.updateProgress((int) (total_copied * 100 / length), -1)[ FD ]
Line_112 $$ pipe = new TranscodePipeStreamSource2(new TranscodePipeStreamSource2.streamListener() -->Line_246 $$ is.close()[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_248 $$ Debug.out(e)[ FD ]
Line_251 $$ if (os != null) -->Line_252 $$ os.close()[ CD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_255 $$ Debug.out(e)[ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_262 $$ job.complete()[ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_262 $$ job.complete()[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_262 $$ job.complete()[ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_265 $$ job.failed(e)[ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_265 $$ job.failed(e)[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_265 $$ job.failed(e)[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_265 $$ job.failed(e)[ FD ]
Line_44 $$ TranscodeProviderAdapter xcode_adapter = new TranscodeProviderAdapter() -->Line_266 $$ e.printStackTrace()[ FD ]
Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) [ FD ]
Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) -->Line_268 $$ log("Auto-retrying transcode with direct input")[ CD ]
Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) -->Line_269 $$ job.setUseDirectInput()[ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_269 $$ job.setUseDirectInput()[ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_269 $$ job.setUseDirectInput()[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_269 $$ job.setUseDirectInput()[ FD ]
Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) -->Line_270 $$ job.setAutoRetry(true)[ CD ]
Line_205 $$ TranscodeQueueListener copy_listener = new TranscodeQueueListener() -->Line_270 $$ job.setAutoRetry(true)[ FD ]
Line_123 $$ TranscodeQueueListener listener = new TranscodeQueueListener() -->Line_270 $$ job.setAutoRetry(true)[ FD ]
Line_2 $$ protected boolean process(final TranscodeJobImpl job) -->Line_270 $$ job.setAutoRetry(true)[ FD ]
Line_267 $$ if (!job.isStream() && job.getEnableAutoRetry() && job.getAutoRetryCount() == 0 && job.canUseDirectInput() && !job.useDirectInput()) -->Line_271 $$ queue_sem.release()[ CD ]
Line_3 $$ TranscodePipe pipe = null-->Line_275 $$ if (pipe != null) [ FD ]
Line_275 $$ if (pipe != null) -->Line_276 $$ pipe.destroy()[ CD ]
Line_3 $$ TranscodePipe pipe = null-->Line_276 $$ pipe.destroy()[ FD ]
Line_5 $$ DeviceImpl device = job.getDevice()-->Line_278 $$ device.setTranscoding(false)[ FD ]
Line_233 $$ int len = is.read(buffer)-->Line_234 $$ if (len <= 0) [ FD ]
Line_233 $$ int len = is.read(buffer)-->Line_237 $$ os.write(buffer, 0, len)[ FD ]
