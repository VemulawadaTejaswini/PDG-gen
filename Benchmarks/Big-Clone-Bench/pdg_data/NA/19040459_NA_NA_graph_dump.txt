Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String getMD5(final String text) [ CD ]
Line_2 $$ public static String getMD5(final String text) -->Line_3 $$ if (null == text)[ CD ]
Line_2 $$ public static String getMD5(final String text) -->Line_3 $$ if (null == text)[ FD ]
Line_3 $$ if (null == text)-->Line_3 $$ return null[ CD ]
Line_2 $$ public static String getMD5(final String text) -->Line_4 $$ final MessageDigest algorithm[ CD ]
Line_4 $$ final MessageDigest algorithm-->Line_6 $$ algorithm = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ algorithm = MessageDigest.getInstance("MD5")-->Line_6 $$ algorithm = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ algorithm = MessageDigest.getInstance("MD5")-->Line_6 $$ algorithm = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ public static String getMD5(final String text) -->Line_10 $$ algorithm.reset()[ CD ]
Line_4 $$ final MessageDigest algorithm-->Line_10 $$ algorithm.reset()[ FD ]
Line_6 $$ algorithm = MessageDigest.getInstance("MD5")-->Line_10 $$ algorithm.reset()[ FD ]
Line_2 $$ public static String getMD5(final String text) -->Line_11 $$ algorithm.update(text.getBytes())[ CD ]
Line_4 $$ final MessageDigest algorithm-->Line_11 $$ algorithm.update(text.getBytes())[ FD ]
Line_6 $$ algorithm = MessageDigest.getInstance("MD5")-->Line_11 $$ algorithm.update(text.getBytes())[ FD ]
Line_2 $$ public static String getMD5(final String text) -->Line_11 $$ algorithm.update(text.getBytes())[ FD ]
Line_2 $$ public static String getMD5(final String text) -->Line_12 $$ final byte[] digest = algorithm.digest()[ CD ]
Line_12 $$ final byte[] digest = algorithm.digest()-->Line_12 $$ final byte[] digest = algorithm.digest()[ CD ]
Line_4 $$ final MessageDigest algorithm-->Line_12 $$ final byte[] digest = algorithm.digest()[ FD ]
Line_6 $$ algorithm = MessageDigest.getInstance("MD5")-->Line_12 $$ final byte[] digest = algorithm.digest()[ FD ]
Line_2 $$ public static String getMD5(final String text) -->Line_13 $$ final StringBuffer hexString = new StringBuffer()[ CD ]
Line_15 $$ String str = Integer.toHexString(0xFF & b)-->Line_15 $$ String str = Integer.toHexString(0xFF & b)[ CD ]
Line_15 $$ String str = Integer.toHexString(0xFF & b)-->Line_16 $$ str = str.length() == 1 ? '0' + str : str[ FD ]
Line_16 $$ str = str.length() == 1 ? '0' + str : str-->Line_16 $$ str = str.length() == 1 ? '0' + str : str[ FD ]
Line_15 $$ String str = Integer.toHexString(0xFF & b)-->Line_16 $$ str = str.length() == 1 ? '0' + str : str[ FD ]
Line_16 $$ str = str.length() == 1 ? '0' + str : str-->Line_16 $$ str = str.length() == 1 ? '0' + str : str[ FD ]
Line_13 $$ final StringBuffer hexString = new StringBuffer()-->Line_17 $$ hexString.append(str)[ FD ]
Line_15 $$ String str = Integer.toHexString(0xFF & b)-->Line_17 $$ hexString.append(str)[ FD ]
Line_16 $$ str = str.length() == 1 ? '0' + str : str-->Line_17 $$ hexString.append(str)[ FD ]
Line_2 $$ public static String getMD5(final String text) -->Line_19 $$ return hexString.toString()[ CD ]
Line_19 $$ return hexString.toString()-->Line_19 $$ return hexString.toString()[ CD ]
Line_13 $$ final StringBuffer hexString = new StringBuffer()-->Line_19 $$ return hexString.toString()[ FD ]
