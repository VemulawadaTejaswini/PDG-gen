Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean deleteByQuery(String query, int coreId) [ CD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_5 $$ URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(solrUrl + "/core" + coreId + "/update")-->Line_5 $$ URLConnection conn = url.openConnection()[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_6 $$ conn.setDoOutput(true)[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_7 $$ conn.setRequestProperty("Content-type", "text/xml")[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_8 $$ conn.setRequestProperty("charset", "utf-8")[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_11 $$ wr.write("<delete><query>" + query + "</query></delete>")[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_12 $$ wr.flush()[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_13 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_15 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_14 $$ String line-->Line_15 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_15 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_13 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_15 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_16 $$ System.out.println(line)[ CD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_16 $$ System.out.println(line)[ FD ]
Line_14 $$ String line-->Line_16 $$ System.out.println(line)[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_18 $$ wr.close()[ FD ]
Line_13 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_19 $$ rd.close()[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_20 $$ conn = url.openConnection()[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_20 $$ conn = url.openConnection()[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_20 $$ conn = url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(solrUrl + "/core" + coreId + "/update")-->Line_20 $$ conn = url.openConnection()[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_21 $$ conn.setDoOutput(true)[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_21 $$ conn.setDoOutput(true)[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_22 $$ conn.setRequestProperty("Content-type", "text/xml")[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_22 $$ conn.setRequestProperty("Content-type", "text/xml")[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_23 $$ conn.setRequestProperty("charset", "utf-8")[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_23 $$ conn.setRequestProperty("charset", "utf-8")[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())-->Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_25 $$ wr.write("<commit/>")[ FD ]
Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())-->Line_25 $$ wr.write("<commit/>")[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_26 $$ wr.flush()[ FD ]
Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())-->Line_26 $$ wr.flush()[ FD ]
Line_13 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_20 $$ conn = url.openConnection()-->Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_28 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_14 $$ String line-->Line_28 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_28 $$ while ((line = rd.readLine()) != null) -->Line_28 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_13 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_28 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_28 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_28 $$ while ((line = rd.readLine()) != null) -->Line_29 $$ System.out.println(line)[ CD ]
Line_28 $$ while ((line = rd.readLine()) != null) -->Line_29 $$ System.out.println(line)[ FD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_29 $$ System.out.println(line)[ FD ]
Line_14 $$ String line-->Line_29 $$ System.out.println(line)[ FD ]
Line_9 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_31 $$ wr.close()[ FD ]
Line_24 $$ wr = new OutputStreamWriter(conn.getOutputStream())-->Line_31 $$ wr.close()[ FD ]
Line_13 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_32 $$ rd.close()[ FD ]
Line_27 $$ rd = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_32 $$ rd.close()[ FD ]
Line_2 $$ public boolean deleteByQuery(String query, int coreId) -->Line_37 $$ return true[ CD ]
Line_15 $$ while ((line = rd.readLine()) != null) -->Line_16 $$ System.out.println(line)[ FD ]
Line_28 $$ while ((line = rd.readLine()) != null) -->Line_29 $$ System.out.println(line)[ FD ]
