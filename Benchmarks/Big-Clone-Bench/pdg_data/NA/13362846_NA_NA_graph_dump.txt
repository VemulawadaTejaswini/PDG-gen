Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException [ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_3 $$ if (contenuFichier != null) [ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_3 $$ if (contenuFichier != null) [ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_4 $$ SupportDocument support = fichierElectronique.getSupport()[ CD ]
Line_4 $$ SupportDocument support = fichierElectronique.getSupport()-->Line_4 $$ SupportDocument support = fichierElectronique.getSupport()[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_4 $$ SupportDocument support = fichierElectronique.getSupport()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_5 $$ support.setFichierElectronique(fichierElectronique)[ CD ]
Line_4 $$ SupportDocument support = fichierElectronique.getSupport()-->Line_5 $$ support.setFichierElectronique(fichierElectronique)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_5 $$ support.setFichierElectronique(fichierElectronique)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()[ CD ]
Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()-->Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()[ CD ]
Line_4 $$ SupportDocument support = fichierElectronique.getSupport()-->Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_7 $$ String nomFichier = contenuFichier.getNomFichier()[ CD ]
Line_7 $$ String nomFichier = contenuFichier.getNomFichier()-->Line_7 $$ String nomFichier = contenuFichier.getNomFichier()[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_7 $$ String nomFichier = contenuFichier.getNomFichier()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)[ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)[ CD ]
Line_7 $$ String nomFichier = contenuFichier.getNomFichier()-->Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_9 $$ if (ficheDocument.getFichierElectronique(nomFichier) != null) [ CD ]
Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()-->Line_9 $$ if (ficheDocument.getFichierElectronique(nomFichier) != null) [ FD ]
Line_7 $$ String nomFichier = contenuFichier.getNomFichier()-->Line_9 $$ if (ficheDocument.getFichierElectronique(nomFichier) != null) [ FD ]
Line_9 $$ if (ficheDocument.getFichierElectronique(nomFichier) != null) -->Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)[ CD ]
Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)-->Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)[ CD ]
Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()-->Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)[ FD ]
Line_7 $$ String nomFichier = contenuFichier.getNomFichier()-->Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)[ FD ]
Line_9 $$ if (ficheDocument.getFichierElectronique(nomFichier) != null) -->Line_11 $$ if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) [ CD ]
Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)-->Line_11 $$ if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) [ FD ]
Line_11 $$ if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) -->Line_11 $$ if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) [ CD ]
Line_10 $$ FichierElectronique fichierElectroniqueExistant = ficheDocument.getFichierElectronique(nomFichier)-->Line_11 $$ if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) [ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_11 $$ if (fichierElectroniqueExistant.getId() != null && !fichierElectroniqueExistant.getId().equals(fichierElectronique.getId())) [ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_15 $$ if (fichierElectronique.getId() == null) [ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_15 $$ if (fichierElectronique.getId() == null) [ FD ]
Line_15 $$ if (fichierElectronique.getId() == null) -->Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) [ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) [ FD ]
Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) -->Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) [ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) [ FD ]
Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) -->Line_17 $$ Long idIgid = OfficeDocumentPropertiesUtil.getIdIGID(contenuFichier)[ CD ]
Line_17 $$ Long idIgid = OfficeDocumentPropertiesUtil.getIdIGID(contenuFichier)-->Line_17 $$ Long idIgid = OfficeDocumentPropertiesUtil.getIdIGID(contenuFichier)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_17 $$ Long idIgid = OfficeDocumentPropertiesUtil.getIdIGID(contenuFichier)[ FD ]
Line_16 $$ if (OfficeDocumentPropertiesUtil.canWriteIdIGID(extension)) -->Line_18 $$ if (idIgid != null) [ CD ]
Line_17 $$ Long idIgid = OfficeDocumentPropertiesUtil.getIdIGID(contenuFichier)-->Line_18 $$ if (idIgid != null) [ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_23 $$ InputStream inputStream = contenuFichier.getInputStream()[ CD ]
Line_23 $$ InputStream inputStream = contenuFichier.getInputStream()-->Line_23 $$ InputStream inputStream = contenuFichier.getInputStream()[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_23 $$ InputStream inputStream = contenuFichier.getInputStream()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_24 $$ OutputStream outputStream = fichierElectronique.getOutputStream()[ CD ]
Line_24 $$ OutputStream outputStream = fichierElectronique.getOutputStream()-->Line_24 $$ OutputStream outputStream = fichierElectronique.getOutputStream()[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_24 $$ OutputStream outputStream = fichierElectronique.getOutputStream()[ FD ]
Line_23 $$ InputStream inputStream = contenuFichier.getInputStream()-->Line_26 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_24 $$ OutputStream outputStream = fichierElectronique.getOutputStream()-->Line_26 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_23 $$ InputStream inputStream = contenuFichier.getInputStream()-->Line_29 $$ inputStream.close()[ FD ]
Line_24 $$ OutputStream outputStream = fichierElectronique.getOutputStream()-->Line_31 $$ outputStream.close()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_34 $$ String typeMime = contenuFichier.getContentType()[ CD ]
Line_34 $$ String typeMime = contenuFichier.getContentType()-->Line_34 $$ String typeMime = contenuFichier.getContentType()[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_34 $$ String typeMime = contenuFichier.getContentType()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_35 $$ long tailleFichier = contenuFichier.getTailleFichier()[ CD ]
Line_35 $$ long tailleFichier = contenuFichier.getTailleFichier()-->Line_35 $$ long tailleFichier = contenuFichier.getTailleFichier()[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_35 $$ long tailleFichier = contenuFichier.getTailleFichier()[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_36 $$ Date dateDerniereModification = new Date()[ CD ]
Line_3 $$ if (contenuFichier != null) -->Line_37 $$ fichierElectronique.setNom(nomFichier)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_37 $$ fichierElectronique.setNom(nomFichier)[ FD ]
Line_7 $$ String nomFichier = contenuFichier.getNomFichier()-->Line_37 $$ fichierElectronique.setNom(nomFichier)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_38 $$ fichierElectronique.setTypeMime(extension)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_38 $$ fichierElectronique.setTypeMime(extension)[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_38 $$ fichierElectronique.setTypeMime(extension)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_39 $$ creerFormatSiNecessaire(typeMime, extension)[ CD ]
Line_34 $$ String typeMime = contenuFichier.getContentType()-->Line_39 $$ creerFormatSiNecessaire(typeMime, extension)[ FD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_39 $$ creerFormatSiNecessaire(typeMime, extension)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_40 $$ fichierElectronique.setTaille(tailleFichier)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_40 $$ fichierElectronique.setTaille(tailleFichier)[ FD ]
Line_35 $$ long tailleFichier = contenuFichier.getTailleFichier()-->Line_40 $$ fichierElectronique.setTaille(tailleFichier)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_41 $$ fichierElectronique.setDateDerniereModification(dateDerniereModification)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_41 $$ fichierElectronique.setDateDerniereModification(dateDerniereModification)[ FD ]
Line_36 $$ Date dateDerniereModification = new Date()-->Line_41 $$ fichierElectronique.setDateDerniereModification(dateDerniereModification)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_42 $$ fichierElectronique.setSoumetteur(utilisateurCourant)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_42 $$ fichierElectronique.setSoumetteur(utilisateurCourant)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_42 $$ fichierElectronique.setSoumetteur(utilisateurCourant)[ FD ]
Line_3 $$ if (contenuFichier != null) -->Line_43 $$ if (extension.endsWith("msg")) [ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_43 $$ if (extension.endsWith("msg")) [ FD ]
Line_43 $$ if (extension.endsWith("msg")) -->Line_43 $$ if (extension.endsWith("msg")) [ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_43 $$ if (extension.endsWith("msg")) [ FD ]
Line_43 $$ if (extension.endsWith("msg")) -->Line_44 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, contenuFichier.getInputStream(), utilisateurCourant)[ CD ]
Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()-->Line_44 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, contenuFichier.getInputStream(), utilisateurCourant)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_44 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, contenuFichier.getInputStream(), utilisateurCourant)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_44 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, contenuFichier.getInputStream(), utilisateurCourant)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_44 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, contenuFichier.getInputStream(), utilisateurCourant)[ FD ]
Line_43 $$ if (extension.endsWith("msg")) -->Line_45 $$ if (extension.endsWith("eml")) [ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_45 $$ if (extension.endsWith("eml")) [ FD ]
Line_45 $$ if (extension.endsWith("eml")) -->Line_45 $$ if (extension.endsWith("eml")) [ CD ]
Line_8 $$ String extension = FilenameUtils.getExtension(nomFichier)-->Line_45 $$ if (extension.endsWith("eml")) [ FD ]
Line_45 $$ if (extension.endsWith("eml")) -->Line_46 $$ Map<String, Object> properties = new GestionnaireProprietesMimeMessageParser().parseMsg(contenuFichier.getInputStream())[ CD ]
Line_46 $$ Map<String, Object> properties = new GestionnaireProprietesMimeMessageParser().parseMsg(contenuFichier.getInputStream())-->Line_46 $$ Map<String, Object> properties = new GestionnaireProprietesMimeMessageParser().parseMsg(contenuFichier.getInputStream())[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_46 $$ Map<String, Object> properties = new GestionnaireProprietesMimeMessageParser().parseMsg(contenuFichier.getInputStream())[ FD ]
Line_45 $$ if (extension.endsWith("eml")) -->Line_47 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, properties, utilisateurCourant)[ CD ]
Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()-->Line_47 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, properties, utilisateurCourant)[ FD ]
Line_46 $$ Map<String, Object> properties = new GestionnaireProprietesMimeMessageParser().parseMsg(contenuFichier.getInputStream())-->Line_47 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, properties, utilisateurCourant)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_47 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, properties, utilisateurCourant)[ FD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_47 $$ CourrielUtils.peuplerMetadonneesCourriel(fichierElectronique.getNom(), ficheDocument, properties, utilisateurCourant)[ FD ]
Line_45 $$ if (extension.endsWith("eml")) -->Line_49 $$ FGDProprietesDocumentUtils.copierMetadonneesProprietes(fichierElectronique, ficheDocument)[ CD ]
Line_2 $$ public static void setContenu(ContenuFichierElectronique contenuFichier, FichierElectronique fichierElectronique, UtilisateurIFGD utilisateurCourant) throws IOException, DocumentVideException -->Line_49 $$ FGDProprietesDocumentUtils.copierMetadonneesProprietes(fichierElectronique, ficheDocument)[ FD ]
Line_6 $$ FicheDocument ficheDocument = support.getFicheDocument()-->Line_49 $$ FGDProprietesDocumentUtils.copierMetadonneesProprietes(fichierElectronique, ficheDocument)[ FD ]
