Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException [ CD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_3 $$ MyDBConnection c = new MyDBConnection()[ CD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_4 $$ c.init()[ CD ]
Line_3 $$ MyDBConnection c = new MyDBConnection()-->Line_4 $$ c.init()[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_5 $$ Connection conn = c.getMyConnection()[ CD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_5 $$ Connection conn = c.getMyConnection()[ CD ]
Line_3 $$ MyDBConnection c = new MyDBConnection()-->Line_5 $$ Connection conn = c.getMyConnection()[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)[ CD ]
Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)-->Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)[ CD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_7 $$ ps.setInt(1, quantita)[ CD ]
Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)-->Line_7 $$ ps.setInt(1, quantita)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_7 $$ ps.setInt(1, quantita)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_8 $$ ps.setDate(2, d)[ CD ]
Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)-->Line_8 $$ ps.setDate(2, d)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_8 $$ ps.setDate(2, d)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_9 $$ ps.setDouble(3, price)[ CD ]
Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)-->Line_9 $$ ps.setDouble(3, price)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_9 $$ ps.setDouble(3, price)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_10 $$ ps.setInt(4, id)[ CD ]
Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)-->Line_10 $$ ps.setInt(4, id)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_10 $$ ps.setInt(4, id)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_11 $$ ps.executeUpdate()[ CD ]
Line_6 $$ PreparedStatement ps = conn.prepareStatement(insertAcquisto)-->Line_11 $$ ps.executeUpdate()[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_12 $$ double newPrice = price[ CD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_13 $$ int newQ = quantita[ CD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)[ CD ]
Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)-->Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)[ CD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_15 $$ if (rs.next()) [ CD ]
Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)-->Line_15 $$ if (rs.next()) [ FD ]
Line_15 $$ if (rs.next()) -->Line_15 $$ if (rs.next()) [ CD ]
Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)-->Line_15 $$ if (rs.next()) [ FD ]
Line_15 $$ if (rs.next()) -->Line_16 $$ int oldQ = rs.getInt(1)[ CD ]
Line_16 $$ int oldQ = rs.getInt(1)-->Line_16 $$ int oldQ = rs.getInt(1)[ CD ]
Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)-->Line_16 $$ int oldQ = rs.getInt(1)[ FD ]
Line_15 $$ if (rs.next()) -->Line_17 $$ double oldPrice = rs.getDouble(2)[ CD ]
Line_17 $$ double oldPrice = rs.getDouble(2)-->Line_17 $$ double oldPrice = rs.getDouble(2)[ CD ]
Line_14 $$ ResultSet rs = MyDBConnection.executeQuery(queryPrezzo.replace("?", "" + id), conn)-->Line_17 $$ double oldPrice = rs.getDouble(2)[ FD ]
Line_15 $$ if (rs.next()) -->Line_18 $$ newQ = quantita + oldQ[ CD ]
Line_13 $$ int newQ = quantita-->Line_18 $$ newQ = quantita + oldQ[ FD ]
Line_18 $$ newQ = quantita + oldQ-->Line_18 $$ newQ = quantita + oldQ[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_18 $$ newQ = quantita + oldQ[ FD ]
Line_16 $$ int oldQ = rs.getInt(1)-->Line_18 $$ newQ = quantita + oldQ[ FD ]
Line_15 $$ if (rs.next()) -->Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ[ CD ]
Line_12 $$ double newPrice = price-->Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ[ FD ]
Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ-->Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ[ FD ]
Line_13 $$ int newQ = quantita-->Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ[ FD ]
Line_18 $$ newQ = quantita + oldQ-->Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ[ FD ]
Line_15 $$ if (rs.next()) -->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ CD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ FD ]
Line_12 $$ double newPrice = price-->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ FD ]
Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ-->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ FD ]
Line_13 $$ int newQ = quantita-->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ FD ]
Line_18 $$ newQ = quantita + oldQ-->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_20 $$ updatePortafoglio(conn, newPrice, newQ, id)[ FD ]
Line_15 $$ if (rs.next()) -->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ CD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ FD ]
Line_2 $$ public static void nuovoAcquisto(int quantita, Date d, double price, int id) throws SQLException -->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ FD ]
Line_12 $$ double newPrice = price-->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ FD ]
Line_19 $$ newPrice = (oldPrice * oldQ + price * quantita) / newQ-->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ FD ]
Line_13 $$ int newQ = quantita-->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ FD ]
Line_18 $$ newQ = quantita + oldQ-->Line_21 $$ insertPortafoglio(conn, id, newPrice, newQ)[ FD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_23 $$ conn.commit()[ FD ]
Line_5 $$ Connection conn = c.getMyConnection()-->Line_25 $$ conn.rollback()[ FD ]
Line_3 $$ MyDBConnection c = new MyDBConnection()-->Line_28 $$ c.close()[ FD ]
