Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String getDigest(String seed, byte[] code) [ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_5 $$ md.update(seed.getBytes("UTF-8"))[ FD ]
Line_2 $$ public static String getDigest(String seed, byte[] code) -->Line_5 $$ md.update(seed.getBytes("UTF-8"))[ FD ]
Line_6 $$ byte[] passwordMD5Byte = md.digest(code)-->Line_6 $$ byte[] passwordMD5Byte = md.digest(code)[ CD ]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_6 $$ byte[] passwordMD5Byte = md.digest(code)[ FD ]
Line_2 $$ public static String getDigest(String seed, byte[] code) -->Line_6 $$ byte[] passwordMD5Byte = md.digest(code)[ FD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ CD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ CD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ FD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ CD ]
Line_7 $$ StringBuffer sb = new StringBuffer()-->Line_8 $$ sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ FD ]
Line_9 $$ return sb.toString()-->Line_9 $$ return sb.toString()[ CD ]
Line_7 $$ StringBuffer sb = new StringBuffer()-->Line_9 $$ return sb.toString()[ FD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ FD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ FD ]
Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))-->Line_8 $$ for (int i = 0; i < passwordMD5Byte.length; i++) sb.append(Integer.toHexString(passwordMD5Byte[i] & 0XFF))[ FD ]
