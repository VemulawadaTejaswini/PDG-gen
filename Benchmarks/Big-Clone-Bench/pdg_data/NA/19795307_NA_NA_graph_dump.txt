Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void doRecurringPayment(Subscription subscription) [ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_3 $$ int amount = Math.round(subscription.getTotalCostWithDiscounts() * 100.0f)[ CD ]
Line_3 $$ int amount = Math.round(subscription.getTotalCostWithDiscounts() * 100.0f)-->Line_3 $$ int amount = Math.round(subscription.getTotalCostWithDiscounts() * 100.0f)[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_3 $$ int amount = Math.round(subscription.getTotalCostWithDiscounts() * 100.0f)[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_4 $$ String currency = subscription.getCurrency()[ CD ]
Line_4 $$ String currency = subscription.getCurrency()-->Line_4 $$ String currency = subscription.getCurrency()[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_4 $$ String currency = subscription.getCurrency()[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_5 $$ String aliasCC = subscription.getAliasCC()[ CD ]
Line_5 $$ String aliasCC = subscription.getAliasCC()-->Line_5 $$ String aliasCC = subscription.getAliasCC()[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_5 $$ String aliasCC = subscription.getAliasCC()[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_6 $$ String expm = subscription.getLastCardExpm()[ CD ]
Line_6 $$ String expm = subscription.getLastCardExpm()-->Line_6 $$ String expm = subscription.getLastCardExpm()[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_6 $$ String expm = subscription.getLastCardExpm()[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_7 $$ String expy = subscription.getLastCardExpy()[ CD ]
Line_7 $$ String expy = subscription.getLastCardExpy()-->Line_7 $$ String expy = subscription.getLastCardExpy()[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_7 $$ String expy = subscription.getLastCardExpy()[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_8 $$ String subscriptionId = String.valueOf(subscription.getSubscriptionId())[ CD ]
Line_8 $$ String subscriptionId = String.valueOf(subscription.getSubscriptionId())-->Line_8 $$ String subscriptionId = String.valueOf(subscription.getSubscriptionId())[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_8 $$ String subscriptionId = String.valueOf(subscription.getSubscriptionId())[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_9 $$ StringBuffer xmlSB = new StringBuffer("")[ CD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_10 $$ xmlSB.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_10 $$ xmlSB.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_11 $$ xmlSB.append("<authorizationService version=\"1\">\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_11 $$ xmlSB.append("<authorizationService version=\"1\">\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_12 $$ xmlSB.append(" <body merchantId=\"" + getMerchantId() + "\" testOnly=\"" + getTestOnly() + "\">\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_12 $$ xmlSB.append(" <body merchantId=\"" + getMerchantId() + "\" testOnly=\"" + getTestOnly() + "\">\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_13 $$ xmlSB.append("    <transaction refno=\"" + REF_NO + "\">\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_13 $$ xmlSB.append("    <transaction refno=\"" + REF_NO + "\">\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_14 $$ xmlSB.append("      <request>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_14 $$ xmlSB.append("      <request>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_15 $$ xmlSB.append("        <amount>" + amount + "</amount>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_15 $$ xmlSB.append("        <amount>" + amount + "</amount>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_16 $$ xmlSB.append("        <currency>" + currency + "</currency>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_16 $$ xmlSB.append("        <currency>" + currency + "</currency>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_17 $$ xmlSB.append("        <aliasCC>" + aliasCC + "</aliasCC>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_17 $$ xmlSB.append("        <aliasCC>" + aliasCC + "</aliasCC>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_18 $$ xmlSB.append("        <expm>" + expm + "</expm>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_18 $$ xmlSB.append("        <expm>" + expm + "</expm>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_19 $$ xmlSB.append("        <expy>" + expy + "</expy>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_19 $$ xmlSB.append("        <expy>" + expy + "</expy>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_20 $$ xmlSB.append("        <subscriptionId>" + subscriptionId + "</subscriptionId>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_20 $$ xmlSB.append("        <subscriptionId>" + subscriptionId + "</subscriptionId>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_21 $$ xmlSB.append("      </request>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_21 $$ xmlSB.append("      </request>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_22 $$ xmlSB.append("    </transaction>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_22 $$ xmlSB.append("    </transaction>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_23 $$ xmlSB.append(" </body>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_23 $$ xmlSB.append(" </body>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_24 $$ xmlSB.append("</authorizationService>\n")[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_24 $$ xmlSB.append("</authorizationService>\n")[ FD ]
Line_2 $$ public void doRecurringPayment(Subscription subscription) -->Line_25 $$ String xmlS = xmlSB.toString()[ CD ]
Line_25 $$ String xmlS = xmlSB.toString()-->Line_25 $$ String xmlS = xmlSB.toString()[ CD ]
Line_9 $$ StringBuffer xmlSB = new StringBuffer("")-->Line_25 $$ String xmlS = xmlSB.toString()[ FD ]
Line_27 $$ java.net.URL murl = new java.net.URL(getRecurringPaymentUrl())-->Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()[ FD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_29 $$ mcon.setRequestMethod("POST")[ FD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_30 $$ mcon.setRequestProperty("encoding", "UTF-8")[ FD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_31 $$ mcon.setRequestProperty("Content-Type", "text/xml")[ FD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_32 $$ mcon.setRequestProperty("Content-length", String.valueOf(xmlS.length()))[ FD ]
Line_25 $$ String xmlS = xmlSB.toString()-->Line_32 $$ mcon.setRequestProperty("Content-length", String.valueOf(xmlS.length()))[ FD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_33 $$ mcon.setDoOutput(true)[ FD ]
Line_34 $$ java.io.OutputStream outs = mcon.getOutputStream()-->Line_34 $$ java.io.OutputStream outs = mcon.getOutputStream()[ CD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_34 $$ java.io.OutputStream outs = mcon.getOutputStream()[ FD ]
Line_34 $$ java.io.OutputStream outs = mcon.getOutputStream()-->Line_35 $$ outs.write(xmlS.getBytes("UTF-8"))[ FD ]
Line_25 $$ String xmlS = xmlSB.toString()-->Line_35 $$ outs.write(xmlS.getBytes("UTF-8"))[ FD ]
Line_34 $$ java.io.OutputStream outs = mcon.getOutputStream()-->Line_36 $$ outs.close()[ FD ]
Line_28 $$ java.net.HttpURLConnection mcon = (java.net.HttpURLConnection) murl.openConnection()-->Line_37 $$ java.io.BufferedReader inps = new java.io.BufferedReader(new java.io.InputStreamReader(mcon.getInputStream()))[ FD ]
Line_40 $$ while ((s = inps.readLine()) != null) -->Line_40 $$ while ((s = inps.readLine()) != null) [ FD ]
Line_39 $$ String s = null-->Line_40 $$ while ((s = inps.readLine()) != null) [ FD ]
Line_40 $$ while ((s = inps.readLine()) != null) -->Line_40 $$ while ((s = inps.readLine()) != null) [ CD ]
Line_37 $$ java.io.BufferedReader inps = new java.io.BufferedReader(new java.io.InputStreamReader(mcon.getInputStream()))-->Line_40 $$ while ((s = inps.readLine()) != null) [ FD ]
Line_40 $$ while ((s = inps.readLine()) != null) -->Line_41 $$ respSB.append(s)[ CD ]
Line_38 $$ StringBuffer respSB = new StringBuffer("")-->Line_41 $$ respSB.append(s)[ FD ]
Line_40 $$ while ((s = inps.readLine()) != null) -->Line_41 $$ respSB.append(s)[ FD ]
Line_39 $$ String s = null-->Line_41 $$ respSB.append(s)[ FD ]
Line_37 $$ java.io.BufferedReader inps = new java.io.BufferedReader(new java.io.InputStreamReader(mcon.getInputStream()))-->Line_43 $$ inps.close()[ FD ]
Line_44 $$ String respXML = respSB.toString()-->Line_44 $$ String respXML = respSB.toString()[ CD ]
Line_38 $$ StringBuffer respSB = new StringBuffer("")-->Line_44 $$ String respXML = respSB.toString()[ FD ]
Line_44 $$ String respXML = respSB.toString()-->Line_45 $$ processReccurentPaymentResponce(respXML)[ FD ]
Line_40 $$ while ((s = inps.readLine()) != null) -->Line_41 $$ respSB.append(s)[ FD ]
