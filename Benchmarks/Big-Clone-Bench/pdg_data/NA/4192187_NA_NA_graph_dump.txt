Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception [ CD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())[ CD ]
Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())-->Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())[ CD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_4 $$ validate(bean, beanInfo, "copyTo")[ CD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_4 $$ validate(bean, beanInfo, "copyTo")[ FD ]
Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())-->Line_4 $$ validate(bean, beanInfo, "copyTo")[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_5 $$ if (blobCache != null && length < MAX_BLOB_CACHE_LENGHT) [ CD ]
Line_5 $$ if (blobCache != null && length < MAX_BLOB_CACHE_LENGHT) -->Line_6 $$ byte[] bytes = null[ CD ]
Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)-->Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)[ CD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)[ FD ]
Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())-->Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)[ FD ]
Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)-->Line_9 $$ if (blobCache.contains(key))[ FD ]
Line_9 $$ if (blobCache.contains(key))-->Line_9 $$ if (blobCache.contains(key))[ CD ]
Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)-->Line_9 $$ if (blobCache.contains(key))[ FD ]
Line_9 $$ if (blobCache.contains(key))-->Line_9 $$ bytes = (byte[]) blobCache.get(key)[ CD ]
Line_6 $$ byte[] bytes = null-->Line_9 $$ bytes = (byte[]) blobCache.get(key)[ FD ]
Line_9 $$ bytes = (byte[]) blobCache.get(key)-->Line_9 $$ bytes = (byte[]) blobCache.get(key)[ FD ]
Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)-->Line_9 $$ bytes = (byte[]) blobCache.get(key)[ FD ]
Line_9 $$ if (blobCache.contains(key))-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ CD ]
Line_8 $$ String key = makeUniqueKey(bean, beanInfo, offset, length)-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_6 $$ byte[] bytes = null-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_9 $$ bytes = (byte[]) blobCache.get(key)-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ CD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())-->Line_9 $$ blobCache.put(key, bytes = toByteArray(bean, offset, length, beanInfo))[ FD ]
Line_5 $$ if (blobCache != null && length < MAX_BLOB_CACHE_LENGHT) -->Line_11 $$ InputStream in = new ByteArrayInputStream(bytes)[ CD ]
Line_5 $$ if (blobCache != null && length < MAX_BLOB_CACHE_LENGHT) -->Line_12 $$ IOUtils.copy(in, out)[ CD ]
Line_11 $$ InputStream in = new ByteArrayInputStream(bytes)-->Line_12 $$ IOUtils.copy(in, out)[ FD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_12 $$ IOUtils.copy(in, out)[ FD ]
Line_5 $$ if (blobCache != null && length < MAX_BLOB_CACHE_LENGHT) -->Line_13 $$ in.close()[ CD ]
Line_11 $$ InputStream in = new ByteArrayInputStream(bytes)-->Line_13 $$ in.close()[ FD ]
Line_5 $$ if (blobCache != null && length < MAX_BLOB_CACHE_LENGHT) -->Line_15 $$ jdbcManager.queryScript(beanInfo.getBlobInfo(jdbcManager.getDb()).getReadScript(), bean, new JdbcOutputStreamRowMapper(out, offset, length))[ CD ]
Line_2 $$ public void copyTo(Bean bean, OutputStream out, int offset, int length) throws Exception -->Line_15 $$ jdbcManager.queryScript(beanInfo.getBlobInfo(jdbcManager.getDb()).getReadScript(), bean, new JdbcOutputStreamRowMapper(out, offset, length))[ FD ]
Line_3 $$ BeanInfo beanInfo = getBeanInfo(bean.getClass())-->Line_15 $$ jdbcManager.queryScript(beanInfo.getBlobInfo(jdbcManager.getDb()).getReadScript(), bean, new JdbcOutputStreamRowMapper(out, offset, length))[ FD ]
