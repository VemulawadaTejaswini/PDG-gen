Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected String getPasswordHash(String password) [ CD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_3 $$ MessageDigest md = null[ CD ]
Line_3 $$ MessageDigest md = null-->Line_5 $$ md = MessageDigest.getInstance("MD5")[ FD ]
Line_5 $$ md = MessageDigest.getInstance("MD5")-->Line_5 $$ md = MessageDigest.getInstance("MD5")[ FD ]
Line_5 $$ md = MessageDigest.getInstance("MD5")-->Line_5 $$ md = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_10 $$ md.update(password.getBytes())[ CD ]
Line_3 $$ MessageDigest md = null-->Line_10 $$ md.update(password.getBytes())[ FD ]
Line_5 $$ md = MessageDigest.getInstance("MD5")-->Line_10 $$ md.update(password.getBytes())[ FD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_10 $$ md.update(password.getBytes())[ FD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_11 $$ byte[] hash = md.digest()[ CD ]
Line_11 $$ byte[] hash = md.digest()-->Line_11 $$ byte[] hash = md.digest()[ CD ]
Line_3 $$ MessageDigest md = null-->Line_11 $$ byte[] hash = md.digest()[ FD ]
Line_5 $$ md = MessageDigest.getInstance("MD5")-->Line_11 $$ byte[] hash = md.digest()[ FD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_12 $$ StringBuffer buf = new StringBuffer()[ CD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_2 $$ protected String getPasswordHash(String password) [ CD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ buf.append(Integer.toHexString(hash[i] & 0xff))[ CD ]
Line_12 $$ StringBuffer buf = new StringBuffer()-->Line_14 $$ buf.append(Integer.toHexString(hash[i] & 0xff))[ FD ]
Line_2 $$ protected String getPasswordHash(String password) -->Line_16 $$ return buf.toString()[ CD ]
Line_16 $$ return buf.toString()-->Line_16 $$ return buf.toString()[ CD ]
Line_12 $$ StringBuffer buf = new StringBuffer()-->Line_16 $$ return buf.toString()[ FD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hash.length; i++) -->Line_13 $$ for (int i = 0; i < hash.length; i++) [ FD ]
