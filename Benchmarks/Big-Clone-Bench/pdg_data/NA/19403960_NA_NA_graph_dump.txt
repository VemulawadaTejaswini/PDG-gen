Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException [ CD ]
Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException -->Line_3 $$ final Set<String> proteins = new HashSet<String>()[ CD ]
Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException -->Line_4 $$ HttpURLConnection connection = null[ CD ]
Line_6 $$ final String evCodeList = join(evCodes)-->Line_6 $$ final String evCodeList = join(evCodes)[ CD ]
Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException -->Line_6 $$ final String evCodeList = join(evCodes)[ FD ]
Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException -->Line_7 $$ final URL url = new URL(String.format(__urlTempl4, goCode, evCodeList, taxon, limit + 1))[ FD ]
Line_6 $$ final String evCodeList = join(evCodes)-->Line_7 $$ final URL url = new URL(String.format(__urlTempl4, goCode, evCodeList, taxon, limit + 1))[ FD ]
Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException -->Line_7 $$ final URL url = new URL(String.format(__urlTempl4, goCode, evCodeList, taxon, limit + 1))[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ final URL url = new URL(String.format(__urlTempl4, goCode, evCodeList, taxon, limit + 1))-->Line_8 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_9 $$ connection.setConnectTimeout(__connTimeout)[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.setConnectTimeout(__connTimeout)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_10 $$ connection.setReadTimeout(__readTimeout)[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_10 $$ connection.setReadTimeout(__readTimeout)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_11 $$ connection.setRequestProperty("Connection", "close")[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_11 $$ connection.setRequestProperty("Connection", "close")[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_12 $$ connection.connect()[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_12 $$ connection.connect()[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_13 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_13 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()))[ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_15 $$ while ((line = br.readLine()) != null) [ FD ]
Line_14 $$ String line-->Line_15 $$ while ((line = br.readLine()) != null) [ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_15 $$ while ((line = br.readLine()) != null) [ CD ]
Line_13 $$ final BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()))-->Line_15 $$ while ((line = br.readLine()) != null) [ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_16 $$ proteins.add(line.trim())[ CD ]
Line_3 $$ final Set<String> proteins = new HashSet<String>()-->Line_16 $$ proteins.add(line.trim())[ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_16 $$ proteins.add(line.trim())[ FD ]
Line_14 $$ String line-->Line_16 $$ proteins.add(line.trim())[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_19 $$ if (connection != null)[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_19 $$ if (connection != null)[ FD ]
Line_19 $$ if (connection != null)-->Line_19 $$ connection.disconnect()[ CD ]
Line_4 $$ HttpURLConnection connection = null-->Line_19 $$ connection.disconnect()[ FD ]
Line_8 $$ connection = (HttpURLConnection) url.openConnection()-->Line_19 $$ connection.disconnect()[ FD ]
Line_2 $$ public static Set<String> getProteins(final String goCode, final Set<String> evCodes, final int taxon, final int limit) throws IOException -->Line_21 $$ return filter(proteins)[ CD ]
Line_21 $$ return filter(proteins)-->Line_21 $$ return filter(proteins)[ CD ]
Line_3 $$ final Set<String> proteins = new HashSet<String>()-->Line_21 $$ return filter(proteins)[ FD ]
Line_15 $$ while ((line = br.readLine()) != null) -->Line_16 $$ proteins.add(line.trim())[ FD ]
