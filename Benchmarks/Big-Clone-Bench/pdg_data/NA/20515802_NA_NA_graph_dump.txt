Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static synchronized void calcLocalFileHash() [ CD ]
Line_2 $$ private static synchronized void calcLocalFileHash() -->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_3 $$ long startTime = System.currentTimeMillis()-->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_2 $$ private static synchronized void calcLocalFileHash() -->Line_4 $$ if (currentFileHash != null)[ CD ]
Line_4 $$ if (currentFileHash != null)-->Line_4 $$ return[ CD ]
Line_2 $$ private static synchronized void calcLocalFileHash() -->Line_5 $$ List fileList = getAllFiles("/", new AllFilesFilter())[ CD ]
Line_5 $$ List fileList = getAllFiles("/", new AllFilesFilter())-->Line_5 $$ List fileList = getAllFiles("/", new AllFilesFilter())[ CD ]
Line_2 $$ private static synchronized void calcLocalFileHash() -->Line_6 $$ int len = 0[ CD ]
Line_2 $$ private static synchronized void calcLocalFileHash() -->Line_7 $$ byte[] buf = new byte[1024][ CD ]
Line_9 $$ MessageDigest digest = MessageDigest.getInstance("SHA")-->Line_9 $$ MessageDigest digest = MessageDigest.getInstance("SHA")[ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) [ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) [ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) [ CD ]
Line_5 $$ List fileList = getAllFiles("/", new AllFilesFilter())-->Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) [ FD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_11 $$ String path = (String) i.next()[ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_11 $$ String path = (String) i.next()[ FD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)[ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_13 $$ if (lfr.isDirectory()) [ CD ]
Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)-->Line_13 $$ if (lfr.isDirectory()) [ FD ]
Line_13 $$ if (lfr.isDirectory()) -->Line_13 $$ if (lfr.isDirectory()) [ CD ]
Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)-->Line_13 $$ if (lfr.isDirectory()) [ FD ]
Line_13 $$ if (lfr.isDirectory()) -->Line_14 $$ digest.update(path.getBytes("UTF-8"))[ CD ]
Line_9 $$ MessageDigest digest = MessageDigest.getInstance("SHA")-->Line_14 $$ digest.update(path.getBytes("UTF-8"))[ FD ]
Line_11 $$ String path = (String) i.next()-->Line_14 $$ digest.update(path.getBytes("UTF-8"))[ FD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_17 $$ InputStream stream = lfr.getFileAsInputStream()[ CD ]
Line_17 $$ InputStream stream = lfr.getFileAsInputStream()-->Line_17 $$ InputStream stream = lfr.getFileAsInputStream()[ CD ]
Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)-->Line_17 $$ InputStream stream = lfr.getFileAsInputStream()[ FD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_18 $$ while ((len = stream.read(buf)) != -1) [ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) [ CD ]
Line_18 $$ while ((len = stream.read(buf)) != -1) -->Line_18 $$ while ((len = stream.read(buf)) != -1) [ FD ]
Line_6 $$ int len = 0-->Line_18 $$ while ((len = stream.read(buf)) != -1) [ FD ]
Line_18 $$ while ((len = stream.read(buf)) != -1) -->Line_18 $$ while ((len = stream.read(buf)) != -1) [ CD ]
Line_17 $$ InputStream stream = lfr.getFileAsInputStream()-->Line_18 $$ while ((len = stream.read(buf)) != -1) [ FD ]
Line_7 $$ byte[] buf = new byte[1024]-->Line_18 $$ while ((len = stream.read(buf)) != -1) [ FD ]
Line_18 $$ while ((len = stream.read(buf)) != -1) -->Line_19 $$ digest.update(buf, 0, len)[ CD ]
Line_9 $$ MessageDigest digest = MessageDigest.getInstance("SHA")-->Line_19 $$ digest.update(buf, 0, len)[ FD ]
Line_7 $$ byte[] buf = new byte[1024]-->Line_19 $$ digest.update(buf, 0, len)[ FD ]
Line_18 $$ while ((len = stream.read(buf)) != -1) -->Line_19 $$ digest.update(buf, 0, len)[ FD ]
Line_6 $$ int len = 0-->Line_19 $$ digest.update(buf, 0, len)[ FD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_21 $$ stream.close()[ CD ]
Line_17 $$ InputStream stream = lfr.getFileAsInputStream()-->Line_21 $$ stream.close()[ FD ]
Line_9 $$ MessageDigest digest = MessageDigest.getInstance("SHA")-->Line_23 $$ currentFileHash = new String(Hex.encodeHex(digest.digest()))[ FD ]
Line_28 $$ if (log.isDebugEnabled())-->Line_28 $$ if (log.isDebugEnabled())[ CD ]
Line_28 $$ if (log.isDebugEnabled())-->Line_28 $$ log.debug("Needed " + (System.currentTimeMillis() - startTime) + "ms for hash calculation")[ CD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) [ FD ]
Line_10 $$ for (Iterator i = fileList.iterator(); i.hasNext(); ) -->Line_11 $$ String path = (String) i.next()[ FD ]
Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)-->Line_13 $$ if (lfr.isDirectory()) [ FD ]
Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)-->Line_13 $$ if (lfr.isDirectory()) [ FD ]
Line_11 $$ String path = (String) i.next()-->Line_14 $$ digest.update(path.getBytes("UTF-8"))[ FD ]
Line_12 $$ LocalFileResource lfr = new LocalFileResource(path)-->Line_17 $$ InputStream stream = lfr.getFileAsInputStream()[ FD ]
Line_17 $$ InputStream stream = lfr.getFileAsInputStream()-->Line_21 $$ stream.close()[ FD ]
Line_18 $$ while ((len = stream.read(buf)) != -1) -->Line_19 $$ digest.update(buf, 0, len)[ FD ]
