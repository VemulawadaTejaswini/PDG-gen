Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public final void run() [ CD ]
Line_2 $$ public final void run() -->Line_4 $$ String s = findcachedir()[ CD ]
Line_4 $$ String s = findcachedir()-->Line_4 $$ String s = findcachedir()[ CD ]
Line_2 $$ public final void run() -->Line_5 $$ uid = getuid(s)[ CD ]
Line_4 $$ String s = findcachedir()-->Line_5 $$ uid = getuid(s)[ FD ]
Line_7 $$ File file = new File(s + "main_file_cache.dat")-->Line_8 $$ if (file.exists() && file.length() > 0x3200000L)[ FD ]
Line_7 $$ File file = new File(s + "main_file_cache.dat")-->Line_8 $$ if (file.exists() && file.length() > 0x3200000L)[ FD ]
Line_8 $$ if (file.exists() && file.length() > 0x3200000L)-->Line_8 $$ file.delete()[ CD ]
Line_7 $$ File file = new File(s + "main_file_cache.dat")-->Line_8 $$ file.delete()[ FD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ CD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ CD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ FD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ CD ]
Line_2 $$ public final void run() -->Line_14 $$ for (int i = threadliveid; threadliveid == i; ) [ CD ]
Line_2 $$ public final void run() -->Line_2 $$ public final void run() [ CD ]
Line_14 $$ for (int i = threadliveid; threadliveid == i; ) -->Line_14 $$ for (int i = threadliveid; threadliveid == i; ) [ CD ]
Line_14 $$ for (int i = threadliveid; threadliveid == i; ) -->Line_15 $$ if (socketreq != 0) [ CD ]
Line_15 $$ if (socketreq != 0) -->Line_22 $$ if (threadreq != null) [ CD ]
Line_22 $$ if (threadreq != null) -->Line_23 $$ Thread thread = new Thread(threadreq)[ CD ]
Line_22 $$ if (threadreq != null) -->Line_24 $$ thread.setDaemon(true)[ CD ]
Line_23 $$ Thread thread = new Thread(threadreq)-->Line_24 $$ thread.setDaemon(true)[ FD ]
Line_22 $$ if (threadreq != null) -->Line_25 $$ thread.start()[ CD ]
Line_23 $$ Thread thread = new Thread(threadreq)-->Line_25 $$ thread.start()[ FD ]
Line_22 $$ if (threadreq != null) -->Line_26 $$ thread.setPriority(threadreqpri)[ CD ]
Line_23 $$ Thread thread = new Thread(threadreq)-->Line_26 $$ thread.setPriority(threadreqpri)[ FD ]
Line_22 $$ if (threadreq != null) -->Line_28 $$ if (dnsreq != null) [ CD ]
Line_28 $$ if (dnsreq != null) -->Line_35 $$ if (savereq != null) [ CD ]
Line_35 $$ if (savereq != null) -->Line_36 $$ if (savebuf != null)[ CD ]
Line_37 $$ FileOutputStream fileoutputstream = new FileOutputStream(s + savereq)-->Line_38 $$ fileoutputstream.write(savebuf, 0, savelen)[ FD ]
Line_37 $$ FileOutputStream fileoutputstream = new FileOutputStream(s + savereq)-->Line_39 $$ fileoutputstream.close()[ FD ]
Line_35 $$ if (savereq != null) -->Line_42 $$ if (waveplay) [ CD ]
Line_35 $$ if (savereq != null) -->Line_46 $$ if (midiplay) [ CD ]
Line_35 $$ if (savereq != null) -->Line_51 $$ if (urlreq != null) [ CD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ FD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ FD ]
Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")-->Line_10 $$ for (int j = 0; j < 5; j++) cache_idx[j] = new RandomAccessFile(s + "main_file_cache.idx" + j, "rw")[ FD ]
Line_14 $$ for (int i = threadliveid; threadliveid == i; ) -->Line_14 $$ for (int i = threadliveid; threadliveid == i; ) [ FD ]
Line_14 $$ for (int i = threadliveid; threadliveid == i; ) -->Line_14 $$ for (int i = threadliveid; threadliveid == i; ) [ FD ]
Line_23 $$ Thread thread = new Thread(threadreq)-->Line_24 $$ thread.setDaemon(true)[ FD ]
Line_23 $$ Thread thread = new Thread(threadreq)-->Line_25 $$ thread.start()[ FD ]
Line_23 $$ Thread thread = new Thread(threadreq)-->Line_26 $$ thread.setPriority(threadreqpri)[ FD ]
Line_37 $$ FileOutputStream fileoutputstream = new FileOutputStream(s + savereq)-->Line_38 $$ fileoutputstream.write(savebuf, 0, savelen)[ FD ]
Line_37 $$ FileOutputStream fileoutputstream = new FileOutputStream(s + savereq)-->Line_39 $$ fileoutputstream.close()[ FD ]
