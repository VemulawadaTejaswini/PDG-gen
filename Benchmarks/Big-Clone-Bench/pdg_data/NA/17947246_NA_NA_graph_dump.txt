Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception [ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_3 $$ URL url = null[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_4 $$ HttpURLConnection conn = null[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_5 $$ InputStream istream = null[ CD ]
Line_3 $$ URL url = null-->Line_7 $$ url = new URL(urlLocation)[ FD ]
Line_7 $$ url = new URL(urlLocation)-->Line_7 $$ url = new URL(urlLocation)[ FD ]
Line_4 $$ HttpURLConnection conn = null-->Line_8 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_3 $$ URL url = null-->Line_8 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ url = new URL(urlLocation)-->Line_8 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_12 $$ loadCookies(urlLocation, conn, c)[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_12 $$ loadCookies(urlLocation, conn, c)[ FD ]
Line_4 $$ HttpURLConnection conn = null-->Line_12 $$ loadCookies(urlLocation, conn, c)[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ loadCookies(urlLocation, conn, c)[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_12 $$ loadCookies(urlLocation, conn, c)[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_13 $$ if (headers != null) [ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_13 $$ if (headers != null) [ FD ]
Line_13 $$ if (headers != null) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ CD ]
Line_13 $$ if (headers != null) -->Line_13 $$ if (headers != null) [ CD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_15 $$ String header = (String) headers.get(i)[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_15 $$ String header = (String) headers.get(i)[ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_15 $$ String header = (String) headers.get(i)[ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_16 $$ String key = header.substring(0, header.indexOf(":"))[ CD ]
Line_16 $$ String key = header.substring(0, header.indexOf(":"))-->Line_16 $$ String key = header.substring(0, header.indexOf(":"))[ CD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_16 $$ String key = header.substring(0, header.indexOf(":"))[ FD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_16 $$ String key = header.substring(0, header.indexOf(":"))[ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_17 $$ String value = header.substring(header.indexOf(":") + 2)[ CD ]
Line_17 $$ String value = header.substring(header.indexOf(":") + 2)-->Line_17 $$ String value = header.substring(header.indexOf(":") + 2)[ CD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_17 $$ String value = header.substring(header.indexOf(":") + 2)[ FD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_17 $$ String value = header.substring(header.indexOf(":") + 2)[ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_18 $$ Debug.log("Adding new request header '" + key + "'='" + value + "'")[ CD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_19 $$ conn.setRequestProperty(key, value)[ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_19 $$ conn.setRequestProperty(key, value)[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_19 $$ conn.setRequestProperty(key, value)[ FD ]
Line_16 $$ String key = header.substring(0, header.indexOf(":"))-->Line_19 $$ conn.setRequestProperty(key, value)[ FD ]
Line_17 $$ String value = header.substring(header.indexOf(":") + 2)-->Line_19 $$ conn.setRequestProperty(key, value)[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_22 $$ Debug.debug("Set to use GET, URL=" + urlLocation)[ CD ]
Line_5 $$ InputStream istream = null-->Line_24 $$ istream = conn.getInputStream()[ FD ]
Line_24 $$ istream = conn.getInputStream()-->Line_24 $$ istream = conn.getInputStream()[ FD ]
Line_24 $$ istream = conn.getInputStream()-->Line_24 $$ istream = conn.getInputStream()[ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_24 $$ istream = conn.getInputStream()[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_24 $$ istream = conn.getInputStream()[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_29 $$ Debug.debug("'GET' - Got input stream.")[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_30 $$ if (conn.getContentLength() == -1) [ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_30 $$ if (conn.getContentLength() == -1) [ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_30 $$ if (conn.getContentLength() == -1) [ FD ]
Line_30 $$ if (conn.getContentLength() == -1) -->Line_31 $$ Debug.debug("Content length = unknown")[ CD ]
Line_30 $$ if (conn.getContentLength() == -1) -->Line_33 $$ Debug.debug("Content length = " + conn.getContentLength())[ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_33 $$ Debug.debug("Content length = " + conn.getContentLength())[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_33 $$ Debug.debug("Content length = " + conn.getContentLength())[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_35 $$ byte data[] = null[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()[ CD ]
Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()-->Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()[ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_37 $$ if (conn.getContentLength() == -1) [ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_37 $$ if (conn.getContentLength() == -1) [ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_37 $$ if (conn.getContentLength() == -1) [ FD ]
Line_37 $$ if (conn.getContentLength() == -1) -->Line_38 $$ String byteSize = NodeUtil.walkNodeTree(Server.getConfig(), "//configuration/object[@type='engine.tunable']/property[@type='engine.unknowncontentsize']/@value")[ CD ]
Line_38 $$ String byteSize = NodeUtil.walkNodeTree(Server.getConfig(), "//configuration/object[@type='engine.tunable']/property[@type='engine.unknowncontentsize']/@value")-->Line_38 $$ String byteSize = NodeUtil.walkNodeTree(Server.getConfig(), "//configuration/object[@type='engine.tunable']/property[@type='engine.unknowncontentsize']/@value")[ CD ]
Line_37 $$ if (conn.getContentLength() == -1) -->Line_39 $$ if (byteSize == null) [ CD ]
Line_38 $$ String byteSize = NodeUtil.walkNodeTree(Server.getConfig(), "//configuration/object[@type='engine.tunable']/property[@type='engine.unknowncontentsize']/@value")-->Line_39 $$ if (byteSize == null) [ FD ]
Line_39 $$ if (byteSize == null) -->Line_40 $$ contentLength = 4096[ CD ]
Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()-->Line_40 $$ contentLength = 4096[ FD ]
Line_40 $$ contentLength = 4096-->Line_40 $$ contentLength = 4096[ FD ]
Line_39 $$ if (byteSize == null) -->Line_42 $$ contentLength = Integer.parseInt(byteSize)[ CD ]
Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()-->Line_42 $$ contentLength = Integer.parseInt(byteSize)[ FD ]
Line_40 $$ contentLength = 4096-->Line_42 $$ contentLength = Integer.parseInt(byteSize)[ FD ]
Line_42 $$ contentLength = Integer.parseInt(byteSize)-->Line_42 $$ contentLength = Integer.parseInt(byteSize)[ FD ]
Line_42 $$ contentLength = Integer.parseInt(byteSize)-->Line_42 $$ contentLength = Integer.parseInt(byteSize)[ CD ]
Line_38 $$ String byteSize = NodeUtil.walkNodeTree(Server.getConfig(), "//configuration/object[@type='engine.tunable']/property[@type='engine.unknowncontentsize']/@value")-->Line_42 $$ contentLength = Integer.parseInt(byteSize)[ FD ]
Line_37 $$ if (conn.getContentLength() == -1) -->Line_44 $$ Debug.debug("Content length unknown.  Allowing fuzz of " + contentLength + " bytes.")[ CD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_48 $$ int dataRead = 0-->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ CD ]
Line_5 $$ InputStream istream = null-->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_24 $$ istream = conn.getInputStream()-->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()-->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_50 $$ if (dataRead == 0) [ CD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_50 $$ if (dataRead == 0) [ FD ]
Line_48 $$ int dataRead = 0-->Line_50 $$ if (dataRead == 0) [ FD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_53 $$ curPos += dataRead[ CD ]
Line_53 $$ curPos += dataRead-->Line_53 $$ curPos += dataRead[ FD ]
Line_36 $$ int curPos = 0, contentLength = conn.getContentLength()-->Line_53 $$ curPos += dataRead[ FD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_53 $$ curPos += dataRead[ FD ]
Line_48 $$ int dataRead = 0-->Line_53 $$ curPos += dataRead[ FD ]
Line_5 $$ InputStream istream = null-->Line_59 $$ istream.close()[ FD ]
Line_24 $$ istream = conn.getInputStream()-->Line_59 $$ istream.close()[ FD ]
Line_4 $$ HttpURLConnection conn = null-->Line_60 $$ conn.disconnect()[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_60 $$ conn.disconnect()[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_66 $$ String dataOut = new String(data)[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_67 $$ int counter = 0[ CD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_69 $$ istream = null[ CD ]
Line_5 $$ InputStream istream = null-->Line_69 $$ istream = null[ FD ]
Line_24 $$ istream = conn.getInputStream()-->Line_69 $$ istream = null[ FD ]
Line_69 $$ istream = null-->Line_69 $$ istream = null[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_70 $$ conn = null[ CD ]
Line_4 $$ HttpURLConnection conn = null-->Line_70 $$ conn = null[ FD ]
Line_8 $$ conn = (HttpURLConnection) url.openConnection()-->Line_70 $$ conn = null[ FD ]
Line_70 $$ conn = null-->Line_70 $$ conn = null[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_71 $$ url = null[ CD ]
Line_3 $$ URL url = null-->Line_71 $$ url = null[ FD ]
Line_7 $$ url = new URL(urlLocation)-->Line_71 $$ url = null[ FD ]
Line_71 $$ url = null-->Line_71 $$ url = null[ FD ]
Line_2 $$ public String readURL(String urlLocation, ArrayList headers, RenderEngine c) throws Exception -->Line_72 $$ return dataOut.trim()[ CD ]
Line_72 $$ return dataOut.trim()-->Line_72 $$ return dataOut.trim()[ CD ]
Line_66 $$ String dataOut = new String(data)-->Line_72 $$ return dataOut.trim()[ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_14 $$ for (int i = 0; i < headers.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < headers.size(); i++) -->Line_15 $$ String header = (String) headers.get(i)[ FD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_16 $$ String key = header.substring(0, header.indexOf(":"))[ FD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_16 $$ String key = header.substring(0, header.indexOf(":"))[ FD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_17 $$ String value = header.substring(header.indexOf(":") + 2)[ FD ]
Line_15 $$ String header = (String) headers.get(i)-->Line_17 $$ String value = header.substring(header.indexOf(":") + 2)[ FD ]
Line_16 $$ String key = header.substring(0, header.indexOf(":"))-->Line_19 $$ conn.setRequestProperty(key, value)[ FD ]
Line_17 $$ String value = header.substring(header.indexOf(":") + 2)-->Line_19 $$ conn.setRequestProperty(key, value)[ FD ]
Line_53 $$ curPos += dataRead-->Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) [ FD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_50 $$ if (dataRead == 0) [ FD ]
Line_49 $$ while ((dataRead = istream.read(data, curPos, contentLength - curPos)) != -1) -->Line_53 $$ curPos += dataRead[ FD ]
