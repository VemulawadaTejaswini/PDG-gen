Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException [ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_3 $$ String[] children[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_4 $$ int i[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_5 $$ InputStream in[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_6 $$ OutputStream out[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_7 $$ byte[] buf[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_8 $$ int len[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_9 $$ if (sourceLocation.isDirectory()) [ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_9 $$ if (sourceLocation.isDirectory()) [ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_9 $$ if (sourceLocation.isDirectory()) [ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_9 $$ if (sourceLocation.isDirectory()) [ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_10 $$ if (!targetLocation.exists())[ CD ]
Line_10 $$ if (!targetLocation.exists())-->Line_10 $$ if (!targetLocation.exists())[ CD ]
Line_10 $$ if (!targetLocation.exists())-->Line_10 $$ if (!targetLocation.exists())[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_10 $$ if (!targetLocation.exists())[ FD ]
Line_10 $$ if (!targetLocation.exists())-->Line_10 $$ targetLocation.mkdir()[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_10 $$ targetLocation.mkdir()[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_11 $$ children = sourceLocation.list()[ CD ]
Line_3 $$ String[] children-->Line_11 $$ children = sourceLocation.list()[ FD ]
Line_11 $$ children = sourceLocation.list()-->Line_11 $$ children = sourceLocation.list()[ FD ]
Line_11 $$ children = sourceLocation.list()-->Line_11 $$ children = sourceLocation.list()[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_11 $$ children = sourceLocation.list()[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_12 $$ for (i = 0; i < children.length; i++) [ CD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_9 $$ if (sourceLocation.isDirectory()) [ CD ]
Line_4 $$ int i-->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ CD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_4 $$ int i-->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ CD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_4 $$ int i-->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_13 $$ copyOrMove(new File(sourceLocation, children[i]), new File(targetLocation, children[i]), move)[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_13 $$ copyOrMove(new File(sourceLocation, children[i]), new File(targetLocation, children[i]), move)[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_15 $$ if (move)[ CD ]
Line_15 $$ if (move)-->Line_15 $$ sourceLocation.delete()[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_15 $$ sourceLocation.delete()[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_17 $$ in = new FileInputStream(sourceLocation)[ CD ]
Line_5 $$ InputStream in-->Line_17 $$ in = new FileInputStream(sourceLocation)[ FD ]
Line_17 $$ in = new FileInputStream(sourceLocation)-->Line_17 $$ in = new FileInputStream(sourceLocation)[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_18 $$ if (targetLocation.isDirectory())[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_18 $$ if (targetLocation.isDirectory())[ FD ]
Line_18 $$ if (targetLocation.isDirectory())-->Line_18 $$ if (targetLocation.isDirectory())[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_18 $$ if (targetLocation.isDirectory())[ FD ]
Line_18 $$ if (targetLocation.isDirectory())-->Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())[ CD ]
Line_6 $$ OutputStream out-->Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())-->Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())[ FD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())[ FD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())[ FD ]
Line_18 $$ if (targetLocation.isDirectory())-->Line_18 $$ out = new FileOutputStream(targetLocation)[ CD ]
Line_6 $$ OutputStream out-->Line_18 $$ out = new FileOutputStream(targetLocation)[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())-->Line_18 $$ out = new FileOutputStream(targetLocation)[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation)-->Line_18 $$ out = new FileOutputStream(targetLocation)[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_19 $$ buf = new byte[1024][ CD ]
Line_7 $$ byte[] buf-->Line_19 $$ buf = new byte[1024][ FD ]
Line_19 $$ buf = new byte[1024]-->Line_19 $$ buf = new byte[1024][ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ CD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_9 $$ if (sourceLocation.isDirectory()) [ CD ]
Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_8 $$ int len-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ CD ]
Line_5 $$ InputStream in-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_17 $$ in = new FileInputStream(sourceLocation)-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_7 $$ byte[] buf-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_19 $$ buf = new byte[1024]-->Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_20 $$ out.write(buf, 0, len)[ CD ]
Line_6 $$ OutputStream out-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation)-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_7 $$ byte[] buf-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_19 $$ buf = new byte[1024]-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_8 $$ int len-->Line_20 $$ out.write(buf, 0, len)[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_21 $$ in.close()[ CD ]
Line_5 $$ InputStream in-->Line_21 $$ in.close()[ FD ]
Line_17 $$ in = new FileInputStream(sourceLocation)-->Line_21 $$ in.close()[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_22 $$ out.close()[ CD ]
Line_6 $$ OutputStream out-->Line_22 $$ out.close()[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation.getAbsolutePath() + File.separator + sourceLocation.getName())-->Line_22 $$ out.close()[ FD ]
Line_18 $$ out = new FileOutputStream(targetLocation)-->Line_22 $$ out.close()[ FD ]
Line_9 $$ if (sourceLocation.isDirectory()) -->Line_23 $$ if (move)[ CD ]
Line_23 $$ if (move)-->Line_23 $$ sourceLocation.delete()[ CD ]
Line_2 $$ protected static void copyOrMove(File sourceLocation, File targetLocation, boolean move) throws IOException -->Line_23 $$ sourceLocation.delete()[ FD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_12 $$ for (i = 0; i < children.length; i++) -->Line_12 $$ for (i = 0; i < children.length; i++) [ FD ]
Line_20 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_20 $$ out.write(buf, 0, len)[ FD ]
