Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ String servletPath = req.getServletPath()[ CD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_3 $$ String servletPath = req.getServletPath()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ String servletPath = req.getServletPath()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ String requestURI = req.getRequestURI()[ CD ]
Line_4 $$ String requestURI = req.getRequestURI()-->Line_4 $$ String requestURI = req.getRequestURI()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ String requestURI = req.getRequestURI()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())[ CD ]
Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())-->Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())[ CD ]
Line_4 $$ String requestURI = req.getRequestURI()-->Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())[ FD ]
Line_4 $$ String requestURI = req.getRequestURI()-->Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())[ FD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())[ FD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)[ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)[ CD ]
Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) -->Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) [ CD ]
Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) -->Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) [ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) [ FD ]
Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) -->Line_12 $$ file = new File(url.toURI())[ CD ]
Line_8 $$ File file = null-->Line_12 $$ file = new File(url.toURI())[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_12 $$ file = new File(url.toURI())[ FD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_12 $$ file = new File(url.toURI())[ FD ]
Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) -->Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ CD ]
Line_10 $$ JarFile jarFile = null-->Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) -->Line_15 $$ String[] jarURL = url.toExternalForm().split("!")[ CD ]
Line_15 $$ String[] jarURL = url.toExternalForm().split("!")-->Line_15 $$ String[] jarURL = url.toExternalForm().split("!")[ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_15 $$ String[] jarURL = url.toExternalForm().split("!")[ FD ]
Line_11 $$ if (!url.toExternalForm().startsWith("jar:")) -->Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))[ CD ]
Line_9 $$ JarEntry jarEntry = null-->Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))[ FD ]
Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))-->Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))[ FD ]
Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))-->Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))[ CD ]
Line_10 $$ JarFile jarFile = null-->Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))[ FD ]
Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))[ FD ]
Line_8 $$ File file = null-->Line_18 $$ if (file != null && file.isDirectory()) [ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_18 $$ if (file != null && file.isDirectory()) [ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_19 $$ PrintWriter writer = resp.getWriter()[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_19 $$ PrintWriter writer = resp.getWriter()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_19 $$ PrintWriter writer = resp.getWriter()[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_20 $$ resp.setContentType("text/html")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_20 $$ resp.setContentType("text/html")[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_21 $$ DevelUtils.writePageBegin(writer)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_21 $$ DevelUtils.writePageBegin(writer)[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_22 $$ DevelUtils.writeTitleAndHeaderEnd(writer, "Makumba resources")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_22 $$ DevelUtils.writeTitleAndHeaderEnd(writer, "Makumba resources")[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) -->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_23 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) -->Line_24 $$ return[ CD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_26 $$ String relativeDirectory = file.getName()[ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_26 $$ String relativeDirectory = file.getName()[ CD ]
Line_8 $$ File file = null-->Line_26 $$ String relativeDirectory = file.getName()[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_26 $$ String relativeDirectory = file.getName()[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_27 $$ if (file.getAbsolutePath().indexOf(resourceDirectory) != -1) [ CD ]
Line_8 $$ File file = null-->Line_27 $$ if (file.getAbsolutePath().indexOf(resourceDirectory) != -1) [ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_27 $$ if (file.getAbsolutePath().indexOf(resourceDirectory) != -1) [ FD ]
Line_27 $$ if (file.getAbsolutePath().indexOf(resourceDirectory) != -1) -->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ CD ]
Line_8 $$ File file = null-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ FD ]
Line_8 $$ File file = null-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_30 $$ SourceViewServlet.printDirlistingHeader(writer, file.getCanonicalPath(), relativeDirectory)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_30 $$ SourceViewServlet.printDirlistingHeader(writer, file.getCanonicalPath(), relativeDirectory)[ FD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_30 $$ SourceViewServlet.printDirlistingHeader(writer, file.getCanonicalPath(), relativeDirectory)[ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_30 $$ SourceViewServlet.printDirlistingHeader(writer, file.getCanonicalPath(), relativeDirectory)[ FD ]
Line_8 $$ File file = null-->Line_30 $$ SourceViewServlet.printDirlistingHeader(writer, file.getCanonicalPath(), relativeDirectory)[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_30 $$ SourceViewServlet.printDirlistingHeader(writer, file.getCanonicalPath(), relativeDirectory)[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_31 $$ if (!(relativeDirectory.equals(resourceDirectory))) [ CD ]
Line_31 $$ if (!(relativeDirectory.equals(resourceDirectory))) -->Line_31 $$ if (!(relativeDirectory.equals(resourceDirectory))) [ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_31 $$ if (!(relativeDirectory.equals(resourceDirectory))) [ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_31 $$ if (!(relativeDirectory.equals(resourceDirectory))) [ FD ]
Line_31 $$ if (!(relativeDirectory.equals(resourceDirectory))) -->Line_32 $$ writer.println("<b><a href=\"../\">../</a></b> (up one level)")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_32 $$ writer.println("<b><a href=\"../\">../</a></b> (up one level)")[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_34 $$ SourceViewServlet.processDirectory(writer, file, null)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_34 $$ SourceViewServlet.processDirectory(writer, file, null)[ FD ]
Line_8 $$ File file = null-->Line_34 $$ SourceViewServlet.processDirectory(writer, file, null)[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_34 $$ SourceViewServlet.processDirectory(writer, file, null)[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_35 $$ String[] list = file.list()[ CD ]
Line_35 $$ String[] list = file.list()-->Line_35 $$ String[] list = file.list()[ CD ]
Line_8 $$ File file = null-->Line_35 $$ String[] list = file.list()[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_35 $$ String[] list = file.list()[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_36 $$ Arrays.sort(list)[ CD ]
Line_35 $$ String[] list = file.list()-->Line_36 $$ Arrays.sort(list)[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_18 $$ if (file != null && file.isDirectory()) [ CD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_38 $$ String s = list[i][ CD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)[ CD ]
Line_8 $$ File file = null-->Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)[ FD ]
Line_12 $$ file = new File(url.toURI())-->Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)[ FD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_40 $$ if (f.isFile()) [ CD ]
Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)-->Line_40 $$ if (f.isFile()) [ FD ]
Line_40 $$ if (f.isFile()) -->Line_40 $$ if (f.isFile()) [ CD ]
Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)-->Line_40 $$ if (f.isFile()) [ FD ]
Line_40 $$ if (f.isFile()) -->Line_41 $$ writer.println("<b><a href=\"" + s + "\">" + s + "</a></b>")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_41 $$ writer.println("<b><a href=\"" + s + "\">" + s + "</a></b>")[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_44 $$ writer.println("</pre>")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_44 $$ writer.println("</pre>")[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_45 $$ DevelUtils.writePageEnd(writer)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_45 $$ DevelUtils.writePageEnd(writer)[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_46 $$ resp.setHeader("Last-Modified", dfLastModified.format(new Date()))[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_46 $$ resp.setHeader("Last-Modified", dfLastModified.format(new Date()))[ FD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_47 $$ return[ CD ]
Line_18 $$ if (file != null && file.isDirectory()) -->Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) [ CD ]
Line_9 $$ JarEntry jarEntry = null-->Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) [ FD ]
Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))-->Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) [ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()[ CD ]
Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()-->Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()[ CD ]
Line_10 $$ JarFile jarFile = null-->Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()[ FD ]
Line_14 $$ jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_50 $$ ArrayList<String> files = new ArrayList<String>()[ CD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_51 $$ ArrayList<String> directories = new ArrayList<String>()[ CD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_52 $$ PrintWriter writer = resp.getWriter()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_52 $$ PrintWriter writer = resp.getWriter()[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_53 $$ resp.setContentType("text/html")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_53 $$ resp.setContentType("text/html")[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_54 $$ DevelUtils.writePageBegin(writer)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_54 $$ DevelUtils.writePageBegin(writer)[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_55 $$ DevelUtils.writeTitleAndHeaderEnd(writer, "Makumba resources")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_55 $$ DevelUtils.writeTitleAndHeaderEnd(writer, "Makumba resources")[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) -->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_3 $$ String servletPath = req.getServletPath()-->Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) [ FD ]
Line_56 $$ if (SourceViewServlet.redirected(req, resp, servletPath)) -->Line_57 $$ return[ CD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_59 $$ String relativeDirectory = jarEntry.getName()[ CD ]
Line_9 $$ JarEntry jarEntry = null-->Line_59 $$ String relativeDirectory = jarEntry.getName()[ FD ]
Line_16 $$ jarEntry = jarFile.getJarEntry(jarURL[1].substring(1))-->Line_59 $$ String relativeDirectory = jarEntry.getName()[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_60 $$ SourceViewServlet.printDirlistingHeader(writer, url.toExternalForm(), relativeDirectory)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_60 $$ SourceViewServlet.printDirlistingHeader(writer, url.toExternalForm(), relativeDirectory)[ FD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_60 $$ SourceViewServlet.printDirlistingHeader(writer, url.toExternalForm(), relativeDirectory)[ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_60 $$ SourceViewServlet.printDirlistingHeader(writer, url.toExternalForm(), relativeDirectory)[ FD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_60 $$ SourceViewServlet.printDirlistingHeader(writer, url.toExternalForm(), relativeDirectory)[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ CD ]
Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) -->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ FD ]
Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) -->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) [ FD ]
Line_61 $$ if (!relativeDirectory.equals(resourceDirectory) && !relativeDirectory.equals(resourceDirectory + "/")) -->Line_62 $$ writer.println("<b><a href=\"../\">../</a></b> (up one level)")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_62 $$ writer.println("<b><a href=\"../\">../</a></b> (up one level)")[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_64 $$ while (entries.hasMoreElements()) [ CD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) [ CD ]
Line_64 $$ while (entries.hasMoreElements()) -->Line_64 $$ while (entries.hasMoreElements()) [ CD ]
Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()-->Line_64 $$ while (entries.hasMoreElements()) [ FD ]
Line_64 $$ while (entries.hasMoreElements()) -->Line_65 $$ JarEntry entry = (JarEntry) entries.nextElement()[ CD ]
Line_49 $$ Enumeration<JarEntry> entries = jarFile.entries()-->Line_65 $$ JarEntry entry = (JarEntry) entries.nextElement()[ FD ]
Line_64 $$ while (entries.hasMoreElements()) -->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ FD ]
Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) -->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ CD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ FD ]
Line_65 $$ JarEntry entry = (JarEntry) entries.nextElement()-->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ FD ]
Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) -->Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())[ CD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())[ CD ]
Line_65 $$ JarEntry entry = (JarEntry) entries.nextElement()-->Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())[ FD ]
Line_26 $$ String relativeDirectory = file.getName()-->Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())[ FD ]
Line_28 $$ relativeDirectory = file.getAbsolutePath().substring(file.getAbsolutePath().indexOf(resourceDirectory))-->Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())[ FD ]
Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) -->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ CD ]
Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) -->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ CD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ FD ]
Line_68 $$ while (s.length() > 0 && s.startsWith("/")) -->Line_69 $$ s = s.substring(1)[ CD ]
Line_69 $$ s = s.substring(1)-->Line_69 $$ s = s.substring(1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_69 $$ s = s.substring(1)[ FD ]
Line_38 $$ String s = list[i]-->Line_69 $$ s = s.substring(1)[ FD ]
Line_69 $$ s = s.substring(1)-->Line_69 $$ s = s.substring(1)[ CD ]
Line_69 $$ s = s.substring(1)-->Line_69 $$ s = s.substring(1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_69 $$ s = s.substring(1)[ FD ]
Line_38 $$ String s = list[i]-->Line_69 $$ s = s.substring(1)[ FD ]
Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) -->Line_71 $$ if (s.indexOf("/") == -1) [ CD ]
Line_69 $$ s = s.substring(1)-->Line_71 $$ if (s.indexOf("/") == -1) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_71 $$ if (s.indexOf("/") == -1) [ FD ]
Line_38 $$ String s = list[i]-->Line_71 $$ if (s.indexOf("/") == -1) [ FD ]
Line_71 $$ if (s.indexOf("/") == -1) -->Line_72 $$ if (s.length() > 0) [ CD ]
Line_69 $$ s = s.substring(1)-->Line_72 $$ if (s.length() > 0) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_72 $$ if (s.length() > 0) [ FD ]
Line_38 $$ String s = list[i]-->Line_72 $$ if (s.length() > 0) [ FD ]
Line_72 $$ if (s.length() > 0) -->Line_73 $$ files.add(s)[ CD ]
Line_50 $$ ArrayList<String> files = new ArrayList<String>()-->Line_73 $$ files.add(s)[ FD ]
Line_69 $$ s = s.substring(1)-->Line_73 $$ files.add(s)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_73 $$ files.add(s)[ FD ]
Line_38 $$ String s = list[i]-->Line_73 $$ files.add(s)[ FD ]
Line_71 $$ if (s.indexOf("/") == -1) -->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ CD ]
Line_69 $$ s = s.substring(1)-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_69 $$ s = s.substring(1)-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_69 $$ s = s.substring(1)-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) -->Line_76 $$ if (s.endsWith("/")) [ CD ]
Line_69 $$ s = s.substring(1)-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_76 $$ if (s.endsWith("/")) -->Line_76 $$ if (s.endsWith("/")) [ CD ]
Line_69 $$ s = s.substring(1)-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_38 $$ String s = list[i]-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_76 $$ if (s.endsWith("/")) -->Line_77 $$ s = s.substring(0, s.length() - 1)[ CD ]
Line_69 $$ s = s.substring(1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_38 $$ String s = list[i]-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ CD ]
Line_69 $$ s = s.substring(1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_38 $$ String s = list[i]-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_69 $$ s = s.substring(1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_38 $$ String s = list[i]-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) -->Line_79 $$ if (s.length() > 0) [ CD ]
Line_69 $$ s = s.substring(1)-->Line_79 $$ if (s.length() > 0) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_79 $$ if (s.length() > 0) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_79 $$ if (s.length() > 0) [ FD ]
Line_38 $$ String s = list[i]-->Line_79 $$ if (s.length() > 0) [ FD ]
Line_79 $$ if (s.length() > 0) -->Line_80 $$ directories.add(s)[ CD ]
Line_51 $$ ArrayList<String> directories = new ArrayList<String>()-->Line_80 $$ directories.add(s)[ FD ]
Line_69 $$ s = s.substring(1)-->Line_80 $$ directories.add(s)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_80 $$ directories.add(s)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_80 $$ directories.add(s)[ FD ]
Line_38 $$ String s = list[i]-->Line_80 $$ directories.add(s)[ FD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_86 $$ writer.println("<b><a href=\"" + string + "/\">" + string + "/</a></b>")[ FD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_89 $$ writer.println("<b><a href=\"" + string + "\">" + string + "</a></b>")[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_91 $$ writer.println("</pre>")[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_91 $$ writer.println("</pre>")[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_92 $$ DevelUtils.writePageEnd(writer)[ CD ]
Line_19 $$ PrintWriter writer = resp.getWriter()-->Line_92 $$ DevelUtils.writePageEnd(writer)[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_93 $$ resp.setHeader("Last-Modified", dfLastModified.format(new Date()))[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_93 $$ resp.setHeader("Last-Modified", dfLastModified.format(new Date()))[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_94 $$ return[ CD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_96 $$ final Date lastModified[ CD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_97 $$ if (url.toExternalForm().startsWith("jar:")) [ CD ]
Line_97 $$ if (url.toExternalForm().startsWith("jar:")) -->Line_97 $$ if (url.toExternalForm().startsWith("jar:")) [ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_97 $$ if (url.toExternalForm().startsWith("jar:")) [ FD ]
Line_97 $$ if (url.toExternalForm().startsWith("jar:")) -->Line_98 $$ JarFile jf = ((JarURLConnection) url.openConnection()).getJarFile()[ CD ]
Line_98 $$ JarFile jf = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_98 $$ JarFile jf = ((JarURLConnection) url.openConnection()).getJarFile()[ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_98 $$ JarFile jf = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_97 $$ if (url.toExternalForm().startsWith("jar:")) -->Line_99 $$ String[] jarURL = url.toExternalForm().split("!")[ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_99 $$ String[] jarURL = url.toExternalForm().split("!")[ FD ]
Line_97 $$ if (url.toExternalForm().startsWith("jar:")) -->Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())[ CD ]
Line_96 $$ final Date lastModified-->Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())[ FD ]
Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())-->Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())[ FD ]
Line_98 $$ JarFile jf = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())[ FD ]
Line_97 $$ if (url.toExternalForm().startsWith("jar:")) -->Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())[ CD ]
Line_96 $$ final Date lastModified-->Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())[ FD ]
Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())-->Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())[ FD ]
Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())-->Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())[ FD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_104 $$ resp.setHeader("Last-Modified", dfLastModified.format(lastModified))[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_104 $$ resp.setHeader("Last-Modified", dfLastModified.format(lastModified))[ FD ]
Line_96 $$ final Date lastModified-->Line_104 $$ resp.setHeader("Last-Modified", dfLastModified.format(lastModified))[ FD ]
Line_100 $$ lastModified = new Date(jf.getJarEntry(jarURL[1].substring(1)).getTime())-->Line_104 $$ resp.setHeader("Last-Modified", dfLastModified.format(lastModified))[ FD ]
Line_102 $$ lastModified = new Date(new File(url.toURI()).lastModified())-->Line_104 $$ resp.setHeader("Last-Modified", dfLastModified.format(lastModified))[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_105 $$ resp.setContentType(getContentType(url))[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_105 $$ resp.setContentType(getContentType(url))[ FD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_105 $$ resp.setContentType(getContentType(url))[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_106 $$ Object cachedResource = NamedResources.getStaticCache(makumbaResources).getResource(resource)[ CD ]
Line_106 $$ Object cachedResource = NamedResources.getStaticCache(makumbaResources).getResource(resource)-->Line_106 $$ Object cachedResource = NamedResources.getStaticCache(makumbaResources).getResource(resource)[ CD ]
Line_5 $$ String resource = requestURI.substring(requestURI.indexOf(servletPath) + servletPath.length())-->Line_106 $$ Object cachedResource = NamedResources.getStaticCache(makumbaResources).getResource(resource)[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_107 $$ ServletOutputStream outputStream = resp.getOutputStream()[ CD ]
Line_107 $$ ServletOutputStream outputStream = resp.getOutputStream()-->Line_107 $$ ServletOutputStream outputStream = resp.getOutputStream()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_107 $$ ServletOutputStream outputStream = resp.getOutputStream()[ FD ]
Line_48 $$ if (jarEntry != null && jarEntry.isDirectory()) -->Line_108 $$ if (isBinary(url)) [ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_108 $$ if (isBinary(url)) [ FD ]
Line_108 $$ if (isBinary(url)) -->Line_108 $$ if (isBinary(url)) [ CD ]
Line_6 $$ URL url = ClassResource.get(resourceDirectory + resource)-->Line_108 $$ if (isBinary(url)) [ FD ]
Line_108 $$ if (isBinary(url)) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ CD ]
Line_108 $$ if (isBinary(url)) -->Line_108 $$ if (isBinary(url)) [ CD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ FD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ CD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ CD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ FD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ FD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_110 $$ outputStream.write(((byte[]) cachedResource)[i])[ CD ]
Line_107 $$ ServletOutputStream outputStream = resp.getOutputStream()-->Line_110 $$ outputStream.write(((byte[]) cachedResource)[i])[ FD ]
Line_108 $$ if (isBinary(url)) -->Line_113 $$ outputStream.print(cachedResource.toString())[ CD ]
Line_107 $$ ServletOutputStream outputStream = resp.getOutputStream()-->Line_113 $$ outputStream.print(cachedResource.toString())[ FD ]
Line_106 $$ Object cachedResource = NamedResources.getStaticCache(makumbaResources).getResource(resource)-->Line_113 $$ outputStream.print(cachedResource.toString())[ FD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_37 $$ for (int i = 0; i < list.length; i++) -->Line_37 $$ for (int i = 0; i < list.length; i++) [ FD ]
Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)-->Line_40 $$ if (f.isFile()) [ FD ]
Line_39 $$ File f = new File(file.getAbsolutePath() + File.separator + s)-->Line_40 $$ if (f.isFile()) [ FD ]
Line_65 $$ JarEntry entry = (JarEntry) entries.nextElement()-->Line_66 $$ if (entry.getName().startsWith(relativeDirectory)) [ FD ]
Line_65 $$ JarEntry entry = (JarEntry) entries.nextElement()-->Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_71 $$ if (s.indexOf("/") == -1) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_71 $$ if (s.indexOf("/") == -1) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_72 $$ if (s.length() > 0) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_72 $$ if (s.length() > 0) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_73 $$ files.add(s)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_73 $$ files.add(s)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_75 $$ if (s.indexOf("/") == s.lastIndexOf("/") && s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_76 $$ if (s.endsWith("/")) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_77 $$ s = s.substring(0, s.length() - 1)[ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_79 $$ if (s.length() > 0) [ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_79 $$ if (s.length() > 0) [ FD ]
Line_67 $$ String s = entry.getName().substring(relativeDirectory.length())-->Line_80 $$ directories.add(s)[ FD ]
Line_77 $$ s = s.substring(0, s.length() - 1)-->Line_80 $$ directories.add(s)[ FD ]
Line_69 $$ s = s.substring(1)-->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ FD ]
Line_69 $$ s = s.substring(1)-->Line_68 $$ while (s.length() > 0 && s.startsWith("/")) [ FD ]
Line_69 $$ s = s.substring(1)-->Line_69 $$ s = s.substring(1)[ FD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ FD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ FD ]
Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) -->Line_109 $$ for (int i = 0; i < ((byte[]) cachedResource).length; i++) [ FD ]
