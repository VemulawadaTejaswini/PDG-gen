Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String getChallengers() [ CD ]
Line_2 $$ public String getChallengers() -->Line_3 $$ InputStream is = null[ CD ]
Line_2 $$ public String getChallengers() -->Line_4 $$ String result = ""[ CD ]
Line_7 $$ HttpPost httppost = new HttpPost(domain)-->Line_8 $$ httppost.setEntity(new UrlEncodedFormEntity(library))[ FD ]
Line_9 $$ HttpResponse response = httpclient.execute(httppost)-->Line_9 $$ HttpResponse response = httpclient.execute(httppost)[ CD ]
Line_6 $$ HttpClient httpclient = new DefaultHttpClient()-->Line_9 $$ HttpResponse response = httpclient.execute(httppost)[ FD ]
Line_7 $$ HttpPost httppost = new HttpPost(domain)-->Line_9 $$ HttpResponse response = httpclient.execute(httppost)[ FD ]
Line_10 $$ HttpEntity entity = response.getEntity()-->Line_10 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_9 $$ HttpResponse response = httpclient.execute(httppost)-->Line_10 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_3 $$ InputStream is = null-->Line_11 $$ is = entity.getContent()[ FD ]
Line_11 $$ is = entity.getContent()-->Line_11 $$ is = entity.getContent()[ FD ]
Line_11 $$ is = entity.getContent()-->Line_11 $$ is = entity.getContent()[ CD ]
Line_10 $$ HttpEntity entity = response.getEntity()-->Line_11 $$ is = entity.getContent()[ FD ]
Line_19 $$ while ((line = reader.readLine()) != null) -->Line_19 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_18 $$ String line = null-->Line_19 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_19 $$ while ((line = reader.readLine()) != null) -->Line_19 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_16 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(is, "iso-8859-1"), 8)-->Line_19 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_19 $$ while ((line = reader.readLine()) != null) -->Line_20 $$ sb.append(line + ",")[ CD ]
Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append(line + ",")[ FD ]
Line_3 $$ InputStream is = null-->Line_22 $$ is.close()[ FD ]
Line_11 $$ is = entity.getContent()-->Line_22 $$ is.close()[ FD ]
Line_4 $$ String result = ""-->Line_23 $$ result = sb.toString()[ FD ]
Line_23 $$ result = sb.toString()-->Line_23 $$ result = sb.toString()[ FD ]
Line_23 $$ result = sb.toString()-->Line_23 $$ result = sb.toString()[ CD ]
Line_17 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ result = sb.toString()[ FD ]
Line_4 $$ String result = ""-->Line_24 $$ if (result.equals("null,")) [ FD ]
Line_23 $$ result = sb.toString()-->Line_24 $$ if (result.equals("null,")) [ FD ]
Line_4 $$ String result = ""-->Line_24 $$ if (result.equals("null,")) [ FD ]
Line_23 $$ result = sb.toString()-->Line_24 $$ if (result.equals("null,")) [ FD ]
Line_24 $$ if (result.equals("null,")) -->Line_24 $$ if (result.equals("null,")) [ CD ]
Line_4 $$ String result = ""-->Line_24 $$ if (result.equals("null,")) [ FD ]
Line_23 $$ result = sb.toString()-->Line_24 $$ if (result.equals("null,")) [ FD ]
Line_24 $$ if (result.equals("null,")) -->Line_25 $$ return "none"[ CD ]
Line_24 $$ if (result.equals("null,")) -->Line_26 $$ return result[ CD ]
Line_2 $$ public String getChallengers() -->Line_30 $$ return "none"[ CD ]
