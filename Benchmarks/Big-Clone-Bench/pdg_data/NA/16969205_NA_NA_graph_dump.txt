Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private List<JarFile> webArchives(ServletContext servletContext) throws IOException [ CD ]
Line_2 $$ private List<JarFile> webArchives(ServletContext servletContext) throws IOException -->Line_3 $$ List<JarFile> list = new ArrayList<JarFile>()[ CD ]
Line_2 $$ private List<JarFile> webArchives(ServletContext servletContext) throws IOException -->Line_4 $$ Set<Object> paths = servletContext.getResourcePaths(WEB_LIB_PREFIX)[ CD ]
Line_4 $$ Set<Object> paths = servletContext.getResourcePaths(WEB_LIB_PREFIX)-->Line_4 $$ Set<Object> paths = servletContext.getResourcePaths(WEB_LIB_PREFIX)[ CD ]
Line_2 $$ private List<JarFile> webArchives(ServletContext servletContext) throws IOException -->Line_4 $$ Set<Object> paths = servletContext.getResourcePaths(WEB_LIB_PREFIX)[ FD ]
Line_7 $$ if (!path.endsWith(".jar")) -->Line_7 $$ if (!path.endsWith(".jar")) [ CD ]
Line_7 $$ if (!path.endsWith(".jar")) -->Line_7 $$ if (!path.endsWith(".jar")) [ CD ]
Line_6 $$ String path = (String) pathObject-->Line_7 $$ if (!path.endsWith(".jar")) [ FD ]
Line_10 $$ URL url = servletContext.getResource(path)-->Line_10 $$ URL url = servletContext.getResource(path)[ CD ]
Line_2 $$ private List<JarFile> webArchives(ServletContext servletContext) throws IOException -->Line_10 $$ URL url = servletContext.getResource(path)[ FD ]
Line_6 $$ String path = (String) pathObject-->Line_10 $$ URL url = servletContext.getResource(path)[ FD ]
Line_10 $$ URL url = servletContext.getResource(path)-->Line_11 $$ String jarURLString = "jar:" + url.toString() + "!/"[ FD ]
Line_10 $$ URL url = servletContext.getResource(path)-->Line_12 $$ url = new URL(jarURLString)[ FD ]
Line_12 $$ url = new URL(jarURLString)-->Line_12 $$ url = new URL(jarURLString)[ FD ]
Line_13 $$ JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_13 $$ JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ CD ]
Line_10 $$ URL url = servletContext.getResource(path)-->Line_13 $$ JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_12 $$ url = new URL(jarURLString)-->Line_13 $$ JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile()[ FD ]
Line_14 $$ JarEntry signal = jarFile.getJarEntry(FACES_CONFIG_IMPLICIT)-->Line_14 $$ JarEntry signal = jarFile.getJarEntry(FACES_CONFIG_IMPLICIT)[ CD ]
Line_13 $$ JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_14 $$ JarEntry signal = jarFile.getJarEntry(FACES_CONFIG_IMPLICIT)[ FD ]
Line_14 $$ JarEntry signal = jarFile.getJarEntry(FACES_CONFIG_IMPLICIT)-->Line_15 $$ if (signal == null) [ FD ]
Line_15 $$ if (signal == null) -->Line_16 $$ if (log().isTraceEnabled()) [ CD ]
Line_16 $$ if (log().isTraceEnabled()) -->Line_16 $$ if (log().isTraceEnabled()) [ CD ]
Line_16 $$ if (log().isTraceEnabled()) -->Line_17 $$ log().trace("Skip JAR file " + path + " because it has no META-INF/faces-config.xml resource")[ CD ]
Line_3 $$ List<JarFile> list = new ArrayList<JarFile>()-->Line_21 $$ list.add(jarFile)[ FD ]
Line_13 $$ JarFile jarFile = ((JarURLConnection) url.openConnection()).getJarFile()-->Line_21 $$ list.add(jarFile)[ FD ]
Line_2 $$ private List<JarFile> webArchives(ServletContext servletContext) throws IOException -->Line_23 $$ return list[ CD ]
