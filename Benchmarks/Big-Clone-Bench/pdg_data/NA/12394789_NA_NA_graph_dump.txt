Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException [ CD ]
Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException -->Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()[ CD ]
Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()-->Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()[ CD ]
Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException -->Line_4 $$ final FileChannel destinationChannel = new FileOutputStream(out).getChannel()[ CD ]
Line_4 $$ final FileChannel destinationChannel = new FileOutputStream(out).getChannel()-->Line_4 $$ final FileChannel destinationChannel = new FileOutputStream(out).getChannel()[ CD ]
Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException -->Line_5 $$ if (maxCount == 0)[ CD ]
Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException -->Line_5 $$ if (maxCount == 0)[ FD ]
Line_5 $$ if (maxCount == 0)-->Line_5 $$ maxCount = sourceChannel.size()[ CD ]
Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException -->Line_5 $$ maxCount = sourceChannel.size()[ FD ]
Line_5 $$ maxCount = sourceChannel.size()-->Line_5 $$ maxCount = sourceChannel.size()[ FD ]
Line_5 $$ maxCount = sourceChannel.size()-->Line_5 $$ maxCount = sourceChannel.size()[ CD ]
Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()-->Line_5 $$ maxCount = sourceChannel.size()[ FD ]
Line_7 $$ final long size = sourceChannel.size()-->Line_7 $$ final long size = sourceChannel.size()[ CD ]
Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()-->Line_7 $$ final long size = sourceChannel.size()[ FD ]
Line_8 $$ long position = 0-->Line_9 $$ while (position < size) [ FD ]
Line_7 $$ final long size = sourceChannel.size()-->Line_9 $$ while (position < size) [ FD ]
Line_9 $$ while (position < size) -->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ CD ]
Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_8 $$ long position = 0-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ CD ]
Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_8 $$ long position = 0-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_2 $$ public static void copyFile(File in, File out, long maxCount) throws IOException -->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_5 $$ maxCount = sourceChannel.size()-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_4 $$ final FileChannel destinationChannel = new FileOutputStream(out).getChannel()-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
Line_3 $$ final FileChannel sourceChannel = new FileInputStream(in).getChannel()-->Line_13 $$ sourceChannel.close()[ FD ]
Line_4 $$ final FileChannel destinationChannel = new FileOutputStream(out).getChannel()-->Line_14 $$ destinationChannel.close()[ FD ]
Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)-->Line_9 $$ while (position < size) [ FD ]
Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)-->Line_9 $$ while (position < size) [ FD ]
Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)-->Line_10 $$ position += sourceChannel.transferTo(position, maxCount, destinationChannel)[ FD ]
