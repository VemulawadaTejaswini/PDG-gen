Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public List tree(String cat, int branch) [ CD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_3 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")[ CD ]
Line_3 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")-->Line_3 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")[ CD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_4 $$ Matcher m[ CD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_5 $$ List res = new ArrayList()[ CD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_6 $$ URL url[ CD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_7 $$ HttpURLConnection conn[ CD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_8 $$ System.out.println()[ CD ]
Line_6 $$ URL url-->Line_10 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?category=trainee&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_10 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?category=trainee&expand=false&forceLoad=false&reload=false&scroll=0")-->Line_10 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?category=trainee&expand=false&forceLoad=false&reload=false&scroll=0")[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_11 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_11 $$ conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ URL url-->Line_11 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_10 $$ url = new URL("http://cri-srv-ade.insa-toulouse.fr:8080/ade/standard/gui/tree.jsp?category=trainee&expand=false&forceLoad=false&reload=false&scroll=0")-->Line_11 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_12 $$ conn.setRequestMethod("GET")[ FD ]
Line_11 $$ conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.setRequestMethod("GET")[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_13 $$ conn.setDoOutput(true)[ FD ]
Line_11 $$ conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn.setDoOutput(true)[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_14 $$ conn.setDoInput(true)[ FD ]
Line_11 $$ conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setDoInput(true)[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_15 $$ conn.setRequestProperty("Cookie", sessionId)[ FD ]
Line_11 $$ conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ conn.setRequestProperty("Cookie", sessionId)[ FD ]
Line_7 $$ HttpURLConnection conn-->Line_16 $$ BufferedReader i = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_11 $$ conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ BufferedReader i = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_18 $$ while ((line = i.readLine()) != null) [ FD ]
Line_17 $$ String line-->Line_18 $$ while ((line = i.readLine()) != null) [ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_18 $$ while ((line = i.readLine()) != null) [ CD ]
Line_16 $$ BufferedReader i = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_18 $$ while ((line = i.readLine()) != null) [ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_19 $$ m = p.matcher(line)[ CD ]
Line_19 $$ m = p.matcher(line)-->Line_19 $$ m = p.matcher(line)[ FD ]
Line_4 $$ Matcher m-->Line_19 $$ m = p.matcher(line)[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_19 $$ m = p.matcher(line)[ CD ]
Line_3 $$ Pattern p = Pattern.compile("<a href=\"javascript:checkBranch\\(([0-9]+), 'true'\\)\">([^<]*)</a>")-->Line_19 $$ m = p.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_19 $$ m = p.matcher(line)[ FD ]
Line_17 $$ String line-->Line_19 $$ m = p.matcher(line)[ FD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_20 $$ if (m.find()) [ CD ]
Line_19 $$ m = p.matcher(line)-->Line_20 $$ if (m.find()) [ FD ]
Line_4 $$ Matcher m-->Line_20 $$ if (m.find()) [ FD ]
Line_20 $$ if (m.find()) -->Line_20 $$ if (m.find()) [ CD ]
Line_19 $$ m = p.matcher(line)-->Line_20 $$ if (m.find()) [ FD ]
Line_4 $$ Matcher m-->Line_20 $$ if (m.find()) [ FD ]
Line_20 $$ if (m.find()) -->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ CD ]
Line_19 $$ m = p.matcher(line)-->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_4 $$ Matcher m-->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_4 $$ Matcher m-->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_20 $$ if (m.find()) -->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ CD ]
Line_19 $$ m = p.matcher(line)-->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_4 $$ Matcher m-->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_4 $$ Matcher m-->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_2 $$ public List tree(String cat, int branch) -->Line_28 $$ return res[ CD ]
Line_18 $$ while ((line = i.readLine()) != null) -->Line_19 $$ m = p.matcher(line)[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_20 $$ if (m.find()) [ FD ]
Line_19 $$ m = p.matcher(line)-->Line_20 $$ if (m.find()) [ FD ]
Line_19 $$ m = p.matcher(line)-->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_21 $$ trainee.add(new Node(Integer.parseInt(m.group(1)), m.group(2)))[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
Line_19 $$ m = p.matcher(line)-->Line_22 $$ System.out.println(m.group(1) + " - " + m.group(2))[ FD ]
