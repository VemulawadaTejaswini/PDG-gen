Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException [ CD ]
Line_7 $$ int zoom_index = getZoomLevelIndex(wanted_mapblast_scale)-->Line_7 $$ int zoom_index = getZoomLevelIndex(wanted_mapblast_scale)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_7 $$ int zoom_index = getZoomLevelIndex(wanted_mapblast_scale)[ FD ]
Line_11 $$ SimplePoint coords = tile.getTileLatLong()-->Line_11 $$ SimplePoint coords = tile.getTileLatLong()[ CD ]
Line_10 $$ Tile tile = new Tile(latitude, longitude, google_zoom_level)-->Line_11 $$ SimplePoint coords = tile.getTileLatLong()[ FD ]
Line_12 $$ SimplePoint google_xy = tile.getTileCoord()-->Line_12 $$ SimplePoint google_xy = tile.getTileCoord()[ CD ]
Line_10 $$ Tile tile = new Tile(latitude, longitude, google_zoom_level)-->Line_12 $$ SimplePoint google_xy = tile.getTileCoord()[ FD ]
Line_13 $$ MapInfo map_info = new MapInfo()-->Line_14 $$ map_info.setLatitude(coords.getX())[ FD ]
Line_11 $$ SimplePoint coords = tile.getTileLatLong()-->Line_14 $$ map_info.setLatitude(coords.getX())[ FD ]
Line_13 $$ MapInfo map_info = new MapInfo()-->Line_15 $$ map_info.setLongitude(coords.getY())[ FD ]
Line_11 $$ SimplePoint coords = tile.getTileLatLong()-->Line_15 $$ map_info.setLongitude(coords.getY())[ FD ]
Line_13 $$ MapInfo map_info = new MapInfo()-->Line_16 $$ map_info.setScale((float) mapblast_scale)[ FD ]
Line_13 $$ MapInfo map_info = new MapInfo()-->Line_17 $$ map_info.setWidth(256)[ FD ]
Line_13 $$ MapInfo map_info = new MapInfo()-->Line_18 $$ map_info.setHeight(256)[ FD ]
Line_13 $$ MapInfo map_info = new MapInfo()-->Line_19 $$ map_info.setFilename(file_path_wo_extension + "png")[ FD ]
Line_12 $$ SimplePoint google_xy = tile.getTileCoord()-->Line_20 $$ Object[] params = new Object[] [ FD ]
Line_12 $$ SimplePoint google_xy = tile.getTileCoord()-->Line_20 $$ Object[] params = new Object[] [ FD ]
Line_22 $$ String url_string = message_format.format(params)-->Line_22 $$ String url_string = message_format.format(params)[ CD ]
Line_21 $$ MessageFormat message_format = new MessageFormat(GOOGLE_MAPS_URL, Locale.US)-->Line_22 $$ String url_string = message_format.format(params)[ FD ]
Line_20 $$ Object[] params = new Object[] -->Line_22 $$ String url_string = message_format.format(params)[ FD ]
Line_24 $$ if (Debug.DEBUG)-->Line_24 $$ Debug.println("map_download", "loading map from url: " + url)[ CD ]
Line_25 $$ URLConnection connection = url.openConnection()-->Line_25 $$ URLConnection connection = url.openConnection()[ CD ]
Line_23 $$ URL url = new URL(url_string)-->Line_25 $$ URLConnection connection = url.openConnection()[ FD ]
Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) [ CD ]
Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_27 $$ String proxy_userid = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USERNAME)[ CD ]
Line_27 $$ String proxy_userid = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USERNAME)-->Line_27 $$ String proxy_userid = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USERNAME)[ CD ]
Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_28 $$ String proxy_password = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_PASSWORD)[ CD ]
Line_28 $$ String proxy_password = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_PASSWORD)-->Line_28 $$ String proxy_password = resources_.getString(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_PASSWORD)[ CD ]
Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_29 $$ String auth_string = proxy_userid + ":" + proxy_password[ CD ]
Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ CD ]
Line_29 $$ String auth_string = proxy_userid + ":" + proxy_password-->Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())-->Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_29 $$ String auth_string = proxy_userid + ":" + proxy_password-->Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())-->Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())[ FD ]
Line_26 $$ if (resources_.getBoolean(GpsylonKeyConstants.KEY_HTTP_PROXY_AUTHENTICATION_USE)) -->Line_31 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ CD ]
Line_25 $$ URLConnection connection = url.openConnection()-->Line_31 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ FD ]
Line_29 $$ String auth_string = proxy_userid + ":" + proxy_password-->Line_31 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ FD ]
Line_30 $$ auth_string = "Basic " + new sun.misc.BASE64Encoder().encode(auth_string.getBytes())-->Line_31 $$ connection.setRequestProperty("Proxy-Authorization", auth_string)[ FD ]
Line_25 $$ URLConnection connection = url.openConnection()-->Line_33 $$ connection.connect()[ FD ]
Line_34 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_34 $$ String mime_type = connection.getContentType().toLowerCase()[ CD ]
Line_25 $$ URLConnection connection = url.openConnection()-->Line_34 $$ String mime_type = connection.getContentType().toLowerCase()[ FD ]
Line_35 $$ if (!mime_type.startsWith("image")) -->Line_35 $$ if (!mime_type.startsWith("image")) [ CD ]
Line_35 $$ if (!mime_type.startsWith("image")) -->Line_35 $$ if (!mime_type.startsWith("image")) [ CD ]
Line_34 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_35 $$ if (!mime_type.startsWith("image")) [ FD ]
Line_35 $$ if (!mime_type.startsWith("image")) -->Line_36 $$ if (mime_type.startsWith("text")) [ CD ]
Line_34 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_36 $$ if (mime_type.startsWith("text")) [ FD ]
Line_36 $$ if (mime_type.startsWith("text")) -->Line_36 $$ if (mime_type.startsWith("text")) [ CD ]
Line_34 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_36 $$ if (mime_type.startsWith("text")) [ FD ]
Line_36 $$ if (mime_type.startsWith("text")) -->Line_37 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)[ CD ]
Line_36 $$ if (mime_type.startsWith("text")) -->Line_38 $$ viewer.setSize(640, 480)[ CD ]
Line_37 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)-->Line_38 $$ viewer.setSize(640, 480)[ FD ]
Line_36 $$ if (mime_type.startsWith("text")) -->Line_39 $$ viewer.setTitle("ERROR on loading url: " + url)[ CD ]
Line_37 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)-->Line_39 $$ viewer.setTitle("ERROR on loading url: " + url)[ FD ]
Line_36 $$ if (mime_type.startsWith("text")) -->Line_40 $$ viewer.setVisible(true)[ CD ]
Line_37 $$ HTMLViewerFrame viewer = new HTMLViewerFrame(url)-->Line_40 $$ viewer.setVisible(true)[ FD ]
Line_45 $$ int content_length = connection.getContentLength()-->Line_45 $$ int content_length = connection.getContentLength()[ CD ]
Line_25 $$ URLConnection connection = url.openConnection()-->Line_45 $$ int content_length = connection.getContentLength()[ FD ]
Line_45 $$ int content_length = connection.getContentLength()-->Line_46 $$ if (content_length < 0)[ FD ]
Line_46 $$ if (content_length < 0)-->Line_46 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, Integer.MIN_VALUE)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_46 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, Integer.MIN_VALUE)[ FD ]
Line_46 $$ if (content_length < 0)-->Line_46 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, content_length)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_46 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, content_length)[ FD ]
Line_45 $$ int content_length = connection.getContentLength()-->Line_46 $$ progress_listener.actionStart(PROGRESS_LISTENER_ID, 0, content_length)[ FD ]
Line_47 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)-->Line_47 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)[ CD ]
Line_34 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_47 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)[ FD ]
Line_34 $$ String mime_type = connection.getContentType().toLowerCase()-->Line_47 $$ String extension = mime_type.substring(mime_type.indexOf('/') + 1)[ FD ]
Line_25 $$ URLConnection connection = url.openConnection()-->Line_51 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_53 $$ int num_bytes = 0-->Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) [ CD ]
Line_51 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)-->Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_50 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) [ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_55 $$ out.write(buffer, 0, num_bytes)[ CD ]
Line_49 $$ FileOutputStream out = new FileOutputStream(filename)-->Line_55 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_50 $$ byte[] buffer = new byte[BUFFER_SIZE]-->Line_55 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_55 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_53 $$ int num_bytes = 0-->Line_55 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_56 $$ sum_bytes += num_bytes[ CD ]
Line_56 $$ sum_bytes += num_bytes-->Line_56 $$ sum_bytes += num_bytes[ FD ]
Line_52 $$ int sum_bytes = 0-->Line_56 $$ sum_bytes += num_bytes[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_56 $$ sum_bytes += num_bytes[ FD ]
Line_53 $$ int num_bytes = 0-->Line_56 $$ sum_bytes += num_bytes[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_57 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ CD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_57 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
Line_56 $$ sum_bytes += num_bytes-->Line_57 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
Line_52 $$ int sum_bytes = 0-->Line_57 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_59 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_51 $$ BufferedInputStream in = new BufferedInputStream(connection.getInputStream(), BUFFER_SIZE)-->Line_60 $$ in.close()[ FD ]
Line_49 $$ FileOutputStream out = new FileOutputStream(filename)-->Line_61 $$ out.close()[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_65 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_70 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_2 $$ public MapInfo getMap(double latitude, double longitude, double wanted_mapblast_scale, int image_width, int image_height, String file_path_wo_extension, ProgressListener progress_listener) throws IOException -->Line_74 $$ progress_listener.actionEnd(PROGRESS_LISTENER_ID)[ FD ]
Line_66 $$ String message = nrhe.getMessage() + ":\n" + resources_.getString(DownloadMouseModeLayer.KEY_LOCALIZE_MESSAGE_DOWNLOAD_ERROR_NO_ROUTE_TO_HOST_MESSAGE)-->Line_77 $$ if (message == null) [ FD ]
Line_77 $$ if (message == null) -->Line_78 $$ Throwable cause = e.getCause()[ CD ]
Line_78 $$ Throwable cause = e.getCause()-->Line_78 $$ Throwable cause = e.getCause()[ CD ]
Line_77 $$ if (message == null) -->Line_79 $$ if (cause != null)[ CD ]
Line_78 $$ Throwable cause = e.getCause()-->Line_79 $$ if (cause != null)[ FD ]
Line_79 $$ if (cause != null)-->Line_79 $$ message = cause.getMessage()[ CD ]
Line_66 $$ String message = nrhe.getMessage() + ":\n" + resources_.getString(DownloadMouseModeLayer.KEY_LOCALIZE_MESSAGE_DOWNLOAD_ERROR_NO_ROUTE_TO_HOST_MESSAGE)-->Line_79 $$ message = cause.getMessage()[ FD ]
Line_79 $$ message = cause.getMessage()-->Line_79 $$ message = cause.getMessage()[ FD ]
Line_79 $$ message = cause.getMessage()-->Line_79 $$ message = cause.getMessage()[ CD ]
Line_78 $$ Throwable cause = e.getCause()-->Line_79 $$ message = cause.getMessage()[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_55 $$ out.write(buffer, 0, num_bytes)[ FD ]
Line_54 $$ while ((num_bytes = in.read(buffer)) != -1) -->Line_56 $$ sum_bytes += num_bytes[ FD ]
Line_56 $$ sum_bytes += num_bytes-->Line_57 $$ progress_listener.actionProgress(PROGRESS_LISTENER_ID, sum_bytes)[ FD ]
