Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static String fetch(String urltxt, String cookie) [ CD ]
Line_4 $$ URL url = new URL(urltxt)-->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ InputStream source = url.openStream()-->Line_6 $$ InputStream source = url.openStream()[ CD ]
Line_4 $$ URL url = new URL(urltxt)-->Line_6 $$ InputStream source = url.openStream()[ FD ]
Line_7 $$ String data = new Scanner(source).useDelimiter("\\A").next()-->Line_7 $$ String data = new Scanner(source).useDelimiter("\\A").next()[ CD ]
Line_8 $$ Pattern p = Pattern.compile("form action=\"(.*)\" method=\"post\"")-->Line_8 $$ Pattern p = Pattern.compile("form action=\"(.*)\" method=\"post\"")[ CD ]
Line_9 $$ Matcher m = p.matcher(data)-->Line_9 $$ Matcher m = p.matcher(data)[ CD ]
Line_8 $$ Pattern p = Pattern.compile("form action=\"(.*)\" method=\"post\"")-->Line_9 $$ Matcher m = p.matcher(data)[ FD ]
Line_7 $$ String data = new Scanner(source).useDelimiter("\\A").next()-->Line_9 $$ Matcher m = p.matcher(data)[ FD ]
Line_10 $$ if (!m.find())-->Line_10 $$ if (!m.find())[ CD ]
Line_10 $$ if (!m.find())-->Line_10 $$ if (!m.find())[ CD ]
Line_9 $$ Matcher m = p.matcher(data)-->Line_10 $$ if (!m.find())[ FD ]
Line_10 $$ if (!m.find())-->Line_10 $$ return ""[ CD ]
Line_2 $$ private static String fetch(String urltxt, String cookie) -->Line_11 $$ urltxt = m.group(1)[ FD ]
Line_11 $$ urltxt = m.group(1)-->Line_11 $$ urltxt = m.group(1)[ FD ]
Line_11 $$ urltxt = m.group(1)-->Line_11 $$ urltxt = m.group(1)[ CD ]
Line_9 $$ Matcher m = p.matcher(data)-->Line_11 $$ urltxt = m.group(1)[ FD ]
Line_4 $$ URL url = new URL(urltxt)-->Line_12 $$ url = new URL(urltxt)[ FD ]
Line_12 $$ url = new URL(urltxt)-->Line_12 $$ url = new URL(urltxt)[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_13 $$ conn = (HttpURLConnection) url.openConnection()-->Line_13 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ URL url = new URL(urltxt)-->Line_13 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_12 $$ url = new URL(urltxt)-->Line_13 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setRequestProperty("Cookie", cookie)[ FD ]
Line_13 $$ conn = (HttpURLConnection) url.openConnection()-->Line_14 $$ conn.setRequestProperty("Cookie", cookie)[ FD ]
Line_2 $$ private static String fetch(String urltxt, String cookie) -->Line_14 $$ conn.setRequestProperty("Cookie", cookie)[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ conn.setRequestMethod("POST")[ FD ]
Line_13 $$ conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ conn.setRequestMethod("POST")[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ conn.setDoOutput(true)[ FD ]
Line_13 $$ conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ conn.setDoOutput(true)[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_17 $$ OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_13 $$ conn = (HttpURLConnection) url.openConnection()-->Line_17 $$ OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_17 $$ OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream())-->Line_18 $$ out.write("dl.start=PREMIUM")[ FD ]
Line_17 $$ OutputStreamWriter out = new OutputStreamWriter(conn.getOutputStream())-->Line_19 $$ out.flush()[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_20 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_13 $$ conn = (HttpURLConnection) url.openConnection()-->Line_20 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))-->Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))[ FD ]
Line_7 $$ String data = new Scanner(source).useDelimiter("\\A").next()-->Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))[ FD ]
Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))-->Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))[ CD ]
Line_20 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))[ FD ]
Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))-->Line_22 $$ sb.append(data + System.getProperty("line.separator"))[ CD ]
Line_21 $$ StringBuffer sb = new StringBuffer()-->Line_22 $$ sb.append(data + System.getProperty("line.separator"))[ FD ]
Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))-->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_7 $$ String data = new Scanner(source).useDelimiter("\\A").next()-->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)-->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)-->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ CD ]
Line_2 $$ private static String fetch(String urltxt, String cookie) -->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_11 $$ urltxt = m.group(1)-->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_2 $$ private static String fetch(String urltxt, String cookie) -->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_11 $$ urltxt = m.group(1)-->Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)[ FD ]
Line_8 $$ Pattern p = Pattern.compile("form action=\"(.*)\" method=\"post\"")-->Line_24 $$ p = Pattern.compile("<tr><td><a href=\"(.*?)" + data)[ FD ]
Line_24 $$ p = Pattern.compile("<tr><td><a href=\"(.*?)" + data)-->Line_24 $$ p = Pattern.compile("<tr><td><a href=\"(.*?)" + data)[ FD ]
Line_24 $$ p = Pattern.compile("<tr><td><a href=\"(.*?)" + data)-->Line_24 $$ p = Pattern.compile("<tr><td><a href=\"(.*?)" + data)[ CD ]
Line_9 $$ Matcher m = p.matcher(data)-->Line_25 $$ m = p.matcher(sb.toString())[ FD ]
Line_25 $$ m = p.matcher(sb.toString())-->Line_25 $$ m = p.matcher(sb.toString())[ FD ]
Line_25 $$ m = p.matcher(sb.toString())-->Line_25 $$ m = p.matcher(sb.toString())[ CD ]
Line_8 $$ Pattern p = Pattern.compile("form action=\"(.*)\" method=\"post\"")-->Line_25 $$ m = p.matcher(sb.toString())[ FD ]
Line_24 $$ p = Pattern.compile("<tr><td><a href=\"(.*?)" + data)-->Line_25 $$ m = p.matcher(sb.toString())[ FD ]
Line_21 $$ StringBuffer sb = new StringBuffer()-->Line_25 $$ m = p.matcher(sb.toString())[ FD ]
Line_22 $$ while ((data = in.readLine()) != null) sb.append(data + System.getProperty("line.separator"))-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_7 $$ String data = new Scanner(source).useDelimiter("\\A").next()-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_23 $$ data = urltxt.substring(urltxt.lastIndexOf("/") + 1)-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_9 $$ Matcher m = p.matcher(data)-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_25 $$ m = p.matcher(sb.toString())-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_9 $$ Matcher m = p.matcher(data)-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
Line_25 $$ m = p.matcher(sb.toString())-->Line_26 $$ data = (m.find()) ? (m.group(1) + data + System.getProperty("line.separator")) : ""[ FD ]
