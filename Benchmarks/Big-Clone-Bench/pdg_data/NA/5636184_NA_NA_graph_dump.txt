Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Element postMessage() throws Exception [ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_3 $$ final URL theUrl = getHostURL()[ CD ]
Line_3 $$ final URL theUrl = getHostURL()-->Line_3 $$ final URL theUrl = getHostURL()[ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_4 $$ lf.debug("url = " + theUrl.toExternalForm())[ CD ]
Line_3 $$ final URL theUrl = getHostURL()-->Line_4 $$ lf.debug("url = " + theUrl.toExternalForm())[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_5 $$ final HttpURLConnection urlConn = (HttpURLConnection) (theUrl).openConnection()[ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_6 $$ urlConn.setRequestMethod("POST")[ CD ]
Line_5 $$ final HttpURLConnection urlConn = (HttpURLConnection) (theUrl).openConnection()-->Line_6 $$ urlConn.setRequestMethod("POST")[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_7 $$ urlConn.setDoInput(true)[ CD ]
Line_5 $$ final HttpURLConnection urlConn = (HttpURLConnection) (theUrl).openConnection()-->Line_7 $$ urlConn.setDoInput(true)[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_8 $$ urlConn.setDoOutput(true)[ CD ]
Line_5 $$ final HttpURLConnection urlConn = (HttpURLConnection) (theUrl).openConnection()-->Line_8 $$ urlConn.setDoOutput(true)[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_9 $$ final BufferedOutputStream bos = new BufferedOutputStream(urlConn.getOutputStream())[ CD ]
Line_5 $$ final HttpURLConnection urlConn = (HttpURLConnection) (theUrl).openConnection()-->Line_9 $$ final BufferedOutputStream bos = new BufferedOutputStream(urlConn.getOutputStream())[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_10 $$ final InputStream bis = urlConn.getInputStream()[ CD ]
Line_10 $$ final InputStream bis = urlConn.getInputStream()-->Line_10 $$ final InputStream bis = urlConn.getInputStream()[ CD ]
Line_5 $$ final HttpURLConnection urlConn = (HttpURLConnection) (theUrl).openConnection()-->Line_10 $$ final InputStream bis = urlConn.getInputStream()[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_12 $$ final byte[] buffer = new byte[1024][ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_13 $$ int count = 0[ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_14 $$ while ((count = bis.read(buffer)) > -1) [ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_2 $$ public static Element postMessage() throws Exception [ CD ]
Line_14 $$ while ((count = bis.read(buffer)) > -1) -->Line_14 $$ while ((count = bis.read(buffer)) > -1) [ FD ]
Line_13 $$ int count = 0-->Line_14 $$ while ((count = bis.read(buffer)) > -1) [ FD ]
Line_14 $$ while ((count = bis.read(buffer)) > -1) -->Line_14 $$ while ((count = bis.read(buffer)) > -1) [ CD ]
Line_10 $$ final InputStream bis = urlConn.getInputStream()-->Line_14 $$ while ((count = bis.read(buffer)) > -1) [ FD ]
Line_12 $$ final byte[] buffer = new byte[1024]-->Line_14 $$ while ((count = bis.read(buffer)) > -1) [ FD ]
Line_14 $$ while ((count = bis.read(buffer)) > -1) -->Line_15 $$ baos.write(buffer, 0, count)[ CD ]
Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_15 $$ baos.write(buffer, 0, count)[ FD ]
Line_12 $$ final byte[] buffer = new byte[1024]-->Line_15 $$ baos.write(buffer, 0, count)[ FD ]
Line_14 $$ while ((count = bis.read(buffer)) > -1) -->Line_15 $$ baos.write(buffer, 0, count)[ FD ]
Line_13 $$ int count = 0-->Line_15 $$ baos.write(buffer, 0, count)[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_17 $$ final SAXBuilder sb = new SAXBuilder()[ CD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_18 $$ lf.debug("Received XML response from server: " + baos.toString())[ CD ]
Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_18 $$ lf.debug("Received XML response from server: " + baos.toString())[ FD ]
Line_2 $$ public static Element postMessage() throws Exception -->Line_19 $$ return sb.build(new StringReader(baos.toString())).getRootElement()[ CD ]
Line_19 $$ return sb.build(new StringReader(baos.toString())).getRootElement()-->Line_19 $$ return sb.build(new StringReader(baos.toString())).getRootElement()[ CD ]
Line_17 $$ final SAXBuilder sb = new SAXBuilder()-->Line_19 $$ return sb.build(new StringReader(baos.toString())).getRootElement()[ FD ]
Line_11 $$ final ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_19 $$ return sb.build(new StringReader(baos.toString())).getRootElement()[ FD ]
Line_14 $$ while ((count = bis.read(buffer)) > -1) -->Line_15 $$ baos.write(buffer, 0, count)[ FD ]
