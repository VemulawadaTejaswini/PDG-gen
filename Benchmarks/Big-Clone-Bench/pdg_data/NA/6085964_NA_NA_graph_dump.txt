Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException [ CD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_3 $$ StringWriter sw = new StringWriter()[ CD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_4 $$ IOUtils.copy(is, sw, "UTF-8")[ CD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_4 $$ IOUtils.copy(is, sw, "UTF-8")[ FD ]
Line_3 $$ StringWriter sw = new StringWriter()-->Line_4 $$ IOUtils.copy(is, sw, "UTF-8")[ FD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_5 $$ if (passInVelocity) [ CD ]
Line_5 $$ if (passInVelocity) -->Line_6 $$ return tpl.formatStr(sw.toString(), templateVarsMap, tplName)[ CD ]
Line_6 $$ return tpl.formatStr(sw.toString(), templateVarsMap, tplName)-->Line_6 $$ return tpl.formatStr(sw.toString(), templateVarsMap, tplName)[ CD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_6 $$ return tpl.formatStr(sw.toString(), templateVarsMap, tplName)[ FD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_6 $$ return tpl.formatStr(sw.toString(), templateVarsMap, tplName)[ FD ]
Line_3 $$ StringWriter sw = new StringWriter()-->Line_6 $$ return tpl.formatStr(sw.toString(), templateVarsMap, tplName)[ FD ]
Line_2 $$ private static String readStreamToString(InputStream is, boolean passInVelocity, String tplName, Map<String, Object> templateVarsMap) throws IOException -->Line_8 $$ return sw.toString()[ CD ]
Line_8 $$ return sw.toString()-->Line_8 $$ return sw.toString()[ CD ]
Line_3 $$ StringWriter sw = new StringWriter()-->Line_8 $$ return sw.toString()[ FD ]
