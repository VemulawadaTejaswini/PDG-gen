Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception [ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_3 $$ URLConnection con = url.openConnection()[ CD ]
Line_3 $$ URLConnection con = url.openConnection()-->Line_3 $$ URLConnection con = url.openConnection()[ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_3 $$ URLConnection con = url.openConnection()[ FD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_4 $$ InputStreamReader reader = new InputStreamReader(con.getInputStream())[ CD ]
Line_3 $$ URLConnection con = url.openConnection()-->Line_4 $$ InputStreamReader reader = new InputStreamReader(con.getInputStream())[ FD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_5 $$ StringWriter wr = new StringWriter()[ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_6 $$ int c[ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_7 $$ StringBuffer token = null[ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_8 $$ while ((c = reader.read()) != -1) [ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception [ CD ]
Line_8 $$ while ((c = reader.read()) != -1) -->Line_8 $$ while ((c = reader.read()) != -1) [ FD ]
Line_6 $$ int c-->Line_8 $$ while ((c = reader.read()) != -1) [ FD ]
Line_8 $$ while ((c = reader.read()) != -1) -->Line_8 $$ while ((c = reader.read()) != -1) [ CD ]
Line_4 $$ InputStreamReader reader = new InputStreamReader(con.getInputStream())-->Line_8 $$ while ((c = reader.read()) != -1) [ FD ]
Line_8 $$ while ((c = reader.read()) != -1) -->Line_9 $$ if (c == '@') [ CD ]
Line_8 $$ while ((c = reader.read()) != -1) -->Line_9 $$ if (c == '@') [ FD ]
Line_6 $$ int c-->Line_9 $$ if (c == '@') [ FD ]
Line_9 $$ if (c == '@') -->Line_10 $$ if (token == null) [ CD ]
Line_7 $$ StringBuffer token = null-->Line_10 $$ if (token == null) [ FD ]
Line_10 $$ if (token == null) -->Line_11 $$ token = new StringBuffer()[ CD ]
Line_11 $$ token = new StringBuffer()-->Line_11 $$ token = new StringBuffer()[ FD ]
Line_7 $$ StringBuffer token = null-->Line_11 $$ token = new StringBuffer()[ FD ]
Line_10 $$ if (token == null) -->Line_13 $$ String val = replacer.replace(token.toString())[ CD ]
Line_13 $$ String val = replacer.replace(token.toString())-->Line_13 $$ String val = replacer.replace(token.toString())[ CD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_13 $$ String val = replacer.replace(token.toString())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_13 $$ String val = replacer.replace(token.toString())[ FD ]
Line_7 $$ StringBuffer token = null-->Line_13 $$ String val = replacer.replace(token.toString())[ FD ]
Line_10 $$ if (token == null) -->Line_14 $$ if (val != null) [ CD ]
Line_13 $$ String val = replacer.replace(token.toString())-->Line_14 $$ if (val != null) [ FD ]
Line_14 $$ if (val != null) -->Line_15 $$ wr.write(val)[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_15 $$ wr.write(val)[ FD ]
Line_13 $$ String val = replacer.replace(token.toString())-->Line_15 $$ wr.write(val)[ FD ]
Line_14 $$ if (val != null) -->Line_16 $$ token = null[ CD ]
Line_11 $$ token = new StringBuffer()-->Line_16 $$ token = null[ FD ]
Line_16 $$ token = null-->Line_16 $$ token = null[ FD ]
Line_7 $$ StringBuffer token = null-->Line_16 $$ token = null[ FD ]
Line_14 $$ if (val != null) -->Line_18 $$ wr.write('@')[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_18 $$ wr.write('@')[ FD ]
Line_14 $$ if (val != null) -->Line_19 $$ wr.write(token.toString())[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_19 $$ wr.write(token.toString())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_19 $$ wr.write(token.toString())[ FD ]
Line_16 $$ token = null-->Line_19 $$ wr.write(token.toString())[ FD ]
Line_7 $$ StringBuffer token = null-->Line_19 $$ wr.write(token.toString())[ FD ]
Line_14 $$ if (val != null) -->Line_20 $$ token.delete(0, token.length())[ CD ]
Line_11 $$ token = new StringBuffer()-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_16 $$ token = null-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_7 $$ StringBuffer token = null-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_16 $$ token = null-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_7 $$ StringBuffer token = null-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_9 $$ if (c == '@') -->Line_24 $$ if (token == null) [ CD ]
Line_11 $$ token = new StringBuffer()-->Line_24 $$ if (token == null) [ FD ]
Line_16 $$ token = null-->Line_24 $$ if (token == null) [ FD ]
Line_7 $$ StringBuffer token = null-->Line_24 $$ if (token == null) [ FD ]
Line_24 $$ if (token == null) -->Line_25 $$ wr.write((char) c)[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_25 $$ wr.write((char) c)[ FD ]
Line_24 $$ if (token == null) -->Line_27 $$ token.append((char) c)[ CD ]
Line_11 $$ token = new StringBuffer()-->Line_27 $$ token.append((char) c)[ FD ]
Line_16 $$ token = null-->Line_27 $$ token.append((char) c)[ FD ]
Line_7 $$ StringBuffer token = null-->Line_27 $$ token.append((char) c)[ FD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_31 $$ if (token != null) [ CD ]
Line_11 $$ token = new StringBuffer()-->Line_31 $$ if (token != null) [ FD ]
Line_16 $$ token = null-->Line_31 $$ if (token != null) [ FD ]
Line_7 $$ StringBuffer token = null-->Line_31 $$ if (token != null) [ FD ]
Line_31 $$ if (token != null) -->Line_32 $$ wr.write('@')[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_32 $$ wr.write('@')[ FD ]
Line_31 $$ if (token != null) -->Line_33 $$ wr.write(token.toString())[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_33 $$ wr.write(token.toString())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_33 $$ wr.write(token.toString())[ FD ]
Line_16 $$ token = null-->Line_33 $$ wr.write(token.toString())[ FD ]
Line_7 $$ StringBuffer token = null-->Line_33 $$ wr.write(token.toString())[ FD ]
Line_2 $$ public static String replace(URL url, Replacer replacer) throws Exception -->Line_35 $$ return wr.toString()[ CD ]
Line_35 $$ return wr.toString()-->Line_35 $$ return wr.toString()[ CD ]
Line_5 $$ StringWriter wr = new StringWriter()-->Line_35 $$ return wr.toString()[ FD ]
Line_8 $$ while ((c = reader.read()) != -1) -->Line_9 $$ if (c == '@') [ FD ]
Line_11 $$ token = new StringBuffer()-->Line_10 $$ if (token == null) [ FD ]
Line_16 $$ token = null-->Line_10 $$ if (token == null) [ FD ]
Line_11 $$ token = new StringBuffer()-->Line_13 $$ String val = replacer.replace(token.toString())[ FD ]
Line_16 $$ token = null-->Line_13 $$ String val = replacer.replace(token.toString())[ FD ]
Line_13 $$ String val = replacer.replace(token.toString())-->Line_14 $$ if (val != null) [ FD ]
Line_13 $$ String val = replacer.replace(token.toString())-->Line_15 $$ wr.write(val)[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_19 $$ wr.write(token.toString())[ FD ]
Line_16 $$ token = null-->Line_19 $$ wr.write(token.toString())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_16 $$ token = null-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_16 $$ token = null-->Line_20 $$ token.delete(0, token.length())[ FD ]
Line_11 $$ token = new StringBuffer()-->Line_24 $$ if (token == null) [ FD ]
Line_16 $$ token = null-->Line_24 $$ if (token == null) [ FD ]
Line_11 $$ token = new StringBuffer()-->Line_27 $$ token.append((char) c)[ FD ]
Line_16 $$ token = null-->Line_27 $$ token.append((char) c)[ FD ]
