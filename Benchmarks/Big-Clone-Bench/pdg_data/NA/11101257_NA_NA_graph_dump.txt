Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException [ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_3 $$ URL url = new URL(inURL)[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))[ CD ]
Line_3 $$ URL url = new URL(inURL)-->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))[ FD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_5 $$ String inLine = null[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_6 $$ String scoreFrom = "score=\""[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_7 $$ String homeTo = "\" side=\"Home"[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_8 $$ String awayTo = "\" side=\"Away"[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_9 $$ String goalInclud = "Stat"[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_10 $$ String playerFrom = "playerId=\""[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_11 $$ String playerTo = "\" position="[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_12 $$ String timeFrom = "time=\""[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_13 $$ String timeTo = "\" period"[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_14 $$ String teamFinish = "</Team>"[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_15 $$ boolean homeStart = false[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_16 $$ boolean awayStart = false[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_17 $$ while ((inLine = reader.readLine()) != null) [ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException [ CD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_17 $$ while ((inLine = reader.readLine()) != null) [ FD ]
Line_5 $$ String inLine = null-->Line_17 $$ while ((inLine = reader.readLine()) != null) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_17 $$ while ((inLine = reader.readLine()) != null) [ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))-->Line_17 $$ while ((inLine = reader.readLine()) != null) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_18 $$ if (inLine.indexOf(teamFinish) != -1) [ CD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_18 $$ if (inLine.indexOf(teamFinish) != -1) [ FD ]
Line_5 $$ String inLine = null-->Line_18 $$ if (inLine.indexOf(teamFinish) != -1) [ FD ]
Line_14 $$ String teamFinish = "</Team>"-->Line_18 $$ if (inLine.indexOf(teamFinish) != -1) [ FD ]
Line_18 $$ if (inLine.indexOf(teamFinish) != -1) -->Line_19 $$ homeStart = false[ CD ]
Line_19 $$ homeStart = false-->Line_19 $$ homeStart = false[ FD ]
Line_15 $$ boolean homeStart = false-->Line_19 $$ homeStart = false[ FD ]
Line_18 $$ if (inLine.indexOf(teamFinish) != -1) -->Line_20 $$ awayStart = false[ CD ]
Line_20 $$ awayStart = false-->Line_20 $$ awayStart = false[ FD ]
Line_16 $$ boolean awayStart = false-->Line_20 $$ awayStart = false[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_22 $$ if (inLine.indexOf(homeTo) != -1) [ CD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_22 $$ if (inLine.indexOf(homeTo) != -1) [ FD ]
Line_5 $$ String inLine = null-->Line_22 $$ if (inLine.indexOf(homeTo) != -1) [ FD ]
Line_7 $$ String homeTo = "\" side=\"Home"-->Line_22 $$ if (inLine.indexOf(homeTo) != -1) [ FD ]
Line_22 $$ if (inLine.indexOf(homeTo) != -1) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_6 $$ String scoreFrom = "score=\""-->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_6 $$ String scoreFrom = "score=\""-->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_7 $$ String homeTo = "\" side=\"Home"-->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_22 $$ if (inLine.indexOf(homeTo) != -1) -->Line_24 $$ homeStart = true[ CD ]
Line_19 $$ homeStart = false-->Line_24 $$ homeStart = true[ FD ]
Line_24 $$ homeStart = true-->Line_24 $$ homeStart = true[ FD ]
Line_15 $$ boolean homeStart = false-->Line_24 $$ homeStart = true[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ CD ]
Line_19 $$ homeStart = false-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_24 $$ homeStart = true-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_15 $$ boolean homeStart = false-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_5 $$ String inLine = null-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_9 $$ String goalInclud = "Stat"-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) -->Line_27 $$ MatchEvent me = new MatchEvent()[ CD ]
Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ CD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_5 $$ String inLine = null-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_5 $$ String inLine = null-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_10 $$ String playerFrom = "playerId=\""-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_10 $$ String playerFrom = "playerId=\""-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_5 $$ String inLine = null-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_11 $$ String playerTo = "\" position="-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ CD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_12 $$ String timeFrom = "time=\""-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_12 $$ String timeFrom = "time=\""-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_13 $$ String timeTo = "\" period"-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) -->Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()[ CD ]
Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()-->Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()[ FD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()[ FD ]
Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) -->Line_31 $$ boolean exist = false[ CD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) -->Line_34 $$ exist = true[ CD ]
Line_31 $$ boolean exist = false-->Line_34 $$ exist = true[ FD ]
Line_34 $$ exist = true-->Line_34 $$ exist = true[ FD ]
Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) -->Line_38 $$ if (!exist) [ CD ]
Line_31 $$ boolean exist = false-->Line_38 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_38 $$ if (!exist) [ FD ]
Line_38 $$ if (!exist) -->Line_38 $$ if (!exist) [ CD ]
Line_31 $$ boolean exist = false-->Line_38 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_38 $$ if (!exist) [ FD ]
Line_38 $$ if (!exist) -->Line_39 $$ mes.add(me)[ CD ]
Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()-->Line_39 $$ mes.add(me)[ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_39 $$ mes.add(me)[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_42 $$ if (inLine.indexOf(awayTo) != -1) [ CD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_42 $$ if (inLine.indexOf(awayTo) != -1) [ FD ]
Line_5 $$ String inLine = null-->Line_42 $$ if (inLine.indexOf(awayTo) != -1) [ FD ]
Line_8 $$ String awayTo = "\" side=\"Away"-->Line_42 $$ if (inLine.indexOf(awayTo) != -1) [ FD ]
Line_42 $$ if (inLine.indexOf(awayTo) != -1) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_6 $$ String scoreFrom = "score=\""-->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_6 $$ String scoreFrom = "score=\""-->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_8 $$ String awayTo = "\" side=\"Away"-->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_42 $$ if (inLine.indexOf(awayTo) != -1) -->Line_44 $$ awayStart = true[ CD ]
Line_20 $$ awayStart = false-->Line_44 $$ awayStart = true[ FD ]
Line_44 $$ awayStart = true-->Line_44 $$ awayStart = true[ FD ]
Line_16 $$ boolean awayStart = false-->Line_44 $$ awayStart = true[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ CD ]
Line_20 $$ awayStart = false-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_44 $$ awayStart = true-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_16 $$ boolean awayStart = false-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_5 $$ String inLine = null-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_9 $$ String goalInclud = "Stat"-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ CD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_5 $$ String inLine = null-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_5 $$ String inLine = null-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_10 $$ String playerFrom = "playerId=\""-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_10 $$ String playerFrom = "playerId=\""-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_5 $$ String inLine = null-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_11 $$ String playerTo = "\" position="-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ CD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_12 $$ String timeFrom = "time=\""-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_12 $$ String timeFrom = "time=\""-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_5 $$ String inLine = null-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_13 $$ String timeTo = "\" period"-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) -->Line_50 $$ List<MatchEvent> mes = result.get(matchId).getAwayEvents()[ CD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_50 $$ List<MatchEvent> mes = result.get(matchId).getAwayEvents()[ FD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_50 $$ List<MatchEvent> mes = result.get(matchId).getAwayEvents()[ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) -->Line_54 $$ exist = true[ CD ]
Line_31 $$ boolean exist = false-->Line_54 $$ exist = true[ FD ]
Line_34 $$ exist = true-->Line_54 $$ exist = true[ FD ]
Line_54 $$ exist = true-->Line_54 $$ exist = true[ FD ]
Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) -->Line_58 $$ if (!exist) [ CD ]
Line_31 $$ boolean exist = false-->Line_58 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_54 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_58 $$ if (!exist) -->Line_58 $$ if (!exist) [ CD ]
Line_31 $$ boolean exist = false-->Line_58 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_54 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_58 $$ if (!exist) -->Line_59 $$ mes.add(me)[ CD ]
Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()-->Line_59 $$ mes.add(me)[ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_59 $$ mes.add(me)[ FD ]
Line_2 $$ private void innerJob(String inURL, String matchId, Map<String, Match> result) throws UnsupportedEncodingException, IOException -->Line_63 $$ reader.close()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream(), "utf-8"))-->Line_63 $$ reader.close()[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_18 $$ if (inLine.indexOf(teamFinish) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_22 $$ if (inLine.indexOf(homeTo) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_23 $$ result.get(matchId).setHomeScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(homeTo)))[ FD ]
Line_19 $$ homeStart = false-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_24 $$ homeStart = true-->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_26 $$ if (homeStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_28 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_29 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_33 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_31 $$ boolean exist = false-->Line_38 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_38 $$ if (!exist) [ FD ]
Line_54 $$ exist = true-->Line_38 $$ if (!exist) [ FD ]
Line_31 $$ boolean exist = false-->Line_38 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_38 $$ if (!exist) [ FD ]
Line_54 $$ exist = true-->Line_38 $$ if (!exist) [ FD ]
Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()-->Line_39 $$ mes.add(me)[ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_39 $$ mes.add(me)[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_42 $$ if (inLine.indexOf(awayTo) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_43 $$ result.get(matchId).setAwayScore(inLine.substring(inLine.indexOf(scoreFrom) + scoreFrom.length(), inLine.indexOf(awayTo)))[ FD ]
Line_20 $$ awayStart = false-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_44 $$ awayStart = true-->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_46 $$ if (awayStart && inLine.indexOf(goalInclud) != -1) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_48 $$ me.setPlayerName(getPlayerName(inLine.substring(inLine.indexOf(playerFrom) + playerFrom.length(), inLine.indexOf(playerTo))))[ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_17 $$ while ((inLine = reader.readLine()) != null) -->Line_49 $$ me.setTime(inLine.substring(inLine.indexOf(timeFrom) + timeFrom.length(), inLine.indexOf(timeTo)))[ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_32 $$ for (MatchEvent _me : mes) -->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_53 $$ if (_me.getPlayerName().equals(me.getPlayerName()) && _me.getTime().equals(me.getTime())) [ FD ]
Line_31 $$ boolean exist = false-->Line_58 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_54 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_31 $$ boolean exist = false-->Line_58 $$ if (!exist) [ FD ]
Line_34 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_54 $$ exist = true-->Line_58 $$ if (!exist) [ FD ]
Line_30 $$ List<MatchEvent> mes = result.get(matchId).getHomeEvents()-->Line_59 $$ mes.add(me)[ FD ]
Line_27 $$ MatchEvent me = new MatchEvent()-->Line_59 $$ mes.add(me)[ FD ]
