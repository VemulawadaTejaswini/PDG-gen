Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void checkLogin(String email, String password) throws JspTagException [ CD ]
Line_2 $$ private void checkLogin(String email, String password) throws JspTagException -->Line_3 $$ String cryptedPassword[ CD ]
Line_5 $$ MessageDigest crypt = MessageDigest.getInstance("MD5")-->Line_5 $$ MessageDigest crypt = MessageDigest.getInstance("MD5")[ CD ]
Line_5 $$ MessageDigest crypt = MessageDigest.getInstance("MD5")-->Line_6 $$ crypt.update(password.getBytes())[ FD ]
Line_2 $$ private void checkLogin(String email, String password) throws JspTagException -->Line_6 $$ crypt.update(password.getBytes())[ FD ]
Line_7 $$ byte digest[] = crypt.digest()-->Line_7 $$ byte digest[] = crypt.digest()[ CD ]
Line_5 $$ MessageDigest crypt = MessageDigest.getInstance("MD5")-->Line_7 $$ byte digest[] = crypt.digest()[ FD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_9 $$ for (int i = 0; i < digest.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_9 $$ for (int i = 0; i < digest.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_9 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_10 $$ hexString.append(hexDigit(digest[i]))[ CD ]
Line_8 $$ StringBuffer hexString = new StringBuffer()-->Line_10 $$ hexString.append(hexDigit(digest[i]))[ FD ]
Line_3 $$ String cryptedPassword-->Line_12 $$ cryptedPassword = hexString.toString()[ FD ]
Line_12 $$ cryptedPassword = hexString.toString()-->Line_12 $$ cryptedPassword = hexString.toString()[ FD ]
Line_12 $$ cryptedPassword = hexString.toString()-->Line_12 $$ cryptedPassword = hexString.toString()[ CD ]
Line_8 $$ StringBuffer hexString = new StringBuffer()-->Line_12 $$ cryptedPassword = hexString.toString()[ FD ]
Line_5 $$ MessageDigest crypt = MessageDigest.getInstance("MD5")-->Line_13 $$ crypt.reset()[ FD ]
Line_15 $$ java.lang.Object homeRef = context.lookup("java:comp/env/ejb/Value")-->Line_15 $$ java.lang.Object homeRef = context.lookup("java:comp/env/ejb/Value")[ CD ]
Line_14 $$ InitialContext context = new InitialContext()-->Line_15 $$ java.lang.Object homeRef = context.lookup("java:comp/env/ejb/Value")[ FD ]
Line_15 $$ java.lang.Object homeRef = context.lookup("java:comp/env/ejb/Value")-->Line_16 $$ ValueHome valueHome = (ValueHome) PortableRemoteObject.narrow(homeRef, ValueHome.class)[ FD ]
Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)-->Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)[ CD ]
Line_16 $$ ValueHome valueHome = (ValueHome) PortableRemoteObject.narrow(homeRef, ValueHome.class)-->Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)[ FD ]
Line_2 $$ private void checkLogin(String email, String password) throws JspTagException -->Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)[ FD ]
Line_3 $$ String cryptedPassword-->Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)[ FD ]
Line_12 $$ cryptedPassword = hexString.toString()-->Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)[ FD ]
Line_19 $$ HttpSession session = pageContext.getSession()-->Line_19 $$ HttpSession session = pageContext.getSession()[ CD ]
Line_19 $$ HttpSession session = pageContext.getSession()-->Line_20 $$ session.setAttribute("jspShop.userID", value.getObjectID())[ FD ]
Line_17 $$ Value value = valueHome.findByPasswordCheck(email, cryptedPassword)-->Line_20 $$ session.setAttribute("jspShop.userID", value.getObjectID())[ FD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_9 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_9 $$ for (int i = 0; i < digest.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < digest.length; i++) -->Line_9 $$ for (int i = 0; i < digest.length; i++) [ FD ]
