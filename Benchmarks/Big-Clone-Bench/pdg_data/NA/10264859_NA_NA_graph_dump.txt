Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) [ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_3 $$ GeocodeResponse result = null[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_4 $$ String adress = null[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_5 $$ if (searchAddressRequest.getAdressTextField() != null)[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_5 $$ if (searchAddressRequest.getAdressTextField() != null)[ FD ]
Line_5 $$ if (searchAddressRequest.getAdressTextField() != null)-->Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()[ CD ]
Line_4 $$ String adress = null-->Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()[ FD ]
Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()-->Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()[ FD ]
Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()-->Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()[ FD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_6 $$ if (adress == null || adress.length() == 0)[ CD ]
Line_4 $$ String adress = null-->Line_6 $$ if (adress == null || adress.length() == 0)[ FD ]
Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()-->Line_6 $$ if (adress == null || adress.length() == 0)[ FD ]
Line_6 $$ if (adress == null || adress.length() == 0)-->Line_6 $$ adress = " "[ CD ]
Line_4 $$ String adress = null-->Line_6 $$ adress = " "[ FD ]
Line_5 $$ adress = searchAddressRequest.getAdressTextField().getText()-->Line_6 $$ adress = " "[ FD ]
Line_6 $$ adress = " "-->Line_6 $$ adress = " "[ FD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_7 $$ String postRequest = ""[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_8 $$ postRequest = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n" + "<xls:XLS xmlns:xls=\"http://www.opengis.net/xls\" xmlns:sch=\"http://www.ascc.net/xml/schematron\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/xls \n" + "http://gdi3d.giub.uni-bonn.de:8080/openls-lus/schemas/LocationUtilityService.xsd\" version=\"1.1\"> \n" + "	<xls:RequestHeader srsName=\"EPSG:" + Navigator.getEpsg_code() + "\"/> \n" + "	<xls:Request methodName=\"GeocodeRequest\" requestID=\"123456789\" version=\"1.1\"> \n" + "		<xls:GeocodeRequest> \n" + "			<xls:Address countryCode=\"DE\"> \n" + "				<xls:freeFormAddress>" + adress + "</xls:freeFormAddress> \n" + "			</xls:Address> \n" + "		</xls:GeocodeRequest> \n" + "	</xls:Request> \n" + "</xls:XLS> \n"[ CD ]
Line_7 $$ String postRequest = ""-->Line_8 $$ postRequest = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n" + "<xls:XLS xmlns:xls=\"http://www.opengis.net/xls\" xmlns:sch=\"http://www.ascc.net/xml/schematron\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/xls \n" + "http://gdi3d.giub.uni-bonn.de:8080/openls-lus/schemas/LocationUtilityService.xsd\" version=\"1.1\"> \n" + "	<xls:RequestHeader srsName=\"EPSG:" + Navigator.getEpsg_code() + "\"/> \n" + "	<xls:Request methodName=\"GeocodeRequest\" requestID=\"123456789\" version=\"1.1\"> \n" + "		<xls:GeocodeRequest> \n" + "			<xls:Address countryCode=\"DE\"> \n" + "				<xls:freeFormAddress>" + adress + "</xls:freeFormAddress> \n" + "			</xls:Address> \n" + "		</xls:GeocodeRequest> \n" + "	</xls:Request> \n" + "</xls:XLS> \n"[ FD ]
Line_8 $$ postRequest = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n" + "<xls:XLS xmlns:xls=\"http://www.opengis.net/xls\" xmlns:sch=\"http://www.ascc.net/xml/schematron\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/xls \n" + "http://gdi3d.giub.uni-bonn.de:8080/openls-lus/schemas/LocationUtilityService.xsd\" version=\"1.1\"> \n" + "	<xls:RequestHeader srsName=\"EPSG:" + Navigator.getEpsg_code() + "\"/> \n" + "	<xls:Request methodName=\"GeocodeRequest\" requestID=\"123456789\" version=\"1.1\"> \n" + "		<xls:GeocodeRequest> \n" + "			<xls:Address countryCode=\"DE\"> \n" + "				<xls:freeFormAddress>" + adress + "</xls:freeFormAddress> \n" + "			</xls:Address> \n" + "		</xls:GeocodeRequest> \n" + "	</xls:Request> \n" + "</xls:XLS> \n"-->Line_8 $$ postRequest = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n" + "<xls:XLS xmlns:xls=\"http://www.opengis.net/xls\" xmlns:sch=\"http://www.ascc.net/xml/schematron\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/xls \n" + "http://gdi3d.giub.uni-bonn.de:8080/openls-lus/schemas/LocationUtilityService.xsd\" version=\"1.1\"> \n" + "	<xls:RequestHeader srsName=\"EPSG:" + Navigator.getEpsg_code() + "\"/> \n" + "	<xls:Request methodName=\"GeocodeRequest\" requestID=\"123456789\" version=\"1.1\"> \n" + "		<xls:GeocodeRequest> \n" + "			<xls:Address countryCode=\"DE\"> \n" + "				<xls:freeFormAddress>" + adress + "</xls:freeFormAddress> \n" + "			</xls:Address> \n" + "		</xls:GeocodeRequest> \n" + "	</xls:Request> \n" + "</xls:XLS> \n"[ FD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_9 $$ if (Navigator.isVerbose()) [ CD ]
Line_9 $$ if (Navigator.isVerbose()) -->Line_9 $$ if (Navigator.isVerbose()) [ CD ]
Line_9 $$ if (Navigator.isVerbose()) -->Line_10 $$ System.out.println("OpenLSGeocoder postRequest " + postRequest)[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_12 $$ String errorMessage = ""[ CD ]
Line_15 $$ URL u = new URL(serviceEndPoint)-->Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_17 $$ urlc.setReadTimeout(Navigator.TIME_OUT)[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_18 $$ urlc.setAllowUserInteraction(false)[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_19 $$ urlc.setRequestMethod("POST")[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_20 $$ urlc.setRequestProperty("Content-Type", "application/xml")[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_21 $$ urlc.setDoOutput(true)[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_22 $$ urlc.setDoInput(true)[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_23 $$ urlc.setUseCaches(false)[ FD ]
Line_24 $$ PrintWriter xmlOut = null-->Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())[ FD ]
Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())-->Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())[ FD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())[ FD ]
Line_24 $$ PrintWriter xmlOut = null-->Line_26 $$ xmlOut.write(postRequest)[ FD ]
Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())-->Line_26 $$ xmlOut.write(postRequest)[ FD ]
Line_7 $$ String postRequest = ""-->Line_26 $$ xmlOut.write(postRequest)[ FD ]
Line_8 $$ postRequest = "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n" + "<xls:XLS xmlns:xls=\"http://www.opengis.net/xls\" xmlns:sch=\"http://www.ascc.net/xml/schematron\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/xls \n" + "http://gdi3d.giub.uni-bonn.de:8080/openls-lus/schemas/LocationUtilityService.xsd\" version=\"1.1\"> \n" + "	<xls:RequestHeader srsName=\"EPSG:" + Navigator.getEpsg_code() + "\"/> \n" + "	<xls:Request methodName=\"GeocodeRequest\" requestID=\"123456789\" version=\"1.1\"> \n" + "		<xls:GeocodeRequest> \n" + "			<xls:Address countryCode=\"DE\"> \n" + "				<xls:freeFormAddress>" + adress + "</xls:freeFormAddress> \n" + "			</xls:Address> \n" + "		</xls:GeocodeRequest> \n" + "	</xls:Request> \n" + "</xls:XLS> \n"-->Line_26 $$ xmlOut.write(postRequest)[ FD ]
Line_24 $$ PrintWriter xmlOut = null-->Line_27 $$ xmlOut.flush()[ FD ]
Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())-->Line_27 $$ xmlOut.flush()[ FD ]
Line_24 $$ PrintWriter xmlOut = null-->Line_28 $$ xmlOut.close()[ FD ]
Line_25 $$ xmlOut = new java.io.PrintWriter(urlc.getOutputStream())-->Line_28 $$ xmlOut.close()[ FD ]
Line_29 $$ InputStream is = urlc.getInputStream()-->Line_29 $$ InputStream is = urlc.getInputStream()[ CD ]
Line_16 $$ HttpURLConnection urlc = (HttpURLConnection) u.openConnection()-->Line_29 $$ InputStream is = urlc.getInputStream()[ FD ]
Line_3 $$ GeocodeResponse result = null-->Line_30 $$ result = new GeocodeResponse()[ FD ]
Line_30 $$ result = new GeocodeResponse()-->Line_30 $$ result = new GeocodeResponse()[ FD ]
Line_31 $$ XLSDocument xlsResponse = XLSDocument.Factory.parse(is)-->Line_31 $$ XLSDocument xlsResponse = XLSDocument.Factory.parse(is)[ CD ]
Line_29 $$ InputStream is = urlc.getInputStream()-->Line_31 $$ XLSDocument xlsResponse = XLSDocument.Factory.parse(is)[ FD ]
Line_32 $$ XLSType xlsTypeResponse = xlsResponse.getXLS()-->Line_32 $$ XLSType xlsTypeResponse = xlsResponse.getXLS()[ CD ]
Line_31 $$ XLSDocument xlsResponse = XLSDocument.Factory.parse(is)-->Line_32 $$ XLSType xlsTypeResponse = xlsResponse.getXLS()[ FD ]
Line_33 $$ Node node0 = xlsTypeResponse.getDomNode()-->Line_33 $$ Node node0 = xlsTypeResponse.getDomNode()[ CD ]
Line_32 $$ XLSType xlsTypeResponse = xlsResponse.getXLS()-->Line_33 $$ Node node0 = xlsTypeResponse.getDomNode()[ FD ]
Line_34 $$ NodeList nodes1 = node0.getChildNodes()-->Line_34 $$ NodeList nodes1 = node0.getChildNodes()[ CD ]
Line_33 $$ Node node0 = xlsTypeResponse.getDomNode()-->Line_34 $$ NodeList nodes1 = node0.getChildNodes()[ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ CD ]
Line_34 $$ NodeList nodes1 = node0.getChildNodes()-->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ CD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ CD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_36 $$ Node node1 = nodes1.item(i)[ CD ]
Line_36 $$ Node node1 = nodes1.item(i)-->Line_36 $$ Node node1 = nodes1.item(i)[ CD ]
Line_34 $$ NodeList nodes1 = node0.getChildNodes()-->Line_36 $$ Node node1 = nodes1.item(i)[ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_36 $$ Node node1 = nodes1.item(i)[ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_37 $$ NodeList nodes2 = node1.getChildNodes()[ CD ]
Line_37 $$ NodeList nodes2 = node1.getChildNodes()-->Line_37 $$ NodeList nodes2 = node1.getChildNodes()[ CD ]
Line_36 $$ Node node1 = nodes1.item(i)-->Line_37 $$ NodeList nodes2 = node1.getChildNodes()[ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ CD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ CD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ CD ]
Line_37 $$ NodeList nodes2 = node1.getChildNodes()-->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ CD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ CD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_39 $$ Node node2 = nodes2.item(j)[ CD ]
Line_39 $$ Node node2 = nodes2.item(j)-->Line_39 $$ Node node2 = nodes2.item(j)[ CD ]
Line_37 $$ NodeList nodes2 = node1.getChildNodes()-->Line_39 $$ Node node2 = nodes2.item(j)[ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_39 $$ Node node2 = nodes2.item(j)[ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_40 $$ NodeList nodes3 = node2.getChildNodes()[ CD ]
Line_40 $$ NodeList nodes3 = node2.getChildNodes()-->Line_40 $$ NodeList nodes3 = node2.getChildNodes()[ CD ]
Line_39 $$ Node node2 = nodes2.item(j)-->Line_40 $$ NodeList nodes3 = node2.getChildNodes()[ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ CD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ CD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ CD ]
Line_40 $$ NodeList nodes3 = node2.getChildNodes()-->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ CD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ CD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_42 $$ Node node3 = nodes3.item(k)[ CD ]
Line_42 $$ Node node3 = nodes3.item(k)-->Line_42 $$ Node node3 = nodes3.item(k)[ CD ]
Line_40 $$ NodeList nodes3 = node2.getChildNodes()-->Line_42 $$ Node node3 = nodes3.item(k)[ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_42 $$ Node node3 = nodes3.item(k)[ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_43 $$ String nodeName = node3.getNodeName()[ CD ]
Line_43 $$ String nodeName = node3.getNodeName()-->Line_43 $$ String nodeName = node3.getNodeName()[ CD ]
Line_42 $$ Node node3 = nodes3.item(k)-->Line_43 $$ String nodeName = node3.getNodeName()[ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) [ CD ]
Line_43 $$ String nodeName = node3.getNodeName()-->Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) [ FD ]
Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) -->Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) [ CD ]
Line_43 $$ String nodeName = node3.getNodeName()-->Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) [ FD ]
Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) -->Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)[ CD ]
Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)-->Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)[ CD ]
Line_42 $$ Node node3 = nodes3.item(k)-->Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)[ FD ]
Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) -->Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()[ CD ]
Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()-->Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()[ CD ]
Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)-->Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()[ FD ]
Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) -->Line_47 $$ result.setGeocodeResponseList(geocodeResponseList)[ CD ]
Line_3 $$ GeocodeResponse result = null-->Line_47 $$ result.setGeocodeResponseList(geocodeResponseList)[ FD ]
Line_30 $$ result = new GeocodeResponse()-->Line_47 $$ result.setGeocodeResponseList(geocodeResponseList)[ FD ]
Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()-->Line_47 $$ result.setGeocodeResponseList(geocodeResponseList)[ FD ]
Line_29 $$ InputStream is = urlc.getInputStream()-->Line_52 $$ is.close()[ FD ]
Line_12 $$ String errorMessage = ""-->Line_57 $$ errorMessage += "<p>Time Out Exception, Server is not responding</p>"[ FD ]
Line_57 $$ errorMessage += "<p>Time Out Exception, Server is not responding</p>"-->Line_57 $$ errorMessage += "<p>Time Out Exception, Server is not responding</p>"[ FD ]
Line_12 $$ String errorMessage = ""-->Line_60 $$ errorMessage += "<p>IO Exception</p>"[ FD ]
Line_57 $$ errorMessage += "<p>Time Out Exception, Server is not responding</p>"-->Line_60 $$ errorMessage += "<p>IO Exception</p>"[ FD ]
Line_60 $$ errorMessage += "<p>IO Exception</p>"-->Line_60 $$ errorMessage += "<p>IO Exception</p>"[ FD ]
Line_12 $$ String errorMessage = ""-->Line_63 $$ errorMessage += "<p>Error occured during parsing the XML response</p>"[ FD ]
Line_57 $$ errorMessage += "<p>Time Out Exception, Server is not responding</p>"-->Line_63 $$ errorMessage += "<p>Error occured during parsing the XML response</p>"[ FD ]
Line_60 $$ errorMessage += "<p>IO Exception</p>"-->Line_63 $$ errorMessage += "<p>Error occured during parsing the XML response</p>"[ FD ]
Line_63 $$ errorMessage += "<p>Error occured during parsing the XML response</p>"-->Line_63 $$ errorMessage += "<p>Error occured during parsing the XML response</p>"[ FD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_65 $$ if (!errorMessage.equals("")) [ CD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_65 $$ if (!errorMessage.equals("")) [ CD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_65 $$ if (!errorMessage.equals("")) [ CD ]
Line_12 $$ String errorMessage = ""-->Line_65 $$ if (!errorMessage.equals("")) [ FD ]
Line_57 $$ errorMessage += "<p>Time Out Exception, Server is not responding</p>"-->Line_65 $$ if (!errorMessage.equals("")) [ FD ]
Line_60 $$ errorMessage += "<p>IO Exception</p>"-->Line_65 $$ if (!errorMessage.equals("")) [ FD ]
Line_63 $$ errorMessage += "<p>Error occured during parsing the XML response</p>"-->Line_65 $$ if (!errorMessage.equals("")) [ FD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_66 $$ System.out.println("\nerrorMessage: " + errorMessage + "\n\n")[ CD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_67 $$ JLabel label1 = new JLabel("<html><head><style type=\"text/css\"><!--.Stil2 [ CD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_68 $$ JLabel label2 = new JLabel("<html><head><style type=\"text/css\"><!--.Stil2 [ CD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_69 $$ Object[] objects = [ CD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_70 $$ JOptionPane.showMessageDialog(null, objects, "Error Message", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_69 $$ Object[] objects = -->Line_70 $$ JOptionPane.showMessageDialog(null, objects, "Error Message", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_65 $$ if (!errorMessage.equals("")) -->Line_71 $$ return null[ CD ]
Line_2 $$ public GeocodeResponse getGKCoordinateFromAddress(SearchAddressRequest searchAddressRequest) -->Line_73 $$ return result[ CD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) [ FD ]
Line_35 $$ for (int i = 0; i < nodes1.getLength(); i++) -->Line_36 $$ Node node1 = nodes1.item(i)[ FD ]
Line_36 $$ Node node1 = nodes1.item(i)-->Line_37 $$ NodeList nodes2 = node1.getChildNodes()[ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) [ FD ]
Line_38 $$ for (int j = 0; j < nodes2.getLength(); j++) -->Line_39 $$ Node node2 = nodes2.item(j)[ FD ]
Line_39 $$ Node node2 = nodes2.item(j)-->Line_40 $$ NodeList nodes3 = node2.getChildNodes()[ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) [ FD ]
Line_41 $$ for (int k = 0; k < nodes3.getLength(); k++) -->Line_42 $$ Node node3 = nodes3.item(k)[ FD ]
Line_42 $$ Node node3 = nodes3.item(k)-->Line_43 $$ String nodeName = node3.getNodeName()[ FD ]
Line_43 $$ String nodeName = node3.getNodeName()-->Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) [ FD ]
Line_43 $$ String nodeName = node3.getNodeName()-->Line_44 $$ if (nodeName.equalsIgnoreCase("xls:GeocodeResponseList")) [ FD ]
Line_42 $$ Node node3 = nodes3.item(k)-->Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)[ FD ]
Line_45 $$ net.opengis.xls.GeocodeResponseListDocument gcrld = net.opengis.xls.GeocodeResponseListDocument.Factory.parse(node3)-->Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()[ FD ]
Line_46 $$ net.opengis.xls.GeocodeResponseListType geocodeResponseList = gcrld.getGeocodeResponseList()-->Line_47 $$ result.setGeocodeResponseList(geocodeResponseList)[ FD ]
