Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException [ CD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_3 $$ String protocol = "http"[ CD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_4 $$ String host = getHost()[ CD ]
Line_4 $$ String host = getHost()-->Line_4 $$ String host = getHost()[ CD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_5 $$ int port = Integer.parseInt(getPort())[ CD ]
Line_5 $$ int port = Integer.parseInt(getPort())-->Line_5 $$ int port = Integer.parseInt(getPort())[ CD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_8 $$ Object key = entry.getKey()-->Line_8 $$ Object key = entry.getKey()[ CD ]
Line_7 $$ for (Map.Entry entry : params) -->Line_8 $$ Object key = entry.getKey()[ FD ]
Line_9 $$ Object value = entry.getValue()-->Line_9 $$ Object value = entry.getValue()[ CD ]
Line_7 $$ for (Map.Entry entry : params) -->Line_9 $$ Object value = entry.getValue()[ FD ]
Line_9 $$ Object value = entry.getValue()-->Line_10 $$ sb.append(key).append("=").append(value).append("&")[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(key).append("=").append(value).append("&")[ FD ]
Line_8 $$ Object key = entry.getKey()-->Line_10 $$ sb.append(key).append("=").append(value).append("&")[ FD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_12 $$ sb.setLength(sb.length() - 1)[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.setLength(sb.length() - 1)[ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.setLength(sb.length() - 1)[ FD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_13 $$ String file = "/" + getUrl() + "/?" + sb.toString()[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ String file = "/" + getUrl() + "/?" + sb.toString()[ FD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_14 $$ URL url = new URL(protocol, host, port, file)[ CD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_15 $$ logger.debug(url.toString())[ CD ]
Line_14 $$ URL url = new URL(protocol, host, port, file)-->Line_15 $$ logger.debug(url.toString())[ FD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_16 $$ InputStream stream[ CD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_17 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_14 $$ URL url = new URL(protocol, host, port, file)-->Line_17 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_16 $$ InputStream stream-->Line_19 $$ stream = conn.getInputStream()[ FD ]
Line_19 $$ stream = conn.getInputStream()-->Line_19 $$ stream = conn.getInputStream()[ FD ]
Line_19 $$ stream = conn.getInputStream()-->Line_19 $$ stream = conn.getInputStream()[ CD ]
Line_17 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_19 $$ stream = conn.getInputStream()[ FD ]
Line_21 $$ InputStream is = conn.getErrorStream()-->Line_21 $$ InputStream is = conn.getErrorStream()[ CD ]
Line_17 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_21 $$ InputStream is = conn.getErrorStream()[ FD ]
Line_21 $$ InputStream is = conn.getErrorStream()-->Line_22 $$ if (is != null) [ FD ]
Line_22 $$ if (is != null) -->Line_23 $$ String msg = getStringFromInputStream(conn.getErrorStream())[ CD ]
Line_23 $$ String msg = getStringFromInputStream(conn.getErrorStream())-->Line_23 $$ String msg = getStringFromInputStream(conn.getErrorStream())[ CD ]
Line_17 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_23 $$ String msg = getStringFromInputStream(conn.getErrorStream())[ FD ]
Line_2 $$ public InputStream doRemoteCall(NamedList<String> params) throws IOException -->Line_29 $$ return stream[ CD ]
