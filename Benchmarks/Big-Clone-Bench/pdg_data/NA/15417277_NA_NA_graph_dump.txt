Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException [ CD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_3 $$ PersistenceManager.persistenceURL.get().addFirst(url)[ CD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_3 $$ PersistenceManager.persistenceURL.get().addFirst(url)[ FD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_4 $$ ObjectInputStream ois = null[ CD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_5 $$ HierarchicalStreamReader reader = null[ CD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_6 $$ XStream xstream = null[ CD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_8 $$ Reader inputReader = new java.io.InputStreamReader(url.openStream())[ FD ]
Line_10 $$ XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_10 $$ XMLInputFactory inputFactory = XMLInputFactory.newInstance()[ CD ]
Line_11 $$ XMLStreamReader xsr = inputFactory.createXMLStreamReader(url.toExternalForm(), inputReader)-->Line_11 $$ XMLStreamReader xsr = inputFactory.createXMLStreamReader(url.toExternalForm(), inputReader)[ CD ]
Line_10 $$ XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_11 $$ XMLStreamReader xsr = inputFactory.createXMLStreamReader(url.toExternalForm(), inputReader)[ FD ]
Line_8 $$ Reader inputReader = new java.io.InputStreamReader(url.openStream())-->Line_11 $$ XMLStreamReader xsr = inputFactory.createXMLStreamReader(url.toExternalForm(), inputReader)[ FD ]
Line_2 $$ static Object loadPersistentRepresentationFromFile(URL url) throws PersistenceException -->Line_11 $$ XMLStreamReader xsr = inputFactory.createXMLStreamReader(url.toExternalForm(), inputReader)[ FD ]
Line_5 $$ HierarchicalStreamReader reader = null-->Line_12 $$ reader = new StaxReader(new QNameMap(), xsr)[ FD ]
Line_12 $$ reader = new StaxReader(new QNameMap(), xsr)-->Line_12 $$ reader = new StaxReader(new QNameMap(), xsr)[ FD ]
Line_6 $$ XStream xstream = null-->Line_16 $$ xstream = new XStream(new StaxDriver())[ FD ]
Line_16 $$ xstream = new XStream(new StaxDriver())-->Line_16 $$ xstream = new XStream(new StaxDriver())[ FD ]
Line_6 $$ XStream xstream = null-->Line_17 $$ xstream.setClassLoader(Gate.getClassLoader())[ FD ]
Line_16 $$ xstream = new XStream(new StaxDriver())-->Line_17 $$ xstream.setClassLoader(Gate.getClassLoader())[ FD ]
Line_4 $$ ObjectInputStream ois = null-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ FD ]
Line_18 $$ ois = xstream.createObjectInputStream(reader)-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ FD ]
Line_18 $$ ois = xstream.createObjectInputStream(reader)-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ CD ]
Line_6 $$ XStream xstream = null-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ FD ]
Line_16 $$ xstream = new XStream(new StaxDriver())-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ FD ]
Line_5 $$ HierarchicalStreamReader reader = null-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ FD ]
Line_12 $$ reader = new StaxReader(new QNameMap(), xsr)-->Line_18 $$ ois = xstream.createObjectInputStream(reader)[ FD ]
Line_20 $$ Iterator urlIter = ((Collection) PersistenceManager.getTransientRepresentation(ois.readObject())).iterator()-->Line_20 $$ Iterator urlIter = ((Collection) PersistenceManager.getTransientRepresentation(ois.readObject())).iterator()[ CD ]
Line_4 $$ ObjectInputStream ois = null-->Line_20 $$ Iterator urlIter = ((Collection) PersistenceManager.getTransientRepresentation(ois.readObject())).iterator()[ FD ]
Line_18 $$ ois = xstream.createObjectInputStream(reader)-->Line_20 $$ Iterator urlIter = ((Collection) PersistenceManager.getTransientRepresentation(ois.readObject())).iterator()[ FD ]
Line_21 $$ while (urlIter.hasNext()) -->Line_21 $$ while (urlIter.hasNext()) [ CD ]
Line_20 $$ Iterator urlIter = ((Collection) PersistenceManager.getTransientRepresentation(ois.readObject())).iterator()-->Line_21 $$ while (urlIter.hasNext()) [ FD ]
Line_21 $$ while (urlIter.hasNext()) -->Line_22 $$ URL anUrl = (URL) urlIter.next()[ CD ]
Line_20 $$ Iterator urlIter = ((Collection) PersistenceManager.getTransientRepresentation(ois.readObject())).iterator()-->Line_22 $$ URL anUrl = (URL) urlIter.next()[ FD ]
Line_22 $$ URL anUrl = (URL) urlIter.next()-->Line_24 $$ Gate.getCreoleRegister().registerDirectories(anUrl)[ FD ]
Line_22 $$ URL anUrl = (URL) urlIter.next()-->Line_26 $$ Err.prln("Could not reload creole directory " + anUrl.toExternalForm())[ FD ]
Line_19 $$ Object res = null-->Line_29 $$ res = ois.readObject()[ FD ]
Line_29 $$ res = ois.readObject()-->Line_29 $$ res = ois.readObject()[ FD ]
Line_29 $$ res = ois.readObject()-->Line_29 $$ res = ois.readObject()[ CD ]
Line_4 $$ ObjectInputStream ois = null-->Line_29 $$ res = ois.readObject()[ FD ]
Line_18 $$ ois = xstream.createObjectInputStream(reader)-->Line_29 $$ res = ois.readObject()[ FD ]
Line_4 $$ ObjectInputStream ois = null-->Line_30 $$ ois.close()[ FD ]
Line_18 $$ ois = xstream.createObjectInputStream(reader)-->Line_30 $$ ois.close()[ FD ]
Line_38 $$ if (PersistenceManager.persistenceURL.get().isEmpty()) -->Line_38 $$ if (PersistenceManager.persistenceURL.get().isEmpty()) [ CD ]
Line_38 $$ if (PersistenceManager.persistenceURL.get().isEmpty()) -->Line_39 $$ PersistenceManager.persistenceURL.remove()[ CD ]
Line_22 $$ URL anUrl = (URL) urlIter.next()-->Line_24 $$ Gate.getCreoleRegister().registerDirectories(anUrl)[ FD ]
Line_22 $$ URL anUrl = (URL) urlIter.next()-->Line_26 $$ Err.prln("Could not reload creole directory " + anUrl.toExternalForm())[ FD ]
