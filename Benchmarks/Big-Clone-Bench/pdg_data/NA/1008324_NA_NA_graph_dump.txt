Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_3 $$ if (baseDirStr.endsWith(sep)) [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_3 $$ if (baseDirStr.endsWith(sep)) [ FD ]
Line_3 $$ if (baseDirStr.endsWith(sep)) -->Line_3 $$ if (baseDirStr.endsWith(sep)) [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_3 $$ if (baseDirStr.endsWith(sep)) [ FD ]
Line_3 $$ if (baseDirStr.endsWith(sep)) -->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ FD ]
Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)-->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ FD ]
Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)-->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ FD ]
Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)-->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ FD ]
Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)-->Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_6 $$ if (destDirStr.endsWith(sep)) [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_6 $$ if (destDirStr.endsWith(sep)) [ FD ]
Line_6 $$ if (destDirStr.endsWith(sep)) -->Line_6 $$ if (destDirStr.endsWith(sep)) [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_6 $$ if (destDirStr.endsWith(sep)) [ FD ]
Line_6 $$ if (destDirStr.endsWith(sep)) -->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ FD ]
Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)-->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ FD ]
Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)-->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ FD ]
Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)-->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ FD ]
Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)-->Line_7 $$ destDirStr = destDirStr.substring(0, destDirStr.length() - 1)[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_9 $$ FileUtils.getInstance().createDirectory(baseDirStr)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_9 $$ FileUtils.getInstance().createDirectory(baseDirStr)[ FD ]
Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)-->Line_9 $$ FileUtils.getInstance().createDirectory(baseDirStr)[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_10 $$ if (null == newNamesTable) [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_10 $$ if (null == newNamesTable) [ FD ]
Line_10 $$ if (null == newNamesTable) -->Line_11 $$ newNamesTable = new Hashtable()[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_11 $$ newNamesTable = new Hashtable()[ FD ]
Line_11 $$ newNamesTable = new Hashtable()-->Line_11 $$ newNamesTable = new Hashtable()[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_13 $$ BufferedInputStream in = null[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_14 $$ BufferedOutputStream out = null[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_15 $$ byte dataBuff[] = new byte[bufferSize][ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_16 $$ File baseDir = new File(baseDirStr)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_17 $$ baseDir.mkdirs()[ CD ]
Line_16 $$ File baseDir = new File(baseDirStr)-->Line_17 $$ baseDir.mkdirs()[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_18 $$ if ((baseDir.exists()) && (baseDir.isDirectory())) [ CD ]
Line_16 $$ File baseDir = new File(baseDirStr)-->Line_18 $$ if ((baseDir.exists()) && (baseDir.isDirectory())) [ FD ]
Line_16 $$ File baseDir = new File(baseDirStr)-->Line_18 $$ if ((baseDir.exists()) && (baseDir.isDirectory())) [ FD ]
Line_18 $$ if ((baseDir.exists()) && (baseDir.isDirectory())) -->Line_19 $$ if (!newNamesTable.isEmpty()) [ CD ]
Line_19 $$ if (!newNamesTable.isEmpty()) -->Line_19 $$ if (!newNamesTable.isEmpty()) [ CD ]
Line_19 $$ if (!newNamesTable.isEmpty()) -->Line_19 $$ if (!newNamesTable.isEmpty()) [ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_19 $$ if (!newNamesTable.isEmpty()) [ FD ]
Line_11 $$ newNamesTable = new Hashtable()-->Line_19 $$ if (!newNamesTable.isEmpty()) [ FD ]
Line_19 $$ if (!newNamesTable.isEmpty()) -->Line_20 $$ Enumeration enumFiles = newNamesTable.keys()[ CD ]
Line_20 $$ Enumeration enumFiles = newNamesTable.keys()-->Line_20 $$ Enumeration enumFiles = newNamesTable.keys()[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_20 $$ Enumeration enumFiles = newNamesTable.keys()[ FD ]
Line_11 $$ newNamesTable = new Hashtable()-->Line_20 $$ Enumeration enumFiles = newNamesTable.keys()[ FD ]
Line_19 $$ if (!newNamesTable.isEmpty()) -->Line_21 $$ while (enumFiles.hasMoreElements()) [ CD ]
Line_19 $$ if (!newNamesTable.isEmpty()) -->Line_19 $$ if (!newNamesTable.isEmpty()) [ CD ]
Line_21 $$ while (enumFiles.hasMoreElements()) -->Line_21 $$ while (enumFiles.hasMoreElements()) [ CD ]
Line_20 $$ Enumeration enumFiles = newNamesTable.keys()-->Line_21 $$ while (enumFiles.hasMoreElements()) [ FD ]
Line_21 $$ while (enumFiles.hasMoreElements()) -->Line_22 $$ String newName = (String) enumFiles.nextElement()[ CD ]
Line_20 $$ Enumeration enumFiles = newNamesTable.keys()-->Line_22 $$ String newName = (String) enumFiles.nextElement()[ FD ]
Line_21 $$ while (enumFiles.hasMoreElements()) -->Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)[ CD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)[ FD ]
Line_11 $$ newNamesTable = new Hashtable()-->Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)[ FD ]
Line_22 $$ String newName = (String) enumFiles.nextElement()-->Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)[ FD ]
Line_21 $$ while (enumFiles.hasMoreElements()) -->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ CD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ CD ]
Line_22 $$ String newName = (String) enumFiles.nextElement()-->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ FD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ CD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ FD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_25 $$ String newPathFileName = destDirStr + sep + newName[ CD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_26 $$ String oldPathFileName = baseDirStr + sep + oldPathName[ CD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_27 $$ if (oldPathName.startsWith(sep)) [ CD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_27 $$ if (oldPathName.startsWith(sep)) [ FD ]
Line_27 $$ if (oldPathName.startsWith(sep)) -->Line_27 $$ if (oldPathName.startsWith(sep)) [ CD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_27 $$ if (oldPathName.startsWith(sep)) [ FD ]
Line_27 $$ if (oldPathName.startsWith(sep)) -->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ CD ]
Line_26 $$ String oldPathFileName = baseDirStr + sep + oldPathName-->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ FD ]
Line_28 $$ oldPathFileName = baseDirStr + oldPathName-->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ FD ]
Line_2 $$ public void copyHashAllFilesToDirectory(String baseDirStr, Hashtable newNamesTable, String destDirStr) throws Exception -->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ FD ]
Line_4 $$ baseDirStr = baseDirStr.substring(0, baseDirStr.length() - 1)-->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ FD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ FD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_30 $$ File f = new File(oldPathFileName)[ CD ]
Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) -->Line_31 $$ if ((f.exists()) && (f.isFile())) [ CD ]
Line_30 $$ File f = new File(oldPathFileName)-->Line_31 $$ if ((f.exists()) && (f.isFile())) [ FD ]
Line_30 $$ File f = new File(oldPathFileName)-->Line_31 $$ if ((f.exists()) && (f.isFile())) [ FD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)[ CD ]
Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)-->Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)[ FD ]
Line_13 $$ BufferedInputStream in = null-->Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)[ FD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)[ CD ]
Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)-->Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)[ FD ]
Line_14 $$ BufferedOutputStream out = null-->Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)[ FD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_34 $$ int readLen[ CD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) [ CD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_31 $$ if ((f.exists()) && (f.isFile())) [ CD ]
Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_34 $$ int readLen-->Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) [ CD ]
Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)-->Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_13 $$ BufferedInputStream in = null-->Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) [ FD ]
Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_36 $$ out.write(dataBuff, 0, readLen)[ CD ]
Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)-->Line_36 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_14 $$ BufferedOutputStream out = null-->Line_36 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_36 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_34 $$ int readLen-->Line_36 $$ out.write(dataBuff, 0, readLen)[ FD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_38 $$ out.flush()[ CD ]
Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)-->Line_38 $$ out.flush()[ FD ]
Line_14 $$ BufferedOutputStream out = null-->Line_38 $$ out.flush()[ FD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_39 $$ in.close()[ CD ]
Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)-->Line_39 $$ in.close()[ FD ]
Line_13 $$ BufferedInputStream in = null-->Line_39 $$ in.close()[ FD ]
Line_31 $$ if ((f.exists()) && (f.isFile())) -->Line_40 $$ out.close()[ CD ]
Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)-->Line_40 $$ out.close()[ FD ]
Line_14 $$ BufferedOutputStream out = null-->Line_40 $$ out.close()[ FD ]
Line_22 $$ String newName = (String) enumFiles.nextElement()-->Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)[ FD ]
Line_22 $$ String newName = (String) enumFiles.nextElement()-->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ FD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_24 $$ if ((newName != null) && (!"".equals(newName)) && (oldPathName != null) && (!"".equals(oldPathName))) [ FD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_27 $$ if (oldPathName.startsWith(sep)) [ FD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_27 $$ if (oldPathName.startsWith(sep)) [ FD ]
Line_23 $$ String oldPathName = (String) newNamesTable.get(newName)-->Line_28 $$ oldPathFileName = baseDirStr + oldPathName[ FD ]
Line_30 $$ File f = new File(oldPathFileName)-->Line_31 $$ if ((f.exists()) && (f.isFile())) [ FD ]
Line_30 $$ File f = new File(oldPathFileName)-->Line_31 $$ if ((f.exists()) && (f.isFile())) [ FD ]
Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)-->Line_38 $$ out.flush()[ FD ]
Line_32 $$ in = new BufferedInputStream(new FileInputStream(oldPathFileName), bufferSize)-->Line_39 $$ in.close()[ FD ]
Line_33 $$ out = new BufferedOutputStream(new FileOutputStream(newPathFileName), bufferSize)-->Line_40 $$ out.close()[ FD ]
Line_35 $$ while ((readLen = in.read(dataBuff)) > 0) -->Line_36 $$ out.write(dataBuff, 0, readLen)[ FD ]
