Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public char[] getDataAsCharArray(String url) [ CD ]
Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) -->Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) [ CD ]
Line_2 $$ public char[] getDataAsCharArray(String url) -->Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) [ FD ]
Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) -->Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) [ CD ]
Line_2 $$ public char[] getDataAsCharArray(String url) -->Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) [ FD ]
Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) -->Line_7 $$ urlc = tryOpenConnection(url)[ CD ]
Line_5 $$ URLConnection urlc-->Line_7 $$ urlc = tryOpenConnection(url)[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_7 $$ urlc = tryOpenConnection(url)[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_7 $$ urlc = tryOpenConnection(url)[ CD ]
Line_2 $$ public char[] getDataAsCharArray(String url) -->Line_7 $$ urlc = tryOpenConnection(url)[ FD ]
Line_6 $$ if (!url.toUpperCase().startsWith("HTTP://") && !url.toUpperCase().startsWith("HTTPS://")) -->Line_9 $$ urlc = new URL(url).openConnection()[ CD ]
Line_5 $$ URLConnection urlc-->Line_9 $$ urlc = new URL(url).openConnection()[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_9 $$ urlc = new URL(url).openConnection()[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_9 $$ urlc = new URL(url).openConnection()[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_9 $$ urlc = new URL(url).openConnection()[ CD ]
Line_5 $$ URLConnection urlc-->Line_11 $$ urlc.setUseCaches(false)[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_11 $$ urlc.setUseCaches(false)[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_11 $$ urlc.setUseCaches(false)[ FD ]
Line_5 $$ URLConnection urlc-->Line_12 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_12 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_12 $$ urlc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_5 $$ URLConnection urlc-->Line_13 $$ urlc.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.1.9) Gecko/20100414 Iceweasel/3.5.9 (like Firefox/3.5.9)")[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_13 $$ urlc.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.1.9) Gecko/20100414 Iceweasel/3.5.9 (like Firefox/3.5.9)")[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_13 $$ urlc.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.1.9) Gecko/20100414 Iceweasel/3.5.9 (like Firefox/3.5.9)")[ FD ]
Line_5 $$ URLConnection urlc-->Line_14 $$ urlc.setRequestProperty("Accept-Encoding", "gzip")[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_14 $$ urlc.setRequestProperty("Accept-Encoding", "gzip")[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_14 $$ urlc.setRequestProperty("Accept-Encoding", "gzip")[ FD ]
Line_15 $$ InputStream is = urlc.getInputStream()-->Line_15 $$ InputStream is = urlc.getInputStream()[ CD ]
Line_5 $$ URLConnection urlc-->Line_15 $$ InputStream is = urlc.getInputStream()[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_15 $$ InputStream is = urlc.getInputStream()[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_15 $$ InputStream is = urlc.getInputStream()[ FD ]
Line_17 $$ int len = urlc.getContentLength()-->Line_17 $$ int len = urlc.getContentLength()[ CD ]
Line_5 $$ URLConnection urlc-->Line_17 $$ int len = urlc.getContentLength()[ FD ]
Line_7 $$ urlc = tryOpenConnection(url)-->Line_17 $$ int len = urlc.getContentLength()[ FD ]
Line_9 $$ urlc = new URL(url).openConnection()-->Line_17 $$ int len = urlc.getContentLength()[ FD ]
Line_4 $$ char[] dat = null-->Line_18 $$ dat = new char[len][ FD ]
Line_18 $$ dat = new char[len]-->Line_18 $$ dat = new char[len][ FD ]
Line_21 $$ while ((c = reader.read()) != -1) -->Line_21 $$ while ((c = reader.read()) != -1) [ FD ]
Line_20 $$ int c-->Line_21 $$ while ((c = reader.read()) != -1) [ FD ]
Line_21 $$ while ((c = reader.read()) != -1) -->Line_21 $$ while ((c = reader.read()) != -1) [ CD ]
Line_16 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(is, Charset.defaultCharset()))-->Line_21 $$ while ((c = reader.read()) != -1) [ FD ]
Line_21 $$ while ((c = reader.read()) != -1) -->Line_22 $$ char character = (char) c[ CD ]
Line_21 $$ while ((c = reader.read()) != -1) -->Line_23 $$ dat[i] = character[ CD ]
Line_22 $$ char character = (char) c-->Line_23 $$ dat[i] = character[ FD ]
Line_21 $$ while ((c = reader.read()) != -1) -->Line_24 $$ i++[ CD ]
Line_19 $$ int i = 0-->Line_24 $$ i++[ FD ]
Line_15 $$ InputStream is = urlc.getInputStream()-->Line_26 $$ is.close()[ FD ]
Line_22 $$ char character = (char) c-->Line_23 $$ dat[i] = character[ FD ]
