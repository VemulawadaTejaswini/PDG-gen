Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void add(String user, String pass, boolean admin, boolean developer) throws FidoDatabaseException [ CD ]
Line_4 $$ Connection conn = null-->Line_7 $$ conn = FidoDataSource.getConnection()[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_7 $$ conn = FidoDataSource.getConnection()[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_7 $$ conn = FidoDataSource.getConnection()[ CD ]
Line_4 $$ Connection conn = null-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_8 $$ conn.setAutoCommit(false)[ FD ]
Line_5 $$ Statement stmt = null-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_9 $$ stmt = conn.createStatement()[ CD ]
Line_4 $$ Connection conn = null-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_9 $$ stmt = conn.createStatement()[ FD ]
Line_5 $$ Statement stmt = null-->Line_11 $$ if (contains(stmt, user) == true) [ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_11 $$ if (contains(stmt, user) == true) [ FD ]
Line_2 $$ public void add(String user, String pass, boolean admin, boolean developer) throws FidoDatabaseException -->Line_11 $$ if (contains(stmt, user) == true) [ FD ]
Line_11 $$ if (contains(stmt, user) == true) -->Line_12 $$ sql = "update Principals set Password = '" + pass + "' " + " where PrincipalId = '" + user + "'"[ CD ]
Line_10 $$ String sql-->Line_12 $$ sql = "update Principals set Password = '" + pass + "' " + " where PrincipalId = '" + user + "'"[ FD ]
Line_12 $$ sql = "update Principals set Password = '" + pass + "' " + " where PrincipalId = '" + user + "'"-->Line_12 $$ sql = "update Principals set Password = '" + pass + "' " + " where PrincipalId = '" + user + "'"[ FD ]
Line_11 $$ if (contains(stmt, user) == true) -->Line_14 $$ sql = "insert into Principals (PrincipalId, Password) " + " values ('" + user + "', '" + pass + "')"[ CD ]
Line_10 $$ String sql-->Line_14 $$ sql = "insert into Principals (PrincipalId, Password) " + " values ('" + user + "', '" + pass + "')"[ FD ]
Line_12 $$ sql = "update Principals set Password = '" + pass + "' " + " where PrincipalId = '" + user + "'"-->Line_14 $$ sql = "insert into Principals (PrincipalId, Password) " + " values ('" + user + "', '" + pass + "')"[ FD ]
Line_14 $$ sql = "insert into Principals (PrincipalId, Password) " + " values ('" + user + "', '" + pass + "')"-->Line_14 $$ sql = "insert into Principals (PrincipalId, Password) " + " values ('" + user + "', '" + pass + "')"[ FD ]
Line_5 $$ Statement stmt = null-->Line_16 $$ stmt.executeUpdate(sql)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_16 $$ stmt.executeUpdate(sql)[ FD ]
Line_10 $$ String sql-->Line_16 $$ stmt.executeUpdate(sql)[ FD ]
Line_12 $$ sql = "update Principals set Password = '" + pass + "' " + " where PrincipalId = '" + user + "'"-->Line_16 $$ stmt.executeUpdate(sql)[ FD ]
Line_14 $$ sql = "insert into Principals (PrincipalId, Password) " + " values ('" + user + "', '" + pass + "')"-->Line_16 $$ stmt.executeUpdate(sql)[ FD ]
Line_5 $$ Statement stmt = null-->Line_17 $$ updateRoles(stmt, user, admin, developer)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_17 $$ updateRoles(stmt, user, admin, developer)[ FD ]
Line_2 $$ public void add(String user, String pass, boolean admin, boolean developer) throws FidoDatabaseException -->Line_17 $$ updateRoles(stmt, user, admin, developer)[ FD ]
Line_2 $$ public void add(String user, String pass, boolean admin, boolean developer) throws FidoDatabaseException -->Line_17 $$ updateRoles(stmt, user, admin, developer)[ FD ]
Line_2 $$ public void add(String user, String pass, boolean admin, boolean developer) throws FidoDatabaseException -->Line_17 $$ updateRoles(stmt, user, admin, developer)[ FD ]
Line_4 $$ Connection conn = null-->Line_18 $$ conn.commit()[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_18 $$ conn.commit()[ FD ]
Line_4 $$ Connection conn = null-->Line_20 $$ if (conn != null)[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_20 $$ if (conn != null)[ FD ]
Line_20 $$ if (conn != null)-->Line_20 $$ conn.rollback()[ CD ]
Line_4 $$ Connection conn = null-->Line_20 $$ conn.rollback()[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_20 $$ conn.rollback()[ FD ]
Line_5 $$ Statement stmt = null-->Line_23 $$ if (stmt != null)[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_23 $$ if (stmt != null)[ FD ]
Line_23 $$ if (stmt != null)-->Line_23 $$ stmt.close()[ CD ]
Line_5 $$ Statement stmt = null-->Line_23 $$ stmt.close()[ FD ]
Line_9 $$ stmt = conn.createStatement()-->Line_23 $$ stmt.close()[ FD ]
Line_4 $$ Connection conn = null-->Line_24 $$ if (conn != null)[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_24 $$ if (conn != null)[ FD ]
Line_24 $$ if (conn != null)-->Line_24 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = null-->Line_24 $$ conn.close()[ FD ]
Line_7 $$ conn = FidoDataSource.getConnection()-->Line_24 $$ conn.close()[ FD ]
