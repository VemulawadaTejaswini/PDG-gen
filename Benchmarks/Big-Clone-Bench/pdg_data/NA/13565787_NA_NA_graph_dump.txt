Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encryptPassword(String plainPassword) [ CD ]
Line_2 $$ public static String encryptPassword(String plainPassword) -->Line_3 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_5 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_5 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")[ CD ]
Line_5 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_6 $$ messageDigest.update(plainPassword.getBytes())[ FD ]
Line_2 $$ public static String encryptPassword(String plainPassword) -->Line_6 $$ messageDigest.update(plainPassword.getBytes())[ FD ]
Line_7 $$ byte[] digestBytes = messageDigest.digest()-->Line_7 $$ byte[] digestBytes = messageDigest.digest()[ CD ]
Line_5 $$ MessageDigest messageDigest = MessageDigest.getInstance("MD5")-->Line_7 $$ byte[] digestBytes = messageDigest.digest()[ FD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_9 $$ for (int i = 0; i < digestBytes.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_9 $$ for (int i = 0; i < digestBytes.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_9 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])[ CD ]
Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])-->Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])[ FD ]
Line_8 $$ String hex = null-->Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])[ FD ]
Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])-->Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])[ CD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_11 $$ if (hex.length() < 2)[ CD ]
Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])-->Line_11 $$ if (hex.length() < 2)[ FD ]
Line_8 $$ String hex = null-->Line_11 $$ if (hex.length() < 2)[ FD ]
Line_11 $$ if (hex.length() < 2)-->Line_11 $$ sb.append("0")[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_11 $$ sb.append("0")[ FD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_12 $$ sb.append(hex)[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_12 $$ sb.append(hex)[ FD ]
Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])-->Line_12 $$ sb.append(hex)[ FD ]
Line_8 $$ String hex = null-->Line_12 $$ sb.append(hex)[ FD ]
Line_2 $$ public static String encryptPassword(String plainPassword) -->Line_17 $$ return new String(sb)[ CD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_9 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_9 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < digestBytes.length; i++) -->Line_9 $$ for (int i = 0; i < digestBytes.length; i++) [ FD ]
Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])-->Line_11 $$ if (hex.length() < 2)[ FD ]
Line_10 $$ hex = Integer.toHexString(0xFF & digestBytes[i])-->Line_12 $$ sb.append(hex)[ FD ]
