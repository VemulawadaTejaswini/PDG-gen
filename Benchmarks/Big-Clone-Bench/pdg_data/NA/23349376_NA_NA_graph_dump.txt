Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public TreeMap getStrainMap() [ CD ]
Line_2 $$ public TreeMap getStrainMap() -->Line_3 $$ TreeMap strainMap = new TreeMap()[ CD ]
Line_2 $$ public TreeMap getStrainMap() -->Line_4 $$ String server = ""[ CD ]
Line_6 $$ Datasource[] ds = DatasourceManager.getDatasouce(alias, version, DatasourceManager.ALL_CONTAINS_GROUP)-->Line_6 $$ Datasource[] ds = DatasourceManager.getDatasouce(alias, version, DatasourceManager.ALL_CONTAINS_GROUP)[ CD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_7 $$ for (int i = 0; i < ds.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_7 $$ for (int i = 0; i < ds.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_7 $$ for (int i = 0; i < ds.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_8 $$ if (ds[i].getDescription().startsWith(MOUSE_DBSNP)) [ CD ]
Line_8 $$ if (ds[i].getDescription().startsWith(MOUSE_DBSNP)) -->Line_8 $$ if (ds[i].getDescription().startsWith(MOUSE_DBSNP)) [ CD ]
Line_8 $$ if (ds[i].getDescription().startsWith(MOUSE_DBSNP)) -->Line_9 $$ if (ds[i].getServer().length() == 0) [ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_10 $$ Connection con = ds[i].getConnection()[ CD ]
Line_10 $$ Connection con = ds[i].getConnection()-->Line_10 $$ Connection con = ds[i].getConnection()[ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)[ CD ]
Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)-->Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)[ FD ]
Line_3 $$ TreeMap strainMap = new TreeMap()-->Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)[ FD ]
Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)-->Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)[ CD ]
Line_10 $$ Connection con = ds[i].getConnection()-->Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_14 $$ server = ds[i].getServer()[ CD ]
Line_14 $$ server = ds[i].getServer()-->Line_14 $$ server = ds[i].getServer()[ FD ]
Line_4 $$ String server = ""-->Line_14 $$ server = ds[i].getServer()[ FD ]
Line_14 $$ server = ds[i].getServer()-->Line_14 $$ server = ds[i].getServer()[ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_15 $$ HashMap serverUrlMap = InitXml.getInstance().getServerMap()[ CD ]
Line_15 $$ HashMap serverUrlMap = InitXml.getInstance().getServerMap()-->Line_15 $$ HashMap serverUrlMap = InitXml.getInstance().getServerMap()[ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_16 $$ String serverUrl = (String) serverUrlMap.get(server)[ CD ]
Line_15 $$ HashMap serverUrlMap = InitXml.getInstance().getServerMap()-->Line_16 $$ String serverUrl = (String) serverUrlMap.get(server)[ FD ]
Line_14 $$ server = ds[i].getServer()-->Line_16 $$ String serverUrl = (String) serverUrlMap.get(server)[ FD ]
Line_4 $$ String server = ""-->Line_16 $$ String serverUrl = (String) serverUrlMap.get(server)[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_17 $$ URL url = new URL(serverUrl + servletName)[ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_18 $$ URLConnection uc = url.openConnection()[ CD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_18 $$ URLConnection uc = url.openConnection()[ CD ]
Line_17 $$ URL url = new URL(serverUrl + servletName)-->Line_18 $$ URLConnection uc = url.openConnection()[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_19 $$ uc.setDoOutput(true)[ CD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_19 $$ uc.setDoOutput(true)[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_20 $$ OutputStream os = uc.getOutputStream()[ CD ]
Line_20 $$ OutputStream os = uc.getOutputStream()-->Line_20 $$ OutputStream os = uc.getOutputStream()[ CD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_20 $$ OutputStream os = uc.getOutputStream()[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_21 $$ StringBuffer buf = new StringBuffer()[ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_22 $$ buf.append("viewType=getstrains")[ CD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_22 $$ buf.append("viewType=getstrains")[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_23 $$ buf.append("&hHead=" + hHead)[ CD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_23 $$ buf.append("&hHead=" + hHead)[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_24 $$ buf.append("&hCheck=" + version)[ CD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_24 $$ buf.append("&hCheck=" + version)[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_25 $$ PrintStream ps = new PrintStream(os)[ CD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_26 $$ ps.print(buf.toString())[ CD ]
Line_25 $$ PrintStream ps = new PrintStream(os)-->Line_26 $$ ps.print(buf.toString())[ FD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_26 $$ ps.print(buf.toString())[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_27 $$ ps.close()[ CD ]
Line_25 $$ PrintStream ps = new PrintStream(os)-->Line_27 $$ ps.close()[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())[ CD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_29 $$ strainMap = (TreeMap) ois.readObject()[ CD ]
Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)-->Line_29 $$ strainMap = (TreeMap) ois.readObject()[ FD ]
Line_29 $$ strainMap = (TreeMap) ois.readObject()-->Line_29 $$ strainMap = (TreeMap) ois.readObject()[ FD ]
Line_3 $$ TreeMap strainMap = new TreeMap()-->Line_29 $$ strainMap = (TreeMap) ois.readObject()[ FD ]
Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())-->Line_29 $$ strainMap = (TreeMap) ois.readObject()[ FD ]
Line_9 $$ if (ds[i].getServer().length() == 0) -->Line_30 $$ ois.close()[ CD ]
Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())-->Line_30 $$ ois.close()[ FD ]
Line_2 $$ public TreeMap getStrainMap() -->Line_37 $$ return strainMap[ CD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_7 $$ for (int i = 0; i < ds.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_7 $$ for (int i = 0; i < ds.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < ds.length; i++) -->Line_7 $$ for (int i = 0; i < ds.length; i++) [ FD ]
Line_10 $$ Connection con = ds[i].getConnection()-->Line_11 $$ strainMap = Action.lineMode.regularSQL.GenotypeDataSearchAction.getStrainMap(con)[ FD ]
Line_15 $$ HashMap serverUrlMap = InitXml.getInstance().getServerMap()-->Line_16 $$ String serverUrl = (String) serverUrlMap.get(server)[ FD ]
Line_14 $$ server = ds[i].getServer()-->Line_16 $$ String serverUrl = (String) serverUrlMap.get(server)[ FD ]
Line_17 $$ URL url = new URL(serverUrl + servletName)-->Line_18 $$ URLConnection uc = url.openConnection()[ FD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_19 $$ uc.setDoOutput(true)[ FD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_20 $$ OutputStream os = uc.getOutputStream()[ FD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_22 $$ buf.append("viewType=getstrains")[ FD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_23 $$ buf.append("&hHead=" + hHead)[ FD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_24 $$ buf.append("&hCheck=" + version)[ FD ]
Line_25 $$ PrintStream ps = new PrintStream(os)-->Line_26 $$ ps.print(buf.toString())[ FD ]
Line_21 $$ StringBuffer buf = new StringBuffer()-->Line_26 $$ ps.print(buf.toString())[ FD ]
Line_25 $$ PrintStream ps = new PrintStream(os)-->Line_27 $$ ps.close()[ FD ]
Line_18 $$ URLConnection uc = url.openConnection()-->Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())[ FD ]
Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())-->Line_29 $$ strainMap = (TreeMap) ois.readObject()[ FD ]
Line_28 $$ ObjectInputStream ois = new ObjectInputStream(uc.getInputStream())-->Line_30 $$ ois.close()[ FD ]
