Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public int next() [ CD ]
Line_2 $$ public int next() -->Line_3 $$ int sequenceValue = current()[ CD ]
Line_3 $$ int sequenceValue = current()-->Line_3 $$ int sequenceValue = current()[ CD ]
Line_5 $$ Update update = dbi.getUpdate()-->Line_5 $$ Update update = dbi.getUpdate()[ CD ]
Line_5 $$ Update update = dbi.getUpdate()-->Line_6 $$ update.setTableName(sequenceTable)[ FD ]
Line_5 $$ Update update = dbi.getUpdate()-->Line_7 $$ update.assignValue("SEQUENCE_VALUE", --sequenceValue)[ FD ]
Line_3 $$ int sequenceValue = current()-->Line_7 $$ update.assignValue("SEQUENCE_VALUE", --sequenceValue)[ FD ]
Line_8 $$ Search search = new Search()-->Line_9 $$ search.addAttributeCriteria(sequenceTable, "SEQUENCE_NAME", Search.EQUAL, sequenceName)[ FD ]
Line_5 $$ Update update = dbi.getUpdate()-->Line_10 $$ update.where(search)[ FD ]
Line_8 $$ Search search = new Search()-->Line_10 $$ update.where(search)[ FD ]
Line_11 $$ int affectedRows = dbi.getConnection().createStatement().executeUpdate(update.toString())-->Line_11 $$ int affectedRows = dbi.getConnection().createStatement().executeUpdate(update.toString())[ CD ]
Line_5 $$ Update update = dbi.getUpdate()-->Line_11 $$ int affectedRows = dbi.getConnection().createStatement().executeUpdate(update.toString())[ FD ]
Line_11 $$ int affectedRows = dbi.getConnection().createStatement().executeUpdate(update.toString())-->Line_12 $$ if (affectedRows == 1) [ FD ]
Line_12 $$ if (affectedRows == 1) -->Line_13 $$ dbi.getConnection().commit()[ CD ]
Line_12 $$ if (affectedRows == 1) -->Line_15 $$ dbi.getConnection().rollback()[ CD ]
Line_2 $$ public int next() -->Line_20 $$ return sequenceValue[ CD ]
