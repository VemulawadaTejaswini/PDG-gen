Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static byte[] createHash(EHashType hashType, String string) [ CD ]
Line_2 $$ private static byte[] createHash(EHashType hashType, String string) -->Line_3 $$ MessageDigest md[ CD ]
Line_3 $$ MessageDigest md-->Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())[ FD ]
Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())-->Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())[ FD ]
Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())-->Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())[ CD ]
Line_2 $$ private static byte[] createHash(EHashType hashType, String string) -->Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())[ FD ]
Line_3 $$ MessageDigest md-->Line_6 $$ md.reset()[ FD ]
Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())-->Line_6 $$ md.reset()[ FD ]
Line_3 $$ MessageDigest md-->Line_7 $$ md.update(string.getBytes())[ FD ]
Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())-->Line_7 $$ md.update(string.getBytes())[ FD ]
Line_2 $$ private static byte[] createHash(EHashType hashType, String string) -->Line_7 $$ md.update(string.getBytes())[ FD ]
Line_8 $$ byte[] byteResult = md.digest()-->Line_8 $$ byte[] byteResult = md.digest()[ CD ]
Line_3 $$ MessageDigest md-->Line_8 $$ byte[] byteResult = md.digest()[ FD ]
Line_5 $$ md = MessageDigest.getInstance(hashType.getJavaHashType())-->Line_8 $$ byte[] byteResult = md.digest()[ FD ]
Line_2 $$ private static byte[] createHash(EHashType hashType, String string) -->Line_13 $$ return null[ CD ]
