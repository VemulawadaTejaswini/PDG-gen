Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String get(String s, String encoding) throws Exception [ CD ]
Line_2 $$ public String get(String s, String encoding) throws Exception -->Line_3 $$ if (!s.startsWith("http"))[ CD ]
Line_3 $$ if (!s.startsWith("http"))-->Line_3 $$ if (!s.startsWith("http"))[ CD ]
Line_3 $$ if (!s.startsWith("http"))-->Line_3 $$ if (!s.startsWith("http"))[ CD ]
Line_2 $$ public String get(String s, String encoding) throws Exception -->Line_3 $$ if (!s.startsWith("http"))[ FD ]
Line_3 $$ if (!s.startsWith("http"))-->Line_3 $$ return ""[ CD ]
Line_2 $$ public String get(String s, String encoding) throws Exception -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_8 $$ URLConnection connection = url.openConnection()[ CD ]
Line_7 $$ URL url = new URL(s)-->Line_8 $$ URLConnection connection = url.openConnection()[ FD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_9 $$ connection.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)")[ FD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_10 $$ connection.setDoOutput(false)[ FD ]
Line_2 $$ public String get(String s, String encoding) throws Exception -->Line_11 $$ if (encoding == null)[ FD ]
Line_11 $$ if (encoding == null)-->Line_11 $$ encoding = "UTF-8"[ CD ]
Line_2 $$ public String get(String s, String encoding) throws Exception -->Line_11 $$ encoding = "UTF-8"[ FD ]
Line_11 $$ encoding = "UTF-8"-->Line_11 $$ encoding = "UTF-8"[ FD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_12 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), encoding))[ FD ]
Line_14 $$ String contentType = connection.getContentType()-->Line_14 $$ String contentType = connection.getContentType()[ CD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_14 $$ String contentType = connection.getContentType()[ FD ]
Line_14 $$ String contentType = connection.getContentType()-->Line_15 $$ if (contentType.startsWith("text") || contentType.startsWith("application/xml")) [ FD ]
Line_14 $$ String contentType = connection.getContentType()-->Line_15 $$ if (contentType.startsWith("text") || contentType.startsWith("application/xml")) [ FD ]
Line_15 $$ if (contentType.startsWith("text") || contentType.startsWith("application/xml")) -->Line_16 $$ while ((inputLine = in.readLine()) != null) [ CD ]
Line_15 $$ if (contentType.startsWith("text") || contentType.startsWith("application/xml")) -->Line_15 $$ if (contentType.startsWith("text") || contentType.startsWith("application/xml")) [ CD ]
Line_16 $$ while ((inputLine = in.readLine()) != null) -->Line_16 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_13 $$ String inputLine-->Line_16 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_16 $$ while ((inputLine = in.readLine()) != null) -->Line_16 $$ while ((inputLine = in.readLine()) != null) [ CD ]
Line_12 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), encoding))-->Line_16 $$ while ((inputLine = in.readLine()) != null) [ FD ]
Line_16 $$ while ((inputLine = in.readLine()) != null) -->Line_17 $$ sb.append(inputLine)[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_17 $$ sb.append(inputLine)[ FD ]
Line_16 $$ while ((inputLine = in.readLine()) != null) -->Line_17 $$ sb.append(inputLine)[ FD ]
Line_13 $$ String inputLine-->Line_17 $$ sb.append(inputLine)[ FD ]
Line_16 $$ while ((inputLine = in.readLine()) != null) -->Line_18 $$ sb.append("\n")[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append("\n")[ FD ]
Line_12 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream(), encoding))-->Line_21 $$ in.close()[ FD ]
Line_2 $$ public String get(String s, String encoding) throws Exception -->Line_26 $$ return sb.toString()[ CD ]
Line_26 $$ return sb.toString()-->Line_26 $$ return sb.toString()[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ return sb.toString()[ FD ]
Line_16 $$ while ((inputLine = in.readLine()) != null) -->Line_17 $$ sb.append(inputLine)[ FD ]
