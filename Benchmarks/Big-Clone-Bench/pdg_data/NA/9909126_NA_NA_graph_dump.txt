Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) [ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_7 $$ hits.incrementAndGet()[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_8 $$ String key = getKey(request)[ CD ]
Line_8 $$ String key = getKey(request)-->Line_8 $$ String key = getKey(request)[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_8 $$ String key = getKey(request)[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_9 $$ RequestResponse cachedResponse = cache.get(key)[ CD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_9 $$ RequestResponse cachedResponse = cache.get(key)[ CD ]
Line_8 $$ String key = getKey(request)-->Line_9 $$ RequestResponse cachedResponse = cache.get(key)[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_10 $$ if (cachedResponse == null) [ CD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_10 $$ if (cachedResponse == null) [ FD ]
Line_10 $$ if (cachedResponse == null) -->Line_11 $$ response.setEndState(new ResponseStateBean(ResponseCode.ERROR, "response not found for " + key))[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_11 $$ response.setEndState(new ResponseStateBean(ResponseCode.ERROR, "response not found for " + key))[ FD ]
Line_10 $$ if (cachedResponse == null) -->Line_12 $$ return[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_14 $$ response.addHeaders(cachedResponse.getExpectedResponse().getHeaders())[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_14 $$ response.addHeaders(cachedResponse.getExpectedResponse().getHeaders())[ FD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_14 $$ response.addHeaders(cachedResponse.getExpectedResponse().getHeaders())[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_15 $$ response.setTranslationCount(cachedResponse.getExpectedResponse().getTranslationCount())[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_15 $$ response.setTranslationCount(cachedResponse.getExpectedResponse().getTranslationCount())[ FD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_15 $$ response.setTranslationCount(cachedResponse.getExpectedResponse().getTranslationCount())[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_16 $$ response.setFailCount(cachedResponse.getExpectedResponse().getFailCount())[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_16 $$ response.setFailCount(cachedResponse.getExpectedResponse().getFailCount())[ FD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_16 $$ response.setFailCount(cachedResponse.getExpectedResponse().getFailCount())[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_17 $$ if (cachedResponse.getExpectedResponse().getLastModified() != -1) [ CD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_17 $$ if (cachedResponse.getExpectedResponse().getLastModified() != -1) [ FD ]
Line_17 $$ if (cachedResponse.getExpectedResponse().getLastModified() != -1) -->Line_18 $$ response.setLastModified(cachedResponse.getExpectedResponse().getLastModified())[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_18 $$ response.setLastModified(cachedResponse.getExpectedResponse().getLastModified())[ FD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_18 $$ response.setLastModified(cachedResponse.getExpectedResponse().getLastModified())[ FD ]
Line_21 $$ OutputStream output = response.getOutputStream()-->Line_21 $$ OutputStream output = response.getOutputStream()[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_21 $$ OutputStream output = response.getOutputStream()[ FD ]
Line_22 $$ InputStream input = cachedResponse.getExpectedResponse().getInputStream()-->Line_22 $$ InputStream input = cachedResponse.getExpectedResponse().getInputStream()[ CD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_22 $$ InputStream input = cachedResponse.getExpectedResponse().getInputStream()[ FD ]
Line_22 $$ InputStream input = cachedResponse.getExpectedResponse().getInputStream()-->Line_24 $$ IOUtils.copy(input, output)[ FD ]
Line_21 $$ OutputStream output = response.getOutputStream()-->Line_24 $$ IOUtils.copy(input, output)[ FD ]
Line_22 $$ InputStream input = cachedResponse.getExpectedResponse().getInputStream()-->Line_26 $$ IOUtils.closeQuietly(input)[ FD ]
Line_21 $$ OutputStream output = response.getOutputStream()-->Line_27 $$ IOUtils.closeQuietly(output)[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_30 $$ response.setEndState(new ResponseStateException(e))[ FD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_33 $$ response.setEndState(cachedResponse.getExpectedResponse().getEndState())[ CD ]
Line_2 $$ public void service(TranslationRequest request, TranslationResponse response) -->Line_33 $$ response.setEndState(cachedResponse.getExpectedResponse().getEndState())[ FD ]
Line_9 $$ RequestResponse cachedResponse = cache.get(key)-->Line_33 $$ response.setEndState(cachedResponse.getExpectedResponse().getEndState())[ FD ]
