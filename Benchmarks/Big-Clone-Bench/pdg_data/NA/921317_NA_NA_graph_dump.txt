Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void displayDiffResults() throws IOException [ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_3 $$ File outFile = File.createTempFile("diff", ".htm")[ CD ]
Line_3 $$ File outFile = File.createTempFile("diff", ".htm")-->Line_3 $$ File outFile = File.createTempFile("diff", ".htm")[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_4 $$ outFile.deleteOnExit()[ CD ]
Line_3 $$ File outFile = File.createTempFile("diff", ".htm")-->Line_4 $$ outFile.deleteOnExit()[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_5 $$ FileOutputStream outStream = new FileOutputStream(outFile)[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_7 $$ out.write("<html><head><title>LOC Differences</title>\n" + SCRIPT + "</head>\n" + "<body bgcolor='#ffffff'>\n" + "<div onMouseOver=\"window.defaultStatus='Metrics'\">\n")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_7 $$ out.write("<html><head><title>LOC Differences</title>\n" + SCRIPT + "</head>\n" + "<body bgcolor='#ffffff'>\n" + "<div onMouseOver=\"window.defaultStatus='Metrics'\">\n")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_8 $$ if (addedTable.length() > 0) [ CD ]
Line_8 $$ if (addedTable.length() > 0) -->Line_9 $$ out.write("<table border><tr><th>Files Added:</th>" + "<th>Add</th><th>Type</th></tr>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_9 $$ out.write("<table border><tr><th>Files Added:</th>" + "<th>Add</th><th>Type</th></tr>")[ FD ]
Line_8 $$ if (addedTable.length() > 0) -->Line_10 $$ out.write(addedTable.toString())[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_10 $$ out.write(addedTable.toString())[ FD ]
Line_8 $$ if (addedTable.length() > 0) -->Line_11 $$ out.write("</table><br><br>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_11 $$ out.write("</table><br><br>")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_13 $$ if (modifiedTable.length() > 0) [ CD ]
Line_13 $$ if (modifiedTable.length() > 0) -->Line_14 $$ out.write("<table border><tr><th>Files Modified:</th>" + "<th>Base</th><th>Del</th><th>Mod</th><th>Add</th>" + "<th>Total</th><th>Type</th></tr>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_14 $$ out.write("<table border><tr><th>Files Modified:</th>" + "<th>Base</th><th>Del</th><th>Mod</th><th>Add</th>" + "<th>Total</th><th>Type</th></tr>")[ FD ]
Line_13 $$ if (modifiedTable.length() > 0) -->Line_15 $$ out.write(modifiedTable.toString())[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_15 $$ out.write(modifiedTable.toString())[ FD ]
Line_13 $$ if (modifiedTable.length() > 0) -->Line_16 $$ out.write("</table><br><br>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_16 $$ out.write("</table><br><br>")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_18 $$ if (deletedTable.length() > 0) [ CD ]
Line_18 $$ if (deletedTable.length() > 0) -->Line_19 $$ out.write("<table border><tr><th>Files Deleted:</th>" + "<th>Del</th><th>Type</th></tr>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_19 $$ out.write("<table border><tr><th>Files Deleted:</th>" + "<th>Del</th><th>Type</th></tr>")[ FD ]
Line_18 $$ if (deletedTable.length() > 0) -->Line_20 $$ out.write(deletedTable.toString())[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_20 $$ out.write(deletedTable.toString())[ FD ]
Line_18 $$ if (deletedTable.length() > 0) -->Line_21 $$ out.write("</table><br><br>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_21 $$ out.write("</table><br><br>")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_23 $$ out.write("<table name=METRICS BORDER>\n")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_23 $$ out.write("<table name=METRICS BORDER>\n")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) [ CD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_25 $$ out.write("<tr><td>Base:&nbsp;</td><td>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_25 $$ out.write("<tr><td>Base:&nbsp;</td><td>")[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_26 $$ out.write(Long.toString(base))[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_26 $$ out.write(Long.toString(base))[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_27 $$ out.write("</td></tr>\n<tr><td>Deleted:&nbsp;</td><td>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_27 $$ out.write("</td></tr>\n<tr><td>Deleted:&nbsp;</td><td>")[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_28 $$ out.write(Long.toString(deleted))[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_28 $$ out.write(Long.toString(deleted))[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_29 $$ out.write("</td></tr>\n<tr><td>Modified:&nbsp;</td><td>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_29 $$ out.write("</td></tr>\n<tr><td>Modified:&nbsp;</td><td>")[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_30 $$ out.write(Long.toString(modified))[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_30 $$ out.write(Long.toString(modified))[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_31 $$ out.write("</td></tr>\n<tr><td>Added:&nbsp;</td><td>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_31 $$ out.write("</td></tr>\n<tr><td>Added:&nbsp;</td><td>")[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_32 $$ out.write(Long.toString(added))[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_32 $$ out.write(Long.toString(added))[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_33 $$ out.write("</td></tr>\n<tr><td>New & Changed:&nbsp;</td><td>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_33 $$ out.write("</td></tr>\n<tr><td>New & Changed:&nbsp;</td><td>")[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_34 $$ out.write(Long.toString(added + modified))[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_34 $$ out.write(Long.toString(added + modified))[ FD ]
Line_24 $$ if (modifiedTable.length() > 0 || deletedTable.length() > 0) -->Line_35 $$ out.write("</td></tr>\n")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_35 $$ out.write("</td></tr>\n")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_37 $$ out.write("<tr><td>Total:&nbsp;</td><td>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_37 $$ out.write("<tr><td>Total:&nbsp;</td><td>")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_38 $$ out.write(Long.toString(total))[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_38 $$ out.write(Long.toString(total))[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_39 $$ out.write("</td></tr>\n</table></div>")[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_39 $$ out.write("</td></tr>\n</table></div>")[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_40 $$ redlinesOut.close()[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_41 $$ out.flush()[ CD ]
Line_6 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream))-->Line_41 $$ out.flush()[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_42 $$ InputStream redlines = new FileInputStream(redlinesTempFile)[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_43 $$ byte[] buffer = new byte[4096][ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_44 $$ int bytesRead[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)[ CD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_2 $$ private void displayDiffResults() throws IOException [ CD ]
Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)-->Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)[ FD ]
Line_44 $$ int bytesRead-->Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)[ FD ]
Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)-->Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)[ CD ]
Line_42 $$ InputStream redlines = new FileInputStream(redlinesTempFile)-->Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)[ FD ]
Line_43 $$ byte[] buffer = new byte[4096]-->Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)[ FD ]
Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)-->Line_45 $$ outStream.write(buffer, 0, bytesRead)[ CD ]
Line_5 $$ FileOutputStream outStream = new FileOutputStream(outFile)-->Line_45 $$ outStream.write(buffer, 0, bytesRead)[ FD ]
Line_43 $$ byte[] buffer = new byte[4096]-->Line_45 $$ outStream.write(buffer, 0, bytesRead)[ FD ]
Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)-->Line_45 $$ outStream.write(buffer, 0, bytesRead)[ FD ]
Line_44 $$ int bytesRead-->Line_45 $$ outStream.write(buffer, 0, bytesRead)[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_46 $$ outStream.write("</BODY></HTML>".getBytes())[ CD ]
Line_5 $$ FileOutputStream outStream = new FileOutputStream(outFile)-->Line_46 $$ outStream.write("</BODY></HTML>".getBytes())[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_47 $$ outStream.close()[ CD ]
Line_5 $$ FileOutputStream outStream = new FileOutputStream(outFile)-->Line_47 $$ outStream.close()[ FD ]
Line_2 $$ private void displayDiffResults() throws IOException -->Line_48 $$ Browser.launch(outFile.toURL().toString())[ CD ]
Line_3 $$ File outFile = File.createTempFile("diff", ".htm")-->Line_48 $$ Browser.launch(outFile.toURL().toString())[ FD ]
Line_45 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead)-->Line_45 $$ outStream.write(buffer, 0, bytesRead)[ FD ]
