Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] argArray) [ CD ]
Line_2 $$ public static void main(String[] argArray) -->Line_3 $$ if (argArray.length == 0) [ CD ]
Line_3 $$ if (argArray.length == 0) -->Line_4 $$ System.out.println("Usage: java  -jar doc-analyzer.jar  url | file")[ CD ]
Line_2 $$ public static void main(String[] argArray) -->Line_6 $$ List<URL> urlList = new LinkedList<URL>()[ CD ]
Line_8 $$ if (!(urlStr.startsWith("http") || urlStr.startsWith("file"))) -->Line_8 $$ if (!(urlStr.startsWith("http") || urlStr.startsWith("file"))) [ CD ]
Line_7 $$ for (String urlStr : argArray) -->Line_8 $$ if (!(urlStr.startsWith("http") || urlStr.startsWith("file"))) [ FD ]
Line_7 $$ for (String urlStr : argArray) -->Line_8 $$ if (!(urlStr.startsWith("http") || urlStr.startsWith("file"))) [ FD ]
Line_8 $$ if (!(urlStr.startsWith("http") || urlStr.startsWith("file"))) -->Line_9 $$ if (urlStr.indexOf("*") > -1) [ CD ]
Line_7 $$ for (String urlStr : argArray) -->Line_9 $$ if (urlStr.indexOf("*") > -1) [ FD ]
Line_9 $$ if (urlStr.indexOf("*") > -1) -->Line_10 $$ if (urlStr.indexOf("**") > -1) [ CD ]
Line_7 $$ for (String urlStr : argArray) -->Line_10 $$ if (urlStr.indexOf("**") > -1) [ FD ]
Line_9 $$ if (urlStr.indexOf("*") > -1) -->Line_14 $$ if (!urlStr.startsWith("/")) [ CD ]
Line_14 $$ if (!urlStr.startsWith("/")) -->Line_14 $$ if (!urlStr.startsWith("/")) [ CD ]
Line_14 $$ if (!urlStr.startsWith("/")) -->Line_14 $$ if (!urlStr.startsWith("/")) [ CD ]
Line_7 $$ for (String urlStr : argArray) -->Line_14 $$ if (!urlStr.startsWith("/")) [ FD ]
Line_14 $$ if (!urlStr.startsWith("/")) -->Line_15 $$ File workDir = new File(System.getProperty("user.dir"))[ CD ]
Line_14 $$ if (!urlStr.startsWith("/")) -->Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr[ CD ]
Line_7 $$ for (String urlStr : argArray) -->Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr[ FD ]
Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr-->Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr[ FD ]
Line_7 $$ for (String urlStr : argArray) -->Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr[ FD ]
Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr-->Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr[ FD ]
Line_15 $$ File workDir = new File(System.getProperty("user.dir"))-->Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr[ FD ]
Line_9 $$ if (urlStr.indexOf("*") > -1) -->Line_18 $$ urlStr = "file:" + urlStr[ CD ]
Line_7 $$ for (String urlStr : argArray) -->Line_18 $$ urlStr = "file:" + urlStr[ FD ]
Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr-->Line_18 $$ urlStr = "file:" + urlStr[ FD ]
Line_18 $$ urlStr = "file:" + urlStr-->Line_18 $$ urlStr = "file:" + urlStr[ FD ]
Line_7 $$ for (String urlStr : argArray) -->Line_18 $$ urlStr = "file:" + urlStr[ FD ]
Line_16 $$ urlStr = workDir.getPath() + "/" + urlStr-->Line_18 $$ urlStr = "file:" + urlStr[ FD ]
Line_18 $$ urlStr = "file:" + urlStr-->Line_18 $$ urlStr = "file:" + urlStr[ FD ]
Line_6 $$ List<URL> urlList = new LinkedList<URL>()-->Line_23 $$ urlList.add(url)[ FD ]
Line_22 $$ URL url = new URL(urlStr)-->Line_23 $$ urlList.add(url)[ FD ]
Line_30 $$ Document doc = builder.build(url.openStream())-->Line_30 $$ Document doc = builder.build(url.openStream())[ CD ]
Line_22 $$ URL url = new URL(urlStr)-->Line_30 $$ Document doc = builder.build(url.openStream())[ FD ]
Line_31 $$ Element element = doc.getRootElement()-->Line_31 $$ Element element = doc.getRootElement()[ CD ]
Line_30 $$ Document doc = builder.build(url.openStream())-->Line_31 $$ Element element = doc.getRootElement()[ FD ]
Line_32 $$ Map<String, Long> numberOfElementMap = countElement(element)-->Line_32 $$ Map<String, Long> numberOfElementMap = countElement(element)[ CD ]
Line_31 $$ Element element = doc.getRootElement()-->Line_32 $$ Map<String, Long> numberOfElementMap = countElement(element)[ FD ]
Line_32 $$ Map<String, Long> numberOfElementMap = countElement(element)-->Line_34 $$ for (String elementName : new TreeSet<String>(numberOfElementMap.keySet())) [ FD ]
Line_32 $$ Map<String, Long> numberOfElementMap = countElement(element)-->Line_35 $$ System.out.println("  " + elementName + ": " + numberOfElementMap.get(elementName))[ FD ]
Line_34 $$ for (String elementName : new TreeSet<String>(numberOfElementMap.keySet())) -->Line_35 $$ System.out.println("  " + elementName + ": " + numberOfElementMap.get(elementName))[ FD ]
