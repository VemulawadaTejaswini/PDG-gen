Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) [ CD ]
Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) -->Line_3 $$ FileChannel in = null, out = null[ CD ]
Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ CD ]
Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) -->Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) [ CD ]
Line_4 $$ for (int i = 0; i < anexoTO.length; i++) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < anexoTO.length; i++) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < anexoTO.length; i++) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ CD ]
Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) -->Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ CD ]
Line_2 $$ public static void copiaAnexos(String from, String to, AnexoTO[] anexoTO) -->Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()[ FD ]
Line_8 $$ long size = in.size()-->Line_8 $$ long size = in.size()[ CD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_8 $$ long size = in.size()[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_8 $$ long size = in.size()[ FD ]
Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)-->Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ CD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_8 $$ long size = in.size()-->Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_10 $$ out.write(buf)[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_10 $$ out.write(buf)[ FD ]
Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)-->Line_10 $$ out.write(buf)[ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_14 $$ if (in != null)[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_14 $$ if (in != null)[ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_15 $$ in.close()[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_15 $$ in.close()[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_19 $$ if (out != null)[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_19 $$ if (out != null)[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_20 $$ out.close()[ FD ]
Line_3 $$ FileChannel in = null, out = null-->Line_20 $$ out.close()[ FD ]
Line_4 $$ for (int i = 0; i < anexoTO.length; i++) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < anexoTO.length; i++) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < anexoTO.length; i++) -->Line_4 $$ for (int i = 0; i < anexoTO.length; i++) [ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_8 $$ long size = in.size()[ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_8 $$ long size = in.size()-->Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_10 $$ out.write(buf)[ FD ]
Line_9 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)-->Line_10 $$ out.write(buf)[ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_14 $$ if (in != null)[ FD ]
Line_6 $$ in = new FileInputStream(new File((uploadDiretorio.concat(from)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_15 $$ in.close()[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_19 $$ if (out != null)[ FD ]
Line_7 $$ out = new FileOutputStream(new File((uploadDiretorio.concat(to)).concat(File.separator + anexoTO[i].getNome()))).getChannel()-->Line_20 $$ out.close()[ FD ]
