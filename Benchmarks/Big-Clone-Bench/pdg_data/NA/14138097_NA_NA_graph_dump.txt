Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copy(File src, File dest) throws IOException [ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_3 $$ if (dest.exists() && dest.isFile()) [ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_3 $$ if (dest.exists() && dest.isFile()) [ FD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_3 $$ if (dest.exists() && dest.isFile()) [ FD ]
Line_3 $$ if (dest.exists() && dest.isFile()) -->Line_4 $$ logger.fine("cp " + src + " " + dest + " -- Destination file " + dest + " already exists. Deleting...")[ CD ]
Line_3 $$ if (dest.exists() && dest.isFile()) -->Line_5 $$ dest.delete()[ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_5 $$ dest.delete()[ FD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_7 $$ final File parent = dest.getParentFile()[ CD ]
Line_7 $$ final File parent = dest.getParentFile()-->Line_7 $$ final File parent = dest.getParentFile()[ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_7 $$ final File parent = dest.getParentFile()[ FD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_8 $$ if (!parent.exists()) [ CD ]
Line_8 $$ if (!parent.exists()) -->Line_8 $$ if (!parent.exists()) [ CD ]
Line_8 $$ if (!parent.exists()) -->Line_8 $$ if (!parent.exists()) [ CD ]
Line_7 $$ final File parent = dest.getParentFile()-->Line_8 $$ if (!parent.exists()) [ FD ]
Line_8 $$ if (!parent.exists()) -->Line_9 $$ logger.info("Directory to contain destination does not exist. Creating...")[ CD ]
Line_8 $$ if (!parent.exists()) -->Line_10 $$ parent.mkdirs()[ CD ]
Line_7 $$ final File parent = dest.getParentFile()-->Line_10 $$ parent.mkdirs()[ FD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_12 $$ final FileInputStream fis = new FileInputStream(src)[ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_13 $$ final FileOutputStream fos = new FileOutputStream(dest)[ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_14 $$ final byte[] b = new byte[2048][ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_15 $$ int n[ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)[ CD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_2 $$ public static void copy(File src, File dest) throws IOException [ CD ]
Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)-->Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)[ FD ]
Line_15 $$ int n-->Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)[ FD ]
Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)-->Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)[ CD ]
Line_12 $$ final FileInputStream fis = new FileInputStream(src)-->Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)[ FD ]
Line_14 $$ final byte[] b = new byte[2048]-->Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)[ FD ]
Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)-->Line_16 $$ fos.write(b, 0, n)[ CD ]
Line_13 $$ final FileOutputStream fos = new FileOutputStream(dest)-->Line_16 $$ fos.write(b, 0, n)[ FD ]
Line_14 $$ final byte[] b = new byte[2048]-->Line_16 $$ fos.write(b, 0, n)[ FD ]
Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)-->Line_16 $$ fos.write(b, 0, n)[ FD ]
Line_15 $$ int n-->Line_16 $$ fos.write(b, 0, n)[ FD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_17 $$ fis.close()[ CD ]
Line_12 $$ final FileInputStream fis = new FileInputStream(src)-->Line_17 $$ fis.close()[ FD ]
Line_2 $$ public static void copy(File src, File dest) throws IOException -->Line_18 $$ fos.close()[ CD ]
Line_13 $$ final FileOutputStream fos = new FileOutputStream(dest)-->Line_18 $$ fos.close()[ FD ]
Line_16 $$ while ((n = fis.read(b)) != -1) fos.write(b, 0, n)-->Line_16 $$ fos.write(b, 0, n)[ FD ]
