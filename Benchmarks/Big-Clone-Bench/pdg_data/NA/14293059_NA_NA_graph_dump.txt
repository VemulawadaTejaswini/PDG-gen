Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static final String crypt(final String password, String salt, final String magic) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_3 $$ if (password == null)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_3 $$ if (password == null)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_4 $$ if (salt == null)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_4 $$ if (salt == null)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_5 $$ if (magic == null)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_5 $$ if (magic == null)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_6 $$ byte finalState[][ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_7 $$ long l[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_8 $$ MessageDigest ctx, ctx1[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_10 $$ ctx = MessageDigest.getInstance("md5")[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_10 $$ ctx = MessageDigest.getInstance("md5")[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_10 $$ ctx = MessageDigest.getInstance("md5")[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_11 $$ ctx1 = MessageDigest.getInstance("md5")[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_11 $$ ctx1 = MessageDigest.getInstance("md5")[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_11 $$ ctx1 = MessageDigest.getInstance("md5")[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_16 $$ if (salt.startsWith(magic)) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_16 $$ if (salt.startsWith(magic)) [ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_16 $$ if (salt.startsWith(magic)) [ FD ]
Line_16 $$ if (salt.startsWith(magic)) -->Line_16 $$ if (salt.startsWith(magic)) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_16 $$ if (salt.startsWith(magic)) [ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_16 $$ if (salt.startsWith(magic)) [ FD ]
Line_16 $$ if (salt.startsWith(magic)) -->Line_17 $$ salt = salt.substring(magic.length())[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_17 $$ salt = salt.substring(magic.length())[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_17 $$ salt = salt.substring(magic.length())[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_17 $$ salt = salt.substring(magic.length())[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_17 $$ salt = salt.substring(magic.length())[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_17 $$ salt = salt.substring(magic.length())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_17 $$ salt = salt.substring(magic.length())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_19 $$ if (salt.indexOf('$') != -1) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_19 $$ if (salt.indexOf('$') != -1) [ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_19 $$ if (salt.indexOf('$') != -1) [ FD ]
Line_19 $$ if (salt.indexOf('$') != -1) -->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_22 $$ if (salt.length() > 8) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_22 $$ if (salt.length() > 8) [ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_22 $$ if (salt.length() > 8) [ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_22 $$ if (salt.length() > 8) [ FD ]
Line_22 $$ if (salt.length() > 8) -->Line_23 $$ salt = salt.substring(0, 8)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_23 $$ salt = salt.substring(0, 8)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_23 $$ salt = salt.substring(0, 8)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_25 $$ ctx.update(password.getBytes())[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_25 $$ ctx.update(password.getBytes())[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_25 $$ ctx.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_25 $$ ctx.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_26 $$ ctx.update(magic.getBytes())[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_26 $$ ctx.update(magic.getBytes())[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_26 $$ ctx.update(magic.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_26 $$ ctx.update(magic.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_27 $$ ctx.update(salt.getBytes())[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_27 $$ ctx.update(salt.getBytes())[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_27 $$ ctx.update(salt.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_27 $$ ctx.update(salt.getBytes())[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_27 $$ ctx.update(salt.getBytes())[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_27 $$ ctx.update(salt.getBytes())[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_27 $$ ctx.update(salt.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_28 $$ ctx1.update(password.getBytes())[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_28 $$ ctx1.update(password.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_28 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_28 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_29 $$ ctx1.update(salt.getBytes())[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_29 $$ ctx1.update(salt.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_29 $$ ctx1.update(salt.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_29 $$ ctx1.update(salt.getBytes())[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_29 $$ ctx1.update(salt.getBytes())[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_29 $$ ctx1.update(salt.getBytes())[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_29 $$ ctx1.update(salt.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_30 $$ ctx1.update(password.getBytes())[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_30 $$ ctx1.update(password.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_30 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_30 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_31 $$ finalState = ctx1.digest()[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_31 $$ finalState = ctx1.digest()[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_31 $$ finalState = ctx1.digest()[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_2 $$ public static final String crypt(final String password, String salt, final String magic) [ CD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ CD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ CD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_33 $$ ctx.update(finalState, 0, pl > 16 ? 16 : pl)[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_33 $$ ctx.update(finalState, 0, pl > 16 ? 16 : pl)[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_33 $$ ctx.update(finalState, 0, pl > 16 ? 16 : pl)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_35 $$ clearbits(finalState)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_2 $$ public static final String crypt(final String password, String salt, final String magic) [ CD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ CD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ CD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_37 $$ if ((i & 1) != 0) [ CD ]
Line_37 $$ if ((i & 1) != 0) -->Line_38 $$ ctx.update(finalState, 0, 1)[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_38 $$ ctx.update(finalState, 0, 1)[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_38 $$ ctx.update(finalState, 0, 1)[ FD ]
Line_37 $$ if ((i & 1) != 0) -->Line_40 $$ ctx.update(password.getBytes(), 0, 1)[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_40 $$ ctx.update(password.getBytes(), 0, 1)[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_40 $$ ctx.update(password.getBytes(), 0, 1)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_40 $$ ctx.update(password.getBytes(), 0, 1)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_43 $$ finalState = ctx.digest()[ CD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_43 $$ finalState = ctx.digest()[ FD ]
Line_10 $$ ctx = MessageDigest.getInstance("md5")-->Line_43 $$ finalState = ctx.digest()[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_2 $$ public static final String crypt(final String password, String salt, final String magic) [ CD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ CD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ CD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_46 $$ ctx1 = MessageDigest.getInstance("md5")[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_46 $$ ctx1 = MessageDigest.getInstance("md5")[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_46 $$ ctx1 = MessageDigest.getInstance("md5")[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_46 $$ ctx1 = MessageDigest.getInstance("md5")[ CD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_50 $$ if ((i & 1) != 0) [ CD ]
Line_50 $$ if ((i & 1) != 0) -->Line_51 $$ ctx1.update(password.getBytes())[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_51 $$ ctx1.update(password.getBytes())[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_51 $$ ctx1.update(password.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_51 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_51 $$ ctx1.update(password.getBytes())[ FD ]
Line_50 $$ if ((i & 1) != 0) -->Line_53 $$ ctx1.update(finalState, 0, 16)[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_53 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_53 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_53 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_55 $$ if ((i % 3) != 0) [ CD ]
Line_55 $$ if ((i % 3) != 0) -->Line_56 $$ ctx1.update(salt.getBytes())[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_58 $$ if ((i % 7) != 0) [ CD ]
Line_58 $$ if ((i % 7) != 0) -->Line_59 $$ ctx1.update(password.getBytes())[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_59 $$ ctx1.update(password.getBytes())[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_59 $$ ctx1.update(password.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_59 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_59 $$ ctx1.update(password.getBytes())[ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_61 $$ if ((i & 1) != 0) [ CD ]
Line_61 $$ if ((i & 1) != 0) -->Line_62 $$ ctx1.update(finalState, 0, 16)[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_62 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_62 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_62 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_61 $$ if ((i & 1) != 0) -->Line_64 $$ ctx1.update(password.getBytes())[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_64 $$ ctx1.update(password.getBytes())[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_64 $$ ctx1.update(password.getBytes())[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_64 $$ ctx1.update(password.getBytes())[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_64 $$ ctx1.update(password.getBytes())[ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_66 $$ finalState = ctx1.digest()[ CD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_66 $$ finalState = ctx1.digest()[ FD ]
Line_8 $$ MessageDigest ctx, ctx1-->Line_66 $$ finalState = ctx1.digest()[ FD ]
Line_11 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_66 $$ finalState = ctx1.digest()[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_68 $$ final StringBuffer result = new StringBuffer()[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_69 $$ result.append(magic)[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_69 $$ result.append(magic)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_69 $$ result.append(magic)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_70 $$ result.append(salt)[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_70 $$ result.append(salt)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_70 $$ result.append(salt)[ FD ]
Line_17 $$ salt = salt.substring(magic.length())-->Line_70 $$ result.append(salt)[ FD ]
Line_20 $$ salt = salt.substring(0, salt.indexOf('$'))-->Line_70 $$ result.append(salt)[ FD ]
Line_23 $$ salt = salt.substring(0, 8)-->Line_70 $$ result.append(salt)[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_71 $$ result.append("$")[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_71 $$ result.append("$")[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])[ CD ]
Line_7 $$ long l-->Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_73 $$ result.append(to64(l, 4))[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_73 $$ result.append(to64(l, 4))[ FD ]
Line_7 $$ long l-->Line_73 $$ result.append(to64(l, 4))[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_73 $$ result.append(to64(l, 4))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])[ CD ]
Line_7 $$ long l-->Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_75 $$ result.append(to64(l, 4))[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_75 $$ result.append(to64(l, 4))[ FD ]
Line_7 $$ long l-->Line_75 $$ result.append(to64(l, 4))[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_75 $$ result.append(to64(l, 4))[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_75 $$ result.append(to64(l, 4))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])[ CD ]
Line_7 $$ long l-->Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_77 $$ result.append(to64(l, 4))[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_77 $$ result.append(to64(l, 4))[ FD ]
Line_7 $$ long l-->Line_77 $$ result.append(to64(l, 4))[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_77 $$ result.append(to64(l, 4))[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_77 $$ result.append(to64(l, 4))[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_77 $$ result.append(to64(l, 4))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])[ CD ]
Line_7 $$ long l-->Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])[ FD ]
Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])-->Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_79 $$ result.append(to64(l, 4))[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_79 $$ result.append(to64(l, 4))[ FD ]
Line_7 $$ long l-->Line_79 $$ result.append(to64(l, 4))[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_79 $$ result.append(to64(l, 4))[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_79 $$ result.append(to64(l, 4))[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_79 $$ result.append(to64(l, 4))[ FD ]
Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])-->Line_79 $$ result.append(to64(l, 4))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ CD ]
Line_7 $$ long l-->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ FD ]
Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])-->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ FD ]
Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])-->Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_81 $$ result.append(to64(l, 4))[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_7 $$ long l-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])-->Line_81 $$ result.append(to64(l, 4))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_82 $$ l = bytes2u(finalState[11])[ CD ]
Line_7 $$ long l-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_82 $$ l = bytes2u(finalState[11])-->Line_82 $$ l = bytes2u(finalState[11])[ FD ]
Line_82 $$ l = bytes2u(finalState[11])-->Line_82 $$ l = bytes2u(finalState[11])[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_83 $$ result.append(to64(l, 2))[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_7 $$ long l-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_72 $$ l = (bytes2u(finalState[0]) << 16) | (bytes2u(finalState[6]) << 8) | bytes2u(finalState[12])-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_74 $$ l = (bytes2u(finalState[1]) << 16) | (bytes2u(finalState[7]) << 8) | bytes2u(finalState[13])-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_76 $$ l = (bytes2u(finalState[2]) << 16) | (bytes2u(finalState[8]) << 8) | bytes2u(finalState[14])-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_78 $$ l = (bytes2u(finalState[3]) << 16) | (bytes2u(finalState[9]) << 8) | bytes2u(finalState[15])-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_80 $$ l = (bytes2u(finalState[4]) << 16) | (bytes2u(finalState[10]) << 8) | bytes2u(finalState[5])-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_82 $$ l = bytes2u(finalState[11])-->Line_83 $$ result.append(to64(l, 2))[ FD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_84 $$ clearbits(finalState)[ CD ]
Line_2 $$ public static final String crypt(final String password, String salt, final String magic) -->Line_85 $$ return result.toString()[ CD ]
Line_85 $$ return result.toString()-->Line_85 $$ return result.toString()[ CD ]
Line_68 $$ final StringBuffer result = new StringBuffer()-->Line_85 $$ return result.toString()[ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) -->Line_32 $$ for (int pl = password.length(); pl > 0; pl -= 16) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) -->Line_36 $$ for (int i = password.length(); i != 0; i >>>= 1) [ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_44 $$ for (int i = 0; i < 1000; i++) -->Line_44 $$ for (int i = 0; i < 1000; i++) [ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_51 $$ ctx1.update(password.getBytes())[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_53 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_56 $$ ctx1.update(salt.getBytes())[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_59 $$ ctx1.update(password.getBytes())[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_62 $$ ctx1.update(finalState, 0, 16)[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_64 $$ ctx1.update(password.getBytes())[ FD ]
Line_46 $$ ctx1 = MessageDigest.getInstance("md5")-->Line_66 $$ finalState = ctx1.digest()[ FD ]
