Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void doLogin() [ CD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_6 $$ URLConnection conn = url.openConnection()[ CD ]
Line_5 $$ URL url = new URL("http://" + hostname + "/migrate")-->Line_6 $$ URLConnection conn = url.openConnection()[ FD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_7 $$ conn.setDoOutput(true)[ FD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_8 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_8 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_9 $$ wr.write(URLEncoder.encode("login", "UTF-8") + "=" + encodeCredentials())[ FD ]
Line_8 $$ OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream())-->Line_10 $$ wr.flush()[ FD ]
Line_6 $$ URLConnection conn = url.openConnection()-->Line_11 $$ BufferedInputStream in = new BufferedInputStream(conn.getInputStream())[ FD ]
Line_12 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_12 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()[ CD ]
Line_12 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_13 $$ dbf.setNamespaceAware(true)[ FD ]
Line_14 $$ DocumentBuilder db = dbf.newDocumentBuilder()-->Line_14 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ CD ]
Line_12 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()-->Line_14 $$ DocumentBuilder db = dbf.newDocumentBuilder()[ FD ]
Line_15 $$ Document doc = db.parse(in)-->Line_15 $$ Document doc = db.parse(in)[ CD ]
Line_14 $$ DocumentBuilder db = dbf.newDocumentBuilder()-->Line_15 $$ Document doc = db.parse(in)[ FD ]
Line_11 $$ BufferedInputStream in = new BufferedInputStream(conn.getInputStream())-->Line_15 $$ Document doc = db.parse(in)[ FD ]
Line_16 $$ Element root = doc.getDocumentElement()-->Line_16 $$ Element root = doc.getDocumentElement()[ CD ]
Line_15 $$ Document doc = db.parse(in)-->Line_16 $$ Element root = doc.getDocumentElement()[ FD ]
Line_11 $$ BufferedInputStream in = new BufferedInputStream(conn.getInputStream())-->Line_17 $$ in.close()[ FD ]
Line_18 $$ if (root.getAttribute("success").equals("false")) -->Line_18 $$ if (root.getAttribute("success").equals("false")) [ CD ]
Line_16 $$ Element root = doc.getDocumentElement()-->Line_18 $$ if (root.getAttribute("success").equals("false")) [ FD ]
Line_18 $$ if (root.getAttribute("success").equals("false")) -->Line_19 $$ println("Login Failed: " + getTextContent(root))[ CD ]
Line_16 $$ Element root = doc.getDocumentElement()-->Line_19 $$ println("Login Failed: " + getTextContent(root))[ FD ]
Line_18 $$ if (root.getAttribute("success").equals("false")) -->Line_20 $$ JOptionPane.showMessageDialog(this, "Login Failed: " + getTextContent(root), "Login Failed", JOptionPane.ERROR_MESSAGE)[ CD ]
Line_16 $$ Element root = doc.getDocumentElement()-->Line_20 $$ JOptionPane.showMessageDialog(this, "Login Failed: " + getTextContent(root), "Login Failed", JOptionPane.ERROR_MESSAGE)[ FD ]
Line_16 $$ Element root = doc.getDocumentElement()-->Line_22 $$ token = root.hasAttribute("token") ? root.getAttribute("token") : null[ FD ]
Line_16 $$ Element root = doc.getDocumentElement()-->Line_22 $$ token = root.hasAttribute("token") ? root.getAttribute("token") : null[ FD ]
Line_18 $$ if (root.getAttribute("success").equals("false")) -->Line_23 $$ if (token != null) [ CD ]
Line_23 $$ if (token != null) -->Line_24 $$ startImport()[ CD ]
