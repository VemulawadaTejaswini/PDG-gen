Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void loadFromZip() [ CD ]
Line_2 $$ private static void loadFromZip() -->Line_3 $$ InputStream in = Resources.class.getResourceAsStream("data.zip")[ CD ]
Line_3 $$ InputStream in = Resources.class.getResourceAsStream("data.zip")-->Line_3 $$ InputStream in = Resources.class.getResourceAsStream("data.zip")[ CD ]
Line_2 $$ private static void loadFromZip() -->Line_4 $$ if (in == null) [ CD ]
Line_3 $$ InputStream in = Resources.class.getResourceAsStream("data.zip")-->Line_4 $$ if (in == null) [ FD ]
Line_4 $$ if (in == null) -->Line_5 $$ return[ CD ]
Line_2 $$ private static void loadFromZip() -->Line_7 $$ ZipInputStream zipIn = new ZipInputStream(in)[ CD ]
Line_9 $$ while (true) -->Line_10 $$ ZipEntry entry = zipIn.getNextEntry()[ CD ]
Line_10 $$ ZipEntry entry = zipIn.getNextEntry()-->Line_10 $$ ZipEntry entry = zipIn.getNextEntry()[ CD ]
Line_7 $$ ZipInputStream zipIn = new ZipInputStream(in)-->Line_10 $$ ZipEntry entry = zipIn.getNextEntry()[ FD ]
Line_9 $$ while (true) -->Line_11 $$ if (entry == null) [ CD ]
Line_10 $$ ZipEntry entry = zipIn.getNextEntry()-->Line_11 $$ if (entry == null) [ FD ]
Line_9 $$ while (true) -->Line_14 $$ String entryName = entry.getName()[ CD ]
Line_14 $$ String entryName = entry.getName()-->Line_14 $$ String entryName = entry.getName()[ CD ]
Line_10 $$ ZipEntry entry = zipIn.getNextEntry()-->Line_14 $$ String entryName = entry.getName()[ FD ]
Line_9 $$ while (true) -->Line_15 $$ if (!entryName.startsWith("/")) [ CD ]
Line_15 $$ if (!entryName.startsWith("/")) -->Line_15 $$ if (!entryName.startsWith("/")) [ CD ]
Line_15 $$ if (!entryName.startsWith("/")) -->Line_15 $$ if (!entryName.startsWith("/")) [ CD ]
Line_14 $$ String entryName = entry.getName()-->Line_15 $$ if (!entryName.startsWith("/")) [ FD ]
Line_15 $$ if (!entryName.startsWith("/")) -->Line_16 $$ entryName = "/" + entryName[ CD ]
Line_14 $$ String entryName = entry.getName()-->Line_16 $$ entryName = "/" + entryName[ FD ]
Line_16 $$ entryName = "/" + entryName-->Line_16 $$ entryName = "/" + entryName[ FD ]
Line_14 $$ String entryName = entry.getName()-->Line_16 $$ entryName = "/" + entryName[ FD ]
Line_16 $$ entryName = "/" + entryName-->Line_16 $$ entryName = "/" + entryName[ FD ]
Line_9 $$ while (true) -->Line_18 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_9 $$ while (true) -->Line_19 $$ IOUtils.copy(zipIn, out)[ CD ]
Line_7 $$ ZipInputStream zipIn = new ZipInputStream(in)-->Line_19 $$ IOUtils.copy(zipIn, out)[ FD ]
Line_18 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_19 $$ IOUtils.copy(zipIn, out)[ FD ]
Line_9 $$ while (true) -->Line_20 $$ zipIn.closeEntry()[ CD ]
Line_7 $$ ZipInputStream zipIn = new ZipInputStream(in)-->Line_20 $$ zipIn.closeEntry()[ FD ]
Line_9 $$ while (true) -->Line_21 $$ FILES.put(entryName, out.toByteArray())[ CD ]
Line_14 $$ String entryName = entry.getName()-->Line_21 $$ FILES.put(entryName, out.toByteArray())[ FD ]
Line_16 $$ entryName = "/" + entryName-->Line_21 $$ FILES.put(entryName, out.toByteArray())[ FD ]
Line_18 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_21 $$ FILES.put(entryName, out.toByteArray())[ FD ]
Line_7 $$ ZipInputStream zipIn = new ZipInputStream(in)-->Line_23 $$ zipIn.close()[ FD ]
Line_10 $$ ZipEntry entry = zipIn.getNextEntry()-->Line_11 $$ if (entry == null) [ FD ]
Line_10 $$ ZipEntry entry = zipIn.getNextEntry()-->Line_14 $$ String entryName = entry.getName()[ FD ]
Line_14 $$ String entryName = entry.getName()-->Line_15 $$ if (!entryName.startsWith("/")) [ FD ]
Line_16 $$ entryName = "/" + entryName-->Line_15 $$ if (!entryName.startsWith("/")) [ FD ]
Line_14 $$ String entryName = entry.getName()-->Line_16 $$ entryName = "/" + entryName[ FD ]
Line_16 $$ entryName = "/" + entryName-->Line_16 $$ entryName = "/" + entryName[ FD ]
Line_18 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_19 $$ IOUtils.copy(zipIn, out)[ FD ]
Line_14 $$ String entryName = entry.getName()-->Line_21 $$ FILES.put(entryName, out.toByteArray())[ FD ]
Line_16 $$ entryName = "/" + entryName-->Line_21 $$ FILES.put(entryName, out.toByteArray())[ FD ]
Line_18 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_21 $$ FILES.put(entryName, out.toByteArray())[ FD ]
