Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public TestReport runImpl() throws Exception [ CD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_3 $$ String parser = XMLResourceDescriptor.getXMLParserClassName()[ CD ]
Line_3 $$ String parser = XMLResourceDescriptor.getXMLParserClassName()-->Line_3 $$ String parser = XMLResourceDescriptor.getXMLParserClassName()[ CD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_4 $$ DocumentFactory df = new SAXDocumentFactory(GenericDOMImplementation.getDOMImplementation(), parser)[ CD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_5 $$ File f = (new File(testFileName))[ CD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_6 $$ URL url = f.toURL()[ CD ]
Line_6 $$ URL url = f.toURL()-->Line_6 $$ URL url = f.toURL()[ CD ]
Line_5 $$ File f = (new File(testFileName))-->Line_6 $$ URL url = f.toURL()[ FD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())[ CD ]
Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())-->Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())[ CD ]
Line_4 $$ DocumentFactory df = new SAXDocumentFactory(GenericDOMImplementation.getDOMImplementation(), parser)-->Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())[ FD ]
Line_6 $$ URL url = f.toURL()-->Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())[ FD ]
Line_6 $$ URL url = f.toURL()-->Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())[ FD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_8 $$ Element e = doc.getElementById(targetId)[ CD ]
Line_8 $$ Element e = doc.getElementById(targetId)-->Line_8 $$ Element e = doc.getElementById(targetId)[ CD ]
Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())-->Line_8 $$ Element e = doc.getElementById(targetId)[ FD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_9 $$ if (e == null) [ CD ]
Line_8 $$ Element e = doc.getElementById(targetId)-->Line_9 $$ if (e == null) [ FD ]
Line_9 $$ if (e == null) -->Line_10 $$ DefaultTestReport report = new DefaultTestReport(this)[ CD ]
Line_9 $$ if (e == null) -->Line_11 $$ report.setErrorCode(ERROR_GET_ELEMENT_BY_ID_FAILED)[ CD ]
Line_10 $$ DefaultTestReport report = new DefaultTestReport(this)-->Line_11 $$ report.setErrorCode(ERROR_GET_ELEMENT_BY_ID_FAILED)[ FD ]
Line_9 $$ if (e == null) -->Line_12 $$ report.addDescriptionEntry(ENTRY_KEY_ID, targetId)[ CD ]
Line_10 $$ DefaultTestReport report = new DefaultTestReport(this)-->Line_12 $$ report.addDescriptionEntry(ENTRY_KEY_ID, targetId)[ FD ]
Line_9 $$ if (e == null) -->Line_13 $$ report.setPassed(false)[ CD ]
Line_10 $$ DefaultTestReport report = new DefaultTestReport(this)-->Line_13 $$ report.setPassed(false)[ FD ]
Line_9 $$ if (e == null) -->Line_14 $$ return report[ CD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())[ CD ]
Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())-->Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())[ CD ]
Line_4 $$ DocumentFactory df = new SAXDocumentFactory(GenericDOMImplementation.getDOMImplementation(), parser)-->Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())[ FD ]
Line_6 $$ URL url = f.toURL()-->Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())[ FD ]
Line_6 $$ URL url = f.toURL()-->Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())[ FD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_17 $$ DocumentFragment docFrag = otherDocument.createDocumentFragment()[ CD ]
Line_17 $$ DocumentFragment docFrag = otherDocument.createDocumentFragment()-->Line_17 $$ DocumentFragment docFrag = otherDocument.createDocumentFragment()[ CD ]
Line_16 $$ Document otherDocument = df.createDocument(null, rootTag, url.toString(), url.openStream())-->Line_17 $$ DocumentFragment docFrag = otherDocument.createDocumentFragment()[ FD ]
Line_17 $$ DocumentFragment docFrag = otherDocument.createDocumentFragment()-->Line_19 $$ docFrag.appendChild(doc.getDocumentElement())[ FD ]
Line_7 $$ Document doc = df.createDocument(null, rootTag, url.toString(), url.openStream())-->Line_19 $$ docFrag.appendChild(doc.getDocumentElement())[ FD ]
Line_21 $$ return reportSuccess()-->Line_21 $$ return reportSuccess()[ CD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_24 $$ report.setErrorCode(ERROR_EXCEPTION_NOT_THROWN)[ CD ]
Line_10 $$ DefaultTestReport report = new DefaultTestReport(this)-->Line_24 $$ report.setErrorCode(ERROR_EXCEPTION_NOT_THROWN)[ FD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_25 $$ report.setPassed(false)[ CD ]
Line_10 $$ DefaultTestReport report = new DefaultTestReport(this)-->Line_25 $$ report.setPassed(false)[ FD ]
Line_2 $$ public TestReport runImpl() throws Exception -->Line_26 $$ return report[ CD ]
