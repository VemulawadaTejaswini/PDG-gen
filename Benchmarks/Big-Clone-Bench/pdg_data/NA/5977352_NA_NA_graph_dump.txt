Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException [ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_3 $$ if (dest.exists())[ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_3 $$ if (dest.exists())[ FD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_3 $$ if (dest.exists())[ FD ]
Line_3 $$ if (dest.exists())-->Line_3 $$ if (dest.exists())[ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_3 $$ if (dest.exists())[ FD ]
Line_3 $$ if (dest.exists())-->Line_3 $$ if (force)[ CD ]
Line_3 $$ if (force)-->Line_3 $$ dest.delete()[ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_3 $$ dest.delete()[ FD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_3 $$ throw new IOException("Cannot overwrite existing file: " + dest.getName())[ FD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_4 $$ byte[] buffer = new byte[bufSize][ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_5 $$ int read = 0[ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_6 $$ InputStream in = null[ CD ]
Line_2 $$ public static void copyFile(File src, File dest, int bufSize, boolean force) throws IOException -->Line_7 $$ OutputStream out = null[ CD ]
Line_6 $$ InputStream in = null-->Line_9 $$ in = new FileInputStream(src)[ FD ]
Line_9 $$ in = new FileInputStream(src)-->Line_9 $$ in = new FileInputStream(src)[ FD ]
Line_7 $$ OutputStream out = null-->Line_10 $$ out = new FileOutputStream(dest)[ FD ]
Line_10 $$ out = new FileOutputStream(dest)-->Line_10 $$ out = new FileOutputStream(dest)[ FD ]
Line_11 $$ while (true) -->Line_12 $$ read = in.read(buffer)[ CD ]
Line_12 $$ read = in.read(buffer)-->Line_12 $$ read = in.read(buffer)[ FD ]
Line_5 $$ int read = 0-->Line_12 $$ read = in.read(buffer)[ FD ]
Line_12 $$ read = in.read(buffer)-->Line_12 $$ read = in.read(buffer)[ CD ]
Line_6 $$ InputStream in = null-->Line_12 $$ read = in.read(buffer)[ FD ]
Line_9 $$ in = new FileInputStream(src)-->Line_12 $$ read = in.read(buffer)[ FD ]
Line_4 $$ byte[] buffer = new byte[bufSize]-->Line_12 $$ read = in.read(buffer)[ FD ]
Line_11 $$ while (true) -->Line_13 $$ if (read == -1)[ CD ]
Line_12 $$ read = in.read(buffer)-->Line_13 $$ if (read == -1)[ FD ]
Line_5 $$ int read = 0-->Line_13 $$ if (read == -1)[ FD ]
Line_11 $$ while (true) -->Line_14 $$ out.write(buffer, 0, read)[ CD ]
Line_7 $$ OutputStream out = null-->Line_14 $$ out.write(buffer, 0, read)[ FD ]
Line_10 $$ out = new FileOutputStream(dest)-->Line_14 $$ out.write(buffer, 0, read)[ FD ]
Line_4 $$ byte[] buffer = new byte[bufSize]-->Line_14 $$ out.write(buffer, 0, read)[ FD ]
Line_12 $$ read = in.read(buffer)-->Line_14 $$ out.write(buffer, 0, read)[ FD ]
Line_5 $$ int read = 0-->Line_14 $$ out.write(buffer, 0, read)[ FD ]
Line_6 $$ InputStream in = null-->Line_17 $$ if (in != null)[ FD ]
Line_9 $$ in = new FileInputStream(src)-->Line_17 $$ if (in != null)[ FD ]
Line_6 $$ InputStream in = null-->Line_18 $$ in.close()[ FD ]
Line_9 $$ in = new FileInputStream(src)-->Line_18 $$ in.close()[ FD ]
Line_7 $$ OutputStream out = null-->Line_20 $$ if (out != null)[ FD ]
Line_10 $$ out = new FileOutputStream(dest)-->Line_20 $$ if (out != null)[ FD ]
Line_20 $$ if (out != null)-->Line_20 $$ out.close()[ CD ]
Line_7 $$ OutputStream out = null-->Line_20 $$ out.close()[ FD ]
Line_10 $$ out = new FileOutputStream(dest)-->Line_20 $$ out.close()[ FD ]
Line_12 $$ read = in.read(buffer)-->Line_13 $$ if (read == -1)[ FD ]
Line_12 $$ read = in.read(buffer)-->Line_14 $$ out.write(buffer, 0, read)[ FD ]
