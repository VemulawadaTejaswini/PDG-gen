Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public HTTPResponse makeRequest(BasicHttpRequest request) throws IOException [ CD ]
Line_4 $$ if (!conn.isOpen()) -->Line_4 $$ if (!conn.isOpen()) [ CD ]
Line_4 $$ if (!conn.isOpen()) -->Line_4 $$ if (!conn.isOpen()) [ CD ]
Line_4 $$ if (!conn.isOpen()) -->Line_5 $$ logger.warn(ApacheHTTP.class, "Creating socket")[ CD ]
Line_4 $$ if (!conn.isOpen()) -->Line_6 $$ Socket socket = getSocket(host.getHostName(), host.getPort(), ssl, true)[ CD ]
Line_6 $$ Socket socket = getSocket(host.getHostName(), host.getPort(), ssl, true)-->Line_6 $$ Socket socket = getSocket(host.getHostName(), host.getPort(), ssl, true)[ CD ]
Line_4 $$ if (!conn.isOpen()) -->Line_7 $$ conn.bind(socket, params)[ CD ]
Line_6 $$ Socket socket = getSocket(host.getHostName(), host.getPort(), ssl, true)-->Line_7 $$ conn.bind(socket, params)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_10 $$ context.setAttribute(ExecutionContext.HTTP_CONNECTION, conn)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_11 $$ context.setAttribute(ExecutionContext.HTTP_TARGET_HOST, host)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_12 $$ context.setAttribute(ExecutionContext.HTTP_REQUEST, request)[ FD ]
Line_2 $$ public HTTPResponse makeRequest(BasicHttpRequest request) throws IOException -->Line_12 $$ context.setAttribute(ExecutionContext.HTTP_REQUEST, request)[ FD ]
Line_2 $$ public HTTPResponse makeRequest(BasicHttpRequest request) throws IOException -->Line_13 $$ request.setParams(params)[ FD ]
Line_2 $$ public HTTPResponse makeRequest(BasicHttpRequest request) throws IOException -->Line_14 $$ httpexecutor.preProcess(request, httpproc, context)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_14 $$ httpexecutor.preProcess(request, httpproc, context)[ FD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)[ CD ]
Line_2 $$ public HTTPResponse makeRequest(BasicHttpRequest request) throws IOException -->Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)[ FD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_16 $$ httpexecutor.postProcess(response, httpproc, context)[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_16 $$ httpexecutor.postProcess(response, httpproc, context)[ FD ]
Line_17 $$ if (!connStrategy.keepAlive(response, context))-->Line_17 $$ if (!connStrategy.keepAlive(response, context))[ CD ]
Line_17 $$ if (!connStrategy.keepAlive(response, context))-->Line_17 $$ if (!connStrategy.keepAlive(response, context))[ CD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_17 $$ if (!connStrategy.keepAlive(response, context))[ FD ]
Line_9 $$ HttpContext context = new BasicHttpContext(null)-->Line_17 $$ if (!connStrategy.keepAlive(response, context))[ FD ]
Line_18 $$ int statusCode = response.getStatusLine().getStatusCode()-->Line_18 $$ int statusCode = response.getStatusLine().getStatusCode()[ CD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_18 $$ int statusCode = response.getStatusLine().getStatusCode()[ FD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_19 $$ HttpEntity resp = response.getEntity()[ CD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_19 $$ HttpEntity resp = response.getEntity()[ FD ]
Line_18 $$ int statusCode = response.getStatusLine().getStatusCode()-->Line_20 $$ if (statusCode >= 400) [ FD ]
Line_20 $$ if (statusCode >= 400) -->Line_21 $$ HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), "", resp.getContentType().getValue())[ CD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_21 $$ HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), "", resp.getContentType().getValue())[ FD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_21 $$ HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), "", resp.getContentType().getValue())[ FD ]
Line_20 $$ if (statusCode >= 400) -->Line_22 $$ byte[] bytes = IOUtil.toByteArray(resp.getContent())[ CD ]
Line_22 $$ byte[] bytes = IOUtil.toByteArray(resp.getContent())-->Line_22 $$ byte[] bytes = IOUtil.toByteArray(resp.getContent())[ CD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_22 $$ byte[] bytes = IOUtil.toByteArray(resp.getContent())[ FD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_23 $$ throw new HTTPErrorResponse(response.getStatusLine().getReasonPhrase(), statusCode + "", bytes, info)[ FD ]
Line_20 $$ if (statusCode >= 400) -->Line_25 $$ Header lastmodHeader = response.getLastHeader("last-modified")[ CD ]
Line_25 $$ Header lastmodHeader = response.getLastHeader("last-modified")-->Line_25 $$ Header lastmodHeader = response.getLastHeader("last-modified")[ CD ]
Line_15 $$ HttpResponse response = httpexecutor.execute(request, conn, context)-->Line_25 $$ Header lastmodHeader = response.getLastHeader("last-modified")[ FD ]
Line_20 $$ if (statusCode >= 400) -->Line_26 $$ String lastmod = lastmodHeader == null ? "" : lastmodHeader.getValue()[ CD ]
Line_25 $$ Header lastmodHeader = response.getLastHeader("last-modified")-->Line_26 $$ String lastmod = lastmodHeader == null ? "" : lastmodHeader.getValue()[ FD ]
Line_20 $$ if (statusCode >= 400) -->Line_27 $$ Header contentType = resp.getContentType()[ CD ]
Line_27 $$ Header contentType = resp.getContentType()-->Line_27 $$ Header contentType = resp.getContentType()[ CD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_27 $$ Header contentType = resp.getContentType()[ FD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_28 $$ HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), lastmod, contentType == null ? null : contentType.getValue())[ FD ]
Line_27 $$ Header contentType = resp.getContentType()-->Line_28 $$ HTTPEntityInfo info = new HTTPEntityInfo((int) resp.getContentLength(), lastmod, contentType == null ? null : contentType.getValue())[ FD ]
Line_20 $$ if (statusCode >= 400) -->Line_29 $$ return new HTTPResponse(info, resp.getContent())[ CD ]
Line_19 $$ HttpEntity resp = response.getEntity()-->Line_29 $$ return new HTTPResponse(info, resp.getContent())[ FD ]
