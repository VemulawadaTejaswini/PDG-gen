Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String buildUserPassword(String password) [ CD ]
Line_2 $$ public static String buildUserPassword(String password) -->Line_3 $$ String result = ""[ CD ]
Line_2 $$ public static String buildUserPassword(String password) -->Line_4 $$ MessageDigest md[ CD ]
Line_4 $$ MessageDigest md-->Line_6 $$ md = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ md = MessageDigest.getInstance("MD5")-->Line_6 $$ md = MessageDigest.getInstance("MD5")[ FD ]
Line_6 $$ md = MessageDigest.getInstance("MD5")-->Line_6 $$ md = MessageDigest.getInstance("MD5")[ CD ]
Line_4 $$ MessageDigest md-->Line_7 $$ md.update(password.getBytes("UTF8"))[ FD ]
Line_6 $$ md = MessageDigest.getInstance("MD5")-->Line_7 $$ md.update(password.getBytes("UTF8"))[ FD ]
Line_2 $$ public static String buildUserPassword(String password) -->Line_7 $$ md.update(password.getBytes("UTF8"))[ FD ]
Line_8 $$ byte[] hash = md.digest()-->Line_8 $$ byte[] hash = md.digest()[ CD ]
Line_4 $$ MessageDigest md-->Line_8 $$ byte[] hash = md.digest()[ FD ]
Line_6 $$ md = MessageDigest.getInstance("MD5")-->Line_8 $$ byte[] hash = md.digest()[ FD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ for (int i = 0; i < hash.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_10 $$ int hexValue = hash[i] & 0xFF[ CD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_11 $$ if (hexValue < 16) [ CD ]
Line_10 $$ int hexValue = hash[i] & 0xFF-->Line_11 $$ if (hexValue < 16) [ FD ]
Line_11 $$ if (hexValue < 16) -->Line_12 $$ result = result + "0"[ CD ]
Line_12 $$ result = result + "0"-->Line_12 $$ result = result + "0"[ FD ]
Line_3 $$ String result = ""-->Line_12 $$ result = result + "0"[ FD ]
Line_12 $$ result = result + "0"-->Line_12 $$ result = result + "0"[ FD ]
Line_3 $$ String result = ""-->Line_12 $$ result = result + "0"[ FD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ CD ]
Line_12 $$ result = result + "0"-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_14 $$ result = result + Integer.toString(hexValue, 16)-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_3 $$ String result = ""-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_12 $$ result = result + "0"-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_14 $$ result = result + Integer.toString(hexValue, 16)-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_3 $$ String result = ""-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_10 $$ int hexValue = hash[i] & 0xFF-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_2 $$ public static String buildUserPassword(String password) -->Line_24 $$ return result[ CD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < hash.length; i++) -->Line_9 $$ for (int i = 0; i < hash.length; i++) [ FD ]
Line_10 $$ int hexValue = hash[i] & 0xFF-->Line_11 $$ if (hexValue < 16) [ FD ]
Line_12 $$ result = result + "0"-->Line_12 $$ result = result + "0"[ FD ]
Line_14 $$ result = result + Integer.toString(hexValue, 16)-->Line_12 $$ result = result + "0"[ FD ]
Line_12 $$ result = result + "0"-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_14 $$ result = result + Integer.toString(hexValue, 16)-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
Line_10 $$ int hexValue = hash[i] & 0xFF-->Line_14 $$ result = result + Integer.toString(hexValue, 16)[ FD ]
