Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String copy(URL url, File dest) throws IOException [ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_3 $$ if (log.isDebugEnabled()) [ CD ]
Line_3 $$ if (log.isDebugEnabled()) -->Line_3 $$ if (log.isDebugEnabled()) [ CD ]
Line_3 $$ if (log.isDebugEnabled()) -->Line_4 $$ log.debug("Fetching: " + url)[ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_6 $$ IOException error = null[ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_2 $$ public static String copy(URL url, File dest) throws IOException [ CD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ CD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ CD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ FD ]
Line_9 $$ OutputStream out = null-->Line_12 $$ out = new FileOutputStream(dest)[ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_12 $$ out = new FileOutputStream(dest)[ FD ]
Line_13 $$ if (url.getProtocol().equals("http")) -->Line_13 $$ if (url.getProtocol().equals("http")) [ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_13 $$ if (url.getProtocol().equals("http")) [ FD ]
Line_13 $$ if (url.getProtocol().equals("http")) -->Line_14 $$ is = new WebFileInputStream(url)[ CD ]
Line_10 $$ InputStream is = null-->Line_14 $$ is = new WebFileInputStream(url)[ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_14 $$ is = new WebFileInputStream(url)[ FD ]
Line_13 $$ if (url.getProtocol().equals("http")) -->Line_16 $$ is = url.openStream()[ CD ]
Line_10 $$ InputStream is = null-->Line_16 $$ is = url.openStream()[ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_16 $$ is = url.openStream()[ FD ]
Line_16 $$ is = url.openStream()-->Line_16 $$ is = url.openStream()[ FD ]
Line_16 $$ is = url.openStream()-->Line_16 $$ is = url.openStream()[ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_16 $$ is = url.openStream()[ FD ]
Line_18 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_18 $$ MessageDigest md = MessageDigest.getInstance("MD5")[ CD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_21 $$ while ((len = is.read(buf)) > 0) [ FD ]
Line_20 $$ int len-->Line_21 $$ while ((len = is.read(buf)) > 0) [ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_21 $$ while ((len = is.read(buf)) > 0) [ CD ]
Line_10 $$ InputStream is = null-->Line_21 $$ while ((len = is.read(buf)) > 0) [ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_21 $$ while ((len = is.read(buf)) > 0) [ FD ]
Line_16 $$ is = url.openStream()-->Line_21 $$ while ((len = is.read(buf)) > 0) [ FD ]
Line_19 $$ byte[] buf = new byte[1024]-->Line_21 $$ while ((len = is.read(buf)) > 0) [ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_22 $$ out.write(buf, 0, len)[ CD ]
Line_9 $$ OutputStream out = null-->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_19 $$ byte[] buf = new byte[1024]-->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_20 $$ int len-->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_23 $$ md.update(buf, 0, len)[ CD ]
Line_18 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_23 $$ md.update(buf, 0, len)[ FD ]
Line_19 $$ byte[] buf = new byte[1024]-->Line_23 $$ md.update(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_23 $$ md.update(buf, 0, len)[ FD ]
Line_20 $$ int len-->Line_23 $$ md.update(buf, 0, len)[ FD ]
Line_9 $$ OutputStream out = null-->Line_25 $$ out.flush()[ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_25 $$ out.flush()[ FD ]
Line_26 $$ return bytesToHexString(md.digest())-->Line_26 $$ return bytesToHexString(md.digest())[ CD ]
Line_18 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_26 $$ return bytesToHexString(md.digest())[ FD ]
Line_6 $$ IOException error = null-->Line_28 $$ if (error == null) [ FD ]
Line_28 $$ if (error == null) -->Line_29 $$ error = e[ CD ]
Line_29 $$ error = e-->Line_29 $$ error = e[ FD ]
Line_6 $$ IOException error = null-->Line_29 $$ error = e[ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_31 $$ if (retries < MAX_RETRIES - 1) [ FD ]
Line_31 $$ if (retries < MAX_RETRIES - 1) -->Line_32 $$ log.error(MessageFormat.format("Unable to fetch URL [ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_32 $$ log.error(MessageFormat.format("Unable to fetch URL [ FD ]
Line_29 $$ error = e-->Line_39 $$ if (error == null) [ FD ]
Line_6 $$ IOException error = null-->Line_39 $$ if (error == null) [ FD ]
Line_39 $$ if (error == null) -->Line_40 $$ error = e[ CD ]
Line_29 $$ error = e-->Line_40 $$ error = e[ FD ]
Line_40 $$ error = e-->Line_40 $$ error = e[ FD ]
Line_6 $$ IOException error = null-->Line_40 $$ error = e[ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_42 $$ if (retries < MAX_RETRIES - 1) [ FD ]
Line_42 $$ if (retries < MAX_RETRIES - 1) -->Line_43 $$ log.error(MessageFormat.format("Unable to fetch URL [ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_43 $$ log.error(MessageFormat.format("Unable to fetch URL [ FD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_50 $$ if (dest.exists()) [ FD ]
Line_50 $$ if (dest.exists()) -->Line_50 $$ if (dest.exists()) [ CD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_50 $$ if (dest.exists()) [ FD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_52 $$ FileHelper.delete(dest)[ FD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_54 $$ log.error(MessageFormat.format(Messages.getString("FileHelper.UNABLE_DELETE_FILE"), dest), e1)[ FD ]
Line_10 $$ InputStream is = null-->Line_59 $$ if (is != null) [ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_59 $$ if (is != null) [ FD ]
Line_16 $$ is = url.openStream()-->Line_59 $$ if (is != null) [ FD ]
Line_10 $$ InputStream is = null-->Line_61 $$ is.close()[ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_61 $$ is.close()[ FD ]
Line_16 $$ is = url.openStream()-->Line_61 $$ is.close()[ FD ]
Line_9 $$ OutputStream out = null-->Line_66 $$ if (out != null) [ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_66 $$ if (out != null) [ FD ]
Line_9 $$ OutputStream out = null-->Line_68 $$ out.close()[ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_68 $$ out.close()[ FD ]
Line_2 $$ public static String copy(URL url, File dest) throws IOException -->Line_75 $$ throw new IOException(MessageFormat.format(Messages.getString("FileHelper.UNABLE_DOWNLOAD_URL"), url), e)[ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) [ FD ]
Line_9 $$ OutputStream out = null-->Line_25 $$ out.flush()[ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_25 $$ out.flush()[ FD ]
Line_18 $$ MessageDigest md = MessageDigest.getInstance("MD5")-->Line_26 $$ return bytesToHexString(md.digest())[ FD ]
Line_29 $$ error = e-->Line_28 $$ if (error == null) [ FD ]
Line_40 $$ error = e-->Line_28 $$ if (error == null) [ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_31 $$ if (retries < MAX_RETRIES - 1) [ FD ]
Line_29 $$ error = e-->Line_39 $$ if (error == null) [ FD ]
Line_40 $$ error = e-->Line_39 $$ if (error == null) [ FD ]
Line_7 $$ for (int retries = 0; retries < MAX_RETRIES; retries++) -->Line_42 $$ if (retries < MAX_RETRIES - 1) [ FD ]
Line_10 $$ InputStream is = null-->Line_59 $$ if (is != null) [ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_59 $$ if (is != null) [ FD ]
Line_16 $$ is = url.openStream()-->Line_59 $$ if (is != null) [ FD ]
Line_10 $$ InputStream is = null-->Line_61 $$ is.close()[ FD ]
Line_14 $$ is = new WebFileInputStream(url)-->Line_61 $$ is.close()[ FD ]
Line_16 $$ is = url.openStream()-->Line_61 $$ is.close()[ FD ]
Line_9 $$ OutputStream out = null-->Line_66 $$ if (out != null) [ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_66 $$ if (out != null) [ FD ]
Line_9 $$ OutputStream out = null-->Line_68 $$ out.close()[ FD ]
Line_12 $$ out = new FileOutputStream(dest)-->Line_68 $$ out.close()[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_22 $$ out.write(buf, 0, len)[ FD ]
Line_21 $$ while ((len = is.read(buf)) > 0) -->Line_23 $$ md.update(buf, 0, len)[ FD ]
