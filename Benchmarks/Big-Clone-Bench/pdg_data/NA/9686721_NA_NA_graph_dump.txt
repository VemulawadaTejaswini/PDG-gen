Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception [ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_3 $$ URL configUrl = CompositePageUtil.class.getResource("/cuttleConfigurationV2.xml")[ CD ]
Line_3 $$ URL configUrl = CompositePageUtil.class.getResource("/cuttleConfigurationV2.xml")-->Line_3 $$ URL configUrl = CompositePageUtil.class.getResource("/cuttleConfigurationV2.xml")[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_4 $$ if (configUrl == null)[ CD ]
Line_3 $$ URL configUrl = CompositePageUtil.class.getResource("/cuttleConfigurationV2.xml")-->Line_4 $$ if (configUrl == null)[ FD ]
Line_4 $$ if (configUrl == null)-->Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")[ CD ]
Line_3 $$ URL configUrl = CompositePageUtil.class.getResource("/cuttleConfigurationV2.xml")-->Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")[ FD ]
Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")-->Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")[ FD ]
Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")-->Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_5 $$ URL dtdUrl = CompositePageUtil.class.getResource("/dtd/cuttleConfiguration.dtd")[ CD ]
Line_5 $$ URL dtdUrl = CompositePageUtil.class.getResource("/dtd/cuttleConfiguration.dtd")-->Line_5 $$ URL dtdUrl = CompositePageUtil.class.getResource("/dtd/cuttleConfiguration.dtd")[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_6 $$ if (dtdUrl == null)[ CD ]
Line_5 $$ URL dtdUrl = CompositePageUtil.class.getResource("/dtd/cuttleConfiguration.dtd")-->Line_6 $$ if (dtdUrl == null)[ FD ]
Line_6 $$ if (dtdUrl == null)-->Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")[ CD ]
Line_5 $$ URL dtdUrl = CompositePageUtil.class.getResource("/dtd/cuttleConfiguration.dtd")-->Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")[ FD ]
Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")-->Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")[ FD ]
Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")-->Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)[ CD ]
Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)-->Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)[ CD ]
Line_3 $$ URL configUrl = CompositePageUtil.class.getResource("/cuttleConfigurationV2.xml")-->Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)[ FD ]
Line_4 $$ configUrl = CompositePageUtil.class.getClassLoader().getResource("/cuttleConfigurationV2.xml")-->Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_8 $$ digester.setValidating(false)[ CD ]
Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)-->Line_8 $$ digester.setValidating(false)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_9 $$ digester.register("-//Cuttle MVC Framework//DTD Cuttle Configuration 1.0//EN", dtdUrl.toString())[ CD ]
Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)-->Line_9 $$ digester.register("-//Cuttle MVC Framework//DTD Cuttle Configuration 1.0//EN", dtdUrl.toString())[ FD ]
Line_5 $$ URL dtdUrl = CompositePageUtil.class.getResource("/dtd/cuttleConfiguration.dtd")-->Line_9 $$ digester.register("-//Cuttle MVC Framework//DTD Cuttle Configuration 1.0//EN", dtdUrl.toString())[ FD ]
Line_6 $$ dtdUrl = CompositePageUtil.class.getClassLoader().getResource("/dtd/cuttleConfiguration.dtd")-->Line_9 $$ digester.register("-//Cuttle MVC Framework//DTD Cuttle Configuration 1.0//EN", dtdUrl.toString())[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_10 $$ XMLCuttleConfiguration cuttleConfiguration = (XMLCuttleConfiguration) digester.parse(is)[ CD ]
Line_7 $$ Digester digester = DigesterLoader.createDigester(configUrl)-->Line_10 $$ XMLCuttleConfiguration cuttleConfiguration = (XMLCuttleConfiguration) digester.parse(is)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_10 $$ XMLCuttleConfiguration cuttleConfiguration = (XMLCuttleConfiguration) digester.parse(is)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_11 $$ ConfigureDigester.setXmlCuttleConfiguration(cuttleConfiguration)[ CD ]
Line_10 $$ XMLCuttleConfiguration cuttleConfiguration = (XMLCuttleConfiguration) digester.parse(is)-->Line_11 $$ ConfigureDigester.setXmlCuttleConfiguration(cuttleConfiguration)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_12 $$ if (configFileList != null) [ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_12 $$ if (configFileList != null) [ FD ]
Line_12 $$ if (configFileList != null) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ CD ]
Line_12 $$ if (configFileList != null) -->Line_12 $$ if (configFileList != null) [ CD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ CD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ CD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_14 $$ String file = (String) configFileList.get(i)[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_14 $$ String file = (String) configFileList.get(i)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_14 $$ String file = (String) configFileList.get(i)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)[ CD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)[ CD ]
Line_14 $$ String file = (String) configFileList.get(i)-->Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_16 $$ if (url2 == null)[ CD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_16 $$ if (url2 == null)[ FD ]
Line_16 $$ if (url2 == null)-->Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)[ CD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)[ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)[ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)[ CD ]
Line_14 $$ String file = (String) configFileList.get(i)-->Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_17 $$ if (url2 == null) [ CD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_17 $$ if (url2 == null) [ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_17 $$ if (url2 == null) [ FD ]
Line_17 $$ if (url2 == null) -->Line_18 $$ logger.error("file path:" + file + " not found!")[ CD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ CD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_21 $$ rootList.add(root)[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_21 $$ rootList.add(root)[ FD ]
Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())-->Line_21 $$ rootList.add(root)[ FD ]
Line_12 $$ if (configFileList != null) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ CD ]
Line_12 $$ if (configFileList != null) -->Line_12 $$ if (configFileList != null) [ CD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_10 $$ XMLCuttleConfiguration cuttleConfiguration = (XMLCuttleConfiguration) digester.parse(is)-->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ CD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ CD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)[ CD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)[ FD ]
Line_10 $$ XMLCuttleConfiguration cuttleConfiguration = (XMLCuttleConfiguration) digester.parse(is)-->Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)[ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_26 $$ URL url2 = context.getResource(config.getResource())[ CD ]
Line_26 $$ URL url2 = context.getResource(config.getResource())-->Line_26 $$ URL url2 = context.getResource(config.getResource())[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_26 $$ URL url2 = context.getResource(config.getResource())[ FD ]
Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)-->Line_26 $$ URL url2 = context.getResource(config.getResource())[ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_27 $$ if (url2 == null) [ CD ]
Line_26 $$ URL url2 = context.getResource(config.getResource())-->Line_27 $$ if (url2 == null) [ FD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_27 $$ if (url2 == null) [ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_27 $$ if (url2 == null) [ FD ]
Line_27 $$ if (url2 == null) -->Line_28 $$ logger.error("file path:" + config.getResource() + " not found!")[ CD ]
Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)-->Line_28 $$ logger.error("file path:" + config.getResource() + " not found!")[ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ CD ]
Line_26 $$ URL url2 = context.getResource(config.getResource())-->Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_31 $$ rootList.add(root)[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_31 $$ rootList.add(root)[ FD ]
Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())-->Line_31 $$ rootList.add(root)[ FD ]
Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())-->Line_31 $$ rootList.add(root)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_34 $$ compositeXMLRoot(rootList)[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_34 $$ compositeXMLRoot(rootList)[ FD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_35 $$ XMLCuttleConfiguration config = ConfigureDigester.getXmlCuttleConfiguration()[ CD ]
Line_35 $$ XMLCuttleConfiguration config = ConfigureDigester.getXmlCuttleConfiguration()-->Line_35 $$ XMLCuttleConfiguration config = ConfigureDigester.getXmlCuttleConfiguration()[ CD ]
Line_2 $$ public static void parseConfigV2(List rootList, InputStream is, javax.servlet.ServletContext context, List configFileList) throws Exception -->Line_36 $$ if (config != null) [ CD ]
Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)-->Line_36 $$ if (config != null) [ FD ]
Line_35 $$ XMLCuttleConfiguration config = ConfigureDigester.getXmlCuttleConfiguration()-->Line_36 $$ if (config != null) [ FD ]
Line_36 $$ if (config != null) -->Line_37 $$ List processUnits = config.getProcessUnits()[ CD ]
Line_37 $$ List processUnits = config.getProcessUnits()-->Line_37 $$ List processUnits = config.getProcessUnits()[ CD ]
Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)-->Line_37 $$ List processUnits = config.getProcessUnits()[ FD ]
Line_35 $$ XMLCuttleConfiguration config = ConfigureDigester.getXmlCuttleConfiguration()-->Line_37 $$ List processUnits = config.getProcessUnits()[ FD ]
Line_36 $$ if (config != null) -->Line_38 $$ if (processUnits != null) [ CD ]
Line_37 $$ List processUnits = config.getProcessUnits()-->Line_38 $$ if (processUnits != null) [ FD ]
Line_38 $$ if (processUnits != null) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ CD ]
Line_38 $$ if (processUnits != null) -->Line_38 $$ if (processUnits != null) [ CD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_37 $$ List processUnits = config.getProcessUnits()-->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ CD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ CD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)[ CD ]
Line_37 $$ List processUnits = config.getProcessUnits()-->Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)[ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)[ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)[ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) [ CD ]
Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)-->Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) [ FD ]
Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)-->Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) [ FD ]
Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) -->Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())[ CD ]
Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())-->Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())[ CD ]
Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)-->Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())[ FD ]
Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) -->Line_43 $$ Object business = businessClass.newInstance()[ CD ]
Line_43 $$ Object business = businessClass.newInstance()-->Line_43 $$ Object business = businessClass.newInstance()[ CD ]
Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())-->Line_43 $$ Object business = businessClass.newInstance()[ FD ]
Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) -->Line_44 $$ ConfigureDigester.addObjectToPool(business)[ CD ]
Line_43 $$ Object business = businessClass.newInstance()-->Line_44 $$ ConfigureDigester.addObjectToPool(business)[ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_13 $$ for (int i = 0; i < configFileList.size(); i++) [ FD ]
Line_13 $$ for (int i = 0; i < configFileList.size(); i++) -->Line_14 $$ String file = (String) configFileList.get(i)[ FD ]
Line_14 $$ String file = (String) configFileList.get(i)-->Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)[ FD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_16 $$ if (url2 == null)[ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_16 $$ if (url2 == null)[ FD ]
Line_14 $$ String file = (String) configFileList.get(i)-->Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)[ FD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_17 $$ if (url2 == null) [ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_17 $$ if (url2 == null) [ FD ]
Line_15 $$ URL url2 = CompositePageUtil.class.getResource(file)-->Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_16 $$ url2 = CompositePageUtil.class.getClassLoader().getResource(file)-->Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_20 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())-->Line_21 $$ rootList.add(root)[ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < cuttleConfiguration.getActionConfigs().size(); i++) -->Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)[ FD ]
Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)-->Line_26 $$ URL url2 = context.getResource(config.getResource())[ FD ]
Line_26 $$ URL url2 = context.getResource(config.getResource())-->Line_27 $$ if (url2 == null) [ FD ]
Line_25 $$ XMLActionConfig config = (XMLActionConfig) cuttleConfiguration.getActionConfigs().get(i)-->Line_28 $$ logger.error("file path:" + config.getResource() + " not found!")[ FD ]
Line_26 $$ URL url2 = context.getResource(config.getResource())-->Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())[ FD ]
Line_30 $$ XMLRoot root = (XMLRoot) ConfigureDigester.parseXMLToObject(url2.openStream())-->Line_31 $$ rootList.add(root)[ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_39 $$ for (int i = 0; i < processUnits.size(); i++) [ FD ]
Line_39 $$ for (int i = 0; i < processUnits.size(); i++) -->Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)[ FD ]
Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)-->Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) [ FD ]
Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)-->Line_41 $$ if (processUnit.getSpringMapping() == null || processUnit.getSpringMapping().equals("")) [ FD ]
Line_40 $$ XMLProcessUnit processUnit = (XMLProcessUnit) processUnits.get(i)-->Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())[ FD ]
Line_42 $$ Class businessClass = Class.forName(processUnit.getClazz())-->Line_43 $$ Object business = businessClass.newInstance()[ FD ]
Line_43 $$ Object business = businessClass.newInstance()-->Line_44 $$ ConfigureDigester.addObjectToPool(business)[ FD ]
