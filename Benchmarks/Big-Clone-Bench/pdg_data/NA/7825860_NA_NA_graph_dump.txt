Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void testAutoIncrement() [ CD ]
Line_2 $$ public static void testAutoIncrement() -->Line_3 $$ final int count = 3[ CD ]
Line_2 $$ public static void testAutoIncrement() -->Line_4 $$ final Object lock = new Object()[ CD ]
Line_2 $$ public static void testAutoIncrement() -->Line_5 $$ for (int i = 0; i < count; i++) [ CD ]
Line_2 $$ public static void testAutoIncrement() -->Line_2 $$ public static void testAutoIncrement() [ CD ]
Line_3 $$ final int count = 3-->Line_5 $$ for (int i = 0; i < count; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_5 $$ for (int i = 0; i < count; i++) [ CD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_5 $$ for (int i = 0; i < count; i++) [ CD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_5 $$ for (int i = 0; i < count; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_6 $$ new Thread(new Runnable() [ CD ]
Line_6 $$ new Thread(new Runnable() -->Line_8 $$ while (true) [ CD ]
Line_6 $$ new Thread(new Runnable() -->Line_6 $$ new Thread(new Runnable() [ CD ]
Line_8 $$ while (true) -->Line_9 $$ StringBuilder buffer = new StringBuilder(128)[ CD ]
Line_8 $$ while (true) -->Line_10 $$ buffer.append("insert into DOMAIN (                         ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_10 $$ buffer.append("insert into DOMAIN (                         ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_11 $$ buffer.append("    DOMAIN_ID, TOP_DOMAIN_ID, DOMAIN_HREF,   ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_11 $$ buffer.append("    DOMAIN_ID, TOP_DOMAIN_ID, DOMAIN_HREF,   ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_12 $$ buffer.append("    DOMAIN_RANK, DOMAIN_TYPE, DOMAIN_STATUS, ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_12 $$ buffer.append("    DOMAIN_RANK, DOMAIN_TYPE, DOMAIN_STATUS, ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_13 $$ buffer.append("    DOMAIN_ICO_CREATED, DOMAIN_CDATE         ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_13 $$ buffer.append("    DOMAIN_ICO_CREATED, DOMAIN_CDATE         ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_14 $$ buffer.append(") values (                   ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_14 $$ buffer.append(") values (                   ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_15 $$ buffer.append("    null ,null, ?,").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_15 $$ buffer.append("    null ,null, ?,").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_16 $$ buffer.append("    1, 2, 1,                 ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_16 $$ buffer.append("    1, 2, 1,                 ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_17 $$ buffer.append("    0, now()                 ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_17 $$ buffer.append("    0, now()                 ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_18 $$ buffer.append(")                            ").append(LS)[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_18 $$ buffer.append(")                            ").append(LS)[ FD ]
Line_8 $$ while (true) -->Line_19 $$ String sqlInsert = buffer.toString()[ CD ]
Line_19 $$ String sqlInsert = buffer.toString()-->Line_19 $$ String sqlInsert = buffer.toString()[ CD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_19 $$ String sqlInsert = buffer.toString()[ FD ]
Line_8 $$ while (true) -->Line_20 $$ boolean isAutoCommit = false[ CD ]
Line_8 $$ while (true) -->Line_21 $$ int i = 0[ CD ]
Line_8 $$ while (true) -->Line_22 $$ Connection conn = null[ CD ]
Line_8 $$ while (true) -->Line_23 $$ PreparedStatement pstmt = null[ CD ]
Line_8 $$ while (true) -->Line_24 $$ ResultSet rs = null[ CD ]
Line_22 $$ Connection conn = null-->Line_26 $$ conn = ConnHelper.getConnection()[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_26 $$ conn = ConnHelper.getConnection()[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_26 $$ conn = ConnHelper.getConnection()[ CD ]
Line_22 $$ Connection conn = null-->Line_27 $$ conn.setAutoCommit(isAutoCommit)[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_27 $$ conn.setAutoCommit(isAutoCommit)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_27 $$ conn.setAutoCommit(isAutoCommit)[ FD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ CD ]
Line_22 $$ Connection conn = null-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_19 $$ String sqlInsert = buffer.toString()-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_21 $$ int i = 0-->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ CD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_21 $$ int i = 0-->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ CD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_21 $$ int i = 0-->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_30 $$ String lock = "" + ((int) (Math.random() * 100000000)) % 100[ CD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_31 $$ pstmt.setString(1, lock)[ CD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_31 $$ pstmt.setString(1, lock)[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_31 $$ pstmt.setString(1, lock)[ FD ]
Line_30 $$ String lock = "" + ((int) (Math.random() * 100000000)) % 100-->Line_31 $$ pstmt.setString(1, lock)[ FD ]
Line_4 $$ final Object lock = new Object()-->Line_31 $$ pstmt.setString(1, lock)[ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_32 $$ pstmt.executeUpdate()[ CD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_32 $$ pstmt.executeUpdate()[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_32 $$ pstmt.executeUpdate()[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_34 $$ if (!isAutoCommit)[ FD ]
Line_34 $$ if (!isAutoCommit)-->Line_34 $$ if (!isAutoCommit)[ CD ]
Line_20 $$ boolean isAutoCommit = false-->Line_34 $$ if (!isAutoCommit)[ FD ]
Line_34 $$ if (!isAutoCommit)-->Line_34 $$ conn.commit()[ CD ]
Line_22 $$ Connection conn = null-->Line_34 $$ conn.commit()[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_34 $$ conn.commit()[ FD ]
Line_24 $$ ResultSet rs = null-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ CD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ FD ]
Line_24 $$ ResultSet rs = null-->Line_36 $$ if (rs.next()) [ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_36 $$ if (rs.next()) [ FD ]
Line_36 $$ if (rs.next()) -->Line_36 $$ if (rs.next()) [ CD ]
Line_24 $$ ResultSet rs = null-->Line_36 $$ if (rs.next()) [ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_36 $$ if (rs.next()) [ FD ]
Line_24 $$ ResultSet rs = null-->Line_37 $$ String str = System.currentTimeMillis() + " " + rs.getLong(1)[ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_37 $$ String str = System.currentTimeMillis() + " " + rs.getLong(1)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_41 $$ if (!isAutoCommit)[ FD ]
Line_41 $$ if (!isAutoCommit)-->Line_41 $$ if (!isAutoCommit)[ CD ]
Line_20 $$ boolean isAutoCommit = false-->Line_41 $$ if (!isAutoCommit)[ FD ]
Line_41 $$ if (!isAutoCommit)-->Line_41 $$ conn.rollback()[ CD ]
Line_22 $$ Connection conn = null-->Line_41 $$ conn.rollback()[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_41 $$ conn.rollback()[ FD ]
Line_22 $$ Connection conn = null-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_24 $$ ResultSet rs = null-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_5 $$ for (int i = 0; i < count; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_5 $$ for (int i = 0; i < count; i++) [ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_5 $$ for (int i = 0; i < count; i++) [ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_10 $$ buffer.append("insert into DOMAIN (                         ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_11 $$ buffer.append("    DOMAIN_ID, TOP_DOMAIN_ID, DOMAIN_HREF,   ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_12 $$ buffer.append("    DOMAIN_RANK, DOMAIN_TYPE, DOMAIN_STATUS, ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_13 $$ buffer.append("    DOMAIN_ICO_CREATED, DOMAIN_CDATE         ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_14 $$ buffer.append(") values (                   ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_15 $$ buffer.append("    null ,null, ?,").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_16 $$ buffer.append("    1, 2, 1,                 ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_17 $$ buffer.append("    0, now()                 ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_18 $$ buffer.append(")                            ").append(LS)[ FD ]
Line_9 $$ StringBuilder buffer = new StringBuilder(128)-->Line_19 $$ String sqlInsert = buffer.toString()[ FD ]
Line_22 $$ Connection conn = null-->Line_27 $$ conn.setAutoCommit(isAutoCommit)[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_27 $$ conn.setAutoCommit(isAutoCommit)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_27 $$ conn.setAutoCommit(isAutoCommit)[ FD ]
Line_22 $$ Connection conn = null-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_19 $$ String sqlInsert = buffer.toString()-->Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_34 $$ if (!isAutoCommit)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_34 $$ if (!isAutoCommit)[ FD ]
Line_22 $$ Connection conn = null-->Line_34 $$ conn.commit()[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_34 $$ conn.commit()[ FD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")[ FD ]
Line_24 $$ ResultSet rs = null-->Line_36 $$ if (rs.next()) [ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_36 $$ if (rs.next()) [ FD ]
Line_24 $$ ResultSet rs = null-->Line_36 $$ if (rs.next()) [ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_36 $$ if (rs.next()) [ FD ]
Line_24 $$ ResultSet rs = null-->Line_37 $$ String str = System.currentTimeMillis() + " " + rs.getLong(1)[ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_37 $$ String str = System.currentTimeMillis() + " " + rs.getLong(1)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_41 $$ if (!isAutoCommit)[ FD ]
Line_20 $$ boolean isAutoCommit = false-->Line_41 $$ if (!isAutoCommit)[ FD ]
Line_22 $$ Connection conn = null-->Line_41 $$ conn.rollback()[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_41 $$ conn.rollback()[ FD ]
Line_22 $$ Connection conn = null-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_26 $$ conn = ConnHelper.getConnection()-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_23 $$ PreparedStatement pstmt = null-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_28 $$ pstmt = conn.prepareStatement(sqlInsert)-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_24 $$ ResultSet rs = null-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_35 $$ rs = pstmt.executeQuery("select max(DOMAIN_ID) from DOMAIN")-->Line_48 $$ ConnHelper.close(conn, pstmt, rs)[ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_29 $$ for (i = 0; i < 10; i++) -->Line_29 $$ for (i = 0; i < 10; i++) [ FD ]
Line_30 $$ String lock = "" + ((int) (Math.random() * 100000000)) % 100-->Line_31 $$ pstmt.setString(1, lock)[ FD ]
