Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private InputStream createInputStream(String url) throws MalformedURLException, IOException [ CD ]
Line_2 $$ private InputStream createInputStream(String url) throws MalformedURLException, IOException -->Line_3 $$ if (url.startsWith("classpath://")) [ CD ]
Line_2 $$ private InputStream createInputStream(String url) throws MalformedURLException, IOException -->Line_3 $$ if (url.startsWith("classpath://")) [ FD ]
Line_3 $$ if (url.startsWith("classpath://")) -->Line_3 $$ if (url.startsWith("classpath://")) [ CD ]
Line_2 $$ private InputStream createInputStream(String url) throws MalformedURLException, IOException -->Line_3 $$ if (url.startsWith("classpath://")) [ FD ]
Line_3 $$ if (url.startsWith("classpath://")) -->Line_4 $$ InputStream is = XMLResource.class.getResourceAsStream(url.substring(12))[ CD ]
Line_4 $$ InputStream is = XMLResource.class.getResourceAsStream(url.substring(12))-->Line_4 $$ InputStream is = XMLResource.class.getResourceAsStream(url.substring(12))[ CD ]
Line_2 $$ private InputStream createInputStream(String url) throws MalformedURLException, IOException -->Line_4 $$ InputStream is = XMLResource.class.getResourceAsStream(url.substring(12))[ FD ]
Line_3 $$ if (url.startsWith("classpath://")) -->Line_5 $$ if (is == null)[ CD ]
Line_4 $$ InputStream is = XMLResource.class.getResourceAsStream(url.substring(12))-->Line_5 $$ if (is == null)[ FD ]
Line_3 $$ if (url.startsWith("classpath://")) -->Line_6 $$ return is[ CD ]
Line_3 $$ if (url.startsWith("classpath://")) -->Line_8 $$ return new URL(url).openStream()[ CD ]
Line_8 $$ return new URL(url).openStream()-->Line_8 $$ return new URL(url).openStream()[ CD ]
