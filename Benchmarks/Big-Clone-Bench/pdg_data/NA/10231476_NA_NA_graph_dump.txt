Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected Document SendRequest(Document request) throws WsmanException [ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_3 $$ HttpURLConnection conn = null[ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_4 $$ Document response = null[ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_5 $$ stampRequest(request)[ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_5 $$ stampRequest(request)[ FD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_6 $$ boolean printDebug = System.getProperty("intel.management.wsman.debug", "false").equals("true")[ CD ]
Line_6 $$ boolean printDebug = System.getProperty("intel.management.wsman.debug", "false").equals("true")-->Line_6 $$ boolean printDebug = System.getProperty("intel.management.wsman.debug", "false").equals("true")[ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_7 $$ int retry = 2[ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_8 $$ while (retry > 0) [ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_2 $$ protected Document SendRequest(Document request) throws WsmanException [ CD ]
Line_7 $$ int retry = 2-->Line_8 $$ while (retry > 0) [ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_10 $$ if (conn != null) [ FD ]
Line_10 $$ if (conn != null) -->Line_11 $$ conn.disconnect()[ CD ]
Line_3 $$ HttpURLConnection conn = null-->Line_11 $$ conn.disconnect()[ FD ]
Line_14 $$ Proxy proxy = (Proxy) properties.get("HttpProxy")-->Line_15 $$ if (proxy != null)[ FD ]
Line_15 $$ if (proxy != null)-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_14 $$ Proxy proxy = (Proxy) properties.get("HttpProxy")-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_15 $$ if (proxy != null)-->Line_15 $$ conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_15 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_15 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_15 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_15 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_16 $$ if (conn instanceof HttpsURLConnection) [ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ if (conn instanceof HttpsURLConnection) [ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_16 $$ if (conn instanceof HttpsURLConnection) [ FD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_17 $$ HttpsURLConnection sslConn = (HttpsURLConnection) conn[ CD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")[ CD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_19 $$ X509TrustManager tm = (X509TrustManager) properties.get("X509TrustManager")[ CD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_20 $$ HostnameVerifier verifier = (HostnameVerifier) properties.get("HostnameVerifier")[ CD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_21 $$ X509KeyManager km = (X509KeyManager) properties.get("X509KeyManager")[ CD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_22 $$ if (factory == null && (km != null || tm != null)) [ CD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_23 $$ X509KeyManager[] keys = null[ CD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_24 $$ X509TrustManager[] trusts = null[ CD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")[ CD ]
Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")[ CD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_26 $$ if (km != null) [ CD ]
Line_21 $$ X509KeyManager km = (X509KeyManager) properties.get("X509KeyManager")-->Line_26 $$ if (km != null) [ FD ]
Line_26 $$ if (km != null) -->Line_27 $$ keys = new X509KeyManager[1][ CD ]
Line_23 $$ X509KeyManager[] keys = null-->Line_27 $$ keys = new X509KeyManager[1][ FD ]
Line_27 $$ keys = new X509KeyManager[1]-->Line_27 $$ keys = new X509KeyManager[1][ FD ]
Line_26 $$ if (km != null) -->Line_28 $$ keys[0] = km[ CD ]
Line_21 $$ X509KeyManager km = (X509KeyManager) properties.get("X509KeyManager")-->Line_28 $$ keys[0] = km[ FD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_30 $$ if (tm != null) [ CD ]
Line_19 $$ X509TrustManager tm = (X509TrustManager) properties.get("X509TrustManager")-->Line_30 $$ if (tm != null) [ FD ]
Line_30 $$ if (tm != null) -->Line_31 $$ trusts = new X509TrustManager[1][ CD ]
Line_24 $$ X509TrustManager[] trusts = null-->Line_31 $$ trusts = new X509TrustManager[1][ FD ]
Line_31 $$ trusts = new X509TrustManager[1]-->Line_31 $$ trusts = new X509TrustManager[1][ FD ]
Line_30 $$ if (tm != null) -->Line_32 $$ trusts[0] = tm[ CD ]
Line_19 $$ X509TrustManager tm = (X509TrustManager) properties.get("X509TrustManager")-->Line_32 $$ trusts[0] = tm[ FD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_34 $$ sc.init(keys, trusts, null)[ CD ]
Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_23 $$ X509KeyManager[] keys = null-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_27 $$ keys = new X509KeyManager[1]-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_24 $$ X509TrustManager[] trusts = null-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_31 $$ trusts = new X509TrustManager[1]-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_35 $$ factory = sc.getSocketFactory()[ CD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_35 $$ factory = sc.getSocketFactory()[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_35 $$ factory = sc.getSocketFactory()[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_35 $$ factory = sc.getSocketFactory()[ CD ]
Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_35 $$ factory = sc.getSocketFactory()[ FD ]
Line_22 $$ if (factory == null && (km != null || tm != null)) -->Line_36 $$ properties.put("SSLSocketFactory", factory)[ CD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_36 $$ properties.put("SSLSocketFactory", factory)[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_36 $$ properties.put("SSLSocketFactory", factory)[ FD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_38 $$ if (factory != null)[ CD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_38 $$ if (factory != null)[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_38 $$ if (factory != null)[ FD ]
Line_38 $$ if (factory != null)-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ CD ]
Line_17 $$ HttpsURLConnection sslConn = (HttpsURLConnection) conn-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ FD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ FD ]
Line_16 $$ if (conn instanceof HttpsURLConnection) -->Line_39 $$ if (verifier != null)[ CD ]
Line_20 $$ HostnameVerifier verifier = (HostnameVerifier) properties.get("HostnameVerifier")-->Line_39 $$ if (verifier != null)[ FD ]
Line_39 $$ if (verifier != null)-->Line_39 $$ sslConn.setHostnameVerifier(verifier)[ CD ]
Line_17 $$ HttpsURLConnection sslConn = (HttpsURLConnection) conn-->Line_39 $$ sslConn.setHostnameVerifier(verifier)[ FD ]
Line_20 $$ HostnameVerifier verifier = (HostnameVerifier) properties.get("HostnameVerifier")-->Line_39 $$ sslConn.setHostnameVerifier(verifier)[ FD ]
Line_41 $$ Object auth = properties.get("AuthScheme")-->Line_41 $$ Object auth = properties.get("AuthScheme")[ CD ]
Line_41 $$ Object auth = properties.get("AuthScheme")-->Line_42 $$ if (auth != null && auth.equals("kerberos")) [ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_43 $$ Oid spnegoMecOid = new Oid("1.3.6.1.5.5.2")[ CD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()[ CD ]
Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()-->Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()[ CD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_45 $$ String spnName = "HTTP/" + url.getHost()[ CD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_45 $$ String spnName = "HTTP/" + url.getHost()[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_46 $$ int spnPort = url.getPort()[ CD ]
Line_46 $$ int spnPort = url.getPort()-->Line_46 $$ int spnPort = url.getPort()[ CD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_46 $$ int spnPort = url.getPort()[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_47 $$ if (spnPort == 16992 || spnPort == 16993 || spnPort == 623 || spnPort == 624) [ CD ]
Line_47 $$ if (spnPort == 16992 || spnPort == 16993 || spnPort == 623 || spnPort == 624) -->Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)[ CD ]
Line_45 $$ String spnName = "HTTP/" + url.getHost()-->Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)[ FD ]
Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)-->Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)[ FD ]
Line_46 $$ int spnPort = url.getPort()-->Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ CD ]
Line_50 $$ GSSName gssName = manager.createName(spnName, null)-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ CD ]
Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ FD ]
Line_45 $$ String spnName = "HTTP/" + url.getHost()-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ FD ]
Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ CD ]
Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ CD ]
Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ FD ]
Line_50 $$ GSSName gssName = manager.createName(spnName, null)-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ FD ]
Line_43 $$ Oid spnegoMecOid = new Oid("1.3.6.1.5.5.2")-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_52 $$ context.requestCredDeleg(true)[ CD ]
Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)-->Line_52 $$ context.requestCredDeleg(true)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_53 $$ byte[] token = new byte[0][ CD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ CD ]
Line_53 $$ byte[] token = new byte[0]-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_54 $$ token = context.initSecContext(token, 0, token.length)-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_54 $$ token = context.initSecContext(token, 0, token.length)-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ CD ]
Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_53 $$ byte[] token = new byte[0]-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_54 $$ token = context.initSecContext(token, 0, token.length)-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)[ CD ]
Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)-->Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)[ CD ]
Line_53 $$ byte[] token = new byte[0]-->Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)[ FD ]
Line_54 $$ token = context.initSecContext(token, 0, token.length)-->Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ FD ]
Line_42 $$ if (auth != null && auth.equals("kerberos")) -->Line_57 $$ if (auth != null && auth.equals("basic")) [ CD ]
Line_41 $$ Object auth = properties.get("AuthScheme")-->Line_57 $$ if (auth != null && auth.equals("basic")) [ FD ]
Line_57 $$ if (auth != null && auth.equals("basic")) -->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ CD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ FD ]
Line_57 $$ if (auth != null && auth.equals("basic")) -->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_62 $$ conn.setRequestMethod("POST")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_62 $$ conn.setRequestMethod("POST")[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_62 $$ conn.setRequestMethod("POST")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_63 $$ conn.addRequestProperty("Content-Type", "application/soap+xml;charset=UTF-8")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_63 $$ conn.addRequestProperty("Content-Type", "application/soap+xml;charset=UTF-8")[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_63 $$ conn.addRequestProperty("Content-Type", "application/soap+xml;charset=UTF-8")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_64 $$ conn.setDoOutput(true)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_64 $$ conn.setDoOutput(true)[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_64 $$ conn.setDoOutput(true)[ FD ]
Line_65 $$ if (printDebug)-->Line_65 $$ System.out.println(getXmlLoader().formatDocument(request))[ CD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_65 $$ System.out.println(getXmlLoader().formatDocument(request))[ FD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_67 $$ InputStream s = conn.getInputStream()-->Line_67 $$ InputStream s = conn.getInputStream()[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_67 $$ InputStream s = conn.getInputStream()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_67 $$ InputStream s = conn.getInputStream()[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_67 $$ InputStream s = conn.getInputStream()[ FD ]
Line_68 $$ response = getXmlLoader().loadDocument(s)-->Line_68 $$ response = getXmlLoader().loadDocument(s)[ FD ]
Line_4 $$ Document response = null-->Line_68 $$ response = getXmlLoader().loadDocument(s)[ FD ]
Line_68 $$ response = getXmlLoader().loadDocument(s)-->Line_68 $$ response = getXmlLoader().loadDocument(s)[ CD ]
Line_67 $$ InputStream s = conn.getInputStream()-->Line_68 $$ response = getXmlLoader().loadDocument(s)[ FD ]
Line_69 $$ if (printDebug) -->Line_70 $$ System.out.println(getXmlLoader().formatDocument(response))[ CD ]
Line_68 $$ response = getXmlLoader().loadDocument(s)-->Line_70 $$ System.out.println(getXmlLoader().formatDocument(response))[ FD ]
Line_4 $$ Document response = null-->Line_70 $$ System.out.println(getXmlLoader().formatDocument(response))[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_72 $$ conn.getResponseCode()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_72 $$ conn.getResponseCode()[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_72 $$ conn.getResponseCode()[ FD ]
Line_73 $$ retry = 0-->Line_73 $$ retry = 0[ FD ]
Line_7 $$ int retry = 2-->Line_73 $$ retry = 0[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_74 $$ conn.disconnect()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_74 $$ conn.disconnect()[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_74 $$ conn.disconnect()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_75 $$ conn = null[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_75 $$ conn = null[ FD ]
Line_75 $$ conn = null-->Line_75 $$ conn = null[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_75 $$ conn = null[ FD ]
Line_73 $$ retry = 0-->Line_77 $$ retry--[ FD ]
Line_7 $$ int retry = 2-->Line_77 $$ retry--[ FD ]
Line_78 $$ int max = conn.getHeaderFields().size()-->Line_78 $$ int max = conn.getHeaderFields().size()[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_75 $$ conn = null-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_78 $$ int max = conn.getHeaderFields().size()-->Line_79 $$ for (int i = 0; i < max; i++) [ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_79 $$ for (int i = 0; i < max; i++) [ CD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_79 $$ for (int i = 0; i < max; i++) [ CD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_79 $$ for (int i = 0; i < max; i++) [ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_80 $$ String t = conn.getHeaderField(i)[ CD ]
Line_80 $$ String t = conn.getHeaderField(i)-->Line_80 $$ String t = conn.getHeaderField(i)[ CD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_80 $$ String t = conn.getHeaderField(i)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_80 $$ String t = conn.getHeaderField(i)[ FD ]
Line_75 $$ conn = null-->Line_80 $$ String t = conn.getHeaderField(i)[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_80 $$ String t = conn.getHeaderField(i)[ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_80 $$ String t = conn.getHeaderField(i)[ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_81 $$ t.toString()[ CD ]
Line_80 $$ String t = conn.getHeaderField(i)-->Line_81 $$ t.toString()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_75 $$ conn = null-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_75 $$ conn = null-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_75 $$ conn = null-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_3 $$ HttpURLConnection conn = null-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_86 $$ if (errObj != null && errObj instanceof Document) -->Line_87 $$ response = (Document) errObj[ CD ]
Line_68 $$ response = getXmlLoader().loadDocument(s)-->Line_87 $$ response = (Document) errObj[ FD ]
Line_87 $$ response = (Document) errObj-->Line_87 $$ response = (Document) errObj[ FD ]
Line_4 $$ Document response = null-->Line_87 $$ response = (Document) errObj[ FD ]
Line_86 $$ if (errObj != null && errObj instanceof Document) -->Line_88 $$ retry = 0[ CD ]
Line_73 $$ retry = 0-->Line_88 $$ retry = 0[ FD ]
Line_88 $$ retry = 0-->Line_88 $$ retry = 0[ FD ]
Line_7 $$ int retry = 2-->Line_88 $$ retry = 0[ FD ]
Line_86 $$ if (errObj != null && errObj instanceof Document) -->Line_90 $$ if (errObj != null)[ CD ]
Line_73 $$ retry = 0-->Line_91 $$ if (retry == 0)[ FD ]
Line_88 $$ retry = 0-->Line_91 $$ if (retry == 0)[ FD ]
Line_7 $$ int retry = 2-->Line_91 $$ if (retry == 0)[ FD ]
Line_73 $$ retry = 0-->Line_93 $$ retry = 0[ FD ]
Line_88 $$ retry = 0-->Line_93 $$ retry = 0[ FD ]
Line_93 $$ retry = 0-->Line_93 $$ retry = 0[ FD ]
Line_7 $$ int retry = 2-->Line_93 $$ retry = 0[ FD ]
Line_2 $$ protected Document SendRequest(Document request) throws WsmanException -->Line_97 $$ return response[ CD ]
Line_73 $$ retry = 0-->Line_8 $$ while (retry > 0) [ FD ]
Line_88 $$ retry = 0-->Line_8 $$ while (retry > 0) [ FD ]
Line_93 $$ retry = 0-->Line_8 $$ while (retry > 0) [ FD ]
Line_73 $$ retry = 0-->Line_8 $$ while (retry > 0) [ FD ]
Line_88 $$ retry = 0-->Line_8 $$ while (retry > 0) [ FD ]
Line_93 $$ retry = 0-->Line_8 $$ while (retry > 0) [ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_10 $$ if (conn != null) [ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ if (conn != null) [ FD ]
Line_75 $$ conn = null-->Line_10 $$ if (conn != null) [ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_11 $$ conn.disconnect()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.disconnect()[ FD ]
Line_75 $$ conn = null-->Line_11 $$ conn.disconnect()[ FD ]
Line_14 $$ Proxy proxy = (Proxy) properties.get("HttpProxy")-->Line_15 $$ if (proxy != null)[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_14 $$ Proxy proxy = (Proxy) properties.get("HttpProxy")-->Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_15 $$ conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_16 $$ if (conn instanceof HttpsURLConnection) [ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_16 $$ if (conn instanceof HttpsURLConnection) [ FD ]
Line_75 $$ conn = null-->Line_16 $$ if (conn instanceof HttpsURLConnection) [ FD ]
Line_21 $$ X509KeyManager km = (X509KeyManager) properties.get("X509KeyManager")-->Line_26 $$ if (km != null) [ FD ]
Line_21 $$ X509KeyManager km = (X509KeyManager) properties.get("X509KeyManager")-->Line_28 $$ keys[0] = km[ FD ]
Line_19 $$ X509TrustManager tm = (X509TrustManager) properties.get("X509TrustManager")-->Line_30 $$ if (tm != null) [ FD ]
Line_19 $$ X509TrustManager tm = (X509TrustManager) properties.get("X509TrustManager")-->Line_32 $$ trusts[0] = tm[ FD ]
Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_23 $$ X509KeyManager[] keys = null-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_27 $$ keys = new X509KeyManager[1]-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_24 $$ X509TrustManager[] trusts = null-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_31 $$ trusts = new X509TrustManager[1]-->Line_34 $$ sc.init(keys, trusts, null)[ FD ]
Line_25 $$ SSLContext sc = SSLContext.getInstance("SSL")-->Line_35 $$ factory = sc.getSocketFactory()[ FD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_36 $$ properties.put("SSLSocketFactory", factory)[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_36 $$ properties.put("SSLSocketFactory", factory)[ FD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_38 $$ if (factory != null)[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_38 $$ if (factory != null)[ FD ]
Line_17 $$ HttpsURLConnection sslConn = (HttpsURLConnection) conn-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ FD ]
Line_18 $$ SSLSocketFactory factory = (SSLSocketFactory) properties.get("SSLSocketFactory")-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ FD ]
Line_35 $$ factory = sc.getSocketFactory()-->Line_38 $$ sslConn.setSSLSocketFactory(factory)[ FD ]
Line_20 $$ HostnameVerifier verifier = (HostnameVerifier) properties.get("HostnameVerifier")-->Line_39 $$ if (verifier != null)[ FD ]
Line_17 $$ HttpsURLConnection sslConn = (HttpsURLConnection) conn-->Line_39 $$ sslConn.setHostnameVerifier(verifier)[ FD ]
Line_20 $$ HostnameVerifier verifier = (HostnameVerifier) properties.get("HostnameVerifier")-->Line_39 $$ sslConn.setHostnameVerifier(verifier)[ FD ]
Line_41 $$ Object auth = properties.get("AuthScheme")-->Line_42 $$ if (auth != null && auth.equals("kerberos")) [ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_45 $$ String spnName = "HTTP/" + url.getHost()[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_46 $$ int spnPort = url.getPort()[ FD ]
Line_46 $$ int spnPort = url.getPort()-->Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)[ FD ]
Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ FD ]
Line_45 $$ String spnName = "HTTP/" + url.getHost()-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ FD ]
Line_48 $$ spnName = spnName + ":" + Integer.toString(spnPort)-->Line_50 $$ GSSName gssName = manager.createName(spnName, null)[ FD ]
Line_44 $$ GSSManager manager = org.ietf.jgss.GSSManager.getInstance()-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ FD ]
Line_50 $$ GSSName gssName = manager.createName(spnName, null)-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ FD ]
Line_43 $$ Oid spnegoMecOid = new Oid("1.3.6.1.5.5.2")-->Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)[ FD ]
Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)-->Line_52 $$ context.requestCredDeleg(true)[ FD ]
Line_51 $$ GSSContext context = manager.createContext(gssName, spnegoMecOid, null, GSSCredential.DEFAULT_LIFETIME)-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_53 $$ byte[] token = new byte[0]-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_54 $$ token = context.initSecContext(token, 0, token.length)-->Line_54 $$ token = context.initSecContext(token, 0, token.length)[ FD ]
Line_53 $$ byte[] token = new byte[0]-->Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)[ FD ]
Line_54 $$ token = context.initSecContext(token, 0, token.length)-->Line_55 $$ String tokenStr = WsmanUtils.getBase64String(token)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ FD ]
Line_75 $$ conn = null-->Line_56 $$ conn.addRequestProperty("Authorization", "Negotiate " + tokenStr)[ FD ]
Line_41 $$ Object auth = properties.get("AuthScheme")-->Line_57 $$ if (auth != null && auth.equals("basic")) [ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ FD ]
Line_13 $$ URL url = new URL((String) properties.get("Address"))-->Line_58 $$ java.net.Authenticator.requestPasswordAuthentication(url.getHost(), null, url.getPort(), url.getProtocol(), "", "basic")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ FD ]
Line_75 $$ conn = null-->Line_60 $$ conn.addRequestProperty("Authorization", "Basic " + tokenStr)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_62 $$ conn.setRequestMethod("POST")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_62 $$ conn.setRequestMethod("POST")[ FD ]
Line_75 $$ conn = null-->Line_62 $$ conn.setRequestMethod("POST")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_63 $$ conn.addRequestProperty("Content-Type", "application/soap+xml;charset=UTF-8")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_63 $$ conn.addRequestProperty("Content-Type", "application/soap+xml;charset=UTF-8")[ FD ]
Line_75 $$ conn = null-->Line_63 $$ conn.addRequestProperty("Content-Type", "application/soap+xml;charset=UTF-8")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_64 $$ conn.setDoOutput(true)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_64 $$ conn.setDoOutput(true)[ FD ]
Line_75 $$ conn = null-->Line_64 $$ conn.setDoOutput(true)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_75 $$ conn = null-->Line_66 $$ getXmlLoader().saveDocument(request, conn.getOutputStream())[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_67 $$ InputStream s = conn.getInputStream()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_67 $$ InputStream s = conn.getInputStream()[ FD ]
Line_75 $$ conn = null-->Line_67 $$ InputStream s = conn.getInputStream()[ FD ]
Line_67 $$ InputStream s = conn.getInputStream()-->Line_68 $$ response = getXmlLoader().loadDocument(s)[ FD ]
Line_68 $$ response = getXmlLoader().loadDocument(s)-->Line_70 $$ System.out.println(getXmlLoader().formatDocument(response))[ FD ]
Line_87 $$ response = (Document) errObj-->Line_70 $$ System.out.println(getXmlLoader().formatDocument(response))[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_72 $$ conn.getResponseCode()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_72 $$ conn.getResponseCode()[ FD ]
Line_75 $$ conn = null-->Line_72 $$ conn.getResponseCode()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_74 $$ conn.disconnect()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_74 $$ conn.disconnect()[ FD ]
Line_75 $$ conn = null-->Line_74 $$ conn.disconnect()[ FD ]
Line_73 $$ retry = 0-->Line_77 $$ retry--[ FD ]
Line_88 $$ retry = 0-->Line_77 $$ retry--[ FD ]
Line_93 $$ retry = 0-->Line_77 $$ retry--[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_75 $$ conn = null-->Line_78 $$ int max = conn.getHeaderFields().size()[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_75 $$ conn = null-->Line_83 $$ conn.getRequestProperty("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_75 $$ conn = null-->Line_84 $$ conn.getHeaderField("Authorization")[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection(proxy)-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_15 $$ conn = (HttpURLConnection) url.openConnection()-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_75 $$ conn = null-->Line_85 $$ Object errObj = getResponse(conn)[ FD ]
Line_73 $$ retry = 0-->Line_91 $$ if (retry == 0)[ FD ]
Line_88 $$ retry = 0-->Line_91 $$ if (retry == 0)[ FD ]
Line_93 $$ retry = 0-->Line_91 $$ if (retry == 0)[ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_79 $$ for (int i = 0; i < max; i++) [ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_79 $$ for (int i = 0; i < max; i++) [ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_79 $$ for (int i = 0; i < max; i++) [ FD ]
Line_79 $$ for (int i = 0; i < max; i++) -->Line_80 $$ String t = conn.getHeaderField(i)[ FD ]
Line_80 $$ String t = conn.getHeaderField(i)-->Line_81 $$ t.toString()[ FD ]
