Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) [ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_3 $$ List<String> result = new ArrayList<String>()[ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_4 $$ String override = System.getProperty(ofClass.getName())[ CD ]
Line_4 $$ String override = System.getProperty(ofClass.getName())-->Line_4 $$ String override = System.getProperty(ofClass.getName())[ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_4 $$ String override = System.getProperty(ofClass.getName())[ FD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_5 $$ if (override != null) [ CD ]
Line_4 $$ String override = System.getProperty(ofClass.getName())-->Line_5 $$ if (override != null) [ FD ]
Line_5 $$ if (override != null) -->Line_6 $$ result.add(override)[ CD ]
Line_3 $$ List<String> result = new ArrayList<String>()-->Line_6 $$ result.add(override)[ FD ]
Line_4 $$ String override = System.getProperty(ofClass.getName())-->Line_6 $$ result.add(override)[ FD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_8 $$ ClassLoader loader = ServiceLib.class.getClassLoader()[ CD ]
Line_8 $$ ClassLoader loader = ServiceLib.class.getClassLoader()-->Line_8 $$ ClassLoader loader = ServiceLib.class.getClassLoader()[ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())[ CD ]
Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())-->Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())[ CD ]
Line_8 $$ ClassLoader loader = ServiceLib.class.getClassLoader()-->Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())[ FD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())[ FD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_10 $$ if (url == null) [ CD ]
Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())-->Line_10 $$ if (url == null) [ FD ]
Line_10 $$ if (url == null) -->Line_11 $$ return result[ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_13 $$ InputStream inStream = null[ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_14 $$ InputStreamReader reader = null[ CD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_15 $$ BufferedReader bReader = null[ CD ]
Line_13 $$ InputStream inStream = null-->Line_17 $$ inStream = url.openStream()[ FD ]
Line_17 $$ inStream = url.openStream()-->Line_17 $$ inStream = url.openStream()[ FD ]
Line_17 $$ inStream = url.openStream()-->Line_17 $$ inStream = url.openStream()[ CD ]
Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())-->Line_17 $$ inStream = url.openStream()[ FD ]
Line_14 $$ InputStreamReader reader = null-->Line_18 $$ reader = new InputStreamReader(inStream)[ FD ]
Line_18 $$ reader = new InputStreamReader(inStream)-->Line_18 $$ reader = new InputStreamReader(inStream)[ FD ]
Line_15 $$ BufferedReader bReader = null-->Line_19 $$ bReader = new BufferedReader(reader)[ FD ]
Line_19 $$ bReader = new BufferedReader(reader)-->Line_19 $$ bReader = new BufferedReader(reader)[ FD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_21 $$ while ((line = bReader.readLine()) != null) [ FD ]
Line_20 $$ String line-->Line_21 $$ while ((line = bReader.readLine()) != null) [ FD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_21 $$ while ((line = bReader.readLine()) != null) [ CD ]
Line_15 $$ BufferedReader bReader = null-->Line_21 $$ while ((line = bReader.readLine()) != null) [ FD ]
Line_19 $$ bReader = new BufferedReader(reader)-->Line_21 $$ while ((line = bReader.readLine()) != null) [ FD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_22 $$ if (!line.matches("\\s*(#.*)?")) [ CD ]
Line_22 $$ if (!line.matches("\\s*(#.*)?")) -->Line_22 $$ if (!line.matches("\\s*(#.*)?")) [ CD ]
Line_22 $$ if (!line.matches("\\s*(#.*)?")) -->Line_22 $$ if (!line.matches("\\s*(#.*)?")) [ CD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_22 $$ if (!line.matches("\\s*(#.*)?")) [ FD ]
Line_20 $$ String line-->Line_22 $$ if (!line.matches("\\s*(#.*)?")) [ FD ]
Line_22 $$ if (!line.matches("\\s*(#.*)?")) -->Line_23 $$ result.add(line.trim())[ CD ]
Line_3 $$ List<String> result = new ArrayList<String>()-->Line_23 $$ result.add(line.trim())[ FD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_23 $$ result.add(line.trim())[ FD ]
Line_20 $$ String line-->Line_23 $$ result.add(line.trim())[ FD ]
Line_9 $$ URL url = loader.getResource("META-INF/services/" + ofClass.getName())-->Line_27 $$ LOG.log(Level.WARNING, "Could not load services descriptor: " + url.toString(), iox)[ FD ]
Line_15 $$ BufferedReader bReader = null-->Line_29 $$ finalClose(bReader)[ FD ]
Line_19 $$ bReader = new BufferedReader(reader)-->Line_29 $$ finalClose(bReader)[ FD ]
Line_14 $$ InputStreamReader reader = null-->Line_30 $$ finalClose(reader)[ FD ]
Line_18 $$ reader = new InputStreamReader(inStream)-->Line_30 $$ finalClose(reader)[ FD ]
Line_13 $$ InputStream inStream = null-->Line_31 $$ finalClose(inStream)[ FD ]
Line_17 $$ inStream = url.openStream()-->Line_31 $$ finalClose(inStream)[ FD ]
Line_2 $$ private static List<String> loadServicesImplementations(final Class ofClass) -->Line_33 $$ return result[ CD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_22 $$ if (!line.matches("\\s*(#.*)?")) [ FD ]
Line_21 $$ while ((line = bReader.readLine()) != null) -->Line_23 $$ result.add(line.trim())[ FD ]
