Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_3 $$ ArrayList<Object[]> markerTestResults = new ArrayList<Object[]>()[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_4 $$ ArrayList<Object[]> alleleEstimateResults = new ArrayList<Object[]>()[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_5 $$ boolean hasAlleleNames = false[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_6 $$ String blank = new String("")[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_7 $$ MarkerPhenotypeAdapter theAdapter[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_8 $$ if (dataset.getDataType().equals(MarkerPhenotype.class)) [ CD ]
Line_8 $$ if (dataset.getDataType().equals(MarkerPhenotype.class)) -->Line_8 $$ if (dataset.getDataType().equals(MarkerPhenotype.class)) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_8 $$ if (dataset.getDataType().equals(MarkerPhenotype.class)) [ FD ]
Line_8 $$ if (dataset.getDataType().equals(MarkerPhenotype.class)) -->Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())[ FD ]
Line_8 $$ if (dataset.getDataType().equals(MarkerPhenotype.class)) -->Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()[ CD ]
Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()-->Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_12 $$ if (numberOfMarkers == 0) [ CD ]
Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()-->Line_12 $$ if (numberOfMarkers == 0) [ FD ]
Line_12 $$ if (numberOfMarkers == 0) -->Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())[ CD ]
Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())-->Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_13 $$ return calculateBLUEsFromPhenotypes(theAdapter, dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()[ CD ]
Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()-->Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()[ CD ]
Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()-->Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()[ CD ]
Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()-->Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_18 $$ int expectedIterations = numberOfPhenotypes * numberOfMarkers[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_19 $$ int iterationsSofar = 0[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_20 $$ int percentFinished = 0[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_21 $$ File tempFile = null[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_22 $$ File ftestFile = null[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_23 $$ File blueFile = null[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_24 $$ BufferedWriter ftestWriter = null[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_25 $$ BufferedWriter BLUEWriter = null[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_26 $$ String ftestHeader = "Trait\tMarker\tLocus\tLocus_pos\tChr\tChr_pos\tmarker_F\tmarker_p\tperm_p\tmarkerR2\tmarkerDF\tmarkerMS\terrorDF\terrorMS\tmodelDF\tmodelMS"[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_27 $$ String BLUEHeader = "Trait\tMarker\tObs\tLocus\tLocus_pos\tChr\tChr_pos\tAllele\tEstimate"[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_28 $$ if (writeOutputToFile) [ CD ]
Line_28 $$ if (writeOutputToFile) -->Line_29 $$ String outputbase = outputName[ CD ]
Line_28 $$ if (writeOutputToFile) -->Line_30 $$ if (outputbase.endsWith(".txt")) [ CD ]
Line_29 $$ String outputbase = outputName-->Line_30 $$ if (outputbase.endsWith(".txt")) [ FD ]
Line_30 $$ if (outputbase.endsWith(".txt")) -->Line_30 $$ if (outputbase.endsWith(".txt")) [ CD ]
Line_29 $$ String outputbase = outputName-->Line_30 $$ if (outputbase.endsWith(".txt")) [ FD ]
Line_30 $$ if (outputbase.endsWith(".txt")) -->Line_31 $$ int index = outputbase.lastIndexOf(".")[ CD ]
Line_31 $$ int index = outputbase.lastIndexOf(".")-->Line_31 $$ int index = outputbase.lastIndexOf(".")[ CD ]
Line_29 $$ String outputbase = outputName-->Line_31 $$ int index = outputbase.lastIndexOf(".")[ FD ]
Line_30 $$ if (outputbase.endsWith(".txt")) -->Line_32 $$ outputbase = outputbase.substring(0, index)[ CD ]
Line_29 $$ String outputbase = outputName-->Line_32 $$ outputbase = outputbase.substring(0, index)[ FD ]
Line_32 $$ outputbase = outputbase.substring(0, index)-->Line_32 $$ outputbase = outputbase.substring(0, index)[ FD ]
Line_32 $$ outputbase = outputbase.substring(0, index)-->Line_32 $$ outputbase = outputbase.substring(0, index)[ CD ]
Line_29 $$ String outputbase = outputName-->Line_32 $$ outputbase = outputbase.substring(0, index)[ FD ]
Line_32 $$ outputbase = outputbase.substring(0, index)-->Line_32 $$ outputbase = outputbase.substring(0, index)[ FD ]
Line_31 $$ int index = outputbase.lastIndexOf(".")-->Line_32 $$ outputbase = outputbase.substring(0, index)[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_34 $$ String datasetNameNoSpace = dataset.getName().trim().replaceAll("\\ ", "_")[ CD ]
Line_34 $$ String datasetNameNoSpace = dataset.getName().trim().replaceAll("\\ ", "_")-->Line_34 $$ String datasetNameNoSpace = dataset.getName().trim().replaceAll("\\ ", "_")[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_34 $$ String datasetNameNoSpace = dataset.getName().trim().replaceAll("\\ ", "_")[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")[ CD ]
Line_22 $$ File ftestFile = null-->Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")[ FD ]
Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")-->Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_36 $$ int count = 0[ CD ]
Line_28 $$ if (writeOutputToFile) -->Line_37 $$ while (ftestFile.exists()) [ CD ]
Line_28 $$ if (writeOutputToFile) -->Line_28 $$ if (writeOutputToFile) [ CD ]
Line_37 $$ while (ftestFile.exists()) -->Line_37 $$ while (ftestFile.exists()) [ CD ]
Line_22 $$ File ftestFile = null-->Line_37 $$ while (ftestFile.exists()) [ FD ]
Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")-->Line_37 $$ while (ftestFile.exists()) [ FD ]
Line_37 $$ while (ftestFile.exists()) -->Line_38 $$ count++[ CD ]
Line_36 $$ int count = 0-->Line_38 $$ count++[ FD ]
Line_37 $$ while (ftestFile.exists()) -->Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")[ CD ]
Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")-->Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")[ FD ]
Line_22 $$ File ftestFile = null-->Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")[ FD ]
Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")-->Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")[ CD ]
Line_23 $$ File blueFile = null-->Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")[ FD ]
Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")-->Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_42 $$ count = 0[ CD ]
Line_36 $$ int count = 0-->Line_42 $$ count = 0[ FD ]
Line_42 $$ count = 0-->Line_42 $$ count = 0[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_43 $$ while (blueFile.exists()) [ CD ]
Line_28 $$ if (writeOutputToFile) -->Line_28 $$ if (writeOutputToFile) [ CD ]
Line_43 $$ while (blueFile.exists()) -->Line_43 $$ while (blueFile.exists()) [ CD ]
Line_23 $$ File blueFile = null-->Line_43 $$ while (blueFile.exists()) [ FD ]
Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")-->Line_43 $$ while (blueFile.exists()) [ FD ]
Line_43 $$ while (blueFile.exists()) -->Line_44 $$ count++[ CD ]
Line_36 $$ int count = 0-->Line_44 $$ count++[ FD ]
Line_42 $$ count = 0-->Line_44 $$ count++[ FD ]
Line_43 $$ while (blueFile.exists()) -->Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")[ CD ]
Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")-->Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")[ FD ]
Line_23 $$ File blueFile = null-->Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")[ FD ]
Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")-->Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")[ FD ]
Line_28 $$ if (writeOutputToFile) -->Line_47 $$ tempFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.tmp")[ CD ]
Line_21 $$ File tempFile = null-->Line_47 $$ tempFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.tmp")[ FD ]
Line_47 $$ tempFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.tmp")-->Line_47 $$ tempFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.tmp")[ FD ]
Line_49 $$ if (permute) -->Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))[ FD ]
Line_49 $$ if (permute) -->Line_51 $$ ftestWriter.write(ftestHeader)[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_51 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_51 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_26 $$ String ftestHeader = "Trait\tMarker\tLocus\tLocus_pos\tChr\tChr_pos\tmarker_F\tmarker_p\tperm_p\tmarkerR2\tmarkerDF\tmarkerMS\terrorDF\terrorMS\tmodelDF\tmodelMS"-->Line_51 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_49 $$ if (permute) -->Line_52 $$ ftestWriter.newLine()[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_52 $$ ftestWriter.newLine()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_52 $$ ftestWriter.newLine()[ FD ]
Line_49 $$ if (permute) -->Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_49 $$ if (permute) -->Line_55 $$ ftestWriter.write(ftestHeader)[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_55 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_55 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_55 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_26 $$ String ftestHeader = "Trait\tMarker\tLocus\tLocus_pos\tChr\tChr_pos\tmarker_F\tmarker_p\tperm_p\tmarkerR2\tmarkerDF\tmarkerMS\terrorDF\terrorMS\tmodelDF\tmodelMS"-->Line_55 $$ ftestWriter.write(ftestHeader)[ FD ]
Line_49 $$ if (permute) -->Line_56 $$ ftestWriter.newLine()[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_56 $$ ftestWriter.newLine()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_56 $$ ftestWriter.newLine()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_56 $$ ftestWriter.newLine()[ FD ]
Line_58 $$ if (reportBLUEs) -->Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))[ CD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))[ FD ]
Line_58 $$ if (reportBLUEs) -->Line_60 $$ BLUEWriter.write(BLUEHeader)[ CD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_60 $$ BLUEWriter.write(BLUEHeader)[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_60 $$ BLUEWriter.write(BLUEHeader)[ FD ]
Line_27 $$ String BLUEHeader = "Trait\tMarker\tObs\tLocus\tLocus_pos\tChr\tChr_pos\tAllele\tEstimate"-->Line_60 $$ BLUEWriter.write(BLUEHeader)[ FD ]
Line_58 $$ if (reportBLUEs) -->Line_61 $$ BLUEWriter.newLine()[ CD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_61 $$ BLUEWriter.newLine()[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_61 $$ BLUEWriter.newLine()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_69 $$ if (permute) [ CD ]
Line_69 $$ if (permute) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ CD ]
Line_69 $$ if (permute) -->Line_69 $$ if (permute) [ CD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ CD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ CD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ CD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ CD ]
Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()-->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ CD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ CD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_73 $$ minP[j][i] = 1[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()-->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ CD ]
Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)-->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ CD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ CD ]
Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)-->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ CD ]
Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)-->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_82 $$ double[][] permutedData = null[ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_83 $$ if (permute) [ CD ]
Line_83 $$ if (permute) -->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ CD ]
Line_82 $$ double[][] permutedData = null-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ CD ]
Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_11 $$ int numberOfMarkers = theAdapter.getNumberOfMarkers()-->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ CD ]
Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)-->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_88 $$ boolean[] finalMissing = new boolean[missing.length][ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_89 $$ System.arraycopy(missing, 0, finalMissing, 0, missing.length)[ CD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_89 $$ System.arraycopy(missing, 0, finalMissing, 0, missing.length)[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_89 $$ System.arraycopy(missing, 0, finalMissing, 0, missing.length)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ CD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_91 $$ int[] nonmissingRows = MarkerPhenotypeAdapterUtils.getNonMissingIndex(finalMissing)[ CD ]
Line_91 $$ int[] nonmissingRows = MarkerPhenotypeAdapterUtils.getNonMissingIndex(finalMissing)-->Line_91 $$ int[] nonmissingRows = MarkerPhenotypeAdapterUtils.getNonMissingIndex(finalMissing)[ CD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_91 $$ int[] nonmissingRows = MarkerPhenotypeAdapterUtils.getNonMissingIndex(finalMissing)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_92 $$ int numberOfObs = nonmissingRows.length[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_93 $$ double[] y = new double[numberOfObs][ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ CD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_92 $$ int numberOfObs = nonmissingRows.length-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ CD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ CD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ y[i] = phenotypeData[nonmissingRows[i]][ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_98 $$ meanEffect.setID("mean")[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_99 $$ modelEffects.add(meanEffect)[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_100 $$ if (numberOfFactors > 0) [ CD ]
Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()-->Line_100 $$ if (numberOfFactors > 0) [ FD ]
Line_100 $$ if (numberOfFactors > 0) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ CD ]
Line_100 $$ if (numberOfFactors > 0) -->Line_100 $$ if (numberOfFactors > 0) [ CD ]
Line_16 $$ int numberOfFactors = theAdapter.getNumberOfFactors()-->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ CD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ CD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_102 $$ String[] afactor = factorList.get(f)[ CD ]
Line_102 $$ String[] afactor = factorList.get(f)-->Line_102 $$ String[] afactor = factorList.get(f)[ CD ]
Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)-->Line_102 $$ String[] afactor = factorList.get(f)[ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_102 $$ String[] afactor = factorList.get(f)[ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_103 $$ String[] factorLabels = new String[numberOfObs][ CD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ CD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ CD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_92 $$ int numberOfObs = nonmissingRows.length-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ CD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ CD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ factorLabels[i] = afactor[nonmissingRows[i]][ CD ]
Line_103 $$ String[] factorLabels = new String[numberOfObs]-->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_106 $$ modelEffects.add(fme)[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_110 $$ if (numberOfCovariates > 0) [ CD ]
Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()-->Line_110 $$ if (numberOfCovariates > 0) [ FD ]
Line_110 $$ if (numberOfCovariates > 0) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ CD ]
Line_110 $$ if (numberOfCovariates > 0) -->Line_110 $$ if (numberOfCovariates > 0) [ CD ]
Line_15 $$ int numberOfCovariates = theAdapter.getNumberOfCovariates()-->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ CD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ CD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_112 $$ double[] covar = new double[numberOfObs][ CD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_113 $$ double[] covariateData = covariateList.get(c)[ CD ]
Line_113 $$ double[] covariateData = covariateList.get(c)-->Line_113 $$ double[] covariateData = covariateList.get(c)[ CD ]
Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)-->Line_113 $$ double[] covariateData = covariateList.get(c)[ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_113 $$ double[] covariateData = covariateList.get(c)[ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ CD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ CD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_92 $$ int numberOfObs = nonmissingRows.length-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ CD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ CD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ covar[i] = covariateData[nonmissingRows[i]][ CD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_115 $$ modelEffects.add(new CovariateModelEffect(covar, theAdapter.getCovariateName(c)))[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_115 $$ modelEffects.add(new CovariateModelEffect(covar, theAdapter.getCovariateName(c)))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_115 $$ modelEffects.add(new CovariateModelEffect(covar, theAdapter.getCovariateName(c)))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_115 $$ modelEffects.add(new CovariateModelEffect(covar, theAdapter.getCovariateName(c)))[ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_115 $$ modelEffects.add(new CovariateModelEffect(covar, theAdapter.getCovariateName(c)))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_120 $$ boolean markerIsDiscrete = theAdapter.isMarkerDiscrete(m)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_120 $$ boolean markerIsDiscrete = theAdapter.isMarkerDiscrete(m)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_120 $$ boolean markerIsDiscrete = theAdapter.isMarkerDiscrete(m)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_120 $$ boolean markerIsDiscrete = theAdapter.isMarkerDiscrete(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_120 $$ boolean markerIsDiscrete = theAdapter.isMarkerDiscrete(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_122 $$ if (markerIsDiscrete) [ CD ]
Line_122 $$ if (markerIsDiscrete) -->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ CD ]
Line_122 $$ if (markerIsDiscrete) -->Line_122 $$ if (markerIsDiscrete) [ CD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_92 $$ int numberOfObs = nonmissingRows.length-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ CD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ CD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ markers[i] = markerData[nonmissingRows[i]][ CD ]
Line_122 $$ if (markerIsDiscrete) -->Line_125 $$ int[] markerLevels = ModelEffectUtils.getIntegerLevels(markers, alleleNames)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_126 $$ markerEffect = new FactorModelEffect(markerLevels, true, theAdapter.getMarkerName(m))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_126 $$ markerEffect = new FactorModelEffect(markerLevels, true, theAdapter.getMarkerName(m))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_126 $$ markerEffect = new FactorModelEffect(markerLevels, true, theAdapter.getMarkerName(m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_126 $$ markerEffect = new FactorModelEffect(markerLevels, true, theAdapter.getMarkerName(m))[ FD ]
Line_122 $$ if (markerIsDiscrete) -->Line_127 $$ hasAlleleNames = true[ CD ]
Line_127 $$ hasAlleleNames = true-->Line_127 $$ hasAlleleNames = true[ FD ]
Line_5 $$ boolean hasAlleleNames = false-->Line_127 $$ hasAlleleNames = true[ FD ]
Line_122 $$ if (markerIsDiscrete) -->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ CD ]
Line_122 $$ if (markerIsDiscrete) -->Line_122 $$ if (markerIsDiscrete) [ CD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_92 $$ int numberOfObs = nonmissingRows.length-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ CD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ CD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ CD ]
Line_130 $$ markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_131 $$ markerEffect = new CovariateModelEffect(markerdbl, theAdapter.getMarkerName(m))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_131 $$ markerEffect = new CovariateModelEffect(markerdbl, theAdapter.getMarkerName(m))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_131 $$ markerEffect = new CovariateModelEffect(markerdbl, theAdapter.getMarkerName(m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_131 $$ markerEffect = new CovariateModelEffect(markerdbl, theAdapter.getMarkerName(m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_133 $$ int[] alleleCounts = markerEffect.getLevelCounts()[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_134 $$ modelEffects.add(markerEffect)[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_137 $$ Identifier[] taxa = theAdapter.getTaxa(ph)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_137 $$ Identifier[] taxa = theAdapter.getTaxa(ph)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_137 $$ Identifier[] taxa = theAdapter.getTaxa(ph)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_137 $$ Identifier[] taxa = theAdapter.getTaxa(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_137 $$ Identifier[] taxa = theAdapter.getTaxa(ph)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ CD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_92 $$ int numberOfObs = nonmissingRows.length-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ CD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ CD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ taxaSublist[i] = taxa[nonmissingRows[i]][ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_139 $$ boolean areTaxaReplicated = containsDuplicates(taxaSublist)[ CD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) [ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_145 $$ modelEffects.add(taxaEffect)[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_147 $$ double[] taxaSSdf = sfnm.getTaxaInMarkerSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_148 $$ double[] residualSSdf = sfnm.getErrorSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_149 $$ markerSSdf = sfnm.getMarkerSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_150 $$ errorSSdf = sfnm.getErrorSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_151 $$ modelSSdf = sfnm.getModelcfmSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_158 $$ beta = sfnm.getBeta()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_160 $$ if (permute && markerdf > 0) [ CD ]
Line_160 $$ if (permute && markerdf > 0) -->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ FD ]
Line_82 $$ double[][] permutedData = null-->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ FD ]
Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)-->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ FD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_165 $$ modelSSdf = sflm.getModelcfmSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_166 $$ markerSSdf = sflm.getMarginalSSdf(markerEffectNumber)[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_167 $$ errorSSdf = sflm.getResidualSSdf()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_174 $$ beta = sflm.getBeta()[ CD ]
Line_143 $$ if (areTaxaReplicated && markerIsDiscrete) -->Line_176 $$ if (permute && markerdf > 0) [ CD ]
Line_176 $$ if (permute && markerdf > 0) -->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ FD ]
Line_82 $$ double[][] permutedData = null-->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ FD ]
Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)-->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_180 $$ if (!filterOutput || p < maxp) [ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_181 $$ String traitname = theAdapter.getPhenotypeName(ph)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_181 $$ String traitname = theAdapter.getPhenotypeName(ph)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_181 $$ String traitname = theAdapter.getPhenotypeName(ph)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_181 $$ String traitname = theAdapter.getPhenotypeName(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_181 $$ String traitname = theAdapter.getPhenotypeName(ph)[ FD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_182 $$ if (traitname == null)[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_183 $$ String marker = theAdapter.getMarkerName(m)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_183 $$ String marker = theAdapter.getMarkerName(m)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_183 $$ String marker = theAdapter.getMarkerName(m)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_183 $$ String marker = theAdapter.getMarkerName(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_183 $$ String marker = theAdapter.getMarkerName(m)[ FD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_184 $$ if (marker == null)[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_185 $$ String locus = theAdapter.getLocusName(m)[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_185 $$ String locus = theAdapter.getLocusName(m)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_185 $$ String locus = theAdapter.getLocusName(m)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_185 $$ String locus = theAdapter.getLocusName(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_185 $$ String locus = theAdapter.getLocusName(m)[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_186 $$ Integer site = new Integer(theAdapter.getLocusPosition(m))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_186 $$ Integer site = new Integer(theAdapter.getLocusPosition(m))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_186 $$ Integer site = new Integer(theAdapter.getLocusPosition(m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_186 $$ Integer site = new Integer(theAdapter.getLocusPosition(m))[ FD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_189 $$ if (hasMap) [ CD ]
Line_189 $$ if (hasMap) -->Line_190 $$ int ndx = -1[ CD ]
Line_189 $$ if (hasMap) -->Line_191 $$ ndx = myMap.getMarkerIndex(marker)[ CD ]
Line_189 $$ if (hasMap) -->Line_192 $$ if (ndx > -1) [ CD ]
Line_192 $$ if (ndx > -1) -->Line_192 $$ if (ndx > -1) [ CD ]
Line_192 $$ if (ndx > -1) -->Line_193 $$ chrname = myMap.getChromosome(ndx)[ CD ]
Line_192 $$ if (ndx > -1) -->Line_194 $$ chrpos = myMap.getGeneticPosition(ndx)[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_205 $$ result[col++] = new Double(F)[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_206 $$ result[col++] = new Double(p)[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_207 $$ result[col++] = Double.NaN[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_208 $$ result[col++] = new Double(markerSSdf[0] / (modelSSdf[0] + errorSSdf[0]))[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_209 $$ result[col++] = new Double(markerSSdf[1])[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_210 $$ result[col++] = new Double(markerSSdf[0] / markerSSdf[1])[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_211 $$ result[col++] = new Double(errorSSdf[1])[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_212 $$ result[col++] = new Double(errorSSdf[0] / errorSSdf[1])[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_213 $$ result[col++] = new Double(modelSSdf[1])[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_214 $$ result[col++] = new Double(modelSSdf[0] / modelSSdf[1])[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_215 $$ if (writeOutputToFile) [ CD ]
Line_215 $$ if (writeOutputToFile) -->Line_217 $$ sb.append(result[0])[ CD ]
Line_215 $$ if (writeOutputToFile) -->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ CD ]
Line_215 $$ if (writeOutputToFile) -->Line_215 $$ if (writeOutputToFile) [ CD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ CD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ CD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ sb.append("\t").append(result[i])[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_220 $$ ftestWriter.write(sb.toString())[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_220 $$ ftestWriter.write(sb.toString())[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_220 $$ ftestWriter.write(sb.toString())[ FD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_221 $$ ftestWriter.newLine()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_221 $$ ftestWriter.newLine()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_221 $$ ftestWriter.newLine()[ FD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_225 $$ ftestWriter.flush()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_225 $$ ftestWriter.flush()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_225 $$ ftestWriter.flush()[ FD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_226 $$ BLUEWriter.flush()[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_226 $$ BLUEWriter.flush()[ FD ]
Line_215 $$ if (writeOutputToFile) -->Line_233 $$ markerTestResults.add(result)[ CD ]
Line_3 $$ ArrayList<Object[]> markerTestResults = new ArrayList<Object[]>()-->Line_233 $$ markerTestResults.add(result)[ FD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_235 $$ int numberOfMarkerAlleles = alleleNames.size()[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_236 $$ if (numberOfMarkerAlleles == 0)[ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ CD ]
Line_180 $$ if (!filterOutput || p < maxp) -->Line_180 $$ if (!filterOutput || p < maxp) [ CD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_241 $$ result[2] = new Integer(alleleCounts[i])[ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_246 $$ if (numberOfMarkerAlleles == 1)[ CD ]
Line_246 $$ if (numberOfMarkerAlleles == 1)-->Line_246 $$ result[7] = ""[ CD ]
Line_246 $$ if (numberOfMarkerAlleles == 1)-->Line_246 $$ result[7] = alleleNames.get(i)[ CD ]
Line_246 $$ result[7] = alleleNames.get(i)-->Line_246 $$ result[7] = alleleNames.get(i)[ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_247 $$ if (i == numberOfMarkerAlleles - 1)-->Line_247 $$ result[8] = 0.0[ CD ]
Line_247 $$ if (i == numberOfMarkerAlleles - 1)-->Line_247 $$ result[8] = beta[firstMarkerAlleleEstimate + i][ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_248 $$ if (writeOutputToFile) [ CD ]
Line_248 $$ if (writeOutputToFile) -->Line_249 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_248 $$ if (writeOutputToFile) -->Line_250 $$ sb.append(result[0])[ CD ]
Line_249 $$ StringBuilder sb = new StringBuilder()-->Line_250 $$ sb.append(result[0])[ FD ]
Line_248 $$ if (writeOutputToFile) -->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ CD ]
Line_248 $$ if (writeOutputToFile) -->Line_248 $$ if (writeOutputToFile) [ CD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ CD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ CD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ sb.append("\t").append(result[j])[ CD ]
Line_249 $$ StringBuilder sb = new StringBuilder()-->Line_251 $$ sb.append("\t").append(result[j])[ FD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_253 $$ BLUEWriter.write(sb.toString())[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_253 $$ BLUEWriter.write(sb.toString())[ FD ]
Line_249 $$ StringBuilder sb = new StringBuilder()-->Line_253 $$ BLUEWriter.write(sb.toString())[ FD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_254 $$ BLUEWriter.newLine()[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_254 $$ BLUEWriter.newLine()[ FD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_258 $$ ftestWriter.flush()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_258 $$ ftestWriter.flush()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_258 $$ ftestWriter.flush()[ FD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_259 $$ BLUEWriter.flush()[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_259 $$ BLUEWriter.flush()[ FD ]
Line_248 $$ if (writeOutputToFile) -->Line_266 $$ alleleEstimateResults.add(result)[ CD ]
Line_4 $$ ArrayList<Object[]> alleleEstimateResults = new ArrayList<Object[]>()-->Line_266 $$ alleleEstimateResults.add(result)[ FD ]
Line_19 $$ int iterationsSofar = 0-->Line_270 $$ int tmpPercent = ++iterationsSofar * 100 / expectedIterations[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_271 $$ if (tmpPercent > percentFinished) [ CD ]
Line_20 $$ int percentFinished = 0-->Line_271 $$ if (tmpPercent > percentFinished) [ FD ]
Line_271 $$ if (tmpPercent > percentFinished) -->Line_272 $$ percentFinished = tmpPercent[ CD ]
Line_272 $$ percentFinished = tmpPercent-->Line_272 $$ percentFinished = tmpPercent[ FD ]
Line_20 $$ int percentFinished = 0-->Line_272 $$ percentFinished = tmpPercent[ FD ]
Line_271 $$ if (tmpPercent > percentFinished) -->Line_273 $$ fireProgress(percentFinished)[ CD ]
Line_272 $$ percentFinished = tmpPercent-->Line_273 $$ fireProgress(percentFinished)[ FD ]
Line_20 $$ int percentFinished = 0-->Line_273 $$ fireProgress(percentFinished)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_277 $$ fireProgress(0)[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_278 $$ if (writeOutputToFile) [ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_280 $$ ftestWriter.close()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_280 $$ ftestWriter.close()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_280 $$ ftestWriter.close()[ FD ]
Line_25 $$ BufferedWriter BLUEWriter = null-->Line_281 $$ BLUEWriter.close()[ FD ]
Line_59 $$ BLUEWriter = new BufferedWriter(new FileWriter(blueFile))-->Line_281 $$ BLUEWriter.close()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_286 $$ HashMap<String, Integer> traitnameMap = new HashMap<String, Integer>()[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_287 $$ if (permute) [ CD ]
Line_287 $$ if (permute) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_287 $$ if (permute) -->Line_287 $$ if (permute) [ CD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_17 $$ int numberOfPhenotypes = theAdapter.getNumberOfPhenotypes()-->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ CD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_289 $$ Arrays.sort(minP[ph])[ CD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ CD ]
Line_286 $$ HashMap<String, Integer> traitnameMap = new HashMap<String, Integer>()-->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_287 $$ if (permute) -->Line_292 $$ if (writeOutputToFile) [ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))[ FD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_296 $$ ftestWriter.write(tempReader.readLine())[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_296 $$ ftestWriter.write(tempReader.readLine())[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_296 $$ ftestWriter.write(tempReader.readLine())[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_296 $$ ftestWriter.write(tempReader.readLine())[ FD ]
Line_294 $$ BufferedReader tempReader = new BufferedReader(new FileReader(tempFile))-->Line_296 $$ ftestWriter.write(tempReader.readLine())[ FD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_297 $$ ftestWriter.newLine()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_297 $$ ftestWriter.newLine()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_297 $$ ftestWriter.newLine()[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_297 $$ ftestWriter.newLine()[ FD ]
Line_300 $$ Pattern tab = Pattern.compile("\t")-->Line_300 $$ Pattern tab = Pattern.compile("\t")[ CD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_301 $$ while ((input = tempReader.readLine()) != null) [ FD ]
Line_298 $$ String input-->Line_301 $$ while ((input = tempReader.readLine()) != null) [ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_301 $$ while ((input = tempReader.readLine()) != null) [ CD ]
Line_294 $$ BufferedReader tempReader = new BufferedReader(new FileReader(tempFile))-->Line_301 $$ while ((input = tempReader.readLine()) != null) [ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_302 $$ data = tab.split(input)[ CD ]
Line_302 $$ data = tab.split(input)-->Line_302 $$ data = tab.split(input)[ FD ]
Line_299 $$ String[] data-->Line_302 $$ data = tab.split(input)[ FD ]
Line_302 $$ data = tab.split(input)-->Line_302 $$ data = tab.split(input)[ CD ]
Line_300 $$ Pattern tab = Pattern.compile("\t")-->Line_302 $$ data = tab.split(input)[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_302 $$ data = tab.split(input)[ FD ]
Line_298 $$ String input-->Line_302 $$ data = tab.split(input)[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_303 $$ String trait = data[0][ CD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_304 $$ double pval = Double.parseDouble(data[7])[ CD ]
Line_304 $$ double pval = Double.parseDouble(data[7])-->Line_304 $$ double pval = Double.parseDouble(data[7])[ CD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_305 $$ int ph = traitnameMap.get(trait)[ CD ]
Line_305 $$ int ph = traitnameMap.get(trait)-->Line_305 $$ int ph = traitnameMap.get(trait)[ CD ]
Line_286 $$ HashMap<String, Integer> traitnameMap = new HashMap<String, Integer>()-->Line_305 $$ int ph = traitnameMap.get(trait)[ FD ]
Line_303 $$ String trait = data[0]-->Line_305 $$ int ph = traitnameMap.get(trait)[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ CD ]
Line_304 $$ double pval = Double.parseDouble(data[7])-->Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_307 $$ if (ndx < 0)[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_307 $$ if (ndx < 0)[ FD ]
Line_307 $$ if (ndx < 0)-->Line_307 $$ ndx = -ndx - 1[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_308 $$ if (ndx == 0)[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_308 $$ if (ndx == 0)[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_308 $$ if (ndx == 0)[ FD ]
Line_308 $$ if (ndx == 0)-->Line_308 $$ ndx = 1[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_308 $$ ndx = 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_308 $$ ndx = 1[ FD ]
Line_308 $$ ndx = 1-->Line_308 $$ ndx = 1[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_309 $$ data[8] = Double.toString((double) ndx / (double) numberOfPermutations)[ CD ]
Line_309 $$ data[8] = Double.toString((double) ndx / (double) numberOfPermutations)-->Line_309 $$ data[8] = Double.toString((double) ndx / (double) numberOfPermutations)[ CD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_310 $$ ftestWriter.write(data[0])[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_310 $$ ftestWriter.write(data[0])[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_310 $$ ftestWriter.write(data[0])[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_310 $$ ftestWriter.write(data[0])[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_310 $$ ftestWriter.write(data[0])[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ CD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_301 $$ while ((input = tempReader.readLine()) != null) [ CD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ CD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ CD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_312 $$ ftestWriter.write("\t")[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_312 $$ ftestWriter.write("\t")[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_312 $$ ftestWriter.write("\t")[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_312 $$ ftestWriter.write("\t")[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_312 $$ ftestWriter.write("\t")[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_313 $$ ftestWriter.write(data[i])[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_313 $$ ftestWriter.write(data[i])[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_313 $$ ftestWriter.write(data[i])[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_313 $$ ftestWriter.write(data[i])[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_313 $$ ftestWriter.write(data[i])[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_315 $$ ftestWriter.newLine()[ CD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_315 $$ ftestWriter.newLine()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_315 $$ ftestWriter.newLine()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_315 $$ ftestWriter.newLine()[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_315 $$ ftestWriter.newLine()[ FD ]
Line_294 $$ BufferedReader tempReader = new BufferedReader(new FileReader(tempFile))-->Line_317 $$ tempReader.close()[ FD ]
Line_24 $$ BufferedWriter ftestWriter = null-->Line_318 $$ ftestWriter.close()[ FD ]
Line_50 $$ ftestWriter = new BufferedWriter(new FileWriter(tempFile))-->Line_318 $$ ftestWriter.close()[ FD ]
Line_54 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_318 $$ ftestWriter.close()[ FD ]
Line_295 $$ ftestWriter = new BufferedWriter(new FileWriter(ftestFile))-->Line_318 $$ ftestWriter.close()[ FD ]
Line_21 $$ File tempFile = null-->Line_319 $$ tempFile.delete()[ FD ]
Line_47 $$ tempFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.tmp")-->Line_319 $$ tempFile.delete()[ FD ]
Line_325 $$ String trait = result[0].toString()-->Line_325 $$ String trait = result[0].toString()[ CD ]
Line_327 $$ int ph = traitnameMap.get(trait)-->Line_327 $$ int ph = traitnameMap.get(trait)[ CD ]
Line_286 $$ HashMap<String, Integer> traitnameMap = new HashMap<String, Integer>()-->Line_327 $$ int ph = traitnameMap.get(trait)[ FD ]
Line_303 $$ String trait = data[0]-->Line_327 $$ int ph = traitnameMap.get(trait)[ FD ]
Line_325 $$ String trait = result[0].toString()-->Line_327 $$ int ph = traitnameMap.get(trait)[ FD ]
Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ CD ]
Line_304 $$ double pval = Double.parseDouble(data[7])-->Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ FD ]
Line_326 $$ double pval = (Double) result[7]-->Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_329 $$ if (ndx < 0)[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_329 $$ if (ndx < 0)[ FD ]
Line_308 $$ ndx = 1-->Line_329 $$ if (ndx < 0)[ FD ]
Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_329 $$ if (ndx < 0)[ FD ]
Line_329 $$ if (ndx < 0)-->Line_329 $$ ndx = -ndx - 1[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_308 $$ ndx = 1-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_329 $$ ndx = -ndx - 1-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_308 $$ ndx = 1-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_329 $$ ndx = -ndx - 1-->Line_329 $$ ndx = -ndx - 1[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_330 $$ if (ndx == 0)[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_330 $$ if (ndx == 0)[ FD ]
Line_308 $$ ndx = 1-->Line_330 $$ if (ndx == 0)[ FD ]
Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_330 $$ if (ndx == 0)[ FD ]
Line_329 $$ ndx = -ndx - 1-->Line_330 $$ if (ndx == 0)[ FD ]
Line_330 $$ if (ndx == 0)-->Line_330 $$ ndx = 1[ CD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_330 $$ ndx = 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_330 $$ ndx = 1[ FD ]
Line_308 $$ ndx = 1-->Line_330 $$ ndx = 1[ FD ]
Line_328 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_330 $$ ndx = 1[ FD ]
Line_329 $$ ndx = -ndx - 1-->Line_330 $$ ndx = 1[ FD ]
Line_330 $$ ndx = 1-->Line_330 $$ ndx = 1[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_335 $$ String[] columnLabels = new String[] [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()[ CD ]
Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()-->Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()[ CD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_338 $$ outputList.add(0)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_338 $$ outputList.add(0)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_339 $$ if (hasMarkerNames)[ CD ]
Line_339 $$ if (hasMarkerNames)-->Line_339 $$ outputList.add(1)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_339 $$ outputList.add(1)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_340 $$ outputList.add(2)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_340 $$ outputList.add(2)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_341 $$ outputList.add(3)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_341 $$ outputList.add(3)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_342 $$ if (hasMap) [ CD ]
Line_342 $$ if (hasMap) -->Line_343 $$ outputList.add(4)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_343 $$ outputList.add(4)[ FD ]
Line_342 $$ if (hasMap) -->Line_344 $$ outputList.add(5)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_344 $$ outputList.add(5)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_346 $$ outputList.add(6)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_346 $$ outputList.add(6)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_347 $$ outputList.add(7)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_347 $$ outputList.add(7)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_348 $$ if (permute)[ CD ]
Line_348 $$ if (permute)-->Line_348 $$ outputList.add(8)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_348 $$ outputList.add(8)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ CD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ CD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ outputList.add(i)[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_349 $$ outputList.add(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ outputList.add(i)[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_349 $$ outputList.add(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_349 $$ outputList.add(i)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_349 $$ outputList.add(i)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_349 $$ outputList.add(i)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_349 $$ outputList.add(i)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_349 $$ outputList.add(i)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_349 $$ outputList.add(i)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_349 $$ outputList.add(i)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_349 $$ outputList.add(i)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_349 $$ outputList.add(i)[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_350 $$ LinkedList<Datum> resultset = new LinkedList<Datum>()[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_351 $$ int nrows = markerTestResults.size()[ CD ]
Line_351 $$ int nrows = markerTestResults.size()-->Line_351 $$ int nrows = markerTestResults.size()[ CD ]
Line_3 $$ ArrayList<Object[]> markerTestResults = new ArrayList<Object[]>()-->Line_351 $$ int nrows = markerTestResults.size()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_352 $$ Object[][] table = new Object[nrows][][ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_353 $$ int numberOfColumns = outputList.size()[ CD ]
Line_353 $$ int numberOfColumns = outputList.size()-->Line_353 $$ int numberOfColumns = outputList.size()[ CD ]
Line_337 $$ LinkedList<Integer> outputList = new LinkedList<Integer>()-->Line_353 $$ int numberOfColumns = outputList.size()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_354 $$ String[] colnames = new String[numberOfColumns][ CD ]
Line_36 $$ int count = 0-->Line_356 $$ colnames[count++] = columnLabels[ndx][ FD ]
Line_42 $$ count = 0-->Line_356 $$ colnames[count++] = columnLabels[ndx][ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_351 $$ int nrows = markerTestResults.size()-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_358 $$ table[i] = new Object[numberOfColumns][ CD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_359 $$ Object[] result = markerTestResults.get(i)[ CD ]
Line_359 $$ Object[] result = markerTestResults.get(i)-->Line_359 $$ Object[] result = markerTestResults.get(i)[ CD ]
Line_3 $$ ArrayList<Object[]> markerTestResults = new ArrayList<Object[]>()-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_360 $$ count = 0[ CD ]
Line_360 $$ count = 0-->Line_360 $$ count = 0[ FD ]
Line_36 $$ int count = 0-->Line_360 $$ count = 0[ FD ]
Line_42 $$ count = 0-->Line_360 $$ count = 0[ FD ]
Line_360 $$ count = 0-->Line_361 $$ table[i][count++] = result[ndx][ FD ]
Line_36 $$ int count = 0-->Line_361 $$ table[i][count++] = result[ndx][ FD ]
Line_42 $$ count = 0-->Line_361 $$ table[i][count++] = result[ndx][ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_363 $$ StringBuilder tableName = new StringBuilder("GLM_marker_test_")[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_364 $$ tableName.append(dataset.getName())[ CD ]
Line_363 $$ StringBuilder tableName = new StringBuilder("GLM_marker_test_")-->Line_364 $$ tableName.append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_364 $$ tableName.append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_366 $$ comments.append("GLM: fixed effect linear model\n")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_366 $$ comments.append("GLM: fixed effect linear model\n")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_367 $$ comments.append("Data set: ").append(dataset.getName())[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_367 $$ comments.append("Data set: ").append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_367 $$ comments.append("Data set: ").append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_368 $$ comments.append("\nmodel: trait = mean")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_368 $$ comments.append("\nmodel: trait = mean")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ CD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ CD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_370 $$ comments.append(" + ")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_370 $$ comments.append(" + ")[ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ CD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ CD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_374 $$ comments.append(" + ")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_374 $$ comments.append(" + ")[ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_377 $$ comments.append(" + marker")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_377 $$ comments.append(" + marker")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_378 $$ if (writeOutputToFile) [ CD ]
Line_378 $$ if (writeOutputToFile) -->Line_379 $$ comments.append("\nOutput written to " + ftestFile.getPath())[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_379 $$ comments.append("\nOutput written to " + ftestFile.getPath())[ FD ]
Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")-->Line_379 $$ comments.append("\nOutput written to " + ftestFile.getPath())[ FD ]
Line_22 $$ File ftestFile = null-->Line_379 $$ comments.append("\nOutput written to " + ftestFile.getPath())[ FD ]
Line_35 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest.txt")-->Line_379 $$ comments.append("\nOutput written to " + ftestFile.getPath())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_381 $$ TableReport markerTestReport = new SimpleTableReport("Marker Test", colnames, table)[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_382 $$ resultset.add(new Datum(tableName.toString(), markerTestReport, comments.toString()))[ CD ]
Line_350 $$ LinkedList<Datum> resultset = new LinkedList<Datum>()-->Line_382 $$ resultset.add(new Datum(tableName.toString(), markerTestReport, comments.toString()))[ FD ]
Line_363 $$ StringBuilder tableName = new StringBuilder("GLM_marker_test_")-->Line_382 $$ resultset.add(new Datum(tableName.toString(), markerTestReport, comments.toString()))[ FD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_382 $$ resultset.add(new Datum(tableName.toString(), markerTestReport, comments.toString()))[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_383 $$ int[] outputIndex[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_384 $$ columnLabels = new String[] [ CD ]
Line_335 $$ String[] columnLabels = new String[] -->Line_384 $$ columnLabels = new String[] [ FD ]
Line_384 $$ columnLabels = new String[] -->Line_384 $$ columnLabels = new String[] [ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_385 $$ if (hasAlleleNames) [ CD ]
Line_385 $$ if (hasAlleleNames) -->Line_386 $$ if (hasMarkerNames && hasMap) [ CD ]
Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()-->Line_386 $$ if (hasMarkerNames && hasMap) [ FD ]
Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()-->Line_386 $$ if (hasMarkerNames && hasMap) [ FD ]
Line_386 $$ if (hasMarkerNames && hasMap) -->Line_387 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_387 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_387 $$ outputIndex = new int[] [ FD ]
Line_386 $$ if (hasMarkerNames && hasMap) -->Line_388 $$ if (hasMarkerNames) [ CD ]
Line_388 $$ if (hasMarkerNames) -->Line_389 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_389 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_389 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_389 $$ outputIndex = new int[] [ FD ]
Line_388 $$ if (hasMarkerNames) -->Line_390 $$ if (hasMap) [ CD ]
Line_390 $$ if (hasMap) -->Line_391 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_391 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_391 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_391 $$ outputIndex = new int[] [ FD ]
Line_391 $$ outputIndex = new int[] -->Line_391 $$ outputIndex = new int[] [ FD ]
Line_390 $$ if (hasMap) -->Line_393 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_393 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_393 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_393 $$ outputIndex = new int[] [ FD ]
Line_391 $$ outputIndex = new int[] -->Line_393 $$ outputIndex = new int[] [ FD ]
Line_393 $$ outputIndex = new int[] -->Line_393 $$ outputIndex = new int[] [ FD ]
Line_385 $$ if (hasAlleleNames) -->Line_396 $$ if (hasMarkerNames && hasMap) [ CD ]
Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()-->Line_396 $$ if (hasMarkerNames && hasMap) [ FD ]
Line_336 $$ boolean hasMarkerNames = theAdapter.hasMarkerNames()-->Line_396 $$ if (hasMarkerNames && hasMap) [ FD ]
Line_396 $$ if (hasMarkerNames && hasMap) -->Line_397 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_397 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_397 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_397 $$ outputIndex = new int[] [ FD ]
Line_391 $$ outputIndex = new int[] -->Line_397 $$ outputIndex = new int[] [ FD ]
Line_393 $$ outputIndex = new int[] -->Line_397 $$ outputIndex = new int[] [ FD ]
Line_397 $$ outputIndex = new int[] -->Line_397 $$ outputIndex = new int[] [ FD ]
Line_396 $$ if (hasMarkerNames && hasMap) -->Line_398 $$ if (hasMarkerNames) [ CD ]
Line_398 $$ if (hasMarkerNames) -->Line_399 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_399 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_399 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_399 $$ outputIndex = new int[] [ FD ]
Line_391 $$ outputIndex = new int[] -->Line_399 $$ outputIndex = new int[] [ FD ]
Line_393 $$ outputIndex = new int[] -->Line_399 $$ outputIndex = new int[] [ FD ]
Line_397 $$ outputIndex = new int[] -->Line_399 $$ outputIndex = new int[] [ FD ]
Line_399 $$ outputIndex = new int[] -->Line_399 $$ outputIndex = new int[] [ FD ]
Line_398 $$ if (hasMarkerNames) -->Line_400 $$ if (hasMap) [ CD ]
Line_400 $$ if (hasMap) -->Line_401 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_401 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_391 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_393 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_397 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_399 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_401 $$ outputIndex = new int[] -->Line_401 $$ outputIndex = new int[] [ FD ]
Line_400 $$ if (hasMap) -->Line_403 $$ outputIndex = new int[] [ CD ]
Line_383 $$ int[] outputIndex-->Line_403 $$ outputIndex = new int[] [ FD ]
Line_387 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_389 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_391 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_393 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_397 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_399 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_401 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_403 $$ outputIndex = new int[] -->Line_403 $$ outputIndex = new int[] [ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_406 $$ nrows = alleleEstimateResults.size()[ CD ]
Line_351 $$ int nrows = markerTestResults.size()-->Line_406 $$ nrows = alleleEstimateResults.size()[ FD ]
Line_406 $$ nrows = alleleEstimateResults.size()-->Line_406 $$ nrows = alleleEstimateResults.size()[ FD ]
Line_406 $$ nrows = alleleEstimateResults.size()-->Line_406 $$ nrows = alleleEstimateResults.size()[ CD ]
Line_4 $$ ArrayList<Object[]> alleleEstimateResults = new ArrayList<Object[]>()-->Line_406 $$ nrows = alleleEstimateResults.size()[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_407 $$ table = new Object[nrows][][ CD ]
Line_352 $$ Object[][] table = new Object[nrows][]-->Line_407 $$ table = new Object[nrows][][ FD ]
Line_407 $$ table = new Object[nrows][]-->Line_407 $$ table = new Object[nrows][][ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_408 $$ numberOfColumns = outputIndex.length[ CD ]
Line_353 $$ int numberOfColumns = outputList.size()-->Line_408 $$ numberOfColumns = outputIndex.length[ FD ]
Line_408 $$ numberOfColumns = outputIndex.length-->Line_408 $$ numberOfColumns = outputIndex.length[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_409 $$ colnames = new String[numberOfColumns][ CD ]
Line_354 $$ String[] colnames = new String[numberOfColumns]-->Line_409 $$ colnames = new String[numberOfColumns][ FD ]
Line_409 $$ colnames = new String[numberOfColumns]-->Line_409 $$ colnames = new String[numberOfColumns][ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_353 $$ int numberOfColumns = outputList.size()-->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_408 $$ numberOfColumns = outputIndex.length-->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ CD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ CD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_411 $$ colnames[j] = columnLabels[outputIndex[j]][ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_351 $$ int nrows = markerTestResults.size()-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_406 $$ nrows = alleleEstimateResults.size()-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_414 $$ table[i] = new Object[numberOfColumns][ CD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ CD ]
Line_415 $$ Object[] result = alleleEstimateResults.get(i)-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ CD ]
Line_4 $$ ArrayList<Object[]> alleleEstimateResults = new ArrayList<Object[]>()-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ CD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ CD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_353 $$ int numberOfColumns = outputList.size()-->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_408 $$ numberOfColumns = outputIndex.length-->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ CD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ CD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_417 $$ table[i][j] = result[outputIndex[j]][ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_420 $$ tableName = new StringBuilder("GLM allele estimates for ")[ CD ]
Line_363 $$ StringBuilder tableName = new StringBuilder("GLM_marker_test_")-->Line_420 $$ tableName = new StringBuilder("GLM allele estimates for ")[ FD ]
Line_420 $$ tableName = new StringBuilder("GLM allele estimates for ")-->Line_420 $$ tableName = new StringBuilder("GLM allele estimates for ")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_421 $$ tableName.append(dataset.getName())[ CD ]
Line_363 $$ StringBuilder tableName = new StringBuilder("GLM_marker_test_")-->Line_421 $$ tableName.append(dataset.getName())[ FD ]
Line_420 $$ tableName = new StringBuilder("GLM allele estimates for ")-->Line_421 $$ tableName.append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_421 $$ tableName.append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_423 $$ comments.append("GLM: fixed effect linear model\n")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_423 $$ comments.append("GLM: fixed effect linear model\n")[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_423 $$ comments.append("GLM: fixed effect linear model\n")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_424 $$ comments.append("Data set: ").append(dataset.getName())[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_424 $$ comments.append("Data set: ").append(dataset.getName())[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_424 $$ comments.append("Data set: ").append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_424 $$ comments.append("Data set: ").append(dataset.getName())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_425 $$ comments.append("\nmodel: trait = mean")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_425 $$ comments.append("\nmodel: trait = mean")[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_425 $$ comments.append("\nmodel: trait = mean")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ CD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ CD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_427 $$ comments.append(" + ")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_427 $$ comments.append(" + ")[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_427 $$ comments.append(" + ")[ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) [ CD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ CD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ CD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_431 $$ comments.append(" + ")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_431 $$ comments.append(" + ")[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_431 $$ comments.append(" + ")[ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_7 $$ MarkerPhenotypeAdapter theAdapter-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_9 $$ theAdapter = new MarkerPhenotypeAdapter((MarkerPhenotype) dataset.getData())-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_10 $$ theAdapter = new MarkerPhenotypeAdapter((Phenotype) dataset.getData())-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_434 $$ comments.append(" + marker")[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_434 $$ comments.append(" + marker")[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_434 $$ comments.append(" + marker")[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_435 $$ if (writeOutputToFile) [ CD ]
Line_435 $$ if (writeOutputToFile) -->Line_436 $$ comments.append("\nOutput written to " + blueFile.getPath())[ CD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_436 $$ comments.append("\nOutput written to " + blueFile.getPath())[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_436 $$ comments.append("\nOutput written to " + blueFile.getPath())[ FD ]
Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")-->Line_436 $$ comments.append("\nOutput written to " + blueFile.getPath())[ FD ]
Line_23 $$ File blueFile = null-->Line_436 $$ comments.append("\nOutput written to " + blueFile.getPath())[ FD ]
Line_41 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs.txt")-->Line_436 $$ comments.append("\nOutput written to " + blueFile.getPath())[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_438 $$ TableReport alleleEstimateReport = new SimpleTableReport("Allele Estimates", colnames, table)[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_439 $$ resultset.add(new Datum(tableName.toString(), alleleEstimateReport, comments.toString()))[ CD ]
Line_350 $$ LinkedList<Datum> resultset = new LinkedList<Datum>()-->Line_439 $$ resultset.add(new Datum(tableName.toString(), alleleEstimateReport, comments.toString()))[ FD ]
Line_363 $$ StringBuilder tableName = new StringBuilder("GLM_marker_test_")-->Line_439 $$ resultset.add(new Datum(tableName.toString(), alleleEstimateReport, comments.toString()))[ FD ]
Line_420 $$ tableName = new StringBuilder("GLM allele estimates for ")-->Line_439 $$ resultset.add(new Datum(tableName.toString(), alleleEstimateReport, comments.toString()))[ FD ]
Line_365 $$ StringBuilder comments = new StringBuilder("Tests of Marker-Phenotype Association")-->Line_439 $$ resultset.add(new Datum(tableName.toString(), alleleEstimateReport, comments.toString()))[ FD ]
Line_422 $$ comments = new StringBuilder("Marker allele effect estimates\n")-->Line_439 $$ resultset.add(new Datum(tableName.toString(), alleleEstimateReport, comments.toString()))[ FD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_440 $$ fireProgress(0)[ CD ]
Line_2 $$ private LinkedList<Datum> processDatum(Datum dataset) -->Line_441 $$ return resultset[ CD ]
Line_39 $$ ftestFile = new File(outputbase + "_" + datasetNameNoSpace + "_ftest" + count + ".txt")-->Line_37 $$ while (ftestFile.exists()) [ FD ]
Line_45 $$ blueFile = new File(outputbase + "_" + datasetNameNoSpace + "_BLUEs" + count + ".txt")-->Line_43 $$ while (blueFile.exists()) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ FD ]
Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) -->Line_71 $$ for (int i = 0; i < numberOfPermutations; i++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ FD ]
Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) -->Line_72 $$ for (int j = 0; j < numberOfPhenotypes; j++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)[ FD ]
Line_77 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)[ FD ]
Line_78 $$ double[] phenotypeData = theAdapter.getPhenotypeValues(ph)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_79 $$ boolean[] missing = theAdapter.getMissingPhenotypes(ph)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_80 $$ ArrayList<String[]> factorList = MarkerPhenotypeAdapterUtils.getFactorList(theAdapter, ph, missing)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_81 $$ ArrayList<double[]> covariateList = MarkerPhenotypeAdapterUtils.getCovariateList(theAdapter, ph, missing)-->Line_84 $$ permutedData = permuteData(phenotypeData, missing, factorList, covariateList, theAdapter)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) [ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_87 $$ Object[] markerData = theAdapter.getMarkerValue(ph, m)[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_89 $$ System.arraycopy(missing, 0, finalMissing, 0, missing.length)[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_90 $$ MarkerPhenotypeAdapterUtils.updateMissing(finalMissing, theAdapter.getMissingMarkers(ph, m))[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_91 $$ int[] nonmissingRows = MarkerPhenotypeAdapterUtils.getNonMissingIndex(finalMissing)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_120 $$ boolean markerIsDiscrete = theAdapter.isMarkerDiscrete(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_126 $$ markerEffect = new FactorModelEffect(markerLevels, true, theAdapter.getMarkerName(m))[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_131 $$ markerEffect = new CovariateModelEffect(markerdbl, theAdapter.getMarkerName(m))[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_161 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sfnm.getInverseOfXtX(), markerdf)[ FD ]
Line_88 $$ boolean[] finalMissing = new boolean[missing.length]-->Line_177 $$ updatePermutationPValues(ph, permutedData, nonMissingIndex(missing, finalMissing), getXfromModelEffects(modelEffects), sflm.getInverseOfXtX(), markerdf)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_183 $$ String marker = theAdapter.getMarkerName(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_185 $$ String locus = theAdapter.getLocusName(m)[ FD ]
Line_86 $$ for (int m = 0; m < numberOfMarkers; m++) -->Line_186 $$ Integer site = new Integer(theAdapter.getLocusPosition(m))[ FD ]
Line_272 $$ percentFinished = tmpPercent-->Line_271 $$ if (tmpPercent > percentFinished) [ FD ]
Line_272 $$ percentFinished = tmpPercent-->Line_273 $$ fireProgress(percentFinished)[ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]]-->Line_94 $$ for (int i = 0; i < numberOfObs; i++) y[i] = phenotypeData[nonmissingRows[i]][ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_101 $$ for (int f = 0; f < numberOfFactors; f++) [ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_102 $$ String[] afactor = factorList.get(f)[ FD ]
Line_103 $$ String[] factorLabels = new String[numberOfObs]-->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_101 $$ for (int f = 0; f < numberOfFactors; f++) -->Line_105 $$ FactorModelEffect fme = new FactorModelEffect(ModelEffectUtils.getIntegerLevels(factorLabels), true, theAdapter.getFactorName(f))[ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]]-->Line_104 $$ for (int i = 0; i < numberOfObs; i++) factorLabels[i] = afactor[nonmissingRows[i]][ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) [ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_113 $$ double[] covariateData = covariateList.get(c)[ FD ]
Line_111 $$ for (int c = 0; c < numberOfCovariates; c++) -->Line_115 $$ modelEffects.add(new CovariateModelEffect(covar, theAdapter.getCovariateName(c)))[ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]]-->Line_114 $$ for (int i = 0; i < numberOfObs; i++) covar[i] = covariateData[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]]-->Line_124 $$ for (int i = 0; i < numberOfObs; i++) markers[i] = markerData[nonmissingRows[i]][ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()-->Line_130 $$ for (int i = 0; i < numberOfObs; i++) markerdbl[i] = ((Double) markerData[nonmissingRows[i]]).doubleValue()[ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]]-->Line_138 $$ for (int i = 0; i < numberOfObs; i++) taxaSublist[i] = taxa[nonmissingRows[i]][ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])-->Line_218 $$ for (int i = 1; i < 16; i++) sb.append("\t").append(result[i])[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) [ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_246 $$ result[7] = alleleNames.get(i)[ FD ]
Line_237 $$ for (int i = 0; i < numberOfMarkerAlleles; i++) -->Line_247 $$ if (i == numberOfMarkerAlleles - 1)[ FD ]
Line_249 $$ StringBuilder sb = new StringBuilder()-->Line_250 $$ sb.append(result[0])[ FD ]
Line_249 $$ StringBuilder sb = new StringBuilder()-->Line_253 $$ BLUEWriter.write(sb.toString())[ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ FD ]
Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])-->Line_251 $$ for (int j = 1; j < 9; j++) sb.append("\t").append(result[j])[ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) [ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_288 $$ for (int ph = 0; ph < numberOfPhenotypes; ph++) -->Line_290 $$ traitnameMap.put(theAdapter.getPhenotypeName(ph), ph)[ FD ]
Line_301 $$ while ((input = tempReader.readLine()) != null) -->Line_302 $$ data = tab.split(input)[ FD ]
Line_303 $$ String trait = data[0]-->Line_305 $$ int ph = traitnameMap.get(trait)[ FD ]
Line_304 $$ double pval = Double.parseDouble(data[7])-->Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_307 $$ if (ndx < 0)[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_307 $$ if (ndx < 0)[ FD ]
Line_308 $$ ndx = 1-->Line_307 $$ if (ndx < 0)[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_308 $$ ndx = 1-->Line_307 $$ ndx = -ndx - 1[ FD ]
Line_306 $$ int ndx = Arrays.binarySearch(minP[ph], pval)-->Line_308 $$ if (ndx == 0)[ FD ]
Line_307 $$ ndx = -ndx - 1-->Line_308 $$ if (ndx == 0)[ FD ]
Line_308 $$ ndx = 1-->Line_308 $$ if (ndx == 0)[ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_311 $$ for (int i = 1; i < data.length; i++) -->Line_311 $$ for (int i = 1; i < data.length; i++) [ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)[ FD ]
Line_349 $$ for (int i = 9; i < 16; i++) outputList.add(i)-->Line_349 $$ outputList.add(i)[ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_357 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_357 $$ for (int i = 0; i < nrows; i++) -->Line_359 $$ Object[] result = markerTestResults.get(i)[ FD ]
Line_360 $$ count = 0-->Line_361 $$ table[i][count++] = result[ndx][ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_369 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_371 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_373 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_375 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_410 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_410 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_413 $$ for (int i = 0; i < nrows; i++) [ FD ]
Line_413 $$ for (int i = 0; i < nrows; i++) -->Line_415 $$ Object[] result = alleleEstimateResults.get(i)[ FD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_416 $$ for (int j = 0; j < numberOfColumns; j++) -->Line_416 $$ for (int j = 0; j < numberOfColumns; j++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) [ FD ]
Line_426 $$ for (int i = 0; i < theAdapter.getNumberOfFactors(); i++) -->Line_428 $$ comments.append(theAdapter.getFactorName(i))[ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) [ FD ]
Line_430 $$ for (int i = 0; i < theAdapter.getNumberOfCovariates(); i++) -->Line_432 $$ comments.append(theAdapter.getCovariateName(i))[ FD ]
