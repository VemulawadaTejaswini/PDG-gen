Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean check(int timeout) [ CD ]
Line_2 $$ public boolean check(int timeout) -->Line_3 $$ StringBuilder result = null[ CD ]
Line_2 $$ public boolean check(int timeout) -->Line_4 $$ java.net.URL url[ CD ]
Line_2 $$ public boolean check(int timeout) -->Line_5 $$ java.io.InputStream in = null[ CD ]
Line_4 $$ java.net.URL url-->Line_7 $$ url = new java.net.URL(location + "/prisms?method=test")[ FD ]
Line_7 $$ url = new java.net.URL(location + "/prisms?method=test")-->Line_7 $$ url = new java.net.URL(location + "/prisms?method=test")[ FD ]
Line_8 $$ java.net.URLConnection conn = url.openConnection()-->Line_8 $$ java.net.URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ java.net.URL url-->Line_8 $$ java.net.URLConnection conn = url.openConnection()[ FD ]
Line_7 $$ url = new java.net.URL(location + "/prisms?method=test")-->Line_8 $$ java.net.URLConnection conn = url.openConnection()[ FD ]
Line_8 $$ java.net.URLConnection conn = url.openConnection()-->Line_9 $$ conn.setConnectTimeout(timeout)[ FD ]
Line_2 $$ public boolean check(int timeout) -->Line_9 $$ conn.setConnectTimeout(timeout)[ FD ]
Line_5 $$ java.io.InputStream in = null-->Line_10 $$ in = conn.getInputStream()[ FD ]
Line_10 $$ in = conn.getInputStream()-->Line_10 $$ in = conn.getInputStream()[ FD ]
Line_10 $$ in = conn.getInputStream()-->Line_10 $$ in = conn.getInputStream()[ CD ]
Line_8 $$ java.net.URLConnection conn = url.openConnection()-->Line_10 $$ in = conn.getInputStream()[ FD ]
Line_3 $$ StringBuilder result = null-->Line_12 $$ result = new StringBuilder()[ FD ]
Line_12 $$ result = new StringBuilder()-->Line_12 $$ result = new StringBuilder()[ FD ]
Line_13 $$ int read = reader.read()-->Line_13 $$ int read = reader.read()[ CD ]
Line_11 $$ java.io.Reader reader = new java.io.InputStreamReader(in)-->Line_13 $$ int read = reader.read()[ FD ]
Line_13 $$ int read = reader.read()-->Line_14 $$ while (read >= 0) [ FD ]
Line_14 $$ while (read >= 0) -->Line_15 $$ result.append((char) read)[ CD ]
Line_3 $$ StringBuilder result = null-->Line_15 $$ result.append((char) read)[ FD ]
Line_12 $$ result = new StringBuilder()-->Line_15 $$ result.append((char) read)[ FD ]
Line_14 $$ while (read >= 0) -->Line_16 $$ read = reader.read()[ CD ]
Line_16 $$ read = reader.read()-->Line_16 $$ read = reader.read()[ FD ]
Line_13 $$ int read = reader.read()-->Line_16 $$ read = reader.read()[ FD ]
Line_16 $$ read = reader.read()-->Line_16 $$ read = reader.read()[ CD ]
Line_11 $$ java.io.Reader reader = new java.io.InputStreamReader(in)-->Line_16 $$ read = reader.read()[ FD ]
Line_5 $$ java.io.InputStream in = null-->Line_20 $$ if (in != null)[ FD ]
Line_10 $$ in = conn.getInputStream()-->Line_20 $$ if (in != null)[ FD ]
Line_5 $$ java.io.InputStream in = null-->Line_21 $$ in.close()[ FD ]
Line_10 $$ in = conn.getInputStream()-->Line_21 $$ in.close()[ FD ]
Line_2 $$ public boolean check(int timeout) -->Line_25 $$ return result != null && result.toString().startsWith("success")[ CD ]
Line_3 $$ StringBuilder result = null-->Line_25 $$ return result != null && result.toString().startsWith("success")[ FD ]
Line_12 $$ result = new StringBuilder()-->Line_25 $$ return result != null && result.toString().startsWith("success")[ FD ]
Line_16 $$ read = reader.read()-->Line_14 $$ while (read >= 0) [ FD ]
Line_16 $$ read = reader.read()-->Line_14 $$ while (read >= 0) [ FD ]
