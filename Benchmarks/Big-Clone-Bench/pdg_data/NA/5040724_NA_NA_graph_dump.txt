Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Document parse(Document document) [ CD ]
Line_2 $$ public Document parse(Document document) -->Line_3 $$ CSSCompilerBuilder compilerBuilder = new CSSCompilerBuilder()[ CD ]
Line_2 $$ public Document parse(Document document) -->Line_4 $$ StyleSheetCompilerFactory compilerFactory = getStyleSheetCompilerFactory()[ CD ]
Line_4 $$ StyleSheetCompilerFactory compilerFactory = getStyleSheetCompilerFactory()-->Line_4 $$ StyleSheetCompilerFactory compilerFactory = getStyleSheetCompilerFactory()[ CD ]
Line_2 $$ public Document parse(Document document) -->Line_5 $$ compilerBuilder.setStyleSheetCompilerFactory(compilerFactory)[ CD ]
Line_3 $$ CSSCompilerBuilder compilerBuilder = new CSSCompilerBuilder()-->Line_5 $$ compilerBuilder.setStyleSheetCompilerFactory(compilerFactory)[ FD ]
Line_4 $$ StyleSheetCompilerFactory compilerFactory = getStyleSheetCompilerFactory()-->Line_5 $$ compilerBuilder.setStyleSheetCompilerFactory(compilerFactory)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_6 $$ CSSCompiler cssCompiler = compilerBuilder.getCSSCompiler()[ CD ]
Line_6 $$ CSSCompiler cssCompiler = compilerBuilder.getCSSCompiler()-->Line_6 $$ CSSCompiler cssCompiler = compilerBuilder.getCSSCompiler()[ CD ]
Line_3 $$ CSSCompilerBuilder compilerBuilder = new CSSCompilerBuilder()-->Line_6 $$ CSSCompiler cssCompiler = compilerBuilder.getCSSCompiler()[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_7 $$ CompiledStyleSheet defaultCompiledStyleSheet[ CD ]
Line_9 $$ URL url = getClass().getResource("/com/volantis/mcs/runtime/default.css")-->Line_9 $$ URL url = getClass().getResource("/com/volantis/mcs/runtime/default.css")[ CD ]
Line_10 $$ InputStream stream = url.openStream()-->Line_10 $$ InputStream stream = url.openStream()[ CD ]
Line_9 $$ URL url = getClass().getResource("/com/volantis/mcs/runtime/default.css")-->Line_10 $$ InputStream stream = url.openStream()[ FD ]
Line_7 $$ CompiledStyleSheet defaultCompiledStyleSheet-->Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)[ FD ]
Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)-->Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)[ FD ]
Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)-->Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)[ CD ]
Line_6 $$ CSSCompiler cssCompiler = compilerBuilder.getCSSCompiler()-->Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_15 $$ StylingFactory stylingFactory = StylingFactory.getDefaultInstance()[ CD ]
Line_15 $$ StylingFactory stylingFactory = StylingFactory.getDefaultInstance()-->Line_15 $$ StylingFactory stylingFactory = StylingFactory.getDefaultInstance()[ CD ]
Line_2 $$ public Document parse(Document document) -->Line_16 $$ StylingEngine stylingEngine = stylingFactory.createStylingEngine(new InlineStyleSheetCompilerFactory(StylingFunctions.getResolver()))[ CD ]
Line_16 $$ StylingEngine stylingEngine = stylingFactory.createStylingEngine(new InlineStyleSheetCompilerFactory(StylingFunctions.getResolver()))-->Line_16 $$ StylingEngine stylingEngine = stylingFactory.createStylingEngine(new InlineStyleSheetCompilerFactory(StylingFunctions.getResolver()))[ CD ]
Line_15 $$ StylingFactory stylingFactory = StylingFactory.getDefaultInstance()-->Line_16 $$ StylingEngine stylingEngine = stylingFactory.createStylingEngine(new InlineStyleSheetCompilerFactory(StylingFunctions.getResolver()))[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_17 $$ stylingEngine.pushStyleSheet(defaultCompiledStyleSheet)[ CD ]
Line_16 $$ StylingEngine stylingEngine = stylingFactory.createStylingEngine(new InlineStyleSheetCompilerFactory(StylingFunctions.getResolver()))-->Line_17 $$ stylingEngine.pushStyleSheet(defaultCompiledStyleSheet)[ FD ]
Line_7 $$ CompiledStyleSheet defaultCompiledStyleSheet-->Line_17 $$ stylingEngine.pushStyleSheet(defaultCompiledStyleSheet)[ FD ]
Line_11 $$ defaultCompiledStyleSheet = cssCompiler.compile(new InputStreamReader(stream), null)-->Line_17 $$ stylingEngine.pushStyleSheet(defaultCompiledStyleSheet)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_18 $$ DocumentStyler styler = new DocumentStyler(stylingEngine, XDIMESchemata.CDM_NAMESPACE)[ CD ]
Line_2 $$ public Document parse(Document document) -->Line_19 $$ styler.style(document)[ CD ]
Line_18 $$ DocumentStyler styler = new DocumentStyler(stylingEngine, XDIMESchemata.CDM_NAMESPACE)-->Line_19 $$ styler.style(document)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_19 $$ styler.style(document)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_20 $$ DOMWalker walker = new DOMWalker(new WalkingDOMVisitorStub() [ CD ]
Line_20 $$ DOMWalker walker = new DOMWalker(new WalkingDOMVisitorStub() -->Line_22 $$ if (element.getStyles() == null) [ CD ]
Line_20 $$ DOMWalker walker = new DOMWalker(new WalkingDOMVisitorStub() -->Line_22 $$ if (element.getStyles() == null) [ FD ]
Line_20 $$ DOMWalker walker = new DOMWalker(new WalkingDOMVisitorStub() -->Line_23 $$ throw new IllegalArgumentException("element " + element.getName() + " has no styles")[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_27 $$ walker.walk(document)[ CD ]
Line_20 $$ DOMWalker walker = new DOMWalker(new WalkingDOMVisitorStub() -->Line_27 $$ walker.walk(document)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_27 $$ walker.walk(document)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_29 $$ document = transformer.transform(null, document)[ CD ]
Line_2 $$ public Document parse(Document document) -->Line_29 $$ document = transformer.transform(null, document)[ FD ]
Line_2 $$ public Document parse(Document document) -->Line_30 $$ return document[ CD ]
