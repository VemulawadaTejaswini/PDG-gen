Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void readData() throws IOException [ CD ]
Line_2 $$ public void readData() throws IOException -->Line_5 $$ URL url = getClass().getResource("resources/tuneGridMaster.dat")[ CD ]
Line_5 $$ URL url = getClass().getResource("resources/tuneGridMaster.dat")-->Line_5 $$ URL url = getClass().getResource("resources/tuneGridMaster.dat")[ CD ]
Line_2 $$ public void readData() throws IOException -->Line_6 $$ InputStream is = url.openStream()[ CD ]
Line_6 $$ InputStream is = url.openStream()-->Line_6 $$ InputStream is = url.openStream()[ CD ]
Line_5 $$ URL url = getClass().getResource("resources/tuneGridMaster.dat")-->Line_6 $$ InputStream is = url.openStream()[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_7 $$ InputStreamReader isr = new InputStreamReader(is)[ CD ]
Line_2 $$ public void readData() throws IOException -->Line_8 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_2 $$ public void readData() throws IOException -->Line_9 $$ s = br.readLine()[ CD ]
Line_8 $$ BufferedReader br = new BufferedReader(isr)-->Line_9 $$ s = br.readLine()[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_10 $$ StringTokenizer st = new StringTokenizer(s)[ CD ]
Line_2 $$ public void readData() throws IOException -->Line_11 $$ tune_x[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_11 $$ tune_x[i][j] = Double.parseDouble(st.nextToken())-->Line_11 $$ tune_x[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_11 $$ tune_x[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_14 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_14 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())-->Line_14 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_14 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_15 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_15 $$ kd[i][j] = Double.parseDouble(st.nextToken())-->Line_15 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_15 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_16 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_16 $$ kfs[i][j] = Double.parseDouble(st.nextToken())-->Line_16 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_16 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_17 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_17 $$ kfl[i][j] = Double.parseDouble(st.nextToken())-->Line_17 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_17 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_18 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_18 $$ kdee[i][j] = Double.parseDouble(st.nextToken())-->Line_18 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_18 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_19 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_19 $$ kdc[i][j] = Double.parseDouble(st.nextToken())-->Line_19 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_19 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_20 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_20 $$ kfc[i][j] = Double.parseDouble(st.nextToken())-->Line_20 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_20 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public void readData() throws IOException -->Line_22 $$ int k = 0[ CD ]
Line_2 $$ public void readData() throws IOException -->Line_23 $$ while ((s = br.readLine()) != null) [ CD ]
Line_2 $$ public void readData() throws IOException -->Line_2 $$ public void readData() throws IOException [ CD ]
Line_8 $$ BufferedReader br = new BufferedReader(isr)-->Line_23 $$ while ((s = br.readLine()) != null) [ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_24 $$ st = new StringTokenizer(s)[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_24 $$ st = new StringTokenizer(s)[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_24 $$ st = new StringTokenizer(s)[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_25 $$ temp_new = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_25 $$ temp_new = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_25 $$ temp_new = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_26 $$ if (temp_new != temp_prev) [ CD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_32 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_32 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())-->Line_32 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_32 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_32 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_33 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_33 $$ kd[i][j] = Double.parseDouble(st.nextToken())-->Line_33 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_33 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_33 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_34 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_34 $$ kfs[i][j] = Double.parseDouble(st.nextToken())-->Line_34 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_34 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_34 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_35 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_35 $$ kfl[i][j] = Double.parseDouble(st.nextToken())-->Line_35 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_35 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_35 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_36 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_36 $$ kdee[i][j] = Double.parseDouble(st.nextToken())-->Line_36 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_36 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_36 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_37 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_37 $$ kdc[i][j] = Double.parseDouble(st.nextToken())-->Line_37 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_37 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_37 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_38 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_38 $$ kfc[i][j] = Double.parseDouble(st.nextToken())-->Line_38 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ CD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_38 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_10 $$ StringTokenizer st = new StringTokenizer(s)-->Line_38 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_23 $$ while ((s = br.readLine()) != null) -->Line_42 $$ k++[ CD ]
Line_22 $$ int k = 0-->Line_42 $$ k++[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_25 $$ temp_new = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_32 $$ tune_y[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_33 $$ kd[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_34 $$ kfs[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_35 $$ kfl[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_36 $$ kdee[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_37 $$ kdc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
Line_24 $$ st = new StringTokenizer(s)-->Line_38 $$ kfc[i][j] = Double.parseDouble(st.nextToken())[ FD ]
