Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException [ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_3 $$ if (fileList == null || fileList.size() == 0)[ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_3 $$ if (fileList == null || fileList.size() == 0)[ FD ]
Line_3 $$ if (fileList == null || fileList.size() == 0)-->Line_3 $$ return[ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_4 $$ FileOutputStream fos = new FileOutputStream(zipFileName)[ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_5 $$ ZipOutputStream zos = new ZipOutputStream(fos)[ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_6 $$ Iterator iter = fileList.iterator()[ CD ]
Line_6 $$ Iterator iter = fileList.iterator()-->Line_6 $$ Iterator iter = fileList.iterator()[ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_6 $$ Iterator iter = fileList.iterator()[ FD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_7 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException [ CD ]
Line_7 $$ while (iter.hasNext()) -->Line_7 $$ while (iter.hasNext()) [ CD ]
Line_6 $$ Iterator iter = fileList.iterator()-->Line_7 $$ while (iter.hasNext()) [ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_8 $$ String fileName = (String) iter.next()[ CD ]
Line_6 $$ Iterator iter = fileList.iterator()-->Line_8 $$ String fileName = (String) iter.next()[ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))[ CD ]
Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))-->Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))[ CD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))[ FD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))[ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_10 $$ String shortName = "unknown"[ CD ]
Line_7 $$ while (iter.hasNext()) -->Line_11 $$ if (ind < fileName.length() - 1)[ CD ]
Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))-->Line_11 $$ if (ind < fileName.length() - 1)[ FD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_11 $$ if (ind < fileName.length() - 1)[ FD ]
Line_11 $$ if (ind < fileName.length() - 1)-->Line_11 $$ shortName = fileName.substring(ind + 1)[ CD ]
Line_10 $$ String shortName = "unknown"-->Line_11 $$ shortName = fileName.substring(ind + 1)[ FD ]
Line_11 $$ shortName = fileName.substring(ind + 1)-->Line_11 $$ shortName = fileName.substring(ind + 1)[ FD ]
Line_11 $$ shortName = fileName.substring(ind + 1)-->Line_11 $$ shortName = fileName.substring(ind + 1)[ CD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_11 $$ shortName = fileName.substring(ind + 1)[ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_12 $$ zos.putNextEntry(new ZipEntry(shortName))[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(fos)-->Line_12 $$ zos.putNextEntry(new ZipEntry(shortName))[ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_13 $$ FileInputStream fis = new FileInputStream(fileName)[ CD ]
Line_7 $$ while (iter.hasNext()) -->Line_14 $$ byte[] buf = new byte[10000][ CD ]
Line_7 $$ while (iter.hasNext()) -->Line_15 $$ int bytesRead[ CD ]
Line_7 $$ while (iter.hasNext()) -->Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)[ CD ]
Line_7 $$ while (iter.hasNext()) -->Line_7 $$ while (iter.hasNext()) [ CD ]
Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)-->Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)[ FD ]
Line_15 $$ int bytesRead-->Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)[ FD ]
Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)-->Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)[ CD ]
Line_13 $$ FileInputStream fis = new FileInputStream(fileName)-->Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)[ FD ]
Line_14 $$ byte[] buf = new byte[10000]-->Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)[ FD ]
Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)-->Line_16 $$ zos.write(buf, 0, bytesRead)[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(fos)-->Line_16 $$ zos.write(buf, 0, bytesRead)[ FD ]
Line_14 $$ byte[] buf = new byte[10000]-->Line_16 $$ zos.write(buf, 0, bytesRead)[ FD ]
Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)-->Line_16 $$ zos.write(buf, 0, bytesRead)[ FD ]
Line_15 $$ int bytesRead-->Line_16 $$ zos.write(buf, 0, bytesRead)[ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_17 $$ fis.close()[ CD ]
Line_13 $$ FileInputStream fis = new FileInputStream(fileName)-->Line_17 $$ fis.close()[ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_18 $$ zos.closeEntry()[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(fos)-->Line_18 $$ zos.closeEntry()[ FD ]
Line_2 $$ public static void compressWithZip(Vector fileList, String zipFileName) throws IOException -->Line_20 $$ zos.close()[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(fos)-->Line_20 $$ zos.close()[ FD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))[ FD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))[ FD ]
Line_9 $$ int ind = Math.max(fileName.lastIndexOf('/'), fileName.lastIndexOf('\\'))-->Line_11 $$ if (ind < fileName.length() - 1)[ FD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_11 $$ if (ind < fileName.length() - 1)[ FD ]
Line_8 $$ String fileName = (String) iter.next()-->Line_11 $$ shortName = fileName.substring(ind + 1)[ FD ]
Line_13 $$ FileInputStream fis = new FileInputStream(fileName)-->Line_17 $$ fis.close()[ FD ]
Line_16 $$ while ((bytesRead = fis.read(buf)) > 0) zos.write(buf, 0, bytesRead)-->Line_16 $$ zos.write(buf, 0, bytesRead)[ FD ]
