Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException [ CD ]
Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException -->Line_3 $$ if (!destFile.exists()) [ CD ]
Line_3 $$ if (!destFile.exists()) -->Line_3 $$ if (!destFile.exists()) [ CD ]
Line_3 $$ if (!destFile.exists()) -->Line_3 $$ if (!destFile.exists()) [ CD ]
Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException -->Line_3 $$ if (!destFile.exists()) [ FD ]
Line_3 $$ if (!destFile.exists()) -->Line_4 $$ destFile.createNewFile()[ CD ]
Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException -->Line_4 $$ destFile.createNewFile()[ FD ]
Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException -->Line_6 $$ FileChannel source = null[ CD ]
Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException -->Line_7 $$ FileChannel destination = null[ CD ]
Line_2 $$ public void copyFile(File sourceFile, File destFile) throws IOException -->Line_8 $$ Closer c = new Closer()[ CD ]
Line_6 $$ FileChannel source = null-->Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())[ FD ]
Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())-->Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())[ FD ]
Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())-->Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())[ CD ]
Line_8 $$ Closer c = new Closer()-->Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())[ FD ]
Line_7 $$ FileChannel destination = null-->Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())[ FD ]
Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())-->Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())[ FD ]
Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())-->Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())[ CD ]
Line_8 $$ Closer c = new Closer()-->Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())[ FD ]
Line_7 $$ FileChannel destination = null-->Line_12 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_11 $$ destination = c.register(new FileOutputStream(destFile).getChannel())-->Line_12 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_6 $$ FileChannel source = null-->Line_12 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())-->Line_12 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_6 $$ FileChannel source = null-->Line_12 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_10 $$ source = c.register(new FileInputStream(sourceFile).getChannel())-->Line_12 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_8 $$ Closer c = new Closer()-->Line_14 $$ c.doNotThrow()[ FD ]
Line_8 $$ Closer c = new Closer()-->Line_17 $$ c.closeAll()[ FD ]
