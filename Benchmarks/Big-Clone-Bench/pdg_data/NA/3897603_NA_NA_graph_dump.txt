Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void updateDBModel(Tasks task) throws Exception [ CD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_3 $$ task.setOperationName("Updating DB Model..")[ CD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_3 $$ task.setOperationName("Updating DB Model..")[ FD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_4 $$ int localVersion = getLocalModelVersion()[ CD ]
Line_4 $$ int localVersion = getLocalModelVersion()-->Line_4 $$ int localVersion = getLocalModelVersion()[ CD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_5 $$ int currentVersion = 0[ CD ]
Line_5 $$ int currentVersion = 0-->Line_7 $$ currentVersion = getModelVersion()[ FD ]
Line_7 $$ currentVersion = getModelVersion()-->Line_7 $$ currentVersion = getModelVersion()[ FD ]
Line_7 $$ currentVersion = getModelVersion()-->Line_7 $$ currentVersion = getModelVersion()[ CD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_13 $$ boolean autoCommit = getConn().getAutoCommit()[ CD ]
Line_13 $$ boolean autoCommit = getConn().getAutoCommit()-->Line_13 $$ boolean autoCommit = getConn().getAutoCommit()[ CD ]
Line_4 $$ int localVersion = getLocalModelVersion()-->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ CD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ CD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_17 $$ task.setStatus("Updating to version " + version)[ CD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_17 $$ task.setStatus("Updating to version " + version)[ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")[ CD ]
Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")-->Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")[ CD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_19 $$ if (in == null) [ CD ]
Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")-->Line_19 $$ if (in == null) [ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_22 $$ executeSqlScript(task, in)[ CD ]
Line_2 $$ public void updateDBModel(Tasks task) throws Exception -->Line_22 $$ executeSqlScript(task, in)[ FD ]
Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")-->Line_22 $$ executeSqlScript(task, in)[ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_23 $$ Statement st = getConn().createStatement()[ CD ]
Line_23 $$ Statement st = getConn().createStatement()-->Line_23 $$ Statement st = getConn().createStatement()[ CD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_24 $$ st.executeUpdate("INSERT INTO `Version` VALUES (" + version + ", NOW())")[ CD ]
Line_23 $$ Statement st = getConn().createStatement()-->Line_24 $$ st.executeUpdate("INSERT INTO `Version` VALUES (" + version + ", NOW())")[ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_25 $$ st.close()[ CD ]
Line_23 $$ Statement st = getConn().createStatement()-->Line_25 $$ st.close()[ FD ]
Line_13 $$ boolean autoCommit = getConn().getAutoCommit()-->Line_31 $$ getConn().setAutoCommit(autoCommit)[ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ FD ]
Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) -->Line_16 $$ for (int version = currentVersion + 1; version <= localVersion; version++) [ FD ]
Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")-->Line_19 $$ if (in == null) [ FD ]
Line_18 $$ InputStream in = EDACCApp.class.getClassLoader().getResourceAsStream("edacc/resources/db_version/" + version + ".sql")-->Line_22 $$ executeSqlScript(task, in)[ FD ]
Line_23 $$ Statement st = getConn().createStatement()-->Line_24 $$ st.executeUpdate("INSERT INTO `Version` VALUES (" + version + ", NOW())")[ FD ]
Line_23 $$ Statement st = getConn().createStatement()-->Line_25 $$ st.close()[ FD ]
