Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException [ CD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_3 $$ DynamicJasperDesign jd = null[ CD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_5 $$ if (dr.getTemplateFileName() != null) [ FD ]
Line_5 $$ if (dr.getTemplateFileName() != null) -->Line_6 $$ log.info("loading template file: " + dr.getTemplateFileName())[ CD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_6 $$ log.info("loading template file: " + dr.getTemplateFileName())[ FD ]
Line_5 $$ if (dr.getTemplateFileName() != null) -->Line_7 $$ log.info("Attemping to find the file directly in the file system...")[ CD ]
Line_5 $$ if (dr.getTemplateFileName() != null) -->Line_8 $$ File file = new File(dr.getTemplateFileName())[ CD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_8 $$ File file = new File(dr.getTemplateFileName())[ FD ]
Line_5 $$ if (dr.getTemplateFileName() != null) -->Line_9 $$ if (file.exists()) [ CD ]
Line_8 $$ File file = new File(dr.getTemplateFileName())-->Line_9 $$ if (file.exists()) [ FD ]
Line_9 $$ if (file.exists()) -->Line_9 $$ if (file.exists()) [ CD ]
Line_8 $$ File file = new File(dr.getTemplateFileName())-->Line_9 $$ if (file.exists()) [ FD ]
Line_9 $$ if (file.exists()) -->Line_10 $$ JasperDesign jdesign = JRXmlLoader.load(file)[ CD ]
Line_10 $$ JasperDesign jdesign = JRXmlLoader.load(file)-->Line_10 $$ JasperDesign jdesign = JRXmlLoader.load(file)[ CD ]
Line_8 $$ File file = new File(dr.getTemplateFileName())-->Line_10 $$ JasperDesign jdesign = JRXmlLoader.load(file)[ FD ]
Line_9 $$ if (file.exists()) -->Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ CD ]
Line_3 $$ DynamicJasperDesign jd = null-->Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ CD ]
Line_10 $$ JasperDesign jdesign = JRXmlLoader.load(file)-->Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_9 $$ if (file.exists()) -->Line_13 $$ log.info("Not found: Attemping to find the file in the classpath...")[ CD ]
Line_9 $$ if (file.exists()) -->Line_14 $$ URL url = DynamicJasperHelper.class.getClassLoader().getResource(dr.getTemplateFileName())[ CD ]
Line_14 $$ URL url = DynamicJasperHelper.class.getClassLoader().getResource(dr.getTemplateFileName())-->Line_14 $$ URL url = DynamicJasperHelper.class.getClassLoader().getResource(dr.getTemplateFileName())[ CD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_14 $$ URL url = DynamicJasperHelper.class.getClassLoader().getResource(dr.getTemplateFileName())[ FD ]
Line_9 $$ if (file.exists()) -->Line_15 $$ JasperDesign jdesign = JRXmlLoader.load(url.openStream())[ CD ]
Line_14 $$ URL url = DynamicJasperHelper.class.getClassLoader().getResource(dr.getTemplateFileName())-->Line_15 $$ JasperDesign jdesign = JRXmlLoader.load(url.openStream())[ FD ]
Line_9 $$ if (file.exists()) -->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ CD ]
Line_3 $$ DynamicJasperDesign jd = null-->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ CD ]
Line_10 $$ JasperDesign jdesign = JRXmlLoader.load(file)-->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)[ FD ]
Line_5 $$ if (dr.getTemplateFileName() != null) -->Line_18 $$ JasperDesignHelper.populateReportOptionsFromDesign(jd, dr)[ CD ]
Line_3 $$ DynamicJasperDesign jd = null-->Line_18 $$ JasperDesignHelper.populateReportOptionsFromDesign(jd, dr)[ FD ]
Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_18 $$ JasperDesignHelper.populateReportOptionsFromDesign(jd, dr)[ FD ]
Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_18 $$ JasperDesignHelper.populateReportOptionsFromDesign(jd, dr)[ FD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_18 $$ JasperDesignHelper.populateReportOptionsFromDesign(jd, dr)[ FD ]
Line_5 $$ if (dr.getTemplateFileName() != null) -->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ CD ]
Line_3 $$ DynamicJasperDesign jd = null-->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ FD ]
Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ FD ]
Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ FD ]
Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)-->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ FD ]
Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)-->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ CD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)[ FD ]
Line_3 $$ DynamicJasperDesign jd = null-->Line_22 $$ registerParameters(jd, dr)[ FD ]
Line_11 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_22 $$ registerParameters(jd, dr)[ FD ]
Line_16 $$ jd = DJJRDesignHelper.downCast(jdesign, dr)-->Line_22 $$ registerParameters(jd, dr)[ FD ]
Line_20 $$ jd = DJJRDesignHelper.getNewDesign(dr)-->Line_22 $$ registerParameters(jd, dr)[ FD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_22 $$ registerParameters(jd, dr)[ FD ]
Line_2 $$ protected static DynamicJasperDesign generateJasperDesign(DynamicReport dr) throws CoreException -->Line_28 $$ return jd[ CD ]
