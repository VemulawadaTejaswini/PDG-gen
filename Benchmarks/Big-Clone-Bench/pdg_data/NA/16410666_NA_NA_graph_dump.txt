Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void backup(File source) throws BackupException [ CD ]
Line_4 $$ int index = source.getAbsolutePath().lastIndexOf(".")-->Line_4 $$ int index = source.getAbsolutePath().lastIndexOf(".")[ CD ]
Line_2 $$ public void backup(File source) throws BackupException -->Line_4 $$ int index = source.getAbsolutePath().lastIndexOf(".")[ FD ]
Line_4 $$ int index = source.getAbsolutePath().lastIndexOf(".")-->Line_5 $$ if (index == -1)[ FD ]
Line_5 $$ if (index == -1)-->Line_5 $$ return[ CD ]
Line_4 $$ int index = source.getAbsolutePath().lastIndexOf(".")-->Line_6 $$ File dest = new File(source.getAbsolutePath().substring(0, index) + ".bak")[ FD ]
Line_2 $$ public void backup(File source) throws BackupException -->Line_6 $$ File dest = new File(source.getAbsolutePath().substring(0, index) + ".bak")[ FD ]
Line_7 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_7 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()[ CD ]
Line_8 $$ FileChannel dstChannel = new FileOutputStream(dest).getChannel()-->Line_8 $$ FileChannel dstChannel = new FileOutputStream(dest).getChannel()[ CD ]
Line_8 $$ FileChannel dstChannel = new FileOutputStream(dest).getChannel()-->Line_9 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_7 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_9 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_7 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_9 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_7 $$ FileChannel srcChannel = new FileInputStream(source).getChannel()-->Line_10 $$ srcChannel.close()[ FD ]
Line_8 $$ FileChannel dstChannel = new FileOutputStream(dest).getChannel()-->Line_11 $$ dstChannel.close()[ FD ]
