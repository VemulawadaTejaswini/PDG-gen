Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void unzipData(ZipFile zipfile, ZipEntry entry) [ CD ]
Line_2 $$ private void unzipData(ZipFile zipfile, ZipEntry entry) -->Line_3 $$ if (entry.getName().equals("backUpExternalInfo.out")) [ CD ]
Line_3 $$ if (entry.getName().equals("backUpExternalInfo.out")) -->Line_3 $$ if (entry.getName().equals("backUpExternalInfo.out")) [ CD ]
Line_2 $$ private void unzipData(ZipFile zipfile, ZipEntry entry) -->Line_3 $$ if (entry.getName().equals("backUpExternalInfo.out")) [ FD ]
Line_3 $$ if (entry.getName().equals("backUpExternalInfo.out")) -->Line_4 $$ File outputFile = new File("temp", entry.getName())[ CD ]
Line_2 $$ private void unzipData(ZipFile zipfile, ZipEntry entry) -->Line_4 $$ File outputFile = new File("temp", entry.getName())[ FD ]
Line_3 $$ if (entry.getName().equals("backUpExternalInfo.out")) -->Line_5 $$ if (!outputFile.getParentFile().exists()) [ CD ]
Line_5 $$ if (!outputFile.getParentFile().exists()) -->Line_5 $$ if (!outputFile.getParentFile().exists()) [ CD ]
Line_5 $$ if (!outputFile.getParentFile().exists()) -->Line_5 $$ if (!outputFile.getParentFile().exists()) [ CD ]
Line_4 $$ File outputFile = new File("temp", entry.getName())-->Line_5 $$ if (!outputFile.getParentFile().exists()) [ FD ]
Line_5 $$ if (!outputFile.getParentFile().exists()) -->Line_6 $$ outputFile.getParentFile().mkdirs()[ CD ]
Line_4 $$ File outputFile = new File("temp", entry.getName())-->Line_6 $$ outputFile.getParentFile().mkdirs()[ FD ]
Line_2 $$ private void unzipData(ZipFile zipfile, ZipEntry entry) -->Line_9 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_2 $$ private void unzipData(ZipFile zipfile, ZipEntry entry) -->Line_9 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))[ FD ]
Line_9 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_11 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_10 $$ BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile))-->Line_11 $$ IOUtils.copy(inputStream, outputStream)[ FD ]
Line_10 $$ BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile))-->Line_12 $$ outputStream.close()[ FD ]
Line_9 $$ BufferedInputStream inputStream = new BufferedInputStream(zipfile.getInputStream(entry))-->Line_13 $$ inputStream.close()[ FD ]
