Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void update(String statement, SyrupConnection con, boolean do_log) throws Exception [ CD ]
Line_2 $$ private void update(String statement, SyrupConnection con, boolean do_log) throws Exception -->Line_3 $$ Statement s = null[ CD ]
Line_3 $$ Statement s = null-->Line_5 $$ s = con.createStatement()[ FD ]
Line_5 $$ s = con.createStatement()-->Line_5 $$ s = con.createStatement()[ FD ]
Line_5 $$ s = con.createStatement()-->Line_5 $$ s = con.createStatement()[ CD ]
Line_2 $$ private void update(String statement, SyrupConnection con, boolean do_log) throws Exception -->Line_5 $$ s = con.createStatement()[ FD ]
Line_3 $$ Statement s = null-->Line_6 $$ s.executeUpdate(statement)[ FD ]
Line_5 $$ s = con.createStatement()-->Line_6 $$ s.executeUpdate(statement)[ FD ]
Line_2 $$ private void update(String statement, SyrupConnection con, boolean do_log) throws Exception -->Line_6 $$ s.executeUpdate(statement)[ FD ]
Line_2 $$ private void update(String statement, SyrupConnection con, boolean do_log) throws Exception -->Line_7 $$ con.commit()[ FD ]
Line_9 $$ if (do_log) -->Line_10 $$ logger.log(Level.INFO, "Update failed. Transaction is rolled back", e)[ CD ]
Line_2 $$ private void update(String statement, SyrupConnection con, boolean do_log) throws Exception -->Line_12 $$ con.rollback()[ FD ]
