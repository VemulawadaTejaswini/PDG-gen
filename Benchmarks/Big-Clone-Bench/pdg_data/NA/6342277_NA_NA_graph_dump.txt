Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute() [ CD ]
Line_2 $$ public void execute() -->Line_3 $$ Connection conn = null[ CD ]
Line_3 $$ Connection conn = null-->Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)[ CD ]
Line_3 $$ Connection conn = null-->Line_7 $$ conn.setAutoCommit(false)[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_7 $$ conn.setAutoCommit(false)[ FD ]
Line_9 $$ Statement stmt = conn.createStatement()-->Line_9 $$ Statement stmt = conn.createStatement()[ CD ]
Line_3 $$ Connection conn = null-->Line_9 $$ Statement stmt = conn.createStatement()[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_9 $$ Statement stmt = conn.createStatement()[ FD ]
Line_11 $$ ResultSet rs = stmt.executeQuery(sql)-->Line_11 $$ ResultSet rs = stmt.executeQuery(sql)[ CD ]
Line_9 $$ Statement stmt = conn.createStatement()-->Line_11 $$ ResultSet rs = stmt.executeQuery(sql)[ FD ]
Line_12 $$ List<Map<String, String>> res = DbUtil.listFromRS(rs)-->Line_12 $$ List<Map<String, String>> res = DbUtil.listFromRS(rs)[ CD ]
Line_11 $$ ResultSet rs = stmt.executeQuery(sql)-->Line_12 $$ List<Map<String, String>> res = DbUtil.listFromRS(rs)[ FD ]
Line_13 $$ if (null != res && !res.isEmpty()) -->Line_13 $$ if (null != res && !res.isEmpty()) [ CD ]
Line_12 $$ List<Map<String, String>> res = DbUtil.listFromRS(rs)-->Line_13 $$ if (null != res && !res.isEmpty()) [ FD ]
Line_13 $$ if (null != res && !res.isEmpty()) -->Line_15 $$ List<String> keys = new ArrayList<String>()[ CD ]
Line_16 $$ for (Map<String, String> map : res) -->Line_17 $$ docs.add(convert(map))[ FD ]
Line_18 $$ String key = map.get(pk)-->Line_18 $$ String key = map.get(pk)[ CD ]
Line_16 $$ for (Map<String, String> map : res) -->Line_18 $$ String key = map.get(pk)[ FD ]
Line_15 $$ List<String> keys = new ArrayList<String>()-->Line_19 $$ keys.add(key)[ FD ]
Line_18 $$ String key = map.get(pk)-->Line_19 $$ keys.add(key)[ FD ]
Line_13 $$ if (null != res && !res.isEmpty()) -->Line_21 $$ String sql2 = updateSQL + " where " + pk + " in (" + CollectionUtil.toString(keys) + ")"[ CD ]
Line_15 $$ List<String> keys = new ArrayList<String>()-->Line_21 $$ String sql2 = updateSQL + " where " + pk + " in (" + CollectionUtil.toString(keys) + ")"[ FD ]
Line_13 $$ if (null != res && !res.isEmpty()) -->Line_22 $$ l.debug(sql2)[ CD ]
Line_21 $$ String sql2 = updateSQL + " where " + pk + " in (" + CollectionUtil.toString(keys) + ")"-->Line_22 $$ l.debug(sql2)[ FD ]
Line_13 $$ if (null != res && !res.isEmpty()) -->Line_23 $$ stmt.executeUpdate(sql2)[ CD ]
Line_9 $$ Statement stmt = conn.createStatement()-->Line_23 $$ stmt.executeUpdate(sql2)[ FD ]
Line_21 $$ String sql2 = updateSQL + " where " + pk + " in (" + CollectionUtil.toString(keys) + ")"-->Line_23 $$ stmt.executeUpdate(sql2)[ FD ]
Line_13 $$ if (null != res && !res.isEmpty()) -->Line_24 $$ conn.commit()[ CD ]
Line_3 $$ Connection conn = null-->Line_24 $$ conn.commit()[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_24 $$ conn.commit()[ FD ]
Line_3 $$ Connection conn = null-->Line_28 $$ if (null != conn) [ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_28 $$ if (null != conn) [ FD ]
Line_3 $$ Connection conn = null-->Line_30 $$ conn.rollback()[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_30 $$ conn.rollback()[ FD ]
Line_3 $$ Connection conn = null-->Line_38 $$ if (null != conn) [ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_38 $$ if (null != conn) [ FD ]
Line_38 $$ if (null != conn) -->Line_39 $$ conn.close()[ CD ]
Line_3 $$ Connection conn = null-->Line_39 $$ conn.close()[ FD ]
Line_6 $$ conn = DriverManager.getConnection(jdbcUrl, username, password)-->Line_39 $$ conn.close()[ FD ]
Line_38 $$ if (null != conn) -->Line_40 $$ l.debug("Disconnected from database")[ CD ]
Line_2 $$ public void execute() -->Line_46 $$ if (null != docs && !docs.isEmpty()) [ CD ]
Line_46 $$ if (null != docs && !docs.isEmpty()) -->Line_46 $$ if (null != docs && !docs.isEmpty()) [ CD ]
Line_46 $$ if (null != docs && !docs.isEmpty()) -->Line_47 $$ triggerEvent("EO")[ CD ]
Line_46 $$ if (null != docs && !docs.isEmpty()) -->Line_49 $$ triggerEvent("EMPTY")[ CD ]
