Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void listAndInstantiateServiceProviders() [ CD ]
Line_2 $$ private void listAndInstantiateServiceProviders() -->Line_3 $$ final Enumeration<URL> resources = ClassLoaderHelper.getResources(SERVICES_FILE, ServiceManager.class)[ CD ]
Line_3 $$ final Enumeration<URL> resources = ClassLoaderHelper.getResources(SERVICES_FILE, ServiceManager.class)-->Line_3 $$ final Enumeration<URL> resources = ClassLoaderHelper.getResources(SERVICES_FILE, ServiceManager.class)[ CD ]
Line_2 $$ private void listAndInstantiateServiceProviders() -->Line_4 $$ String name[ CD ]
Line_6 $$ while (resources.hasMoreElements()) -->Line_6 $$ while (resources.hasMoreElements()) [ CD ]
Line_3 $$ final Enumeration<URL> resources = ClassLoaderHelper.getResources(SERVICES_FILE, ServiceManager.class)-->Line_6 $$ while (resources.hasMoreElements()) [ FD ]
Line_6 $$ while (resources.hasMoreElements()) -->Line_7 $$ URL url = resources.nextElement()[ CD ]
Line_7 $$ URL url = resources.nextElement()-->Line_7 $$ URL url = resources.nextElement()[ CD ]
Line_3 $$ final Enumeration<URL> resources = ClassLoaderHelper.getResources(SERVICES_FILE, ServiceManager.class)-->Line_7 $$ URL url = resources.nextElement()[ FD ]
Line_6 $$ while (resources.hasMoreElements()) -->Line_8 $$ InputStream stream = url.openStream()[ CD ]
Line_8 $$ InputStream stream = url.openStream()-->Line_8 $$ InputStream stream = url.openStream()[ CD ]
Line_7 $$ URL url = resources.nextElement()-->Line_8 $$ InputStream stream = url.openStream()[ FD ]
Line_11 $$ name = reader.readLine()-->Line_11 $$ name = reader.readLine()[ FD ]
Line_4 $$ String name-->Line_11 $$ name = reader.readLine()[ FD ]
Line_11 $$ name = reader.readLine()-->Line_11 $$ name = reader.readLine()[ CD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream), 100)-->Line_11 $$ name = reader.readLine()[ FD ]
Line_11 $$ name = reader.readLine()-->Line_12 $$ while (name != null) [ FD ]
Line_4 $$ String name-->Line_12 $$ while (name != null) [ FD ]
Line_12 $$ while (name != null) -->Line_13 $$ name = name.trim()[ CD ]
Line_13 $$ name = name.trim()-->Line_13 $$ name = name.trim()[ FD ]
Line_11 $$ name = reader.readLine()-->Line_13 $$ name = name.trim()[ FD ]
Line_4 $$ String name-->Line_13 $$ name = name.trim()[ FD ]
Line_13 $$ name = name.trim()-->Line_13 $$ name = name.trim()[ CD ]
Line_13 $$ name = name.trim()-->Line_13 $$ name = name.trim()[ FD ]
Line_11 $$ name = reader.readLine()-->Line_13 $$ name = name.trim()[ FD ]
Line_4 $$ String name-->Line_13 $$ name = name.trim()[ FD ]
Line_12 $$ while (name != null) -->Line_14 $$ if (!name.startsWith("#")) [ CD ]
Line_14 $$ if (!name.startsWith("#")) -->Line_14 $$ if (!name.startsWith("#")) [ CD ]
Line_14 $$ if (!name.startsWith("#")) -->Line_14 $$ if (!name.startsWith("#")) [ CD ]
Line_13 $$ name = name.trim()-->Line_14 $$ if (!name.startsWith("#")) [ FD ]
Line_11 $$ name = reader.readLine()-->Line_14 $$ if (!name.startsWith("#")) [ FD ]
Line_4 $$ String name-->Line_14 $$ if (!name.startsWith("#")) [ FD ]
Line_14 $$ if (!name.startsWith("#")) -->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ CD ]
Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")-->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ CD ]
Line_13 $$ name = name.trim()-->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ FD ]
Line_11 $$ name = reader.readLine()-->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ FD ]
Line_4 $$ String name-->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ FD ]
Line_14 $$ if (!name.startsWith("#")) -->Line_16 $$ managedProviders.put(serviceProviderClass, new ServiceProviderWrapper(serviceProvider))[ CD ]
Line_12 $$ while (name != null) -->Line_18 $$ name = reader.readLine()[ CD ]
Line_13 $$ name = name.trim()-->Line_18 $$ name = reader.readLine()[ FD ]
Line_18 $$ name = reader.readLine()-->Line_18 $$ name = reader.readLine()[ FD ]
Line_11 $$ name = reader.readLine()-->Line_18 $$ name = reader.readLine()[ FD ]
Line_4 $$ String name-->Line_18 $$ name = reader.readLine()[ FD ]
Line_18 $$ name = reader.readLine()-->Line_18 $$ name = reader.readLine()[ CD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream), 100)-->Line_18 $$ name = reader.readLine()[ FD ]
Line_8 $$ InputStream stream = url.openStream()-->Line_21 $$ stream.close()[ FD ]
Line_7 $$ URL url = resources.nextElement()-->Line_8 $$ InputStream stream = url.openStream()[ FD ]
Line_10 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream), 100)-->Line_11 $$ name = reader.readLine()[ FD ]
Line_8 $$ InputStream stream = url.openStream()-->Line_21 $$ stream.close()[ FD ]
Line_13 $$ name = name.trim()-->Line_12 $$ while (name != null) [ FD ]
Line_18 $$ name = reader.readLine()-->Line_12 $$ while (name != null) [ FD ]
Line_13 $$ name = name.trim()-->Line_12 $$ while (name != null) [ FD ]
Line_18 $$ name = reader.readLine()-->Line_12 $$ while (name != null) [ FD ]
Line_13 $$ name = name.trim()-->Line_13 $$ name = name.trim()[ FD ]
Line_18 $$ name = reader.readLine()-->Line_13 $$ name = name.trim()[ FD ]
Line_13 $$ name = name.trim()-->Line_14 $$ if (!name.startsWith("#")) [ FD ]
Line_18 $$ name = reader.readLine()-->Line_14 $$ if (!name.startsWith("#")) [ FD ]
Line_13 $$ name = name.trim()-->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ FD ]
Line_18 $$ name = reader.readLine()-->Line_15 $$ final ServiceProvider<?> serviceProvider = ClassLoaderHelper.instanceFromName(ServiceProvider.class, name, ServiceManager.class, "service provider")[ FD ]
