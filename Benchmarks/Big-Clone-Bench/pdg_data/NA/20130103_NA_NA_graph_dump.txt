Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException [ CD ]
Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException -->Line_3 $$ ClassLoader ldr = Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ ClassLoader ldr = Thread.currentThread().getContextClassLoader()-->Line_3 $$ ClassLoader ldr = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException -->Line_4 $$ Collection<Class<? extends Page>> pages = new ArrayList<Class<? extends Page>>()[ CD ]
Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException -->Line_5 $$ Enumeration<URL> e = ldr.getResources("META-INF/services/" + Page.class.getName())[ CD ]
Line_5 $$ Enumeration<URL> e = ldr.getResources("META-INF/services/" + Page.class.getName())-->Line_5 $$ Enumeration<URL> e = ldr.getResources("META-INF/services/" + Page.class.getName())[ CD ]
Line_3 $$ ClassLoader ldr = Thread.currentThread().getContextClassLoader()-->Line_5 $$ Enumeration<URL> e = ldr.getResources("META-INF/services/" + Page.class.getName())[ FD ]
Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException -->Line_6 $$ while (e.hasMoreElements()) [ CD ]
Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException -->Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException [ CD ]
Line_6 $$ while (e.hasMoreElements()) -->Line_6 $$ while (e.hasMoreElements()) [ CD ]
Line_5 $$ Enumeration<URL> e = ldr.getResources("META-INF/services/" + Page.class.getName())-->Line_6 $$ while (e.hasMoreElements()) [ FD ]
Line_6 $$ while (e.hasMoreElements()) -->Line_7 $$ URL url = e.nextElement()[ CD ]
Line_7 $$ URL url = e.nextElement()-->Line_7 $$ URL url = e.nextElement()[ CD ]
Line_5 $$ Enumeration<URL> e = ldr.getResources("META-INF/services/" + Page.class.getName())-->Line_7 $$ URL url = e.nextElement()[ FD ]
Line_6 $$ while (e.hasMoreElements()) -->Line_8 $$ InputStream is = url.openStream()[ CD ]
Line_8 $$ InputStream is = url.openStream()-->Line_8 $$ InputStream is = url.openStream()[ CD ]
Line_7 $$ URL url = e.nextElement()-->Line_8 $$ InputStream is = url.openStream()[ FD ]
Line_12 $$ while (true) -->Line_13 $$ String line = r.readLine()[ CD ]
Line_13 $$ String line = r.readLine()-->Line_13 $$ String line = r.readLine()[ CD ]
Line_11 $$ BufferedReader r = new BufferedReader(new InputStreamReader(is, "UTF-8"))-->Line_13 $$ String line = r.readLine()[ FD ]
Line_12 $$ while (true) -->Line_14 $$ if (line == null)[ CD ]
Line_13 $$ String line = r.readLine()-->Line_14 $$ if (line == null)[ FD ]
Line_12 $$ while (true) -->Line_15 $$ int comment = line.indexOf('#')[ CD ]
Line_15 $$ int comment = line.indexOf('#')-->Line_15 $$ int comment = line.indexOf('#')[ CD ]
Line_13 $$ String line = r.readLine()-->Line_15 $$ int comment = line.indexOf('#')[ FD ]
Line_12 $$ while (true) -->Line_16 $$ if (comment >= 0)[ CD ]
Line_15 $$ int comment = line.indexOf('#')-->Line_16 $$ if (comment >= 0)[ FD ]
Line_16 $$ if (comment >= 0)-->Line_16 $$ line = line.substring(0, comment)[ CD ]
Line_13 $$ String line = r.readLine()-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_16 $$ line = line.substring(0, comment)[ CD ]
Line_13 $$ String line = r.readLine()-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_15 $$ int comment = line.indexOf('#')-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_12 $$ while (true) -->Line_17 $$ String name = line.trim()[ CD ]
Line_17 $$ String name = line.trim()-->Line_17 $$ String name = line.trim()[ CD ]
Line_13 $$ String line = r.readLine()-->Line_17 $$ String name = line.trim()[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_17 $$ String name = line.trim()[ FD ]
Line_12 $$ while (true) -->Line_18 $$ if (name.length() == 0)[ CD ]
Line_17 $$ String name = line.trim()-->Line_18 $$ if (name.length() == 0)[ FD ]
Line_12 $$ while (true) -->Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)[ CD ]
Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)-->Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)[ CD ]
Line_17 $$ String name = line.trim()-->Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)[ FD ]
Line_3 $$ ClassLoader ldr = Thread.currentThread().getContextClassLoader()-->Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)[ FD ]
Line_12 $$ while (true) -->Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)[ CD ]
Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)-->Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)[ CD ]
Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)-->Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)[ FD ]
Line_12 $$ while (true) -->Line_21 $$ pages.add(impl)[ CD ]
Line_4 $$ Collection<Class<? extends Page>> pages = new ArrayList<Class<? extends Page>>()-->Line_21 $$ pages.add(impl)[ FD ]
Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)-->Line_21 $$ pages.add(impl)[ FD ]
Line_8 $$ InputStream is = url.openStream()-->Line_27 $$ is.close()[ FD ]
Line_2 $$ public static Collection<Class<? extends Page>> loadPages() throws IOException -->Line_32 $$ return pages[ CD ]
Line_7 $$ URL url = e.nextElement()-->Line_8 $$ InputStream is = url.openStream()[ FD ]
Line_8 $$ InputStream is = url.openStream()-->Line_27 $$ is.close()[ FD ]
Line_13 $$ String line = r.readLine()-->Line_14 $$ if (line == null)[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_14 $$ if (line == null)[ FD ]
Line_13 $$ String line = r.readLine()-->Line_15 $$ int comment = line.indexOf('#')[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_15 $$ int comment = line.indexOf('#')[ FD ]
Line_15 $$ int comment = line.indexOf('#')-->Line_16 $$ if (comment >= 0)[ FD ]
Line_13 $$ String line = r.readLine()-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_15 $$ int comment = line.indexOf('#')-->Line_16 $$ line = line.substring(0, comment)[ FD ]
Line_13 $$ String line = r.readLine()-->Line_17 $$ String name = line.trim()[ FD ]
Line_16 $$ line = line.substring(0, comment)-->Line_17 $$ String name = line.trim()[ FD ]
Line_17 $$ String name = line.trim()-->Line_18 $$ if (name.length() == 0)[ FD ]
Line_17 $$ String name = line.trim()-->Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)[ FD ]
Line_19 $$ Class<?> clz = Class.forName(name, true, ldr)-->Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)[ FD ]
Line_20 $$ Class<? extends Page> impl = clz.asSubclass(Page.class)-->Line_21 $$ pages.add(impl)[ FD ]
