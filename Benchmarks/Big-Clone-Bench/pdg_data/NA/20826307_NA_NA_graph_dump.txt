Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void createZipFromDataset(String localResourceId, File dataset, File metadata) [ CD ]
Line_2 $$ public static void createZipFromDataset(String localResourceId, File dataset, File metadata) -->Line_3 $$ CommunicationLogger.warning("System entered ZipFactory")[ CD ]
Line_5 $$ String tmpDir = System.getProperty("java.io.tmpdir")-->Line_5 $$ String tmpDir = System.getProperty("java.io.tmpdir")[ CD ]
Line_8 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(outFilename))-->Line_11 $$ out.putNextEntry(new ZipEntry(dataset.getName()))[ FD ]
Line_2 $$ public static void createZipFromDataset(String localResourceId, File dataset, File metadata) -->Line_11 $$ out.putNextEntry(new ZipEntry(dataset.getName()))[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_12 $$ int len-->Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ CD ]
Line_10 $$ FileInputStream in = new FileInputStream(dataset)-->Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_9 $$ byte[] buf = new byte[1024]-->Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_13 $$ out.write(buf, 0, len)[ CD ]
Line_8 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(outFilename))-->Line_13 $$ out.write(buf, 0, len)[ FD ]
Line_9 $$ byte[] buf = new byte[1024]-->Line_13 $$ out.write(buf, 0, len)[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_13 $$ out.write(buf, 0, len)[ FD ]
Line_12 $$ int len-->Line_13 $$ out.write(buf, 0, len)[ FD ]
Line_10 $$ FileInputStream in = new FileInputStream(dataset)-->Line_14 $$ in = new FileInputStream(metadata)[ FD ]
Line_14 $$ in = new FileInputStream(metadata)-->Line_14 $$ in = new FileInputStream(metadata)[ FD ]
Line_8 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(outFilename))-->Line_15 $$ out.putNextEntry(new ZipEntry(metadata.getName()))[ FD ]
Line_2 $$ public static void createZipFromDataset(String localResourceId, File dataset, File metadata) -->Line_15 $$ out.putNextEntry(new ZipEntry(metadata.getName()))[ FD ]
Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_12 $$ int len-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ CD ]
Line_10 $$ FileInputStream in = new FileInputStream(dataset)-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_14 $$ in = new FileInputStream(metadata)-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_9 $$ byte[] buf = new byte[1024]-->Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)[ FD ]
Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ out.write(buf, 0, len)[ CD ]
Line_8 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(outFilename))-->Line_16 $$ out.write(buf, 0, len)[ FD ]
Line_9 $$ byte[] buf = new byte[1024]-->Line_16 $$ out.write(buf, 0, len)[ FD ]
Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ out.write(buf, 0, len)[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ out.write(buf, 0, len)[ FD ]
Line_12 $$ int len-->Line_16 $$ out.write(buf, 0, len)[ FD ]
Line_8 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(outFilename))-->Line_17 $$ out.closeEntry()[ FD ]
Line_10 $$ FileInputStream in = new FileInputStream(dataset)-->Line_18 $$ in.close()[ FD ]
Line_14 $$ in = new FileInputStream(metadata)-->Line_18 $$ in.close()[ FD ]
Line_8 $$ ZipOutputStream out = new ZipOutputStream(new FileOutputStream(outFilename))-->Line_19 $$ out.close()[ FD ]
Line_13 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_13 $$ out.write(buf, 0, len)[ FD ]
Line_16 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len)-->Line_16 $$ out.write(buf, 0, len)[ FD ]
