Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) [ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_3 $$ link.setStatus(RSLink.STATUS_WAITING)[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_3 $$ link.setStatus(RSLink.STATUS_WAITING)[ FD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_4 $$ Object[] result = new Object[2][ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_5 $$ HttpURLConnection httpConn = null[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_6 $$ BufferedReader inr = null[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_7 $$ DataOutputStream outs = null[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_8 $$ Pattern mirrorLinePattern = Pattern.compile("'<input.+checked.+type=\"radio\".+name=\"mirror\".+\\\\'.+\\\\'")[ CD ]
Line_8 $$ Pattern mirrorLinePattern = Pattern.compile("'<input.+checked.+type=\"radio\".+name=\"mirror\".+\\\\'.+\\\\'")-->Line_8 $$ Pattern mirrorLinePattern = Pattern.compile("'<input.+checked.+type=\"radio\".+name=\"mirror\".+\\\\'.+\\\\'")[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_9 $$ Pattern mirrorUrlPattern = Pattern.compile("\\\\'.+\\\\'")[ CD ]
Line_9 $$ Pattern mirrorUrlPattern = Pattern.compile("\\\\'.+\\\\'")-->Line_9 $$ Pattern mirrorUrlPattern = Pattern.compile("\\\\'.+\\\\'")[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_10 $$ Pattern counterPattern = Pattern.compile("var c=[0-9]+;")[ CD ]
Line_10 $$ Pattern counterPattern = Pattern.compile("var c=[0-9]+;")-->Line_10 $$ Pattern counterPattern = Pattern.compile("var c=[0-9]+;")[ CD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_11 $$ Pattern counterIntPattern = Pattern.compile("[0-9]+")[ CD ]
Line_11 $$ Pattern counterIntPattern = Pattern.compile("[0-9]+")-->Line_11 $$ Pattern counterIntPattern = Pattern.compile("[0-9]+")[ CD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_18 $$ httpConn.setRequestMethod("POST")[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_18 $$ httpConn.setRequestMethod("POST")[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_19 $$ httpConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_19 $$ httpConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_20 $$ httpConn.setRequestProperty("Content-Length", "" + Integer.toString(postData.getBytes().length))[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_20 $$ httpConn.setRequestProperty("Content-Length", "" + Integer.toString(postData.getBytes().length))[ FD ]
Line_16 $$ String postData = URLEncoder.encode("dl.start", "UTF-8") + "=" + URLEncoder.encode("Free", "UTF-8")-->Line_20 $$ httpConn.setRequestProperty("Content-Length", "" + Integer.toString(postData.getBytes().length))[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_21 $$ httpConn.setRequestProperty("Content-Language", "en-US")[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_21 $$ httpConn.setRequestProperty("Content-Language", "en-US")[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_22 $$ httpConn.setDoOutput(true)[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_22 $$ httpConn.setDoOutput(true)[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_23 $$ httpConn.setDoInput(true)[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_23 $$ httpConn.setDoInput(true)[ FD ]
Line_7 $$ DataOutputStream outs = null-->Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())[ FD ]
Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())-->Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())[ FD ]
Line_7 $$ DataOutputStream outs = null-->Line_25 $$ outs.writeBytes(postData)[ FD ]
Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())-->Line_25 $$ outs.writeBytes(postData)[ FD ]
Line_16 $$ String postData = URLEncoder.encode("dl.start", "UTF-8") + "=" + URLEncoder.encode("Free", "UTF-8")-->Line_25 $$ outs.writeBytes(postData)[ FD ]
Line_7 $$ DataOutputStream outs = null-->Line_26 $$ outs.flush()[ FD ]
Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())-->Line_26 $$ outs.flush()[ FD ]
Line_6 $$ BufferedReader inr = null-->Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))[ FD ]
Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))-->Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_29 $$ while ((line = inr.readLine()) != null) [ FD ]
Line_13 $$ String line = null-->Line_29 $$ while ((line = inr.readLine()) != null) [ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_29 $$ while ((line = inr.readLine()) != null) [ CD ]
Line_6 $$ BufferedReader inr = null-->Line_29 $$ while ((line = inr.readLine()) != null) [ FD ]
Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))-->Line_29 $$ while ((line = inr.readLine()) != null) [ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ FD ]
Line_28 $$ Matcher matcher = null-->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ CD ]
Line_8 $$ Pattern mirrorLinePattern = Pattern.compile("'<input.+checked.+type=\"radio\".+name=\"mirror\".+\\\\'.+\\\\'")-->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ FD ]
Line_13 $$ String line = null-->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_31 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_31 $$ if (matcher.find()) [ FD ]
Line_31 $$ if (matcher.find()) -->Line_31 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_31 $$ if (matcher.find()) [ FD ]
Line_31 $$ if (matcher.find()) -->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_28 $$ Matcher matcher = null-->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ CD ]
Line_9 $$ Pattern mirrorUrlPattern = Pattern.compile("\\\\'.+\\\\'")-->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_13 $$ String line = null-->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_31 $$ if (matcher.find()) -->Line_33 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_33 $$ if (matcher.find()) [ FD ]
Line_33 $$ if (matcher.find()) -->Line_33 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_33 $$ if (matcher.find()) [ FD ]
Line_33 $$ if (matcher.find()) -->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ CD ]
Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_14 $$ String urlLine = null-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_28 $$ Matcher matcher = null-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_28 $$ Matcher matcher = null-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_33 $$ if (matcher.find()) -->Line_35 $$ result[0] = new URL(urlLine)[ CD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_38 $$ matcher = counterPattern.matcher(line)[ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_28 $$ Matcher matcher = null-->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_38 $$ matcher = counterPattern.matcher(line)[ CD ]
Line_10 $$ Pattern counterPattern = Pattern.compile("var c=[0-9]+;")-->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_13 $$ String line = null-->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_39 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_39 $$ if (matcher.find()) [ FD ]
Line_39 $$ if (matcher.find()) -->Line_39 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_39 $$ if (matcher.find()) [ FD ]
Line_39 $$ if (matcher.find()) -->Line_40 $$ matcher = counterIntPattern.matcher(line)[ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_28 $$ Matcher matcher = null-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ CD ]
Line_11 $$ Pattern counterIntPattern = Pattern.compile("[0-9]+")-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_13 $$ String line = null-->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_39 $$ if (matcher.find()) -->Line_41 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_41 $$ if (matcher.find()) [ FD ]
Line_41 $$ if (matcher.find()) -->Line_41 $$ if (matcher.find()) [ CD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_28 $$ Matcher matcher = null-->Line_41 $$ if (matcher.find()) [ FD ]
Line_41 $$ if (matcher.find()) -->Line_42 $$ counter = new Integer(matcher.group())[ CD ]
Line_42 $$ counter = new Integer(matcher.group())-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_15 $$ Integer counter = null-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_28 $$ Matcher matcher = null-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_41 $$ if (matcher.find()) -->Line_43 $$ result[1] = counter[ CD ]
Line_42 $$ counter = new Integer(matcher.group())-->Line_43 $$ result[1] = counter[ FD ]
Line_15 $$ Integer counter = null-->Line_43 $$ result[1] = counter[ FD ]
Line_7 $$ DataOutputStream outs = null-->Line_51 $$ if (outs != null)[ FD ]
Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())-->Line_51 $$ if (outs != null)[ FD ]
Line_51 $$ if (outs != null)-->Line_51 $$ outs.close()[ CD ]
Line_7 $$ DataOutputStream outs = null-->Line_51 $$ outs.close()[ FD ]
Line_24 $$ outs = new DataOutputStream(httpConn.getOutputStream())-->Line_51 $$ outs.close()[ FD ]
Line_6 $$ BufferedReader inr = null-->Line_52 $$ if (inr != null)[ FD ]
Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))-->Line_52 $$ if (inr != null)[ FD ]
Line_52 $$ if (inr != null)-->Line_52 $$ inr.close()[ CD ]
Line_6 $$ BufferedReader inr = null-->Line_52 $$ inr.close()[ FD ]
Line_27 $$ inr = new BufferedReader(new InputStreamReader(httpConn.getInputStream()))-->Line_52 $$ inr.close()[ FD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_56 $$ if (httpConn != null)[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_56 $$ if (httpConn != null)[ FD ]
Line_56 $$ if (httpConn != null)-->Line_56 $$ httpConn.disconnect()[ CD ]
Line_5 $$ HttpURLConnection httpConn = null-->Line_56 $$ httpConn.disconnect()[ FD ]
Line_17 $$ httpConn = (HttpURLConnection) url.openConnection()-->Line_56 $$ httpConn.disconnect()[ FD ]
Line_2 $$ private Object[] retrieveSecondURL(URL url, RSLink link) -->Line_57 $$ link.setStatus(RSLink.STATUS_NOTHING)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_30 $$ matcher = mirrorLinePattern.matcher(line)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_31 $$ if (matcher.find()) [ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_32 $$ matcher = mirrorUrlPattern.matcher(line)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_33 $$ if (matcher.find()) [ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_34 $$ urlLine = matcher.group().substring(2, matcher.group().length() - 2)[ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_38 $$ matcher = counterPattern.matcher(line)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_39 $$ if (matcher.find()) [ FD ]
Line_29 $$ while ((line = inr.readLine()) != null) -->Line_40 $$ matcher = counterIntPattern.matcher(line)[ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_41 $$ if (matcher.find()) [ FD ]
Line_30 $$ matcher = mirrorLinePattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_32 $$ matcher = mirrorUrlPattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_38 $$ matcher = counterPattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_40 $$ matcher = counterIntPattern.matcher(line)-->Line_42 $$ counter = new Integer(matcher.group())[ FD ]
Line_42 $$ counter = new Integer(matcher.group())-->Line_43 $$ result[1] = counter[ FD ]
