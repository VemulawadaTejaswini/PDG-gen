Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException [ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_3 $$ URL myurl = new URL(url)[ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_4 $$ InputStream in = myurl.openStream()[ CD ]
Line_4 $$ InputStream in = myurl.openStream()-->Line_4 $$ InputStream in = myurl.openStream()[ CD ]
Line_3 $$ URL myurl = new URL(url)-->Line_4 $$ InputStream in = myurl.openStream()[ FD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_5 $$ BufferedReader page = new BufferedReader(new InputStreamReader(in))[ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_6 $$ String ior = null[ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_7 $$ ArrayList nodesAL = new ArrayList()[ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_8 $$ while ((ior = page.readLine()) != null) [ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException [ CD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_8 $$ while ((ior = page.readLine()) != null) [ FD ]
Line_6 $$ String ior = null-->Line_8 $$ while ((ior = page.readLine()) != null) [ FD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_8 $$ while ((ior = page.readLine()) != null) [ CD ]
Line_5 $$ BufferedReader page = new BufferedReader(new InputStreamReader(in))-->Line_8 $$ while ((ior = page.readLine()) != null) [ FD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_9 $$ if (ior.trim().equals(""))[ CD ]
Line_9 $$ if (ior.trim().equals(""))-->Line_9 $$ if (ior.trim().equals(""))[ CD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_9 $$ if (ior.trim().equals(""))[ FD ]
Line_6 $$ String ior = null-->Line_9 $$ if (ior.trim().equals(""))[ FD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_10 $$ nodesAL.add(ior)[ CD ]
Line_7 $$ ArrayList nodesAL = new ArrayList()-->Line_10 $$ nodesAL.add(ior)[ FD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_10 $$ nodesAL.add(ior)[ FD ]
Line_6 $$ String ior = null-->Line_10 $$ nodesAL.add(ior)[ FD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_12 $$ in.close()[ CD ]
Line_4 $$ InputStream in = myurl.openStream()-->Line_12 $$ in.close()[ FD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_13 $$ Object[] nodesOA = nodesAL.toArray()[ CD ]
Line_13 $$ Object[] nodesOA = nodesAL.toArray()-->Line_13 $$ Object[] nodesOA = nodesAL.toArray()[ CD ]
Line_7 $$ ArrayList nodesAL = new ArrayList()-->Line_13 $$ Object[] nodesOA = nodesAL.toArray()[ FD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_14 $$ Node[] nodes = new Node[nodesOA.length][ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException [ CD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ CD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ CD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ FD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ CD ]
Line_15 $$ nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ CD ]
Line_2 $$ public synchronized void connectURL(String url) throws IllegalArgumentException, IOException, MalformedURLException -->Line_16 $$ this.connect(nodes)[ CD ]
Line_14 $$ Node[] nodes = new Node[nodesOA.length]-->Line_16 $$ this.connect(nodes)[ FD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_9 $$ if (ior.trim().equals(""))[ FD ]
Line_8 $$ while ((ior = page.readLine()) != null) -->Line_10 $$ nodesAL.add(ior)[ FD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ FD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ FD ]
Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])-->Line_15 $$ for (int i = 0; i < nodesOA.length; i++) nodes[i] = TcbnetOrb.getInstance().getNode((String) nodesOA[i])[ FD ]
