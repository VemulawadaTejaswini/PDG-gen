Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_7 $$ URLConnection con = url.openConnection()-->Line_7 $$ URLConnection con = url.openConnection()[ CD ]
Line_6 $$ URL url = new URL(updatePath + "currentVersion.txt")-->Line_7 $$ URLConnection con = url.openConnection()[ FD ]
Line_7 $$ URLConnection con = url.openConnection()-->Line_8 $$ con.connect()[ FD ]
Line_7 $$ URLConnection con = url.openConnection()-->Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ FD ]
Line_10 $$ String line-->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ CD ]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))-->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_12 $$ URL fileUrl = new URL(updatePath + line)[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_13 $$ URLConnection filecon = fileUrl.openConnection()[ CD ]
Line_13 $$ URLConnection filecon = fileUrl.openConnection()-->Line_13 $$ URLConnection filecon = fileUrl.openConnection()[ CD ]
Line_12 $$ URL fileUrl = new URL(updatePath + line)-->Line_13 $$ URLConnection filecon = fileUrl.openConnection()[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_14 $$ InputStream stream = fileUrl.openStream()[ CD ]
Line_14 $$ InputStream stream = fileUrl.openStream()-->Line_14 $$ InputStream stream = fileUrl.openStream()[ CD ]
Line_12 $$ URL fileUrl = new URL(updatePath + line)-->Line_14 $$ InputStream stream = fileUrl.openStream()[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_15 $$ int oneChar, count = 0[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_16 $$ int size = filecon.getContentLength()[ CD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_16 $$ int size = filecon.getContentLength()[ CD ]
Line_13 $$ URLConnection filecon = fileUrl.openConnection()-->Line_16 $$ int size = filecon.getContentLength()[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_17 $$ jProgressBar1.setMaximum(size)[ CD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_17 $$ jProgressBar1.setMaximum(size)[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_18 $$ jProgressBar1.setValue(0)[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_19 $$ File testFile = new File(line)[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_20 $$ String build = ""[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_21 $$ for (String dirtest : line.split("/")) [ FD ]
Line_10 $$ String line-->Line_21 $$ for (String dirtest : line.split("/")) [ FD ]
Line_20 $$ String build = ""-->Line_22 $$ build += dirtest[ FD ]
Line_22 $$ build += dirtest-->Line_22 $$ build += dirtest[ FD ]
Line_21 $$ for (String dirtest : line.split("/")) -->Line_22 $$ build += dirtest[ FD ]
Line_23 $$ if (!build.contains(".")) -->Line_23 $$ if (!build.contains(".")) [ CD ]
Line_23 $$ if (!build.contains(".")) -->Line_23 $$ if (!build.contains(".")) [ CD ]
Line_20 $$ String build = ""-->Line_23 $$ if (!build.contains(".")) [ FD ]
Line_22 $$ build += dirtest-->Line_23 $$ if (!build.contains(".")) [ FD ]
Line_23 $$ if (!build.contains(".")) -->Line_24 $$ File dirfile = new File(build)[ CD ]
Line_23 $$ if (!build.contains(".")) -->Line_25 $$ if (!dirfile.exists()) [ CD ]
Line_25 $$ if (!dirfile.exists()) -->Line_25 $$ if (!dirfile.exists()) [ CD ]
Line_25 $$ if (!dirfile.exists()) -->Line_25 $$ if (!dirfile.exists()) [ CD ]
Line_24 $$ File dirfile = new File(build)-->Line_25 $$ if (!dirfile.exists()) [ FD ]
Line_25 $$ if (!dirfile.exists()) -->Line_26 $$ dirfile.mkdir()[ CD ]
Line_24 $$ File dirfile = new File(build)-->Line_26 $$ dirfile.mkdir()[ FD ]
Line_20 $$ String build = ""-->Line_29 $$ build += "/"[ FD ]
Line_22 $$ build += dirtest-->Line_29 $$ build += "/"[ FD ]
Line_29 $$ build += "/"-->Line_29 $$ build += "/"[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_31 $$ if (testFile.length() == size) [ CD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_31 $$ if (testFile.length() == size) [ FD ]
Line_19 $$ File testFile = new File(line)-->Line_31 $$ if (testFile.length() == size) [ FD ]
Line_31 $$ if (testFile.length() == size) -->Line_33 $$ transferFile(line, fileUrl, size)[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_10 $$ String line-->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_12 $$ URL fileUrl = new URL(updatePath + line)-->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_31 $$ if (testFile.length() == size) -->Line_34 $$ if (line.endsWith("documents.zip")) [ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_34 $$ if (line.endsWith("documents.zip")) [ FD ]
Line_10 $$ String line-->Line_34 $$ if (line.endsWith("documents.zip")) [ FD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_34 $$ if (line.endsWith("documents.zip")) [ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_34 $$ if (line.endsWith("documents.zip")) [ FD ]
Line_10 $$ String line-->Line_34 $$ if (line.endsWith("documents.zip")) [ FD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))[ CD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_36 $$ ZipEntry entry[ CD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_37 $$ String pathDoc = line.split("documents.zip")[0][ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_37 $$ String pathDoc = line.split("documents.zip")[0][ FD ]
Line_10 $$ String line-->Line_37 $$ String pathDoc = line.split("documents.zip")[0][ FD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_38 $$ File docDir = new File(pathDoc + "documents")[ CD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_39 $$ if (!docDir.exists()) [ CD ]
Line_39 $$ if (!docDir.exists()) -->Line_39 $$ if (!docDir.exists()) [ CD ]
Line_39 $$ if (!docDir.exists()) -->Line_39 $$ if (!docDir.exists()) [ CD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_39 $$ if (!docDir.exists()) [ FD ]
Line_39 $$ if (!docDir.exists()) -->Line_40 $$ docDir.mkdir()[ CD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_40 $$ docDir.mkdir()[ FD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_42 $$ while ((entry = in2.getNextEntry()) != null) [ CD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_34 $$ if (line.endsWith("documents.zip")) [ CD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_42 $$ while ((entry = in2.getNextEntry()) != null) [ FD ]
Line_36 $$ ZipEntry entry-->Line_42 $$ while ((entry = in2.getNextEntry()) != null) [ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_42 $$ while ((entry = in2.getNextEntry()) != null) [ CD ]
Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))-->Line_42 $$ while ((entry = in2.getNextEntry()) != null) [ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_43 $$ String outFilename = pathDoc + "documents/" + entry.getName()[ CD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_43 $$ String outFilename = pathDoc + "documents/" + entry.getName()[ FD ]
Line_36 $$ ZipEntry entry-->Line_43 $$ String outFilename = pathDoc + "documents/" + entry.getName()[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_44 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename))[ CD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_45 $$ byte[] buf = new byte[1024][ CD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_46 $$ int len[ CD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_47 $$ while ((len = in2.read(buf)) > 0) [ CD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_42 $$ while ((entry = in2.getNextEntry()) != null) [ CD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_47 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_46 $$ int len-->Line_47 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_47 $$ while ((len = in2.read(buf)) > 0) [ CD ]
Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))-->Line_47 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_45 $$ byte[] buf = new byte[1024]-->Line_47 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_48 $$ out.write(buf, 0, len)[ CD ]
Line_44 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename))-->Line_48 $$ out.write(buf, 0, len)[ FD ]
Line_45 $$ byte[] buf = new byte[1024]-->Line_48 $$ out.write(buf, 0, len)[ FD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_48 $$ out.write(buf, 0, len)[ FD ]
Line_46 $$ int len-->Line_48 $$ out.write(buf, 0, len)[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_50 $$ out.close()[ CD ]
Line_44 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename))-->Line_50 $$ out.close()[ FD ]
Line_34 $$ if (line.endsWith("documents.zip")) -->Line_52 $$ in2.close()[ CD ]
Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))-->Line_52 $$ in2.close()[ FD ]
Line_31 $$ if (testFile.length() == size) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ FD ]
Line_10 $$ String line-->Line_54 $$ if (line.endsWith("mysql.zip")) [ FD ]
Line_54 $$ if (line.endsWith("mysql.zip")) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ FD ]
Line_10 $$ String line-->Line_54 $$ if (line.endsWith("mysql.zip")) [ FD ]
Line_54 $$ if (line.endsWith("mysql.zip")) -->Line_56 $$ Enumeration entries = zipfile.entries()[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_57 $$ String pathDoc = line.split("mysql.zip")[0][ FD ]
Line_10 $$ String line-->Line_57 $$ String pathDoc = line.split("mysql.zip")[0][ FD ]
Line_54 $$ if (line.endsWith("mysql.zip")) -->Line_59 $$ if (!docDir.exists()) [ CD ]
Line_59 $$ if (!docDir.exists()) -->Line_59 $$ if (!docDir.exists()) [ CD ]
Line_59 $$ if (!docDir.exists()) -->Line_59 $$ if (!docDir.exists()) [ CD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_59 $$ if (!docDir.exists()) [ FD ]
Line_59 $$ if (!docDir.exists()) -->Line_60 $$ docDir.mkdir()[ CD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_60 $$ docDir.mkdir()[ FD ]
Line_54 $$ if (line.endsWith("mysql.zip")) -->Line_62 $$ while (entries.hasMoreElements()) [ CD ]
Line_54 $$ if (line.endsWith("mysql.zip")) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ CD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_62 $$ while (entries.hasMoreElements()) [ CD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()[ CD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_64 $$ if (entry.isDirectory()) [ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_36 $$ ZipEntry entry-->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_64 $$ if (entry.isDirectory()) -->Line_64 $$ if (entry.isDirectory()) [ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_36 $$ ZipEntry entry-->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_64 $$ if (entry.isDirectory()) -->Line_65 $$ System.err.println("Extracting directory: " + entry.getName())[ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_65 $$ System.err.println("Extracting directory: " + entry.getName())[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_65 $$ System.err.println("Extracting directory: " + entry.getName())[ FD ]
Line_36 $$ ZipEntry entry-->Line_65 $$ System.err.println("Extracting directory: " + entry.getName())[ FD ]
Line_64 $$ if (entry.isDirectory()) -->Line_66 $$ (new File(pathDoc + "mysql/" + entry.getName())).mkdir()[ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_66 $$ (new File(pathDoc + "mysql/" + entry.getName())).mkdir()[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_66 $$ (new File(pathDoc + "mysql/" + entry.getName())).mkdir()[ FD ]
Line_36 $$ ZipEntry entry-->Line_66 $$ (new File(pathDoc + "mysql/" + entry.getName())).mkdir()[ FD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_69 $$ System.err.println("Extracting file: " + entry.getName())[ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_69 $$ System.err.println("Extracting file: " + entry.getName())[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_69 $$ System.err.println("Extracting file: " + entry.getName())[ FD ]
Line_36 $$ ZipEntry entry-->Line_69 $$ System.err.println("Extracting file: " + entry.getName())[ FD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)[ CD ]
Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)-->Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)[ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)[ FD ]
Line_36 $$ ZipEntry entry-->Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)[ FD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))[ CD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))[ FD ]
Line_36 $$ ZipEntry entry-->Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))[ FD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_72 $$ byte[] buf = new byte[1024][ CD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_73 $$ int len[ CD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_74 $$ while ((len = in2.read(buf)) > 0) [ CD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_62 $$ while (entries.hasMoreElements()) [ CD ]
Line_74 $$ while ((len = in2.read(buf)) > 0) -->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_73 $$ int len-->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_46 $$ int len-->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_74 $$ while ((len = in2.read(buf)) > 0) -->Line_74 $$ while ((len = in2.read(buf)) > 0) [ CD ]
Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)-->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))-->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_72 $$ byte[] buf = new byte[1024]-->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_45 $$ byte[] buf = new byte[1024]-->Line_74 $$ while ((len = in2.read(buf)) > 0) [ FD ]
Line_74 $$ while ((len = in2.read(buf)) > 0) -->Line_75 $$ out.write(buf, 0, len)[ CD ]
Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))-->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_44 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename))-->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_72 $$ byte[] buf = new byte[1024]-->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_45 $$ byte[] buf = new byte[1024]-->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_74 $$ while ((len = in2.read(buf)) > 0) -->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_73 $$ int len-->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_46 $$ int len-->Line_75 $$ out.write(buf, 0, len)[ FD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_77 $$ in2.close()[ CD ]
Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)-->Line_77 $$ in2.close()[ FD ]
Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))-->Line_77 $$ in2.close()[ FD ]
Line_62 $$ while (entries.hasMoreElements()) -->Line_78 $$ out.close()[ CD ]
Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))-->Line_78 $$ out.close()[ FD ]
Line_44 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename))-->Line_78 $$ out.close()[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_82 $$ jProgressBar2.setValue(i + 1)[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_83 $$ labelFileProgress.setText((i + 1) + "/" + numberFiles)[ CD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) [ FD ]
Line_12 $$ URL fileUrl = new URL(updatePath + line)-->Line_13 $$ URLConnection filecon = fileUrl.openConnection()[ FD ]
Line_12 $$ URL fileUrl = new URL(updatePath + line)-->Line_14 $$ InputStream stream = fileUrl.openStream()[ FD ]
Line_13 $$ URLConnection filecon = fileUrl.openConnection()-->Line_16 $$ int size = filecon.getContentLength()[ FD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_17 $$ jProgressBar1.setMaximum(size)[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_21 $$ for (String dirtest : line.split("/")) [ FD ]
Line_21 $$ for (String dirtest : line.split("/")) -->Line_22 $$ build += dirtest[ FD ]
Line_20 $$ String build = ""-->Line_23 $$ if (!build.contains(".")) [ FD ]
Line_22 $$ build += dirtest-->Line_23 $$ if (!build.contains(".")) [ FD ]
Line_29 $$ build += "/"-->Line_23 $$ if (!build.contains(".")) [ FD ]
Line_24 $$ File dirfile = new File(build)-->Line_25 $$ if (!dirfile.exists()) [ FD ]
Line_24 $$ File dirfile = new File(build)-->Line_26 $$ dirfile.mkdir()[ FD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_31 $$ if (testFile.length() == size) [ FD ]
Line_19 $$ File testFile = new File(line)-->Line_31 $$ if (testFile.length() == size) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_12 $$ URL fileUrl = new URL(updatePath + line)-->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_16 $$ int size = filecon.getContentLength()-->Line_33 $$ transferFile(line, fileUrl, size)[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_34 $$ if (line.endsWith("documents.zip")) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_34 $$ if (line.endsWith("documents.zip")) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_37 $$ String pathDoc = line.split("documents.zip")[0][ FD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_39 $$ if (!docDir.exists()) [ FD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_40 $$ docDir.mkdir()[ FD ]
Line_35 $$ ZipInputStream in2 = new ZipInputStream(new FileInputStream(line))-->Line_52 $$ in2.close()[ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_54 $$ if (line.endsWith("mysql.zip")) [ FD ]
Line_11 $$ for (int i = 0; (line = in.readLine()) != null; i++) -->Line_57 $$ String pathDoc = line.split("mysql.zip")[0][ FD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_59 $$ if (!docDir.exists()) [ FD ]
Line_38 $$ File docDir = new File(pathDoc + "documents")-->Line_60 $$ docDir.mkdir()[ FD ]
Line_42 $$ while ((entry = in2.getNextEntry()) != null) -->Line_43 $$ String outFilename = pathDoc + "documents/" + entry.getName()[ FD ]
Line_44 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(outFilename))-->Line_50 $$ out.close()[ FD ]
Line_47 $$ while ((len = in2.read(buf)) > 0) -->Line_48 $$ out.write(buf, 0, len)[ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_64 $$ if (entry.isDirectory()) [ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_65 $$ System.err.println("Extracting directory: " + entry.getName())[ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_66 $$ (new File(pathDoc + "mysql/" + entry.getName())).mkdir()[ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_69 $$ System.err.println("Extracting file: " + entry.getName())[ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)[ FD ]
Line_63 $$ ZipEntry entry = (ZipEntry) entries.nextElement()-->Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))[ FD ]
Line_70 $$ InputStream in2 = zipfile.getInputStream(entry)-->Line_77 $$ in2.close()[ FD ]
Line_71 $$ OutputStream out = new BufferedOutputStream(new FileOutputStream(pathDoc + "mysql/" + entry.getName()))-->Line_78 $$ out.close()[ FD ]
Line_74 $$ while ((len = in2.read(buf)) > 0) -->Line_75 $$ out.write(buf, 0, len)[ FD ]
