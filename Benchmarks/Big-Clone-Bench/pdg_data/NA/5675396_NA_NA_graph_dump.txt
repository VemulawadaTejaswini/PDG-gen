Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void putFile(String location, String file) throws Exception [ CD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_3 $$ System.out.println("Put file to " + location)[ CD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_4 $$ URL url = new URL(location)[ CD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(location)-->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_6 $$ conn.setRequestMethod("PUT")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.setRequestMethod("PUT")[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_7 $$ conn.setDoOutput(true)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_8 $$ RDFFormat dataFormat = RDFFormat.forFileName(file, RDFFormat.RDFXML)[ CD ]
Line_8 $$ RDFFormat dataFormat = RDFFormat.forFileName(file, RDFFormat.RDFXML)-->Line_8 $$ RDFFormat dataFormat = RDFFormat.forFileName(file, RDFFormat.RDFXML)[ CD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_8 $$ RDFFormat dataFormat = RDFFormat.forFileName(file, RDFFormat.RDFXML)[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_9 $$ conn.setRequestProperty("Content-Type", dataFormat.getDefaultMIMEType())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.setRequestProperty("Content-Type", dataFormat.getDefaultMIMEType())[ FD ]
Line_8 $$ RDFFormat dataFormat = RDFFormat.forFileName(file, RDFFormat.RDFXML)-->Line_9 $$ conn.setRequestProperty("Content-Type", dataFormat.getDefaultMIMEType())[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_10 $$ InputStream dataStream = ProtocolTest.class.getResourceAsStream(file)[ CD ]
Line_10 $$ InputStream dataStream = ProtocolTest.class.getResourceAsStream(file)-->Line_10 $$ InputStream dataStream = ProtocolTest.class.getResourceAsStream(file)[ CD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_10 $$ InputStream dataStream = ProtocolTest.class.getResourceAsStream(file)[ FD ]
Line_12 $$ OutputStream connOut = conn.getOutputStream()-->Line_12 $$ OutputStream connOut = conn.getOutputStream()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ OutputStream connOut = conn.getOutputStream()[ FD ]
Line_10 $$ InputStream dataStream = ProtocolTest.class.getResourceAsStream(file)-->Line_14 $$ IOUtil.transfer(dataStream, connOut)[ FD ]
Line_12 $$ OutputStream connOut = conn.getOutputStream()-->Line_14 $$ IOUtil.transfer(dataStream, connOut)[ FD ]
Line_12 $$ OutputStream connOut = conn.getOutputStream()-->Line_16 $$ connOut.close()[ FD ]
Line_10 $$ InputStream dataStream = ProtocolTest.class.getResourceAsStream(file)-->Line_19 $$ dataStream.close()[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_21 $$ conn.connect()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_21 $$ conn.connect()[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_22 $$ int responseCode = conn.getResponseCode()[ CD ]
Line_22 $$ int responseCode = conn.getResponseCode()-->Line_22 $$ int responseCode = conn.getResponseCode()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_22 $$ int responseCode = conn.getResponseCode()[ FD ]
Line_2 $$ private void putFile(String location, String file) throws Exception -->Line_23 $$ if (responseCode != HttpURLConnection.HTTP_OK && responseCode != HttpURLConnection.HTTP_NO_CONTENT) [ CD ]
Line_23 $$ if (responseCode != HttpURLConnection.HTTP_OK && responseCode != HttpURLConnection.HTTP_NO_CONTENT) -->Line_24 $$ String response = "location " + location + " responded: " + conn.getResponseMessage() + " (" + responseCode + ")"[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_24 $$ String response = "location " + location + " responded: " + conn.getResponseMessage() + " (" + responseCode + ")"[ FD ]
Line_23 $$ if (responseCode != HttpURLConnection.HTTP_OK && responseCode != HttpURLConnection.HTTP_NO_CONTENT) -->Line_25 $$ fail(response)[ CD ]
Line_24 $$ String response = "location " + location + " responded: " + conn.getResponseMessage() + " (" + responseCode + ")"-->Line_25 $$ fail(response)[ FD ]
