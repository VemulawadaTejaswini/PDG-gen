Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String[] getLine(String prefecture) [ CD ]
Line_2 $$ public String[] getLine(String prefecture) -->Line_3 $$ HttpClient httpclient = null[ CD ]
Line_2 $$ public String[] getLine(String prefecture) -->Line_4 $$ String[] lines = null[ CD ]
Line_3 $$ HttpClient httpclient = null-->Line_6 $$ httpclient = new DefaultHttpClient()[ FD ]
Line_6 $$ httpclient = new DefaultHttpClient()-->Line_6 $$ httpclient = new DefaultHttpClient()[ FD ]
Line_7 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>()-->Line_8 $$ qparams.add(new BasicNameValuePair("method", "getLines"))[ FD ]
Line_7 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>()-->Line_9 $$ qparams.add(new BasicNameValuePair("prefecture", prefecture))[ FD ]
Line_10 $$ URI uri = URIUtils.createURI("http", "express.heartrails.com", -1, "/api/xml", URLEncodedUtils.format(qparams, "UTF-8"), null)-->Line_10 $$ URI uri = URIUtils.createURI("http", "express.heartrails.com", -1, "/api/xml", URLEncodedUtils.format(qparams, "UTF-8"), null)[ CD ]
Line_7 $$ List<NameValuePair> qparams = new ArrayList<NameValuePair>()-->Line_10 $$ URI uri = URIUtils.createURI("http", "express.heartrails.com", -1, "/api/xml", URLEncodedUtils.format(qparams, "UTF-8"), null)[ FD ]
Line_12 $$ HttpResponse response = httpclient.execute(httpget)-->Line_12 $$ HttpResponse response = httpclient.execute(httpget)[ CD ]
Line_3 $$ HttpClient httpclient = null-->Line_12 $$ HttpResponse response = httpclient.execute(httpget)[ FD ]
Line_6 $$ httpclient = new DefaultHttpClient()-->Line_12 $$ HttpResponse response = httpclient.execute(httpget)[ FD ]
Line_11 $$ HttpGet httpget = new HttpGet(uri)-->Line_12 $$ HttpResponse response = httpclient.execute(httpget)[ FD ]
Line_13 $$ HttpEntity entity = response.getEntity()-->Line_13 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_12 $$ HttpResponse response = httpclient.execute(httpget)-->Line_13 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_14 $$ InputStream instream = entity.getContent()-->Line_14 $$ InputStream instream = entity.getContent()[ CD ]
Line_13 $$ HttpEntity entity = response.getEntity()-->Line_14 $$ InputStream instream = entity.getContent()[ FD ]
Line_18 $$ while ((str = reader.readLine()) != null) -->Line_18 $$ while ((str = reader.readLine()) != null) [ FD ]
Line_17 $$ String str-->Line_18 $$ while ((str = reader.readLine()) != null) [ FD ]
Line_18 $$ while ((str = reader.readLine()) != null) -->Line_18 $$ while ((str = reader.readLine()) != null) [ CD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(instream, "UTF-8"))-->Line_18 $$ while ((str = reader.readLine()) != null) [ FD ]
Line_18 $$ while ((str = reader.readLine()) != null) -->Line_19 $$ buf.append(str)[ CD ]
Line_16 $$ StringBuffer buf = new StringBuffer()-->Line_19 $$ buf.append(str)[ FD ]
Line_18 $$ while ((str = reader.readLine()) != null) -->Line_19 $$ buf.append(str)[ FD ]
Line_17 $$ String str-->Line_19 $$ buf.append(str)[ FD ]
Line_18 $$ while ((str = reader.readLine()) != null) -->Line_20 $$ buf.append("\n")[ CD ]
Line_16 $$ StringBuffer buf = new StringBuffer()-->Line_20 $$ buf.append("\n")[ FD ]
Line_15 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(instream, "UTF-8"))-->Line_22 $$ reader.close()[ FD ]
Line_16 $$ StringBuffer buf = new StringBuffer()-->Line_23 $$ LineResponse res = new LineResponse(buf.toString())[ FD ]
Line_4 $$ String[] lines = null-->Line_24 $$ lines = res.getLineAsString()[ FD ]
Line_24 $$ lines = res.getLineAsString()-->Line_24 $$ lines = res.getLineAsString()[ FD ]
Line_24 $$ lines = res.getLineAsString()-->Line_24 $$ lines = res.getLineAsString()[ CD ]
Line_23 $$ LineResponse res = new LineResponse(buf.toString())-->Line_24 $$ lines = res.getLineAsString()[ FD ]
Line_3 $$ HttpClient httpclient = null-->Line_36 $$ httpclient.getConnectionManager().shutdown()[ FD ]
Line_6 $$ httpclient = new DefaultHttpClient()-->Line_36 $$ httpclient.getConnectionManager().shutdown()[ FD ]
Line_2 $$ public String[] getLine(String prefecture) -->Line_38 $$ return lines[ CD ]
Line_18 $$ while ((str = reader.readLine()) != null) -->Line_19 $$ buf.append(str)[ FD ]
