Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) [ CD ]
Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) -->Line_3 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_3 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_3 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")[ CD ]
Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) -->Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")[ CD ]
Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) -->Line_5 $$ if (myport == null || myport.trim().equals("")) [ CD ]
Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_5 $$ if (myport == null || myport.trim().equals("")) [ FD ]
Line_5 $$ if (myport == null || myport.trim().equals("")) -->Line_6 $$ myport = "80"[ CD ]
Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_6 $$ myport = "80"[ FD ]
Line_6 $$ myport = "80"-->Line_6 $$ myport = "80"[ FD ]
Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) -->Line_8 $$ if (this.serverURL == null) [ CD ]
Line_10 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_10 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()[ CD ]
Line_10 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_11 $$ if (codebase != null)[ FD ]
Line_11 $$ if (codebase != null)-->Line_11 $$ serverURL = codebase.getHost()[ CD ]
Line_10 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase()-->Line_11 $$ serverURL = codebase.getHost()[ FD ]
Line_8 $$ if (this.serverURL == null) -->Line_16 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)[ CD ]
Line_8 $$ if (this.serverURL == null) -->Line_17 $$ ipdig.show()[ CD ]
Line_16 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_17 $$ ipdig.show()[ FD ]
Line_8 $$ if (this.serverURL == null) -->Line_18 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_3 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "")-->Line_18 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_18 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_18 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_18 $$ serverURL = myurl = ipdig.getIPAddress()-->Line_18 $$ serverURL = myurl = ipdig.getIPAddress()[ CD ]
Line_16 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_18 $$ serverURL = myurl = ipdig.getIPAddress()[ FD ]
Line_8 $$ if (this.serverURL == null) -->Line_19 $$ myport = ipdig.getPortNo()[ CD ]
Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_19 $$ myport = ipdig.getPortNo()[ FD ]
Line_6 $$ myport = "80"-->Line_19 $$ myport = ipdig.getPortNo()[ FD ]
Line_19 $$ myport = ipdig.getPortNo()-->Line_19 $$ myport = ipdig.getPortNo()[ FD ]
Line_19 $$ myport = ipdig.getPortNo()-->Line_19 $$ myport = ipdig.getPortNo()[ CD ]
Line_16 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport)-->Line_19 $$ myport = ipdig.getPortNo()[ FD ]
Line_8 $$ if (this.serverURL == null) -->Line_20 $$ java.util.prefs.Preferences.systemRoot().put("serverurl", serverURL)[ CD ]
Line_8 $$ if (this.serverURL == null) -->Line_21 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ CD ]
Line_4 $$ String myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080")-->Line_21 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_6 $$ myport = "80"-->Line_21 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_19 $$ myport = ipdig.getPortNo()-->Line_21 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport)[ FD ]
Line_8 $$ if (this.serverURL == null) -->Line_22 $$ System.out.println(serverURL)[ CD ]
Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) -->Line_24 $$ String response = ""[ CD ]
Line_27 $$ java.net.URL url = new java.net.URL("http://" + serverURL + ":" + myport + "/newgenlibctxt/" + servletName)-->Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()[ FD ]
Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_29 $$ urlconn.setDoOutput(true)[ FD ]
Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_30 $$ urlconn.setRequestProperty("Content-type", "text/xml; charset=UTF-8")[ FD ]
Line_31 $$ java.io.OutputStream os = urlconn.getOutputStream()-->Line_31 $$ java.io.OutputStream os = urlconn.getOutputStream()[ CD ]
Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_31 $$ java.io.OutputStream os = urlconn.getOutputStream()[ FD ]
Line_32 $$ String req1xml = request-->Line_36 $$ System.out.println(req1xml)[ FD ]
Line_35 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_37 $$ dos.write(req1xml)[ FD ]
Line_32 $$ String req1xml = request-->Line_37 $$ dos.write(req1xml)[ FD ]
Line_35 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_38 $$ dos.flush()[ FD ]
Line_35 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8")-->Line_39 $$ dos.close()[ FD ]
Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_40 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_40 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType())[ FD ]
Line_41 $$ java.io.InputStream ios = urlconn.getInputStream()-->Line_41 $$ java.io.InputStream ios = urlconn.getInputStream()[ CD ]
Line_28 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection()-->Line_41 $$ java.io.InputStream ios = urlconn.getInputStream()[ FD ]
Line_45 $$ int n = -1-->Line_45 $$ int n = -1[ CD ]
Line_46 $$ while ((n = br.read()) != -1) response += (char) n-->Line_46 $$ while ((n = br.read()) != -1) response += (char) n[ FD ]
Line_45 $$ int n = -1-->Line_46 $$ while ((n = br.read()) != -1) response += (char) n[ FD ]
Line_46 $$ while ((n = br.read()) != -1) response += (char) n-->Line_46 $$ while ((n = br.read()) != -1) response += (char) n[ CD ]
Line_44 $$ java.io.InputStreamReader br = new java.io.InputStreamReader(gip, "UTF-8")-->Line_46 $$ while ((n = br.read()) != -1) response += (char) n[ FD ]
Line_46 $$ while ((n = br.read()) != -1) response += (char) n-->Line_46 $$ response += (char) n[ CD ]
Line_46 $$ response += (char) n-->Line_46 $$ response += (char) n[ FD ]
Line_24 $$ String response = ""-->Line_46 $$ response += (char) n[ FD ]
Line_2 $$ public String sendRequestAndGetNormalStringOutPut(java.lang.String servletName, java.lang.String request) -->Line_53 $$ return response[ CD ]
