Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ if (status == COMPLETE) [ CD ]
Line_3 $$ if (status == COMPLETE) -->Line_4 $$ return[ CD ]
Line_2 $$ public void run() -->Line_6 $$ waitRandom()[ CD ]
Line_2 $$ public void run() -->Line_7 $$ RandomAccessFile file = null[ CD ]
Line_2 $$ public void run() -->Line_8 $$ InputStream inputStream = null[ CD ]
Line_2 $$ public void run() -->Line_9 $$ boolean success = false[ CD ]
Line_2 $$ public void run() -->Line_10 $$ URL url = null[ CD ]
Line_13 $$ if (sessionCookies == null) -->Line_14 $$ sessionCookies = beatportAccessor.getSessionCookies(user, password)[ CD ]
Line_12 $$ BeatportAccessor beatportAccessor = new BeatportAccessor()-->Line_14 $$ sessionCookies = beatportAccessor.getSessionCookies(user, password)[ FD ]
Line_10 $$ URL url = null-->Line_16 $$ url = new URL(new BeatportAccessor().getTrackDownloadUrl(downloadId, sessionCookies))[ FD ]
Line_16 $$ url = new URL(new BeatportAccessor().getTrackDownloadUrl(downloadId, sessionCookies))-->Line_16 $$ url = new URL(new BeatportAccessor().getTrackDownloadUrl(downloadId, sessionCookies))[ FD ]
Line_10 $$ URL url = null-->Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_16 $$ url = new URL(new BeatportAccessor().getTrackDownloadUrl(downloadId, sessionCookies))-->Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_19 $$ connection.setRequestProperty("User-Agent", BeatportAccessor.userAgent)[ FD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_20 $$ connection.setRequestProperty("Cookie", sessionCookies)[ FD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_21 $$ connection.connect()[ FD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_22 $$ if (connection.getResponseCode() / 100 != 2) [ FD ]
Line_22 $$ if (connection.getResponseCode() / 100 != 2) -->Line_23 $$ log.error("Unexpected response from server: " + connection.getResponseCode())[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_23 $$ log.error("Unexpected response from server: " + connection.getResponseCode())[ FD ]
Line_22 $$ if (connection.getResponseCode() / 100 != 2) -->Line_24 $$ error()[ CD ]
Line_22 $$ if (connection.getResponseCode() / 100 != 2) -->Line_25 $$ return[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_27 $$ if (connection.getContentType().indexOf("text") >= 0) [ FD ]
Line_27 $$ if (connection.getContentType().indexOf("text") >= 0) -->Line_28 $$ log.error("Tried to request: " + url.toString())[ CD ]
Line_10 $$ URL url = null-->Line_28 $$ log.error("Tried to request: " + url.toString())[ FD ]
Line_16 $$ url = new URL(new BeatportAccessor().getTrackDownloadUrl(downloadId, sessionCookies))-->Line_28 $$ log.error("Tried to request: " + url.toString())[ FD ]
Line_27 $$ if (connection.getContentType().indexOf("text") >= 0) -->Line_29 $$ log.error("Unexpected file content type from server: " + connection.getContentType())[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_29 $$ log.error("Unexpected file content type from server: " + connection.getContentType())[ FD ]
Line_27 $$ if (connection.getContentType().indexOf("text") >= 0) -->Line_30 $$ log.error("Server replied:\n" + getContentAsString(connection))[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_30 $$ log.error("Server replied:\n" + getContentAsString(connection))[ FD ]
Line_27 $$ if (connection.getContentType().indexOf("text") >= 0) -->Line_31 $$ error()[ CD ]
Line_27 $$ if (connection.getContentType().indexOf("text") >= 0) -->Line_32 $$ return[ CD ]
Line_34 $$ int contentLength = connection.getContentLength()-->Line_34 $$ int contentLength = connection.getContentLength()[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_34 $$ int contentLength = connection.getContentLength()[ FD ]
Line_34 $$ int contentLength = connection.getContentLength()-->Line_35 $$ if (contentLength < 1) [ FD ]
Line_35 $$ if (contentLength < 1) -->Line_36 $$ log.error("Invalid content length: " + connection.getContentLength())[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_36 $$ log.error("Invalid content length: " + connection.getContentLength())[ FD ]
Line_35 $$ if (contentLength < 1) -->Line_37 $$ error()[ CD ]
Line_35 $$ if (contentLength < 1) -->Line_38 $$ return[ CD ]
Line_40 $$ if (size == -1) -->Line_40 $$ if (size == -1) [ CD ]
Line_40 $$ if (size == -1) -->Line_42 $$ stateChanged()[ CD ]
Line_40 $$ if (size == -1) -->Line_43 $$ if (size != contentLength) [ CD ]
Line_34 $$ int contentLength = connection.getContentLength()-->Line_43 $$ if (size != contentLength) [ FD ]
Line_43 $$ if (size != contentLength) -->Line_44 $$ changeTotal(0, contentLength - size)[ CD ]
Line_46 $$ if (new File(tmpFileName(fileName)).exists()) -->Line_46 $$ if (new File(tmpFileName(fileName)).exists()) [ CD ]
Line_46 $$ if (new File(tmpFileName(fileName)).exists()) -->Line_47 $$ if (!new File(tmpFileName(fileName)).delete()) [ CD ]
Line_47 $$ if (!new File(tmpFileName(fileName)).delete()) -->Line_47 $$ if (!new File(tmpFileName(fileName)).delete()) [ CD ]
Line_47 $$ if (!new File(tmpFileName(fileName)).delete()) -->Line_47 $$ if (!new File(tmpFileName(fileName)).delete()) [ CD ]
Line_7 $$ RandomAccessFile file = null-->Line_51 $$ file = new RandomAccessFile(tmpFileName(fileName), "rw")[ FD ]
Line_51 $$ file = new RandomAccessFile(tmpFileName(fileName), "rw")-->Line_51 $$ file = new RandomAccessFile(tmpFileName(fileName), "rw")[ FD ]
Line_7 $$ RandomAccessFile file = null-->Line_52 $$ file.seek(downloaded)[ FD ]
Line_51 $$ file = new RandomAccessFile(tmpFileName(fileName), "rw")-->Line_52 $$ file.seek(downloaded)[ FD ]
Line_8 $$ InputStream inputStream = null-->Line_53 $$ inputStream = connection.getInputStream()[ FD ]
Line_53 $$ inputStream = connection.getInputStream()-->Line_53 $$ inputStream = connection.getInputStream()[ FD ]
Line_53 $$ inputStream = connection.getInputStream()-->Line_53 $$ inputStream = connection.getInputStream()[ CD ]
Line_18 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_53 $$ inputStream = connection.getInputStream()[ FD ]
Line_54 $$ if (started == 0) -->Line_55 $$ started = System.currentTimeMillis()[ CD ]
Line_60 $$ while (status == DOWNLOADING) -->Line_61 $$ if (size - downloaded < MAX_BUFFER_SIZE) [ CD ]
Line_60 $$ while (status == DOWNLOADING) -->Line_64 $$ int read = inputStream.read(buffer)[ CD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_64 $$ int read = inputStream.read(buffer)[ CD ]
Line_8 $$ InputStream inputStream = null-->Line_64 $$ int read = inputStream.read(buffer)[ FD ]
Line_53 $$ inputStream = connection.getInputStream()-->Line_64 $$ int read = inputStream.read(buffer)[ FD ]
Line_60 $$ while (status == DOWNLOADING) -->Line_65 $$ if (read == -1)[ CD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_65 $$ if (read == -1)[ FD ]
Line_60 $$ while (status == DOWNLOADING) -->Line_66 $$ file.write(buffer, 0, read)[ CD ]
Line_7 $$ RandomAccessFile file = null-->Line_66 $$ file.write(buffer, 0, read)[ FD ]
Line_51 $$ file = new RandomAccessFile(tmpFileName(fileName), "rw")-->Line_66 $$ file.write(buffer, 0, read)[ FD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_66 $$ file.write(buffer, 0, read)[ FD ]
Line_60 $$ while (status == DOWNLOADING) -->Line_68 $$ changeTotal(read, 0)[ CD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_68 $$ changeTotal(read, 0)[ FD ]
Line_60 $$ while (status == DOWNLOADING) -->Line_69 $$ stateChanged()[ CD ]
Line_71 $$ if (status == DOWNLOADING) -->Line_72 $$ stopped = System.currentTimeMillis()[ CD ]
Line_9 $$ boolean success = false-->Line_77 $$ success = true[ FD ]
Line_77 $$ success = true-->Line_77 $$ success = true[ FD ]
Line_7 $$ RandomAccessFile file = null-->Line_83 $$ file.close()[ FD ]
Line_51 $$ file = new RandomAccessFile(tmpFileName(fileName), "rw")-->Line_83 $$ file.close()[ FD ]
Line_88 $$ if (!new File(tmpFileName(fileName)).renameTo(new File(fileName))) -->Line_88 $$ if (!new File(tmpFileName(fileName)).renameTo(new File(fileName))) [ CD ]
Line_88 $$ if (!new File(tmpFileName(fileName)).renameTo(new File(fileName))) -->Line_88 $$ if (!new File(tmpFileName(fileName)).renameTo(new File(fileName))) [ CD ]
Line_8 $$ InputStream inputStream = null-->Line_102 $$ inputStream.close()[ FD ]
Line_53 $$ inputStream = connection.getInputStream()-->Line_102 $$ inputStream.close()[ FD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_65 $$ if (read == -1)[ FD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_66 $$ file.write(buffer, 0, read)[ FD ]
Line_64 $$ int read = inputStream.read(buffer)-->Line_68 $$ changeTotal(read, 0)[ FD ]
