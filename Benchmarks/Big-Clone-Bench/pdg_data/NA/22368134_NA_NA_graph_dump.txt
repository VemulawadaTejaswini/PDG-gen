Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void testIfNoneMatch() throws Exception [ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_3 $$ String eTag = c.getHeaderField("ETag")[ CD ]
Line_3 $$ String eTag = c.getHeaderField("ETag")-->Line_3 $$ String eTag = c.getHeaderField("ETag")[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_4 $$ InputStream in = c.getInputStream()[ CD ]
Line_4 $$ InputStream in = c.getInputStream()-->Line_4 $$ InputStream in = c.getInputStream()[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_5 $$ byte[] buffer = new byte[1024][ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_6 $$ int read = 0[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_8 $$ md5.reset()[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_8 $$ md5.reset()[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_9 $$ do [ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_2 $$ private static void testIfNoneMatch() throws Exception [ CD ]
Line_6 $$ int read = 0-->Line_9 $$ do [ FD ]
Line_9 $$ do -->Line_10 $$ read = in.read(buffer)[ CD ]
Line_10 $$ read = in.read(buffer)-->Line_10 $$ read = in.read(buffer)[ FD ]
Line_6 $$ int read = 0-->Line_10 $$ read = in.read(buffer)[ FD ]
Line_10 $$ read = in.read(buffer)-->Line_10 $$ read = in.read(buffer)[ CD ]
Line_4 $$ InputStream in = c.getInputStream()-->Line_10 $$ read = in.read(buffer)[ FD ]
Line_5 $$ byte[] buffer = new byte[1024]-->Line_10 $$ read = in.read(buffer)[ FD ]
Line_9 $$ do -->Line_11 $$ if (read > 0)[ CD ]
Line_10 $$ read = in.read(buffer)-->Line_11 $$ if (read > 0)[ FD ]
Line_6 $$ int read = 0-->Line_11 $$ if (read > 0)[ FD ]
Line_11 $$ if (read > 0)-->Line_11 $$ md5.update(buffer, 0, read)[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_11 $$ md5.update(buffer, 0, read)[ FD ]
Line_5 $$ byte[] buffer = new byte[1024]-->Line_11 $$ md5.update(buffer, 0, read)[ FD ]
Line_10 $$ read = in.read(buffer)-->Line_11 $$ md5.update(buffer, 0, read)[ FD ]
Line_6 $$ int read = 0-->Line_11 $$ md5.update(buffer, 0, read)[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_13 $$ byte[] digest = md5.digest()[ CD ]
Line_13 $$ byte[] digest = md5.digest()-->Line_13 $$ byte[] digest = md5.digest()[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5")-->Line_13 $$ byte[] digest = md5.digest()[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_14 $$ String hexDigest = getHexString(digest)[ CD ]
Line_14 $$ String hexDigest = getHexString(digest)-->Line_14 $$ String hexDigest = getHexString(digest)[ CD ]
Line_13 $$ byte[] digest = md5.digest()-->Line_14 $$ String hexDigest = getHexString(digest)[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_15 $$ if (hexDigest.equals(eTag))[ CD ]
Line_14 $$ String hexDigest = getHexString(digest)-->Line_15 $$ if (hexDigest.equals(eTag))[ FD ]
Line_3 $$ String eTag = c.getHeaderField("ETag")-->Line_15 $$ if (hexDigest.equals(eTag))[ FD ]
Line_15 $$ if (hexDigest.equals(eTag))-->Line_15 $$ if (hexDigest.equals(eTag))[ CD ]
Line_14 $$ String hexDigest = getHexString(digest)-->Line_15 $$ if (hexDigest.equals(eTag))[ FD ]
Line_3 $$ String eTag = c.getHeaderField("ETag")-->Line_15 $$ if (hexDigest.equals(eTag))[ FD ]
Line_15 $$ if (hexDigest.equals(eTag))-->Line_15 $$ System.out.print("eTag content          : md5 hex string")[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_16 $$ String quotedHexDigest = "\"" + hexDigest + "\""[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_17 $$ if (quotedHexDigest.equals(eTag))[ CD ]
Line_16 $$ String quotedHexDigest = "\"" + hexDigest + "\""-->Line_17 $$ if (quotedHexDigest.equals(eTag))[ FD ]
Line_3 $$ String eTag = c.getHeaderField("ETag")-->Line_17 $$ if (quotedHexDigest.equals(eTag))[ FD ]
Line_17 $$ if (quotedHexDigest.equals(eTag))-->Line_17 $$ if (quotedHexDigest.equals(eTag))[ CD ]
Line_16 $$ String quotedHexDigest = "\"" + hexDigest + "\""-->Line_17 $$ if (quotedHexDigest.equals(eTag))[ FD ]
Line_3 $$ String eTag = c.getHeaderField("ETag")-->Line_17 $$ if (quotedHexDigest.equals(eTag))[ FD ]
Line_17 $$ if (quotedHexDigest.equals(eTag))-->Line_17 $$ System.out.print("eTag content          : quoted md5 hex string")[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_18 $$ HttpURLConnection c2 = (HttpURLConnection) url.openConnection()[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_19 $$ c2.addRequestProperty("If-None-Match", eTag)[ CD ]
Line_18 $$ HttpURLConnection c2 = (HttpURLConnection) url.openConnection()-->Line_19 $$ c2.addRequestProperty("If-None-Match", eTag)[ FD ]
Line_3 $$ String eTag = c.getHeaderField("ETag")-->Line_19 $$ c2.addRequestProperty("If-None-Match", eTag)[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_20 $$ c2.connect()[ CD ]
Line_18 $$ HttpURLConnection c2 = (HttpURLConnection) url.openConnection()-->Line_20 $$ c2.connect()[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_21 $$ int code = c2.getResponseCode()[ CD ]
Line_21 $$ int code = c2.getResponseCode()-->Line_21 $$ int code = c2.getResponseCode()[ CD ]
Line_18 $$ HttpURLConnection c2 = (HttpURLConnection) url.openConnection()-->Line_21 $$ int code = c2.getResponseCode()[ FD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_22 $$ System.out.print("If-None-Match response: ")[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_23 $$ boolean supported = (code == 304)[ CD ]
Line_2 $$ private static void testIfNoneMatch() throws Exception -->Line_24 $$ System.out.println(b2s(supported) + " - " + code + " (" + c2.getResponseMessage() + ")")[ CD ]
Line_23 $$ boolean supported = (code == 304)-->Line_24 $$ System.out.println(b2s(supported) + " - " + code + " (" + c2.getResponseMessage() + ")")[ FD ]
Line_18 $$ HttpURLConnection c2 = (HttpURLConnection) url.openConnection()-->Line_24 $$ System.out.println(b2s(supported) + " - " + code + " (" + c2.getResponseMessage() + ")")[ FD ]
Line_10 $$ read = in.read(buffer)-->Line_9 $$ do [ FD ]
Line_10 $$ read = in.read(buffer)-->Line_9 $$ do [ FD ]
Line_10 $$ read = in.read(buffer)-->Line_11 $$ if (read > 0)[ FD ]
Line_10 $$ read = in.read(buffer)-->Line_11 $$ md5.update(buffer, 0, read)[ FD ]
