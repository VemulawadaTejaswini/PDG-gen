Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException [ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_3 $$ ConversationManager conversationManager = FGDSpringUtils.getConversationManager()[ CD ]
Line_3 $$ ConversationManager conversationManager = FGDSpringUtils.getConversationManager()-->Line_3 $$ ConversationManager conversationManager = FGDSpringUtils.getConversationManager()[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_4 $$ conversationManager.beginConversation()[ CD ]
Line_3 $$ ConversationManager conversationManager = FGDSpringUtils.getConversationManager()-->Line_4 $$ conversationManager.beginConversation()[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_5 $$ FGDDelegate delegate = new FGDDelegate()[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)[ CD ]
Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)-->Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)[ CD ]
Line_5 $$ FGDDelegate delegate = new FGDDelegate()-->Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_7 $$ if (utilisateur == null) [ CD ]
Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)-->Line_7 $$ if (utilisateur == null) [ FD ]
Line_7 $$ if (utilisateur == null) -->Line_8 $$ String responseEmailSubject = "Votre adresse ne correspond pas à celle d'un utilisateur d'IntelliGID"[ CD ]
Line_7 $$ if (utilisateur == null) -->Line_9 $$ String responseEmailMessage = "<h3>Pour sauvegarder un courriel, vous devez être un utilisateur d'IntelliGID et l'adresse de courrier électronique utilisée doit être celle apparaissant dans votre profil.</h3>"[ CD ]
Line_7 $$ if (utilisateur == null) -->Line_10 $$ String sender = recipient.endsWith("localhost") ? FGDSpringUtils.getExpediteurSupport() : recipient[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_10 $$ String sender = recipient.endsWith("localhost") ? FGDSpringUtils.getExpediteurSupport() : recipient[ FD ]
Line_7 $$ if (utilisateur == null) -->Line_11 $$ Map<String, String> recipients = new HashMap<String, String>()[ CD ]
Line_7 $$ if (utilisateur == null) -->Line_12 $$ recipients.put(from, null)[ CD ]
Line_11 $$ Map<String, String> recipients = new HashMap<String, String>()-->Line_12 $$ recipients.put(from, null)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_12 $$ recipients.put(from, null)[ FD ]
Line_7 $$ if (utilisateur == null) -->Line_13 $$ MailUtils.sendSimpleHTMLMessage(recipients, responseEmailSubject, responseEmailMessage, sender)[ CD ]
Line_11 $$ Map<String, String> recipients = new HashMap<String, String>()-->Line_13 $$ MailUtils.sendSimpleHTMLMessage(recipients, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_8 $$ String responseEmailSubject = "Votre adresse ne correspond pas à celle d'un utilisateur d'IntelliGID"-->Line_13 $$ MailUtils.sendSimpleHTMLMessage(recipients, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_9 $$ String responseEmailMessage = "<h3>Pour sauvegarder un courriel, vous devez être un utilisateur d'IntelliGID et l'adresse de courrier électronique utilisée doit être celle apparaissant dans votre profil.</h3>"-->Line_13 $$ MailUtils.sendSimpleHTMLMessage(recipients, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_10 $$ String sender = recipient.endsWith("localhost") ? FGDSpringUtils.getExpediteurSupport() : recipient-->Line_13 $$ MailUtils.sendSimpleHTMLMessage(recipients, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_7 $$ if (utilisateur == null) -->Line_14 $$ return[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_16 $$ File tempFile = File.createTempFile("email", ".eml")[ CD ]
Line_16 $$ File tempFile = File.createTempFile("email", ".eml")-->Line_16 $$ File tempFile = File.createTempFile("email", ".eml")[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_17 $$ tempFile.deleteOnExit()[ CD ]
Line_16 $$ File tempFile = File.createTempFile("email", ".eml")-->Line_17 $$ tempFile.deleteOnExit()[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_18 $$ BufferedInputStream bis = new BufferedInputStream(in)[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_19 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(tempFile))[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_20 $$ IOUtils.copy(bis, bos)[ CD ]
Line_18 $$ BufferedInputStream bis = new BufferedInputStream(in)-->Line_20 $$ IOUtils.copy(bis, bos)[ FD ]
Line_19 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(tempFile))-->Line_20 $$ IOUtils.copy(bis, bos)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_21 $$ IOUtils.closeQuietly(bis)[ CD ]
Line_18 $$ BufferedInputStream bis = new BufferedInputStream(in)-->Line_21 $$ IOUtils.closeQuietly(bis)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_22 $$ IOUtils.closeQuietly(bos)[ CD ]
Line_19 $$ BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(tempFile))-->Line_22 $$ IOUtils.closeQuietly(bos)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_23 $$ if (message == null) [ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_23 $$ if (message == null) [ FD ]
Line_23 $$ if (message == null) -->Line_24 $$ GestionnaireProprietesMimeMessageParser gestionnaire = new GestionnaireProprietesMimeMessageParser()[ CD ]
Line_23 $$ if (message == null) -->Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))[ FD ]
Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))-->Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))[ FD ]
Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))-->Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))[ CD ]
Line_24 $$ GestionnaireProprietesMimeMessageParser gestionnaire = new GestionnaireProprietesMimeMessageParser()-->Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_27 $$ String subject[ CD ]
Line_27 $$ String subject-->Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()[ FD ]
Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()-->Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()[ FD ]
Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()-->Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()[ FD ]
Line_25 $$ message = gestionnaire.asMimeMessage(new BufferedInputStream(new FileInputStream(tempFile)))-->Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()[ FD ]
Line_27 $$ String subject-->Line_31 $$ subject = "Message sans sujet"[ FD ]
Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()-->Line_31 $$ subject = "Message sans sujet"[ FD ]
Line_31 $$ subject = "Message sans sujet"-->Line_31 $$ subject = "Message sans sujet"[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_33 $$ File tempDir = new File(System.getProperty("java.io.tmpdir"))[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_34 $$ if (!tempDir.exists()) [ CD ]
Line_34 $$ if (!tempDir.exists()) -->Line_34 $$ if (!tempDir.exists()) [ CD ]
Line_34 $$ if (!tempDir.exists()) -->Line_34 $$ if (!tempDir.exists()) [ CD ]
Line_33 $$ File tempDir = new File(System.getProperty("java.io.tmpdir"))-->Line_34 $$ if (!tempDir.exists()) [ FD ]
Line_34 $$ if (!tempDir.exists()) -->Line_35 $$ tempDir.mkdirs()[ CD ]
Line_33 $$ File tempDir = new File(System.getProperty("java.io.tmpdir"))-->Line_35 $$ tempDir.mkdirs()[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_37 $$ File emailFile = new File(tempDir, FilenameUtils.normalize(subject) + ".eml")[ CD ]
Line_27 $$ String subject-->Line_37 $$ File emailFile = new File(tempDir, FilenameUtils.normalize(subject) + ".eml")[ FD ]
Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()-->Line_37 $$ File emailFile = new File(tempDir, FilenameUtils.normalize(subject) + ".eml")[ FD ]
Line_31 $$ subject = "Message sans sujet"-->Line_37 $$ File emailFile = new File(tempDir, FilenameUtils.normalize(subject) + ".eml")[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_38 $$ FileUtils.copyFile(tempFile, emailFile)[ CD ]
Line_16 $$ File tempFile = File.createTempFile("email", ".eml")-->Line_38 $$ FileUtils.copyFile(tempFile, emailFile)[ FD ]
Line_37 $$ File emailFile = new File(tempDir, FilenameUtils.normalize(subject) + ".eml")-->Line_38 $$ FileUtils.copyFile(tempFile, emailFile)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_39 $$ FicheDocument ficheDocument = new FicheDocument()[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_40 $$ ficheDocument.setFicheCompletee(false)[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_40 $$ ficheDocument.setFicheCompletee(false)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_41 $$ ficheDocument.setDateCreationHorodatee(new Date())[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_41 $$ ficheDocument.setDateCreationHorodatee(new Date())[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_42 $$ ficheDocument.setUtilisateurSoumetteur(utilisateur)[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_42 $$ ficheDocument.setUtilisateurSoumetteur(utilisateur)[ FD ]
Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)-->Line_42 $$ ficheDocument.setUtilisateurSoumetteur(utilisateur)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_43 $$ ficheDocument.getLangues().addAll(getLanguesDefaut())[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_43 $$ ficheDocument.getLangues().addAll(getLanguesDefaut())[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_44 $$ ficheDocument.setCourriel(true)[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_44 $$ ficheDocument.setCourriel(true)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_45 $$ FileIOContenuFichierElectronique contenuFichier = new FileIOContenuFichierElectronique(emailFile, "multipart/alternative")[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_46 $$ SupportDocument support = new SupportDocument()[ CD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_47 $$ support.setFicheDocument(ficheDocument)[ CD ]
Line_46 $$ SupportDocument support = new SupportDocument()-->Line_47 $$ support.setFicheDocument(ficheDocument)[ FD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_47 $$ support.setFicheDocument(ficheDocument)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_48 $$ FichierElectroniqueUtils.setContenu(ficheDocument, support, contenuFichier, utilisateur)[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_48 $$ FichierElectroniqueUtils.setContenu(ficheDocument, support, contenuFichier, utilisateur)[ FD ]
Line_46 $$ SupportDocument support = new SupportDocument()-->Line_48 $$ FichierElectroniqueUtils.setContenu(ficheDocument, support, contenuFichier, utilisateur)[ FD ]
Line_45 $$ FileIOContenuFichierElectronique contenuFichier = new FileIOContenuFichierElectronique(emailFile, "multipart/alternative")-->Line_48 $$ FichierElectroniqueUtils.setContenu(ficheDocument, support, contenuFichier, utilisateur)[ FD ]
Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)-->Line_48 $$ FichierElectroniqueUtils.setContenu(ficheDocument, support, contenuFichier, utilisateur)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_49 $$ ficheDocument.setTitre(subject)[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_49 $$ ficheDocument.setTitre(subject)[ FD ]
Line_27 $$ String subject-->Line_49 $$ ficheDocument.setTitre(subject)[ FD ]
Line_29 $$ subject = message.getSubject().replace("Fwd:", "").trim()-->Line_49 $$ ficheDocument.setTitre(subject)[ FD ]
Line_31 $$ subject = "Message sans sujet"-->Line_49 $$ ficheDocument.setTitre(subject)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_50 $$ delegate.sauvegarder(ficheDocument, utilisateur)[ CD ]
Line_5 $$ FGDDelegate delegate = new FGDDelegate()-->Line_50 $$ delegate.sauvegarder(ficheDocument, utilisateur)[ FD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_50 $$ delegate.sauvegarder(ficheDocument, utilisateur)[ FD ]
Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)-->Line_50 $$ delegate.sauvegarder(ficheDocument, utilisateur)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_51 $$ String modifyEmail = "http://" + FGDSpringUtils.getServerHost() + ":" + FGDSpringUtils.getServerPort() + "/" + FGDSpringUtils.getApplicationName() + "/app/modifierDocument/id/" + ficheDocument.getId()[ CD ]
Line_39 $$ FicheDocument ficheDocument = new FicheDocument()-->Line_51 $$ String modifyEmail = "http://" + FGDSpringUtils.getServerHost() + ":" + FGDSpringUtils.getServerPort() + "/" + FGDSpringUtils.getApplicationName() + "/app/modifierDocument/id/" + ficheDocument.getId()[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_52 $$ System.out.println(modifyEmail)[ CD ]
Line_51 $$ String modifyEmail = "http://" + FGDSpringUtils.getServerHost() + ":" + FGDSpringUtils.getServerPort() + "/" + FGDSpringUtils.getApplicationName() + "/app/modifierDocument/id/" + ficheDocument.getId()-->Line_52 $$ System.out.println(modifyEmail)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_55 $$ String sender = recipient.endsWith("localhost") ? FGDSpringUtils.getExpediteurSupport() : recipient[ FD ]
Line_6 $$ UtilisateurIFGD utilisateur = delegate.getUtilisateurParCourriel(from)-->Line_57 $$ MailUtils.sendSimpleHTMLMessage(utilisateur, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_8 $$ String responseEmailSubject = "Votre adresse ne correspond pas à celle d'un utilisateur d'IntelliGID"-->Line_57 $$ MailUtils.sendSimpleHTMLMessage(utilisateur, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_9 $$ String responseEmailMessage = "<h3>Pour sauvegarder un courriel, vous devez être un utilisateur d'IntelliGID et l'adresse de courrier électronique utilisée doit être celle apparaissant dans votre profil.</h3>"-->Line_57 $$ MailUtils.sendSimpleHTMLMessage(utilisateur, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_10 $$ String sender = recipient.endsWith("localhost") ? FGDSpringUtils.getExpediteurSupport() : recipient-->Line_57 $$ MailUtils.sendSimpleHTMLMessage(utilisateur, responseEmailSubject, responseEmailMessage, sender)[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_61 $$ conversationManager.commitTransaction()[ CD ]
Line_3 $$ ConversationManager conversationManager = FGDSpringUtils.getConversationManager()-->Line_61 $$ conversationManager.commitTransaction()[ FD ]
Line_2 $$ public static void save(String from, String recipient, InputStream in, MimeMessage message) throws IOException, MessagingException, DocumentVideException -->Line_62 $$ tempFile.delete()[ CD ]
Line_16 $$ File tempFile = File.createTempFile("email", ".eml")-->Line_62 $$ tempFile.delete()[ FD ]
