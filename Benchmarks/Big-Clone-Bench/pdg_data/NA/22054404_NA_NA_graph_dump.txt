Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException [ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_3 $$ if (srcFile.isDirectory()) [ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_3 $$ if (srcFile.isDirectory()) [ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_3 $$ if (srcFile.isDirectory()) [ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_3 $$ if (srcFile.isDirectory()) [ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_4 $$ File newDestDir = new File(dstDir, srcFile.getName())[ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_4 $$ File newDestDir = new File(dstDir, srcFile.getName())[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_5 $$ newDestDir.mkdir()[ CD ]
Line_4 $$ File newDestDir = new File(dstDir, srcFile.getName())-->Line_5 $$ newDestDir.mkdir()[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_6 $$ String fileNameList[] = srcFile.list()[ CD ]
Line_6 $$ String fileNameList[] = srcFile.list()-->Line_6 $$ String fileNameList[] = srcFile.list()[ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_6 $$ String fileNameList[] = srcFile.list()[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ CD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_3 $$ if (srcFile.isDirectory()) [ CD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_8 $$ File newSouceFile = new File(srcFile, fileNameList[i])[ CD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_9 $$ copyfile(newSouceFile, newDestDir)[ CD ]
Line_8 $$ File newSouceFile = new File(srcFile, fileNameList[i])-->Line_9 $$ copyfile(newSouceFile, newDestDir)[ FD ]
Line_4 $$ File newDestDir = new File(dstDir, srcFile.getName())-->Line_9 $$ copyfile(newSouceFile, newDestDir)[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_12 $$ File newDestFile = new File(dstDir, srcFile.getName())[ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_12 $$ File newDestFile = new File(dstDir, srcFile.getName())[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_13 $$ FileInputStream in = new FileInputStream(srcFile)[ CD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_14 $$ FileOutputStream out = new FileOutputStream(newDestFile)[ CD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_15 $$ FileChannel inChannel = in.getChannel()[ CD ]
Line_15 $$ FileChannel inChannel = in.getChannel()-->Line_15 $$ FileChannel inChannel = in.getChannel()[ CD ]
Line_13 $$ FileInputStream in = new FileInputStream(srcFile)-->Line_15 $$ FileChannel inChannel = in.getChannel()[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_16 $$ FileChannel outChannel = out.getChannel()[ CD ]
Line_16 $$ FileChannel outChannel = out.getChannel()-->Line_16 $$ FileChannel outChannel = out.getChannel()[ CD ]
Line_14 $$ FileOutputStream out = new FileOutputStream(newDestFile)-->Line_16 $$ FileChannel outChannel = out.getChannel()[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_17 $$ long i[ CD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_18 $$ Logger.log("copyFile before- copiedSize = " + copiedSize)[ CD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ CD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_3 $$ if (srcFile.isDirectory()) [ CD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_17 $$ long i-->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ CD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_17 $$ long i-->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ CD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_17 $$ long i-->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_15 $$ FileChannel inChannel = in.getChannel()-->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_17 $$ long i-->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_16 $$ FileChannel outChannel = out.getChannel()-->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_15 $$ FileChannel inChannel = in.getChannel()-->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_17 $$ long i-->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_16 $$ FileChannel outChannel = out.getChannel()-->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_26 $$ inChannel.transferTo(i, srcFile.length() - i, outChannel)[ FD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_27 $$ copiedSize += srcFile.length() - i[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_29 $$ Logger.log("copyFile after copy- copiedSize = " + copiedSize + "srcFile.length = " + srcFile.length() + "diff = " + (copiedSize - srcFile.length()))[ CD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_29 $$ Logger.log("copyFile after copy- copiedSize = " + copiedSize + "srcFile.length = " + srcFile.length() + "diff = " + (copiedSize - srcFile.length()))[ FD ]
Line_2 $$ private void copyfile(File srcFile, File dstDir) throws FileNotFoundException, IOException -->Line_29 $$ Logger.log("copyFile after copy- copiedSize = " + copiedSize + "srcFile.length = " + srcFile.length() + "diff = " + (copiedSize - srcFile.length()))[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_30 $$ in.close()[ CD ]
Line_13 $$ FileInputStream in = new FileInputStream(srcFile)-->Line_30 $$ in.close()[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_31 $$ out.close()[ CD ]
Line_14 $$ FileOutputStream out = new FileOutputStream(newDestFile)-->Line_31 $$ out.close()[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_32 $$ outChannel = null[ CD ]
Line_16 $$ FileChannel outChannel = out.getChannel()-->Line_32 $$ outChannel = null[ FD ]
Line_32 $$ outChannel = null-->Line_32 $$ outChannel = null[ FD ]
Line_3 $$ if (srcFile.isDirectory()) -->Line_33 $$ Logger.log("File copied.")[ CD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < fileNameList.length; i++) -->Line_7 $$ for (int i = 0; i < fileNameList.length; i++) [ FD ]
Line_8 $$ File newSouceFile = new File(srcFile, fileNameList[i])-->Line_9 $$ copyfile(newSouceFile, newDestDir)[ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) [ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
Line_19 $$ for (i = 0; i < srcFile.length() - BLOCK_LENGTH; i += BLOCK_LENGTH) -->Line_21 $$ inChannel.transferTo(i, BLOCK_LENGTH, outChannel)[ FD ]
