Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ String linesep = System.getProperty("line.separator")[ CD ]
Line_3 $$ String linesep = System.getProperty("line.separator")-->Line_3 $$ String linesep = System.getProperty("line.separator")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ fos.write(new String("JCP contains the following libraries. Please read this for comments on copyright etc." + linesep + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_5 $$ fos.write(new String("JCP contains the following libraries. Please read this for comments on copyright etc." + linesep + linesep).getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ fos.write(new String("Chemistry Development Kit, master version as of " + new Date().toString() + " (http://cdk.sf.net)" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_6 $$ fos.write(new String("Chemistry Development Kit, master version as of " + new Date().toString() + " (http://cdk.sf.net)" + linesep).getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ fos.write(new String("Copyright 1997-2009 The CDK Development Team" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_7 $$ fos.write(new String("Copyright 1997-2009 The CDK Development Team" + linesep).getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ fos.write(new String("License: LGPL v2 (http://www.gnu.org/licenses/old-licenses/gpl-2.0.html)" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_8 $$ fos.write(new String("License: LGPL v2 (http://www.gnu.org/licenses/old-licenses/gpl-2.0.html)" + linesep).getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ fos.write(new String("Download: https://sourceforge.net/projects/cdk/files/" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_9 $$ fos.write(new String("Download: https://sourceforge.net/projects/cdk/files/" + linesep).getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ fos.write(new String("Source available at: http://sourceforge.net/scm/?type=git&group_id=20024" + linesep + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_10 $$ fos.write(new String("Source available at: http://sourceforge.net/scm/?type=git&group_id=20024" + linesep + linesep).getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ File[] files = new File(args[0]).listFiles(new JarFileFilter())[ CD ]
Line_11 $$ File[] files = new File(args[0]).listFiles(new JarFileFilter())-->Line_11 $$ File[] files = new File(args[0]).listFiles(new JarFileFilter())[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) [ CD ]
Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) -->Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) [ CD ]
Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) -->Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))[ CD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))[ CD ]
Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) -->Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()[ CD ]
Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()-->Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()[ CD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()[ FD ]
Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) -->Line_16 $$ while (itsect.hasNext()) [ CD ]
Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) -->Line_13 $$ if (new File(files[i].getPath() + ".meta").exists()) [ CD ]
Line_16 $$ while (itsect.hasNext()) -->Line_16 $$ while (itsect.hasNext()) [ CD ]
Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()-->Line_16 $$ while (itsect.hasNext()) [ FD ]
Line_16 $$ while (itsect.hasNext()) -->Line_17 $$ String section = itsect.next()[ CD ]
Line_17 $$ String section = itsect.next()-->Line_17 $$ String section = itsect.next()[ CD ]
Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()-->Line_17 $$ String section = itsect.next()[ FD ]
Line_16 $$ while (itsect.hasNext()) -->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_16 $$ while (itsect.hasNext()) -->Line_19 $$ fos.write(new String("Copyright " + metaprops.get(section).get("Copyright") + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_19 $$ fos.write(new String("Copyright " + metaprops.get(section).get("Copyright") + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_19 $$ fos.write(new String("Copyright " + metaprops.get(section).get("Copyright") + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_19 $$ fos.write(new String("Copyright " + metaprops.get(section).get("Copyright") + linesep).getBytes())[ FD ]
Line_16 $$ while (itsect.hasNext()) -->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_16 $$ while (itsect.hasNext()) -->Line_21 $$ fos.write(new String("Download: " + metaprops.get(section).get("Download") + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_21 $$ fos.write(new String("Download: " + metaprops.get(section).get("Download") + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_21 $$ fos.write(new String("Download: " + metaprops.get(section).get("Download") + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_21 $$ fos.write(new String("Download: " + metaprops.get(section).get("Download") + linesep).getBytes())[ FD ]
Line_16 $$ while (itsect.hasNext()) -->Line_22 $$ fos.write(new String("Source available at: " + metaprops.get(section).get("SourceCode") + linesep + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_22 $$ fos.write(new String("Source available at: " + metaprops.get(section).get("SourceCode") + linesep + linesep).getBytes())[ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_22 $$ fos.write(new String("Source available at: " + metaprops.get(section).get("SourceCode") + linesep + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_22 $$ fos.write(new String("Source available at: " + metaprops.get(section).get("SourceCode") + linesep + linesep).getBytes())[ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) [ CD ]
Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) -->Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) [ CD ]
Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) -->Line_26 $$ fos.write(new String("The author says:" + linesep).getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_26 $$ fos.write(new String("The author says:" + linesep).getBytes())[ FD ]
Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) -->Line_30 $$ while ((len = in.read(buf)) > 0) [ CD ]
Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) -->Line_25 $$ if (new File(files[i].getPath() + ".extra").exists()) [ CD ]
Line_30 $$ while ((len = in.read(buf)) > 0) -->Line_31 $$ fos.write(buf, 0, len)[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_31 $$ fos.write(buf, 0, len)[ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_34 $$ fos.write(linesep.getBytes())[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_34 $$ fos.write(linesep.getBytes())[ FD ]
Line_3 $$ String linesep = System.getProperty("line.separator")-->Line_34 $$ fos.write(linesep.getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_36 $$ fos.close()[ CD ]
Line_4 $$ FileOutputStream fos = new FileOutputStream(new File("lib-licenses.txt"))-->Line_36 $$ fos.close()[ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_14 $$ Map<String, Map<String, String>> metaprops = readProperties(new File(files[i].getPath() + ".meta"))-->Line_15 $$ Iterator<String> itsect = metaprops.keySet().iterator()[ FD ]
Line_17 $$ String section = itsect.next()-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_18 $$ fos.write(new String(metaprops.get(section).get("Library") + " " + metaprops.get(section).get("Version") + " (" + metaprops.get(section).get("Homepage") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_19 $$ fos.write(new String("Copyright " + metaprops.get(section).get("Copyright") + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_20 $$ fos.write(new String("License: " + metaprops.get(section).get("License") + " (" + metaprops.get(section).get("LicenseURL") + ")" + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_21 $$ fos.write(new String("Download: " + metaprops.get(section).get("Download") + linesep).getBytes())[ FD ]
Line_17 $$ String section = itsect.next()-->Line_22 $$ fos.write(new String("Source available at: " + metaprops.get(section).get("SourceCode") + linesep + linesep).getBytes())[ FD ]
