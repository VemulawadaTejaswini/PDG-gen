Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private final void findSubclasses(URL location, String packageName, Class superClass, Set setOfClasses) [ CD ]
Line_4 $$ String fqcn = searchClass.getName()-->Line_4 $$ String fqcn = searchClass.getName()[ CD ]
Line_5 $$ List knownLocations = new ArrayList()-->Line_6 $$ knownLocations.add(location)[ FD ]
Line_2 $$ private final void findSubclasses(URL location, String packageName, Class superClass, Set setOfClasses) -->Line_6 $$ knownLocations.add(location)[ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ CD ]
Line_5 $$ List knownLocations = new ArrayList()-->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ CD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ CD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_8 $$ URL url = (URL) knownLocations.get(loc)[ CD ]
Line_5 $$ List knownLocations = new ArrayList()-->Line_8 $$ URL url = (URL) knownLocations.get(loc)[ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_8 $$ URL url = (URL) knownLocations.get(loc)[ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_9 $$ File directory = new File(url.getFile())[ CD ]
Line_8 $$ URL url = (URL) knownLocations.get(loc)-->Line_9 $$ File directory = new File(url.getFile())[ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_10 $$ if (directory.exists()) [ CD ]
Line_9 $$ File directory = new File(url.getFile())-->Line_10 $$ if (directory.exists()) [ FD ]
Line_10 $$ if (directory.exists()) -->Line_10 $$ if (directory.exists()) [ CD ]
Line_9 $$ File directory = new File(url.getFile())-->Line_10 $$ if (directory.exists()) [ FD ]
Line_10 $$ if (directory.exists()) -->Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY)[ CD ]
Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY)-->Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY)[ CD ]
Line_9 $$ File directory = new File(url.getFile())-->Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY)[ FD ]
Line_10 $$ if (directory.exists()) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_10 $$ if (directory.exists()) -->Line_10 $$ if (directory.exists()) [ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_13 $$ String filename = files[i].getName()[ CD ]
Line_13 $$ String filename = files[i].getName()-->Line_13 $$ String filename = files[i].getName()[ CD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_14 $$ String classname = filename.substring(0, filename.length() - 6)[ CD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_14 $$ String classname = filename.substring(0, filename.length() - 6)[ CD ]
Line_13 $$ String filename = files[i].getName()-->Line_14 $$ String classname = filename.substring(0, filename.length() - 6)[ FD ]
Line_13 $$ String filename = files[i].getName()-->Line_14 $$ String classname = filename.substring(0, filename.length() - 6)[ FD ]
Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) -->Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) [ CD ]
Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) -->Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) [ CD ]
Line_4 $$ String fqcn = searchClass.getName()-->Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) [ FD ]
Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) -->Line_17 $$ Class c = callClassForName(packageName + "." + classname)[ CD ]
Line_17 $$ Class c = callClassForName(packageName + "." + classname)-->Line_17 $$ Class c = callClassForName(packageName + "." + classname)[ CD ]
Line_16 $$ if (!fqcn.equals(packageName + "." + classname)) -->Line_18 $$ manageClass(setOfClasses, superClass, c, url)[ CD ]
Line_2 $$ private final void findSubclasses(URL location, String packageName, Class superClass, Set setOfClasses) -->Line_18 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_2 $$ private final void findSubclasses(URL location, String packageName, Class superClass, Set setOfClasses) -->Line_18 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_17 $$ Class c = callClassForName(packageName + "." + classname)-->Line_18 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_8 $$ URL url = (URL) knownLocations.get(loc)-->Line_18 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_8 $$ URL url = (URL) knownLocations.get(loc)-->Line_26 $$ JarURLConnection conn = (JarURLConnection) url.openConnection()[ FD ]
Line_29 $$ while (e.hasMoreElements()) -->Line_29 $$ while (e.hasMoreElements()) [ CD ]
Line_29 $$ while (e.hasMoreElements()) -->Line_30 $$ JarEntry entry = (JarEntry) e.nextElement()[ CD ]
Line_29 $$ while (e.hasMoreElements()) -->Line_31 $$ String entryname = entry.getName()[ CD ]
Line_31 $$ String entryname = entry.getName()-->Line_31 $$ String entryname = entry.getName()[ CD ]
Line_30 $$ JarEntry entry = (JarEntry) e.nextElement()-->Line_31 $$ String entryname = entry.getName()[ FD ]
Line_29 $$ while (e.hasMoreElements()) -->Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [ CD ]
Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) -->Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [ CD ]
Line_30 $$ JarEntry entry = (JarEntry) e.nextElement()-->Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [ FD ]
Line_31 $$ String entryname = entry.getName()-->Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [ FD ]
Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) -->Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)[ CD ]
Line_31 $$ String entryname = entry.getName()-->Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)[ FD ]
Line_31 $$ String entryname = entry.getName()-->Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)[ FD ]
Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) -->Line_34 $$ if (classname.startsWith("/"))[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_34 $$ if (classname.startsWith("/"))-->Line_34 $$ if (classname.startsWith("/"))[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_34 $$ if (classname.startsWith("/"))-->Line_34 $$ classname = classname.substring(1)[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_34 $$ classname = classname.substring(1)[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) -->Line_35 $$ classname = classname.replace('/', '.')[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_35 $$ classname = classname.replace('/', '.')[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_37 $$ if (!fqcn.equals(classname)) -->Line_37 $$ if (!fqcn.equals(classname)) [ CD ]
Line_37 $$ if (!fqcn.equals(classname)) -->Line_37 $$ if (!fqcn.equals(classname)) [ CD ]
Line_4 $$ String fqcn = searchClass.getName()-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_37 $$ if (!fqcn.equals(classname)) -->Line_38 $$ Class c = callClassForName(classname)[ CD ]
Line_38 $$ Class c = callClassForName(classname)-->Line_38 $$ Class c = callClassForName(classname)[ CD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_14 $$ String classname = filename.substring(0, filename.length() - 6)-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_37 $$ if (!fqcn.equals(classname)) -->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ CD ]
Line_2 $$ private final void findSubclasses(URL location, String packageName, Class superClass, Set setOfClasses) -->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_2 $$ private final void findSubclasses(URL location, String packageName, Class superClass, Set setOfClasses) -->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_38 $$ Class c = callClassForName(classname)-->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_17 $$ Class c = callClassForName(packageName + "." + classname)-->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_8 $$ URL url = (URL) knownLocations.get(loc)-->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) [ FD ]
Line_7 $$ for (int loc = 0; loc < knownLocations.size(); loc++) -->Line_8 $$ URL url = (URL) knownLocations.get(loc)[ FD ]
Line_8 $$ URL url = (URL) knownLocations.get(loc)-->Line_9 $$ File directory = new File(url.getFile())[ FD ]
Line_9 $$ File directory = new File(url.getFile())-->Line_10 $$ if (directory.exists()) [ FD ]
Line_9 $$ File directory = new File(url.getFile())-->Line_10 $$ if (directory.exists()) [ FD ]
Line_9 $$ File directory = new File(url.getFile())-->Line_11 $$ File[] files = directory.listFiles(CLASSES_ONLY)[ FD ]
Line_8 $$ URL url = (URL) knownLocations.get(loc)-->Line_26 $$ JarURLConnection conn = (JarURLConnection) url.openConnection()[ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_12 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ for (int i = 0; i < files.length; i++) [ FD ]
Line_13 $$ String filename = files[i].getName()-->Line_14 $$ String classname = filename.substring(0, filename.length() - 6)[ FD ]
Line_13 $$ String filename = files[i].getName()-->Line_14 $$ String classname = filename.substring(0, filename.length() - 6)[ FD ]
Line_17 $$ Class c = callClassForName(packageName + "." + classname)-->Line_18 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
Line_30 $$ JarEntry entry = (JarEntry) e.nextElement()-->Line_31 $$ String entryname = entry.getName()[ FD ]
Line_30 $$ JarEntry entry = (JarEntry) e.nextElement()-->Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [ FD ]
Line_31 $$ String entryname = entry.getName()-->Line_32 $$ if (!entry.isDirectory() && entryname.endsWith(".class")) [ FD ]
Line_31 $$ String entryname = entry.getName()-->Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)[ FD ]
Line_31 $$ String entryname = entry.getName()-->Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)[ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_34 $$ if (classname.startsWith("/"))[ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_34 $$ classname = classname.substring(1)[ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_35 $$ classname = classname.replace('/', '.')[ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_37 $$ if (!fqcn.equals(classname)) [ FD ]
Line_33 $$ String classname = entryname.substring(0, entryname.length() - 6)-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_34 $$ classname = classname.substring(1)-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_35 $$ classname = classname.replace('/', '.')-->Line_38 $$ Class c = callClassForName(classname)[ FD ]
Line_38 $$ Class c = callClassForName(classname)-->Line_39 $$ manageClass(setOfClasses, superClass, c, url)[ FD ]
