Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void sendMessageToServer(String msg, Map<String, String> args, StringCallback cb, URLConstructor ctor) [ CD ]
Line_4 $$ int tmpPort = port-->Line_5 $$ for (; tmpPort < port + 10; tmpPort++) [ FD ]
Line_5 $$ for (; tmpPort < port + 10; tmpPort++) -->Line_5 $$ for (; tmpPort < port + 10; tmpPort++) [ CD ]
Line_4 $$ int tmpPort = port-->Line_5 $$ for (; tmpPort < port + 10; tmpPort++) [ FD ]
Line_5 $$ for (; tmpPort < port + 10; tmpPort++) -->Line_6 $$ Socket tmpSock[ CD ]
Line_6 $$ Socket tmpSock-->Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)[ FD ]
Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)-->Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)[ FD ]
Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)-->Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)[ CD ]
Line_6 $$ Socket tmpSock-->Line_9 $$ tmpSock.close()[ FD ]
Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)-->Line_9 $$ tmpSock.close()[ FD ]
Line_14 $$ Map<String, String> newArgs = new HashMap<String, String>(args)-->Line_15 $$ newArgs.put("_f", String.valueOf(System.currentTimeMillis()))[ FD ]
Line_16 $$ String request = ctor.constructURL(msg, newArgs)-->Line_16 $$ String request = ctor.constructURL(msg, newArgs)[ CD ]
Line_2 $$ public void sendMessageToServer(String msg, Map<String, String> args, StringCallback cb, URLConstructor ctor) -->Line_16 $$ String request = ctor.constructURL(msg, newArgs)[ FD ]
Line_2 $$ public void sendMessageToServer(String msg, Map<String, String> args, StringCallback cb, URLConstructor ctor) -->Line_16 $$ String request = ctor.constructURL(msg, newArgs)[ FD ]
Line_14 $$ Map<String, String> newArgs = new HashMap<String, String>(args)-->Line_16 $$ String request = ctor.constructURL(msg, newArgs)[ FD ]
Line_17 $$ HttpClient client = new SimpleLimeHttpClient()-->Line_19 $$ HttpProtocolParams.setVersion(client.getParams(), HttpVersion.HTTP_1_1)[ FD ]
Line_20 $$ HttpResponse response = client.execute(get)-->Line_20 $$ HttpResponse response = client.execute(get)[ CD ]
Line_17 $$ HttpClient client = new SimpleLimeHttpClient()-->Line_20 $$ HttpResponse response = client.execute(get)[ FD ]
Line_18 $$ HttpGet get = new HttpGet("http://" + host + ":" + port + "/" + request)-->Line_20 $$ HttpResponse response = client.execute(get)[ FD ]
Line_20 $$ HttpResponse response = client.execute(get)-->Line_22 $$ if (response.getEntity() != null) [ FD ]
Line_22 $$ if (response.getEntity() != null) -->Line_23 $$ String result[ CD ]
Line_22 $$ if (response.getEntity() != null) -->Line_24 $$ if (response.getEntity() != null) [ CD ]
Line_20 $$ HttpResponse response = client.execute(get)-->Line_24 $$ if (response.getEntity() != null) [ FD ]
Line_24 $$ if (response.getEntity() != null) -->Line_25 $$ result = EntityUtils.toString(response.getEntity())[ CD ]
Line_23 $$ String result-->Line_25 $$ result = EntityUtils.toString(response.getEntity())[ FD ]
Line_25 $$ result = EntityUtils.toString(response.getEntity())-->Line_25 $$ result = EntityUtils.toString(response.getEntity())[ FD ]
Line_25 $$ result = EntityUtils.toString(response.getEntity())-->Line_25 $$ result = EntityUtils.toString(response.getEntity())[ CD ]
Line_20 $$ HttpResponse response = client.execute(get)-->Line_25 $$ result = EntityUtils.toString(response.getEntity())[ FD ]
Line_24 $$ if (response.getEntity() != null) -->Line_27 $$ result = null[ CD ]
Line_23 $$ String result-->Line_27 $$ result = null[ FD ]
Line_25 $$ result = EntityUtils.toString(response.getEntity())-->Line_27 $$ result = null[ FD ]
Line_27 $$ result = null-->Line_27 $$ result = null[ FD ]
Line_22 $$ if (response.getEntity() != null) -->Line_29 $$ res = result[ CD ]
Line_21 $$ String res = ""-->Line_29 $$ res = result[ FD ]
Line_29 $$ res = result-->Line_29 $$ res = result[ FD ]
Line_23 $$ String result-->Line_29 $$ res = result[ FD ]
Line_25 $$ result = EntityUtils.toString(response.getEntity())-->Line_29 $$ res = result[ FD ]
Line_27 $$ result = null-->Line_29 $$ res = result[ FD ]
Line_2 $$ public void sendMessageToServer(String msg, Map<String, String> args, StringCallback cb, URLConstructor ctor) -->Line_31 $$ cb.process(res)[ FD ]
Line_21 $$ String res = ""-->Line_31 $$ cb.process(res)[ FD ]
Line_29 $$ res = result-->Line_31 $$ cb.process(res)[ FD ]
Line_6 $$ Socket tmpSock-->Line_9 $$ tmpSock.close()[ FD ]
Line_8 $$ tmpSock = socketsManager.connect(new InetSocketAddress(host, port), 5000)-->Line_9 $$ tmpSock.close()[ FD ]
