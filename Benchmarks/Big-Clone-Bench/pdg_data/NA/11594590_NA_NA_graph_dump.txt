Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException [ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_3 $$ URL url = new URL(fetionAction.getProtocol().name().toLowerCase() + "://" + fetionUrl + fetionAction.getRequestData())[ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_3 $$ URL url = new URL(fetionAction.getProtocol().name().toLowerCase() + "://" + fetionUrl + fetionAction.getRequestData())[ FD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_3 $$ URL url = new URL(fetionAction.getProtocol().name().toLowerCase() + "://" + fetionUrl + fetionAction.getRequestData())[ FD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_4 $$ URLConnection connection = url.openConnection()[ CD ]
Line_4 $$ URLConnection connection = url.openConnection()-->Line_4 $$ URLConnection connection = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(fetionAction.getProtocol().name().toLowerCase() + "://" + fetionUrl + fetionAction.getRequestData())-->Line_4 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_5 $$ InputStream in = connection.getInputStream()[ CD ]
Line_5 $$ InputStream in = connection.getInputStream()-->Line_5 $$ InputStream in = connection.getInputStream()[ CD ]
Line_4 $$ URLConnection connection = url.openConnection()-->Line_5 $$ InputStream in = connection.getInputStream()[ FD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_6 $$ byte[] buffer = new byte[10240][ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_7 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_8 $$ int read = 0[ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_9 $$ while ((read = in.read(buffer)) > 0) [ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException [ CD ]
Line_9 $$ while ((read = in.read(buffer)) > 0) -->Line_9 $$ while ((read = in.read(buffer)) > 0) [ FD ]
Line_8 $$ int read = 0-->Line_9 $$ while ((read = in.read(buffer)) > 0) [ FD ]
Line_9 $$ while ((read = in.read(buffer)) > 0) -->Line_9 $$ while ((read = in.read(buffer)) > 0) [ CD ]
Line_5 $$ InputStream in = connection.getInputStream()-->Line_9 $$ while ((read = in.read(buffer)) > 0) [ FD ]
Line_6 $$ byte[] buffer = new byte[10240]-->Line_9 $$ while ((read = in.read(buffer)) > 0) [ FD ]
Line_9 $$ while ((read = in.read(buffer)) > 0) -->Line_10 $$ bout.write(buffer, 0, read)[ CD ]
Line_7 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_10 $$ bout.write(buffer, 0, read)[ FD ]
Line_6 $$ byte[] buffer = new byte[10240]-->Line_10 $$ bout.write(buffer, 0, read)[ FD ]
Line_9 $$ while ((read = in.read(buffer)) > 0) -->Line_10 $$ bout.write(buffer, 0, read)[ FD ]
Line_8 $$ int read = 0-->Line_10 $$ bout.write(buffer, 0, read)[ FD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_12 $$ return fetionAction.processResponse(parseRawResponse(bout.toByteArray()))[ CD ]
Line_12 $$ return fetionAction.processResponse(parseRawResponse(bout.toByteArray()))-->Line_12 $$ return fetionAction.processResponse(parseRawResponse(bout.toByteArray()))[ CD ]
Line_2 $$ public <T extends FetionResponse> T executeAction(FetionAction<T> fetionAction) throws IOException -->Line_12 $$ return fetionAction.processResponse(parseRawResponse(bout.toByteArray()))[ FD ]
Line_7 $$ ByteArrayOutputStream bout = new ByteArrayOutputStream()-->Line_12 $$ return fetionAction.processResponse(parseRawResponse(bout.toByteArray()))[ FD ]
Line_9 $$ while ((read = in.read(buffer)) > 0) -->Line_10 $$ bout.write(buffer, 0, read)[ FD ]
