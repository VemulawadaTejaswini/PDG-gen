Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_7 $$ while (true) -->Line_8 $$ str = fromBrowser.readLine()[ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_8 $$ str = fromBrowser.readLine()[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_8 $$ str = fromBrowser.readLine()[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_8 $$ str = fromBrowser.readLine()[ CD ]
Line_7 $$ while (true) -->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) -->Line_10 $$ getter = str[ CD ]
Line_10 $$ getter = str-->Line_10 $$ getter = str[ FD ]
Line_4 $$ String getter = null-->Line_10 $$ getter = str[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_10 $$ getter = str[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_10 $$ getter = str[ FD ]
Line_7 $$ while (true) -->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) -->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) -->Line_13 $$ str = "Accept-Encoding: identity"[ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_13 $$ str = "Accept-Encoding: identity"[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_13 $$ str = "Accept-Encoding: identity"[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_13 $$ str = "Accept-Encoding: identity"[ FD ]
Line_7 $$ while (true) -->Line_15 $$ httpHeader += str + "\r\n"[ CD ]
Line_15 $$ httpHeader += str + "\r\n"-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_7 $$ while (true) -->Line_16 $$ if (str.startsWith("Host: ")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_16 $$ if (str.startsWith("Host: ")) -->Line_16 $$ if (str.startsWith("Host: ")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_16 $$ if (str.startsWith("Host: ")) -->Line_17 $$ targetHost = str.substring(6)[ CD ]
Line_17 $$ targetHost = str.substring(6)-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_17 $$ targetHost = str.substring(6)[ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_16 $$ if (str.startsWith("Host: ")) -->Line_18 $$ if (str.startsWith("DESCRIBE")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_18 $$ if (str.startsWith("DESCRIBE")) -->Line_18 $$ if (str.startsWith("DESCRIBE")) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_18 $$ if (str.startsWith("DESCRIBE")) -->Line_19 $$ targetPort = 554[ CD ]
Line_19 $$ targetPort = 554-->Line_19 $$ targetPort = 554[ FD ]
Line_6 $$ int targetPort = 80-->Line_19 $$ targetPort = 554[ FD ]
Line_18 $$ if (str.startsWith("DESCRIBE")) -->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ CD ]
Line_17 $$ targetHost = str.substring(6)-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_18 $$ if (str.startsWith("DESCRIBE")) -->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ CD ]
Line_17 $$ targetHost = str.substring(6)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ CD ]
Line_17 $$ targetHost = str.substring(6)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_7 $$ while (true) -->Line_23 $$ if (str.length() == 0) [ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_23 $$ if (str.length() == 0) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_23 $$ if (str.length() == 0) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_23 $$ if (str.length() == 0) [ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_28 $$ if (targetHost.indexOf(":") > -1) [ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_28 $$ if (targetHost.indexOf(":") > -1) [ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_28 $$ if (targetHost.indexOf(":") > -1) [ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_28 $$ if (targetHost.indexOf(":") > -1) [ FD ]
Line_19 $$ targetPort = 554-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_6 $$ int targetPort = 80-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ CD ]
Line_17 $$ targetHost = str.substring(6)-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_30 $$ targetPort = Integer.parseInt(targetHost.substring(targetHost.indexOf(":") + 1))[ FD ]
Line_28 $$ if (targetHost.indexOf(":") > -1) -->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ CD ]
Line_27 $$ String target = targetHost-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ CD ]
Line_17 $$ targetHost = str.substring(6)-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))[ FD ]
Line_27 $$ String target = targetHost-->Line_36 $$ socketToWeb = new Socket(InetAddress.getByName(target), targetPort)[ FD ]
Line_33 $$ target = targetHost.substring(0, targetHost.indexOf(":"))-->Line_36 $$ socketToWeb = new Socket(InetAddress.getByName(target), targetPort)[ FD ]
Line_37 $$ InputStream sockWebInputStream = socketToWeb.getInputStream()-->Line_37 $$ InputStream sockWebInputStream = socketToWeb.getInputStream()[ CD ]
Line_15 $$ httpHeader += str + "\r\n"-->Line_39 $$ toWeb.println(httpHeader)[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_39 $$ toWeb.println(httpHeader)[ FD ]
Line_41 $$ StringTokenizer st = new StringTokenizer(getter, " ")-->Line_42 $$ st.nextToken()[ FD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_43 $$ String askedResource = st.nextToken()[ CD ]
Line_41 $$ StringTokenizer st = new StringTokenizer(getter, " ")-->Line_43 $$ String askedResource = st.nextToken()[ FD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ CD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_5 $$ String str, targetHost = "", httpHeader = ""-->Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())[ FD ]
Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))-->Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))[ CD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))[ FD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))[ FD ]
Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))-->Line_47 $$ directoryResource = getWritableFileName(directoryResource)[ FD ]
Line_47 $$ directoryResource = getWritableFileName(directoryResource)-->Line_47 $$ directoryResource = getWritableFileName(directoryResource)[ FD ]
Line_47 $$ directoryResource = getWritableFileName(directoryResource)-->Line_47 $$ directoryResource = getWritableFileName(directoryResource)[ CD ]
Line_46 $$ String directoryResource = askedResource.substring(0, askedResource.lastIndexOf("/"))-->Line_47 $$ directoryResource = getWritableFileName(directoryResource)[ FD ]
Line_47 $$ directoryResource = getWritableFileName(directoryResource)-->Line_47 $$ directoryResource = getWritableFileName(directoryResource)[ FD ]
Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)-->Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)[ CD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)[ FD ]
Line_43 $$ String askedResource = st.nextToken()-->Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)[ FD ]
Line_44 $$ askedResource = askedResource.substring(askedResource.indexOf(targetHost) + targetHost.length())-->Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)[ FD ]
Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)-->Line_49 $$ fileResource = getWritableFileName(fileResource)[ FD ]
Line_49 $$ fileResource = getWritableFileName(fileResource)-->Line_49 $$ fileResource = getWritableFileName(fileResource)[ FD ]
Line_49 $$ fileResource = getWritableFileName(fileResource)-->Line_49 $$ fileResource = getWritableFileName(fileResource)[ CD ]
Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)-->Line_49 $$ fileResource = getWritableFileName(fileResource)[ FD ]
Line_49 $$ fileResource = getWritableFileName(fileResource)-->Line_49 $$ fileResource = getWritableFileName(fileResource)[ FD ]
Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)-->Line_50 $$ fileResource = fileResource + ".cached"[ FD ]
Line_49 $$ fileResource = getWritableFileName(fileResource)-->Line_50 $$ fileResource = fileResource + ".cached"[ FD ]
Line_50 $$ fileResource = fileResource + ".cached"-->Line_50 $$ fileResource = fileResource + ".cached"[ FD ]
Line_48 $$ String fileResource = askedResource.substring(askedResource.lastIndexOf("/") + 1)-->Line_50 $$ fileResource = fileResource + ".cached"[ FD ]
Line_49 $$ fileResource = getWritableFileName(fileResource)-->Line_50 $$ fileResource = fileResource + ".cached"[ FD ]
Line_50 $$ fileResource = fileResource + ".cached"-->Line_50 $$ fileResource = fileResource + ".cached"[ FD ]
Line_53 $$ if (writeCache) -->Line_54 $$ directoryResourceFile.mkdirs()[ CD ]
Line_52 $$ File directoryResourceFile = new File(fileN)-->Line_54 $$ directoryResourceFile.mkdirs()[ FD ]
Line_56 $$ File cachedResource = new File(directoryResourceFile, fileResource)-->Line_58 $$ boolean resourceExists = cachedResource.exists() || this.getClass().getResource("/" + fileN) != null[ FD ]
Line_59 $$ boolean inMemory = writeCache && !resourceExists-->Line_59 $$ boolean inMemory = writeCache && !resourceExists[ CD ]
Line_58 $$ boolean resourceExists = cachedResource.exists() || this.getClass().getResource("/" + fileN) != null-->Line_59 $$ boolean inMemory = writeCache && !resourceExists[ FD ]
Line_61 $$ if (resourceExists) -->Line_62 $$ logger.trace("[PROXY] File is cached: " + cachedResource.getAbsolutePath())[ CD ]
Line_56 $$ File cachedResource = new File(directoryResourceFile, fileResource)-->Line_62 $$ logger.trace("[PROXY] File is cached: " + cachedResource.getAbsolutePath())[ FD ]
Line_61 $$ if (resourceExists) -->Line_63 $$ sockWebInputStream.close()[ CD ]
Line_37 $$ InputStream sockWebInputStream = socketToWeb.getInputStream()-->Line_63 $$ sockWebInputStream.close()[ FD ]
Line_61 $$ if (resourceExists) -->Line_64 $$ if (cachedResource.exists()) [ CD ]
Line_56 $$ File cachedResource = new File(directoryResourceFile, fileResource)-->Line_64 $$ if (cachedResource.exists()) [ FD ]
Line_64 $$ if (cachedResource.exists()) -->Line_64 $$ if (cachedResource.exists()) [ CD ]
Line_56 $$ File cachedResource = new File(directoryResourceFile, fileResource)-->Line_64 $$ if (cachedResource.exists()) [ FD ]
Line_64 $$ if (cachedResource.exists()) -->Line_65 $$ sockWebInputStream = new FileInputStream(cachedResource)[ CD ]
Line_37 $$ InputStream sockWebInputStream = socketToWeb.getInputStream()-->Line_65 $$ sockWebInputStream = new FileInputStream(cachedResource)[ FD ]
Line_65 $$ sockWebInputStream = new FileInputStream(cachedResource)-->Line_65 $$ sockWebInputStream = new FileInputStream(cachedResource)[ FD ]
Line_64 $$ if (cachedResource.exists()) -->Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)[ CD ]
Line_37 $$ InputStream sockWebInputStream = socketToWeb.getInputStream()-->Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)[ FD ]
Line_65 $$ sockWebInputStream = new FileInputStream(cachedResource)-->Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)[ FD ]
Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)-->Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)[ FD ]
Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)-->Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)[ CD ]
Line_61 $$ if (resourceExists) -->Line_69 $$ if (writeCache) [ CD ]
Line_69 $$ if (writeCache) -->Line_70 $$ logger.trace("[PROXY] File is not cached / Writing in it: " + cachedResource.getAbsolutePath())[ CD ]
Line_56 $$ File cachedResource = new File(directoryResourceFile, fileResource)-->Line_70 $$ logger.trace("[PROXY] File is not cached / Writing in it: " + cachedResource.getAbsolutePath())[ FD ]
Line_69 $$ if (writeCache) -->Line_71 $$ fOUT = new FileOutputStream(cachedResource, false)[ CD ]
Line_60 $$ FileOutputStream fOUT = null-->Line_71 $$ fOUT = new FileOutputStream(cachedResource, false)[ FD ]
Line_71 $$ fOUT = new FileOutputStream(cachedResource, false)-->Line_71 $$ fOUT = new FileOutputStream(cachedResource, false)[ FD ]
Line_74 $$ if (inMemory) -->Line_75 $$ baos = new ByteArrayOutputStream()[ CD ]
Line_73 $$ OutputStream baos = null-->Line_75 $$ baos = new ByteArrayOutputStream()[ FD ]
Line_75 $$ baos = new ByteArrayOutputStream()-->Line_75 $$ baos = new ByteArrayOutputStream()[ FD ]
Line_74 $$ if (inMemory) -->Line_77 $$ baos = toBrowser[ CD ]
Line_73 $$ OutputStream baos = null-->Line_77 $$ baos = toBrowser[ FD ]
Line_75 $$ baos = new ByteArrayOutputStream()-->Line_77 $$ baos = toBrowser[ FD ]
Line_77 $$ baos = toBrowser-->Line_77 $$ baos = toBrowser[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ FD ]
Line_80 $$ int bytes_read-->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ CD ]
Line_37 $$ InputStream sockWebInputStream = socketToWeb.getInputStream()-->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ FD ]
Line_65 $$ sockWebInputStream = new FileInputStream(cachedResource)-->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ FD ]
Line_67 $$ sockWebInputStream = this.getClass().getResourceAsStream("/" + fileN)-->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ FD ]
Line_57 $$ byte[] buffer = new byte[8192]-->Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) [ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_83 $$ if (!resourceExists) [ CD ]
Line_58 $$ boolean resourceExists = cachedResource.exists() || this.getClass().getResource("/" + fileN) != null-->Line_83 $$ if (!resourceExists) [ FD ]
Line_83 $$ if (!resourceExists) -->Line_83 $$ if (!resourceExists) [ CD ]
Line_58 $$ boolean resourceExists = cachedResource.exists() || this.getClass().getResource("/" + fileN) != null-->Line_83 $$ if (!resourceExists) [ FD ]
Line_83 $$ if (!resourceExists) -->Line_84 $$ if (10000000000L == CL) [ CD ]
Line_81 $$ long CL = 10000000000L-->Line_84 $$ if (10000000000L == CL) [ FD ]
Line_84 $$ if (10000000000L == CL) -->Line_85 $$ String s = new String(buffer, 0, bytes_read)[ CD ]
Line_84 $$ if (10000000000L == CL) -->Line_86 $$ int clPos = s.indexOf("Content-Length: ")[ CD ]
Line_86 $$ int clPos = s.indexOf("Content-Length: ")-->Line_86 $$ int clPos = s.indexOf("Content-Length: ")[ CD ]
Line_85 $$ String s = new String(buffer, 0, bytes_read)-->Line_86 $$ int clPos = s.indexOf("Content-Length: ")[ FD ]
Line_84 $$ if (10000000000L == CL) -->Line_87 $$ if (clPos > -1) [ CD ]
Line_86 $$ int clPos = s.indexOf("Content-Length: ")-->Line_87 $$ if (clPos > -1) [ FD ]
Line_87 $$ if (clPos > -1) -->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ CD ]
Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_81 $$ long CL = 10000000000L-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ CD ]
Line_85 $$ String s = new String(buffer, 0, bytes_read)-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_85 $$ String s = new String(buffer, 0, bytes_read)-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_86 $$ int clPos = s.indexOf("Content-Length: ")-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_87 $$ if (clPos > -1) -->Line_89 $$ logger.trace("Found Content Length: " + CL)[ CD ]
Line_83 $$ if (!resourceExists) -->Line_92 $$ if (bytes_read >= 7) [ CD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_92 $$ if (bytes_read >= 7) [ FD ]
Line_80 $$ int bytes_read-->Line_92 $$ if (bytes_read >= 7) [ FD ]
Line_92 $$ if (bytes_read >= 7) -->Line_93 $$ byte end[] = new byte[7][ CD ]
Line_92 $$ if (bytes_read >= 7) -->Line_94 $$ System.arraycopy(buffer, bytes_read - 7, end, 0, 7)[ CD ]
Line_57 $$ byte[] buffer = new byte[8192]-->Line_94 $$ System.arraycopy(buffer, bytes_read - 7, end, 0, 7)[ FD ]
Line_92 $$ if (bytes_read >= 7) -->Line_95 $$ if (new String(end).equals("\r\n0\r\n\r\n")) [ CD ]
Line_95 $$ if (new String(end).equals("\r\n0\r\n\r\n")) -->Line_95 $$ if (new String(end).equals("\r\n0\r\n\r\n")) [ CD ]
Line_95 $$ if (new String(end).equals("\r\n0\r\n\r\n")) -->Line_96 $$ System.out.println("end of transfer chunked")[ CD ]
Line_95 $$ if (new String(end).equals("\r\n0\r\n\r\n")) -->Line_97 $$ CL = -1[ CD ]
Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())-->Line_97 $$ CL = -1[ FD ]
Line_97 $$ CL = -1-->Line_97 $$ CL = -1[ FD ]
Line_81 $$ long CL = 10000000000L-->Line_97 $$ CL = -1[ FD ]
Line_97 $$ CL = -1-->Line_97 $$ CL = -1[ CD ]
Line_83 $$ if (!resourceExists) -->Line_100 $$ if (writeCache) [ CD ]
Line_100 $$ if (writeCache) -->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ CD ]
Line_60 $$ FileOutputStream fOUT = null-->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ FD ]
Line_71 $$ fOUT = new FileOutputStream(cachedResource, false)-->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ FD ]
Line_57 $$ byte[] buffer = new byte[8192]-->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ FD ]
Line_80 $$ int bytes_read-->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_104 $$ baos.write(buffer, 0, bytes_read)[ CD ]
Line_73 $$ OutputStream baos = null-->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_75 $$ baos = new ByteArrayOutputStream()-->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_77 $$ baos = toBrowser-->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_57 $$ byte[] buffer = new byte[8192]-->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_80 $$ int bytes_read-->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_105 $$ total_read += bytes_read[ CD ]
Line_105 $$ total_read += bytes_read-->Line_105 $$ total_read += bytes_read[ FD ]
Line_79 $$ long total_read = 0-->Line_105 $$ total_read += bytes_read[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_105 $$ total_read += bytes_read[ FD ]
Line_80 $$ int bytes_read-->Line_105 $$ total_read += bytes_read[ FD ]
Line_107 $$ if (inMemory) -->Line_108 $$ baos.close()[ CD ]
Line_73 $$ OutputStream baos = null-->Line_108 $$ baos.close()[ FD ]
Line_75 $$ baos = new ByteArrayOutputStream()-->Line_108 $$ baos.close()[ FD ]
Line_77 $$ baos = toBrowser-->Line_108 $$ baos.close()[ FD ]
Line_107 $$ if (inMemory) -->Line_109 $$ toBrowser.write(((ByteArrayOutputStream) baos).toByteArray())[ CD ]
Line_111 $$ if (writeCache && fOUT != null) -->Line_112 $$ fOUT.close()[ CD ]
Line_60 $$ FileOutputStream fOUT = null-->Line_112 $$ fOUT.close()[ FD ]
Line_71 $$ fOUT = new FileOutputStream(cachedResource, false)-->Line_112 $$ fOUT.close()[ FD ]
Line_119 $$ if (toWeb != null) -->Line_120 $$ toWeb.close()[ CD ]
Line_122 $$ if (toBrowser != null) -->Line_123 $$ toBrowser.close()[ CD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_9 $$ if (str.startsWith("GET") || str.startsWith("DESCRIBE") || str.startsWith("POST") || str.startsWith("HEAD")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_10 $$ getter = str[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_10 $$ getter = str[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_12 $$ if (str.startsWith("Accept-Encoding: gzip")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_15 $$ httpHeader += str + "\r\n"[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_16 $$ if (str.startsWith("Host: ")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_17 $$ targetHost = str.substring(6)[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_18 $$ if (str.startsWith("DESCRIBE")) [ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_17 $$ targetHost = str.substring(6)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_20 $$ targetHost = str.substring(str.indexOf("//") + 2)-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))-->Line_21 $$ targetHost = targetHost.substring(0, targetHost.indexOf("/"))[ FD ]
Line_8 $$ str = fromBrowser.readLine()-->Line_23 $$ if (str.length() == 0) [ FD ]
Line_13 $$ str = "Accept-Encoding: identity"-->Line_23 $$ if (str.length() == 0) [ FD ]
Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())-->Line_84 $$ if (10000000000L == CL) [ FD ]
Line_97 $$ CL = -1-->Line_84 $$ if (10000000000L == CL) [ FD ]
Line_85 $$ String s = new String(buffer, 0, bytes_read)-->Line_86 $$ int clPos = s.indexOf("Content-Length: ")[ FD ]
Line_86 $$ int clPos = s.indexOf("Content-Length: ")-->Line_87 $$ if (clPos > -1) [ FD ]
Line_85 $$ String s = new String(buffer, 0, bytes_read)-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_85 $$ String s = new String(buffer, 0, bytes_read)-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_86 $$ int clPos = s.indexOf("Content-Length: ")-->Line_88 $$ CL = Integer.parseInt(s.substring(clPos + 16, s.indexOf("\n", clPos)).trim())[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_92 $$ if (bytes_read >= 7) [ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_101 $$ fOUT.write(buffer, 0, bytes_read)[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_104 $$ baos.write(buffer, 0, bytes_read)[ FD ]
Line_82 $$ while (total_read < CL && (bytes_read = sockWebInputStream.read(buffer)) != -1) -->Line_105 $$ total_read += bytes_read[ FD ]
