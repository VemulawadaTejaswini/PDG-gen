Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void sendMessage(Message msg) [ CD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_3 $$ if (!blackList.contains(msg.getTo())) [ CD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_3 $$ if (!blackList.contains(msg.getTo())) [ CD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_3 $$ if (!blackList.contains(msg.getTo())) [ CD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_3 $$ if (!blackList.contains(msg.getTo())) [ FD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_4 $$ Hashtable<String, String> content = msg.getContent()[ CD ]
Line_4 $$ Hashtable<String, String> content = msg.getContent()-->Line_4 $$ Hashtable<String, String> content = msg.getContent()[ CD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_4 $$ Hashtable<String, String> content = msg.getContent()[ FD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_5 $$ Enumeration<String> keys = content.keys()[ CD ]
Line_5 $$ Enumeration<String> keys = content.keys()-->Line_5 $$ Enumeration<String> keys = content.keys()[ CD ]
Line_4 $$ Hashtable<String, String> content = msg.getContent()-->Line_5 $$ Enumeration<String> keys = content.keys()[ FD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_6 $$ String key[ CD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_7 $$ String data = "to=" + msg.getTo() + "&from=" + msg.getFrom() + "&"[ CD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_7 $$ String data = "to=" + msg.getTo() + "&from=" + msg.getFrom() + "&"[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_7 $$ String data = "to=" + msg.getTo() + "&from=" + msg.getFrom() + "&"[ FD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_8 $$ while (keys.hasMoreElements()) [ CD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_3 $$ if (!blackList.contains(msg.getTo())) [ CD ]
Line_8 $$ while (keys.hasMoreElements()) -->Line_8 $$ while (keys.hasMoreElements()) [ CD ]
Line_5 $$ Enumeration<String> keys = content.keys()-->Line_8 $$ while (keys.hasMoreElements()) [ FD ]
Line_8 $$ while (keys.hasMoreElements()) -->Line_9 $$ key = (String) keys.nextElement()[ CD ]
Line_9 $$ key = (String) keys.nextElement()-->Line_9 $$ key = (String) keys.nextElement()[ FD ]
Line_6 $$ String key-->Line_9 $$ key = (String) keys.nextElement()[ FD ]
Line_5 $$ Enumeration<String> keys = content.keys()-->Line_9 $$ key = (String) keys.nextElement()[ FD ]
Line_8 $$ while (keys.hasMoreElements()) -->Line_10 $$ data += key + "=" + content.get(key) + "&"[ CD ]
Line_10 $$ data += key + "=" + content.get(key) + "&"-->Line_10 $$ data += key + "=" + content.get(key) + "&"[ FD ]
Line_7 $$ String data = "to=" + msg.getTo() + "&from=" + msg.getFrom() + "&"-->Line_10 $$ data += key + "=" + content.get(key) + "&"[ FD ]
Line_4 $$ Hashtable<String, String> content = msg.getContent()-->Line_10 $$ data += key + "=" + content.get(key) + "&"[ FD ]
Line_9 $$ key = (String) keys.nextElement()-->Line_10 $$ data += key + "=" + content.get(key) + "&"[ FD ]
Line_6 $$ String key-->Line_10 $$ data += key + "=" + content.get(key) + "&"[ FD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_12 $$ URL url = null[ CD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_14 $$ logger.log(this, Level.FINER, "sending " + data + " to " + msg.getTo())[ FD ]
Line_12 $$ URL url = null-->Line_15 $$ url = new URL("http://" + msg.getTo() + ":8080/webmsgservice?" + data)[ FD ]
Line_15 $$ url = new URL("http://" + msg.getTo() + ":8080/webmsgservice?" + data)-->Line_15 $$ url = new URL("http://" + msg.getTo() + ":8080/webmsgservice?" + data)[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_15 $$ url = new URL("http://" + msg.getTo() + ":8080/webmsgservice?" + data)[ FD ]
Line_12 $$ URL url = null-->Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_15 $$ url = new URL("http://" + msg.getTo() + ":8080/webmsgservice?" + data)-->Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_17 $$ in.readLine()[ FD ]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_18 $$ in.close()[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_19 $$ logger.log(this, Level.FINER, "message sent to " + msg.getTo())[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_21 $$ blackList.add(msg.getTo())[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_22 $$ logger.log(this, Level.WARNING, "an error occured during message sending (" + msg.getTo() + ") : " + e.getMessage())[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_25 $$ logger.log(this, Level.WARNING, "an error occured during message sending (" + msg.getTo() + ") : " + e.getMessage())[ FD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_26 $$ blackList.add(msg.getTo())[ FD ]
Line_3 $$ if (!blackList.contains(msg.getTo())) -->Line_29 $$ logger.log(this, Level.FINE, "will not send message to " + msg.getTo() + " because black listed IP")[ CD ]
Line_2 $$ public void sendMessage(Message msg) -->Line_29 $$ logger.log(this, Level.FINE, "will not send message to " + msg.getTo() + " because black listed IP")[ FD ]
Line_9 $$ key = (String) keys.nextElement()-->Line_10 $$ data += key + "=" + content.get(key) + "&"[ FD ]
