Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public Mappings read() [ CD ]
Line_2 $$ public Mappings read() -->Line_3 $$ Mappings result = null[ CD ]
Line_2 $$ public Mappings read() -->Line_4 $$ InputStream stream = null[ CD ]
Line_4 $$ InputStream stream = null-->Line_7 $$ stream = url.openStream()[ FD ]
Line_7 $$ stream = url.openStream()-->Line_7 $$ stream = url.openStream()[ FD ]
Line_7 $$ stream = url.openStream()-->Line_7 $$ stream = url.openStream()[ CD ]
Line_3 $$ Mappings result = null-->Line_8 $$ result = parser.parse(stream)[ FD ]
Line_8 $$ result = parser.parse(stream)-->Line_8 $$ result = parser.parse(stream)[ FD ]
Line_8 $$ result = parser.parse(stream)-->Line_8 $$ result = parser.parse(stream)[ CD ]
Line_6 $$ XMLParser parser = new XMLParser()-->Line_8 $$ result = parser.parse(stream)[ FD ]
Line_4 $$ InputStream stream = null-->Line_8 $$ result = parser.parse(stream)[ FD ]
Line_7 $$ stream = url.openStream()-->Line_8 $$ result = parser.parse(stream)[ FD ]
Line_4 $$ InputStream stream = null-->Line_14 $$ if (stream != null) [ FD ]
Line_7 $$ stream = url.openStream()-->Line_14 $$ if (stream != null) [ FD ]
Line_14 $$ if (stream != null) -->Line_15 $$ stream.close()[ CD ]
Line_4 $$ InputStream stream = null-->Line_15 $$ stream.close()[ FD ]
Line_7 $$ stream = url.openStream()-->Line_15 $$ stream.close()[ FD ]
Line_2 $$ public Mappings read() -->Line_21 $$ return result[ CD ]
