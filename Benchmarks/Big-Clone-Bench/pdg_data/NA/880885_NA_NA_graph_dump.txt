Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(final String... args) [ CD ]
Line_2 $$ public static void main(final String... args) -->Line_3 $$ int returnCode = 0[ CD ]
Line_2 $$ public static void main(final String... args) -->Line_4 $$ if (args.length == 0) [ CD ]
Line_4 $$ if (args.length == 0) -->Line_5 $$ System.err.println("Usage: JWGet url...")[ CD ]
Line_4 $$ if (args.length == 0) -->Line_6 $$ returnCode++[ CD ]
Line_3 $$ int returnCode = 0-->Line_6 $$ returnCode++[ FD ]
Line_2 $$ public static void main(final String... args) -->Line_8 $$ final byte[] buf = new byte[8192][ CD ]
Line_15 $$ final URLConnection con = url.openConnection()-->Line_15 $$ final URLConnection con = url.openConnection()[ CD ]
Line_11 $$ final URL url = new URL(arg)-->Line_15 $$ final URLConnection con = url.openConnection()[ FD ]
Line_13 $$ InputStream in = null-->Line_16 $$ in = con.getInputStream()[ FD ]
Line_16 $$ in = con.getInputStream()-->Line_16 $$ in = con.getInputStream()[ FD ]
Line_16 $$ in = con.getInputStream()-->Line_16 $$ in = con.getInputStream()[ CD ]
Line_15 $$ final URLConnection con = url.openConnection()-->Line_16 $$ in = con.getInputStream()[ FD ]
Line_17 $$ final String location = con.getHeaderField("Content-Location")-->Line_17 $$ final String location = con.getHeaderField("Content-Location")[ CD ]
Line_15 $$ final URLConnection con = url.openConnection()-->Line_17 $$ final String location = con.getHeaderField("Content-Location")[ FD ]
Line_18 $$ final String outputFilename = new File((location != null ? new URL(url, location) : url).getFile()).getName()-->Line_18 $$ final String outputFilename = new File((location != null ? new URL(url, location) : url).getFile()).getName()[ CD ]
Line_18 $$ final String outputFilename = new File((location != null ? new URL(url, location) : url).getFile()).getName()-->Line_19 $$ System.err.println(outputFilename)[ FD ]
Line_12 $$ OutputStream out = null-->Line_20 $$ out = new FileOutputStream(outputFilename)[ FD ]
Line_20 $$ out = new FileOutputStream(outputFilename)-->Line_20 $$ out = new FileOutputStream(outputFilename)[ FD ]
Line_13 $$ InputStream in = null-->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_16 $$ in = con.getInputStream()-->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_8 $$ final byte[] buf = new byte[8192]-->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) -->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ CD ]
Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) -->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ CD ]
Line_12 $$ OutputStream out = null-->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_20 $$ out = new FileOutputStream(outputFilename)-->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_8 $$ final byte[] buf = new byte[8192]-->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) -->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
Line_3 $$ int returnCode = 0-->Line_24 $$ returnCode++[ FD ]
Line_13 $$ InputStream in = null-->Line_27 $$ in.close()[ FD ]
Line_16 $$ in = con.getInputStream()-->Line_27 $$ in.close()[ FD ]
Line_12 $$ OutputStream out = null-->Line_31 $$ out.close()[ FD ]
Line_20 $$ out = new FileOutputStream(outputFilename)-->Line_31 $$ out.close()[ FD ]
Line_3 $$ int returnCode = 0-->Line_37 $$ returnCode++[ FD ]
Line_2 $$ public static void main(final String... args) -->Line_40 $$ System.exit(returnCode)[ CD ]
Line_3 $$ int returnCode = 0-->Line_40 $$ System.exit(returnCode)[ FD ]
Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) -->Line_21 $$ for (int bytesRead; (bytesRead = in.read(buf)) != -1; out.write(buf, 0, bytesRead)) [ FD ]
