Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void handle() [ CD ]
Line_2 $$ public void handle() -->Line_3 $$ if (requestCounter == 0) [ CD ]
Line_3 $$ if (requestCounter == 0) -->Line_5 $$ return[ CD ]
Line_2 $$ public void handle() -->Line_8 $$ Iterator it = loggerTimeouts.keySet().iterator()[ CD ]
Line_8 $$ Iterator it = loggerTimeouts.keySet().iterator()-->Line_8 $$ Iterator it = loggerTimeouts.keySet().iterator()[ CD ]
Line_2 $$ public void handle() -->Line_9 $$ while (it.hasNext()) [ CD ]
Line_2 $$ public void handle() -->Line_2 $$ public void handle() [ CD ]
Line_9 $$ while (it.hasNext()) -->Line_9 $$ while (it.hasNext()) [ CD ]
Line_8 $$ Iterator it = loggerTimeouts.keySet().iterator()-->Line_9 $$ while (it.hasNext()) [ FD ]
Line_9 $$ while (it.hasNext()) -->Line_10 $$ String host = (String) it.next()[ CD ]
Line_8 $$ Iterator it = loggerTimeouts.keySet().iterator()-->Line_10 $$ String host = (String) it.next()[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_11 $$ String timeout = (String) loggerTimeouts.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_11 $$ String timeout = (String) loggerTimeouts.get(host)[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_12 $$ int timeoutVal = Integer.parseInt(timeout)[ CD ]
Line_12 $$ int timeoutVal = Integer.parseInt(timeout)-->Line_12 $$ int timeoutVal = Integer.parseInt(timeout)[ CD ]
Line_11 $$ String timeout = (String) loggerTimeouts.get(host)-->Line_12 $$ int timeoutVal = Integer.parseInt(timeout)[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_13 $$ if (timeoutVal > 0) [ CD ]
Line_12 $$ int timeoutVal = Integer.parseInt(timeout)-->Line_13 $$ if (timeoutVal > 0) [ FD ]
Line_13 $$ if (timeoutVal > 0) -->Line_14 $$ timeoutVal /= 10[ CD ]
Line_12 $$ int timeoutVal = Integer.parseInt(timeout)-->Line_14 $$ timeoutVal /= 10[ FD ]
Line_14 $$ timeoutVal /= 10-->Line_14 $$ timeoutVal /= 10[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_16 $$ int timeoutMod = (requestCounter % timeoutVal)[ CD ]
Line_9 $$ while (it.hasNext()) -->Line_17 $$ if (timeoutMod == 0) [ CD ]
Line_16 $$ int timeoutMod = (requestCounter % timeoutVal)-->Line_17 $$ if (timeoutMod == 0) [ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_18 $$ Object loggerFile = loggerFiles.get(host)[ CD ]
Line_18 $$ Object loggerFile = loggerFiles.get(host)-->Line_18 $$ Object loggerFile = loggerFiles.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_18 $$ Object loggerFile = loggerFiles.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)[ CD ]
Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)-->Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_20 $$ Object loggerDestObject = loggerDests.get(host)[ CD ]
Line_20 $$ Object loggerDestObject = loggerDests.get(host)-->Line_20 $$ Object loggerDestObject = loggerDests.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_20 $$ Object loggerDestObject = loggerDests.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_21 $$ Object loggerCompressObject = loggerCompresses.get(host)[ CD ]
Line_21 $$ Object loggerCompressObject = loggerCompresses.get(host)-->Line_21 $$ Object loggerCompressObject = loggerCompresses.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_21 $$ Object loggerCompressObject = loggerCompresses.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_22 $$ Object loggerDayObject = loggerDays.get(host)[ CD ]
Line_22 $$ Object loggerDayObject = loggerDays.get(host)-->Line_22 $$ Object loggerDayObject = loggerDays.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_22 $$ Object loggerDayObject = loggerDays.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)[ CD ]
Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)-->Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_24 $$ Object loggerDeleteObject = loggerDeletes.get(host)[ CD ]
Line_24 $$ Object loggerDeleteObject = loggerDeletes.get(host)-->Line_24 $$ Object loggerDeleteObject = loggerDeletes.get(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_24 $$ Object loggerDeleteObject = loggerDeletes.get(host)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_25 $$ boolean rotateCompress = false[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_26 $$ boolean rotateDelete = false[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_27 $$ String rotateDest = null[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_28 $$ String logFile = null[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_29 $$ String rotateArchive = null[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_30 $$ int rotateDays = 0[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_31 $$ if (loggerCompressObject != null && ((String) loggerCompressObject).equalsIgnoreCase("true")) [ CD ]
Line_31 $$ if (loggerCompressObject != null && ((String) loggerCompressObject).equalsIgnoreCase("true")) -->Line_32 $$ rotateCompress = true[ CD ]
Line_25 $$ boolean rotateCompress = false-->Line_32 $$ rotateCompress = true[ FD ]
Line_32 $$ rotateCompress = true-->Line_32 $$ rotateCompress = true[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_34 $$ if (loggerDeleteObject != null && ((String) loggerDeleteObject).equalsIgnoreCase("true")) [ CD ]
Line_34 $$ if (loggerDeleteObject != null && ((String) loggerDeleteObject).equalsIgnoreCase("true")) -->Line_35 $$ rotateDelete = true[ CD ]
Line_26 $$ boolean rotateDelete = false-->Line_35 $$ rotateDelete = true[ FD ]
Line_35 $$ rotateDelete = true-->Line_35 $$ rotateDelete = true[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_37 $$ if (loggerDestObject != null) [ CD ]
Line_20 $$ Object loggerDestObject = loggerDests.get(host)-->Line_37 $$ if (loggerDestObject != null) [ FD ]
Line_37 $$ if (loggerDestObject != null) -->Line_38 $$ rotateDest = (String) loggerDestObject[ CD ]
Line_27 $$ String rotateDest = null-->Line_38 $$ rotateDest = (String) loggerDestObject[ FD ]
Line_38 $$ rotateDest = (String) loggerDestObject-->Line_38 $$ rotateDest = (String) loggerDestObject[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_40 $$ if (loggerFilenameObject != null) [ CD ]
Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)-->Line_40 $$ if (loggerFilenameObject != null) [ FD ]
Line_40 $$ if (loggerFilenameObject != null) -->Line_41 $$ logFile = (String) loggerFilenameObject[ CD ]
Line_28 $$ String logFile = null-->Line_41 $$ logFile = (String) loggerFilenameObject[ FD ]
Line_41 $$ logFile = (String) loggerFilenameObject-->Line_41 $$ logFile = (String) loggerFilenameObject[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_43 $$ if (loggerArchiveObject != null) [ CD ]
Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)-->Line_43 $$ if (loggerArchiveObject != null) [ FD ]
Line_43 $$ if (loggerArchiveObject != null) -->Line_44 $$ rotateArchive = (String) loggerArchiveObject[ CD ]
Line_29 $$ String rotateArchive = null-->Line_44 $$ rotateArchive = (String) loggerArchiveObject[ FD ]
Line_44 $$ rotateArchive = (String) loggerArchiveObject-->Line_44 $$ rotateArchive = (String) loggerArchiveObject[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_46 $$ if (loggerDayObject != null) [ CD ]
Line_22 $$ Object loggerDayObject = loggerDays.get(host)-->Line_46 $$ if (loggerDayObject != null) [ FD ]
Line_46 $$ if (loggerDayObject != null) -->Line_47 $$ rotateDays = Integer.parseInt((String) loggerDayObject)[ CD ]
Line_30 $$ int rotateDays = 0-->Line_47 $$ rotateDays = Integer.parseInt((String) loggerDayObject)[ FD ]
Line_47 $$ rotateDays = Integer.parseInt((String) loggerDayObject)-->Line_47 $$ rotateDays = Integer.parseInt((String) loggerDayObject)[ FD ]
Line_47 $$ rotateDays = Integer.parseInt((String) loggerDayObject)-->Line_47 $$ rotateDays = Integer.parseInt((String) loggerDayObject)[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_49 $$ FileChannel srcChannel, destChannel[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_52 $$ if (rotateDest != null) [ CD ]
Line_27 $$ String rotateDest = null-->Line_52 $$ if (rotateDest != null) [ FD ]
Line_38 $$ rotateDest = (String) loggerDestObject-->Line_52 $$ if (rotateDest != null) [ FD ]
Line_52 $$ if (rotateDest != null) -->Line_53 $$ (new File(rotateDest)).mkdirs()[ CD ]
Line_52 $$ if (rotateDest != null) -->Line_54 $$ if (destOutFile.indexOf("/") != -1) [ CD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_54 $$ if (destOutFile.indexOf("/") != -1) [ FD ]
Line_54 $$ if (destOutFile.indexOf("/") != -1) -->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ CD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_52 $$ if (rotateDest != null) -->Line_57 $$ if (destOutFileCompressed.indexOf("/") != -1) [ CD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_57 $$ if (destOutFileCompressed.indexOf("/") != -1) [ FD ]
Line_57 $$ if (destOutFileCompressed.indexOf("/") != -1) -->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ CD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_61 $$ if (rotateCompress) [ CD ]
Line_67 $$ while ((len = in.read(buf)) > 0) -->Line_67 $$ while ((len = in.read(buf)) > 0) [ FD ]
Line_66 $$ int len-->Line_67 $$ while ((len = in.read(buf)) > 0) [ FD ]
Line_67 $$ while ((len = in.read(buf)) > 0) -->Line_67 $$ while ((len = in.read(buf)) > 0) [ CD ]
Line_64 $$ FileInputStream in = new FileInputStream(logFile)-->Line_67 $$ while ((len = in.read(buf)) > 0) [ FD ]
Line_67 $$ while ((len = in.read(buf)) > 0) -->Line_68 $$ out.write(buf, 0, len)[ CD ]
Line_63 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_68 $$ out.write(buf, 0, len)[ FD ]
Line_67 $$ while ((len = in.read(buf)) > 0) -->Line_68 $$ out.write(buf, 0, len)[ FD ]
Line_66 $$ int len-->Line_68 $$ out.write(buf, 0, len)[ FD ]
Line_64 $$ FileInputStream in = new FileInputStream(logFile)-->Line_70 $$ in.close()[ FD ]
Line_63 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_71 $$ out.finish()[ FD ]
Line_63 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_72 $$ out.close()[ FD ]
Line_63 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_75 $$ out = null[ FD ]
Line_75 $$ out = null-->Line_75 $$ out = null[ FD ]
Line_64 $$ FileInputStream in = new FileInputStream(logFile)-->Line_76 $$ in = null[ FD ]
Line_76 $$ in = null-->Line_76 $$ in = null[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()[ CD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()[ CD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_95 $$ srcChannel.close()[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_95 $$ srcChannel.close()[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_96 $$ destChannel.close()[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_96 $$ destChannel.close()[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_97 $$ destChannel = null[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_97 $$ destChannel = null[ FD ]
Line_97 $$ destChannel = null-->Line_97 $$ destChannel = null[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_98 $$ srcChannel = null[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_98 $$ srcChannel = null[ FD ]
Line_98 $$ srcChannel = null-->Line_98 $$ srcChannel = null[ FD ]
Line_61 $$ if (rotateCompress) -->Line_103 $$ Debug.debug("Rotated log file '" + logFile + "' to '" + destOutFile + "'")[ CD ]
Line_17 $$ if (timeoutMod == 0) -->Line_105 $$ if (rotateDelete) [ CD ]
Line_105 $$ if (rotateDelete) -->Line_110 $$ (new File(logFile)).delete()[ CD ]
Line_105 $$ if (rotateDelete) -->Line_111 $$ loggerFiles.remove(host)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_111 $$ loggerFiles.remove(host)[ FD ]
Line_105 $$ if (rotateDelete) -->Line_112 $$ addLogger(host, logFile)[ CD ]
Line_10 $$ String host = (String) it.next()-->Line_112 $$ addLogger(host, logFile)[ FD ]
Line_28 $$ String logFile = null-->Line_112 $$ addLogger(host, logFile)[ FD ]
Line_41 $$ logFile = (String) loggerFilenameObject-->Line_112 $$ addLogger(host, logFile)[ FD ]
Line_17 $$ if (timeoutMod == 0) -->Line_114 $$ if (rotateDest != null) [ CD ]
Line_27 $$ String rotateDest = null-->Line_114 $$ if (rotateDest != null) [ FD ]
Line_38 $$ rotateDest = (String) loggerDestObject-->Line_114 $$ if (rotateDest != null) [ FD ]
Line_114 $$ if (rotateDest != null) -->Line_116 $$ long currentTime = System.currentTimeMillis()[ CD ]
Line_114 $$ if (rotateDest != null) -->Line_117 $$ File fileList[] = (new File(rotateDest)).listFiles()[ CD ]
Line_114 $$ if (rotateDest != null) -->Line_121 $$ if (rotateArchive != null) [ CD ]
Line_29 $$ String rotateArchive = null-->Line_121 $$ if (rotateArchive != null) [ FD ]
Line_44 $$ rotateArchive = (String) loggerArchiveObject-->Line_121 $$ if (rotateArchive != null) [ FD ]
Line_121 $$ if (rotateArchive != null) -->Line_123 $$ (new File(rotateArchive)).mkdirs()[ CD ]
Line_114 $$ if (rotateDest != null) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ CD ]
Line_114 $$ if (rotateDest != null) -->Line_114 $$ if (rotateDest != null) [ CD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ CD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ CD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_127 $$ String currentFilename = fileList[i].getName()[ CD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_127 $$ String currentFilename = fileList[i].getName()[ CD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_128 $$ long timeDifference = (currentTime - fileList[i].lastModified())[ CD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ CD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_25 $$ boolean rotateCompress = false-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_32 $$ rotateCompress = true-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) -->Line_130 $$ if (rotateDest != null) [ CD ]
Line_27 $$ String rotateDest = null-->Line_130 $$ if (rotateDest != null) [ FD ]
Line_38 $$ rotateDest = (String) loggerDestObject-->Line_130 $$ if (rotateDest != null) [ FD ]
Line_130 $$ if (rotateDest != null) -->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ CD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) -->Line_133 $$ if (timeDifference > comparisonTime) [ CD ]
Line_128 $$ long timeDifference = (currentTime - fileList[i].lastModified())-->Line_133 $$ if (timeDifference > comparisonTime) [ FD ]
Line_133 $$ if (timeDifference > comparisonTime) -->Line_134 $$ archive.addFile(fileList[i].getName(), currentFilename)[ CD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_134 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_134 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_133 $$ if (timeDifference > comparisonTime) -->Line_135 $$ fileList[i].delete()[ CD ]
Line_2 $$ public void handle() -->Line_145 $$ it = null[ CD ]
Line_8 $$ Iterator it = loggerTimeouts.keySet().iterator()-->Line_145 $$ it = null[ FD ]
Line_145 $$ it = null-->Line_145 $$ it = null[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_11 $$ String timeout = (String) loggerTimeouts.get(host)[ FD ]
Line_11 $$ String timeout = (String) loggerTimeouts.get(host)-->Line_12 $$ int timeoutVal = Integer.parseInt(timeout)[ FD ]
Line_12 $$ int timeoutVal = Integer.parseInt(timeout)-->Line_13 $$ if (timeoutVal > 0) [ FD ]
Line_14 $$ timeoutVal /= 10-->Line_13 $$ if (timeoutVal > 0) [ FD ]
Line_16 $$ int timeoutMod = (requestCounter % timeoutVal)-->Line_17 $$ if (timeoutMod == 0) [ FD ]
Line_10 $$ String host = (String) it.next()-->Line_18 $$ Object loggerFile = loggerFiles.get(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_20 $$ Object loggerDestObject = loggerDests.get(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_21 $$ Object loggerCompressObject = loggerCompresses.get(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_22 $$ Object loggerDayObject = loggerDays.get(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_24 $$ Object loggerDeleteObject = loggerDeletes.get(host)[ FD ]
Line_20 $$ Object loggerDestObject = loggerDests.get(host)-->Line_37 $$ if (loggerDestObject != null) [ FD ]
Line_19 $$ Object loggerFilenameObject = loggerFilenames.get(host)-->Line_40 $$ if (loggerFilenameObject != null) [ FD ]
Line_23 $$ Object loggerArchiveObject = loggerArchives.get(host)-->Line_43 $$ if (loggerArchiveObject != null) [ FD ]
Line_22 $$ Object loggerDayObject = loggerDays.get(host)-->Line_46 $$ if (loggerDayObject != null) [ FD ]
Line_27 $$ String rotateDest = null-->Line_52 $$ if (rotateDest != null) [ FD ]
Line_38 $$ rotateDest = (String) loggerDestObject-->Line_52 $$ if (rotateDest != null) [ FD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_54 $$ if (destOutFile.indexOf("/") != -1) [ FD ]
Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_54 $$ if (destOutFile.indexOf("/") != -1) [ FD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_50 $$ String destOutFile = logFile + "." + System.currentTimeMillis()-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)-->Line_55 $$ destOutFile = rotateDest + "/" + destOutFile.substring(destOutFile.lastIndexOf("/") + 1)[ FD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_57 $$ if (destOutFileCompressed.indexOf("/") != -1) [ FD ]
Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_57 $$ if (destOutFileCompressed.indexOf("/") != -1) [ FD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_51 $$ String destOutFileCompressed = logFile + "." + System.currentTimeMillis() + ".gz"-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)-->Line_58 $$ destOutFileCompressed = rotateDest + "/" + destOutFileCompressed.substring(destOutFileCompressed.lastIndexOf("/") + 1)[ FD ]
Line_64 $$ FileInputStream in = new FileInputStream(logFile)-->Line_70 $$ in.close()[ FD ]
Line_76 $$ in = null-->Line_70 $$ in.close()[ FD ]
Line_63 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_71 $$ out.finish()[ FD ]
Line_75 $$ out = null-->Line_71 $$ out.finish()[ FD ]
Line_63 $$ GZIPOutputStream out = new GZIPOutputStream(new FileOutputStream(destOutFileCompressed))-->Line_72 $$ out.close()[ FD ]
Line_75 $$ out = null-->Line_72 $$ out.close()[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_97 $$ destChannel = null-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_98 $$ srcChannel = null-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_98 $$ srcChannel = null-->Line_94 $$ destChannel.transferFrom(srcChannel, 0, srcChannel.size())[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_95 $$ srcChannel.close()[ FD ]
Line_82 $$ srcChannel = new FileInputStream(logFile).getChannel()-->Line_95 $$ srcChannel.close()[ FD ]
Line_98 $$ srcChannel = null-->Line_95 $$ srcChannel.close()[ FD ]
Line_49 $$ FileChannel srcChannel, destChannel-->Line_96 $$ destChannel.close()[ FD ]
Line_88 $$ destChannel = new FileOutputStream(destOutFile).getChannel()-->Line_96 $$ destChannel.close()[ FD ]
Line_97 $$ destChannel = null-->Line_96 $$ destChannel.close()[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_111 $$ loggerFiles.remove(host)[ FD ]
Line_10 $$ String host = (String) it.next()-->Line_112 $$ addLogger(host, logFile)[ FD ]
Line_28 $$ String logFile = null-->Line_112 $$ addLogger(host, logFile)[ FD ]
Line_41 $$ logFile = (String) loggerFilenameObject-->Line_112 $$ addLogger(host, logFile)[ FD ]
Line_27 $$ String rotateDest = null-->Line_114 $$ if (rotateDest != null) [ FD ]
Line_38 $$ rotateDest = (String) loggerDestObject-->Line_114 $$ if (rotateDest != null) [ FD ]
Line_29 $$ String rotateArchive = null-->Line_121 $$ if (rotateArchive != null) [ FD ]
Line_44 $$ rotateArchive = (String) loggerArchiveObject-->Line_121 $$ if (rotateArchive != null) [ FD ]
Line_67 $$ while ((len = in.read(buf)) > 0) -->Line_68 $$ out.write(buf, 0, len)[ FD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_126 $$ for (int i = 0; i < fileList.length; i++) -->Line_126 $$ for (int i = 0; i < fileList.length; i++) [ FD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_129 $$ if ((rotateCompress && currentFilename.endsWith(".gz")) || (!rotateCompress && currentFilename.indexOf(logFile + ".") != -1)) [ FD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_131 $$ currentFilename = rotateDest + "/" + currentFilename[ FD ]
Line_128 $$ long timeDifference = (currentTime - fileList[i].lastModified())-->Line_133 $$ if (timeDifference > comparisonTime) [ FD ]
Line_127 $$ String currentFilename = fileList[i].getName()-->Line_134 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
Line_131 $$ currentFilename = rotateDest + "/" + currentFilename-->Line_134 $$ archive.addFile(fileList[i].getName(), currentFilename)[ FD ]
