Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException [ CD ]
Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException -->Line_3 $$ if (url.getProtocol().equals("file")) [ CD ]
Line_3 $$ if (url.getProtocol().equals("file")) -->Line_3 $$ if (url.getProtocol().equals("file")) [ CD ]
Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException -->Line_3 $$ if (url.getProtocol().equals("file")) [ FD ]
Line_3 $$ if (url.getProtocol().equals("file")) -->Line_4 $$ return find(new File(url.getFile()), entryName)[ CD ]
Line_4 $$ return find(new File(url.getFile()), entryName)-->Line_4 $$ return find(new File(url.getFile()), entryName)[ CD ]
Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException -->Line_4 $$ return find(new File(url.getFile()), entryName)[ FD ]
Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException -->Line_4 $$ return find(new File(url.getFile()), entryName)[ FD ]
Line_3 $$ if (url.getProtocol().equals("file")) -->Line_6 $$ return find(url.openStream(), entryName)[ CD ]
Line_6 $$ return find(url.openStream(), entryName)-->Line_6 $$ return find(url.openStream(), entryName)[ CD ]
Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException -->Line_6 $$ return find(url.openStream(), entryName)[ FD ]
Line_2 $$ public static TerminatedInputStream find(URL url, String entryName) throws IOException -->Line_6 $$ return find(url.openStream(), entryName)[ FD ]
