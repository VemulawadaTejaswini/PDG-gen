Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testWriteModel() [ CD ]
Line_2 $$ public void testWriteModel() -->Line_3 $$ Model model = new Model()[ CD ]
Line_2 $$ public void testWriteModel() -->Line_4 $$ model.setName("MY_MODEL1")[ CD ]
Line_3 $$ Model model = new Model()-->Line_4 $$ model.setName("MY_MODEL1")[ FD ]
Line_2 $$ public void testWriteModel() -->Line_5 $$ Stereotype st1 = new Stereotype()[ CD ]
Line_2 $$ public void testWriteModel() -->Line_6 $$ st1.setName("Pirulito1")[ CD ]
Line_5 $$ Stereotype st1 = new Stereotype()-->Line_6 $$ st1.setName("Pirulito1")[ FD ]
Line_2 $$ public void testWriteModel() -->Line_7 $$ PackageObject p1 = new PackageObject("p1")[ CD ]
Line_2 $$ public void testWriteModel() -->Line_8 $$ ClassType type1 = new ClassType("Class1")[ CD ]
Line_2 $$ public void testWriteModel() -->Line_9 $$ type1.setStereotype(st1)[ CD ]
Line_8 $$ ClassType type1 = new ClassType("Class1")-->Line_9 $$ type1.setStereotype(st1)[ FD ]
Line_5 $$ Stereotype st1 = new Stereotype()-->Line_9 $$ type1.setStereotype(st1)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_10 $$ type1.addMethod(new Method("doSomething"))[ CD ]
Line_8 $$ ClassType type1 = new ClassType("Class1")-->Line_10 $$ type1.addMethod(new Method("doSomething"))[ FD ]
Line_2 $$ public void testWriteModel() -->Line_11 $$ p1.add(type1)[ CD ]
Line_7 $$ PackageObject p1 = new PackageObject("p1")-->Line_11 $$ p1.add(type1)[ FD ]
Line_8 $$ ClassType type1 = new ClassType("Class1")-->Line_11 $$ p1.add(type1)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_12 $$ ClassType type2 = new ClassType("Class2")[ CD ]
Line_2 $$ public void testWriteModel() -->Line_13 $$ Method m2 = new Method("doSomethingElse")[ CD ]
Line_2 $$ public void testWriteModel() -->Line_14 $$ m2.setType(type1)[ CD ]
Line_13 $$ Method m2 = new Method("doSomethingElse")-->Line_14 $$ m2.setType(type1)[ FD ]
Line_8 $$ ClassType type1 = new ClassType("Class1")-->Line_14 $$ m2.setType(type1)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_15 $$ type2.addMethod(m2)[ CD ]
Line_12 $$ ClassType type2 = new ClassType("Class2")-->Line_15 $$ type2.addMethod(m2)[ FD ]
Line_13 $$ Method m2 = new Method("doSomethingElse")-->Line_15 $$ type2.addMethod(m2)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_16 $$ p1.add(type2)[ CD ]
Line_7 $$ PackageObject p1 = new PackageObject("p1")-->Line_16 $$ p1.add(type2)[ FD ]
Line_12 $$ ClassType type2 = new ClassType("Class2")-->Line_16 $$ p1.add(type2)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_17 $$ Generalization g = new Generalization()[ CD ]
Line_2 $$ public void testWriteModel() -->Line_18 $$ g.setSource(type1)[ CD ]
Line_17 $$ Generalization g = new Generalization()-->Line_18 $$ g.setSource(type1)[ FD ]
Line_8 $$ ClassType type1 = new ClassType("Class1")-->Line_18 $$ g.setSource(type1)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_19 $$ g.setTarget(type1)[ CD ]
Line_17 $$ Generalization g = new Generalization()-->Line_19 $$ g.setTarget(type1)[ FD ]
Line_8 $$ ClassType type1 = new ClassType("Class1")-->Line_19 $$ g.setTarget(type1)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_20 $$ p1.add(g)[ CD ]
Line_7 $$ PackageObject p1 = new PackageObject("p1")-->Line_20 $$ p1.add(g)[ FD ]
Line_17 $$ Generalization g = new Generalization()-->Line_20 $$ p1.add(g)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_21 $$ model.add(p1)[ CD ]
Line_3 $$ Model model = new Model()-->Line_21 $$ model.add(p1)[ FD ]
Line_7 $$ PackageObject p1 = new PackageObject("p1")-->Line_21 $$ model.add(p1)[ FD ]
Line_2 $$ public void testWriteModel() -->Line_22 $$ ModelWriter writer = new ModelWriter()[ CD ]
Line_22 $$ ModelWriter writer = new ModelWriter()-->Line_25 $$ writer.write(model, modelFile)[ FD ]
Line_3 $$ Model model = new Model()-->Line_25 $$ writer.write(model, modelFile)[ FD ]
Line_24 $$ File modelFile = new File("target", "test.model")-->Line_25 $$ writer.write(model, modelFile)[ FD ]
Line_26 $$ File xmlFile = new File("target", "test.xml")-->Line_27 $$ xmlFile.createNewFile()[ FD ]
