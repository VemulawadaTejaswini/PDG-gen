Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private InputStream getManifestAsResource() [ CD ]
Line_2 $$ private InputStream getManifestAsResource() -->Line_3 $$ ClassLoader cl = getClass().getClassLoader()[ CD ]
Line_3 $$ ClassLoader cl = getClass().getClassLoader()-->Line_3 $$ ClassLoader cl = getClass().getClassLoader()[ CD ]
Line_3 $$ ClassLoader cl = getClass().getClassLoader()-->Line_5 $$ Enumeration manifests = cl != null ? cl.getResources(Constants.OSGI_BUNDLE_MANIFEST) : ClassLoader.getSystemResources(Constants.OSGI_BUNDLE_MANIFEST)[ FD ]
Line_6 $$ while (manifests.hasMoreElements()) -->Line_6 $$ while (manifests.hasMoreElements()) [ CD ]
Line_5 $$ Enumeration manifests = cl != null ? cl.getResources(Constants.OSGI_BUNDLE_MANIFEST) : ClassLoader.getSystemResources(Constants.OSGI_BUNDLE_MANIFEST)-->Line_6 $$ while (manifests.hasMoreElements()) [ FD ]
Line_6 $$ while (manifests.hasMoreElements()) -->Line_7 $$ URL url = (URL) manifests.nextElement()[ CD ]
Line_5 $$ Enumeration manifests = cl != null ? cl.getResources(Constants.OSGI_BUNDLE_MANIFEST) : ClassLoader.getSystemResources(Constants.OSGI_BUNDLE_MANIFEST)-->Line_7 $$ URL url = (URL) manifests.nextElement()[ FD ]
Line_9 $$ Headers headers = Headers.parseManifest(url.openStream())-->Line_9 $$ Headers headers = Headers.parseManifest(url.openStream())[ CD ]
Line_7 $$ URL url = (URL) manifests.nextElement()-->Line_9 $$ Headers headers = Headers.parseManifest(url.openStream())[ FD ]
Line_10 $$ if ("true".equals(headers.get(Constants.ECLIPSE_SYSTEMBUNDLE)))-->Line_10 $$ if ("true".equals(headers.get(Constants.ECLIPSE_SYSTEMBUNDLE)))[ CD ]
Line_9 $$ Headers headers = Headers.parseManifest(url.openStream())-->Line_10 $$ if ("true".equals(headers.get(Constants.ECLIPSE_SYSTEMBUNDLE)))[ FD ]
Line_10 $$ if ("true".equals(headers.get(Constants.ECLIPSE_SYSTEMBUNDLE)))-->Line_10 $$ return url.openStream()[ CD ]
Line_10 $$ return url.openStream()-->Line_10 $$ return url.openStream()[ CD ]
Line_7 $$ URL url = (URL) manifests.nextElement()-->Line_10 $$ return url.openStream()[ FD ]
Line_2 $$ private InputStream getManifestAsResource() -->Line_16 $$ return null[ CD ]
Line_7 $$ URL url = (URL) manifests.nextElement()-->Line_9 $$ Headers headers = Headers.parseManifest(url.openStream())[ FD ]
Line_9 $$ Headers headers = Headers.parseManifest(url.openStream())-->Line_10 $$ if ("true".equals(headers.get(Constants.ECLIPSE_SYSTEMBUNDLE)))[ FD ]
Line_7 $$ URL url = (URL) manifests.nextElement()-->Line_10 $$ return url.openStream()[ FD ]
