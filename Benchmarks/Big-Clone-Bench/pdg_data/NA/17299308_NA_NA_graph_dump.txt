Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public InputStream getResourceAsStream(String name) [ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_3 $$ if (debug >= 2)[ CD ]
Line_3 $$ if (debug >= 2)-->Line_3 $$ log("getResourceAsStream(" + name + ")")[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_4 $$ InputStream stream = null[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_5 $$ stream = findLoadedResource(name)[ CD ]
Line_4 $$ InputStream stream = null-->Line_5 $$ stream = findLoadedResource(name)[ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_5 $$ stream = findLoadedResource(name)[ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_5 $$ stream = findLoadedResource(name)[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_5 $$ stream = findLoadedResource(name)[ FD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_6 $$ if (stream != null) [ CD ]
Line_4 $$ InputStream stream = null-->Line_6 $$ if (stream != null) [ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_6 $$ if (stream != null) [ FD ]
Line_6 $$ if (stream != null) -->Line_7 $$ if (debug >= 2)[ CD ]
Line_7 $$ if (debug >= 2)-->Line_7 $$ log("  --> Returning stream from cache")[ CD ]
Line_6 $$ if (stream != null) -->Line_8 $$ return (stream)[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_10 $$ if (delegate) [ CD ]
Line_10 $$ if (delegate) -->Line_11 $$ if (debug >= 3)[ CD ]
Line_11 $$ if (debug >= 3)-->Line_11 $$ log("  Delegating to parent classloader")[ CD ]
Line_10 $$ if (delegate) -->Line_12 $$ ClassLoader loader = parent[ CD ]
Line_10 $$ if (delegate) -->Line_13 $$ if (loader == null)[ CD ]
Line_12 $$ ClassLoader loader = parent-->Line_13 $$ if (loader == null)[ FD ]
Line_13 $$ if (loader == null)-->Line_13 $$ loader = system[ CD ]
Line_12 $$ ClassLoader loader = parent-->Line_13 $$ loader = system[ FD ]
Line_13 $$ loader = system-->Line_13 $$ loader = system[ FD ]
Line_10 $$ if (delegate) -->Line_14 $$ stream = loader.getResourceAsStream(name)[ CD ]
Line_4 $$ InputStream stream = null-->Line_14 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_14 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_14 $$ stream = loader.getResourceAsStream(name)-->Line_14 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_14 $$ stream = loader.getResourceAsStream(name)-->Line_14 $$ stream = loader.getResourceAsStream(name)[ CD ]
Line_12 $$ ClassLoader loader = parent-->Line_14 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_13 $$ loader = system-->Line_14 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_14 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_10 $$ if (delegate) -->Line_15 $$ if (stream != null) [ CD ]
Line_4 $$ InputStream stream = null-->Line_15 $$ if (stream != null) [ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_15 $$ if (stream != null) [ FD ]
Line_14 $$ stream = loader.getResourceAsStream(name)-->Line_15 $$ if (stream != null) [ FD ]
Line_15 $$ if (stream != null) -->Line_16 $$ if (debug >= 2)[ CD ]
Line_16 $$ if (debug >= 2)-->Line_16 $$ log("  --> Returning stream from parent")[ CD ]
Line_15 $$ if (stream != null) -->Line_17 $$ return (stream)[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_20 $$ if (debug >= 3)[ CD ]
Line_20 $$ if (debug >= 3)-->Line_20 $$ log("  Searching local repositories")[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_21 $$ URL url = findResource(name)[ CD ]
Line_21 $$ URL url = findResource(name)-->Line_21 $$ URL url = findResource(name)[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_21 $$ URL url = findResource(name)[ FD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_22 $$ if (url != null) [ CD ]
Line_21 $$ URL url = findResource(name)-->Line_22 $$ if (url != null) [ FD ]
Line_22 $$ if (url != null) -->Line_23 $$ if (debug >= 2)[ CD ]
Line_23 $$ if (debug >= 2)-->Line_23 $$ log("  --> Returning stream from local")[ CD ]
Line_21 $$ URL url = findResource(name)-->Line_25 $$ return (url.openStream())[ FD ]
Line_21 $$ URL url = findResource(name)-->Line_27 $$ log("url.openStream(" + url.toString() + ")", e)[ FD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_31 $$ if (!delegate) [ CD ]
Line_31 $$ if (!delegate) -->Line_32 $$ if (debug >= 3)[ CD ]
Line_32 $$ if (debug >= 3)-->Line_32 $$ log("  Delegating to parent classloader")[ CD ]
Line_31 $$ if (!delegate) -->Line_34 $$ if (loader == null)[ CD ]
Line_12 $$ ClassLoader loader = parent-->Line_34 $$ if (loader == null)[ FD ]
Line_13 $$ loader = system-->Line_34 $$ if (loader == null)[ FD ]
Line_34 $$ if (loader == null)-->Line_34 $$ loader = system[ CD ]
Line_12 $$ ClassLoader loader = parent-->Line_34 $$ loader = system[ FD ]
Line_13 $$ loader = system-->Line_34 $$ loader = system[ FD ]
Line_34 $$ loader = system-->Line_34 $$ loader = system[ FD ]
Line_31 $$ if (!delegate) -->Line_35 $$ stream = loader.getResourceAsStream(name)[ CD ]
Line_4 $$ InputStream stream = null-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_14 $$ stream = loader.getResourceAsStream(name)-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_35 $$ stream = loader.getResourceAsStream(name)-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_35 $$ stream = loader.getResourceAsStream(name)-->Line_35 $$ stream = loader.getResourceAsStream(name)[ CD ]
Line_12 $$ ClassLoader loader = parent-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_13 $$ loader = system-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_34 $$ loader = system-->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_35 $$ stream = loader.getResourceAsStream(name)[ FD ]
Line_31 $$ if (!delegate) -->Line_36 $$ if (stream != null) [ CD ]
Line_4 $$ InputStream stream = null-->Line_36 $$ if (stream != null) [ FD ]
Line_5 $$ stream = findLoadedResource(name)-->Line_36 $$ if (stream != null) [ FD ]
Line_14 $$ stream = loader.getResourceAsStream(name)-->Line_36 $$ if (stream != null) [ FD ]
Line_35 $$ stream = loader.getResourceAsStream(name)-->Line_36 $$ if (stream != null) [ FD ]
Line_36 $$ if (stream != null) -->Line_37 $$ if (debug >= 2)[ CD ]
Line_37 $$ if (debug >= 2)-->Line_37 $$ log("  --> Returning stream from parent")[ CD ]
Line_36 $$ if (stream != null) -->Line_38 $$ return (stream)[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_41 $$ if (debug >= 2)[ CD ]
Line_41 $$ if (debug >= 2)-->Line_41 $$ log("  --> Resource not found, returning null")[ CD ]
Line_2 $$ public InputStream getResourceAsStream(String name) -->Line_42 $$ return (null)[ CD ]
