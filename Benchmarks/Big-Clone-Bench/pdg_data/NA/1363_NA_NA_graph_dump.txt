Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static int[] bubbleSortOtimizado(int... a) [ CD ]
Line_2 $$ public static int[] bubbleSortOtimizado(int... a) -->Line_3 $$ boolean swapped[ CD ]
Line_2 $$ public static int[] bubbleSortOtimizado(int... a) -->Line_4 $$ int n = a.length - 2[ CD ]
Line_2 $$ public static int[] bubbleSortOtimizado(int... a) -->Line_5 $$ do [ CD ]
Line_2 $$ public static int[] bubbleSortOtimizado(int... a) -->Line_2 $$ public static int[] bubbleSortOtimizado(int... a) [ CD ]
Line_5 $$ do -->Line_6 $$ swapped = false[ CD ]
Line_6 $$ swapped = false-->Line_6 $$ swapped = false[ FD ]
Line_3 $$ boolean swapped-->Line_6 $$ swapped = false[ FD ]
Line_5 $$ do -->Line_7 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_5 $$ do -->Line_5 $$ do [ CD ]
Line_4 $$ int n = a.length - 2-->Line_7 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_7 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_7 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_7 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_8 $$ if (a[i] > a[i + 1]) [ CD ]
Line_8 $$ if (a[i] > a[i + 1]) -->Line_9 $$ int tmp = a[i][ CD ]
Line_8 $$ if (a[i] > a[i + 1]) -->Line_10 $$ a[i] = a[i + 1][ CD ]
Line_8 $$ if (a[i] > a[i + 1]) -->Line_11 $$ a[i + 1] = tmp[ CD ]
Line_9 $$ int tmp = a[i]-->Line_11 $$ a[i + 1] = tmp[ FD ]
Line_8 $$ if (a[i] > a[i + 1]) -->Line_12 $$ swapped = true[ CD ]
Line_12 $$ swapped = true-->Line_12 $$ swapped = true[ FD ]
Line_6 $$ swapped = false-->Line_12 $$ swapped = true[ FD ]
Line_3 $$ boolean swapped-->Line_12 $$ swapped = true[ FD ]
Line_5 $$ do -->Line_15 $$ n = n - 1[ CD ]
Line_15 $$ n = n - 1-->Line_15 $$ n = n - 1[ FD ]
Line_4 $$ int n = a.length - 2-->Line_15 $$ n = n - 1[ FD ]
Line_15 $$ n = n - 1-->Line_15 $$ n = n - 1[ FD ]
Line_4 $$ int n = a.length - 2-->Line_15 $$ n = n - 1[ FD ]
Line_2 $$ public static int[] bubbleSortOtimizado(int... a) -->Line_17 $$ return a[ CD ]
Line_15 $$ n = n - 1-->Line_15 $$ n = n - 1[ FD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_7 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_7 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 0; i <= n; i++) -->Line_7 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_9 $$ int tmp = a[i]-->Line_11 $$ a[i + 1] = tmp[ FD ]
