Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String excute(String targetUrl, String params, String type) [ CD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_3 $$ URL url[ CD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_4 $$ HttpURLConnection connection = null[ CD ]
Line_3 $$ URL url-->Line_6 $$ url = new URL(targetUrl)[ FD ]
Line_6 $$ url = new URL(targetUrl)-->Line_6 $$ url = new URL(targetUrl)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_7 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_7 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_3 $$ URL url-->Line_7 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_6 $$ url = new URL(targetUrl)-->Line_7 $$ connection = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_8 $$ connection.setRequestMethod(type)[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_8 $$ connection.setRequestMethod(type)[ FD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_8 $$ connection.setRequestMethod(type)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_9 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_10 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(params.getBytes().length))[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_10 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(params.getBytes().length))[ FD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_10 $$ connection.setRequestProperty("Content-Length", "" + Integer.toString(params.getBytes().length))[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_11 $$ connection.setRequestProperty("Content-Language", CHAR_SET)[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_11 $$ connection.setRequestProperty("Content-Language", CHAR_SET)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_12 $$ connection.setRequestProperty("Connection", "close")[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_12 $$ connection.setRequestProperty("Connection", "close")[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_13 $$ connection.setUseCaches(false)[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_13 $$ connection.setUseCaches(false)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_14 $$ connection.setDoInput(true)[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_14 $$ connection.setDoInput(true)[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_15 $$ connection.setDoOutput(true)[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_15 $$ connection.setDoOutput(true)[ FD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_16 $$ if (params != null) [ FD ]
Line_16 $$ if (params != null) -->Line_17 $$ if (params.length() > 0) [ CD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_17 $$ if (params.length() > 0) [ FD ]
Line_17 $$ if (params.length() > 0) -->Line_18 $$ DataOutputStream wr[ CD ]
Line_17 $$ if (params.length() > 0) -->Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())[ CD ]
Line_18 $$ DataOutputStream wr-->Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())-->Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_4 $$ HttpURLConnection connection = null-->Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())[ FD ]
Line_17 $$ if (params.length() > 0) -->Line_20 $$ wr.writeBytes(params)[ CD ]
Line_18 $$ DataOutputStream wr-->Line_20 $$ wr.writeBytes(params)[ FD ]
Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())-->Line_20 $$ wr.writeBytes(params)[ FD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_20 $$ wr.writeBytes(params)[ FD ]
Line_17 $$ if (params.length() > 0) -->Line_21 $$ wr.flush()[ CD ]
Line_18 $$ DataOutputStream wr-->Line_21 $$ wr.flush()[ FD ]
Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())-->Line_21 $$ wr.flush()[ FD ]
Line_17 $$ if (params.length() > 0) -->Line_22 $$ wr.close()[ CD ]
Line_18 $$ DataOutputStream wr-->Line_22 $$ wr.close()[ FD ]
Line_19 $$ wr = new DataOutputStream(connection.getOutputStream())-->Line_22 $$ wr.close()[ FD ]
Line_25 $$ InputStream is = connection.getInputStream()-->Line_25 $$ InputStream is = connection.getInputStream()[ CD ]
Line_4 $$ HttpURLConnection connection = null-->Line_25 $$ InputStream is = connection.getInputStream()[ FD ]
Line_7 $$ connection = (HttpURLConnection) url.openConnection()-->Line_25 $$ InputStream is = connection.getInputStream()[ FD ]
Line_29 $$ while ((line = rd.readLine()) != null) -->Line_29 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_27 $$ String line-->Line_29 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_29 $$ while ((line = rd.readLine()) != null) -->Line_29 $$ while ((line = rd.readLine()) != null) [ CD ]
Line_26 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is, CHAR_SET))-->Line_29 $$ while ((line = rd.readLine()) != null) [ FD ]
Line_29 $$ while ((line = rd.readLine()) != null) -->Line_30 $$ response.append(line)[ CD ]
Line_28 $$ StringBuffer response = new StringBuffer()-->Line_30 $$ response.append(line)[ FD ]
Line_29 $$ while ((line = rd.readLine()) != null) -->Line_30 $$ response.append(line)[ FD ]
Line_27 $$ String line-->Line_30 $$ response.append(line)[ FD ]
Line_29 $$ while ((line = rd.readLine()) != null) -->Line_31 $$ response.append("\r\n")[ CD ]
Line_28 $$ StringBuffer response = new StringBuffer()-->Line_31 $$ response.append("\r\n")[ FD ]
Line_26 $$ BufferedReader rd = new BufferedReader(new InputStreamReader(is, CHAR_SET))-->Line_33 $$ rd.close()[ FD ]
Line_34 $$ return response.toString()-->Line_34 $$ return response.toString()[ CD ]
Line_28 $$ StringBuffer response = new StringBuffer()-->Line_34 $$ return response.toString()[ FD ]
Line_2 $$ public String excute(String targetUrl, String params, String type) -->Line_40 $$ return null[ CD ]
Line_29 $$ while ((line = rd.readLine()) != null) -->Line_30 $$ response.append(line)[ FD ]
