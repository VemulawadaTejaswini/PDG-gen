Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException [ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_3 $$ String[] pids = request.getParameterValues("pid")[ CD ]
Line_3 $$ String[] pids = request.getParameterValues("pid")-->Line_3 $$ String[] pids = request.getParameterValues("pid")[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_3 $$ String[] pids = request.getParameterValues("pid")[ FD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_4 $$ if (pids == null || pids.length <= 0)[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_5 $$ RegisterDao registerDao = new RegisterDao()[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_6 $$ Register register = registerDao.findPojoById(StrFun.getString(request, "rid"), Register.class)[ CD ]
Line_6 $$ Register register = registerDao.findPojoById(StrFun.getString(request, "rid"), Register.class)-->Line_6 $$ Register register = registerDao.findPojoById(StrFun.getString(request, "rid"), Register.class)[ CD ]
Line_5 $$ RegisterDao registerDao = new RegisterDao()-->Line_6 $$ Register register = registerDao.findPojoById(StrFun.getString(request, "rid"), Register.class)[ FD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_6 $$ Register register = registerDao.findPojoById(StrFun.getString(request, "rid"), Register.class)[ FD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_7 $$ if (register.audit)[ CD ]
Line_6 $$ Register register = registerDao.findPojoById(StrFun.getString(request, "rid"), Register.class)-->Line_7 $$ if (register.audit)[ FD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_8 $$ DBConnect dbc = null[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_9 $$ Connection conn = null[ CD ]
Line_8 $$ DBConnect dbc = null-->Line_11 $$ dbc = DBConnect.createDBConnect()[ FD ]
Line_11 $$ dbc = DBConnect.createDBConnect()-->Line_11 $$ dbc = DBConnect.createDBConnect()[ FD ]
Line_11 $$ dbc = DBConnect.createDBConnect()-->Line_11 $$ dbc = DBConnect.createDBConnect()[ CD ]
Line_9 $$ Connection conn = null-->Line_12 $$ conn = dbc.getConnection()[ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_12 $$ conn = dbc.getConnection()[ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_12 $$ conn = dbc.getConnection()[ CD ]
Line_8 $$ DBConnect dbc = null-->Line_12 $$ conn = dbc.getConnection()[ FD ]
Line_11 $$ dbc = DBConnect.createDBConnect()-->Line_12 $$ conn = dbc.getConnection()[ FD ]
Line_9 $$ Connection conn = null-->Line_13 $$ conn.setAutoCommit(false)[ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_13 $$ conn.setAutoCommit(false)[ FD ]
Line_16 $$ pd.rid = StrFun.getInt(request, "rid")-->Line_16 $$ pd.rid = StrFun.getInt(request, "rid")[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_16 $$ pd.rid = StrFun.getInt(request, "rid")[ FD ]
Line_17 $$ pd.pid = Integer.parseInt(pid)-->Line_17 $$ pd.pid = Integer.parseInt(pid)[ CD ]
Line_14 $$ for (String pid : pids) -->Line_17 $$ pd.pid = Integer.parseInt(pid)[ FD ]
Line_18 $$ pd.productName = StrFun.getString(request, "productName_" + pid)-->Line_18 $$ pd.productName = StrFun.getString(request, "productName_" + pid)[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_18 $$ pd.productName = StrFun.getString(request, "productName_" + pid)[ FD ]
Line_19 $$ pd.regAmount = StrFun.getInt(request, "regAmount_" + pid)-->Line_19 $$ pd.regAmount = StrFun.getInt(request, "regAmount_" + pid)[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_19 $$ pd.regAmount = StrFun.getInt(request, "regAmount_" + pid)[ FD ]
Line_20 $$ pd.regPrice = StrFun.getInt(request, "regPrice_" + pid)-->Line_20 $$ pd.regPrice = StrFun.getInt(request, "regPrice_" + pid)[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_20 $$ pd.regPrice = StrFun.getInt(request, "regPrice_" + pid)[ FD ]
Line_21 $$ pd.regSalePrice = StrFun.getInt(request, "regSalePrice_" + pid)-->Line_21 $$ pd.regSalePrice = StrFun.getInt(request, "regSalePrice_" + pid)[ CD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_21 $$ pd.regSalePrice = StrFun.getInt(request, "regSalePrice_" + pid)[ FD ]
Line_2 $$ public void addRegisterInfo(HttpServletRequest request) throws ApplicationException -->Line_22 $$ pd.userNo = ServerUtil.getUserFromSession(request).userNo[ FD ]
Line_24 $$ String sql = "insert into SS_RegisterInfo " + "(pid, rid, productName, regAmount, regPrice, regSalePrice, userNo) " + "values(" + "'" + pd.pid + "', " + "'" + pd.rid + "', " + "'" + pd.productName + "', " + "'" + pd.regAmount + "', " + "'" + pd.regPrice + "', " + "'" + pd.regSalePrice + "', " + "'" + pd.userNo + "' " + ")"-->Line_25 $$ conn.createStatement().executeUpdate(sql)[ FD ]
Line_9 $$ Connection conn = null-->Line_25 $$ conn.createStatement().executeUpdate(sql)[ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_25 $$ conn.createStatement().executeUpdate(sql)[ FD ]
Line_9 $$ Connection conn = null-->Line_27 $$ conn.commit()[ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_27 $$ conn.commit()[ FD ]
Line_9 $$ Connection conn = null-->Line_30 $$ if (conn != null) [ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_30 $$ if (conn != null) [ FD ]
Line_9 $$ Connection conn = null-->Line_32 $$ conn.rollback()[ FD ]
Line_12 $$ conn = dbc.getConnection()-->Line_32 $$ conn.rollback()[ FD ]
Line_8 $$ DBConnect dbc = null-->Line_39 $$ if (dbc != null)[ FD ]
Line_11 $$ dbc = DBConnect.createDBConnect()-->Line_39 $$ if (dbc != null)[ FD ]
Line_8 $$ DBConnect dbc = null-->Line_40 $$ dbc.close()[ FD ]
Line_11 $$ dbc = DBConnect.createDBConnect()-->Line_40 $$ dbc.close()[ FD ]
