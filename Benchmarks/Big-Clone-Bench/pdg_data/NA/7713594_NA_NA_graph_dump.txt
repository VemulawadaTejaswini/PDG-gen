Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException [ CD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_3 $$ if (visibleFilesOnly && isHiddenOrDotFile(source)) [ CD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_3 $$ if (visibleFilesOnly && isHiddenOrDotFile(source)) [ FD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_3 $$ if (visibleFilesOnly && isHiddenOrDotFile(source)) [ FD ]
Line_3 $$ if (visibleFilesOnly && isHiddenOrDotFile(source)) -->Line_4 $$ return[ CD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_6 $$ if (dest.exists()) [ CD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_6 $$ if (dest.exists()) [ FD ]
Line_6 $$ if (dest.exists()) -->Line_6 $$ if (dest.exists()) [ CD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_6 $$ if (dest.exists()) [ FD ]
Line_6 $$ if (dest.exists()) -->Line_7 $$ System.err.println("Destination File Already Exists: " + dest)[ CD ]
Line_2 $$ private static void copyFile(File source, File dest, boolean visibleFilesOnly) throws IOException -->Line_9 $$ FileChannel in = null, out = null[ CD ]
Line_9 $$ FileChannel in = null, out = null-->Line_11 $$ in = new FileInputStream(source).getChannel()[ FD ]
Line_11 $$ in = new FileInputStream(source).getChannel()-->Line_11 $$ in = new FileInputStream(source).getChannel()[ FD ]
Line_11 $$ in = new FileInputStream(source).getChannel()-->Line_11 $$ in = new FileInputStream(source).getChannel()[ CD ]
Line_9 $$ FileChannel in = null, out = null-->Line_12 $$ out = new FileOutputStream(dest).getChannel()[ FD ]
Line_12 $$ out = new FileOutputStream(dest).getChannel()-->Line_12 $$ out = new FileOutputStream(dest).getChannel()[ FD ]
Line_12 $$ out = new FileOutputStream(dest).getChannel()-->Line_12 $$ out = new FileOutputStream(dest).getChannel()[ CD ]
Line_9 $$ FileChannel in = null, out = null-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_11 $$ in = new FileInputStream(source).getChannel()-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_9 $$ FileChannel in = null, out = null-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_12 $$ out = new FileOutputStream(dest).getChannel()-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_9 $$ FileChannel in = null, out = null-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_11 $$ in = new FileInputStream(source).getChannel()-->Line_13 $$ in.transferTo(0, in.size(), out)[ FD ]
Line_9 $$ FileChannel in = null, out = null-->Line_15 $$ if (in != null) [ FD ]
Line_11 $$ in = new FileInputStream(source).getChannel()-->Line_15 $$ if (in != null) [ FD ]
Line_15 $$ if (in != null) -->Line_16 $$ in.close()[ CD ]
Line_9 $$ FileChannel in = null, out = null-->Line_16 $$ in.close()[ FD ]
Line_11 $$ in = new FileInputStream(source).getChannel()-->Line_16 $$ in.close()[ FD ]
Line_9 $$ FileChannel in = null, out = null-->Line_18 $$ if (out != null) [ FD ]
Line_12 $$ out = new FileOutputStream(dest).getChannel()-->Line_18 $$ if (out != null) [ FD ]
Line_18 $$ if (out != null) -->Line_19 $$ out.close()[ CD ]
Line_9 $$ FileChannel in = null, out = null-->Line_19 $$ out.close()[ FD ]
Line_12 $$ out = new FileOutputStream(dest).getChannel()-->Line_19 $$ out.close()[ FD ]
