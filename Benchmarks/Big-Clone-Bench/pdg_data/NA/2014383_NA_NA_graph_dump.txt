Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) [ CD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_3 $$ LOG.info("copying [" + source + "] to [" + destination + "]")[ CD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_4 $$ BufferedInputStream sourceStream = null[ CD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_5 $$ BufferedOutputStream destStream = null[ CD ]
Line_7 $$ File destinationFile = new File(destination)-->Line_8 $$ if (destinationFile.exists()) [ FD ]
Line_8 $$ if (destinationFile.exists()) -->Line_8 $$ if (destinationFile.exists()) [ CD ]
Line_7 $$ File destinationFile = new File(destination)-->Line_8 $$ if (destinationFile.exists()) [ FD ]
Line_8 $$ if (destinationFile.exists()) -->Line_9 $$ destinationFile.delete()[ CD ]
Line_7 $$ File destinationFile = new File(destination)-->Line_9 $$ destinationFile.delete()[ FD ]
Line_4 $$ BufferedInputStream sourceStream = null-->Line_11 $$ sourceStream = new BufferedInputStream(new FileInputStream(source))[ FD ]
Line_11 $$ sourceStream = new BufferedInputStream(new FileInputStream(source))-->Line_11 $$ sourceStream = new BufferedInputStream(new FileInputStream(source))[ FD ]
Line_5 $$ BufferedOutputStream destStream = null-->Line_12 $$ destStream = new BufferedOutputStream(new FileOutputStream(destinationFile))[ FD ]
Line_12 $$ destStream = new BufferedOutputStream(new FileOutputStream(destinationFile))-->Line_12 $$ destStream = new BufferedOutputStream(new FileOutputStream(destinationFile))[ FD ]
Line_14 $$ while ((readByte = sourceStream.read()) > 0) -->Line_14 $$ while ((readByte = sourceStream.read()) > 0) [ FD ]
Line_13 $$ int readByte-->Line_14 $$ while ((readByte = sourceStream.read()) > 0) [ FD ]
Line_14 $$ while ((readByte = sourceStream.read()) > 0) -->Line_14 $$ while ((readByte = sourceStream.read()) > 0) [ CD ]
Line_4 $$ BufferedInputStream sourceStream = null-->Line_14 $$ while ((readByte = sourceStream.read()) > 0) [ FD ]
Line_11 $$ sourceStream = new BufferedInputStream(new FileInputStream(source))-->Line_14 $$ while ((readByte = sourceStream.read()) > 0) [ FD ]
Line_14 $$ while ((readByte = sourceStream.read()) > 0) -->Line_15 $$ destStream.write(readByte)[ CD ]
Line_5 $$ BufferedOutputStream destStream = null-->Line_15 $$ destStream.write(readByte)[ FD ]
Line_12 $$ destStream = new BufferedOutputStream(new FileOutputStream(destinationFile))-->Line_15 $$ destStream.write(readByte)[ FD ]
Line_14 $$ while ((readByte = sourceStream.read()) > 0) -->Line_15 $$ destStream.write(readByte)[ FD ]
Line_13 $$ int readByte-->Line_15 $$ destStream.write(readByte)[ FD ]
Line_7 $$ File destinationFile = new File(destination)-->Line_17 $$ Object[] arg = [ FD ]
Line_18 $$ String msg = timeSlotTracker.getString("datasource.xml.copyFile.copied", arg)-->Line_18 $$ String msg = timeSlotTracker.getString("datasource.xml.copyFile.copied", arg)[ CD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_18 $$ String msg = timeSlotTracker.getString("datasource.xml.copyFile.copied", arg)[ FD ]
Line_17 $$ Object[] arg = -->Line_18 $$ String msg = timeSlotTracker.getString("datasource.xml.copyFile.copied", arg)[ FD ]
Line_18 $$ String msg = timeSlotTracker.getString("datasource.xml.copyFile.copied", arg)-->Line_19 $$ LOG.fine(msg)[ FD ]
Line_22 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)-->Line_22 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)[ CD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_22 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)[ FD ]
Line_21 $$ Object[] expArgs = -->Line_22 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)[ FD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_23 $$ timeSlotTracker.errorLog(expMsg)[ FD ]
Line_22 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)-->Line_23 $$ timeSlotTracker.errorLog(expMsg)[ FD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_24 $$ timeSlotTracker.errorLog(e)[ FD ]
Line_5 $$ BufferedOutputStream destStream = null-->Line_27 $$ if (destStream != null) [ FD ]
Line_12 $$ destStream = new BufferedOutputStream(new FileOutputStream(destinationFile))-->Line_27 $$ if (destStream != null) [ FD ]
Line_27 $$ if (destStream != null) -->Line_28 $$ destStream.close()[ CD ]
Line_5 $$ BufferedOutputStream destStream = null-->Line_28 $$ destStream.close()[ FD ]
Line_12 $$ destStream = new BufferedOutputStream(new FileOutputStream(destinationFile))-->Line_28 $$ destStream.close()[ FD ]
Line_4 $$ BufferedInputStream sourceStream = null-->Line_30 $$ if (sourceStream != null) [ FD ]
Line_11 $$ sourceStream = new BufferedInputStream(new FileInputStream(source))-->Line_30 $$ if (sourceStream != null) [ FD ]
Line_30 $$ if (sourceStream != null) -->Line_31 $$ sourceStream.close()[ CD ]
Line_4 $$ BufferedInputStream sourceStream = null-->Line_31 $$ sourceStream.close()[ FD ]
Line_11 $$ sourceStream = new BufferedInputStream(new FileInputStream(source))-->Line_31 $$ sourceStream.close()[ FD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_35 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)[ FD ]
Line_21 $$ Object[] expArgs = -->Line_35 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)[ FD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_36 $$ timeSlotTracker.errorLog(expMsg)[ FD ]
Line_22 $$ String expMsg = timeSlotTracker.getString("datasource.xml.copyFile.exception", expArgs)-->Line_36 $$ timeSlotTracker.errorLog(expMsg)[ FD ]
Line_2 $$ public static void copyFile(String source, String destination, TimeSlotTracker timeSlotTracker) -->Line_37 $$ timeSlotTracker.errorLog(e)[ FD ]
Line_14 $$ while ((readByte = sourceStream.read()) > 0) -->Line_15 $$ destStream.write(readByte)[ FD ]
