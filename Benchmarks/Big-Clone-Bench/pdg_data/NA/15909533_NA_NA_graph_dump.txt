Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception [ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)[ CD ]
Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)-->Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ if (request.getParameter("_debug_") != null) [ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ if (request.getParameter("_debug_") != null) [ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_5 $$ StringBuffer buffer = new StringBuffer()[ CD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_6 $$ Enumeration iter = request.getHeaderNames()[ CD ]
Line_6 $$ Enumeration iter = request.getHeaderNames()-->Line_6 $$ Enumeration iter = request.getHeaderNames()[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_6 $$ Enumeration iter = request.getHeaderNames()[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_7 $$ while (iter.hasMoreElements()) [ CD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_4 $$ if (request.getParameter("_debug_") != null) [ CD ]
Line_7 $$ while (iter.hasMoreElements()) -->Line_7 $$ while (iter.hasMoreElements()) [ CD ]
Line_6 $$ Enumeration iter = request.getHeaderNames()-->Line_7 $$ while (iter.hasMoreElements()) [ FD ]
Line_7 $$ while (iter.hasMoreElements()) -->Line_8 $$ String name = (String) iter.nextElement()[ CD ]
Line_6 $$ Enumeration iter = request.getHeaderNames()-->Line_8 $$ String name = (String) iter.nextElement()[ FD ]
Line_7 $$ while (iter.hasMoreElements()) -->Line_9 $$ buffer.append(name + "=" + request.getHeader(name)).append("\n")[ CD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_9 $$ buffer.append(name + "=" + request.getHeader(name)).append("\n")[ FD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_9 $$ buffer.append(name + "=" + request.getHeader(name)).append("\n")[ FD ]
Line_8 $$ String name = (String) iter.nextElement()-->Line_9 $$ buffer.append(name + "=" + request.getHeader(name)).append("\n")[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_11 $$ buffer.append("\n")[ CD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_11 $$ buffer.append("\n")[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_12 $$ iter = request.getParameterNames()[ CD ]
Line_6 $$ Enumeration iter = request.getHeaderNames()-->Line_12 $$ iter = request.getParameterNames()[ FD ]
Line_12 $$ iter = request.getParameterNames()-->Line_12 $$ iter = request.getParameterNames()[ FD ]
Line_12 $$ iter = request.getParameterNames()-->Line_12 $$ iter = request.getParameterNames()[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_12 $$ iter = request.getParameterNames()[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_13 $$ while (iter.hasMoreElements()) [ CD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_4 $$ if (request.getParameter("_debug_") != null) [ CD ]
Line_13 $$ while (iter.hasMoreElements()) -->Line_13 $$ while (iter.hasMoreElements()) [ CD ]
Line_6 $$ Enumeration iter = request.getHeaderNames()-->Line_13 $$ while (iter.hasMoreElements()) [ FD ]
Line_12 $$ iter = request.getParameterNames()-->Line_13 $$ while (iter.hasMoreElements()) [ FD ]
Line_13 $$ while (iter.hasMoreElements()) -->Line_14 $$ String name = (String) iter.nextElement()[ CD ]
Line_6 $$ Enumeration iter = request.getHeaderNames()-->Line_14 $$ String name = (String) iter.nextElement()[ FD ]
Line_12 $$ iter = request.getParameterNames()-->Line_14 $$ String name = (String) iter.nextElement()[ FD ]
Line_13 $$ while (iter.hasMoreElements()) -->Line_15 $$ String value = request.getParameter(name)[ CD ]
Line_15 $$ String value = request.getParameter(name)-->Line_15 $$ String value = request.getParameter(name)[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_15 $$ String value = request.getParameter(name)[ FD ]
Line_14 $$ String name = (String) iter.nextElement()-->Line_15 $$ String value = request.getParameter(name)[ FD ]
Line_8 $$ String name = (String) iter.nextElement()-->Line_15 $$ String value = request.getParameter(name)[ FD ]
Line_13 $$ while (iter.hasMoreElements()) -->Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))[ CD ]
Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))-->Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))[ CD ]
Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))-->Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))[ CD ]
Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)-->Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))[ FD ]
Line_16 $$ if (!"ISO-8859-1".equalsIgnoreCase(clientInfo.getPreferCharset()))-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ CD ]
Line_15 $$ String value = request.getParameter(name)-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_15 $$ String value = request.getParameter(name)-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_13 $$ while (iter.hasMoreElements()) -->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ CD ]
Line_15 $$ String value = request.getParameter(name)-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_14 $$ String name = (String) iter.nextElement()-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_8 $$ String name = (String) iter.nextElement()-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_19 $$ response.setContentType("text/plain; charset=UTF-8")[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_19 $$ response.setContentType("text/plain; charset=UTF-8")[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_20 $$ response.setCharacterEncoding("UTF-8")[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_20 $$ response.setCharacterEncoding("UTF-8")[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_21 $$ response.getWriter().write(buffer.toString())[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_21 $$ response.getWriter().write(buffer.toString())[ FD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_21 $$ response.getWriter().write(buffer.toString())[ FD ]
Line_4 $$ if (request.getParameter("_debug_") != null) -->Line_22 $$ return null[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_24 $$ Object resultObj = handleRequest(request)[ CD ]
Line_24 $$ Object resultObj = handleRequest(request)-->Line_24 $$ Object resultObj = handleRequest(request)[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_24 $$ Object resultObj = handleRequest(request)[ FD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_25 $$ if (resultObj == null) [ CD ]
Line_24 $$ Object resultObj = handleRequest(request)-->Line_25 $$ if (resultObj == null) [ FD ]
Line_25 $$ if (resultObj == null) -->Line_26 $$ String requestException = (String) request.getAttribute("XSMP.handleRequest.Exception")[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_26 $$ String requestException = (String) request.getAttribute("XSMP.handleRequest.Exception")[ FD ]
Line_25 $$ if (resultObj == null) -->Line_27 $$ if (requestException != null)[ CD ]
Line_26 $$ String requestException = (String) request.getAttribute("XSMP.handleRequest.Exception")-->Line_27 $$ if (requestException != null)[ FD ]
Line_27 $$ if (requestException != null)-->Line_27 $$ response.sendError(500, requestException)[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_27 $$ response.sendError(500, requestException)[ FD ]
Line_26 $$ String requestException = (String) request.getAttribute("XSMP.handleRequest.Exception")-->Line_27 $$ response.sendError(500, requestException)[ FD ]
Line_27 $$ if (requestException != null)-->Line_27 $$ response.setContentLength(0)[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_27 $$ response.setContentLength(0)[ FD ]
Line_25 $$ if (resultObj == null) -->Line_29 $$ if (resultObj instanceof DataHandler) [ CD ]
Line_24 $$ Object resultObj = handleRequest(request)-->Line_29 $$ if (resultObj instanceof DataHandler) [ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_30 $$ response.setContentType(((DataHandler) resultObj).getContentType())[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_30 $$ response.setContentType(((DataHandler) resultObj).getContentType())[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_31 $$ response.setContentLength(((DataHandler) resultObj).getInputStream().available())[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_31 $$ response.setContentLength(((DataHandler) resultObj).getInputStream().available())[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_32 $$ IOUtils.copy(((DataHandler) resultObj).getInputStream(), response.getOutputStream())[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_32 $$ IOUtils.copy(((DataHandler) resultObj).getInputStream(), response.getOutputStream())[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_34 $$ String temp = resultObj.toString()[ CD ]
Line_34 $$ String temp = resultObj.toString()-->Line_34 $$ String temp = resultObj.toString()[ CD ]
Line_24 $$ Object resultObj = handleRequest(request)-->Line_34 $$ String temp = resultObj.toString()[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_35 $$ if (temp.startsWith("<") && temp.endsWith(">"))[ CD ]
Line_34 $$ String temp = resultObj.toString()-->Line_35 $$ if (temp.startsWith("<") && temp.endsWith(">"))[ FD ]
Line_34 $$ String temp = resultObj.toString()-->Line_35 $$ if (temp.startsWith("<") && temp.endsWith(">"))[ FD ]
Line_35 $$ if (temp.startsWith("<") && temp.endsWith(">"))-->Line_35 $$ response.setContentType("text/html; charset=" + clientInfo.getPreferCharset())[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_35 $$ response.setContentType("text/html; charset=" + clientInfo.getPreferCharset())[ FD ]
Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)-->Line_35 $$ response.setContentType("text/html; charset=" + clientInfo.getPreferCharset())[ FD ]
Line_35 $$ if (temp.startsWith("<") && temp.endsWith(">"))-->Line_35 $$ response.setContentType("text/plain; charset=" + clientInfo.getPreferCharset())[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_35 $$ response.setContentType("text/plain; charset=" + clientInfo.getPreferCharset())[ FD ]
Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)-->Line_35 $$ response.setContentType("text/plain; charset=" + clientInfo.getPreferCharset())[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_36 $$ byte[] buffer = temp.getBytes(clientInfo.getPreferCharset())[ CD ]
Line_34 $$ String temp = resultObj.toString()-->Line_36 $$ byte[] buffer = temp.getBytes(clientInfo.getPreferCharset())[ FD ]
Line_3 $$ HttpClientInfo clientInfo = HttpUtil.parseClientInfo((HttpServletRequest) request)-->Line_36 $$ byte[] buffer = temp.getBytes(clientInfo.getPreferCharset())[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_37 $$ response.setContentLength(buffer.length)[ CD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_37 $$ response.setContentLength(buffer.length)[ FD ]
Line_29 $$ if (resultObj instanceof DataHandler) -->Line_38 $$ response.getOutputStream().write(buffer)[ CD ]
Line_5 $$ StringBuffer buffer = new StringBuffer()-->Line_38 $$ response.getOutputStream().write(buffer)[ FD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_38 $$ response.getOutputStream().write(buffer)[ FD ]
Line_2 $$ public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_41 $$ return null[ CD ]
Line_8 $$ String name = (String) iter.nextElement()-->Line_9 $$ buffer.append(name + "=" + request.getHeader(name)).append("\n")[ FD ]
Line_14 $$ String name = (String) iter.nextElement()-->Line_15 $$ String value = request.getParameter(name)[ FD ]
Line_15 $$ String value = request.getParameter(name)-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())-->Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())[ FD ]
Line_15 $$ String value = request.getParameter(name)-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_16 $$ value = new String(value.getBytes("ISO-8859-1"), clientInfo.getPreferCharset())-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
Line_14 $$ String name = (String) iter.nextElement()-->Line_17 $$ buffer.append(name).append("=").append(value).append("\n")[ FD ]
