Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception [ CD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_3 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_4 $$ HttpClient client = new DefaultHttpClient()[ CD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_5 $$ HttpParams httpParams = client.getParams()[ CD ]
Line_5 $$ HttpParams httpParams = client.getParams()-->Line_5 $$ HttpParams httpParams = client.getParams()[ CD ]
Line_4 $$ HttpClient client = new DefaultHttpClient()-->Line_5 $$ HttpParams httpParams = client.getParams()[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_6 $$ HttpConnectionParams.setConnectionTimeout(httpParams, 30000)[ CD ]
Line_5 $$ HttpParams httpParams = client.getParams()-->Line_6 $$ HttpConnectionParams.setConnectionTimeout(httpParams, 30000)[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_7 $$ HttpConnectionParams.setSoTimeout(httpParams, 50000)[ CD ]
Line_5 $$ HttpParams httpParams = client.getParams()-->Line_7 $$ HttpConnectionParams.setSoTimeout(httpParams, 50000)[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_8 $$ HttpResponse response = client.execute(request)[ CD ]
Line_8 $$ HttpResponse response = client.execute(request)-->Line_8 $$ HttpResponse response = client.execute(request)[ CD ]
Line_4 $$ HttpClient client = new DefaultHttpClient()-->Line_8 $$ HttpResponse response = client.execute(request)[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_8 $$ HttpResponse response = client.execute(request)[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_9 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_9 $$ HttpEntity entity = response.getEntity()-->Line_9 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_8 $$ HttpResponse response = client.execute(request)-->Line_9 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_10 $$ if (entity != null) [ CD ]
Line_9 $$ HttpEntity entity = response.getEntity()-->Line_10 $$ if (entity != null) [ FD ]
Line_10 $$ if (entity != null) -->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), "UTF-8"), 8192)[ CD ]
Line_9 $$ HttpEntity entity = response.getEntity()-->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), "UTF-8"), 8192)[ FD ]
Line_10 $$ if (entity != null) -->Line_12 $$ String line = null[ CD ]
Line_10 $$ if (entity != null) -->Line_13 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_10 $$ if (entity != null) -->Line_10 $$ if (entity != null) [ CD ]
Line_13 $$ while ((line = reader.readLine()) != null) -->Line_13 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_12 $$ String line = null-->Line_13 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_13 $$ while ((line = reader.readLine()) != null) -->Line_13 $$ while ((line = reader.readLine()) != null) [ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), "UTF-8"), 8192)-->Line_13 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_13 $$ while ((line = reader.readLine()) != null) -->Line_14 $$ sb.append(line + "\n")[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_14 $$ sb.append(line + "\n")[ FD ]
Line_10 $$ if (entity != null) -->Line_16 $$ reader.close()[ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(entity.getContent(), "UTF-8"), 8192)-->Line_16 $$ reader.close()[ FD ]
Line_2 $$ public static String getContent(HttpUriRequest request) throws Exception -->Line_18 $$ return sb.toString()[ CD ]
Line_18 $$ return sb.toString()-->Line_18 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_18 $$ return sb.toString()[ FD ]
