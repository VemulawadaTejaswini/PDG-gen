Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testLoadSource() throws IOException [ CD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_3 $$ ArticleMetadata metadata = new ArticleMetadata()[ CD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_4 $$ metadata.setId("http://arxiv.org/abs/math/0205003v1")[ CD ]
Line_3 $$ ArticleMetadata metadata = new ArticleMetadata()-->Line_4 $$ metadata.setId("http://arxiv.org/abs/math/0205003v1")[ FD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)[ CD ]
Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)-->Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)[ CD ]
Line_3 $$ ArticleMetadata metadata = new ArticleMetadata()-->Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)[ FD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_6 $$ Assert.assertNotNull(inputStream)[ CD ]
Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)-->Line_6 $$ Assert.assertNotNull(inputStream)[ FD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_7 $$ StringWriter writer = new StringWriter()[ CD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_8 $$ IOUtils.copy(inputStream, writer, "utf8")[ CD ]
Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)-->Line_8 $$ IOUtils.copy(inputStream, writer, "utf8")[ FD ]
Line_7 $$ StringWriter writer = new StringWriter()-->Line_8 $$ IOUtils.copy(inputStream, writer, "utf8")[ FD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_9 $$ String contents = writer.toString()[ CD ]
Line_9 $$ String contents = writer.toString()-->Line_9 $$ String contents = writer.toString()[ CD ]
Line_7 $$ StringWriter writer = new StringWriter()-->Line_9 $$ String contents = writer.toString()[ FD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_10 $$ Assert.assertTrue(contents.contains("A strengthening of the Nyman"))[ CD ]
Line_9 $$ String contents = writer.toString()-->Line_10 $$ Assert.assertTrue(contents.contains("A strengthening of the Nyman"))[ FD ]
Line_2 $$ public void testLoadSource() throws IOException -->Line_11 $$ inputStream.close()[ CD ]
Line_5 $$ InputStream inputStream = arxivDAOFacade.loadSource(metadata)-->Line_11 $$ inputStream.close()[ FD ]
