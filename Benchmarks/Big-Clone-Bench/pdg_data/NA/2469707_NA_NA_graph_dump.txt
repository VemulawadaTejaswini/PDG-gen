Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ resp.addHeader("Cache-Control", "max-age=" + Constants.HTTP_CACHE_SECONDS)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ resp.addHeader("Cache-Control", "max-age=" + Constants.HTTP_CACHE_SECONDS)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)[ CD ]
Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)-->Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_5 $$ boolean notScale = ClientUtils.toBoolean(req.getParameter(Constants.URL_PARAM_NOT_SCALE))[ CD ]
Line_5 $$ boolean notScale = ClientUtils.toBoolean(req.getParameter(Constants.URL_PARAM_NOT_SCALE))-->Line_5 $$ boolean notScale = ClientUtils.toBoolean(req.getParameter(Constants.URL_PARAM_NOT_SCALE))[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_5 $$ boolean notScale = ClientUtils.toBoolean(req.getParameter(Constants.URL_PARAM_NOT_SCALE))[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_6 $$ ServletOutputStream os = resp.getOutputStream()[ CD ]
Line_6 $$ ServletOutputStream os = resp.getOutputStream()-->Line_6 $$ ServletOutputStream os = resp.getOutputStream()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_6 $$ ServletOutputStream os = resp.getOutputStream()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_7 $$ if (uuid != null && !"".equals(uuid)) [ CD ]
Line_7 $$ if (uuid != null && !"".equals(uuid)) -->Line_7 $$ if (uuid != null && !"".equals(uuid)) [ CD ]
Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)-->Line_7 $$ if (uuid != null && !"".equals(uuid)) [ FD ]
Line_9 $$ String mimetype = fedoraAccess.getMimeTypeForStream(uuid, FedoraUtils.IMG_FULL_STREAM)-->Line_9 $$ String mimetype = fedoraAccess.getMimeTypeForStream(uuid, FedoraUtils.IMG_FULL_STREAM)[ CD ]
Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)-->Line_9 $$ String mimetype = fedoraAccess.getMimeTypeForStream(uuid, FedoraUtils.IMG_FULL_STREAM)[ FD ]
Line_9 $$ String mimetype = fedoraAccess.getMimeTypeForStream(uuid, FedoraUtils.IMG_FULL_STREAM)-->Line_10 $$ if (mimetype == null) [ FD ]
Line_10 $$ if (mimetype == null) -->Line_11 $$ mimetype = "image/jpeg"[ CD ]
Line_9 $$ String mimetype = fedoraAccess.getMimeTypeForStream(uuid, FedoraUtils.IMG_FULL_STREAM)-->Line_11 $$ mimetype = "image/jpeg"[ FD ]
Line_11 $$ mimetype = "image/jpeg"-->Line_11 $$ mimetype = "image/jpeg"[ FD ]
Line_13 $$ ImageMimeType loadFromMimeType = ImageMimeType.loadFromMimeType(mimetype)-->Line_13 $$ ImageMimeType loadFromMimeType = ImageMimeType.loadFromMimeType(mimetype)[ CD ]
Line_9 $$ String mimetype = fedoraAccess.getMimeTypeForStream(uuid, FedoraUtils.IMG_FULL_STREAM)-->Line_13 $$ ImageMimeType loadFromMimeType = ImageMimeType.loadFromMimeType(mimetype)[ FD ]
Line_11 $$ mimetype = "image/jpeg"-->Line_13 $$ ImageMimeType loadFromMimeType = ImageMimeType.loadFromMimeType(mimetype)[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_15 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_16 $$ sb.append(config.getFedoraHost()).append("/objects/").append(uuid).append("/datastreams/IMG_FULL/content")[ CD ]
Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)-->Line_16 $$ sb.append(config.getFedoraHost()).append("/objects/").append(uuid).append("/datastreams/IMG_FULL/content")[ FD ]
Line_15 $$ StringBuffer sb = new StringBuffer()-->Line_16 $$ sb.append(config.getFedoraHost()).append("/objects/").append(uuid).append("/datastreams/IMG_FULL/content")[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)[ CD ]
Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)-->Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)[ CD ]
Line_15 $$ StringBuffer sb = new StringBuffer()-->Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_18 $$ if (is == null) [ CD ]
Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)-->Line_18 $$ if (is == null) [ FD ]
Line_18 $$ if (is == null) -->Line_19 $$ return[ CD ]
Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)-->Line_22 $$ IOUtils.copyStreams(is, os)[ FD ]
Line_6 $$ ServletOutputStream os = resp.getOutputStream()-->Line_22 $$ IOUtils.copyStreams(is, os)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_24 $$ resp.setStatus(HttpURLConnection.HTTP_NOT_FOUND)[ FD ]
Line_6 $$ ServletOutputStream os = resp.getOutputStream()-->Line_27 $$ os.flush()[ FD ]
Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)-->Line_28 $$ if (is != null) [ FD ]
Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)-->Line_30 $$ is.close()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_32 $$ resp.setStatus(HttpURLConnection.HTTP_NOT_FOUND)[ FD ]
Line_17 $$ InputStream is = RESTHelper.get(sb.toString(), config.getFedoraLogin(), config.getFedoraPassword(), false)-->Line_35 $$ is = null[ FD ]
Line_35 $$ is = null-->Line_35 $$ is = null[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)[ CD ]
Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)-->Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)[ CD ]
Line_4 $$ String uuid = req.getRequestURI().substring(req.getRequestURI().indexOf(Constants.SERVLET_FULL_PREFIX) + Constants.SERVLET_FULL_PREFIX.length() + 1)-->Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)[ FD ]
Line_13 $$ ImageMimeType loadFromMimeType = ImageMimeType.loadFromMimeType(mimetype)-->Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_41 $$ BufferedImage scaled = null[ CD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_42 $$ if (!notScale) [ CD ]
Line_5 $$ boolean notScale = ClientUtils.toBoolean(req.getParameter(Constants.URL_PARAM_NOT_SCALE))-->Line_42 $$ if (!notScale) [ FD ]
Line_42 $$ if (!notScale) -->Line_42 $$ if (!notScale) [ CD ]
Line_5 $$ boolean notScale = ClientUtils.toBoolean(req.getParameter(Constants.URL_PARAM_NOT_SCALE))-->Line_42 $$ if (!notScale) [ FD ]
Line_42 $$ if (!notScale) -->Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)[ CD ]
Line_41 $$ BufferedImage scaled = null-->Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)[ FD ]
Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)-->Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)[ FD ]
Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)-->Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)[ CD ]
Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)-->Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)[ FD ]
Line_42 $$ if (!notScale) -->Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)[ CD ]
Line_41 $$ BufferedImage scaled = null-->Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)[ FD ]
Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)-->Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)[ FD ]
Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)-->Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)[ FD ]
Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)-->Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)[ CD ]
Line_40 $$ Image rawImg = KrameriusImageSupport.readImage(uuid, FedoraUtils.IMG_FULL_STREAM, this.fedoraAccess, 0, loadFromMimeType)-->Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_47 $$ KrameriusImageSupport.writeImageToStream(scaled, "JPG", os)[ CD ]
Line_41 $$ BufferedImage scaled = null-->Line_47 $$ KrameriusImageSupport.writeImageToStream(scaled, "JPG", os)[ FD ]
Line_43 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 1250, 1000)-->Line_47 $$ KrameriusImageSupport.writeImageToStream(scaled, "JPG", os)[ FD ]
Line_45 $$ scaled = KrameriusImageSupport.getSmallerImage(rawImg, 2500, 2000)-->Line_47 $$ KrameriusImageSupport.writeImageToStream(scaled, "JPG", os)[ FD ]
Line_6 $$ ServletOutputStream os = resp.getOutputStream()-->Line_47 $$ KrameriusImageSupport.writeImageToStream(scaled, "JPG", os)[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_48 $$ resp.setContentType(ImageMimeType.JPEG.getValue())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_48 $$ resp.setContentType(ImageMimeType.JPEG.getValue())[ FD ]
Line_14 $$ if (loadFromMimeType == ImageMimeType.JPEG || loadFromMimeType == ImageMimeType.PNG) -->Line_49 $$ resp.setStatus(HttpURLConnection.HTTP_OK)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_49 $$ resp.setStatus(HttpURLConnection.HTTP_OK)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_52 $$ resp.setStatus(HttpURLConnection.HTTP_NOT_FOUND)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_55 $$ resp.setStatus(HttpURLConnection.HTTP_NOT_FOUND)[ FD ]
Line_6 $$ ServletOutputStream os = resp.getOutputStream()-->Line_58 $$ os.flush()[ FD ]
