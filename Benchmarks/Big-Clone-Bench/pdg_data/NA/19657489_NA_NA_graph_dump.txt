Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException [ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_3 $$ if (f.exists()) [ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_3 $$ if (f.exists()) [ FD ]
Line_3 $$ if (f.exists()) -->Line_3 $$ if (f.exists()) [ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_3 $$ if (f.exists()) [ FD ]
Line_3 $$ if (f.exists()) -->Line_4 $$ if (!f.isDirectory() || !f.canWrite()) [ CD ]
Line_4 $$ if (!f.isDirectory() || !f.canWrite()) -->Line_4 $$ if (!f.isDirectory() || !f.canWrite()) [ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_4 $$ if (!f.isDirectory() || !f.canWrite()) [ FD ]
Line_4 $$ if (!f.isDirectory() || !f.canWrite()) -->Line_4 $$ if (!f.isDirectory() || !f.canWrite()) [ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_4 $$ if (!f.isDirectory() || !f.canWrite()) [ FD ]
Line_4 $$ if (!f.isDirectory() || !f.canWrite()) -->Line_5 $$ return false[ CD ]
Line_3 $$ if (f.exists()) -->Line_8 $$ boolean dirOK = f.mkdirs()[ CD ]
Line_8 $$ boolean dirOK = f.mkdirs()-->Line_8 $$ boolean dirOK = f.mkdirs()[ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_8 $$ boolean dirOK = f.mkdirs()[ FD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) [ CD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) [ FD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) [ FD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) [ FD ]
Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) -->Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")[ CD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")[ CD ]
Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) -->Line_12 $$ if (url == null) [ CD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_12 $$ if (url == null) [ FD ]
Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) -->Line_15 $$ java.net.URLConnection conn[ CD ]
Line_15 $$ java.net.URLConnection conn-->Line_17 $$ conn = url.openConnection()[ FD ]
Line_17 $$ conn = url.openConnection()-->Line_17 $$ conn = url.openConnection()[ FD ]
Line_17 $$ conn = url.openConnection()-->Line_17 $$ conn = url.openConnection()[ CD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_17 $$ conn = url.openConnection()[ FD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_19 $$ String msg = "Error opening connection to " + url.toString()[ FD ]
Line_19 $$ String msg = "Error opening connection to " + url.toString()-->Line_20 $$ logger.error(msg, e)[ FD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_21 $$ throw new GorillaHomeException("Error copying " + url.toString(), e)[ FD ]
Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) -->Line_23 $$ if (conn == null) [ CD ]
Line_15 $$ java.net.URLConnection conn-->Line_23 $$ if (conn == null) [ FD ]
Line_17 $$ conn = url.openConnection()-->Line_23 $$ if (conn == null) [ FD ]
Line_10 $$ if (f.exists() && f.isDirectory() && f.canWrite()) -->Line_26 $$ if (conn instanceof java.net.JarURLConnection) [ CD ]
Line_15 $$ java.net.URLConnection conn-->Line_26 $$ if (conn instanceof java.net.JarURLConnection) [ FD ]
Line_17 $$ conn = url.openConnection()-->Line_26 $$ if (conn instanceof java.net.JarURLConnection) [ FD ]
Line_26 $$ if (conn instanceof java.net.JarURLConnection) -->Line_27 $$ logger.debug("Expanding gorilla.home from from jar file via url " + url.toString())[ CD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_27 $$ logger.debug("Expanding gorilla.home from from jar file via url " + url.toString())[ FD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_29 $$ IOUtil.expandJar((java.net.JarURLConnection) conn, f)[ FD ]
Line_15 $$ java.net.URLConnection conn-->Line_32 $$ throw new GorillaHomeException("Error expanding gorilla.home" + " from jar file at " + conn.getURL().toString() + ": " + e.getMessage())[ FD ]
Line_17 $$ conn = url.openConnection()-->Line_32 $$ throw new GorillaHomeException("Error expanding gorilla.home" + " from jar file at " + conn.getURL().toString() + ": " + e.getMessage())[ FD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_36 $$ IOUtil.copyDir(new File(url.getFile()), f)[ FD ]
Line_11 $$ java.net.URL url = GorillaHome.class.getResource("/resource_defaults/GORILLA_HOME")-->Line_36 $$ IOUtil.copyDir(new File(url.getFile()), f)[ FD ]
Line_15 $$ java.net.URLConnection conn-->Line_39 $$ throw new GorillaHomeException("Error expanding gorilla.home" + " from file at " + conn.getURL().toString() + ": " + e.getMessage())[ FD ]
Line_17 $$ conn = url.openConnection()-->Line_39 $$ throw new GorillaHomeException("Error expanding gorilla.home" + " from file at " + conn.getURL().toString() + ": " + e.getMessage())[ FD ]
Line_2 $$ private static boolean tryExpandGorillaHome(File f) throws GorillaHomeException -->Line_43 $$ return false[ CD ]
