Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ static List<String> listProperties(final MetadataType type) [ CD ]
Line_2 $$ static List<String> listProperties(final MetadataType type) -->Line_3 $$ List<String> props = new ArrayList<String>()[ CD ]
Line_5 $$ File adapter = File.createTempFile("adapter", null)-->Line_5 $$ File adapter = File.createTempFile("adapter", null)[ CD ]
Line_6 $$ InputStream stream = Thread.currentThread().getContextClassLoader().getResourceAsStream(type.adapter)-->Line_6 $$ InputStream stream = Thread.currentThread().getContextClassLoader().getResourceAsStream(type.adapter)[ CD ]
Line_6 $$ InputStream stream = Thread.currentThread().getContextClassLoader().getResourceAsStream(type.adapter)-->Line_7 $$ if (stream == null) [ FD ]
Line_6 $$ InputStream stream = Thread.currentThread().getContextClassLoader().getResourceAsStream(type.adapter)-->Line_11 $$ IOUtils.copyLarge(stream, out)[ FD ]
Line_10 $$ FileOutputStream out = new FileOutputStream(adapter)-->Line_11 $$ IOUtils.copyLarge(stream, out)[ FD ]
Line_10 $$ FileOutputStream out = new FileOutputStream(adapter)-->Line_12 $$ out.close()[ FD ]
Line_14 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_14 $$ Enumeration<JarEntry> entries = jar.entries()[ CD ]
Line_13 $$ JarFile jar = new JarFile(adapter)-->Line_14 $$ Enumeration<JarEntry> entries = jar.entries()[ FD ]
Line_15 $$ while (entries.hasMoreElements()) -->Line_15 $$ while (entries.hasMoreElements()) [ CD ]
Line_14 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_15 $$ while (entries.hasMoreElements()) [ FD ]
Line_15 $$ while (entries.hasMoreElements()) -->Line_16 $$ JarEntry entry = entries.nextElement()[ CD ]
Line_16 $$ JarEntry entry = entries.nextElement()-->Line_16 $$ JarEntry entry = entries.nextElement()[ CD ]
Line_14 $$ Enumeration<JarEntry> entries = jar.entries()-->Line_16 $$ JarEntry entry = entries.nextElement()[ FD ]
Line_15 $$ while (entries.hasMoreElements()) -->Line_17 $$ if (entry.getName().endsWith("dtd")) [ CD ]
Line_17 $$ if (entry.getName().endsWith("dtd")) -->Line_17 $$ if (entry.getName().endsWith("dtd")) [ CD ]
Line_16 $$ JarEntry entry = entries.nextElement()-->Line_17 $$ if (entry.getName().endsWith("dtd")) [ FD ]
Line_17 $$ if (entry.getName().endsWith("dtd")) -->Line_18 $$ InputStream inputStream = jar.getInputStream(entry)[ CD ]
Line_18 $$ InputStream inputStream = jar.getInputStream(entry)-->Line_18 $$ InputStream inputStream = jar.getInputStream(entry)[ CD ]
Line_13 $$ JarFile jar = new JarFile(adapter)-->Line_18 $$ InputStream inputStream = jar.getInputStream(entry)[ FD ]
Line_16 $$ JarEntry entry = entries.nextElement()-->Line_18 $$ InputStream inputStream = jar.getInputStream(entry)[ FD ]
Line_17 $$ if (entry.getName().endsWith("dtd")) -->Line_19 $$ Scanner s = new Scanner(inputStream)[ CD ]
Line_17 $$ if (entry.getName().endsWith("dtd")) -->Line_20 $$ while (s.hasNextLine()) [ CD ]
Line_17 $$ if (entry.getName().endsWith("dtd")) -->Line_17 $$ if (entry.getName().endsWith("dtd")) [ CD ]
Line_20 $$ while (s.hasNextLine()) -->Line_20 $$ while (s.hasNextLine()) [ CD ]
Line_19 $$ Scanner s = new Scanner(inputStream)-->Line_20 $$ while (s.hasNextLine()) [ FD ]
Line_20 $$ while (s.hasNextLine()) -->Line_21 $$ String nextLine = s.nextLine()[ CD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_21 $$ String nextLine = s.nextLine()[ CD ]
Line_19 $$ Scanner s = new Scanner(inputStream)-->Line_21 $$ String nextLine = s.nextLine()[ FD ]
Line_20 $$ while (s.hasNextLine()) -->Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) [ CD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) [ FD ]
Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) -->Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) [ CD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) [ FD ]
Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) -->Line_23 $$ String prop = nextLine.split(" ")[1][ CD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_23 $$ String prop = nextLine.split(" ")[1][ FD ]
Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) -->Line_24 $$ props.add(prop)[ CD ]
Line_3 $$ List<String> props = new ArrayList<String>()-->Line_24 $$ props.add(prop)[ FD ]
Line_23 $$ String prop = nextLine.split(" ")[1]-->Line_24 $$ props.add(prop)[ FD ]
Line_2 $$ static List<String> listProperties(final MetadataType type) -->Line_33 $$ return props[ CD ]
Line_16 $$ JarEntry entry = entries.nextElement()-->Line_17 $$ if (entry.getName().endsWith("dtd")) [ FD ]
Line_16 $$ JarEntry entry = entries.nextElement()-->Line_18 $$ InputStream inputStream = jar.getInputStream(entry)[ FD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) [ FD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_22 $$ if (nextLine.startsWith("<!ELEMENT")) [ FD ]
Line_21 $$ String nextLine = s.nextLine()-->Line_23 $$ String prop = nextLine.split(" ")[1][ FD ]
Line_23 $$ String prop = nextLine.split(" ")[1]-->Line_24 $$ props.add(prop)[ FD ]
