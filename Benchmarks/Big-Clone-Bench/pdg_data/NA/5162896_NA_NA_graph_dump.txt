Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void testRedirectWithCookie() throws Exception [ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_3 $$ String host = "localhost"[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_4 $$ int port = this.localServer.getServicePort()[ CD ]
Line_4 $$ int port = this.localServer.getServicePort()-->Line_4 $$ int port = this.localServer.getServicePort()[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_5 $$ this.localServer.register("*", new BasicRedirectService(host, port))[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_6 $$ DefaultHttpClient client = new DefaultHttpClient()[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_7 $$ CookieStore cookieStore = new BasicCookieStore()[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_8 $$ client.setCookieStore(cookieStore)[ CD ]
Line_6 $$ DefaultHttpClient client = new DefaultHttpClient()-->Line_8 $$ client.setCookieStore(cookieStore)[ FD ]
Line_7 $$ CookieStore cookieStore = new BasicCookieStore()-->Line_8 $$ client.setCookieStore(cookieStore)[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_9 $$ BasicClientCookie cookie = new BasicClientCookie("name", "value")[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_10 $$ cookie.setDomain("localhost")[ CD ]
Line_9 $$ BasicClientCookie cookie = new BasicClientCookie("name", "value")-->Line_10 $$ cookie.setDomain("localhost")[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_11 $$ cookie.setPath("/")[ CD ]
Line_9 $$ BasicClientCookie cookie = new BasicClientCookie("name", "value")-->Line_11 $$ cookie.setPath("/")[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_12 $$ cookieStore.addCookie(cookie)[ CD ]
Line_7 $$ CookieStore cookieStore = new BasicCookieStore()-->Line_12 $$ cookieStore.addCookie(cookie)[ FD ]
Line_9 $$ BasicClientCookie cookie = new BasicClientCookie("name", "value")-->Line_12 $$ cookieStore.addCookie(cookie)[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_13 $$ HttpContext context = new BasicHttpContext()[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_14 $$ HttpGet httpget = new HttpGet("/oldlocation/")[ CD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ CD ]
Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)-->Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ CD ]
Line_6 $$ DefaultHttpClient client = new DefaultHttpClient()-->Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ FD ]
Line_14 $$ HttpGet httpget = new HttpGet("/oldlocation/")-->Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ FD ]
Line_13 $$ HttpContext context = new BasicHttpContext()-->Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_16 $$ HttpEntity e = response.getEntity()[ CD ]
Line_16 $$ HttpEntity e = response.getEntity()-->Line_16 $$ HttpEntity e = response.getEntity()[ CD ]
Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)-->Line_16 $$ HttpEntity e = response.getEntity()[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_17 $$ if (e != null) [ CD ]
Line_16 $$ HttpEntity e = response.getEntity()-->Line_17 $$ if (e != null) [ FD ]
Line_17 $$ if (e != null) -->Line_18 $$ e.consumeContent()[ CD ]
Line_16 $$ HttpEntity e = response.getEntity()-->Line_18 $$ e.consumeContent()[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_20 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)[ CD ]
Line_13 $$ HttpContext context = new BasicHttpContext()-->Line_20 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_21 $$ assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode())[ CD ]
Line_15 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context)-->Line_21 $$ assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode())[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_22 $$ assertEquals("/newlocation/", reqWrapper.getRequestLine().getUri())[ CD ]
Line_20 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)-->Line_22 $$ assertEquals("/newlocation/", reqWrapper.getRequestLine().getUri())[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_23 $$ Header[] headers = reqWrapper.getHeaders(SM.COOKIE)[ CD ]
Line_23 $$ Header[] headers = reqWrapper.getHeaders(SM.COOKIE)-->Line_23 $$ Header[] headers = reqWrapper.getHeaders(SM.COOKIE)[ CD ]
Line_20 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST)-->Line_23 $$ Header[] headers = reqWrapper.getHeaders(SM.COOKIE)[ FD ]
Line_2 $$ public void testRedirectWithCookie() throws Exception -->Line_24 $$ assertEquals("There can only be one (cookie)", 1, headers.length)[ CD ]
