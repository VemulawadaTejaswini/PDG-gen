Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException [ CD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_3 $$ if (out != null) [ CD ]
Line_3 $$ if (out != null) -->Line_4 $$ close()[ CD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_6 $$ FileChannel fch = new FileInputStream(from).getChannel()[ CD ]
Line_6 $$ FileChannel fch = new FileInputStream(from).getChannel()-->Line_6 $$ FileChannel fch = new FileInputStream(from).getChannel()[ CD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_7 $$ FileChannel rollch = new FileOutputStream(to).getChannel()[ CD ]
Line_7 $$ FileChannel rollch = new FileOutputStream(to).getChannel()-->Line_7 $$ FileChannel rollch = new FileOutputStream(to).getChannel()[ CD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_8 $$ long size = mark[ CD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_9 $$ int count = 0[ CD ]
Line_8 $$ long size = mark-->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) -->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_9 $$ int count = 0-->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) -->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ CD ]
Line_7 $$ FileChannel rollch = new FileOutputStream(to).getChannel()-->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_6 $$ FileChannel fch = new FileInputStream(from).getChannel()-->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) -->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_9 $$ int count = 0-->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
Line_6 $$ FileChannel fch = new FileInputStream(from).getChannel()-->Line_14 $$ fch.close()[ FD ]
Line_7 $$ FileChannel rollch = new FileOutputStream(to).getChannel()-->Line_15 $$ rollch.close()[ FD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_17 $$ out = create(to)[ CD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_17 $$ out = create(to)[ FD ]
Line_2 $$ public FileOutputStream transfer(File from, File to, long mark) throws IOException, InterruptedException -->Line_18 $$ return out[ CD ]
Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) -->Line_11 $$ while ((count += rollch.transferFrom(fch, count, size - count)) < size) [ FD ]
