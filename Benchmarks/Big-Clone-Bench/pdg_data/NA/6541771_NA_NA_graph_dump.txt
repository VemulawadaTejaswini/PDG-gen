Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private String sendMail() throws IOException [ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_3 $$ String msg = StringEscapeUtils.escapeHtml(message.getText())[ CD ]
Line_3 $$ String msg = StringEscapeUtils.escapeHtml(message.getText())-->Line_3 $$ String msg = StringEscapeUtils.escapeHtml(message.getText())[ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_4 $$ StringBuffer buf = new StringBuffer()[ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_5 $$ buf.append(encode("n", name.getText()))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_5 $$ buf.append(encode("n", name.getText()))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_6 $$ buf.append("&").append(encode("e", email.getText()))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_6 $$ buf.append("&").append(encode("e", email.getText()))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_7 $$ buf.append("&").append(encode("r", recpt.getText()))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_7 $$ buf.append("&").append(encode("r", recpt.getText()))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_8 $$ buf.append("&").append(encode("m", msg))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_8 $$ buf.append("&").append(encode("m", msg))[ FD ]
Line_3 $$ String msg = StringEscapeUtils.escapeHtml(message.getText())-->Line_8 $$ buf.append("&").append(encode("m", msg))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_9 $$ buf.append("&").append(encode("s", score))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_9 $$ buf.append("&").append(encode("s", score))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_10 $$ buf.append("&").append(encode("i", calcScoreImage()))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_10 $$ buf.append("&").append(encode("i", calcScoreImage()))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_11 $$ buf.append("&").append(encode("c", digest(recpt.getText() + "_" + score)))[ CD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_11 $$ buf.append("&").append(encode("c", digest(recpt.getText() + "_" + score)))[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_12 $$ URL url = new URL("http://www.enerjy.com/share/mailit.php")[ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_13 $$ URLConnection conn = url.openConnection()[ CD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_13 $$ URLConnection conn = url.openConnection()[ CD ]
Line_12 $$ URL url = new URL("http://www.enerjy.com/share/mailit.php")-->Line_13 $$ URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_14 $$ conn.setDoOutput(true)[ CD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_14 $$ conn.setDoOutput(true)[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_15 $$ OutputStreamWriter writer = null[ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_16 $$ BufferedReader reader = null[ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_17 $$ boolean haveOk = false[ CD ]
Line_15 $$ OutputStreamWriter writer = null-->Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())-->Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())[ FD ]
Line_15 $$ OutputStreamWriter writer = null-->Line_20 $$ writer.write(buf.toString())[ FD ]
Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())-->Line_20 $$ writer.write(buf.toString())[ FD ]
Line_4 $$ StringBuffer buf = new StringBuffer()-->Line_20 $$ writer.write(buf.toString())[ FD ]
Line_15 $$ OutputStreamWriter writer = null-->Line_21 $$ writer.flush()[ FD ]
Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())-->Line_21 $$ writer.flush()[ FD ]
Line_16 $$ BufferedReader reader = null-->Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_13 $$ URLConnection conn = url.openConnection()-->Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ CD ]
Line_16 $$ BufferedReader reader = null-->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ CD ]
Line_16 $$ BufferedReader reader = null-->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_24 $$ if (line.startsWith("err:")) -->Line_24 $$ if (line.startsWith("err:")) [ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_24 $$ if (line.startsWith("err:")) -->Line_25 $$ return line.substring(4)[ CD ]
Line_25 $$ return line.substring(4)-->Line_25 $$ return line.substring(4)[ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_25 $$ return line.substring(4)[ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_25 $$ return line.substring(4)[ FD ]
Line_24 $$ if (line.startsWith("err:")) -->Line_26 $$ if (line.equals("ok")) [ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_26 $$ if (line.equals("ok")) -->Line_26 $$ if (line.equals("ok")) [ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_26 $$ if (line.equals("ok")) -->Line_27 $$ haveOk = true[ CD ]
Line_27 $$ haveOk = true-->Line_27 $$ haveOk = true[ FD ]
Line_17 $$ boolean haveOk = false-->Line_27 $$ haveOk = true[ FD ]
Line_15 $$ OutputStreamWriter writer = null-->Line_31 $$ StreamUtils.close(writer)[ FD ]
Line_19 $$ writer = new OutputStreamWriter(conn.getOutputStream())-->Line_31 $$ StreamUtils.close(writer)[ FD ]
Line_16 $$ BufferedReader reader = null-->Line_32 $$ StreamUtils.close(reader)[ FD ]
Line_22 $$ reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_32 $$ StreamUtils.close(reader)[ FD ]
Line_2 $$ private String sendMail() throws IOException -->Line_34 $$ if (!haveOk) [ CD ]
Line_27 $$ haveOk = true-->Line_34 $$ if (!haveOk) [ FD ]
Line_17 $$ boolean haveOk = false-->Line_34 $$ if (!haveOk) [ FD ]
Line_34 $$ if (!haveOk) -->Line_34 $$ if (!haveOk) [ CD ]
Line_27 $$ haveOk = true-->Line_34 $$ if (!haveOk) [ FD ]
Line_17 $$ boolean haveOk = false-->Line_34 $$ if (!haveOk) [ FD ]
Line_34 $$ if (!haveOk) -->Line_35 $$ return "The server did not return a response."[ CD ]
Line_2 $$ private String sendMail() throws IOException -->Line_37 $$ return null[ CD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_24 $$ if (line.startsWith("err:")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_25 $$ return line.substring(4)[ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_25 $$ return line.substring(4)[ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
Line_23 $$ for (String line = reader.readLine(); null != line; line = reader.readLine()) -->Line_26 $$ if (line.equals("ok")) [ FD ]
