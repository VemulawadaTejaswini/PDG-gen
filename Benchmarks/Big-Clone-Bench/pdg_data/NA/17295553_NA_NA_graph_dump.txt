Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ List<String> remoteVersions = new LinkedList<String>()[ CD ]
Line_5 $$ URL url = null-->Line_7 $$ url = new URL(s)[ FD ]
Line_7 $$ url = new URL(s)-->Line_7 $$ url = new URL(s)[ FD ]
Line_5 $$ URL url = null-->Line_11 $$ if (url != null) [ FD ]
Line_7 $$ url = new URL(s)-->Line_11 $$ if (url != null) [ FD ]
Line_11 $$ if (url != null) -->Line_12 $$ BufferedReader in = null[ CD ]
Line_12 $$ BufferedReader in = null-->Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_5 $$ URL url = null-->Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_7 $$ url = new URL(s)-->Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_15 $$ String remoteVersion = in.readLine()[ CD ]
Line_12 $$ BufferedReader in = null-->Line_15 $$ String remoteVersion = in.readLine()[ FD ]
Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_15 $$ String remoteVersion = in.readLine()[ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_16 $$ if ((remoteVersion != null) && (remoteVersion.length() > 0) && (Character.isDigit(remoteVersion.charAt(0)))) [ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_16 $$ if ((remoteVersion != null) && (remoteVersion.length() > 0) && (Character.isDigit(remoteVersion.charAt(0)))) [ FD ]
Line_16 $$ if ((remoteVersion != null) && (remoteVersion.length() > 0) && (Character.isDigit(remoteVersion.charAt(0)))) -->Line_17 $$ remoteVersions.add(remoteVersion)[ CD ]
Line_3 $$ List<String> remoteVersions = new LinkedList<String>()-->Line_17 $$ remoteVersions.add(remoteVersion)[ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_17 $$ remoteVersions.add(remoteVersion)[ FD ]
Line_12 $$ BufferedReader in = null-->Line_23 $$ if (in != null)[ FD ]
Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_23 $$ if (in != null)[ FD ]
Line_23 $$ if (in != null)-->Line_23 $$ in.close()[ CD ]
Line_12 $$ BufferedReader in = null-->Line_23 $$ in.close()[ FD ]
Line_14 $$ in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_23 $$ in.close()[ FD ]
Line_2 $$ public void run() -->Line_30 $$ if (remoteVersions.size() > 0) [ CD ]
Line_3 $$ List<String> remoteVersions = new LinkedList<String>()-->Line_30 $$ if (remoteVersions.size() > 0) [ FD ]
Line_30 $$ if (remoteVersions.size() > 0) -->Line_31 $$ RapidMinerGUI.saveLastUpdateCheckDate()[ CD ]
Line_2 $$ public void run() -->Line_33 $$ Iterator<String> i = remoteVersions.iterator()[ CD ]
Line_33 $$ Iterator<String> i = remoteVersions.iterator()-->Line_33 $$ Iterator<String> i = remoteVersions.iterator()[ CD ]
Line_3 $$ List<String> remoteVersions = new LinkedList<String>()-->Line_33 $$ Iterator<String> i = remoteVersions.iterator()[ FD ]
Line_2 $$ public void run() -->Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())[ CD ]
Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())-->Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())[ CD ]
Line_2 $$ public void run() -->Line_35 $$ while (i.hasNext()) [ CD ]
Line_2 $$ public void run() -->Line_2 $$ public void run() [ CD ]
Line_35 $$ while (i.hasNext()) -->Line_35 $$ while (i.hasNext()) [ CD ]
Line_33 $$ Iterator<String> i = remoteVersions.iterator()-->Line_35 $$ while (i.hasNext()) [ FD ]
Line_35 $$ while (i.hasNext()) -->Line_36 $$ String remoteVersionString = i.next()[ CD ]
Line_36 $$ String remoteVersionString = i.next()-->Line_36 $$ String remoteVersionString = i.next()[ CD ]
Line_33 $$ Iterator<String> i = remoteVersions.iterator()-->Line_36 $$ String remoteVersionString = i.next()[ FD ]
Line_35 $$ while (i.hasNext()) -->Line_37 $$ if (remoteVersionString != null) [ CD ]
Line_36 $$ String remoteVersionString = i.next()-->Line_37 $$ if (remoteVersionString != null) [ FD ]
Line_37 $$ if (remoteVersionString != null) -->Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)[ CD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)[ CD ]
Line_36 $$ String remoteVersionString = i.next()-->Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)[ FD ]
Line_37 $$ if (remoteVersionString != null) -->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ CD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_39 $$ if (isNewer(remoteVersion, newestVersion)) -->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ CD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_39 $$ if (isNewer(remoteVersion, newestVersion)) -->Line_40 $$ newestVersion = remoteVersion[ CD ]
Line_40 $$ newestVersion = remoteVersion-->Line_40 $$ newestVersion = remoteVersion[ FD ]
Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())-->Line_40 $$ newestVersion = remoteVersion[ FD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_40 $$ newestVersion = remoteVersion[ FD ]
Line_15 $$ String remoteVersion = in.readLine()-->Line_40 $$ newestVersion = remoteVersion[ FD ]
Line_2 $$ public void run() -->Line_44 $$ if ((newestVersion != null) && (isNewer(newestVersion, getVersionNumber(Version.getLongVersion())))) [ CD ]
Line_40 $$ newestVersion = remoteVersion-->Line_44 $$ if ((newestVersion != null) && (isNewer(newestVersion, getVersionNumber(Version.getLongVersion())))) [ FD ]
Line_34 $$ VersionNumber newestVersion = getVersionNumber(Version.getLongVersion())-->Line_44 $$ if ((newestVersion != null) && (isNewer(newestVersion, getVersionNumber(Version.getLongVersion())))) [ FD ]
Line_44 $$ if ((newestVersion != null) && (isNewer(newestVersion, getVersionNumber(Version.getLongVersion())))) -->Line_45 $$ JOptionPane.showMessageDialog(mainFrame, "New version of the RapidMiner Community Edition is available:" + Tools.getLineSeparator() + Tools.getLineSeparator() + "          RapidMiner " + newestVersion + Tools.getLineSeparator() + Tools.getLineSeparator() + "Please download it from:" + Tools.getLineSeparator() + "          http://www.rapidminer.com", "New RapidMiner version", JOptionPane.INFORMATION_MESSAGE)[ CD ]
Line_44 $$ if ((newestVersion != null) && (isNewer(newestVersion, getVersionNumber(Version.getLongVersion())))) -->Line_46 $$ if (showFailureDialog) [ CD ]
Line_46 $$ if (showFailureDialog) -->Line_47 $$ JOptionPane.showMessageDialog(mainFrame, "No newer versions of the RapidMiner Community Edition available!", "RapidMiner CE is up to date", JOptionPane.INFORMATION_MESSAGE)[ CD ]
Line_36 $$ String remoteVersionString = i.next()-->Line_37 $$ if (remoteVersionString != null) [ FD ]
Line_36 $$ String remoteVersionString = i.next()-->Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)[ FD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_40 $$ newestVersion = remoteVersion-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_40 $$ newestVersion = remoteVersion-->Line_39 $$ if (isNewer(remoteVersion, newestVersion)) [ FD ]
Line_38 $$ VersionNumber remoteVersion = getVersionNumber(remoteVersionString)-->Line_40 $$ newestVersion = remoteVersion[ FD ]
