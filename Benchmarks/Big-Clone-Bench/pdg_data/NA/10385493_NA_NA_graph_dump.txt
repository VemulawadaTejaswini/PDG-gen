Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void writeBack(File destinationFile, boolean makeCopy) throws IOException [ CD ]
Line_2 $$ public void writeBack(File destinationFile, boolean makeCopy) throws IOException -->Line_3 $$ if (makeCopy) [ CD ]
Line_3 $$ if (makeCopy) -->Line_4 $$ FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel()[ CD ]
Line_4 $$ FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel()-->Line_4 $$ FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel()[ CD ]
Line_3 $$ if (makeCopy) -->Line_5 $$ FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel()[ CD ]
Line_5 $$ FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel()-->Line_5 $$ FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel()[ CD ]
Line_3 $$ if (makeCopy) -->Line_6 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ CD ]
Line_4 $$ FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel()-->Line_6 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_5 $$ FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel()-->Line_6 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_4 $$ FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel()-->Line_6 $$ sourceChannel.transferTo(0, sourceChannel.size(), destinationChannel)[ FD ]
Line_3 $$ if (makeCopy) -->Line_7 $$ sourceChannel.close()[ CD ]
Line_4 $$ FileChannel sourceChannel = new java.io.FileInputStream(getFile()).getChannel()-->Line_7 $$ sourceChannel.close()[ FD ]
Line_3 $$ if (makeCopy) -->Line_8 $$ destinationChannel.close()[ CD ]
Line_5 $$ FileChannel destinationChannel = new java.io.FileOutputStream(destinationFile).getChannel()-->Line_8 $$ destinationChannel.close()[ FD ]
Line_3 $$ if (makeCopy) -->Line_10 $$ getFile().renameTo(destinationFile)[ CD ]
Line_2 $$ public void writeBack(File destinationFile, boolean makeCopy) throws IOException -->Line_10 $$ getFile().renameTo(destinationFile)[ FD ]
Line_2 $$ public void writeBack(File destinationFile, boolean makeCopy) throws IOException -->Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) [ CD ]
Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) -->Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) [ CD ]
Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) -->Line_13 $$ String adjustArgument = "-ts" + m_dfJhead.format(getExifTime())[ CD ]
Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) -->Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())[ CD ]
Line_2 $$ public void writeBack(File destinationFile, boolean makeCopy) throws IOException -->Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())[ FD ]
Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) -->Line_15 $$ pb.directory(destinationFile.getParentFile())[ CD ]
Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())-->Line_15 $$ pb.directory(destinationFile.getParentFile())[ FD ]
Line_2 $$ public void writeBack(File destinationFile, boolean makeCopy) throws IOException -->Line_15 $$ pb.directory(destinationFile.getParentFile())[ FD ]
Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) -->Line_16 $$ System.out.println(pb.command().get(0) + " " + pb.command().get(1) + " " + pb.command().get(2))[ CD ]
Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())-->Line_16 $$ System.out.println(pb.command().get(0) + " " + pb.command().get(1) + " " + pb.command().get(2))[ FD ]
Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())-->Line_16 $$ System.out.println(pb.command().get(0) + " " + pb.command().get(1) + " " + pb.command().get(2))[ FD ]
Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())-->Line_16 $$ System.out.println(pb.command().get(0) + " " + pb.command().get(1) + " " + pb.command().get(2))[ FD ]
Line_12 $$ if (getExifTime() != null && getOriginalTime() != null && !getExifTime().equals(getOriginalTime())) -->Line_17 $$ final Process p = pb.start()[ CD ]
Line_17 $$ final Process p = pb.start()-->Line_17 $$ final Process p = pb.start()[ CD ]
Line_14 $$ ProcessBuilder pb = new ProcessBuilder(m_tm.getJheadCommand(), adjustArgument, destinationFile.getAbsolutePath())-->Line_17 $$ final Process p = pb.start()[ FD ]
Line_17 $$ final Process p = pb.start()-->Line_19 $$ p.waitFor()[ FD ]
