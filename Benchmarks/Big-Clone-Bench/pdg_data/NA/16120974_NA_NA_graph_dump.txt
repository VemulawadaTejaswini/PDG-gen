Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ if (args.length == 0) [ CD ]
Line_3 $$ if (args.length == 0) -->Line_4 $$ System.out.println("Usage: java xyzImpl inputfile")[ CD ]
Line_3 $$ if (args.length == 0) -->Line_5 $$ System.exit(0)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ XYZ xyz = null[ CD ]
Line_9 $$ URL url = new URL(Util.makeAbsoluteURL(args[0]))-->Line_10 $$ BufferedReader bReader = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_11 $$ int idx = args[0].indexOf(".")-->Line_11 $$ int idx = args[0].indexOf(".")[ CD ]
Line_11 $$ int idx = args[0].indexOf(".")-->Line_12 $$ String id = (idx == -1) ? args[0] : args[0].substring(0, idx)[ FD ]
Line_11 $$ int idx = args[0].indexOf(".")-->Line_13 $$ idx = id.lastIndexOf("\\")[ FD ]
Line_13 $$ idx = id.lastIndexOf("\\")-->Line_13 $$ idx = id.lastIndexOf("\\")[ FD ]
Line_13 $$ idx = id.lastIndexOf("\\")-->Line_13 $$ idx = id.lastIndexOf("\\")[ CD ]
Line_12 $$ String id = (idx == -1) ? args[0] : args[0].substring(0, idx)-->Line_13 $$ idx = id.lastIndexOf("\\")[ FD ]
Line_11 $$ int idx = args[0].indexOf(".")-->Line_14 $$ if (idx != -1)[ FD ]
Line_13 $$ idx = id.lastIndexOf("\\")-->Line_14 $$ if (idx != -1)[ FD ]
Line_14 $$ if (idx != -1)-->Line_14 $$ id = id.substring(idx + 1)[ CD ]
Line_12 $$ String id = (idx == -1) ? args[0] : args[0].substring(0, idx)-->Line_14 $$ id = id.substring(idx + 1)[ FD ]
Line_14 $$ id = id.substring(idx + 1)-->Line_14 $$ id = id.substring(idx + 1)[ FD ]
Line_14 $$ id = id.substring(idx + 1)-->Line_14 $$ id = id.substring(idx + 1)[ CD ]
Line_12 $$ String id = (idx == -1) ? args[0] : args[0].substring(0, idx)-->Line_14 $$ id = id.substring(idx + 1)[ FD ]
Line_14 $$ id = id.substring(idx + 1)-->Line_14 $$ id = id.substring(idx + 1)[ FD ]
Line_7 $$ XYZ xyz = null-->Line_15 $$ xyz = new XYZImpl(bReader, id)[ FD ]
Line_15 $$ xyz = new XYZImpl(bReader, id)-->Line_15 $$ xyz = new XYZImpl(bReader, id)[ FD ]
Line_16 $$ CMLMolecule mol = xyz.getMolecule()-->Line_16 $$ CMLMolecule mol = xyz.getMolecule()[ CD ]
Line_7 $$ XYZ xyz = null-->Line_16 $$ CMLMolecule mol = xyz.getMolecule()[ FD ]
Line_15 $$ xyz = new XYZImpl(bReader, id)-->Line_16 $$ CMLMolecule mol = xyz.getMolecule()[ FD ]
Line_16 $$ CMLMolecule mol = xyz.getMolecule()-->Line_18 $$ mol.debug(sw)[ FD ]
Line_17 $$ StringWriter sw = new StringWriter()-->Line_18 $$ mol.debug(sw)[ FD ]
Line_17 $$ StringWriter sw = new StringWriter()-->Line_19 $$ System.out.println(sw.toString())[ FD ]
Line_20 $$ SpanningTree sTree = new SpanningTreeImpl(mol)-->Line_21 $$ System.out.println(sTree.toSMILES())[ FD ]
Line_16 $$ CMLMolecule mol = xyz.getMolecule()-->Line_23 $$ PMRDelegate.outputEventStream(mol, w, PMRNode.PRETTY, 0)[ FD ]
Line_22 $$ Writer w = new OutputStreamWriter(new FileOutputStream(id + ".xml"))-->Line_23 $$ PMRDelegate.outputEventStream(mol, w, PMRNode.PRETTY, 0)[ FD ]
Line_22 $$ Writer w = new OutputStreamWriter(new FileOutputStream(id + ".xml"))-->Line_24 $$ w.close()[ FD ]
Line_22 $$ Writer w = new OutputStreamWriter(new FileOutputStream(id + ".xml"))-->Line_25 $$ w = new OutputStreamWriter(new FileOutputStream(id + "-new.mol"))[ FD ]
Line_25 $$ w = new OutputStreamWriter(new FileOutputStream(id + "-new.mol"))-->Line_25 $$ w = new OutputStreamWriter(new FileOutputStream(id + "-new.mol"))[ FD ]
Line_7 $$ XYZ xyz = null-->Line_26 $$ xyz.setOutputCMLMolecule(mol)[ FD ]
Line_15 $$ xyz = new XYZImpl(bReader, id)-->Line_26 $$ xyz.setOutputCMLMolecule(mol)[ FD ]
Line_16 $$ CMLMolecule mol = xyz.getMolecule()-->Line_26 $$ xyz.setOutputCMLMolecule(mol)[ FD ]
Line_7 $$ XYZ xyz = null-->Line_27 $$ xyz.output(w)[ FD ]
Line_15 $$ xyz = new XYZImpl(bReader, id)-->Line_27 $$ xyz.output(w)[ FD ]
Line_22 $$ Writer w = new OutputStreamWriter(new FileOutputStream(id + ".xml"))-->Line_27 $$ xyz.output(w)[ FD ]
Line_25 $$ w = new OutputStreamWriter(new FileOutputStream(id + "-new.mol"))-->Line_27 $$ xyz.output(w)[ FD ]
Line_22 $$ Writer w = new OutputStreamWriter(new FileOutputStream(id + ".xml"))-->Line_28 $$ w.close()[ FD ]
Line_25 $$ w = new OutputStreamWriter(new FileOutputStream(id + "-new.mol"))-->Line_28 $$ w.close()[ FD ]
