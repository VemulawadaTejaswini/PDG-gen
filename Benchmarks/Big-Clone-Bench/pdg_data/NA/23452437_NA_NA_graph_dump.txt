Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException [ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_3 $$ if (fSource.getName().equals("Thums.db"))[ CD ]
Line_3 $$ if (fSource.getName().equals("Thums.db"))-->Line_3 $$ if (fSource.getName().equals("Thums.db"))[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_3 $$ if (fSource.getName().equals("Thums.db"))[ FD ]
Line_3 $$ if (fSource.getName().equals("Thums.db"))-->Line_3 $$ return[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_4 $$ System.out.println("copying " + fSource + " in " + file)[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_5 $$ OutputStream o = new BufferedOutputStream(new FileOutputStream(file))[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_6 $$ InputStream i = new BufferedInputStream(new FileInputStream(fSource))[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_7 $$ byte[] b = new byte[8192][ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_8 $$ int n[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)[ CD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException [ CD ]
Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)-->Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)[ FD ]
Line_8 $$ int n-->Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)[ FD ]
Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)-->Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)[ CD ]
Line_6 $$ InputStream i = new BufferedInputStream(new FileInputStream(fSource))-->Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)[ FD ]
Line_7 $$ byte[] b = new byte[8192]-->Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)[ FD ]
Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)-->Line_9 $$ o.write(b, 0, n)[ CD ]
Line_5 $$ OutputStream o = new BufferedOutputStream(new FileOutputStream(file))-->Line_9 $$ o.write(b, 0, n)[ FD ]
Line_7 $$ byte[] b = new byte[8192]-->Line_9 $$ o.write(b, 0, n)[ FD ]
Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)-->Line_9 $$ o.write(b, 0, n)[ FD ]
Line_8 $$ int n-->Line_9 $$ o.write(b, 0, n)[ FD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_10 $$ i.close()[ CD ]
Line_6 $$ InputStream i = new BufferedInputStream(new FileInputStream(fSource))-->Line_10 $$ i.close()[ FD ]
Line_2 $$ private void internalCopy(File fSource, File file) throws FileNotFoundException, IOException -->Line_11 $$ o.close()[ CD ]
Line_5 $$ OutputStream o = new BufferedOutputStream(new FileOutputStream(file))-->Line_11 $$ o.close()[ FD ]
Line_9 $$ while ((n = i.read(b)) > 0) o.write(b, 0, n)-->Line_9 $$ o.write(b, 0, n)[ FD ]
