Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static boolean unzipWithWarning(File source, File targetDirectory, OverwriteValue policy) [ CD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ if (!source.exists())[ CD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ if (!source.exists())[ CD ]
Line_2 $$ private static boolean unzipWithWarning(File source, File targetDirectory, OverwriteValue policy) -->Line_4 $$ if (!source.exists())[ FD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ return false[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) [ FD ]
Line_6 $$ ZipEntry zipEntry = null-->Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) [ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) [ CD ]
Line_5 $$ ZipInputStream input = new ZipInputStream(new FileInputStream(source))-->Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) [ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_9 $$ if (zipEntry.isDirectory())[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_9 $$ if (zipEntry.isDirectory())[ FD ]
Line_6 $$ ZipEntry zipEntry = null-->Line_9 $$ if (zipEntry.isDirectory())[ FD ]
Line_9 $$ if (zipEntry.isDirectory())-->Line_9 $$ if (zipEntry.isDirectory())[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_9 $$ if (zipEntry.isDirectory())[ FD ]
Line_6 $$ ZipEntry zipEntry = null-->Line_9 $$ if (zipEntry.isDirectory())[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())[ FD ]
Line_6 $$ ZipEntry zipEntry = null-->Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_11 $$ if (newFile.exists()) [ CD ]
Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())-->Line_11 $$ if (newFile.exists()) [ FD ]
Line_11 $$ if (newFile.exists()) -->Line_11 $$ if (newFile.exists()) [ CD ]
Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())-->Line_11 $$ if (newFile.exists()) [ FD ]
Line_18 $$ switch(policy.value = confirmOverwrite(zipEntry.getName())) -->Line_18 $$ switch(policy.value = confirmOverwrite(zipEntry.getName())) [ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_18 $$ switch(policy.value = confirmOverwrite(zipEntry.getName())) [ FD ]
Line_6 $$ ZipEntry zipEntry = null-->Line_18 $$ switch(policy.value = confirmOverwrite(zipEntry.getName())) [ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_26 $$ newFile.getParentFile().mkdirs()[ CD ]
Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())-->Line_26 $$ newFile.getParentFile().mkdirs()[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_27 $$ int bytesRead[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_28 $$ FileOutputStream output = new FileOutputStream(newFile)[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) [ CD ]
Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)-->Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)[ FD ]
Line_27 $$ int bytesRead-->Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)[ FD ]
Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)-->Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)[ CD ]
Line_5 $$ ZipInputStream input = new ZipInputStream(new FileInputStream(source))-->Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)[ FD ]
Line_7 $$ byte[] buffer = new byte[1024]-->Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)[ FD ]
Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)-->Line_29 $$ output.write(buffer, 0, bytesRead)[ CD ]
Line_28 $$ FileOutputStream output = new FileOutputStream(newFile)-->Line_29 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_7 $$ byte[] buffer = new byte[1024]-->Line_29 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)-->Line_29 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_27 $$ int bytesRead-->Line_29 $$ output.write(buffer, 0, bytesRead)[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_30 $$ output.close()[ CD ]
Line_28 $$ FileOutputStream output = new FileOutputStream(newFile)-->Line_30 $$ output.close()[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_31 $$ input.closeEntry()[ CD ]
Line_5 $$ ZipInputStream input = new ZipInputStream(new FileInputStream(source))-->Line_31 $$ input.closeEntry()[ FD ]
Line_5 $$ ZipInputStream input = new ZipInputStream(new FileInputStream(source))-->Line_33 $$ input.close()[ FD ]
Line_2 $$ private static boolean unzipWithWarning(File source, File targetDirectory, OverwriteValue policy) -->Line_38 $$ return true[ CD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_9 $$ if (zipEntry.isDirectory())[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_9 $$ if (zipEntry.isDirectory())[ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())[ FD ]
Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())-->Line_11 $$ if (newFile.exists()) [ FD ]
Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())-->Line_11 $$ if (newFile.exists()) [ FD ]
Line_8 $$ while ((zipEntry = input.getNextEntry()) != null) -->Line_18 $$ switch(policy.value = confirmOverwrite(zipEntry.getName())) [ FD ]
Line_10 $$ File newFile = new File(targetDirectory, zipEntry.getName())-->Line_26 $$ newFile.getParentFile().mkdirs()[ FD ]
Line_28 $$ FileOutputStream output = new FileOutputStream(newFile)-->Line_30 $$ output.close()[ FD ]
Line_29 $$ while ((bytesRead = input.read(buffer)) != -1) output.write(buffer, 0, bytesRead)-->Line_29 $$ output.write(buffer, 0, bytesRead)[ FD ]
