Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean exists(String filename) [ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_3 $$ String localFileName = (java.io.File.separatorChar != '/') ? filename.replace('/', java.io.File.separatorChar) : filename[ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_3 $$ String localFileName = (java.io.File.separatorChar != '/') ? filename.replace('/', java.io.File.separatorChar) : filename[ FD ]
Line_2 $$ public boolean exists(String filename) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_2 $$ public boolean exists(String filename) [ CD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_5 $$ if (zipEntries[i] != null) [ CD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_6 $$ if (zipEntries[i].get(filename) != null)[ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_6 $$ if (zipEntries[i].get(filename) != null)[ FD ]
Line_6 $$ if (zipEntries[i].get(filename) != null)-->Line_6 $$ return true[ CD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_7 $$ String dir = ""[ CD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_8 $$ String name = filename[ CD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_9 $$ int index = filename.lastIndexOf('/')[ CD ]
Line_9 $$ int index = filename.lastIndexOf('/')-->Line_9 $$ int index = filename.lastIndexOf('/')[ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_9 $$ int index = filename.lastIndexOf('/')[ FD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_10 $$ if (index >= 0) [ CD ]
Line_9 $$ int index = filename.lastIndexOf('/')-->Line_10 $$ if (index >= 0) [ FD ]
Line_10 $$ if (index >= 0) -->Line_11 $$ dir = filename.substring(0, index)[ CD ]
Line_7 $$ String dir = ""-->Line_11 $$ dir = filename.substring(0, index)[ FD ]
Line_11 $$ dir = filename.substring(0, index)-->Line_11 $$ dir = filename.substring(0, index)[ FD ]
Line_11 $$ dir = filename.substring(0, index)-->Line_11 $$ dir = filename.substring(0, index)[ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_11 $$ dir = filename.substring(0, index)[ FD ]
Line_9 $$ int index = filename.lastIndexOf('/')-->Line_11 $$ dir = filename.substring(0, index)[ FD ]
Line_10 $$ if (index >= 0) -->Line_12 $$ name = filename.substring(index + 1)[ CD ]
Line_8 $$ String name = filename-->Line_12 $$ name = filename.substring(index + 1)[ FD ]
Line_12 $$ name = filename.substring(index + 1)-->Line_12 $$ name = filename.substring(index + 1)[ FD ]
Line_12 $$ name = filename.substring(index + 1)-->Line_12 $$ name = filename.substring(index + 1)[ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_12 $$ name = filename.substring(index + 1)[ FD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)[ CD ]
Line_7 $$ String dir = ""-->Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)[ FD ]
Line_11 $$ dir = filename.substring(0, index)-->Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)[ FD ]
Line_5 $$ if (zipEntries[i] != null) -->Line_15 $$ if (directory != null && directory.contains(name))[ CD ]
Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)-->Line_15 $$ if (directory != null && directory.contains(name))[ FD ]
Line_8 $$ String name = filename-->Line_15 $$ if (directory != null && directory.contains(name))[ FD ]
Line_12 $$ name = filename.substring(index + 1)-->Line_15 $$ if (directory != null && directory.contains(name))[ FD ]
Line_15 $$ if (directory != null && directory.contains(name))-->Line_15 $$ return true[ CD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_18 $$ if (bases[i] != null) [ CD ]
Line_21 $$ URLConnection conn = url.openConnection()-->Line_21 $$ URLConnection conn = url.openConnection()[ CD ]
Line_20 $$ URL url = new URL(bases[i], filename)-->Line_21 $$ URLConnection conn = url.openConnection()[ FD ]
Line_21 $$ URLConnection conn = url.openConnection()-->Line_22 $$ conn.connect()[ FD ]
Line_21 $$ URLConnection conn = url.openConnection()-->Line_23 $$ conn.getInputStream().close()[ FD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_29 $$ if (dirs[i] == null)[ CD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_30 $$ if (zips[i] != null) [ CD ]
Line_30 $$ if (zips[i] != null) -->Line_31 $$ String fullname = zipDirs[i] != null ? zipDirs[i] + filename : filename[ CD ]
Line_30 $$ if (zips[i] != null) -->Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)[ CD ]
Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)-->Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)[ CD ]
Line_31 $$ String fullname = zipDirs[i] != null ? zipDirs[i] + filename : filename-->Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)[ FD ]
Line_30 $$ if (zips[i] != null) -->Line_33 $$ if (ze != null)[ CD ]
Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)-->Line_33 $$ if (ze != null)[ FD ]
Line_33 $$ if (ze != null)-->Line_33 $$ return true[ CD ]
Line_36 $$ File f = new File(dirs[i], localFileName)-->Line_37 $$ if (f.exists())[ FD ]
Line_37 $$ if (f.exists())-->Line_37 $$ if (f.exists())[ CD ]
Line_36 $$ File f = new File(dirs[i], localFileName)-->Line_37 $$ if (f.exists())[ FD ]
Line_37 $$ if (f.exists())-->Line_37 $$ return true[ CD ]
Line_2 $$ public boolean exists(String filename) -->Line_42 $$ return false[ CD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < dirs.length; i++) -->Line_4 $$ for (int i = 0; i < dirs.length; i++) [ FD ]
Line_9 $$ int index = filename.lastIndexOf('/')-->Line_10 $$ if (index >= 0) [ FD ]
Line_9 $$ int index = filename.lastIndexOf('/')-->Line_11 $$ dir = filename.substring(0, index)[ FD ]
Line_7 $$ String dir = ""-->Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)[ FD ]
Line_11 $$ dir = filename.substring(0, index)-->Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)[ FD ]
Line_14 $$ Vector directory = (Vector) zipEntries[i].get(dir)-->Line_15 $$ if (directory != null && directory.contains(name))[ FD ]
Line_8 $$ String name = filename-->Line_15 $$ if (directory != null && directory.contains(name))[ FD ]
Line_12 $$ name = filename.substring(index + 1)-->Line_15 $$ if (directory != null && directory.contains(name))[ FD ]
Line_20 $$ URL url = new URL(bases[i], filename)-->Line_21 $$ URLConnection conn = url.openConnection()[ FD ]
Line_21 $$ URLConnection conn = url.openConnection()-->Line_22 $$ conn.connect()[ FD ]
Line_21 $$ URLConnection conn = url.openConnection()-->Line_23 $$ conn.getInputStream().close()[ FD ]
Line_31 $$ String fullname = zipDirs[i] != null ? zipDirs[i] + filename : filename-->Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)[ FD ]
Line_32 $$ ZipEntry ze = zips[i].getEntry(fullname)-->Line_33 $$ if (ze != null)[ FD ]
Line_36 $$ File f = new File(dirs[i], localFileName)-->Line_37 $$ if (f.exists())[ FD ]
Line_36 $$ File f = new File(dirs[i], localFileName)-->Line_37 $$ if (f.exists())[ FD ]
