Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void assign() throws Exception [ CD ]
Line_2 $$ public void assign() throws Exception -->Line_3 $$ if (proposalIds.equals("") || usrIds.equals(""))[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_4 $$ String[] pids = proposalIds.split(",")[ CD ]
Line_4 $$ String[] pids = proposalIds.split(",")-->Line_4 $$ String[] pids = proposalIds.split(",")[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_5 $$ String[] uids = usrIds.split(",")[ CD ]
Line_5 $$ String[] uids = usrIds.split(",")-->Line_5 $$ String[] uids = usrIds.split(",")[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_6 $$ int pnum = pids.length[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_7 $$ int unum = uids.length[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_8 $$ if (pnum == 0 || unum == 0)[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_9 $$ int i, j[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_10 $$ String pStr = "update proposal set current_status='assigned' where "[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_11 $$ for (i = 0; i < pnum; i++) [ CD ]
Line_2 $$ public void assign() throws Exception -->Line_2 $$ public void assign() throws Exception [ CD ]
Line_9 $$ int i, j-->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_6 $$ int pnum = pids.length-->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ CD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_9 $$ int i, j-->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ CD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_9 $$ int i, j-->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_12 $$ if (i > 0)[ CD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_12 $$ if (i > 0)[ FD ]
Line_9 $$ int i, j-->Line_12 $$ if (i > 0)[ FD ]
Line_12 $$ if (i > 0)-->Line_12 $$ pStr += " OR "[ CD ]
Line_12 $$ pStr += " OR "-->Line_12 $$ pStr += " OR "[ FD ]
Line_10 $$ String pStr = "update proposal set current_status='assigned' where "-->Line_12 $$ pStr += " OR "[ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i][ CD ]
Line_12 $$ pStr += " OR "-->Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i][ FD ]
Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i]-->Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i][ FD ]
Line_10 $$ String pStr = "update proposal set current_status='assigned' where "-->Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i][ FD ]
Line_2 $$ public void assign() throws Exception -->Line_15 $$ Calendar date = Calendar.getInstance()[ CD ]
Line_15 $$ Calendar date = Calendar.getInstance()-->Line_15 $$ Calendar date = Calendar.getInstance()[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_16 $$ int day = date.get(Calendar.DATE)[ CD ]
Line_16 $$ int day = date.get(Calendar.DATE)-->Line_16 $$ int day = date.get(Calendar.DATE)[ CD ]
Line_15 $$ Calendar date = Calendar.getInstance()-->Line_16 $$ int day = date.get(Calendar.DATE)[ FD ]
Line_2 $$ public void assign() throws Exception -->Line_17 $$ int month = date.get(Calendar.MONTH)[ CD ]
Line_17 $$ int month = date.get(Calendar.MONTH)-->Line_17 $$ int month = date.get(Calendar.MONTH)[ CD ]
Line_15 $$ Calendar date = Calendar.getInstance()-->Line_17 $$ int month = date.get(Calendar.MONTH)[ FD ]
Line_2 $$ public void assign() throws Exception -->Line_18 $$ int year = date.get(Calendar.YEAR)[ CD ]
Line_18 $$ int year = date.get(Calendar.YEAR)-->Line_18 $$ int year = date.get(Calendar.YEAR)[ CD ]
Line_15 $$ Calendar date = Calendar.getInstance()-->Line_18 $$ int year = date.get(Calendar.YEAR)[ FD ]
Line_2 $$ public void assign() throws Exception -->Line_19 $$ String dt = String.valueOf(year) + "-" + String.valueOf(month + 1) + "-" + String.valueOf(day)[ CD ]
Line_18 $$ int year = date.get(Calendar.YEAR)-->Line_19 $$ String dt = String.valueOf(year) + "-" + String.valueOf(month + 1) + "-" + String.valueOf(day)[ FD ]
Line_16 $$ int day = date.get(Calendar.DATE)-->Line_19 $$ String dt = String.valueOf(year) + "-" + String.valueOf(month + 1) + "-" + String.valueOf(day)[ FD ]
Line_2 $$ public void assign() throws Exception -->Line_20 $$ PreparedStatement prepStmt = null[ CD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_24 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_24 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_24 $$ prepStmt = con.prepareStatement(pStr)[ CD ]
Line_12 $$ pStr += " OR "-->Line_24 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i]-->Line_24 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_10 $$ String pStr = "update proposal set current_status='assigned' where "-->Line_24 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_25 $$ prepStmt.executeUpdate()[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_25 $$ prepStmt.executeUpdate()[ FD ]
Line_12 $$ pStr += " OR "-->Line_26 $$ pStr = "insert into event (summary,document1,document2,document3,publicComments,privateComments,ACTION_ID,eventDate,ROLE_ID,reviewText,USR_ID,PROPOSAL_ID,SUBJECTUSR_ID) values " + "('','','','','','','assigned','" + dt + "',2,'new'," + userId + ",?,?)"[ FD ]
Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i]-->Line_26 $$ pStr = "insert into event (summary,document1,document2,document3,publicComments,privateComments,ACTION_ID,eventDate,ROLE_ID,reviewText,USR_ID,PROPOSAL_ID,SUBJECTUSR_ID) values " + "('','','','','','','assigned','" + dt + "',2,'new'," + userId + ",?,?)"[ FD ]
Line_10 $$ String pStr = "update proposal set current_status='assigned' where "-->Line_26 $$ pStr = "insert into event (summary,document1,document2,document3,publicComments,privateComments,ACTION_ID,eventDate,ROLE_ID,reviewText,USR_ID,PROPOSAL_ID,SUBJECTUSR_ID) values " + "('','','','','','','assigned','" + dt + "',2,'new'," + userId + ",?,?)"[ FD ]
Line_26 $$ pStr = "insert into event (summary,document1,document2,document3,publicComments,privateComments,ACTION_ID,eventDate,ROLE_ID,reviewText,USR_ID,PROPOSAL_ID,SUBJECTUSR_ID) values " + "('','','','','','','assigned','" + dt + "',2,'new'," + userId + ",?,?)"-->Line_26 $$ pStr = "insert into event (summary,document1,document2,document3,publicComments,privateComments,ACTION_ID,eventDate,ROLE_ID,reviewText,USR_ID,PROPOSAL_ID,SUBJECTUSR_ID) values " + "('','','','','','','assigned','" + dt + "',2,'new'," + userId + ",?,?)"[ FD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_27 $$ prepStmt = con.prepareStatement(pStr)-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_27 $$ prepStmt = con.prepareStatement(pStr)-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ CD ]
Line_12 $$ pStr += " OR "-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_13 $$ pStr += "PROPOSAL_ID=" + pids[i]-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_10 $$ String pStr = "update proposal set current_status='assigned' where "-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_26 $$ pStr = "insert into event (summary,document1,document2,document3,publicComments,privateComments,ACTION_ID,eventDate,ROLE_ID,reviewText,USR_ID,PROPOSAL_ID,SUBJECTUSR_ID) values " + "('','','','','','','assigned','" + dt + "',2,'new'," + userId + ",?,?)"-->Line_27 $$ prepStmt = con.prepareStatement(pStr)[ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_9 $$ int i, j-->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_6 $$ int pnum = pids.length-->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ CD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_9 $$ int i, j-->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ CD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_9 $$ int i, j-->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_29 $$ for (j = 0; j < unum; j++) [ CD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ CD ]
Line_9 $$ int i, j-->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_7 $$ int unum = uids.length-->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ CD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_9 $$ int i, j-->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ CD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_9 $$ int i, j-->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_30 $$ prepStmt.setString(1, pids[i])[ CD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_30 $$ prepStmt.setString(1, pids[i])[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_30 $$ prepStmt.setString(1, pids[i])[ FD ]
Line_27 $$ prepStmt = con.prepareStatement(pStr)-->Line_30 $$ prepStmt.setString(1, pids[i])[ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_31 $$ prepStmt.setString(2, uids[j])[ CD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_31 $$ prepStmt.setString(2, uids[j])[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_31 $$ prepStmt.setString(2, uids[j])[ FD ]
Line_27 $$ prepStmt = con.prepareStatement(pStr)-->Line_31 $$ prepStmt.setString(2, uids[j])[ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_32 $$ prepStmt.executeUpdate()[ CD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_32 $$ prepStmt.executeUpdate()[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_32 $$ prepStmt.executeUpdate()[ FD ]
Line_27 $$ prepStmt = con.prepareStatement(pStr)-->Line_32 $$ prepStmt.executeUpdate()[ FD ]
Line_37 $$ if (!con.isClosed()) -->Line_37 $$ if (!con.isClosed()) [ CD ]
Line_37 $$ if (!con.isClosed()) -->Line_37 $$ if (!con.isClosed()) [ CD ]
Line_37 $$ if (!con.isClosed()) -->Line_38 $$ con.rollback()[ CD ]
Line_37 $$ if (!con.isClosed()) -->Line_39 $$ prepStmt.close()[ CD ]
Line_20 $$ PreparedStatement prepStmt = null-->Line_39 $$ prepStmt.close()[ FD ]
Line_24 $$ prepStmt = con.prepareStatement(pStr)-->Line_39 $$ prepStmt.close()[ FD ]
Line_27 $$ prepStmt = con.prepareStatement(pStr)-->Line_39 $$ prepStmt.close()[ FD ]
Line_37 $$ if (!con.isClosed()) -->Line_40 $$ con.close()[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_44 $$ event_Form fr = new event_Form()[ CD ]
Line_2 $$ public void assign() throws Exception -->Line_45 $$ for (j = 0; j < unum; j++) [ CD ]
Line_2 $$ public void assign() throws Exception -->Line_2 $$ public void assign() throws Exception [ CD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_9 $$ int i, j-->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_7 $$ int unum = uids.length-->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ CD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_9 $$ int i, j-->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ CD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_9 $$ int i, j-->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_46 $$ fr.setUSR_ID(userId)[ CD ]
Line_44 $$ event_Form fr = new event_Form()-->Line_46 $$ fr.setUSR_ID(userId)[ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_47 $$ fr.setSUBJECTUSR_ID(uids[j])[ CD ]
Line_44 $$ event_Form fr = new event_Form()-->Line_47 $$ fr.setSUBJECTUSR_ID(uids[j])[ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_48 $$ systemManager.handleEvent(SystemManager.EVENT_PROPOSAL_ASSIGNED, fr, null, null)[ CD ]
Line_44 $$ event_Form fr = new event_Form()-->Line_48 $$ systemManager.handleEvent(SystemManager.EVENT_PROPOSAL_ASSIGNED, fr, null, null)[ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_11 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_11 $$ for (i = 0; i < pnum; i++) -->Line_12 $$ if (i > 0)[ FD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_28 $$ for (i = 0; i < pnum; i++) -->Line_28 $$ for (i = 0; i < pnum; i++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_29 $$ for (j = 0; j < unum; j++) -->Line_29 $$ for (j = 0; j < unum; j++) [ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
Line_45 $$ for (j = 0; j < unum; j++) -->Line_45 $$ for (j = 0; j < unum; j++) [ FD ]
