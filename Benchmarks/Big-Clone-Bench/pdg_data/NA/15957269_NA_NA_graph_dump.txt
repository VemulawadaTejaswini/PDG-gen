Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void read() throws LogicException [ CD ]
Line_5 $$ URL url = file.toURI().toURL()-->Line_5 $$ URL url = file.toURI().toURL()[ CD ]
Line_4 $$ File file = new File(filename)-->Line_5 $$ URL url = file.toURI().toURL()[ FD ]
Line_5 $$ URL url = file.toURI().toURL()-->Line_6 $$ source = new Source(url.openConnection())[ FD ]
Line_2 $$ public void read() throws LogicException -->Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()[ CD ]
Line_2 $$ public void read() throws LogicException -->Line_11 $$ List<Element> elements = source.getChildElements()[ CD ]
Line_11 $$ List<Element> elements = source.getChildElements()-->Line_11 $$ List<Element> elements = source.getChildElements()[ CD ]
Line_13 $$ Segment segment = element.getContent()-->Line_13 $$ Segment segment = element.getContent()[ CD ]
Line_12 $$ for (Element element : elements) -->Line_13 $$ Segment segment = element.getContent()[ FD ]
Line_14 $$ Iterator<Segment> iterator = segment.getNodeIterator()-->Line_14 $$ Iterator<Segment> iterator = segment.getNodeIterator()[ CD ]
Line_13 $$ Segment segment = element.getContent()-->Line_14 $$ Iterator<Segment> iterator = segment.getNodeIterator()[ FD ]
Line_15 $$ while (iterator.hasNext()) -->Line_15 $$ while (iterator.hasNext()) [ CD ]
Line_14 $$ Iterator<Segment> iterator = segment.getNodeIterator()-->Line_15 $$ while (iterator.hasNext()) [ FD ]
Line_15 $$ while (iterator.hasNext()) -->Line_16 $$ Segment current = iterator.next()[ CD ]
Line_16 $$ Segment current = iterator.next()-->Line_16 $$ Segment current = iterator.next()[ CD ]
Line_14 $$ Iterator<Segment> iterator = segment.getNodeIterator()-->Line_16 $$ Segment current = iterator.next()[ FD ]
Line_15 $$ while (iterator.hasNext()) -->Line_17 $$ if (isPlainText(current)) [ CD ]
Line_16 $$ Segment current = iterator.next()-->Line_17 $$ if (isPlainText(current)) [ FD ]
Line_17 $$ if (isPlainText(current)) -->Line_17 $$ if (isPlainText(current)) [ CD ]
Line_16 $$ Segment current = iterator.next()-->Line_17 $$ if (isPlainText(current)) [ FD ]
Line_17 $$ if (isPlainText(current)) -->Line_18 $$ segments.add(current)[ CD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_18 $$ segments.add(current)[ FD ]
Line_16 $$ Segment current = iterator.next()-->Line_18 $$ segments.add(current)[ FD ]
Line_2 $$ public void read() throws LogicException -->Line_22 $$ texts.clear()[ CD ]
Line_2 $$ public void read() throws LogicException -->Line_23 $$ sentences.clear()[ CD ]
Line_2 $$ public void read() throws LogicException -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ CD ]
Line_2 $$ public void read() throws LogicException -->Line_2 $$ public void read() throws LogicException [ CD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ CD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ CD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ CD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_25 $$ ArrayList<Segment> group = new ArrayList<Segment>()[ CD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_26 $$ group.add(segments.get(i))[ CD ]
Line_25 $$ ArrayList<Segment> group = new ArrayList<Segment>()-->Line_26 $$ group.add(segments.get(i))[ FD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_26 $$ group.add(segments.get(i))[ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_26 $$ group.add(segments.get(i))[ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) [ CD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ CD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) [ FD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) [ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) [ FD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) [ FD ]
Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) -->Line_28 $$ group.add(segments.get(i + 1))[ CD ]
Line_25 $$ ArrayList<Segment> group = new ArrayList<Segment>()-->Line_28 $$ group.add(segments.get(i + 1))[ FD ]
Line_10 $$ ArrayList<Segment> segments = new ArrayList<Segment>()-->Line_28 $$ group.add(segments.get(i + 1))[ FD ]
Line_27 $$ while (i < (segments.size() - 1) && segments.get(i).getEnd() == segments.get(i + 1).getBegin()) -->Line_29 $$ i++[ CD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_29 $$ i++[ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_31 $$ texts.add(new Text(group, tokenizer))[ CD ]
Line_2 $$ public void read() throws LogicException -->Line_33 $$ ArrayList<Token> tokens = new ArrayList<Token>()[ CD ]
Line_33 $$ ArrayList<Token> tokens = new ArrayList<Token>()-->Line_35 $$ tokens.addAll(text.getTokens())[ FD ]
Line_34 $$ for (Text text : texts) -->Line_35 $$ tokens.addAll(text.getTokens())[ FD ]
Line_2 $$ public void read() throws LogicException -->Line_37 $$ sentences = tokenizer.toSentences(tokens)[ CD ]
Line_33 $$ ArrayList<Token> tokens = new ArrayList<Token>()-->Line_37 $$ sentences = tokenizer.toSentences(tokens)[ FD ]
Line_16 $$ Segment current = iterator.next()-->Line_17 $$ if (isPlainText(current)) [ FD ]
Line_16 $$ Segment current = iterator.next()-->Line_17 $$ if (isPlainText(current)) [ FD ]
Line_16 $$ Segment current = iterator.next()-->Line_18 $$ segments.add(current)[ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_24 $$ for (int i = 0; i < segments.size(); i++) [ FD ]
Line_25 $$ ArrayList<Segment> group = new ArrayList<Segment>()-->Line_26 $$ group.add(segments.get(i))[ FD ]
Line_24 $$ for (int i = 0; i < segments.size(); i++) -->Line_26 $$ group.add(segments.get(i))[ FD ]
