Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException [ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_3 $$ if (source == null)[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_3 $$ if (source == null)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_4 $$ if (!source.exists())[ CD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ if (!source.exists())[ CD ]
Line_4 $$ if (!source.exists())-->Line_4 $$ if (!source.exists())[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_4 $$ if (!source.exists())[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_4 $$ throw new IOException("File does not exist: " + source.getAbsolutePath())[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_5 $$ if (source.length() <= 0)[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_5 $$ if (source.length() <= 0)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_5 $$ throw new IOException("File is empty: " + source.getAbsolutePath())[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_6 $$ if (index < 0)[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_6 $$ if (index < 0)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_7 $$ if (index >= frames_.size())[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_7 $$ if (index >= frames_.size())[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_8 $$ File tmp = new File(Settings.getPropertyString(ConstantKeys.project_dir), "tmp.jpg")[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_11 $$ if (source.getParentFile().compareTo(new File(Settings.getPropertyString(ConstantKeys.project_dir))) == 0 && source.getName().matches("img_[0-9][ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_11 $$ if (source.getParentFile().compareTo(new File(Settings.getPropertyString(ConstantKeys.project_dir))) == 0 && source.getName().matches("img_[0-9][ FD ]
Line_11 $$ if (source.getParentFile().compareTo(new File(Settings.getPropertyString(ConstantKeys.project_dir))) == 0 && source.getName().matches("img_[0-9]-->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ CD ]
Line_11 $$ if (source.getParentFile().compareTo(new File(Settings.getPropertyString(ConstantKeys.project_dir))) == 0 && source.getName().matches("img_[0-9]-->Line_11 $$ if (source.getParentFile().compareTo(new File(Settings.getPropertyString(ConstantKeys.project_dir))) == 0 && source.getName().matches("img_[0-9][ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_13 $$ Frame f = frames_.get(i)[ CD ]
Line_13 $$ Frame f = frames_.get(i)-->Line_13 $$ Frame f = frames_.get(i)[ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_13 $$ Frame f = frames_.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_14 $$ if (f.getFile().compareTo(source) == 0) [ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_14 $$ if (f.getFile().compareTo(source) == 0) [ FD ]
Line_13 $$ Frame f = frames_.get(i)-->Line_14 $$ if (f.getFile().compareTo(source) == 0) [ FD ]
Line_14 $$ if (f.getFile().compareTo(source) == 0) -->Line_15 $$ frames_.remove(i)[ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_15 $$ frames_.remove(i)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_20 $$ source.renameTo(tmp)[ FD ]
Line_8 $$ File tmp = new File(Settings.getPropertyString(ConstantKeys.project_dir), "tmp.jpg")-->Line_20 $$ source.renameTo(tmp)[ FD ]
Line_23 $$ FileChannel inChannel = new FileInputStream(source).getChannel()-->Line_23 $$ FileChannel inChannel = new FileInputStream(source).getChannel()[ CD ]
Line_24 $$ FileChannel outChannel = new FileOutputStream(tmp).getChannel()-->Line_24 $$ FileChannel outChannel = new FileOutputStream(tmp).getChannel()[ CD ]
Line_23 $$ FileChannel inChannel = new FileInputStream(source).getChannel()-->Line_25 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_24 $$ FileChannel outChannel = new FileOutputStream(tmp).getChannel()-->Line_25 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_23 $$ FileChannel inChannel = new FileInputStream(source).getChannel()-->Line_25 $$ inChannel.transferTo(0, inChannel.size(), outChannel)[ FD ]
Line_23 $$ FileChannel inChannel = new FileInputStream(source).getChannel()-->Line_26 $$ if (inChannel != null)[ FD ]
Line_26 $$ if (inChannel != null)-->Line_26 $$ inChannel.close()[ CD ]
Line_23 $$ FileChannel inChannel = new FileInputStream(source).getChannel()-->Line_26 $$ inChannel.close()[ FD ]
Line_24 $$ FileChannel outChannel = new FileOutputStream(tmp).getChannel()-->Line_27 $$ if (outChannel != null)[ FD ]
Line_27 $$ if (outChannel != null)-->Line_27 $$ outChannel.close()[ CD ]
Line_24 $$ FileChannel outChannel = new FileOutputStream(tmp).getChannel()-->Line_27 $$ outChannel.close()[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException [ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ CD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ CD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))[ CD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))[ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))[ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_32 $$ frames_.get(i).moveTo(newFrame)[ CD ]
Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))-->Line_32 $$ frames_.get(i).moveTo(newFrame)[ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_32 $$ frames_.get(i).moveTo(newFrame)[ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_32 $$ frames_.get(i).moveTo(newFrame)[ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_33 $$ frames_.set(i, newFrame)[ CD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_33 $$ frames_.set(i, newFrame)[ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_33 $$ frames_.set(i, newFrame)[ FD ]
Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))-->Line_33 $$ frames_.set(i, newFrame)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_35 $$ File newLocation = new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(index))[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_35 $$ File newLocation = new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(index))[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_36 $$ tmp.renameTo(newLocation)[ CD ]
Line_8 $$ File tmp = new File(Settings.getPropertyString(ConstantKeys.project_dir), "tmp.jpg")-->Line_36 $$ tmp.renameTo(newLocation)[ FD ]
Line_35 $$ File newLocation = new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(index))-->Line_36 $$ tmp.renameTo(newLocation)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_37 $$ Frame f = new Frame(newLocation)[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_38 $$ f.createThumbNail()[ CD ]
Line_13 $$ Frame f = frames_.get(i)-->Line_38 $$ f.createThumbNail()[ FD ]
Line_37 $$ Frame f = new Frame(newLocation)-->Line_38 $$ f.createThumbNail()[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_39 $$ frames_.set(index, f)[ CD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_39 $$ frames_.set(index, f)[ FD ]
Line_13 $$ Frame f = frames_.get(i)-->Line_39 $$ frames_.set(index, f)[ FD ]
Line_37 $$ Frame f = new Frame(newLocation)-->Line_39 $$ frames_.set(index, f)[ FD ]
Line_2 $$ private synchronized Frame insertFrame(int index, File source, INSERT_TYPE type) throws IOException -->Line_40 $$ return f[ CD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_12 $$ for (int i = 0; i < frames_.size(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_13 $$ Frame f = frames_.get(i)[ FD ]
Line_13 $$ Frame f = frames_.get(i)-->Line_14 $$ if (f.getFile().compareTo(source) == 0) [ FD ]
Line_12 $$ for (int i = 0; i < frames_.size(); i++) -->Line_15 $$ frames_.remove(i)[ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) [ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))[ FD ]
Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))-->Line_32 $$ frames_.get(i).moveTo(newFrame)[ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_32 $$ frames_.get(i).moveTo(newFrame)[ FD ]
Line_30 $$ for (int i = frames_.size() - 1; i >= index; i--) -->Line_33 $$ frames_.set(i, newFrame)[ FD ]
Line_31 $$ Frame newFrame = new Frame(new File(Settings.getPropertyString(ConstantKeys.project_dir), formatFileName(i)))-->Line_33 $$ frames_.set(i, newFrame)[ FD ]
