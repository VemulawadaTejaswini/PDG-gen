Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void execute() throws BuildException [ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_3 $$ Project proj = getProject()[ CD ]
Line_3 $$ Project proj = getProject()-->Line_3 $$ Project proj = getProject()[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_4 $$ if (templateFile == null)[ CD ]
Line_2 $$ public void execute() throws BuildException -->Line_5 $$ if (targetFile == null)[ CD ]
Line_9 $$ if (!template.exists())-->Line_9 $$ if (!template.exists())[ CD ]
Line_9 $$ if (!template.exists())-->Line_9 $$ if (!template.exists())[ CD ]
Line_7 $$ File template = new File(templateFile)-->Line_9 $$ if (!template.exists())[ FD ]
Line_7 $$ File template = new File(templateFile)-->Line_9 $$ throw new BuildException("Template file does not exist " + template.toString())[ FD ]
Line_10 $$ if (!template.canRead())-->Line_10 $$ if (!template.canRead())[ CD ]
Line_10 $$ if (!template.canRead())-->Line_10 $$ if (!template.canRead())[ CD ]
Line_7 $$ File template = new File(templateFile)-->Line_10 $$ if (!template.canRead())[ FD ]
Line_7 $$ File template = new File(templateFile)-->Line_10 $$ throw new BuildException("Cannot read template file: " + template.toString())[ FD ]
Line_11 $$ if (((!append) && (!overwrite)) && (!target.exists()))-->Line_11 $$ if (((!append) && (!overwrite)) && (!target.exists()))[ CD ]
Line_8 $$ File target = new File(targetFile)-->Line_11 $$ if (((!append) && (!overwrite)) && (!target.exists()))[ FD ]
Line_8 $$ File target = new File(targetFile)-->Line_11 $$ throw new BuildException("Target file already exists and append and overwrite are false " + target.toString())[ FD ]
Line_12 $$ if (VERBOSE) -->Line_13 $$ System.out.println("ProcessTemplate: tmpl in " + template.toString())[ CD ]
Line_7 $$ File template = new File(templateFile)-->Line_13 $$ System.out.println("ProcessTemplate: tmpl in " + template.toString())[ FD ]
Line_12 $$ if (VERBOSE) -->Line_14 $$ System.out.println("ProcessTemplate: file out " + target.toString())[ CD ]
Line_8 $$ File target = new File(targetFile)-->Line_14 $$ System.out.println("ProcessTemplate: file out " + target.toString())[ FD ]
Line_16 $$ BufferedReader reader = new BufferedReader(new FileReader(template))-->Line_18 $$ parse(reader, writer)[ FD ]
Line_17 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(targetFile, append))-->Line_18 $$ parse(reader, writer)[ FD ]
Line_17 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(targetFile, append))-->Line_19 $$ writer.flush()[ FD ]
Line_17 $$ BufferedWriter writer = new BufferedWriter(new FileWriter(targetFile, append))-->Line_20 $$ writer.close()[ FD ]
Line_22 $$ if (VERBOSE)-->Line_22 $$ e.printStackTrace()[ CD ]
