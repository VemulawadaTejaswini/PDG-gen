Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException [ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ String arg = req.getParameter("file")[ CD ]
Line_3 $$ String arg = req.getParameter("file")-->Line_3 $$ String arg = req.getParameter("file")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_3 $$ String arg = req.getParameter("file")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_4 $$ if (arg == null) [ CD ]
Line_3 $$ String arg = req.getParameter("file")-->Line_4 $$ if (arg == null) [ FD ]
Line_4 $$ if (arg == null) -->Line_5 $$ resp.sendError(404, "Missing 'file' Arg")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_5 $$ resp.sendError(404, "Missing 'file' Arg")[ FD ]
Line_4 $$ if (arg == null) -->Line_6 $$ return[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_8 $$ int mfid = NumberUtils.toInt(arg)[ CD ]
Line_8 $$ int mfid = NumberUtils.toInt(arg)-->Line_8 $$ int mfid = NumberUtils.toInt(arg)[ CD ]
Line_3 $$ String arg = req.getParameter("file")-->Line_8 $$ int mfid = NumberUtils.toInt(arg)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_9 $$ Object sageFile = MediaFileAPI.GetMediaFileForID(mfid)[ CD ]
Line_9 $$ Object sageFile = MediaFileAPI.GetMediaFileForID(mfid)-->Line_9 $$ Object sageFile = MediaFileAPI.GetMediaFileForID(mfid)[ CD ]
Line_8 $$ int mfid = NumberUtils.toInt(arg)-->Line_9 $$ Object sageFile = MediaFileAPI.GetMediaFileForID(mfid)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_10 $$ if (sageFile == null) [ CD ]
Line_9 $$ Object sageFile = MediaFileAPI.GetMediaFileForID(mfid)-->Line_10 $$ if (sageFile == null) [ FD ]
Line_10 $$ if (sageFile == null) -->Line_11 $$ resp.sendError(404, "Sage File not found " + mfid)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_11 $$ resp.sendError(404, "Sage File not found " + mfid)[ FD ]
Line_10 $$ if (sageFile == null) -->Line_12 $$ return[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_14 $$ int seconds = NumberUtils.toInt(req.getParameter("ss"), -1)[ CD ]
Line_14 $$ int seconds = NumberUtils.toInt(req.getParameter("ss"), -1)-->Line_14 $$ int seconds = NumberUtils.toInt(req.getParameter("ss"), -1)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_14 $$ int seconds = NumberUtils.toInt(req.getParameter("ss"), -1)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)[ CD ]
Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)-->Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_16 $$ if (seconds < 0 && offset < 0) [ CD ]
Line_16 $$ if (seconds < 0 && offset < 0) -->Line_17 $$ resp.sendError(501, "Missing 'ss' or 'sb' args")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_17 $$ resp.sendError(501, "Missing 'ss' or 'sb' args")[ FD ]
Line_16 $$ if (seconds < 0 && offset < 0) -->Line_18 $$ return[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_20 $$ int width = NumberUtils.toInt(req.getParameter("w"), 320)[ CD ]
Line_20 $$ int width = NumberUtils.toInt(req.getParameter("w"), 320)-->Line_20 $$ int width = NumberUtils.toInt(req.getParameter("w"), 320)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_20 $$ int width = NumberUtils.toInt(req.getParameter("w"), 320)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_21 $$ int height = NumberUtils.toInt(req.getParameter("h"), 320)[ CD ]
Line_21 $$ int height = NumberUtils.toInt(req.getParameter("h"), 320)-->Line_21 $$ int height = NumberUtils.toInt(req.getParameter("h"), 320)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_21 $$ int height = NumberUtils.toInt(req.getParameter("h"), 320)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_22 $$ File dir = new File(Phoenix.getInstance().getUserCacheDir(), "videothumb/" + mfid)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_23 $$ if (!dir.exists()) [ CD ]
Line_23 $$ if (!dir.exists()) -->Line_23 $$ if (!dir.exists()) [ CD ]
Line_23 $$ if (!dir.exists()) -->Line_23 $$ if (!dir.exists()) [ CD ]
Line_22 $$ File dir = new File(Phoenix.getInstance().getUserCacheDir(), "videothumb/" + mfid)-->Line_23 $$ if (!dir.exists()) [ FD ]
Line_23 $$ if (!dir.exists()) -->Line_24 $$ dir.mkdirs()[ CD ]
Line_22 $$ File dir = new File(Phoenix.getInstance().getUserCacheDir(), "videothumb/" + mfid)-->Line_24 $$ dir.mkdirs()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_26 $$ String prefix = ""[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_27 $$ if (offset > 0) [ CD ]
Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)-->Line_27 $$ if (offset > 0) [ FD ]
Line_27 $$ if (offset > 0) -->Line_28 $$ prefix = "O" + offset[ CD ]
Line_26 $$ String prefix = ""-->Line_28 $$ prefix = "O" + offset[ FD ]
Line_28 $$ prefix = "O" + offset-->Line_28 $$ prefix = "O" + offset[ FD ]
Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)-->Line_28 $$ prefix = "O" + offset[ FD ]
Line_27 $$ if (offset > 0) -->Line_30 $$ prefix = "S" + seconds[ CD ]
Line_26 $$ String prefix = ""-->Line_30 $$ prefix = "S" + seconds[ FD ]
Line_28 $$ prefix = "O" + offset-->Line_30 $$ prefix = "S" + seconds[ FD ]
Line_30 $$ prefix = "S" + seconds-->Line_30 $$ prefix = "S" + seconds[ FD ]
Line_14 $$ int seconds = NumberUtils.toInt(req.getParameter("ss"), -1)-->Line_30 $$ prefix = "S" + seconds[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()[ CD ]
Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()-->Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_33 $$ if (!f.exists()) [ CD ]
Line_33 $$ if (!f.exists()) -->Line_33 $$ if (!f.exists()) [ CD ]
Line_33 $$ if (!f.exists()) -->Line_33 $$ if (!f.exists()) [ CD ]
Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()-->Line_33 $$ if (!f.exists()) [ FD ]
Line_9 $$ Object sageFile = MediaFileAPI.GetMediaFileForID(mfid)-->Line_35 $$ generateThumbnailNew(sageFile, f, seconds, offset, width, height)[ FD ]
Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()-->Line_35 $$ generateThumbnailNew(sageFile, f, seconds, offset, width, height)[ FD ]
Line_14 $$ int seconds = NumberUtils.toInt(req.getParameter("ss"), -1)-->Line_35 $$ generateThumbnailNew(sageFile, f, seconds, offset, width, height)[ FD ]
Line_15 $$ long offset = NumberUtils.toLong(req.getParameter("sb"), -1)-->Line_35 $$ generateThumbnailNew(sageFile, f, seconds, offset, width, height)[ FD ]
Line_20 $$ int width = NumberUtils.toInt(req.getParameter("w"), 320)-->Line_35 $$ generateThumbnailNew(sageFile, f, seconds, offset, width, height)[ FD ]
Line_21 $$ int height = NumberUtils.toInt(req.getParameter("h"), 320)-->Line_35 $$ generateThumbnailNew(sageFile, f, seconds, offset, width, height)[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_38 $$ resp.sendError(503, "Failed to generate thumbnail\n " + e.getMessage())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_42 $$ if (!f.exists()) [ CD ]
Line_42 $$ if (!f.exists()) -->Line_42 $$ if (!f.exists()) [ CD ]
Line_42 $$ if (!f.exists()) -->Line_42 $$ if (!f.exists()) [ CD ]
Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()-->Line_42 $$ if (!f.exists()) [ FD ]
Line_42 $$ if (!f.exists()) -->Line_43 $$ resp.sendError(404, "Missing File: " + f)[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_43 $$ resp.sendError(404, "Missing File: " + f)[ FD ]
Line_42 $$ if (!f.exists()) -->Line_44 $$ return[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_46 $$ resp.setContentType("image/jpeg")[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_46 $$ resp.setContentType("image/jpeg")[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_47 $$ resp.setContentLength((int) f.length())[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_47 $$ resp.setContentLength((int) f.length())[ FD ]
Line_32 $$ File f = new File(dir, prefix + "_" + width + "_" + height + ".jpg").getCanonicalFile()-->Line_47 $$ resp.setContentLength((int) f.length())[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_48 $$ FileInputStream fis = null[ CD ]
Line_48 $$ FileInputStream fis = null-->Line_50 $$ fis = new FileInputStream(f)[ FD ]
Line_50 $$ fis = new FileInputStream(f)-->Line_50 $$ fis = new FileInputStream(f)[ FD ]
Line_51 $$ OutputStream os = resp.getOutputStream()-->Line_51 $$ OutputStream os = resp.getOutputStream()[ CD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_51 $$ OutputStream os = resp.getOutputStream()[ FD ]
Line_48 $$ FileInputStream fis = null-->Line_52 $$ IOUtils.copyLarge(fis, os)[ FD ]
Line_50 $$ fis = new FileInputStream(f)-->Line_52 $$ IOUtils.copyLarge(fis, os)[ FD ]
Line_51 $$ OutputStream os = resp.getOutputStream()-->Line_52 $$ IOUtils.copyLarge(fis, os)[ FD ]
Line_51 $$ OutputStream os = resp.getOutputStream()-->Line_53 $$ os.flush()[ FD ]
Line_48 $$ FileInputStream fis = null-->Line_54 $$ fis.close()[ FD ]
Line_50 $$ fis = new FileInputStream(f)-->Line_54 $$ fis.close()[ FD ]
Line_2 $$ protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException -->Line_57 $$ resp.sendError(500, "Failed to get file " + f)[ FD ]
Line_48 $$ FileInputStream fis = null-->Line_59 $$ IOUtils.closeQuietly(fis)[ FD ]
Line_50 $$ fis = new FileInputStream(f)-->Line_59 $$ IOUtils.closeQuietly(fis)[ FD ]
