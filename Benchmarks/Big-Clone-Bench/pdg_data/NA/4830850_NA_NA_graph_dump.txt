Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException [ CD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_3 $$ final Connection connection = this.getConnection()[ CD ]
Line_3 $$ final Connection connection = this.getConnection()-->Line_3 $$ final Connection connection = this.getConnection()[ CD ]
Line_3 $$ final Connection connection = this.getConnection()-->Line_5 $$ connection.setAutoCommit(false)[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_7 $$ if (contextName != null) [ FD ]
Line_7 $$ if (contextName != null) -->Line_8 $$ queryString = queryString + " context_name LIKE ? AND "[ CD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_8 $$ queryString = queryString + " context_name LIKE ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_8 $$ queryString = queryString + " context_name LIKE ? AND "[ FD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_8 $$ queryString = queryString + " context_name LIKE ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_8 $$ queryString = queryString + " context_name LIKE ? AND "[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_10 $$ if (path != null) [ FD ]
Line_10 $$ if (path != null) -->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ CD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ FD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_11 $$ queryString = queryString + " path LIKE ? AND "[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_13 $$ if (dateFrom != null) [ FD ]
Line_13 $$ if (dateFrom != null) -->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ CD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_16 $$ if (dateTo != null) [ FD ]
Line_16 $$ if (dateTo != null) -->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ CD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "-->Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "[ FD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ CD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)-->Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)[ FD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ CD ]
Line_3 $$ final Connection connection = this.getConnection()-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_6 $$ String queryString = "DELETE " + this.getHardDiskInvocationsSchemaAndTableName() + " FROM " + this.getHardDiskInvocationsSchemaAndTableName() + " INNER JOIN " + this.getHardDiskElementsSchemaAndTableName() + " ON " + this.getHardDiskElementsSchemaAndTableName() + ".element_id =  " + this.getHardDiskInvocationsSchemaAndTableName() + ".element_id WHERE "-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_8 $$ queryString = queryString + " context_name LIKE ? AND "-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_11 $$ queryString = queryString + " path LIKE ? AND "-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_14 $$ queryString = queryString + " start_timestamp >= ? AND "-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_17 $$ queryString = queryString + " start_timestamp <= ? AND "-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_19 $$ queryString = DefaultDatabaseHandler.removeOrphanWhereAndAndFromSelect(queryString)-->Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_22 $$ if (contextName != null) [ FD ]
Line_22 $$ if (contextName != null) -->Line_23 $$ preparedStatement.setString(indexCounter, contextName)[ CD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_23 $$ preparedStatement.setString(indexCounter, contextName)[ FD ]
Line_21 $$ int indexCounter = 1-->Line_23 $$ preparedStatement.setString(indexCounter, contextName)[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_23 $$ preparedStatement.setString(indexCounter, contextName)[ FD ]
Line_22 $$ if (contextName != null) -->Line_24 $$ indexCounter = indexCounter + 1[ CD ]
Line_21 $$ int indexCounter = 1-->Line_24 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_24 $$ indexCounter = indexCounter + 1[ FD ]
Line_21 $$ int indexCounter = 1-->Line_24 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_24 $$ indexCounter = indexCounter + 1[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_26 $$ if (path != null) [ FD ]
Line_26 $$ if (path != null) -->Line_27 $$ preparedStatement.setString(indexCounter, path)[ CD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_27 $$ preparedStatement.setString(indexCounter, path)[ FD ]
Line_21 $$ int indexCounter = 1-->Line_27 $$ preparedStatement.setString(indexCounter, path)[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_27 $$ preparedStatement.setString(indexCounter, path)[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_27 $$ preparedStatement.setString(indexCounter, path)[ FD ]
Line_26 $$ if (path != null) -->Line_28 $$ indexCounter = indexCounter + 1[ CD ]
Line_21 $$ int indexCounter = 1-->Line_28 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_28 $$ indexCounter = indexCounter + 1[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_28 $$ indexCounter = indexCounter + 1[ FD ]
Line_21 $$ int indexCounter = 1-->Line_28 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_28 $$ indexCounter = indexCounter + 1[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_28 $$ indexCounter = indexCounter + 1[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_30 $$ if (dateFrom != null) [ FD ]
Line_30 $$ if (dateFrom != null) -->Line_31 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateFrom.getTime()))[ CD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_31 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateFrom.getTime()))[ FD ]
Line_21 $$ int indexCounter = 1-->Line_31 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateFrom.getTime()))[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_31 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateFrom.getTime()))[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_31 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateFrom.getTime()))[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_31 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateFrom.getTime()))[ FD ]
Line_30 $$ if (dateFrom != null) -->Line_32 $$ indexCounter = indexCounter + 1[ CD ]
Line_21 $$ int indexCounter = 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_32 $$ indexCounter = indexCounter + 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_21 $$ int indexCounter = 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_32 $$ indexCounter = indexCounter + 1-->Line_32 $$ indexCounter = indexCounter + 1[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_34 $$ if (dateTo != null) [ FD ]
Line_34 $$ if (dateTo != null) -->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ CD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ FD ]
Line_21 $$ int indexCounter = 1-->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ FD ]
Line_32 $$ indexCounter = indexCounter + 1-->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ FD ]
Line_2 $$ public synchronized void deleteHardDiskStatistics(String contextName, String path, Date dateFrom, Date dateTo) throws DatabaseException -->Line_35 $$ preparedStatement.setTimestamp(indexCounter, new Timestamp(dateTo.getTime()))[ FD ]
Line_34 $$ if (dateTo != null) -->Line_36 $$ indexCounter = indexCounter + 1[ CD ]
Line_21 $$ int indexCounter = 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_32 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_36 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_21 $$ int indexCounter = 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_24 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_28 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_32 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_36 $$ indexCounter = indexCounter + 1-->Line_36 $$ indexCounter = indexCounter + 1[ FD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_38 $$ preparedStatement.executeUpdate()[ FD ]
Line_20 $$ final PreparedStatement preparedStatement = DebugPreparedStatement.prepareStatement(connection, queryString)-->Line_39 $$ preparedStatement.close()[ FD ]
Line_3 $$ final Connection connection = this.getConnection()-->Line_40 $$ connection.commit()[ FD ]
Line_3 $$ final Connection connection = this.getConnection()-->Line_43 $$ connection.rollback()[ FD ]
Line_3 $$ final Connection connection = this.getConnection()-->Line_50 $$ this.releaseConnection(connection)[ FD ]
