Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception [ CD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_3 $$ final java.io.FileReader reader = new java.io.FileReader(chkFile)[ CD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_4 $$ final File encryptedChkFile = new File(member.createOutputFileName(outputPath, "chk"))[ CD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_4 $$ final File encryptedChkFile = new File(member.createOutputFileName(outputPath, "chk"))[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_5 $$ FileOutputStream outfile = null[ CD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_6 $$ ObjectOutputStream outstream = null[ CD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_7 $$ Utilities.discardBooleanResult(encryptedChkFile.getParentFile().mkdirs())[ CD ]
Line_4 $$ final File encryptedChkFile = new File(member.createOutputFileName(outputPath, "chk"))-->Line_7 $$ Utilities.discardBooleanResult(encryptedChkFile.getParentFile().mkdirs())[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_8 $$ outfile = new FileOutputStream(encryptedChkFile)[ CD ]
Line_5 $$ FileOutputStream outfile = null-->Line_8 $$ outfile = new FileOutputStream(encryptedChkFile)[ FD ]
Line_8 $$ outfile = new FileOutputStream(encryptedChkFile)-->Line_8 $$ outfile = new FileOutputStream(encryptedChkFile)[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_9 $$ outstream = new ObjectOutputStream(outfile)[ CD ]
Line_6 $$ ObjectOutputStream outstream = null-->Line_9 $$ outstream = new ObjectOutputStream(outfile)[ FD ]
Line_9 $$ outstream = new ObjectOutputStream(outfile)-->Line_9 $$ outstream = new ObjectOutputStream(outfile)[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_10 $$ outstream.writeObject(new Format().parse(reader))[ CD ]
Line_6 $$ ObjectOutputStream outstream = null-->Line_10 $$ outstream.writeObject(new Format().parse(reader))[ FD ]
Line_9 $$ outstream = new ObjectOutputStream(outfile)-->Line_10 $$ outstream.writeObject(new Format().parse(reader))[ FD ]
Line_3 $$ final java.io.FileReader reader = new java.io.FileReader(chkFile)-->Line_10 $$ outstream.writeObject(new Format().parse(reader))[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_11 $$ reader.close()[ CD ]
Line_3 $$ final java.io.FileReader reader = new java.io.FileReader(chkFile)-->Line_11 $$ reader.close()[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_12 $$ outfile.close()[ CD ]
Line_5 $$ FileOutputStream outfile = null-->Line_12 $$ outfile.close()[ FD ]
Line_8 $$ outfile = new FileOutputStream(encryptedChkFile)-->Line_12 $$ outfile.close()[ FD ]
Line_2 $$ private void encryptChkFile(ProjectMember member, File chkFile) throws Exception -->Line_13 $$ outstream.close()[ CD ]
Line_6 $$ ObjectOutputStream outstream = null-->Line_13 $$ outstream.close()[ FD ]
Line_9 $$ outstream = new ObjectOutputStream(outfile)-->Line_13 $$ outstream.close()[ FD ]
