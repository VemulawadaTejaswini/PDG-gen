Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ if (args.length < 2) [ CD ]
Line_3 $$ if (args.length < 2) -->Line_4 $$ System.out.println("Usage: <target URI> <no of requests>")[ CD ]
Line_3 $$ if (args.length < 2) -->Line_5 $$ System.exit(-1)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ URI targetURI = new URI(args[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int n = Integer.parseInt(args[1])[ CD ]
Line_8 $$ int n = Integer.parseInt(args[1])-->Line_8 $$ int n = Integer.parseInt(args[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ URL url = targetURI.toURL()[ CD ]
Line_9 $$ URL url = targetURI.toURL()-->Line_9 $$ URL url = targetURI.toURL()[ CD ]
Line_7 $$ URI targetURI = new URI(args[0])-->Line_9 $$ URL url = targetURI.toURL()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ byte[] buffer = new byte[4096][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ long startTime[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ long finishTime[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ int successCount = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ int failureCount = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ String serverName = "unknown"[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ long total = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ long contentLen = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ long totalContentLen = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_19 $$ startTime = System.currentTimeMillis()[ CD ]
Line_11 $$ long startTime-->Line_19 $$ startTime = System.currentTimeMillis()[ FD ]
Line_19 $$ startTime = System.currentTimeMillis()-->Line_19 $$ startTime = System.currentTimeMillis()[ FD ]
Line_19 $$ startTime = System.currentTimeMillis()-->Line_19 $$ startTime = System.currentTimeMillis()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_8 $$ int n = Integer.parseInt(args[1])-->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ CD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ CD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()[ CD ]
Line_9 $$ URL url = targetURI.toURL()-->Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()[ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_22 $$ c.connect()[ CD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_22 $$ c.connect()[ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_23 $$ InputStream instream = c.getInputStream()[ CD ]
Line_23 $$ InputStream instream = c.getInputStream()-->Line_23 $$ InputStream instream = c.getInputStream()[ CD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_23 $$ InputStream instream = c.getInputStream()[ FD ]
Line_25 $$ contentLen = 0-->Line_25 $$ contentLen = 0[ FD ]
Line_17 $$ long contentLen = 0-->Line_25 $$ contentLen = 0[ FD ]
Line_23 $$ InputStream instream = c.getInputStream()-->Line_26 $$ if (instream != null) [ FD ]
Line_26 $$ if (instream != null) -->Line_27 $$ int l = 0[ CD ]
Line_26 $$ if (instream != null) -->Line_28 $$ while ((l = instream.read(buffer)) != -1) [ CD ]
Line_26 $$ if (instream != null) -->Line_26 $$ if (instream != null) [ CD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_28 $$ while ((l = instream.read(buffer)) != -1) [ FD ]
Line_27 $$ int l = 0-->Line_28 $$ while ((l = instream.read(buffer)) != -1) [ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_28 $$ while ((l = instream.read(buffer)) != -1) [ CD ]
Line_23 $$ InputStream instream = c.getInputStream()-->Line_28 $$ while ((l = instream.read(buffer)) != -1) [ FD ]
Line_10 $$ byte[] buffer = new byte[4096]-->Line_28 $$ while ((l = instream.read(buffer)) != -1) [ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_29 $$ total += l[ CD ]
Line_29 $$ total += l-->Line_29 $$ total += l[ FD ]
Line_16 $$ long total = 0-->Line_29 $$ total += l[ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_29 $$ total += l[ FD ]
Line_27 $$ int l = 0-->Line_29 $$ total += l[ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_30 $$ contentLen += l[ CD ]
Line_30 $$ contentLen += l-->Line_30 $$ contentLen += l[ FD ]
Line_25 $$ contentLen = 0-->Line_30 $$ contentLen += l[ FD ]
Line_17 $$ long contentLen = 0-->Line_30 $$ contentLen += l[ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_30 $$ contentLen += l[ FD ]
Line_27 $$ int l = 0-->Line_30 $$ contentLen += l[ FD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_33 $$ if (c.getResponseCode() == 200) [ FD ]
Line_33 $$ if (c.getResponseCode() == 200) -->Line_34 $$ successCount++[ CD ]
Line_13 $$ int successCount = 0-->Line_34 $$ successCount++[ FD ]
Line_33 $$ if (c.getResponseCode() == 200) -->Line_36 $$ failureCount++[ CD ]
Line_14 $$ int failureCount = 0-->Line_36 $$ failureCount++[ FD ]
Line_38 $$ totalContentLen += contentLen-->Line_38 $$ totalContentLen += contentLen[ FD ]
Line_18 $$ long totalContentLen = 0-->Line_38 $$ totalContentLen += contentLen[ FD ]
Line_30 $$ contentLen += l-->Line_38 $$ totalContentLen += contentLen[ FD ]
Line_25 $$ contentLen = 0-->Line_38 $$ totalContentLen += contentLen[ FD ]
Line_17 $$ long contentLen = 0-->Line_38 $$ totalContentLen += contentLen[ FD ]
Line_14 $$ int failureCount = 0-->Line_40 $$ failureCount++[ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_42 $$ String s = c.getHeaderField("Server")[ CD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_42 $$ String s = c.getHeaderField("Server")[ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_43 $$ if (s != null) [ CD ]
Line_43 $$ if (s != null) -->Line_44 $$ serverName = s[ CD ]
Line_44 $$ serverName = s-->Line_44 $$ serverName = s[ FD ]
Line_15 $$ String serverName = "unknown"-->Line_44 $$ serverName = s[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_47 $$ finishTime = System.currentTimeMillis()[ CD ]
Line_12 $$ long finishTime-->Line_47 $$ finishTime = System.currentTimeMillis()[ FD ]
Line_47 $$ finishTime = System.currentTimeMillis()-->Line_47 $$ finishTime = System.currentTimeMillis()[ FD ]
Line_47 $$ finishTime = System.currentTimeMillis()-->Line_47 $$ finishTime = System.currentTimeMillis()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_48 $$ float totalTimeSec = (float) (finishTime - startTime) / 1000[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_49 $$ float reqsPerSec = (float) successCount / totalTimeSec[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_50 $$ float timePerReqMs = (float) (finishTime - startTime) / (float) successCount[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_51 $$ System.out.print("Server Software:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_52 $$ System.out.println(serverName)[ CD ]
Line_44 $$ serverName = s-->Line_52 $$ System.out.println(serverName)[ FD ]
Line_15 $$ String serverName = "unknown"-->Line_52 $$ System.out.println(serverName)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_53 $$ System.out.println()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_54 $$ System.out.print("Document URI:\t\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_55 $$ System.out.println(targetURI)[ CD ]
Line_7 $$ URI targetURI = new URI(args[0])-->Line_55 $$ System.out.println(targetURI)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_56 $$ System.out.print("Document Length:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_57 $$ System.out.print(contentLen)[ CD ]
Line_30 $$ contentLen += l-->Line_57 $$ System.out.print(contentLen)[ FD ]
Line_25 $$ contentLen = 0-->Line_57 $$ System.out.print(contentLen)[ FD ]
Line_17 $$ long contentLen = 0-->Line_57 $$ System.out.print(contentLen)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_58 $$ System.out.println(" bytes")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_59 $$ System.out.println()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_60 $$ System.out.print("Time taken for tests:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_61 $$ System.out.print(totalTimeSec)[ CD ]
Line_48 $$ float totalTimeSec = (float) (finishTime - startTime) / 1000-->Line_61 $$ System.out.print(totalTimeSec)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_62 $$ System.out.println(" seconds")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_63 $$ System.out.print("Complete requests:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_64 $$ System.out.println(successCount)[ CD ]
Line_13 $$ int successCount = 0-->Line_64 $$ System.out.println(successCount)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_65 $$ System.out.print("Failed requests:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_66 $$ System.out.println(failureCount)[ CD ]
Line_14 $$ int failureCount = 0-->Line_66 $$ System.out.println(failureCount)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_67 $$ System.out.print("Content transferred:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_68 $$ System.out.print(total)[ CD ]
Line_29 $$ total += l-->Line_68 $$ System.out.print(total)[ FD ]
Line_16 $$ long total = 0-->Line_68 $$ System.out.print(total)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_69 $$ System.out.println(" bytes")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_70 $$ System.out.print("Requests per second:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_71 $$ System.out.print(reqsPerSec)[ CD ]
Line_49 $$ float reqsPerSec = (float) successCount / totalTimeSec-->Line_71 $$ System.out.print(reqsPerSec)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_72 $$ System.out.println(" [#/sec] (mean)")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_73 $$ System.out.print("Time per request:\t")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_74 $$ System.out.print(timePerReqMs)[ CD ]
Line_50 $$ float timePerReqMs = (float) (finishTime - startTime) / (float) successCount-->Line_74 $$ System.out.print(timePerReqMs)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_75 $$ System.out.println(" [ms] (mean)")[ CD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_20 $$ for (int i = 0; i < n; i++) -->Line_20 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_22 $$ c.connect()[ FD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_23 $$ InputStream instream = c.getInputStream()[ FD ]
Line_23 $$ InputStream instream = c.getInputStream()-->Line_26 $$ if (instream != null) [ FD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_33 $$ if (c.getResponseCode() == 200) [ FD ]
Line_25 $$ contentLen = 0-->Line_38 $$ totalContentLen += contentLen[ FD ]
Line_21 $$ HttpURLConnection c = (HttpURLConnection) url.openConnection()-->Line_42 $$ String s = c.getHeaderField("Server")[ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_29 $$ total += l[ FD ]
Line_28 $$ while ((l = instream.read(buffer)) != -1) -->Line_30 $$ contentLen += l[ FD ]
