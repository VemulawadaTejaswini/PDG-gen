Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException [ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_3 $$ if (!clazz.isPrimitive()) [ CD ]
Line_3 $$ if (!clazz.isPrimitive()) -->Line_3 $$ if (!clazz.isPrimitive()) [ CD ]
Line_3 $$ if (!clazz.isPrimitive()) -->Line_3 $$ if (!clazz.isPrimitive()) [ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_3 $$ if (!clazz.isPrimitive()) [ FD ]
Line_3 $$ if (!clazz.isPrimitive()) -->Line_4 $$ ClassLoader cl = clazz.getClassLoader()[ CD ]
Line_4 $$ ClassLoader cl = clazz.getClassLoader()-->Line_4 $$ ClassLoader cl = clazz.getClassLoader()[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_4 $$ ClassLoader cl = clazz.getClassLoader()[ FD ]
Line_3 $$ if (!clazz.isPrimitive()) -->Line_5 $$ if (cl == loader) [ CD ]
Line_4 $$ ClassLoader cl = clazz.getClassLoader()-->Line_5 $$ if (cl == loader) [ FD ]
Line_5 $$ if (cl == loader) -->Line_6 $$ if (clazz.isArray())[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_6 $$ if (clazz.isArray())[ FD ]
Line_6 $$ if (clazz.isArray())-->Line_6 $$ if (clazz.isArray())[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_6 $$ if (clazz.isArray())[ FD ]
Line_6 $$ if (clazz.isArray())-->Line_6 $$ return checkTypeChange(getArrayType(clazz), buildDir, refFile)[ CD ]
Line_6 $$ return checkTypeChange(getArrayType(clazz), buildDir, refFile)-->Line_6 $$ return checkTypeChange(getArrayType(clazz), buildDir, refFile)[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_6 $$ return checkTypeChange(getArrayType(clazz), buildDir, refFile)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_6 $$ return checkTypeChange(getArrayType(clazz), buildDir, refFile)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_6 $$ return checkTypeChange(getArrayType(clazz), buildDir, refFile)[ FD ]
Line_5 $$ if (cl == loader) -->Line_7 $$ String path = clazz.getName().replace('.', File.separatorChar) + ".class"[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_7 $$ String path = clazz.getName().replace('.', File.separatorChar) + ".class"[ FD ]
Line_5 $$ if (cl == loader) -->Line_8 $$ File file = new File(buildDir, path)[ CD ]
Line_5 $$ if (cl == loader) -->Line_9 $$ long lastMod = Long.MAX_VALUE[ CD ]
Line_5 $$ if (cl == loader) -->Line_10 $$ if (!file.exists()) [ CD ]
Line_10 $$ if (!file.exists()) -->Line_10 $$ if (!file.exists()) [ CD ]
Line_10 $$ if (!file.exists()) -->Line_10 $$ if (!file.exists()) [ CD ]
Line_8 $$ File file = new File(buildDir, path)-->Line_10 $$ if (!file.exists()) [ FD ]
Line_10 $$ if (!file.exists()) -->Line_11 $$ URL url = cl.getResource(path)[ CD ]
Line_11 $$ URL url = cl.getResource(path)-->Line_11 $$ URL url = cl.getResource(path)[ CD ]
Line_4 $$ ClassLoader cl = clazz.getClassLoader()-->Line_11 $$ URL url = cl.getResource(path)[ FD ]
Line_7 $$ String path = clazz.getName().replace('.', File.separatorChar) + ".class"-->Line_11 $$ URL url = cl.getResource(path)[ FD ]
Line_10 $$ if (!file.exists()) -->Line_12 $$ if (url == null)[ CD ]
Line_11 $$ URL url = cl.getResource(path)-->Line_12 $$ if (url == null)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_12 $$ throw new MojoExecutionException("Can't get URL for webservice class '" + clazz.getName() + "' from jar file.")[ FD ]
Line_11 $$ URL url = cl.getResource(path)-->Line_14 $$ JarURLConnection con = (JarURLConnection) url.openConnection()[ FD ]
Line_9 $$ long lastMod = Long.MAX_VALUE-->Line_15 $$ lastMod = con.getJarEntry().getTime()[ FD ]
Line_15 $$ lastMod = con.getJarEntry().getTime()-->Line_15 $$ lastMod = con.getJarEntry().getTime()[ FD ]
Line_15 $$ lastMod = con.getJarEntry().getTime()-->Line_15 $$ lastMod = con.getJarEntry().getTime()[ CD ]
Line_14 $$ JarURLConnection con = (JarURLConnection) url.openConnection()-->Line_15 $$ lastMod = con.getJarEntry().getTime()[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_17 $$ throw new MojoExecutionException("Can't get modification time for webservice class '" + clazz.getName() + "' from jar file.")[ FD ]
Line_10 $$ if (!file.exists()) -->Line_21 $$ lastMod = file.lastModified()[ CD ]
Line_9 $$ long lastMod = Long.MAX_VALUE-->Line_21 $$ lastMod = file.lastModified()[ FD ]
Line_15 $$ lastMod = con.getJarEntry().getTime()-->Line_21 $$ lastMod = file.lastModified()[ FD ]
Line_21 $$ lastMod = file.lastModified()-->Line_21 $$ lastMod = file.lastModified()[ FD ]
Line_21 $$ lastMod = file.lastModified()-->Line_21 $$ lastMod = file.lastModified()[ CD ]
Line_8 $$ File file = new File(buildDir, path)-->Line_21 $$ lastMod = file.lastModified()[ FD ]
Line_5 $$ if (cl == loader) -->Line_23 $$ if (refFile.lastModified() < lastMod)[ CD ]
Line_9 $$ long lastMod = Long.MAX_VALUE-->Line_23 $$ if (refFile.lastModified() < lastMod)[ FD ]
Line_15 $$ lastMod = con.getJarEntry().getTime()-->Line_23 $$ if (refFile.lastModified() < lastMod)[ FD ]
Line_21 $$ lastMod = file.lastModified()-->Line_23 $$ if (refFile.lastModified() < lastMod)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_23 $$ if (refFile.lastModified() < lastMod)[ FD ]
Line_23 $$ if (refFile.lastModified() < lastMod)-->Line_23 $$ return true[ CD ]
Line_5 $$ if (cl == loader) -->Line_24 $$ if (clazz.isInterface()) [ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_24 $$ if (clazz.isInterface()) [ FD ]
Line_24 $$ if (clazz.isInterface()) -->Line_24 $$ if (clazz.isInterface()) [ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_24 $$ if (clazz.isInterface()) [ FD ]
Line_24 $$ if (clazz.isInterface()) -->Line_25 $$ Class<?>[] itfs = clazz.getInterfaces()[ CD ]
Line_25 $$ Class<?>[] itfs = clazz.getInterfaces()-->Line_25 $$ Class<?>[] itfs = clazz.getInterfaces()[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_25 $$ Class<?>[] itfs = clazz.getInterfaces()[ FD ]
Line_24 $$ if (clazz.isInterface()) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ CD ]
Line_24 $$ if (clazz.isInterface()) -->Line_24 $$ if (clazz.isInterface()) [ CD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ CD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ CD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ FD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_27 $$ boolean changed = checkTypeChange(itfs[i], buildDir, refFile)[ CD ]
Line_27 $$ boolean changed = checkTypeChange(itfs[i], buildDir, refFile)-->Line_27 $$ boolean changed = checkTypeChange(itfs[i], buildDir, refFile)[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_27 $$ boolean changed = checkTypeChange(itfs[i], buildDir, refFile)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_27 $$ boolean changed = checkTypeChange(itfs[i], buildDir, refFile)[ FD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_28 $$ if (changed)[ CD ]
Line_28 $$ if (changed)-->Line_28 $$ return true[ CD ]
Line_24 $$ if (clazz.isInterface()) -->Line_31 $$ Class<?> sup = clazz.getSuperclass()[ CD ]
Line_31 $$ Class<?> sup = clazz.getSuperclass()-->Line_31 $$ Class<?> sup = clazz.getSuperclass()[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_31 $$ Class<?> sup = clazz.getSuperclass()[ FD ]
Line_24 $$ if (clazz.isInterface()) -->Line_32 $$ boolean changed = checkTypeChange(sup, buildDir, refFile)[ CD ]
Line_32 $$ boolean changed = checkTypeChange(sup, buildDir, refFile)-->Line_32 $$ boolean changed = checkTypeChange(sup, buildDir, refFile)[ CD ]
Line_31 $$ Class<?> sup = clazz.getSuperclass()-->Line_32 $$ boolean changed = checkTypeChange(sup, buildDir, refFile)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_32 $$ boolean changed = checkTypeChange(sup, buildDir, refFile)[ FD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_32 $$ boolean changed = checkTypeChange(sup, buildDir, refFile)[ FD ]
Line_24 $$ if (clazz.isInterface()) -->Line_33 $$ if (changed)[ CD ]
Line_33 $$ if (changed)-->Line_33 $$ return true[ CD ]
Line_2 $$ public boolean checkTypeChange(Class<?> clazz, File buildDir, File refFile) throws MojoExecutionException -->Line_37 $$ return false[ CD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ FD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ FD ]
Line_26 $$ for (int i = 0; i < itfs.length; i++) -->Line_26 $$ for (int i = 0; i < itfs.length; i++) [ FD ]
