Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static File copyFileAs(String path, String newName) [ CD ]
Line_2 $$ public static File copyFileAs(String path, String newName) -->Line_3 $$ File src = new File(path)[ CD ]
Line_2 $$ public static File copyFileAs(String path, String newName) -->Line_4 $$ File dest = new File(newName)[ CD ]
Line_6 $$ if (!dest.exists()) -->Line_6 $$ if (!dest.exists()) [ CD ]
Line_6 $$ if (!dest.exists()) -->Line_6 $$ if (!dest.exists()) [ CD ]
Line_4 $$ File dest = new File(newName)-->Line_6 $$ if (!dest.exists()) [ FD ]
Line_6 $$ if (!dest.exists()) -->Line_7 $$ dest.createNewFile()[ CD ]
Line_4 $$ File dest = new File(newName)-->Line_7 $$ dest.createNewFile()[ FD ]
Line_9 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_9 $$ FileChannel source = new FileInputStream(src).getChannel()[ CD ]
Line_10 $$ FileChannel destination = new FileOutputStream(dest).getChannel()-->Line_10 $$ FileChannel destination = new FileOutputStream(dest).getChannel()[ CD ]
Line_10 $$ FileChannel destination = new FileOutputStream(dest).getChannel()-->Line_11 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_9 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_11 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_9 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_11 $$ destination.transferFrom(source, 0, source.size())[ FD ]
Line_9 $$ FileChannel source = new FileInputStream(src).getChannel()-->Line_12 $$ source.close()[ FD ]
Line_10 $$ FileChannel destination = new FileOutputStream(dest).getChannel()-->Line_13 $$ destination.close()[ FD ]
Line_2 $$ public static File copyFileAs(String path, String newName) -->Line_19 $$ return dest[ CD ]
