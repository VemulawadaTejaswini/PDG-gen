Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private boolean doDelete(String identifier) throws IOException, MalformedURLException [ CD ]
Line_2 $$ private boolean doDelete(String identifier) throws IOException, MalformedURLException -->Line_3 $$ URL url = new URL(baseurl.toString() + "/" + identifier)[ CD ]
Line_2 $$ private boolean doDelete(String identifier) throws IOException, MalformedURLException -->Line_4 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())[ CD ]
Line_3 $$ URL url = new URL(baseurl.toString() + "/" + identifier)-->Line_4 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())[ FD ]
Line_2 $$ private boolean doDelete(String identifier) throws IOException, MalformedURLException -->Line_5 $$ huc.setRequestMethod("DELETE")[ CD ]
Line_4 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())-->Line_5 $$ huc.setRequestMethod("DELETE")[ FD ]
Line_2 $$ private boolean doDelete(String identifier) throws IOException, MalformedURLException -->Line_6 $$ huc.connect()[ CD ]
Line_4 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())-->Line_6 $$ huc.connect()[ FD ]
Line_2 $$ private boolean doDelete(String identifier) throws IOException, MalformedURLException -->Line_7 $$ if (huc.getResponseCode() == 200) [ CD ]
Line_4 $$ HttpURLConnection huc = (HttpURLConnection) (url.openConnection())-->Line_7 $$ if (huc.getResponseCode() == 200) [ FD ]
Line_7 $$ if (huc.getResponseCode() == 200) -->Line_8 $$ return true[ CD ]
Line_7 $$ if (huc.getResponseCode() == 200) -->Line_9 $$ return false[ CD ]
