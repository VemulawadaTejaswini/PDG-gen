Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception [ CD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_3 $$ InputStream inputStream = null[ CD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_4 $$ BufferedReader bufferedReader = null[ CD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_5 $$ DataInputStream input = null[ CD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_6 $$ StringBuffer sBuf = new StringBuffer()[ CD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_7 $$ Proxy proxy[ CD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_8 $$ if (httpWebProxyServer != null && Integer.toString(httpWebProxyPort) != null) [ CD ]
Line_8 $$ if (httpWebProxyServer != null && Integer.toString(httpWebProxyPort) != null) -->Line_9 $$ SocketAddress address = new InetSocketAddress(httpWebProxyServer, httpWebProxyPort)[ CD ]
Line_8 $$ if (httpWebProxyServer != null && Integer.toString(httpWebProxyPort) != null) -->Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)[ CD ]
Line_7 $$ Proxy proxy-->Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)[ FD ]
Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)-->Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)[ FD ]
Line_8 $$ if (httpWebProxyServer != null && Integer.toString(httpWebProxyPort) != null) -->Line_12 $$ proxy = null[ CD ]
Line_7 $$ Proxy proxy-->Line_12 $$ proxy = null[ FD ]
Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)-->Line_12 $$ proxy = null[ FD ]
Line_12 $$ proxy = null-->Line_12 $$ proxy = null[ FD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_14 $$ proxy = null[ CD ]
Line_7 $$ Proxy proxy-->Line_14 $$ proxy = null[ FD ]
Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)-->Line_14 $$ proxy = null[ FD ]
Line_12 $$ proxy = null-->Line_14 $$ proxy = null[ FD ]
Line_14 $$ proxy = null-->Line_14 $$ proxy = null[ FD ]
Line_2 $$ public String getScenarioData(String urlForSalesData) throws IOException, Exception -->Line_15 $$ URL url[ CD ]
Line_15 $$ URL url-->Line_17 $$ url = new URL(urlForSalesData)[ FD ]
Line_17 $$ url = new URL(urlForSalesData)-->Line_17 $$ url = new URL(urlForSalesData)[ FD ]
Line_7 $$ Proxy proxy-->Line_19 $$ if (proxy != null)[ FD ]
Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)-->Line_19 $$ if (proxy != null)[ FD ]
Line_12 $$ proxy = null-->Line_19 $$ if (proxy != null)[ FD ]
Line_14 $$ proxy = null-->Line_19 $$ if (proxy != null)[ FD ]
Line_19 $$ if (proxy != null)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ CD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_15 $$ URL url-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_17 $$ url = new URL(urlForSalesData)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_7 $$ Proxy proxy-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_10 $$ proxy = new Proxy(Proxy.Type.HTTP, address)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_12 $$ proxy = null-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_14 $$ proxy = null-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)[ FD ]
Line_19 $$ if (proxy != null)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()[ CD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_15 $$ URL url-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_17 $$ url = new URL(urlForSalesData)-->Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_20 $$ httpUrlConnection.setDoInput(true)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_20 $$ httpUrlConnection.setDoInput(true)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_20 $$ httpUrlConnection.setDoInput(true)[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_21 $$ httpUrlConnection.setRequestMethod("GET")[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_21 $$ httpUrlConnection.setRequestMethod("GET")[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_21 $$ httpUrlConnection.setRequestMethod("GET")[ FD ]
Line_22 $$ String name = rb.getString("WRAP_NAME")-->Line_22 $$ String name = rb.getString("WRAP_NAME")[ CD ]
Line_23 $$ String password = rb.getString("WRAP_PASSWORD")-->Line_23 $$ String password = rb.getString("WRAP_PASSWORD")[ CD ]
Line_27 $$ String appliesTo1 = rb.getString("SIMPLEAPI_APPLIES_TO")-->Line_27 $$ String appliesTo1 = rb.getString("SIMPLEAPI_APPLIES_TO")[ CD ]
Line_28 $$ String token = tokenProvider.getACSToken(requestUriStr1, appliesTo1)-->Line_28 $$ String token = tokenProvider.getACSToken(requestUriStr1, appliesTo1)[ CD ]
Line_25 $$ ACSTokenProvider tokenProvider = new ACSTokenProvider(httpWebProxyServer, httpWebProxyPort, simpleAuthCrentials)-->Line_28 $$ String token = tokenProvider.getACSToken(requestUriStr1, appliesTo1)[ FD ]
Line_26 $$ String requestUriStr1 = "https://" + solutionName + "." + acmHostName + "/" + serviceName-->Line_28 $$ String token = tokenProvider.getACSToken(requestUriStr1, appliesTo1)[ FD ]
Line_27 $$ String appliesTo1 = rb.getString("SIMPLEAPI_APPLIES_TO")-->Line_28 $$ String token = tokenProvider.getACSToken(requestUriStr1, appliesTo1)[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_29 $$ httpUrlConnection.addRequestProperty("token", "WRAPv0.9 " + token)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_29 $$ httpUrlConnection.addRequestProperty("token", "WRAPv0.9 " + token)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_29 $$ httpUrlConnection.addRequestProperty("token", "WRAPv0.9 " + token)[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_30 $$ httpUrlConnection.addRequestProperty("solutionName", solutionName)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_30 $$ httpUrlConnection.addRequestProperty("solutionName", solutionName)[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_30 $$ httpUrlConnection.addRequestProperty("solutionName", solutionName)[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_31 $$ httpUrlConnection.connect()[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_31 $$ httpUrlConnection.connect()[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_31 $$ httpUrlConnection.connect()[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) [ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) [ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) [ FD ]
Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) -->Line_33 $$ List<TestSalesOrderService> salesOrderServiceBean = new ArrayList<TestSalesOrderService>()[ CD ]
Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) -->Line_34 $$ TestSalesOrderService response = new TestSalesOrderService()[ CD ]
Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) -->Line_35 $$ response.setResponseCode(HttpServletResponse.SC_UNAUTHORIZED)[ CD ]
Line_34 $$ TestSalesOrderService response = new TestSalesOrderService()-->Line_35 $$ response.setResponseCode(HttpServletResponse.SC_UNAUTHORIZED)[ FD ]
Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) -->Line_36 $$ response.setResponseMessage(httpUrlConnection.getResponseMessage())[ CD ]
Line_34 $$ TestSalesOrderService response = new TestSalesOrderService()-->Line_36 $$ response.setResponseMessage(httpUrlConnection.getResponseMessage())[ FD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_36 $$ response.setResponseMessage(httpUrlConnection.getResponseMessage())[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_36 $$ response.setResponseMessage(httpUrlConnection.getResponseMessage())[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_36 $$ response.setResponseMessage(httpUrlConnection.getResponseMessage())[ FD ]
Line_32 $$ if (httpUrlConnection.getResponseCode() == HttpServletResponse.SC_UNAUTHORIZED) -->Line_37 $$ salesOrderServiceBean.add(response)[ CD ]
Line_33 $$ List<TestSalesOrderService> salesOrderServiceBean = new ArrayList<TestSalesOrderService>()-->Line_37 $$ salesOrderServiceBean.add(response)[ FD ]
Line_34 $$ TestSalesOrderService response = new TestSalesOrderService()-->Line_37 $$ salesOrderServiceBean.add(response)[ FD ]
Line_3 $$ InputStream inputStream = null-->Line_39 $$ inputStream = httpUrlConnection.getInputStream()[ FD ]
Line_39 $$ inputStream = httpUrlConnection.getInputStream()-->Line_39 $$ inputStream = httpUrlConnection.getInputStream()[ FD ]
Line_39 $$ inputStream = httpUrlConnection.getInputStream()-->Line_39 $$ inputStream = httpUrlConnection.getInputStream()[ CD ]
Line_18 $$ HttpURLConnection httpUrlConnection-->Line_39 $$ inputStream = httpUrlConnection.getInputStream()[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection(proxy)-->Line_39 $$ inputStream = httpUrlConnection.getInputStream()[ FD ]
Line_19 $$ httpUrlConnection = (HttpURLConnection) url.openConnection()-->Line_39 $$ inputStream = httpUrlConnection.getInputStream()[ FD ]
Line_5 $$ DataInputStream input = null-->Line_40 $$ input = new DataInputStream(inputStream)[ FD ]
Line_40 $$ input = new DataInputStream(inputStream)-->Line_40 $$ input = new DataInputStream(inputStream)[ FD ]
Line_4 $$ BufferedReader bufferedReader = null-->Line_41 $$ bufferedReader = new BufferedReader(new InputStreamReader(input))[ FD ]
Line_41 $$ bufferedReader = new BufferedReader(new InputStreamReader(input))-->Line_41 $$ bufferedReader = new BufferedReader(new InputStreamReader(input))[ FD ]
Line_43 $$ while (null != ((str = bufferedReader.readLine()))) -->Line_43 $$ while (null != ((str = bufferedReader.readLine()))) [ FD ]
Line_42 $$ String str-->Line_43 $$ while (null != ((str = bufferedReader.readLine()))) [ FD ]
Line_43 $$ while (null != ((str = bufferedReader.readLine()))) -->Line_43 $$ while (null != ((str = bufferedReader.readLine()))) [ CD ]
Line_4 $$ BufferedReader bufferedReader = null-->Line_43 $$ while (null != ((str = bufferedReader.readLine()))) [ FD ]
Line_41 $$ bufferedReader = new BufferedReader(new InputStreamReader(input))-->Line_43 $$ while (null != ((str = bufferedReader.readLine()))) [ FD ]
Line_43 $$ while (null != ((str = bufferedReader.readLine()))) -->Line_44 $$ sBuf.append(str)[ CD ]
Line_6 $$ StringBuffer sBuf = new StringBuffer()-->Line_44 $$ sBuf.append(str)[ FD ]
Line_43 $$ while (null != ((str = bufferedReader.readLine()))) -->Line_44 $$ sBuf.append(str)[ FD ]
Line_42 $$ String str-->Line_44 $$ sBuf.append(str)[ FD ]
Line_46 $$ String responseString = sBuf.toString()-->Line_46 $$ String responseString = sBuf.toString()[ CD ]
Line_6 $$ StringBuffer sBuf = new StringBuffer()-->Line_46 $$ String responseString = sBuf.toString()[ FD ]
Line_43 $$ while (null != ((str = bufferedReader.readLine()))) -->Line_44 $$ sBuf.append(str)[ FD ]
