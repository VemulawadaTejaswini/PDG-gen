Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException [ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_3 $$ if (parent.isFetched()) [ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_3 $$ if (parent.isFetched()) [ FD ]
Line_3 $$ if (parent.isFetched()) -->Line_3 $$ if (parent.isFetched()) [ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_3 $$ if (parent.isFetched()) [ FD ]
Line_3 $$ if (parent.isFetched()) -->Line_4 $$ return parent.getChildren()[ CD ]
Line_4 $$ return parent.getChildren()-->Line_4 $$ return parent.getChildren()[ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_4 $$ return parent.getChildren()[ FD ]
Line_3 $$ if (parent.isFetched()) -->Line_5 $$ if (!"d".equals(parent.getType())) [ CD ]
Line_5 $$ if (!"d".equals(parent.getType())) -->Line_5 $$ if (!"d".equals(parent.getType())) [ CD ]
Line_5 $$ if (!"d".equals(parent.getType())) -->Line_5 $$ if (!"d".equals(parent.getType())) [ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_5 $$ if (!"d".equals(parent.getType())) [ FD ]
Line_5 $$ if (!"d".equals(parent.getType())) -->Line_6 $$ return null[ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_8 $$ HttpClient client = HttpConfig.newInstance()[ CD ]
Line_8 $$ HttpClient client = HttpConfig.newInstance()-->Line_8 $$ HttpClient client = HttpConfig.newInstance()[ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_9 $$ HttpGet get = new HttpGet(HttpConfig.bbsURL() + HttpConfig.BBS_0AN + parent.getPath())[ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_9 $$ HttpGet get = new HttpGet(HttpConfig.bbsURL() + HttpConfig.BBS_0AN + parent.getPath())[ FD ]
Line_11 $$ HttpResponse response = client.execute(get)-->Line_11 $$ HttpResponse response = client.execute(get)[ CD ]
Line_8 $$ HttpClient client = HttpConfig.newInstance()-->Line_11 $$ HttpResponse response = client.execute(get)[ FD ]
Line_9 $$ HttpGet get = new HttpGet(HttpConfig.bbsURL() + HttpConfig.BBS_0AN + parent.getPath())-->Line_11 $$ HttpResponse response = client.execute(get)[ FD ]
Line_12 $$ HttpEntity entity = response.getEntity()-->Line_12 $$ HttpEntity entity = response.getEntity()[ CD ]
Line_11 $$ HttpResponse response = client.execute(get)-->Line_12 $$ HttpEntity entity = response.getEntity()[ FD ]
Line_13 $$ Document doc = XmlOperator.readDocument(entity.getContent())-->Line_13 $$ Document doc = XmlOperator.readDocument(entity.getContent())[ CD ]
Line_12 $$ HttpEntity entity = response.getEntity()-->Line_13 $$ Document doc = XmlOperator.readDocument(entity.getContent())[ FD ]
Line_13 $$ Document doc = XmlOperator.readDocument(entity.getContent())-->Line_14 $$ BBSBodyParseHelper.parsePathList(doc, parent)[ FD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_14 $$ BBSBodyParseHelper.parsePathList(doc, parent)[ FD ]
Line_15 $$ return parent.getChildren()-->Line_15 $$ return parent.getChildren()[ CD ]
Line_2 $$ public List<PathObject> fetchPath(PathObject parent) throws NetworkException -->Line_15 $$ return parent.getChildren()[ FD ]
