Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) [ CD ]
Line_2 $$ private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) -->Line_3 $$ jButton1.setEnabled(false)[ CD ]
Line_2 $$ private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) -->Line_4 $$ for (int i = 0; i < max; i++) [ CD ]
Line_2 $$ private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) -->Line_2 $$ private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) [ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_4 $$ for (int i = 0; i < max; i++) [ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_4 $$ for (int i = 0; i < max; i++) [ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_4 $$ for (int i = 0; i < max; i++) [ FD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])[ CD ]
Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])-->Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])[ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_6 $$ String s, s2[ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_7 $$ s = ""[ CD ]
Line_6 $$ String s, s2-->Line_7 $$ s = ""[ FD ]
Line_7 $$ s = ""-->Line_7 $$ s = ""[ FD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_8 $$ s2 = ""[ CD ]
Line_6 $$ String s, s2-->Line_8 $$ s2 = ""[ FD ]
Line_8 $$ s2 = ""-->Line_8 $$ s2 = ""[ FD ]
Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])-->Line_10 $$ URL url = new URL("http://www.m-w.com/dictionary/" + crd.getWord())[ FD ]
Line_10 $$ URL url = new URL("http://www.m-w.com/dictionary/" + crd.getWord())-->Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_13 $$ while ((str = in.readLine()) != null) [ FD ]
Line_12 $$ String str-->Line_13 $$ while ((str = in.readLine()) != null) [ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_13 $$ while ((str = in.readLine()) != null) [ CD ]
Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_13 $$ while ((str = in.readLine()) != null) [ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_14 $$ s = s + str[ CD ]
Line_14 $$ s = s + str-->Line_14 $$ s = s + str[ FD ]
Line_6 $$ String s, s2-->Line_14 $$ s = s + str[ FD ]
Line_7 $$ s = ""-->Line_14 $$ s = s + str[ FD ]
Line_14 $$ s = s + str-->Line_14 $$ s = s + str[ FD ]
Line_6 $$ String s, s2-->Line_14 $$ s = s + str[ FD ]
Line_7 $$ s = ""-->Line_14 $$ s = s + str[ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_14 $$ s = s + str[ FD ]
Line_12 $$ String str-->Line_14 $$ s = s + str[ FD ]
Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_16 $$ in.close()[ FD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_20 $$ Pattern pattern = Pattern.compile("popWin\\('/cgi-bin/(.+?)'", Pattern.CASE_INSENSITIVE | Pattern.DOTALL)[ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_21 $$ Matcher matcher = pattern.matcher(s)[ CD ]
Line_14 $$ s = s + str-->Line_21 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_6 $$ String s, s2-->Line_21 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_7 $$ s = ""-->Line_21 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_22 $$ if (matcher.find()) [ CD ]
Line_22 $$ if (matcher.find()) -->Line_22 $$ if (matcher.find()) [ CD ]
Line_28 $$ while ((str = in2.readLine()) != null) -->Line_28 $$ while ((str = in2.readLine()) != null) [ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_28 $$ while ((str = in2.readLine()) != null) [ FD ]
Line_12 $$ String str-->Line_28 $$ while ((str = in2.readLine()) != null) [ FD ]
Line_28 $$ while ((str = in2.readLine()) != null) -->Line_28 $$ while ((str = in2.readLine()) != null) [ CD ]
Line_28 $$ while ((str = in2.readLine()) != null) -->Line_29 $$ s2 = s2 + str[ CD ]
Line_29 $$ s2 = s2 + str-->Line_29 $$ s2 = s2 + str[ FD ]
Line_6 $$ String s, s2-->Line_29 $$ s2 = s2 + str[ FD ]
Line_8 $$ s2 = ""-->Line_29 $$ s2 = s2 + str[ FD ]
Line_29 $$ s2 = s2 + str-->Line_29 $$ s2 = s2 + str[ FD ]
Line_6 $$ String s, s2-->Line_29 $$ s2 = s2 + str[ FD ]
Line_8 $$ s2 = ""-->Line_29 $$ s2 = s2 + str[ FD ]
Line_28 $$ while ((str = in2.readLine()) != null) -->Line_29 $$ s2 = s2 + str[ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_29 $$ s2 = s2 + str[ FD ]
Line_12 $$ String str-->Line_29 $$ s2 = s2 + str[ FD ]
Line_22 $$ if (matcher.find()) -->Line_35 $$ Pattern pattern2 = Pattern.compile("<A HREF=\"http://(.+?)\">Click here to listen with your default audio player", Pattern.CASE_INSENSITIVE | Pattern.DOTALL)[ CD ]
Line_22 $$ if (matcher.find()) -->Line_36 $$ Matcher matcher2 = pattern2.matcher(s2)[ CD ]
Line_29 $$ s2 = s2 + str-->Line_36 $$ Matcher matcher2 = pattern2.matcher(s2)[ FD ]
Line_6 $$ String s, s2-->Line_36 $$ Matcher matcher2 = pattern2.matcher(s2)[ FD ]
Line_8 $$ s2 = ""-->Line_36 $$ Matcher matcher2 = pattern2.matcher(s2)[ FD ]
Line_22 $$ if (matcher.find()) -->Line_37 $$ if (matcher2.find()) [ CD ]
Line_37 $$ if (matcher2.find()) -->Line_37 $$ if (matcher2.find()) [ CD ]
Line_37 $$ if (matcher2.find()) -->Line_38 $$ getWave("http://" + matcher2.group(1), crd.getWord())[ CD ]
Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])-->Line_38 $$ getWave("http://" + matcher2.group(1), crd.getWord())[ FD ]
Line_22 $$ if (matcher.find()) -->Line_40 $$ int val = jProgressBar1.getValue()[ CD ]
Line_22 $$ if (matcher.find()) -->Line_42 $$ jProgressBar1.setValue(val)[ CD ]
Line_22 $$ if (matcher.find()) -->Line_43 $$ this.paintAll(this.getGraphics())[ CD ]
Line_2 $$ private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) -->Line_46 $$ jButton1.setEnabled(true)[ CD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_4 $$ for (int i = 0; i < max; i++) [ FD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_4 $$ for (int i = 0; i < max; i++) [ FD ]
Line_4 $$ for (int i = 0; i < max; i++) -->Line_4 $$ for (int i = 0; i < max; i++) [ FD ]
Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])-->Line_10 $$ URL url = new URL("http://www.m-w.com/dictionary/" + crd.getWord())[ FD ]
Line_10 $$ URL url = new URL("http://www.m-w.com/dictionary/" + crd.getWord())-->Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_11 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_16 $$ in.close()[ FD ]
Line_6 $$ String s, s2-->Line_21 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_7 $$ s = ""-->Line_21 $$ Matcher matcher = pattern.matcher(s)[ FD ]
Line_6 $$ String s, s2-->Line_36 $$ Matcher matcher2 = pattern2.matcher(s2)[ FD ]
Line_8 $$ s2 = ""-->Line_36 $$ Matcher matcher2 = pattern2.matcher(s2)[ FD ]
Line_5 $$ Card crd = WLP.getSelectedCard(WLP.jTable1.getSelectedRows()[i])-->Line_38 $$ getWave("http://" + matcher2.group(1), crd.getWord())[ FD ]
Line_14 $$ s = s + str-->Line_14 $$ s = s + str[ FD ]
Line_13 $$ while ((str = in.readLine()) != null) -->Line_14 $$ s = s + str[ FD ]
Line_29 $$ s2 = s2 + str-->Line_29 $$ s2 = s2 + str[ FD ]
Line_28 $$ while ((str = in2.readLine()) != null) -->Line_29 $$ s2 = s2 + str[ FD ]
