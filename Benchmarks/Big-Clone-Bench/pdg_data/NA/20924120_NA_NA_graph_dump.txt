Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void gunzip() throws Exception [ CD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_3 $$ System.out.println("gunzip()")[ CD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_4 $$ GZIPInputStream zipin = new GZIPInputStream(new FileInputStream("/zip/myzip.gz"))[ CD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_5 $$ byte buffer[] = new byte[BLOCKSIZE][ CD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_6 $$ FileOutputStream out = new FileOutputStream("/zip/covers")[ CD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)[ CD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_2 $$ public static void gunzip() throws Exception [ CD ]
Line_4 $$ GZIPInputStream zipin = new GZIPInputStream(new FileInputStream("/zip/myzip.gz"))-->Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)[ FD ]
Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)-->Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)[ CD ]
Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)-->Line_7 $$ out.write(buffer, 0, length)[ CD ]
Line_6 $$ FileOutputStream out = new FileOutputStream("/zip/covers")-->Line_7 $$ out.write(buffer, 0, length)[ FD ]
Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)-->Line_7 $$ out.write(buffer, 0, length)[ FD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_8 $$ out.close()[ CD ]
Line_6 $$ FileOutputStream out = new FileOutputStream("/zip/covers")-->Line_8 $$ out.close()[ FD ]
Line_2 $$ public static void gunzip() throws Exception -->Line_9 $$ zipin.close()[ CD ]
Line_4 $$ GZIPInputStream zipin = new GZIPInputStream(new FileInputStream("/zip/myzip.gz"))-->Line_9 $$ zipin.close()[ FD ]
Line_7 $$ for (int length; (length = zipin.read(buffer, 0, BLOCKSIZE)) != -1; ) out.write(buffer, 0, length)-->Line_7 $$ out.write(buffer, 0, length)[ FD ]
