Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ InputStreamReader in = null[ CD ]
Line_2 $$ public void run() -->Line_4 $$ OutputStreamWriter out = null[ CD ]
Line_2 $$ public void run() -->Line_5 $$ URL url = null[ CD ]
Line_2 $$ public void run() -->Line_6 $$ File net_file = null[ CD ]
Line_2 $$ public void run() -->Line_7 $$ long in_length = 0[ CD ]
Line_2 $$ public void run() -->Line_8 $$ progress_bar.setValue(0)[ CD ]
Line_2 $$ public void run() -->Line_9 $$ progress_bar.setString("connecting!")[ CD ]
Line_2 $$ public void run() -->Line_10 $$ progress_bar.setStringPainted(true)[ CD ]
Line_2 $$ public void run() -->Line_11 $$ if (sync_host_path_name.length() > 0) [ CD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_15 $$ url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name)[ CD ]
Line_5 $$ URL url = null-->Line_15 $$ url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name)[ FD ]
Line_15 $$ url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name)-->Line_15 $$ url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name)[ FD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_16 $$ URLConnection connection = url.openConnection()[ CD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_16 $$ URLConnection connection = url.openConnection()[ CD ]
Line_5 $$ URL url = null-->Line_16 $$ URLConnection connection = url.openConnection()[ FD ]
Line_15 $$ url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name)-->Line_16 $$ URLConnection connection = url.openConnection()[ FD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_17 $$ in = new InputStreamReader(connection.getInputStream())[ CD ]
Line_3 $$ InputStreamReader in = null-->Line_17 $$ in = new InputStreamReader(connection.getInputStream())[ FD ]
Line_17 $$ in = new InputStreamReader(connection.getInputStream())-->Line_17 $$ in = new InputStreamReader(connection.getInputStream())[ FD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_17 $$ in = new InputStreamReader(connection.getInputStream())[ FD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_18 $$ in_length = connection.getContentLength()[ CD ]
Line_7 $$ long in_length = 0-->Line_18 $$ in_length = connection.getContentLength()[ FD ]
Line_18 $$ in_length = connection.getContentLength()-->Line_18 $$ in_length = connection.getContentLength()[ FD ]
Line_18 $$ in_length = connection.getContentLength()-->Line_18 $$ in_length = connection.getContentLength()[ CD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_18 $$ in_length = connection.getContentLength()[ FD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_20 $$ net_file = new File(sync_host_path_name)[ CD ]
Line_6 $$ File net_file = null-->Line_20 $$ net_file = new File(sync_host_path_name)[ FD ]
Line_20 $$ net_file = new File(sync_host_path_name)-->Line_20 $$ net_file = new File(sync_host_path_name)[ FD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")[ CD ]
Line_3 $$ InputStreamReader in = null-->Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")[ FD ]
Line_17 $$ in = new InputStreamReader(connection.getInputStream())-->Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")[ FD ]
Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")-->Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")[ FD ]
Line_14 $$ if (protocol == Settings.protFTP) -->Line_22 $$ in_length = net_file.length()[ CD ]
Line_7 $$ long in_length = 0-->Line_22 $$ in_length = net_file.length()[ FD ]
Line_18 $$ in_length = connection.getContentLength()-->Line_22 $$ in_length = net_file.length()[ FD ]
Line_22 $$ in_length = net_file.length()-->Line_22 $$ in_length = net_file.length()[ FD ]
Line_22 $$ in_length = net_file.length()-->Line_22 $$ in_length = net_file.length()[ CD ]
Line_6 $$ File net_file = null-->Line_22 $$ in_length = net_file.length()[ FD ]
Line_20 $$ net_file = new File(sync_host_path_name)-->Line_22 $$ in_length = net_file.length()[ FD ]
Line_3 $$ InputStreamReader in = null-->Line_25 $$ EventMemory.get_instance(null).import_vCalendar(in, Math.max(in_length, 1), true, progress_bar)[ FD ]
Line_17 $$ in = new InputStreamReader(connection.getInputStream())-->Line_25 $$ EventMemory.get_instance(null).import_vCalendar(in, Math.max(in_length, 1), true, progress_bar)[ FD ]
Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")-->Line_25 $$ EventMemory.get_instance(null).import_vCalendar(in, Math.max(in_length, 1), true, progress_bar)[ FD ]
Line_7 $$ long in_length = 0-->Line_25 $$ EventMemory.get_instance(null).import_vCalendar(in, Math.max(in_length, 1), true, progress_bar)[ FD ]
Line_18 $$ in_length = connection.getContentLength()-->Line_25 $$ EventMemory.get_instance(null).import_vCalendar(in, Math.max(in_length, 1), true, progress_bar)[ FD ]
Line_22 $$ in_length = net_file.length()-->Line_25 $$ EventMemory.get_instance(null).import_vCalendar(in, Math.max(in_length, 1), true, progress_bar)[ FD ]
Line_3 $$ InputStreamReader in = null-->Line_26 $$ in.close()[ FD ]
Line_17 $$ in = new InputStreamReader(connection.getInputStream())-->Line_26 $$ in.close()[ FD ]
Line_21 $$ in = new InputStreamReader(new FileInputStream(net_file), "US-ASCII")-->Line_26 $$ in.close()[ FD ]
Line_32 $$ if (protocol == Settings.protFTP) -->Line_33 $$ URLConnection connection = url.openConnection()[ CD ]
Line_5 $$ URL url = null-->Line_33 $$ URLConnection connection = url.openConnection()[ FD ]
Line_15 $$ url = new URL("ftp://" + user_name + ":" + password + "@" + sync_host_path_name)-->Line_33 $$ URLConnection connection = url.openConnection()[ FD ]
Line_32 $$ if (protocol == Settings.protFTP) -->Line_34 $$ connection.setDoOutput(true)[ CD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_34 $$ connection.setDoOutput(true)[ FD ]
Line_32 $$ if (protocol == Settings.protFTP) -->Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")[ CD ]
Line_4 $$ OutputStreamWriter out = null-->Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")[ FD ]
Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")-->Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")[ FD ]
Line_16 $$ URLConnection connection = url.openConnection()-->Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")[ FD ]
Line_32 $$ if (protocol == Settings.protFTP) -->Line_36 $$ if (protocol == Settings.protFile) [ CD ]
Line_36 $$ if (protocol == Settings.protFile) -->Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")[ CD ]
Line_4 $$ OutputStreamWriter out = null-->Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")[ FD ]
Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")-->Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")[ FD ]
Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")-->Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")[ FD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_41 $$ for (int k = 0; k < i.length; k++) [ CD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_41 $$ for (int k = 0; k < i.length; k++) [ CD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_41 $$ for (int k = 0; k < i.length; k++) [ FD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_42 $$ i[k] = k[ CD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_42 $$ i[k] = k[ FD ]
Line_4 $$ OutputStreamWriter out = null-->Line_45 $$ EventMemory.get_instance(null).export_vCalendar(out, i, true, progress_bar, true)[ FD ]
Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")-->Line_45 $$ EventMemory.get_instance(null).export_vCalendar(out, i, true, progress_bar, true)[ FD ]
Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")-->Line_45 $$ EventMemory.get_instance(null).export_vCalendar(out, i, true, progress_bar, true)[ FD ]
Line_40 $$ int[] i = new int[EventMemory.get_instance(null).get_size()]-->Line_45 $$ EventMemory.get_instance(null).export_vCalendar(out, i, true, progress_bar, true)[ FD ]
Line_4 $$ OutputStreamWriter out = null-->Line_46 $$ out.close()[ FD ]
Line_35 $$ out = new OutputStreamWriter(connection.getOutputStream(), "US-ASCII")-->Line_46 $$ out.close()[ FD ]
Line_37 $$ out = new OutputStreamWriter(new FileOutputStream(net_file), "US-ASCII")-->Line_46 $$ out.close()[ FD ]
Line_11 $$ if (sync_host_path_name.length() > 0) -->Line_54 $$ progress_bar.setString("enter a valid URL!")[ CD ]
Line_11 $$ if (sync_host_path_name.length() > 0) -->Line_55 $$ sync_dialog.sync_panel.unlock_input()[ CD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_41 $$ for (int k = 0; k < i.length; k++) [ FD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_41 $$ for (int k = 0; k < i.length; k++) [ FD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_41 $$ for (int k = 0; k < i.length; k++) [ FD ]
Line_41 $$ for (int k = 0; k < i.length; k++) -->Line_42 $$ i[k] = k[ FD ]
