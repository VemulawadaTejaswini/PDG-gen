Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException [ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_3 $$ URL url = new URL("http://" + ISO_3166_HOST + ISO_3166_TXT_FILE_PATH)[ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()))[ CD ]
Line_3 $$ URL url = new URL("http://" + ISO_3166_HOST + ISO_3166_TXT_FILE_PATH)-->Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()))[ FD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_5 $$ List<CountryEntry> countries = new LinkedList<CountryEntry>()[ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_6 $$ boolean parsing = false[ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_7 $$ int trCount = 0[ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_8 $$ int tdCount = 0[ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_9 $$ CountryEntry current = new CountryEntry()[ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_10 $$ String nextLine = input.readLine()[ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_10 $$ String nextLine = input.readLine()[ CD ]
Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_10 $$ String nextLine = input.readLine()[ FD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_11 $$ while (nextLine != null) [ CD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_11 $$ while (nextLine != null) [ FD ]
Line_11 $$ while (nextLine != null) -->Line_12 $$ if (nextLine.startsWith("<table")) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_12 $$ if (nextLine.startsWith("<table")) [ FD ]
Line_12 $$ if (nextLine.startsWith("<table")) -->Line_12 $$ if (nextLine.startsWith("<table")) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_12 $$ if (nextLine.startsWith("<table")) [ FD ]
Line_12 $$ if (nextLine.startsWith("<table")) -->Line_13 $$ parsing = true[ CD ]
Line_13 $$ parsing = true-->Line_13 $$ parsing = true[ FD ]
Line_6 $$ boolean parsing = false-->Line_13 $$ parsing = true[ FD ]
Line_11 $$ while (nextLine != null) -->Line_15 $$ if (nextLine.startsWith("</table>")) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_15 $$ if (nextLine.startsWith("</table>")) [ FD ]
Line_15 $$ if (nextLine.startsWith("</table>")) -->Line_15 $$ if (nextLine.startsWith("</table>")) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_15 $$ if (nextLine.startsWith("</table>")) [ FD ]
Line_11 $$ while (nextLine != null) -->Line_18 $$ if (parsing) [ CD ]
Line_18 $$ if (parsing) -->Line_19 $$ if (nextLine.startsWith("<tr")) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_19 $$ if (nextLine.startsWith("<tr")) [ FD ]
Line_19 $$ if (nextLine.startsWith("<tr")) -->Line_19 $$ if (nextLine.startsWith("<tr")) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_19 $$ if (nextLine.startsWith("<tr")) [ FD ]
Line_19 $$ if (nextLine.startsWith("<tr")) -->Line_20 $$ trCount++[ CD ]
Line_7 $$ int trCount = 0-->Line_20 $$ trCount++[ FD ]
Line_19 $$ if (nextLine.startsWith("<tr")) -->Line_22 $$ if ((trCount > 1 && nextLine.startsWith("<td"))) [ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_22 $$ if ((trCount > 1 && nextLine.startsWith("<td"))) [ FD ]
Line_22 $$ if ((trCount > 1 && nextLine.startsWith("<td"))) -->Line_23 $$ tdCount++[ CD ]
Line_8 $$ int tdCount = 0-->Line_23 $$ tdCount++[ FD ]
Line_22 $$ if ((trCount > 1 && nextLine.startsWith("<td"))) -->Line_24 $$ String data = pullData(nextLine)[ CD ]
Line_24 $$ String data = pullData(nextLine)-->Line_24 $$ String data = pullData(nextLine)[ CD ]
Line_10 $$ String nextLine = input.readLine()-->Line_24 $$ String data = pullData(nextLine)[ FD ]
Line_9 $$ CountryEntry current = new CountryEntry()-->Line_27 $$ current.setName(getCountryName(data))[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_27 $$ current.setName(getCountryName(data))[ FD ]
Line_9 $$ CountryEntry current = new CountryEntry()-->Line_30 $$ current.setNumber(data)[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_30 $$ current.setNumber(data)[ FD ]
Line_9 $$ CountryEntry current = new CountryEntry()-->Line_33 $$ current.setAlpha3(data)[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_33 $$ current.setAlpha3(data)[ FD ]
Line_9 $$ CountryEntry current = new CountryEntry()-->Line_36 $$ current.setAlpha2(data)[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_36 $$ current.setAlpha2(data)[ FD ]
Line_5 $$ List<CountryEntry> countries = new LinkedList<CountryEntry>()-->Line_39 $$ countries.add(current)[ FD ]
Line_9 $$ CountryEntry current = new CountryEntry()-->Line_39 $$ countries.add(current)[ FD ]
Line_40 $$ current = new CountryEntry()-->Line_40 $$ current = new CountryEntry()[ FD ]
Line_9 $$ CountryEntry current = new CountryEntry()-->Line_40 $$ current = new CountryEntry()[ FD ]
Line_41 $$ tdCount = 0-->Line_41 $$ tdCount = 0[ FD ]
Line_8 $$ int tdCount = 0-->Line_41 $$ tdCount = 0[ FD ]
Line_11 $$ while (nextLine != null) -->Line_50 $$ nextLine = input.readLine()[ CD ]
Line_50 $$ nextLine = input.readLine()-->Line_50 $$ nextLine = input.readLine()[ FD ]
Line_10 $$ String nextLine = input.readLine()-->Line_50 $$ nextLine = input.readLine()[ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_50 $$ nextLine = input.readLine()[ CD ]
Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_50 $$ nextLine = input.readLine()[ FD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_52 $$ input.close()[ CD ]
Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(url.openStream()))-->Line_52 $$ input.close()[ FD ]
Line_2 $$ private static List<CountryEntry> retrieveCountries() throws IOException -->Line_53 $$ return countries[ CD ]
Line_50 $$ nextLine = input.readLine()-->Line_11 $$ while (nextLine != null) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_11 $$ while (nextLine != null) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_12 $$ if (nextLine.startsWith("<table")) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_12 $$ if (nextLine.startsWith("<table")) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_15 $$ if (nextLine.startsWith("</table>")) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_15 $$ if (nextLine.startsWith("</table>")) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_19 $$ if (nextLine.startsWith("<tr")) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_19 $$ if (nextLine.startsWith("<tr")) [ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_22 $$ if ((trCount > 1 && nextLine.startsWith("<td"))) [ FD ]
Line_41 $$ tdCount = 0-->Line_23 $$ tdCount++[ FD ]
Line_50 $$ nextLine = input.readLine()-->Line_24 $$ String data = pullData(nextLine)[ FD ]
Line_40 $$ current = new CountryEntry()-->Line_27 $$ current.setName(getCountryName(data))[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_27 $$ current.setName(getCountryName(data))[ FD ]
Line_40 $$ current = new CountryEntry()-->Line_30 $$ current.setNumber(data)[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_30 $$ current.setNumber(data)[ FD ]
Line_40 $$ current = new CountryEntry()-->Line_33 $$ current.setAlpha3(data)[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_33 $$ current.setAlpha3(data)[ FD ]
Line_40 $$ current = new CountryEntry()-->Line_36 $$ current.setAlpha2(data)[ FD ]
Line_24 $$ String data = pullData(nextLine)-->Line_36 $$ current.setAlpha2(data)[ FD ]
Line_40 $$ current = new CountryEntry()-->Line_39 $$ countries.add(current)[ FD ]
