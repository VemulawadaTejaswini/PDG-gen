Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException [ CD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_3 $$ if (url == null)[ CD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_3 $$ if (url == null)[ FD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_4 $$ InputStream is = null[ CD ]
Line_4 $$ InputStream is = null-->Line_6 $$ is = url.openStream()[ FD ]
Line_6 $$ is = url.openStream()-->Line_6 $$ is = url.openStream()[ FD ]
Line_6 $$ is = url.openStream()-->Line_6 $$ is = url.openStream()[ CD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_6 $$ is = url.openStream()[ FD ]
Line_7 $$ InputSource source = new InputSource(is)-->Line_8 $$ source.setSystemId(url.toString())[ FD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_8 $$ source.setSystemId(url.toString())[ FD ]
Line_9 $$ return getDocument(source, resolver, validating)-->Line_9 $$ return getDocument(source, resolver, validating)[ CD ]
Line_7 $$ InputSource source = new InputSource(is)-->Line_9 $$ return getDocument(source, resolver, validating)[ FD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_9 $$ return getDocument(source, resolver, validating)[ FD ]
Line_2 $$ public static Document getDocument(URL url, EntityResolver resolver, boolean validating) throws IllegalArgumentException, IOException -->Line_9 $$ return getDocument(source, resolver, validating)[ FD ]
Line_4 $$ InputStream is = null-->Line_12 $$ if (is != null)[ FD ]
Line_6 $$ is = url.openStream()-->Line_12 $$ if (is != null)[ FD ]
Line_12 $$ if (is != null)-->Line_12 $$ is.close()[ CD ]
Line_4 $$ InputStream is = null-->Line_12 $$ is.close()[ FD ]
Line_6 $$ is = url.openStream()-->Line_12 $$ is.close()[ FD ]
