Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException [ CD ]
Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException -->Line_3 $$ if (!targetFile.exists()) [ CD ]
Line_3 $$ if (!targetFile.exists()) -->Line_3 $$ if (!targetFile.exists()) [ CD ]
Line_3 $$ if (!targetFile.exists()) -->Line_3 $$ if (!targetFile.exists()) [ CD ]
Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException -->Line_3 $$ if (!targetFile.exists()) [ FD ]
Line_3 $$ if (!targetFile.exists()) -->Line_4 $$ targetFile.getParentFile().mkdirs()[ CD ]
Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException -->Line_4 $$ targetFile.getParentFile().mkdirs()[ FD ]
Line_6 $$ if (!targetFile.exists()) -->Line_6 $$ if (!targetFile.exists()) [ CD ]
Line_6 $$ if (!targetFile.exists()) -->Line_6 $$ if (!targetFile.exists()) [ CD ]
Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException -->Line_6 $$ if (!targetFile.exists()) [ FD ]
Line_6 $$ if (!targetFile.exists()) -->Line_7 $$ targetFile.createNewFile()[ CD ]
Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException -->Line_7 $$ targetFile.createNewFile()[ FD ]
Line_2 $$ private final void copyTargetFileToSourceFile(File sourceFile, File targetFile) throws MJProcessorException -->Line_13 $$ FileChannel in = null, out = null[ CD ]
Line_13 $$ FileChannel in = null, out = null-->Line_15 $$ in = new FileInputStream(sourceFile).getChannel()[ FD ]
Line_15 $$ in = new FileInputStream(sourceFile).getChannel()-->Line_15 $$ in = new FileInputStream(sourceFile).getChannel()[ FD ]
Line_15 $$ in = new FileInputStream(sourceFile).getChannel()-->Line_15 $$ in = new FileInputStream(sourceFile).getChannel()[ CD ]
Line_13 $$ FileChannel in = null, out = null-->Line_16 $$ out = new FileOutputStream(targetFile).getChannel()[ FD ]
Line_16 $$ out = new FileOutputStream(targetFile).getChannel()-->Line_16 $$ out = new FileOutputStream(targetFile).getChannel()[ FD ]
Line_16 $$ out = new FileOutputStream(targetFile).getChannel()-->Line_16 $$ out = new FileOutputStream(targetFile).getChannel()[ CD ]
Line_17 $$ long size = in.size()-->Line_17 $$ long size = in.size()[ CD ]
Line_13 $$ FileChannel in = null, out = null-->Line_17 $$ long size = in.size()[ FD ]
Line_15 $$ in = new FileInputStream(sourceFile).getChannel()-->Line_17 $$ long size = in.size()[ FD ]
Line_18 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)-->Line_18 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ CD ]
Line_13 $$ FileChannel in = null, out = null-->Line_18 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_15 $$ in = new FileInputStream(sourceFile).getChannel()-->Line_18 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_17 $$ long size = in.size()-->Line_18 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)[ FD ]
Line_13 $$ FileChannel in = null, out = null-->Line_19 $$ out.write(buf)[ FD ]
Line_16 $$ out = new FileOutputStream(targetFile).getChannel()-->Line_19 $$ out.write(buf)[ FD ]
Line_18 $$ MappedByteBuffer buf = in.map(FileChannel.MapMode.READ_ONLY, 0, size)-->Line_19 $$ out.write(buf)[ FD ]
Line_13 $$ FileChannel in = null, out = null-->Line_23 $$ if (in != null)[ FD ]
Line_15 $$ in = new FileInputStream(sourceFile).getChannel()-->Line_23 $$ if (in != null)[ FD ]
Line_13 $$ FileChannel in = null, out = null-->Line_24 $$ in.close()[ FD ]
Line_15 $$ in = new FileInputStream(sourceFile).getChannel()-->Line_24 $$ in.close()[ FD ]
Line_13 $$ FileChannel in = null, out = null-->Line_28 $$ if (out != null)[ FD ]
Line_16 $$ out = new FileOutputStream(targetFile).getChannel()-->Line_28 $$ if (out != null)[ FD ]
Line_13 $$ FileChannel in = null, out = null-->Line_29 $$ out.close()[ FD ]
Line_16 $$ out = new FileOutputStream(targetFile).getChannel()-->Line_29 $$ out.close()[ FD ]
