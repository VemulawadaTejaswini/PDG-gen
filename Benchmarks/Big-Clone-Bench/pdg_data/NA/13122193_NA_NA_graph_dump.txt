Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static void createModelZip(String filename, String tempdir) throws EDITSException [ CD ]
Line_9 $$ File f = new File(tempdir)-->Line_10 $$ for (File fs : f.listFiles()) [ FD ]
Line_10 $$ for (File fs : f.listFiles()) -->Line_11 $$ FileInputStream fi = new FileInputStream(fs.getAbsolutePath())[ FD ]
Line_4 $$ BufferedInputStream origin = null-->Line_12 $$ origin = new BufferedInputStream(fi, BUFFER)[ FD ]
Line_12 $$ origin = new BufferedInputStream(fi, BUFFER)-->Line_12 $$ origin = new BufferedInputStream(fi, BUFFER)[ FD ]
Line_10 $$ for (File fs : f.listFiles()) -->Line_13 $$ ZipEntry entry = new ZipEntry(fs.getName())[ FD ]
Line_6 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_14 $$ out.putNextEntry(entry)[ FD ]
Line_13 $$ ZipEntry entry = new ZipEntry(fs.getName())-->Line_14 $$ out.putNextEntry(entry)[ FD ]
Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)-->Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)[ FD ]
Line_15 $$ int count-->Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)[ FD ]
Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)-->Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)[ CD ]
Line_4 $$ BufferedInputStream origin = null-->Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)[ FD ]
Line_12 $$ origin = new BufferedInputStream(fi, BUFFER)-->Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)[ FD ]
Line_7 $$ int BUFFER = 2048-->Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)[ FD ]
Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)-->Line_16 $$ out.write(data, 0, count)[ CD ]
Line_6 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_16 $$ out.write(data, 0, count)[ FD ]
Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)-->Line_16 $$ out.write(data, 0, count)[ FD ]
Line_15 $$ int count-->Line_16 $$ out.write(data, 0, count)[ FD ]
Line_6 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_17 $$ out.closeEntry()[ FD ]
Line_4 $$ BufferedInputStream origin = null-->Line_18 $$ origin.close()[ FD ]
Line_12 $$ origin = new BufferedInputStream(fi, BUFFER)-->Line_18 $$ origin.close()[ FD ]
Line_6 $$ ZipOutputStream out = new ZipOutputStream(new BufferedOutputStream(dest))-->Line_20 $$ out.close()[ FD ]
Line_16 $$ while ((count = origin.read(data, 0, BUFFER)) != -1) out.write(data, 0, count)-->Line_16 $$ out.write(data, 0, count)[ FD ]
