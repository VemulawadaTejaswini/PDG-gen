Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ protected void setUp() throws Exception [ CD ]
Line_2 $$ protected void setUp() throws Exception -->Line_3 $$ this.testOutputDirectory = new File(getClass().getResource("/").getPath())[ CD ]
Line_2 $$ protected void setUp() throws Exception -->Line_4 $$ this.pluginFile = new File(this.testOutputDirectory, "/plugin.zip")[ CD ]
Line_2 $$ protected void setUp() throws Exception -->Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))[ CD ]
Line_2 $$ protected void setUp() throws Exception -->Line_6 $$ zos.putNextEntry(new ZipEntry("WEB-INF/"))[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_6 $$ zos.putNextEntry(new ZipEntry("WEB-INF/"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_7 $$ zos.putNextEntry(new ZipEntry("WEB-INF/classes/"))[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_7 $$ zos.putNextEntry(new ZipEntry("WEB-INF/classes/"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_8 $$ zos.putNextEntry(new ZipEntry("WEB-INF/classes/system.properties"))[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_8 $$ zos.putNextEntry(new ZipEntry("WEB-INF/classes/system.properties"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_9 $$ System.getProperties().store(zos, null)[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_9 $$ System.getProperties().store(zos, null)[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_10 $$ zos.closeEntry()[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_10 $$ zos.closeEntry()[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_11 $$ zos.putNextEntry(new ZipEntry("WEB-INF/lib/"))[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_11 $$ zos.putNextEntry(new ZipEntry("WEB-INF/lib/"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_12 $$ zos.putNextEntry(new ZipEntry("WEB-INF/lib/plugin.jar"))[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_12 $$ zos.putNextEntry(new ZipEntry("WEB-INF/lib/plugin.jar"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_13 $$ File jarFile = new File(this.testOutputDirectory.getPath() + "/plugin.jar")[ CD ]
Line_2 $$ protected void setUp() throws Exception -->Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))[ CD ]
Line_2 $$ protected void setUp() throws Exception -->Line_15 $$ jos.putNextEntry(new ZipEntry("vqwiki/"))[ CD ]
Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))-->Line_15 $$ jos.putNextEntry(new ZipEntry("vqwiki/"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_16 $$ jos.putNextEntry(new ZipEntry("vqwiki/plugins/"))[ CD ]
Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))-->Line_16 $$ jos.putNextEntry(new ZipEntry("vqwiki/plugins/"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_17 $$ jos.putNextEntry(new ZipEntry("vqwiki/plugins/system.properties"))[ CD ]
Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))-->Line_17 $$ jos.putNextEntry(new ZipEntry("vqwiki/plugins/system.properties"))[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_18 $$ System.getProperties().store(jos, null)[ CD ]
Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))-->Line_18 $$ System.getProperties().store(jos, null)[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_19 $$ jos.closeEntry()[ CD ]
Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))-->Line_19 $$ jos.closeEntry()[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_20 $$ jos.close()[ CD ]
Line_14 $$ JarOutputStream jos = new JarOutputStream(new FileOutputStream(jarFile))-->Line_20 $$ jos.close()[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_21 $$ IOUtils.copy(new FileInputStream(jarFile), zos)[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_21 $$ IOUtils.copy(new FileInputStream(jarFile), zos)[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_22 $$ zos.closeEntry()[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_22 $$ zos.closeEntry()[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_23 $$ zos.close()[ CD ]
Line_5 $$ ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(pluginFile))-->Line_23 $$ zos.close()[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_24 $$ jarFile.delete()[ CD ]
Line_13 $$ File jarFile = new File(this.testOutputDirectory.getPath() + "/plugin.jar")-->Line_24 $$ jarFile.delete()[ FD ]
Line_2 $$ protected void setUp() throws Exception -->Line_26 $$ pcl.addPlugin(pluginFile)[ CD ]
