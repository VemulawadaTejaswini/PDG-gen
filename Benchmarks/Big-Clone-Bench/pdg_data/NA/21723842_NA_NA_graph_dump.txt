Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public void lookingUpResources() throws IOException [ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") [ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_5 $$ return new File("src/test/samples/sticky-deployer-sample-2jar-1.2-sample.jar")[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_8 $$ b.initialise()[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_8 $$ b.initialise()[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_9 $$ assertThat(b.getLibraries()).hasSize(2)[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_9 $$ assertThat(b.getLibraries()).hasSize(2)[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_10 $$ assertThat(b.getLibraries().iterator().next().getClasses()).hasSize(1)[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_10 $$ assertThat(b.getLibraries().iterator().next().getClasses()).hasSize(1)[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_11 $$ assertThat(b.getLibraries().iterator().next().getResources()).hasSize(8)[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_11 $$ assertThat(b.getLibraries().iterator().next().getResources()).hasSize(8)[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_12 $$ URL url = b.getClassLoader().findResource("net/stickycode/deploy/sample/babysteps/run.properties")[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_12 $$ URL url = b.getClassLoader().findResource("net/stickycode/deploy/sample/babysteps/run.properties")[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_13 $$ assertThat(url).isNotNull()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_14 $$ InputStream i = url.openStream()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_15 $$ assertThat(i).isNotNull()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_16 $$ assertThat(new BufferedReader(new InputStreamReader(i)).readLine()).isEqualTo("run=running is step 3")[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_17 $$ Enumeration<URL> e = b.getClassLoader().findResources("net/stickycode/deploy/sample/babysteps/run.properties")[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_17 $$ Enumeration<URL> e = b.getClassLoader().findResources("net/stickycode/deploy/sample/babysteps/run.properties")[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_18 $$ assertThat(e.hasMoreElements()).isTrue()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_19 $$ assertThat(e.nextElement()).isNotNull()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_20 $$ assertThat(e.hasMoreElements()).isFalse()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_21 $$ Enumeration<URL> manifests = b.getClassLoader().findResources("net/stickycode/deploy/sample/duplicate.properties")[ CD ]
Line_3 $$ StickyEmbedder b = new StickyEmbedder("--debug", "--trace") -->Line_21 $$ Enumeration<URL> manifests = b.getClassLoader().findResources("net/stickycode/deploy/sample/duplicate.properties")[ FD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_22 $$ assertThat(manifests.hasMoreElements()).isTrue()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_23 $$ assertThat(manifests.nextElement()).isNotNull()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_24 $$ assertThat(manifests.hasMoreElements()).isTrue()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_25 $$ assertThat(manifests.nextElement()).isNotNull()[ CD ]
Line_2 $$ public void lookingUpResources() throws IOException -->Line_26 $$ assertThat(manifests.hasMoreElements()).isFalse()[ CD ]
