Line_2 $$ public java.io.Serializable getContent() throws org.osid.repository.RepositoryException --> Line_3 $$ logger.logMethod() [CD]
Line_2 $$ public java.io.Serializable getContent() throws org.osid.repository.RepositoryException --> Line_4 $$ if (!this.cached) [CD]
Line_4 $$ if (!this.cached) --> Line_5 $$ logger.logTrace("not cached.. getting content") [CD]
Line_4 $$ if (!this.cached) --> Line_6 $$ Object object = this.asset.getContent() [CD]
Line_4 $$ if (!this.cached) --> Line_7 $$ if (object instanceof String) [CD]
Line_6 $$ Object object = this.asset.getContent() --> Line_7 $$ if (object instanceof String) [FD]
Line_7 $$ if (object instanceof String) --> Line_8 $$ String s = (String) object [CD]
Line_7 $$ if (object instanceof String) --> Line_9 $$ if (s.startsWith("http://")) [CD]
Line_8 $$ String s = (String) object --> Line_9 $$ if (s.startsWith("http://")) [FD]
Line_11 $$ java.net.URL url = new java.net.URL(s) --> Line_12 $$ java.io.InputStream is = url.openStream() [FD]
Line_15 $$ int len --> Line_18 $$ while ((len = is.read(b)) >= 0) [FD]
Line_12 $$ java.io.InputStream is = url.openStream() --> Line_18 $$ while ((len = is.read(b)) >= 0) [FD]
Line_16 $$ byte[] b = new byte[10240] --> Line_18 $$ while ((len = is.read(b)) >= 0) [FD]
Line_18 $$ while ((len = is.read(b)) >= 0) --> Line_19 $$ fos.write(b, 0, len) [CD]
Line_18 $$ while ((len = is.read(b)) >= 0) --> Line_19 $$ fos.write(b, 0, len) [FD]
Line_14 $$ java.io.FileOutputStream fos = new java.io.FileOutputStream(file) --> Line_19 $$ fos.write(b, 0, len) [FD]
Line_16 $$ byte[] b = new byte[10240] --> Line_19 $$ fos.write(b, 0, len) [FD]
Line_15 $$ int len --> Line_19 $$ fos.write(b, 0, len) [FD]
Line_18 $$ while ((len = is.read(b)) >= 0) --> Line_20 $$ this.length += len [CD]
Line_18 $$ while ((len = is.read(b)) >= 0) --> Line_20 $$ this.length += len [FD]
Line_15 $$ int len --> Line_20 $$ this.length += len [FD]
Line_14 $$ java.io.FileOutputStream fos = new java.io.FileOutputStream(file) --> Line_22 $$ fos.close() [FD]
Line_12 $$ java.io.InputStream is = url.openStream() --> Line_23 $$ is.close() [FD]
Line_24 $$ java.net.URLConnection urlc = new java.net.URL(s).openConnection() --> Line_25 $$ this.lastModified = urlc.getLastModified() [FD]
Line_24 $$ java.net.URLConnection urlc = new java.net.URL(s).openConnection() --> Line_26 $$ this.mimeType = urlc.getContentType() [FD]
Line_4 $$ if (!this.cached) --> Line_32 $$ this.cached = true [CD]
Line_4 $$ if (!this.cached) --> Line_34 $$ logger.logTrace("cached..") [CD]
