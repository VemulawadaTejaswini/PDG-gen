Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_3 $$ FTPClient ftp = new FTPClient() [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_4 $$ CofaxToolsUser user = (CofaxToolsUser) session.getAttribute("user") [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_4 $$ CofaxToolsUser user = (CofaxToolsUser) session.getAttribute("user") [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_5 $$ StringBuffer links = new StringBuffer() [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_6 $$ StringBuffer folders = new StringBuffer() [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_7 $$ String folder = "" [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_8 $$ String server = "" [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_9 $$ String login = "" [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_10 $$ String password = "" [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_11 $$ String fileTransferFolder = CofaxToolsServlet.fileTransferFolder [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_12 $$ String liveFolder = "" [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_13 $$ ArrayList servers = new ArrayList() [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_14 $$ StringBuffer message = new StringBuffer() [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_15 $$ message.append("Status:<BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_15 $$ message.append("Status:<BR>") [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_16 $$ if (action.equals("Upload")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_16 $$ if (action.equals("Upload")) [FD]
Line_16 $$ if (action.equals("Upload")) --> Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") [CD]
Line_8 $$ String server = "" --> Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") [FD]
Line_16 $$ if (action.equals("Upload")) --> Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") [CD]
Line_9 $$ String login = "" --> Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") [FD]
Line_16 $$ if (action.equals("Upload")) --> Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") [CD]
Line_10 $$ String password = "" --> Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") [FD]
Line_16 $$ if (action.equals("Upload")) --> Line_20 $$ if (object.equals("Media")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_20 $$ if (object.equals("Media")) [FD]
Line_20 $$ if (object.equals("Media")) --> Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") [CD]
Line_7 $$ String folder = "" --> Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") [FD]
Line_16 $$ if (action.equals("Upload")) --> Line_23 $$ if (object.equals("Templates")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_23 $$ if (object.equals("Templates")) [FD]
Line_23 $$ if (object.equals("Templates")) --> Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") [CD]
Line_7 $$ String folder = "" --> Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") [FD]
Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") --> Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_27 $$ if (action.equals("Delete")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_27 $$ if (action.equals("Delete")) [FD]
Line_27 $$ if (action.equals("Delete")) --> Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [CD]
Line_9 $$ String login = "" --> Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [FD]
Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") --> Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [FD]
Line_27 $$ if (action.equals("Delete")) --> Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [CD]
Line_10 $$ String password = "" --> Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [FD]
Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") --> Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [FD]
Line_27 $$ if (action.equals("Delete")) --> Line_30 $$ if (object.equals("Media")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_30 $$ if (object.equals("Media")) [FD]
Line_30 $$ if (object.equals("Media")) --> Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [CD]
Line_8 $$ String server = "" --> Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [FD]
Line_30 $$ if (object.equals("Media")) --> Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") [CD]
Line_7 $$ String folder = "" --> Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") [FD]
Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") --> Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") [FD]
Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") --> Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") [FD]
Line_27 $$ if (action.equals("Delete")) --> Line_34 $$ if (object.equals("Templates")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_34 $$ if (object.equals("Templates")) [FD]
Line_34 $$ if (object.equals("Templates")) --> Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [CD]
Line_8 $$ String server = "" --> Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_34 $$ if (object.equals("Templates")) --> Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [CD]
Line_7 $$ String folder = "" --> Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [FD]
Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") --> Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [FD]
Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") --> Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [FD]
Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") --> Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_39 $$ ArrayList al = new ArrayList() [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_40 $$ int numElement = Integer.parseInt(numElements) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_40 $$ int numElement = Integer.parseInt(numElements) [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_41 $$ for (int i = 0; i < numElement; i++) [CD]
Line_40 $$ int numElement = Integer.parseInt(numElements) --> Line_41 $$ for (int i = 0; i < numElement; i++) [FD]
Line_41 $$ for (int i = 0; i < numElement; i++) --> Line_42 $$ String key = String.valueOf(i) [CD]
Line_41 $$ for (int i = 0; i < numElement; i++) --> Line_42 $$ String key = String.valueOf(i) [FD]
Line_41 $$ for (int i = 0; i < numElement; i++) --> Line_43 $$ String file = req.getParameter(key) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_43 $$ String file = req.getParameter(key) [FD]
Line_42 $$ String key = String.valueOf(i) --> Line_43 $$ String file = req.getParameter(key) [FD]
Line_41 $$ for (int i = 0; i < numElement; i++) --> Line_44 $$ if (file != null) [CD]
Line_43 $$ String file = req.getParameter(key) --> Line_44 $$ if (file != null) [FD]
Line_44 $$ if (file != null) --> Line_45 $$ al.add(file) [CD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_45 $$ al.add(file) [FD]
Line_43 $$ String file = req.getParameter(key) --> Line_45 $$ al.add(file) [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_48 $$ if (action.equals("Upload")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_48 $$ if (action.equals("Upload")) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_51 $$ ftp.connect(server) [FD]
Line_8 $$ String server = "" --> Line_51 $$ ftp.connect(server) [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_51 $$ ftp.connect(server) [FD]
Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_51 $$ ftp.connect(server) [FD]
Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_51 $$ ftp.connect(server) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_52 $$ CofaxToolsUtil.log(ftp.getReplyString()) [FD]
Line_50 $$ int reply --> Line_53 $$ reply = ftp.getReplyCode() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_53 $$ reply = ftp.getReplyCode() [FD]
Line_50 $$ int reply --> Line_54 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_53 $$ reply = ftp.getReplyCode() --> Line_54 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_54 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_55 $$ ftp.disconnect() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_55 $$ ftp.disconnect() [FD]
Line_54 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_56 $$ return ("FTP server refused connection.") [CD]
Line_54 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_58 $$ ftp.login(login, password) [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_58 $$ ftp.login(login, password) [FD]
Line_9 $$ String login = "" --> Line_58 $$ ftp.login(login, password) [FD]
Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") --> Line_58 $$ ftp.login(login, password) [FD]
Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") --> Line_58 $$ ftp.login(login, password) [FD]
Line_10 $$ String password = "" --> Line_58 $$ ftp.login(login, password) [FD]
Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") --> Line_58 $$ ftp.login(login, password) [FD]
Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") --> Line_58 $$ ftp.login(login, password) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_60 $$ for (int ii = 0; ii < al.size(); ii++) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_61 $$ String fileName = (String) al.get(ii) [CD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_61 $$ String fileName = (String) al.get(ii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_61 $$ String fileName = (String) al.get(ii) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_62 $$ String folderName = stripName(fileName) [CD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_62 $$ String folderName = stripName(fileName) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_63 $$ fileName = stripPath(fileName) [CD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_63 $$ fileName = stripPath(fileName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_65 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_62 $$ String folderName = stripName(fileName) --> Line_65 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_66 $$ OutputStream output --> Line_67 $$ output = new FileOutputStream(fileTransferFolder + fileName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_68 $$ ftp.retrieveFile(fileName, output) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_68 $$ ftp.retrieveFile(fileName, output) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_68 $$ ftp.retrieveFile(fileName, output) [FD]
Line_66 $$ OutputStream output --> Line_68 $$ ftp.retrieveFile(fileName, output) [FD]
Line_67 $$ output = new FileOutputStream(fileTransferFolder + fileName) --> Line_68 $$ ftp.retrieveFile(fileName, output) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_69 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates retrieving file: " + ftp.getReplyString()) [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_70 $$ message.append("Retrieving file " + fileName + " to local disk.<BR>") [FD]
Line_66 $$ OutputStream output --> Line_71 $$ output.close() [FD]
Line_67 $$ output = new FileOutputStream(fileTransferFolder + fileName) --> Line_71 $$ output.close() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_76 $$ ftp.logout() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_77 $$ ftp.disconnect() [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_82 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [CD]
Line_9 $$ String login = "" --> Line_82 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [FD]
Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") --> Line_82 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [FD]
Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") --> Line_82 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_83 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [CD]
Line_10 $$ String password = "" --> Line_83 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [FD]
Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") --> Line_83 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [FD]
Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") --> Line_83 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_84 $$ if (object.equals("Media")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_84 $$ if (object.equals("Media")) [FD]
Line_84 $$ if (object.equals("Media")) --> Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [CD]
Line_8 $$ String server = "" --> Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [FD]
Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [FD]
Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") [FD]
Line_84 $$ if (object.equals("Media")) --> Line_86 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") [CD]
Line_12 $$ String liveFolder = "" --> Line_86 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_88 $$ if (object.equals("Templates")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_88 $$ if (object.equals("Templates")) [FD]
Line_88 $$ if (object.equals("Templates")) --> Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [CD]
Line_8 $$ String server = "" --> Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") [FD]
Line_88 $$ if (object.equals("Templates")) --> Line_90 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [CD]
Line_12 $$ String liveFolder = "" --> Line_90 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [FD]
Line_86 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") --> Line_90 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_92 $$ servers = splitServers(server) [CD]
Line_13 $$ ArrayList servers = new ArrayList() --> Line_92 $$ servers = splitServers(server) [FD]
Line_8 $$ String server = "" --> Line_92 $$ servers = splitServers(server) [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_92 $$ servers = splitServers(server) [FD]
Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_92 $$ servers = splitServers(server) [FD]
Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_92 $$ servers = splitServers(server) [FD]
Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_92 $$ servers = splitServers(server) [FD]
Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_92 $$ servers = splitServers(server) [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_93 $$ for (int iii = 0; iii < servers.size(); iii++) [CD]
Line_13 $$ ArrayList servers = new ArrayList() --> Line_93 $$ for (int iii = 0; iii < servers.size(); iii++) [FD]
Line_92 $$ servers = splitServers(server) --> Line_93 $$ for (int iii = 0; iii < servers.size(); iii++) [FD]
Line_13 $$ ArrayList servers = new ArrayList() --> Line_96 $$ String connectServer = (String) servers.get(iii) [FD]
Line_92 $$ servers = splitServers(server) --> Line_96 $$ String connectServer = (String) servers.get(iii) [FD]
Line_93 $$ for (int iii = 0; iii < servers.size(); iii++) --> Line_96 $$ String connectServer = (String) servers.get(iii) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_97 $$ ftp.connect(connectServer) [FD]
Line_96 $$ String connectServer = (String) servers.get(iii) --> Line_97 $$ ftp.connect(connectServer) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_98 $$ CofaxToolsUtil.log(ftp.getReplyString()) [FD]
Line_95 $$ int reply --> Line_99 $$ reply = ftp.getReplyCode() [FD]
Line_50 $$ int reply --> Line_99 $$ reply = ftp.getReplyCode() [FD]
Line_53 $$ reply = ftp.getReplyCode() --> Line_99 $$ reply = ftp.getReplyCode() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_99 $$ reply = ftp.getReplyCode() [FD]
Line_95 $$ int reply --> Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_99 $$ reply = ftp.getReplyCode() --> Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_50 $$ int reply --> Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_53 $$ reply = ftp.getReplyCode() --> Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_101 $$ ftp.disconnect() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_101 $$ ftp.disconnect() [FD]
Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_102 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates ERROR: server refused connection: " + connectServer) [CD]
Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_103 $$ return ("CofaxToolsFTP uploadOrDeleteMediaOrTemplates FTP server refused connection.") [CD]
Line_100 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_105 $$ ftp.login(login, password) [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_105 $$ ftp.login(login, password) [FD]
Line_9 $$ String login = "" --> Line_105 $$ ftp.login(login, password) [FD]
Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") --> Line_105 $$ ftp.login(login, password) [FD]
Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") --> Line_105 $$ ftp.login(login, password) [FD]
Line_82 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") --> Line_105 $$ ftp.login(login, password) [FD]
Line_10 $$ String password = "" --> Line_105 $$ ftp.login(login, password) [FD]
Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") --> Line_105 $$ ftp.login(login, password) [FD]
Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") --> Line_105 $$ ftp.login(login, password) [FD]
Line_83 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") --> Line_105 $$ ftp.login(login, password) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_107 $$ for (int ii = 0; ii < al.size(); ii++) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_107 $$ for (int ii = 0; ii < al.size(); ii++) [FD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_108 $$ String fileName = (String) al.get(ii) [CD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_108 $$ String fileName = (String) al.get(ii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_108 $$ String fileName = (String) al.get(ii) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_108 $$ String fileName = (String) al.get(ii) [FD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_109 $$ CofaxToolsUtil.log("Original String " + fileName) [CD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_110 $$ CofaxToolsUtil.log("Search for " + folder) [CD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_111 $$ CofaxToolsUtil.log("Replace " + liveFolder) [CD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [CD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_7 $$ String folder = "" --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_12 $$ String liveFolder = "" --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_86 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_90 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_113 $$ CofaxToolsUtil.log("Results: " + folderName) [CD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_114 $$ folderName = stripName(folderName) [CD]
Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) --> Line_114 $$ folderName = stripName(folderName) [FD]
Line_62 $$ String folderName = stripName(fileName) --> Line_114 $$ folderName = stripName(folderName) [FD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_115 $$ fileName = stripPath(fileName) [CD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_115 $$ fileName = stripPath(fileName) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_115 $$ fileName = stripPath(fileName) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_115 $$ fileName = stripPath(fileName) [FD]
Line_117 $$ InputStream io --> Line_118 $$ io = new FileInputStream(fileTransferFolder + fileName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_120 $$ boolean directoryExists = ftp.changeWorkingDirectory(folderName) [FD]
Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) --> Line_120 $$ boolean directoryExists = ftp.changeWorkingDirectory(folderName) [FD]
Line_114 $$ folderName = stripName(folderName) --> Line_120 $$ boolean directoryExists = ftp.changeWorkingDirectory(folderName) [FD]
Line_62 $$ String folderName = stripName(fileName) --> Line_120 $$ boolean directoryExists = ftp.changeWorkingDirectory(folderName) [FD]
Line_120 $$ boolean directoryExists = ftp.changeWorkingDirectory(folderName) --> Line_121 $$ if (directoryExists == false) [FD]
Line_121 $$ if (directoryExists == false) --> Line_122 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates directory: " + folderName + " does not exist. Attempting to create.") [CD]
Line_121 $$ if (directoryExists == false) --> Line_123 $$ message.append("Directory: " + folderName + " does not exist. Attempting to create.<BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_123 $$ message.append("Directory: " + folderName + " does not exist. Attempting to create.<BR>") [FD]
Line_121 $$ if (directoryExists == false) --> Line_124 $$ boolean canCreatDir = ftp.makeDirectory(folderName) [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_124 $$ boolean canCreatDir = ftp.makeDirectory(folderName) [FD]
Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) --> Line_124 $$ boolean canCreatDir = ftp.makeDirectory(folderName) [FD]
Line_114 $$ folderName = stripName(folderName) --> Line_124 $$ boolean canCreatDir = ftp.makeDirectory(folderName) [FD]
Line_62 $$ String folderName = stripName(fileName) --> Line_124 $$ boolean canCreatDir = ftp.makeDirectory(folderName) [FD]
Line_121 $$ if (directoryExists == false) --> Line_125 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates results: " + canCreatDir) [CD]
Line_121 $$ if (directoryExists == false) --> Line_126 $$ message.append("Results: " + canCreatDir + "<BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_126 $$ message.append("Results: " + canCreatDir + "<BR>") [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_117 $$ InputStream io --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_118 $$ io = new FileInputStream(fileTransferFolder + fileName) --> Line_128 $$ boolean isStored = ftp.storeFile(fileName, io) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_131 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates results: " + isStored + " : " + ftp.getReplyString()) [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_132 $$ message.append("Storing file " + fileName + "<BR> to location " + folderName + "<BR> on server " + connectServer + ".<BR>") [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_138 $$ ftp.logout() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_139 $$ ftp.disconnect() [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_140 $$ message.append("Success<BR><BR>") [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_146 $$ if (object.equals("Templates")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_146 $$ if (object.equals("Templates")) [FD]
Line_146 $$ if (object.equals("Templates")) --> Line_147 $$ String cSServers = (String) user.workingPubConfigElementsHash.get("CACHESERVERS") [CD]
Line_146 $$ if (object.equals("Templates")) --> Line_148 $$ System.out.println("getting cache servers: " + cSServers) [CD]
Line_146 $$ if (object.equals("Templates")) --> Line_149 $$ ArrayList cServers = splitServers(cSServers) [CD]
Line_147 $$ String cSServers = (String) user.workingPubConfigElementsHash.get("CACHESERVERS") --> Line_149 $$ ArrayList cServers = splitServers(cSServers) [FD]
Line_146 $$ if (object.equals("Templates")) --> Line_150 $$ for (int iiii = 0; iiii < cServers.size(); iiii++) [CD]
Line_149 $$ ArrayList cServers = splitServers(cSServers) --> Line_150 $$ for (int iiii = 0; iiii < cServers.size(); iiii++) [FD]
Line_150 $$ for (int iiii = 0; iiii < cServers.size(); iiii++) --> Line_151 $$ String thisClearCacheServer = (String) cServers.get(iiii) [CD]
Line_150 $$ for (int iiii = 0; iiii < cServers.size(); iiii++) --> Line_151 $$ String thisClearCacheServer = (String) cServers.get(iiii) [FD]
Line_149 $$ ArrayList cServers = splitServers(cSServers) --> Line_151 $$ String thisClearCacheServer = (String) cServers.get(iiii) [FD]
Line_149 $$ ArrayList cServers = splitServers(cSServers) --> Line_153 $$ String connectServer = (String) cServers.get(iiii) [FD]
Line_150 $$ for (int iiii = 0; iiii < cServers.size(); iiii++) --> Line_153 $$ String connectServer = (String) cServers.get(iiii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) [FD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_155 $$ String thisFilePath = (String) al.get(iiiii) [CD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_155 $$ String thisFilePath = (String) al.get(iiiii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_155 $$ String thisFilePath = (String) al.get(iiiii) [FD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [CD]
Line_155 $$ String thisFilePath = (String) al.get(iiiii) --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_7 $$ String folder = "" --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_21 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTIMAGESFOLDER") --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_24 $$ folder = (String) user.workingPubConfigElementsHash.get("TESTTEMPLATEFOLDER") --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_32 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_36 $$ folder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_12 $$ String liveFolder = "" --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_86 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESFOLDER") --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_90 $$ liveFolder = (String) user.workingPubConfigElementsHash.get("LIVETEMPLATEFOLDER") --> Line_156 $$ String folderNameFileName = CofaxToolsUtil.replace(thisFilePath, folder, liveFolder) [FD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_157 $$ String URLToClear = CofaxToolsServlet.removeTemplateCache + folderNameFileName [CD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_158 $$ CofaxToolsClearCache clear = new CofaxToolsClearCache("HTTP://" + thisClearCacheServer + URLToClear) [CD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_159 $$ clear.start() [CD]
Line_158 $$ CofaxToolsClearCache clear = new CofaxToolsClearCache("HTTP://" + thisClearCacheServer + URLToClear) --> Line_159 $$ clear.start() [FD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_160 $$ message.append("Clearing Cache for " + folderNameFileName + "<BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_160 $$ message.append("Clearing Cache for " + folderNameFileName + "<BR>") [FD]
Line_154 $$ for (int iiiii = 0; iiiii < al.size(); iiiii++) --> Line_161 $$ message.append("on server " + thisClearCacheServer + "<BR>Success<BR><BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_161 $$ message.append("on server " + thisClearCacheServer + "<BR>Success<BR><BR>") [FD]
Line_48 $$ if (action.equals("Upload")) --> Line_168 $$ for (int i = 0; i < al.size(); i++) [CD]
Line_41 $$ for (int i = 0; i < numElement; i++) --> Line_168 $$ for (int i = 0; i < al.size(); i++) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_168 $$ for (int i = 0; i < al.size(); i++) [FD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_169 $$ String fileName = (String) al.get(i) [CD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_169 $$ String fileName = (String) al.get(i) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_169 $$ String fileName = (String) al.get(i) [FD]
Line_41 $$ for (int i = 0; i < numElement; i++) --> Line_169 $$ String fileName = (String) al.get(i) [FD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_170 $$ String folderName = stripName(fileName) [CD]
Line_169 $$ String fileName = (String) al.get(i) --> Line_170 $$ String folderName = stripName(fileName) [FD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_170 $$ String folderName = stripName(fileName) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_170 $$ String folderName = stripName(fileName) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_170 $$ String folderName = stripName(fileName) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_170 $$ String folderName = stripName(fileName) [FD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_171 $$ fileName = stripPath(fileName) [CD]
Line_169 $$ String fileName = (String) al.get(i) --> Line_171 $$ fileName = stripPath(fileName) [FD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_171 $$ fileName = stripPath(fileName) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_171 $$ fileName = stripPath(fileName) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_171 $$ fileName = stripPath(fileName) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_171 $$ fileName = stripPath(fileName) [FD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_172 $$ File file = new File(fileTransferFolder + fileName) [CD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_173 $$ boolean delete = file.delete() [CD]
Line_172 $$ File file = new File(fileTransferFolder + fileName) --> Line_173 $$ boolean delete = file.delete() [FD]
Line_43 $$ String file = req.getParameter(key) --> Line_173 $$ boolean delete = file.delete() [FD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_174 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates deleting file from local drive: " + fileTransferFolder + fileName) [CD]
Line_168 $$ for (int i = 0; i < al.size(); i++) --> Line_175 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates results: " + delete) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_178 $$ servers = splitServers(server) [CD]
Line_13 $$ ArrayList servers = new ArrayList() --> Line_178 $$ servers = splitServers(server) [FD]
Line_92 $$ servers = splitServers(server) --> Line_178 $$ servers = splitServers(server) [FD]
Line_8 $$ String server = "" --> Line_178 $$ servers = splitServers(server) [FD]
Line_17 $$ server = (String) user.workingPubConfigElementsHash.get("TESTFTPSERVER") --> Line_178 $$ servers = splitServers(server) [FD]
Line_31 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_178 $$ servers = splitServers(server) [FD]
Line_35 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_178 $$ servers = splitServers(server) [FD]
Line_85 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEIMAGESSERVER") --> Line_178 $$ servers = splitServers(server) [FD]
Line_89 $$ server = (String) user.workingPubConfigElementsHash.get("LIVEFTPSERVER") --> Line_178 $$ servers = splitServers(server) [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_179 $$ if (action.equals("Delete")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_179 $$ if (action.equals("Delete")) [FD]
Line_179 $$ if (action.equals("Delete")) --> Line_180 $$ for (int iii = 0; iii < servers.size(); iii++) [CD]
Line_93 $$ for (int iii = 0; iii < servers.size(); iii++) --> Line_180 $$ for (int iii = 0; iii < servers.size(); iii++) [FD]
Line_13 $$ ArrayList servers = new ArrayList() --> Line_180 $$ for (int iii = 0; iii < servers.size(); iii++) [FD]
Line_92 $$ servers = splitServers(server) --> Line_180 $$ for (int iii = 0; iii < servers.size(); iii++) [FD]
Line_178 $$ servers = splitServers(server) --> Line_180 $$ for (int iii = 0; iii < servers.size(); iii++) [FD]
Line_13 $$ ArrayList servers = new ArrayList() --> Line_183 $$ String connectServer = (String) servers.get(iii) [FD]
Line_92 $$ servers = splitServers(server) --> Line_183 $$ String connectServer = (String) servers.get(iii) [FD]
Line_178 $$ servers = splitServers(server) --> Line_183 $$ String connectServer = (String) servers.get(iii) [FD]
Line_180 $$ for (int iii = 0; iii < servers.size(); iii++) --> Line_183 $$ String connectServer = (String) servers.get(iii) [FD]
Line_93 $$ for (int iii = 0; iii < servers.size(); iii++) --> Line_183 $$ String connectServer = (String) servers.get(iii) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_184 $$ ftp.connect(connectServer) [FD]
Line_183 $$ String connectServer = (String) servers.get(iii) --> Line_184 $$ ftp.connect(connectServer) [FD]
Line_153 $$ String connectServer = (String) cServers.get(iiii) --> Line_184 $$ ftp.connect(connectServer) [FD]
Line_96 $$ String connectServer = (String) servers.get(iii) --> Line_184 $$ ftp.connect(connectServer) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_185 $$ CofaxToolsUtil.log(ftp.getReplyString()) [FD]
Line_182 $$ int reply --> Line_186 $$ reply = ftp.getReplyCode() [FD]
Line_95 $$ int reply --> Line_186 $$ reply = ftp.getReplyCode() [FD]
Line_99 $$ reply = ftp.getReplyCode() --> Line_186 $$ reply = ftp.getReplyCode() [FD]
Line_50 $$ int reply --> Line_186 $$ reply = ftp.getReplyCode() [FD]
Line_53 $$ reply = ftp.getReplyCode() --> Line_186 $$ reply = ftp.getReplyCode() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_186 $$ reply = ftp.getReplyCode() [FD]
Line_182 $$ int reply --> Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_186 $$ reply = ftp.getReplyCode() --> Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_95 $$ int reply --> Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_99 $$ reply = ftp.getReplyCode() --> Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_50 $$ int reply --> Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_53 $$ reply = ftp.getReplyCode() --> Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_188 $$ ftp.disconnect() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_188 $$ ftp.disconnect() [FD]
Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_189 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates ERROR: FTP server refused connection: " + connectServer) [CD]
Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_190 $$ return ("FTP server refused connection.") [CD]
Line_187 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_192 $$ ftp.login(login, password) [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_192 $$ ftp.login(login, password) [FD]
Line_9 $$ String login = "" --> Line_192 $$ ftp.login(login, password) [FD]
Line_18 $$ login = (String) user.workingPubConfigElementsHash.get("TESTFTPLOGIN") --> Line_192 $$ ftp.login(login, password) [FD]
Line_28 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") --> Line_192 $$ ftp.login(login, password) [FD]
Line_82 $$ login = (String) user.workingPubConfigElementsHash.get("LIVEFTPLOGIN") --> Line_192 $$ ftp.login(login, password) [FD]
Line_10 $$ String password = "" --> Line_192 $$ ftp.login(login, password) [FD]
Line_19 $$ password = (String) user.workingPubConfigElementsHash.get("TESTFTPPASSWORD") --> Line_192 $$ ftp.login(login, password) [FD]
Line_29 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") --> Line_192 $$ ftp.login(login, password) [FD]
Line_83 $$ password = (String) user.workingPubConfigElementsHash.get("LIVEFTPPASSWORD") --> Line_192 $$ ftp.login(login, password) [FD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_194 $$ for (int ii = 0; ii < al.size(); ii++) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_194 $$ for (int ii = 0; ii < al.size(); ii++) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_194 $$ for (int ii = 0; ii < al.size(); ii++) [FD]
Line_194 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_195 $$ String fileName = (String) al.get(ii) [CD]
Line_194 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_195 $$ String fileName = (String) al.get(ii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_195 $$ String fileName = (String) al.get(ii) [FD]
Line_107 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_195 $$ String fileName = (String) al.get(ii) [FD]
Line_60 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_195 $$ String fileName = (String) al.get(ii) [FD]
Line_194 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_196 $$ String folderName = stripName(fileName) [CD]
Line_195 $$ String fileName = (String) al.get(ii) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_169 $$ String fileName = (String) al.get(i) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_171 $$ fileName = stripPath(fileName) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_196 $$ String folderName = stripName(fileName) [FD]
Line_194 $$ for (int ii = 0; ii < al.size(); ii++) --> Line_197 $$ fileName = stripPath(fileName) [CD]
Line_195 $$ String fileName = (String) al.get(ii) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_169 $$ String fileName = (String) al.get(i) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_171 $$ fileName = stripPath(fileName) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_197 $$ fileName = stripPath(fileName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_199 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_196 $$ String folderName = stripName(fileName) --> Line_199 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_170 $$ String folderName = stripName(fileName) --> Line_199 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) --> Line_199 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_114 $$ folderName = stripName(folderName) --> Line_199 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_62 $$ String folderName = stripName(fileName) --> Line_199 $$ ftp.changeWorkingDirectory(folderName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_195 $$ String fileName = (String) al.get(ii) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_197 $$ fileName = stripPath(fileName) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_169 $$ String fileName = (String) al.get(i) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_171 $$ fileName = stripPath(fileName) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_108 $$ String fileName = (String) al.get(ii) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_61 $$ String fileName = (String) al.get(ii) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_200 $$ ftp.deleteFile(fileName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_203 $$ CofaxToolsUtil.log("CofaxToolsFTP uploadOrDeleteMediaOrTemplates results: " + ftp.getReplyString()) [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_204 $$ message.append("Deleting file " + fileName + "<BR>") [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_205 $$ message.append("from folder " + folderName + "<BR>") [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_206 $$ message.append("on server " + connectServer + "<BR>") [FD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_211 $$ message.append("Success<BR><BR>") [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_212 $$ ftp.logout() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_213 $$ ftp.disconnect() [FD]
Line_179 $$ if (action.equals("Delete")) --> Line_219 $$ if (object.equals("Templates")) [CD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_219 $$ if (object.equals("Templates")) [FD]
Line_219 $$ if (object.equals("Templates")) --> Line_220 $$ String cISServers = (String) user.workingPubConfigElementsHash.get("CACHESERVERS") [CD]
Line_219 $$ if (object.equals("Templates")) --> Line_221 $$ ArrayList cIServers = splitServers(cISServers) [CD]
Line_220 $$ String cISServers = (String) user.workingPubConfigElementsHash.get("CACHESERVERS") --> Line_221 $$ ArrayList cIServers = splitServers(cISServers) [FD]
Line_219 $$ if (object.equals("Templates")) --> Line_222 $$ for (int iiiiii = 0; iiiiii < cIServers.size(); iiiiii++) [CD]
Line_221 $$ ArrayList cIServers = splitServers(cISServers) --> Line_222 $$ for (int iiiiii = 0; iiiiii < cIServers.size(); iiiiii++) [FD]
Line_222 $$ for (int iiiiii = 0; iiiiii < cIServers.size(); iiiiii++) --> Line_223 $$ String thisClearCacheIServer = (String) cIServers.get(iiiiii) [CD]
Line_222 $$ for (int iiiiii = 0; iiiiii < cIServers.size(); iiiiii++) --> Line_223 $$ String thisClearCacheIServer = (String) cIServers.get(iiiiii) [FD]
Line_221 $$ ArrayList cIServers = splitServers(cISServers) --> Line_223 $$ String thisClearCacheIServer = (String) cIServers.get(iiiiii) [FD]
Line_221 $$ ArrayList cIServers = splitServers(cISServers) --> Line_225 $$ String connectServer = (String) cIServers.get(iiiiii) [FD]
Line_222 $$ for (int iiiiii = 0; iiiiii < cIServers.size(); iiiiii++) --> Line_225 $$ String connectServer = (String) cIServers.get(iiiiii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) [FD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_227 $$ String thisFilePathI = (String) al.get(iiiiiii) [CD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_227 $$ String thisFilePathI = (String) al.get(iiiiiii) [FD]
Line_39 $$ ArrayList al = new ArrayList() --> Line_227 $$ String thisFilePathI = (String) al.get(iiiiiii) [FD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_228 $$ String URLToClearI = CofaxToolsServlet.removeTemplateCache + thisFilePathI [CD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_229 $$ CofaxToolsClearCache clearI = new CofaxToolsClearCache("HTTP://" + thisClearCacheIServer + URLToClearI) [CD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_230 $$ clearI.start() [CD]
Line_229 $$ CofaxToolsClearCache clearI = new CofaxToolsClearCache("HTTP://" + thisClearCacheIServer + URLToClearI) --> Line_230 $$ clearI.start() [FD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_231 $$ message.append("Clearing Cache for " + thisFilePathI + "<BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_231 $$ message.append("Clearing Cache for " + thisFilePathI + "<BR>") [FD]
Line_226 $$ for (int iiiiiii = 0; iiiiiii < al.size(); iiiiiii++) --> Line_232 $$ message.append("on server " + thisClearCacheIServer + "<BR>Success<BR><BR>") [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_232 $$ message.append("on server " + thisClearCacheIServer + "<BR>Success<BR><BR>") [FD]
Line_2 $$ public static String uploadOrDeleteMediaOrTemplates(String action, String object, String numElements, HttpServletRequest req, HttpSession session) --> Line_240 $$ return (message.toString()) [CD]
Line_14 $$ StringBuffer message = new StringBuffer() --> Line_240 $$ return (message.toString()) [FD]
Line_63 $$ fileName = stripPath(fileName) --> Line_62 $$ String folderName = stripName(fileName) [FD]
Line_115 $$ fileName = stripPath(fileName) --> Line_112 $$ String folderName = CofaxToolsUtil.replace(fileName, folder, liveFolder) [FD]
Line_171 $$ fileName = stripPath(fileName) --> Line_170 $$ String folderName = stripName(fileName) [FD]
Line_197 $$ fileName = stripPath(fileName) --> Line_196 $$ String folderName = stripName(fileName) [FD]
