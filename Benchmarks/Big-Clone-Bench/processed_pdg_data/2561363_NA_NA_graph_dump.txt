Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_4 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance() [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_5 $$ InputStream in = null [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_6 $$ HttpURLConnection httpConnection = null [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_7 $$ Document doc = null [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_8 $$ dbf.setValidating(false) [CD]
Line_4 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance() --> Line_8 $$ dbf.setValidating(false) [FD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_9 $$ String proxy = resourceBundle.getString(Constants.PROXY_HOST) [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_10 $$ String port = resourceBundle.getString(Constants.PROXY_PORT) [CD]
Line_2 $$ public Document getKmlStream(String streetname, String number, String neighbourhood, String city, String state) throws RotaException --> Line_12 $$ String address = String.format("%s+%s+%s+%s+%s", URLEncoder.encode(streetname.trim(), Constants.URL_ENCODING), URLEncoder.encode(number.trim(), Constants.URL_ENCODING), URLEncoder.encode(neighbourhood.trim(), Constants.URL_ENCODING), URLEncoder.encode(city.trim(), Constants.URL_ENCODING), URLEncoder.encode(state.trim(), Constants.URL_ENCODING)) [FD]
Line_4 $$ DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance() --> Line_13 $$ DocumentBuilder df = dbf.newDocumentBuilder() [FD]
Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) --> Line_14 $$ urlsb.append(address) [FD]
Line_12 $$ String address = String.format("%s+%s+%s+%s+%s", URLEncoder.encode(streetname.trim(), Constants.URL_ENCODING), URLEncoder.encode(number.trim(), Constants.URL_ENCODING), URLEncoder.encode(neighbourhood.trim(), Constants.URL_ENCODING), URLEncoder.encode(city.trim(), Constants.URL_ENCODING), URLEncoder.encode(state.trim(), Constants.URL_ENCODING)) --> Line_14 $$ urlsb.append(address) [FD]
Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) --> Line_15 $$ urlsb.append(resourceBundle.getString(Constants.GOOGLE_TYPE_OUTPUT)) [FD]
Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) --> Line_16 $$ urlsb.append(resourceBundle.getString(Constants.SENSOR)) [FD]
Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) --> Line_17 $$ urlsb.append(resourceBundle.getString(Constants.GOOGLE_KEY)) [FD]
Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) --> Line_18 $$ urlsb.append(resourceBundle.getString(Constants.GOOGLE_KEY_VALUE)) [FD]
Line_3 $$ StringBuffer urlsb = new StringBuffer(resourceBundle.getString(Constants.URL_SEARCH)) --> Line_19 $$ String addressUTF8 = urlsb.toString() [FD]
Line_9 $$ String proxy = resourceBundle.getString(Constants.PROXY_HOST) --> Line_22 $$ if (proxy != null && !proxy.equals("")) [FD]
Line_22 $$ if (proxy != null && !proxy.equals("")) --> Line_23 $$ systemproperties.setProperty("http.proxyHost", proxy) [CD]
Line_21 $$ Properties systemproperties = System.getProperties() --> Line_23 $$ systemproperties.setProperty("http.proxyHost", proxy) [FD]
Line_9 $$ String proxy = resourceBundle.getString(Constants.PROXY_HOST) --> Line_23 $$ systemproperties.setProperty("http.proxyHost", proxy) [FD]
Line_22 $$ if (proxy != null && !proxy.equals("")) --> Line_24 $$ systemproperties.setProperty("http.proxyPort", port) [CD]
Line_21 $$ Properties systemproperties = System.getProperties() --> Line_24 $$ systemproperties.setProperty("http.proxyPort", port) [FD]
Line_10 $$ String port = resourceBundle.getString(Constants.PROXY_PORT) --> Line_24 $$ systemproperties.setProperty("http.proxyPort", port) [FD]
Line_6 $$ HttpURLConnection httpConnection = null --> Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() [FD]
Line_20 $$ URL url = new URL(addressUTF8) --> Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() [FD]
Line_6 $$ HttpURLConnection httpConnection = null --> Line_27 $$ httpConnection.connect() [FD]
Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() --> Line_27 $$ httpConnection.connect() [FD]
Line_5 $$ InputStream in = null --> Line_28 $$ in = httpConnection.getInputStream() [FD]
Line_6 $$ HttpURLConnection httpConnection = null --> Line_28 $$ in = httpConnection.getInputStream() [FD]
Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() --> Line_28 $$ in = httpConnection.getInputStream() [FD]
Line_7 $$ Document doc = null --> Line_29 $$ doc = df.parse(in) [FD]
Line_13 $$ DocumentBuilder df = dbf.newDocumentBuilder() --> Line_29 $$ doc = df.parse(in) [FD]
Line_5 $$ InputStream in = null --> Line_29 $$ doc = df.parse(in) [FD]
Line_28 $$ in = httpConnection.getInputStream() --> Line_29 $$ doc = df.parse(in) [FD]
Line_5 $$ InputStream in = null --> Line_30 $$ in.close() [FD]
Line_28 $$ in = httpConnection.getInputStream() --> Line_30 $$ in.close() [FD]
Line_6 $$ HttpURLConnection httpConnection = null --> Line_31 $$ httpConnection.disconnect() [FD]
Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() --> Line_31 $$ httpConnection.disconnect() [FD]
Line_7 $$ Document doc = null --> Line_32 $$ if (doc == null || !verificaStatusRequisicao(doc)) [FD]
Line_29 $$ doc = df.parse(in) --> Line_32 $$ if (doc == null || !verificaStatusRequisicao(doc)) [FD]
Line_5 $$ InputStream in = null --> Line_57 $$ if (in != null) [FD]
Line_28 $$ in = httpConnection.getInputStream() --> Line_57 $$ if (in != null) [FD]
Line_5 $$ InputStream in = null --> Line_59 $$ in.close() [FD]
Line_28 $$ in = httpConnection.getInputStream() --> Line_59 $$ in.close() [FD]
Line_6 $$ HttpURLConnection httpConnection = null --> Line_64 $$ if (httpConnection != null) [FD]
Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() --> Line_64 $$ if (httpConnection != null) [FD]
Line_64 $$ if (httpConnection != null) --> Line_65 $$ httpConnection.disconnect() [CD]
Line_6 $$ HttpURLConnection httpConnection = null --> Line_65 $$ httpConnection.disconnect() [FD]
Line_26 $$ httpConnection = (HttpURLConnection) url.openConnection() --> Line_65 $$ httpConnection.disconnect() [FD]
