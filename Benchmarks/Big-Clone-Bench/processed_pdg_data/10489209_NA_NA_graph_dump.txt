Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_3 $$ if (type == null) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_3 $$ if (type == null) [FD]
Line_3 $$ if (type == null) --> Line_4 $$ type = "mol" [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_4 $$ type = "mol" [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_6 $$ ISimpleChemObjectReader cor = null [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_8 $$ Reader input = new BufferedReader(getReader(url)) [FD]
Line_9 $$ FormatFactory formatFactory = new FormatFactory(8192) --> Line_10 $$ IChemFormat format = formatFactory.guessFormat(input) [FD]
Line_8 $$ Reader input = new BufferedReader(getReader(url)) --> Line_10 $$ IChemFormat format = formatFactory.guessFormat(input) [FD]
Line_10 $$ IChemFormat format = formatFactory.guessFormat(input) --> Line_11 $$ if (format != null) [FD]
Line_11 $$ if (format != null) --> Line_12 $$ if (format instanceof RGroupQueryFormat) [CD]
Line_10 $$ IChemFormat format = formatFactory.guessFormat(input) --> Line_12 $$ if (format instanceof RGroupQueryFormat) [FD]
Line_12 $$ if (format instanceof RGroupQueryFormat) --> Line_13 $$ cor = new RGroupQueryReader() [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_13 $$ cor = new RGroupQueryReader() [FD]
Line_12 $$ if (format instanceof RGroupQueryFormat) --> Line_14 $$ cor.setReader(input) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_14 $$ cor.setReader(input) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_14 $$ cor.setReader(input) [FD]
Line_8 $$ Reader input = new BufferedReader(getReader(url)) --> Line_14 $$ cor.setReader(input) [FD]
Line_12 $$ if (format instanceof RGroupQueryFormat) --> Line_15 $$ if (format instanceof CMLFormat) [CD]
Line_10 $$ IChemFormat format = formatFactory.guessFormat(input) --> Line_15 $$ if (format instanceof CMLFormat) [FD]
Line_15 $$ if (format instanceof CMLFormat) --> Line_16 $$ cor = new CMLReader(urlString) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_16 $$ cor = new CMLReader(urlString) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_16 $$ cor = new CMLReader(urlString) [FD]
Line_15 $$ if (format instanceof CMLFormat) --> Line_17 $$ cor.setReader(url.openStream()) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_17 $$ cor.setReader(url.openStream()) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_17 $$ cor.setReader(url.openStream()) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_17 $$ cor.setReader(url.openStream()) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_17 $$ cor.setReader(url.openStream()) [FD]
Line_15 $$ if (format instanceof CMLFormat) --> Line_18 $$ if (format instanceof MDLV2000Format) [CD]
Line_10 $$ IChemFormat format = formatFactory.guessFormat(input) --> Line_18 $$ if (format instanceof MDLV2000Format) [FD]
Line_18 $$ if (format instanceof MDLV2000Format) --> Line_19 $$ cor = new MDLV2000Reader(getReader(url)) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_19 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_19 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_19 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_19 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_18 $$ if (format instanceof MDLV2000Format) --> Line_20 $$ cor.setReader(input) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_20 $$ cor.setReader(input) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_20 $$ cor.setReader(input) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_20 $$ cor.setReader(input) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_20 $$ cor.setReader(input) [FD]
Line_8 $$ Reader input = new BufferedReader(getReader(url)) --> Line_20 $$ cor.setReader(input) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_26 $$ if (cor == null) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_26 $$ if (cor == null) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_26 $$ if (cor == null) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_26 $$ if (cor == null) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_26 $$ if (cor == null) [FD]
Line_26 $$ if (cor == null) --> Line_27 $$ if (type.equals(JCPFileFilter.cml) || type.equals(JCPFileFilter.xml)) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_27 $$ if (type.equals(JCPFileFilter.cml) || type.equals(JCPFileFilter.xml)) [FD]
Line_4 $$ type = "mol" --> Line_27 $$ if (type.equals(JCPFileFilter.cml) || type.equals(JCPFileFilter.xml)) [FD]
Line_27 $$ if (type.equals(JCPFileFilter.cml) || type.equals(JCPFileFilter.xml)) --> Line_28 $$ cor = new CMLReader(urlString) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_28 $$ cor = new CMLReader(urlString) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_28 $$ cor = new CMLReader(urlString) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_28 $$ cor = new CMLReader(urlString) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_28 $$ cor = new CMLReader(urlString) [FD]
Line_27 $$ if (type.equals(JCPFileFilter.cml) || type.equals(JCPFileFilter.xml)) --> Line_29 $$ if (type.equals(JCPFileFilter.sdf)) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_29 $$ if (type.equals(JCPFileFilter.sdf)) [FD]
Line_4 $$ type = "mol" --> Line_29 $$ if (type.equals(JCPFileFilter.sdf)) [FD]
Line_29 $$ if (type.equals(JCPFileFilter.sdf)) --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_30 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_29 $$ if (type.equals(JCPFileFilter.sdf)) --> Line_31 $$ if (type.equals(JCPFileFilter.mol)) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_31 $$ if (type.equals(JCPFileFilter.mol)) [FD]
Line_4 $$ type = "mol" --> Line_31 $$ if (type.equals(JCPFileFilter.mol)) [FD]
Line_31 $$ if (type.equals(JCPFileFilter.mol)) --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_30 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_32 $$ cor = new MDLV2000Reader(getReader(url)) [FD]
Line_31 $$ if (type.equals(JCPFileFilter.mol)) --> Line_33 $$ if (type.equals(JCPFileFilter.inchi)) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_33 $$ if (type.equals(JCPFileFilter.inchi)) [FD]
Line_4 $$ type = "mol" --> Line_33 $$ if (type.equals(JCPFileFilter.inchi)) [FD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_30 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_32 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) [FD]
Line_33 $$ if (type.equals(JCPFileFilter.inchi)) --> Line_39 $$ if (type.equals(JCPFileFilter.rxn)) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_39 $$ if (type.equals(JCPFileFilter.rxn)) [FD]
Line_4 $$ type = "mol" --> Line_39 $$ if (type.equals(JCPFileFilter.rxn)) [FD]
Line_39 $$ if (type.equals(JCPFileFilter.rxn)) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_30 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_32 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) [FD]
Line_39 $$ if (type.equals(JCPFileFilter.rxn)) --> Line_41 $$ if (type.equals(JCPFileFilter.smi)) [CD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_41 $$ if (type.equals(JCPFileFilter.smi)) [FD]
Line_4 $$ type = "mol" --> Line_41 $$ if (type.equals(JCPFileFilter.smi)) [FD]
Line_41 $$ if (type.equals(JCPFileFilter.smi)) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_30 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_32 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_42 $$ cor = new SMILESReader(getReader(url)) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_45 $$ if (cor == null) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_45 $$ if (cor == null) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_45 $$ if (cor == null) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_45 $$ if (cor == null) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_45 $$ if (cor == null) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_45 $$ if (cor == null) [FD]
Line_30 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_45 $$ if (cor == null) [FD]
Line_32 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_45 $$ if (cor == null) [FD]
Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) --> Line_45 $$ if (cor == null) [FD]
Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) --> Line_45 $$ if (cor == null) [FD]
Line_42 $$ cor = new SMILESReader(getReader(url)) --> Line_45 $$ if (cor == null) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_48 $$ if (cor instanceof MDLV2000Reader) [CD]
Line_6 $$ ISimpleChemObjectReader cor = null --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_13 $$ cor = new RGroupQueryReader() --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_16 $$ cor = new CMLReader(urlString) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_19 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_28 $$ cor = new CMLReader(urlString) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_30 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_32 $$ cor = new MDLV2000Reader(getReader(url)) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_35 $$ cor = new INChIReader(new URL(urlString).openStream()) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_40 $$ cor = new MDLRXNV2000Reader(getReader(url)) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_42 $$ cor = new SMILESReader(getReader(url)) --> Line_48 $$ if (cor instanceof MDLV2000Reader) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_50 $$ BufferedReader in = new BufferedReader(getReader(url)) [FD]
Line_51 $$ String line --> Line_52 $$ while ((line = in.readLine()) != null) [FD]
Line_50 $$ BufferedReader in = new BufferedReader(getReader(url)) --> Line_52 $$ while ((line = in.readLine()) != null) [FD]
Line_54 $$ String message = GT._("It seems you opened a mol or sdf" + " file containing several molecules. " + "Only the first one will be shown") --> Line_55 $$ JOptionPane.showMessageDialog(null, message, GT._("sdf-like file"), JOptionPane.INFORMATION_MESSAGE) [FD]
Line_2 $$ public static ISimpleChemObjectReader createReader(URL url, String urlString, String type) throws CDKException --> Line_63 $$ return cor [CD]
