Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_3 $$ ClientSession clientSession = null [CD]
Line_5 $$ if (logger.isDebugEnabled()) --> Line_6 $$ logger.debug("Connecting to " + serverUrl) [CD]
Line_3 $$ ClientSession clientSession = null --> Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) [FD]
Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) [FD]
Line_3 $$ ClientSession clientSession = null --> Line_9 $$ HeaderSet hsConnectReply = clientSession.connect(clientSession.createHeaderSet()) [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_9 $$ HeaderSet hsConnectReply = clientSession.connect(clientSession.createHeaderSet()) [FD]
Line_9 $$ HeaderSet hsConnectReply = clientSession.connect(clientSession.createHeaderSet()) --> Line_10 $$ if (hsConnectReply.getResponseCode() != ResponseCodes.OBEX_HTTP_OK) [FD]
Line_9 $$ HeaderSet hsConnectReply = clientSession.connect(clientSession.createHeaderSet()) --> Line_11 $$ throw new IOException("Connect Error " + hsConnectReply.getResponseCode()) [FD]
Line_3 $$ ClientSession clientSession = null --> Line_13 $$ HeaderSet hsOperation = clientSession.createHeaderSet() [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_13 $$ HeaderSet hsOperation = clientSession.createHeaderSet() [FD]
Line_13 $$ HeaderSet hsOperation = clientSession.createHeaderSet() --> Line_14 $$ hsOperation.setHeader(HeaderSet.NAME, fileName) [FD]
Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_14 $$ hsOperation.setHeader(HeaderSet.NAME, fileName) [FD]
Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_15 $$ if (type != null) [FD]
Line_15 $$ if (type != null) --> Line_16 $$ hsOperation.setHeader(HeaderSet.TYPE, type) [CD]
Line_13 $$ HeaderSet hsOperation = clientSession.createHeaderSet() --> Line_16 $$ hsOperation.setHeader(HeaderSet.TYPE, type) [FD]
Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_16 $$ hsOperation.setHeader(HeaderSet.TYPE, type) [FD]
Line_13 $$ HeaderSet hsOperation = clientSession.createHeaderSet() --> Line_18 $$ hsOperation.setHeader(HeaderSet.LENGTH, new Long(is.available())) [FD]
Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_18 $$ hsOperation.setHeader(HeaderSet.LENGTH, new Long(is.available())) [FD]
Line_3 $$ ClientSession clientSession = null --> Line_19 $$ Operation po = clientSession.put(hsOperation) [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_19 $$ Operation po = clientSession.put(hsOperation) [FD]
Line_13 $$ HeaderSet hsOperation = clientSession.createHeaderSet() --> Line_19 $$ Operation po = clientSession.put(hsOperation) [FD]
Line_19 $$ Operation po = clientSession.put(hsOperation) --> Line_20 $$ OutputStream os = po.openOutputStream() [FD]
Line_2 $$ public void sendData(String serverUrl, String fileName, String type, InputStream is) throws IOException --> Line_21 $$ IOUtils.copy(is, os) [FD]
Line_20 $$ OutputStream os = po.openOutputStream() --> Line_21 $$ IOUtils.copy(is, os) [FD]
Line_20 $$ OutputStream os = po.openOutputStream() --> Line_22 $$ os.flush() [FD]
Line_20 $$ OutputStream os = po.openOutputStream() --> Line_23 $$ os.close() [FD]
Line_24 $$ if (logger.isDebugEnabled()) --> Line_25 $$ logger.debug("put responseCode " + po.getResponseCode()) [CD]
Line_19 $$ Operation po = clientSession.put(hsOperation) --> Line_25 $$ logger.debug("put responseCode " + po.getResponseCode()) [FD]
Line_19 $$ Operation po = clientSession.put(hsOperation) --> Line_27 $$ po.close() [FD]
Line_3 $$ ClientSession clientSession = null --> Line_28 $$ HeaderSet hsDisconnect = clientSession.disconnect(null) [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_28 $$ HeaderSet hsDisconnect = clientSession.disconnect(null) [FD]
Line_29 $$ if (logger.isDebugEnabled()) --> Line_30 $$ logger.debug("disconnect responseCode " + hsDisconnect.getResponseCode()) [CD]
Line_28 $$ HeaderSet hsDisconnect = clientSession.disconnect(null) --> Line_30 $$ logger.debug("disconnect responseCode " + hsDisconnect.getResponseCode()) [FD]
Line_28 $$ HeaderSet hsDisconnect = clientSession.disconnect(null) --> Line_32 $$ if (hsDisconnect.getResponseCode() != ResponseCodes.OBEX_HTTP_OK) [FD]
Line_9 $$ HeaderSet hsConnectReply = clientSession.connect(clientSession.createHeaderSet()) --> Line_33 $$ throw new IOException("Send Error " + hsConnectReply.getResponseCode()) [FD]
Line_3 $$ ClientSession clientSession = null --> Line_36 $$ if (clientSession != null) [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_36 $$ if (clientSession != null) [FD]
Line_3 $$ ClientSession clientSession = null --> Line_38 $$ clientSession.close() [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_38 $$ clientSession.close() [FD]
Line_40 $$ if (logger.isDebugEnabled()) --> Line_41 $$ logger.debug("IOException during clientSession.close()", ignore) [CD]
Line_3 $$ ClientSession clientSession = null --> Line_45 $$ clientSession = null [FD]
Line_8 $$ clientSession = (ClientSession) Connector.open(serverUrl) --> Line_45 $$ clientSession = null [FD]
