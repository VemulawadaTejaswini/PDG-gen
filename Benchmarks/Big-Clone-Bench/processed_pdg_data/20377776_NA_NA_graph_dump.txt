Line_2 $$ public static void assertEquals(String xmlpath, Object actualObject) throws Exception --> Line_3 $$ InputStreamReader isr [CD]
Line_3 $$ InputStreamReader isr --> Line_5 $$ isr = new FileReader(xmlpath) [FD]
Line_2 $$ public static void assertEquals(String xmlpath, Object actualObject) throws Exception --> Line_7 $$ URL url = AssertHelper.class.getClassLoader().getResource(xmlpath) [FD]
Line_3 $$ InputStreamReader isr --> Line_10 $$ isr = new InputStreamReader(url.openStream()) [FD]
Line_5 $$ isr = new FileReader(xmlpath) --> Line_10 $$ isr = new InputStreamReader(url.openStream()) [FD]
Line_2 $$ public static void assertEquals(String xmlpath, Object actualObject) throws Exception --> Line_18 $$ DOMParser parser = new DOMParser() [CD]
Line_2 $$ public static void assertEquals(String xmlpath, Object actualObject) throws Exception --> Line_19 $$ parser.parse(new InputSource(isr)) [CD]
Line_18 $$ DOMParser parser = new DOMParser() --> Line_19 $$ parser.parse(new InputSource(isr)) [FD]
Line_2 $$ public static void assertEquals(String xmlpath, Object actualObject) throws Exception --> Line_20 $$ Document document = parser.getDocument() [CD]
Line_18 $$ DOMParser parser = new DOMParser() --> Line_20 $$ Document document = parser.getDocument() [FD]
Line_2 $$ public static void assertEquals(String xmlpath, Object actualObject) throws Exception --> Line_22 $$ assertEqual(document.getDocumentElement(), actualObject) [FD]
Line_20 $$ Document document = parser.getDocument() --> Line_22 $$ assertEqual(document.getDocumentElement(), actualObject) [FD]
Line_25 $$ if (null != e.getCause()) --> Line_26 $$ message = e.getCause().getMessage() [CD]
Line_24 $$ String message = null --> Line_26 $$ message = e.getCause().getMessage() [FD]
Line_25 $$ if (null != e.getCause()) --> Line_28 $$ message = e.getMessage() [CD]
Line_24 $$ String message = null --> Line_28 $$ message = e.getMessage() [FD]
Line_26 $$ message = e.getCause().getMessage() --> Line_28 $$ message = e.getMessage() [FD]
Line_31 $$ Iterator iter = nodestack.iterator() --> Line_32 $$ while (iter.hasNext()) [FD]
Line_32 $$ while (iter.hasNext()) --> Line_33 $$ sbf.append(" -> " + ((Object[]) iter.next())[0]) [CD]
Line_30 $$ StringBuffer sbf = new StringBuffer(message + " \n " + xmlpath) --> Line_33 $$ sbf.append(" -> " + ((Object[]) iter.next())[0]) [FD]
Line_31 $$ Iterator iter = nodestack.iterator() --> Line_33 $$ sbf.append(" -> " + ((Object[]) iter.next())[0]) [FD]
Line_32 $$ while (iter.hasNext()) --> Line_34 $$ iter.remove() [CD]
Line_31 $$ Iterator iter = nodestack.iterator() --> Line_34 $$ iter.remove() [FD]
Line_30 $$ StringBuffer sbf = new StringBuffer(message + " \n " + xmlpath) --> Line_36 $$ AssertionFailedError a = new AssertionFailedError(sbf.toString()) [FD]
Line_36 $$ AssertionFailedError a = new AssertionFailedError(sbf.toString()) --> Line_37 $$ a.setStackTrace(e.getStackTrace()) [FD]
Line_41 $$ if (null != e.getCause()) --> Line_42 $$ message = e.getCause().getMessage() [CD]
Line_24 $$ String message = null --> Line_42 $$ message = e.getCause().getMessage() [FD]
Line_26 $$ message = e.getCause().getMessage() --> Line_42 $$ message = e.getCause().getMessage() [FD]
Line_28 $$ message = e.getMessage() --> Line_42 $$ message = e.getCause().getMessage() [FD]
Line_41 $$ if (null != e.getCause()) --> Line_44 $$ message = e.getMessage() [CD]
Line_24 $$ String message = null --> Line_44 $$ message = e.getMessage() [FD]
Line_26 $$ message = e.getCause().getMessage() --> Line_44 $$ message = e.getMessage() [FD]
Line_28 $$ message = e.getMessage() --> Line_44 $$ message = e.getMessage() [FD]
Line_42 $$ message = e.getCause().getMessage() --> Line_44 $$ message = e.getMessage() [FD]
Line_31 $$ Iterator iter = nodestack.iterator() --> Line_48 $$ while (iter.hasNext()) [FD]
Line_48 $$ while (iter.hasNext()) --> Line_49 $$ sbf.append(" -> " + ((Object[]) iter.next())[0]) [CD]
Line_30 $$ StringBuffer sbf = new StringBuffer(message + " \n " + xmlpath) --> Line_49 $$ sbf.append(" -> " + ((Object[]) iter.next())[0]) [FD]
Line_31 $$ Iterator iter = nodestack.iterator() --> Line_49 $$ sbf.append(" -> " + ((Object[]) iter.next())[0]) [FD]
Line_48 $$ while (iter.hasNext()) --> Line_50 $$ iter.remove() [CD]
Line_31 $$ Iterator iter = nodestack.iterator() --> Line_50 $$ iter.remove() [FD]
Line_30 $$ StringBuffer sbf = new StringBuffer(message + " \n " + xmlpath) --> Line_52 $$ Exception ex = new Exception(sbf.toString()) [FD]
Line_52 $$ Exception ex = new Exception(sbf.toString()) --> Line_53 $$ ex.setStackTrace(e.getStackTrace()) [FD]
