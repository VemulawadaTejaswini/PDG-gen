Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_3 $$ new Thread(new Runnable() [CD]
Line_3 $$ new Thread(new Runnable() --> Line_5 $$ Log.d(LOG_TAG, "Fetching " + url) [CD]
Line_3 $$ new Thread(new Runnable() --> Line_6 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext) [CD]
Line_3 $$ new Thread(new Runnable() --> Line_7 $$ dbHelper.open() [CD]
Line_6 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext) --> Line_7 $$ dbHelper.open() [FD]
Line_3 $$ new Thread(new Runnable() --> Line_8 $$ boolean errorOccurred = true [CD]
Line_3 $$ new Thread(new Runnable() --> Line_9 $$ int notifyId = 0 [CD]
Line_3 $$ new Thread(new Runnable() --> Line_10 $$ String host = AppUtils.getHostFromUrl(url) [CD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_10 $$ String host = AppUtils.getHostFromUrl(url) [FD]
Line_10 $$ String host = AppUtils.getHostFromUrl(url) --> Line_12 $$ if (host == null) [FD]
Line_12 $$ if (host == null) --> Line_13 $$ Log.d(LOG_TAG, "Bad url " + url) [CD]
Line_12 $$ if (host == null) --> Line_14 $$ errorOccurred = true [CD]
Line_8 $$ boolean errorOccurred = true --> Line_14 $$ errorOccurred = true [FD]
Line_12 $$ if (host == null) --> Line_16 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0) [CD]
Line_9 $$ int notifyId = 0 --> Line_16 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0) [FD]
Line_12 $$ if (host == null) --> Line_17 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext) [CD]
Line_12 $$ if (host == null) --> Line_18 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent)) [CD]
Line_17 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext) --> Line_18 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent)) [FD]
Line_12 $$ if (host == null) --> Line_19 $$ Log.d(LOG_TAG, "Using user agent=" + userAgent) [CD]
Line_12 $$ if (host == null) --> Line_20 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent) [CD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_20 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent) [FD]
Line_18 $$ String userAgent = sp.getString(mContext.getString(R.string.pref_key_user_agent), mContext.getString(R.string.default_user_agent)) --> Line_20 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent) [FD]
Line_12 $$ if (host == null) --> Line_21 $$ URI uri = new URI(url) [CD]
Line_12 $$ if (host == null) --> Line_22 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null) [CD]
Line_21 $$ URI uri = new URI(url) --> Line_22 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null) [FD]
Line_12 $$ if (host == null) --> Line_23 $$ norm = norm.normalize() [CD]
Line_22 $$ URI norm = new URI(uri.getScheme().toLowerCase(), uri.getUserInfo(), uri.getHost().toLowerCase(), uri.getPort(), uri.getPath(), uri.getQuery(), null) --> Line_23 $$ norm = norm.normalize() [FD]
Line_12 $$ if (host == null) --> Line_24 $$ HttpUriRequest get = new HttpGet(norm) [CD]
Line_12 $$ if (host == null) --> Line_25 $$ HttpResponse response = ahc.execute(get) [CD]
Line_20 $$ AndroidHttpClient ahc = AndroidHttpClient.newInstance(mContext, url, userAgent) --> Line_25 $$ HttpResponse response = ahc.execute(get) [FD]
Line_24 $$ HttpUriRequest get = new HttpGet(norm) --> Line_25 $$ HttpResponse response = ahc.execute(get) [FD]
Line_12 $$ if (host == null) --> Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) [CD]
Line_25 $$ HttpResponse response = ahc.execute(get) --> Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_27 $$ HttpEntity entity = response.getEntity() [CD]
Line_25 $$ HttpResponse response = ahc.execute(get) --> Line_27 $$ HttpEntity entity = response.getEntity() [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_28 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_29 $$ entity.writeTo(baos) [CD]
Line_27 $$ HttpEntity entity = response.getEntity() --> Line_29 $$ entity.writeTo(baos) [FD]
Line_28 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_29 $$ entity.writeTo(baos) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_30 $$ String data = baos.toString() [CD]
Line_28 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_30 $$ String data = baos.toString() [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_31 $$ for (int i = 0; i < undesirables.length; i++) [CD]
Line_31 $$ for (int i = 0; i < undesirables.length; i++) --> Line_32 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL) [CD]
Line_31 $$ for (int i = 0; i < undesirables.length; i++) --> Line_33 $$ data = data.replaceAll(p.pattern(), "") [CD]
Line_30 $$ String data = baos.toString() --> Line_33 $$ data = data.replaceAll(p.pattern(), "") [FD]
Line_32 $$ Pattern p = Pattern.compile(undesirables[i], Pattern.CASE_INSENSITIVE | Pattern.DOTALL) --> Line_33 $$ data = data.replaceAll(p.pattern(), "") [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_35 $$ long sysMillis = System.currentTimeMillis() [CD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_36 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false)) [CD]
Line_35 $$ long sysMillis = System.currentTimeMillis() --> Line_36 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false)) [FD]
Line_17 $$ SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(mContext) --> Line_36 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false)) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_37 $$ FileOutputStream strm = new FileOutputStream(newFileName) [CD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_38 $$ Log.d(LOG_TAG, "Writing to " + newFileName + " for url " + url) [CD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_39 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext) [CD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_40 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS) [CD]
Line_39 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext) --> Line_40 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_41 $$ strm.write(jsData.getBytes()) [CD]
Line_37 $$ FileOutputStream strm = new FileOutputStream(newFileName) --> Line_41 $$ strm.write(jsData.getBytes()) [FD]
Line_39 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext) --> Line_41 $$ strm.write(jsData.getBytes()) [FD]
Line_40 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS) --> Line_41 $$ strm.write(jsData.getBytes()) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_42 $$ strm.write(data.getBytes()) [CD]
Line_37 $$ FileOutputStream strm = new FileOutputStream(newFileName) --> Line_42 $$ strm.write(data.getBytes()) [FD]
Line_33 $$ data = data.replaceAll(p.pattern(), "") --> Line_42 $$ strm.write(data.getBytes()) [FD]
Line_30 $$ String data = baos.toString() --> Line_42 $$ strm.write(data.getBytes()) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_43 $$ strm.write(jsData.getBytes()) [CD]
Line_37 $$ FileOutputStream strm = new FileOutputStream(newFileName) --> Line_43 $$ strm.write(jsData.getBytes()) [FD]
Line_39 $$ String jsData = AppUtils.fromRawResourceFile(R.raw.retain_loadcolors, mContext) --> Line_43 $$ strm.write(jsData.getBytes()) [FD]
Line_40 $$ jsData = jsData.replaceAll("@css_file", RETAIN_COLORS_CSS) --> Line_43 $$ strm.write(jsData.getBytes()) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_44 $$ strm.flush() [CD]
Line_37 $$ FileOutputStream strm = new FileOutputStream(newFileName) --> Line_44 $$ strm.flush() [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_45 $$ strm.close() [CD]
Line_37 $$ FileOutputStream strm = new FileOutputStream(newFileName) --> Line_45 $$ strm.close() [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_46 $$ String entryName = getTitle(newFileName, url) [CD]
Line_36 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false)) --> Line_46 $$ String entryName = getTitle(newFileName, url) [FD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_46 $$ String entryName = getTitle(newFileName, url) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_47 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis) [CD]
Line_6 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext) --> Line_47 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis) [FD]
Line_46 $$ String entryName = getTitle(newFileName, url) --> Line_47 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis) [FD]
Line_36 $$ String newFileName = getPath(sysMillis, sp.getBoolean(mContext.getString(R.string.pref_key_store_sdcard), false)) --> Line_47 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis) [FD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_47 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis) [FD]
Line_35 $$ long sysMillis = System.currentTimeMillis() --> Line_47 $$ long newRowId = dbHelper.createEntry(entryName, newFileName, url, sysMillis) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_48 $$ postToast("Downloaded \"" + entryName + "\"") [CD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_49 $$ errorOccurred = false [CD]
Line_8 $$ boolean errorOccurred = true --> Line_49 $$ errorOccurred = false [FD]
Line_14 $$ errorOccurred = true --> Line_49 $$ errorOccurred = false [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_50 $$ if (deleteRowId != 0) [CD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_50 $$ if (deleteRowId != 0) [FD]
Line_50 $$ if (deleteRowId != 0) --> Line_51 $$ Log.d(LOG_TAG, "Deleting rowId=" + deleteRowId) [CD]
Line_50 $$ if (deleteRowId != 0) --> Line_52 $$ dbHelper.deleteEntry(deleteRowId) [CD]
Line_6 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext) --> Line_52 $$ dbHelper.deleteEntry(deleteRowId) [FD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_52 $$ dbHelper.deleteEntry(deleteRowId) [FD]
Line_50 $$ if (deleteRowId != 0) --> Line_53 $$ postToast("Item Deleted") [CD]
Line_2 $$ public void download(final String url, final long deleteRowId) --> Line_53 $$ postToast("Item Deleted") [FD]
Line_50 $$ if (deleteRowId != 0) --> Line_54 $$ mContext.startActivity(new Intent(mContext, RetainActivity.class)) [CD]
Line_50 $$ if (deleteRowId != 0) --> Line_56 $$ showNotification("Download Complete", entryName, android.R.drawable.stat_sys_download_done, newRowId) [CD]
Line_46 $$ String entryName = getTitle(newFileName, url) --> Line_56 $$ showNotification("Download Complete", entryName, android.R.drawable.stat_sys_download_done, newRowId) [FD]
Line_26 $$ if (response.getStatusLine().getStatusCode() == 200) --> Line_59 $$ Log.e(LOG_TAG, "Response code=" + String.valueOf(response.getStatusLine().getStatusCode())) [CD]
Line_25 $$ HttpResponse response = ahc.execute(get) --> Line_59 $$ Log.e(LOG_TAG, "Response code=" + String.valueOf(response.getStatusLine().getStatusCode())) [FD]
Line_3 $$ new Thread(new Runnable() --> Line_71 $$ hideNotification(notifyId) [CD]
Line_9 $$ int notifyId = 0 --> Line_71 $$ hideNotification(notifyId) [FD]
Line_16 $$ notifyId = showNotification("Fetching " + host, "Fetching " + host, android.R.drawable.stat_sys_download, 0) --> Line_71 $$ hideNotification(notifyId) [FD]
Line_3 $$ new Thread(new Runnable() --> Line_72 $$ if (errorOccurred && host != null) [CD]
Line_8 $$ boolean errorOccurred = true --> Line_72 $$ if (errorOccurred && host != null) [FD]
Line_14 $$ errorOccurred = true --> Line_72 $$ if (errorOccurred && host != null) [FD]
Line_49 $$ errorOccurred = false --> Line_72 $$ if (errorOccurred && host != null) [FD]
Line_72 $$ if (errorOccurred && host != null) --> Line_73 $$ showNotification("Error Downloading", host, android.R.drawable.stat_notify_error, 0) [CD]
Line_10 $$ String host = AppUtils.getHostFromUrl(url) --> Line_73 $$ showNotification("Error Downloading", host, android.R.drawable.stat_notify_error, 0) [FD]
Line_72 $$ if (errorOccurred && host != null) --> Line_74 $$ postToast("Error fetching " + host) [CD]
Line_3 $$ new Thread(new Runnable() --> Line_76 $$ dbHelper.close() [CD]
Line_6 $$ WebDbAdapter dbHelper = new WebDbAdapter(mContext) --> Line_76 $$ dbHelper.close() [FD]
