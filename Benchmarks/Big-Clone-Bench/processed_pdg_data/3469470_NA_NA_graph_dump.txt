Line_2 $$ public static String encrypt(String text) --> Line_3 $$ char[] toEncrypt = text.toCharArray() [CD]
Line_2 $$ public static String encrypt(String text) --> Line_3 $$ char[] toEncrypt = text.toCharArray() [FD]
Line_2 $$ public static String encrypt(String text) --> Line_4 $$ StringBuffer hexString = new StringBuffer() [CD]
Line_6 $$ MessageDigest dig = MessageDigest.getInstance("MD5") --> Line_7 $$ dig.reset() [FD]
Line_9 $$ for (int i = 0; i < toEncrypt.length; i++) --> Line_10 $$ pw += toEncrypt[i] [CD]
Line_8 $$ String pw = "" --> Line_10 $$ pw += toEncrypt[i] [FD]
Line_6 $$ MessageDigest dig = MessageDigest.getInstance("MD5") --> Line_12 $$ dig.update(pw.getBytes()) [FD]
Line_10 $$ pw += toEncrypt[i] --> Line_12 $$ dig.update(pw.getBytes()) [FD]
Line_8 $$ String pw = "" --> Line_12 $$ dig.update(pw.getBytes()) [FD]
Line_6 $$ MessageDigest dig = MessageDigest.getInstance("MD5") --> Line_13 $$ byte[] digest = dig.digest() [FD]
Line_9 $$ for (int i = 0; i < toEncrypt.length; i++) --> Line_15 $$ for (int i = 0; i < digestLength; i++) [FD]
Line_14 $$ int digestLength = digest.length --> Line_15 $$ for (int i = 0; i < digestLength; i++) [FD]
Line_15 $$ for (int i = 0; i < digestLength; i++) --> Line_16 $$ hexString.append(hexDigit(digest[i])) [CD]
Line_4 $$ StringBuffer hexString = new StringBuffer() --> Line_16 $$ hexString.append(hexDigit(digest[i])) [FD]
Line_2 $$ public static String encrypt(String text) --> Line_21 $$ return hexString.toString() [CD]
Line_4 $$ StringBuffer hexString = new StringBuffer() --> Line_21 $$ return hexString.toString() [FD]
