Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_3 $$ HttpData data = new HttpData() [CD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_5 $$ postMethod.addHeader("Content-Type", "text/xml; charset=utf-8") [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_6 $$ postMethod.addHeader("Connection", "Keep-Alive") [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_7 $$ postMethod.addHeader("User-Agent", "Openwave") [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_9 $$ postMethod.setEntity(se) [FD]
Line_8 $$ StringEntity se = new StringEntity(xml, HTTP.UTF_8) --> Line_9 $$ postMethod.setEntity(se) [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_10 $$ printPostRequestHeader(postMethod) [FD]
Line_11 $$ HttpParams httpParams = new BasicHttpParams() --> Line_12 $$ HttpConnectionParams.setConnectionTimeout(httpParams, HTTP_TIMEOUT) [FD]
Line_13 $$ HttpClient client = new DefaultHttpClient(httpParams) --> Line_14 $$ client.getParams().setIntParameter(HttpConnectionParams.CONNECTION_TIMEOUT, DEFAULT_POST_REQUEST_TIMEOUT) [FD]
Line_13 $$ HttpClient client = new DefaultHttpClient(httpParams) --> Line_15 $$ client.getParams().setIntParameter(HttpConnectionParams.SO_TIMEOUT, DEFAULT_POST_REQUEST_TIMEOUT) [FD]
Line_13 $$ HttpClient client = new DefaultHttpClient(httpParams) --> Line_16 $$ HttpResponse httpResponse = client.execute(postMethod) [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_16 $$ HttpResponse httpResponse = client.execute(postMethod) [FD]
Line_16 $$ HttpResponse httpResponse = client.execute(postMethod) --> Line_17 $$ if (httpResponse == null) [FD]
Line_16 $$ HttpResponse httpResponse = client.execute(postMethod) --> Line_18 $$ if (httpResponse.getStatusLine().getStatusCode() == 200) [FD]
Line_18 $$ if (httpResponse.getStatusLine().getStatusCode() == 200) --> Line_19 $$ byte bytearray[] = ImageInputStream(httpResponse.getEntity()) [CD]
Line_16 $$ HttpResponse httpResponse = client.execute(postMethod) --> Line_19 $$ byte bytearray[] = ImageInputStream(httpResponse.getEntity()) [FD]
Line_18 $$ if (httpResponse.getStatusLine().getStatusCode() == 200) --> Line_20 $$ data.setByteArray(bytearray) [CD]
Line_3 $$ HttpData data = new HttpData() --> Line_20 $$ data.setByteArray(bytearray) [FD]
Line_18 $$ if (httpResponse.getStatusLine().getStatusCode() == 200) --> Line_22 $$ data.setStatusCode(httpResponse.getStatusLine().getStatusCode() + "") [CD]
Line_3 $$ HttpData data = new HttpData() --> Line_22 $$ data.setStatusCode(httpResponse.getStatusLine().getStatusCode() + "") [FD]
Line_16 $$ HttpResponse httpResponse = client.execute(postMethod) --> Line_22 $$ data.setStatusCode(httpResponse.getStatusLine().getStatusCode() + "") [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_33 $$ postMethod.abort() [FD]
Line_2 $$ public static HttpData postRequest(HttpPost postMethod, String xml) throws ClientProtocolException, SocketException, IOException, SocketTimeoutException --> Line_35 $$ return data [CD]
