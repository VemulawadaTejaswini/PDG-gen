Line_2 $$ private Concept fetchDataNeeded(String conceptUri) --> Line_3 $$ if (cache.size() > MAX_CACHE) [CD]
Line_2 $$ private Concept fetchDataNeeded(String conceptUri) --> Line_4 $$ if (cache.containsKey(conceptUri)) [CD]
Line_2 $$ private Concept fetchDataNeeded(String conceptUri) --> Line_4 $$ if (cache.containsKey(conceptUri)) [FD]
Line_6 $$ URL url = new URL(conceptUri) --> Line_7 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() [FD]
Line_7 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_8 $$ connection.setInstanceFollowRedirects(true) [FD]
Line_7 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_9 $$ connection.setRequestProperty("Accept", "application/rdf+xml") [FD]
Line_7 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_11 $$ InputStream is = connection.getInputStream() [CD]
Line_7 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_11 $$ InputStream is = connection.getInputStream() [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_12 $$ HashMap<String, String> parameters = new HashMap<String, String>() [CD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_13 $$ parameters.put("uri", conceptUri) [CD]
Line_12 $$ HashMap<String, String> parameters = new HashMap<String, String>() --> Line_13 $$ parameters.put("uri", conceptUri) [FD]
Line_2 $$ private Concept fetchDataNeeded(String conceptUri) --> Line_13 $$ parameters.put("uri", conceptUri) [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_14 $$ Transformer tf = this.templates.getDAOTransformer(keyTemplates, parameters) [CD]
Line_12 $$ HashMap<String, String> parameters = new HashMap<String, String>() --> Line_14 $$ Transformer tf = this.templates.getDAOTransformer(keyTemplates, parameters) [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_15 $$ DOMResult outputTarget = new DOMResult() [CD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_16 $$ tf.transform(new StreamSource(is), outputTarget) [CD]
Line_14 $$ Transformer tf = this.templates.getDAOTransformer(keyTemplates, parameters) --> Line_16 $$ tf.transform(new StreamSource(is), outputTarget) [FD]
Line_15 $$ DOMResult outputTarget = new DOMResult() --> Line_16 $$ tf.transform(new StreamSource(is), outputTarget) [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_17 $$ Concept concept = ConceptXMLBind.getInstance().restoreConcept(outputTarget.getNode()) [CD]
Line_15 $$ DOMResult outputTarget = new DOMResult() --> Line_17 $$ Concept concept = ConceptXMLBind.getInstance().restoreConcept(outputTarget.getNode()) [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_18 $$ this.cache.put(conceptUri, concept) [CD]
Line_2 $$ private Concept fetchDataNeeded(String conceptUri) --> Line_18 $$ this.cache.put(conceptUri, concept) [FD]
Line_17 $$ Concept concept = ConceptXMLBind.getInstance().restoreConcept(outputTarget.getNode()) --> Line_18 $$ this.cache.put(conceptUri, concept) [FD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_19 $$ return concept [CD]
Line_10 $$ if (connection.getResponseCode() == HttpURLConnection.HTTP_OK && connection.getContentType().contains("application/rdf+xml")) --> Line_21 $$ logger.error("Unable to get a representation of the resource: " + connection.getResponseCode() + " => " + connection.getContentType()) [CD]
Line_7 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_21 $$ logger.error("Unable to get a representation of the resource: " + connection.getResponseCode() + " => " + connection.getContentType()) [FD]
