Line_2 $$ public void testAddFiles() throws Exception --> Line_3 $$ File original = ZipPlugin.getFileInPlugin(new Path("testresources/test.zip")) [CD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_4 $$ File copy = new File(original.getParentFile(), "1test.zip") [CD]
Line_3 $$ File original = ZipPlugin.getFileInPlugin(new Path("testresources/test.zip")) --> Line_4 $$ File copy = new File(original.getParentFile(), "1test.zip") [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_5 $$ InputStream in = null [CD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_6 $$ OutputStream out = null [CD]
Line_5 $$ InputStream in = null --> Line_8 $$ in = new FileInputStream(original) [FD]
Line_6 $$ OutputStream out = null --> Line_9 $$ out = new FileOutputStream(copy) [FD]
Line_11 $$ int len --> Line_12 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_5 $$ InputStream in = null --> Line_12 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_8 $$ in = new FileInputStream(original) --> Line_12 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_10 $$ byte[] buf = new byte[1024] --> Line_12 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_6 $$ OutputStream out = null --> Line_12 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_9 $$ out = new FileOutputStream(copy) --> Line_12 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_5 $$ InputStream in = null --> Line_14 $$ Util.close(in) [FD]
Line_8 $$ in = new FileInputStream(original) --> Line_14 $$ Util.close(in) [FD]
Line_6 $$ OutputStream out = null --> Line_15 $$ Util.close(out) [FD]
Line_9 $$ out = new FileOutputStream(copy) --> Line_15 $$ Util.close(out) [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_17 $$ ArchiveFile archive = new ArchiveFile(ZipPlugin.createArchive(copy.getPath())) [CD]
Line_4 $$ File copy = new File(original.getParentFile(), "1test.zip") --> Line_17 $$ ArchiveFile archive = new ArchiveFile(ZipPlugin.createArchive(copy.getPath())) [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_18 $$ archive.addFiles(new String[] [CD]
Line_17 $$ ArchiveFile archive = new ArchiveFile(ZipPlugin.createArchive(copy.getPath())) --> Line_18 $$ archive.addFiles(new String[] [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_19 $$ IArchive[] children = archive.getChildren() [CD]
Line_17 $$ ArchiveFile archive = new ArchiveFile(ZipPlugin.createArchive(copy.getPath())) --> Line_19 $$ IArchive[] children = archive.getChildren() [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_20 $$ boolean found = false [CD]
Line_21 $$ for (IArchive child : children) --> Line_22 $$ if (child.getLabel(IArchive.NAME).equals("add.txt")) [FD]
Line_20 $$ boolean found = false --> Line_22 $$ if (child.getLabel(IArchive.NAME).equals("add.txt")) [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_24 $$ assertTrue(found) [CD]
Line_20 $$ boolean found = false --> Line_24 $$ assertTrue(found) [FD]
Line_22 $$ if (child.getLabel(IArchive.NAME).equals("add.txt")) --> Line_24 $$ assertTrue(found) [FD]
Line_2 $$ public void testAddFiles() throws Exception --> Line_25 $$ copy.delete() [CD]
Line_4 $$ File copy = new File(original.getParentFile(), "1test.zip") --> Line_25 $$ copy.delete() [FD]
