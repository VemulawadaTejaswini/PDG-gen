Line_2 $$ public ServiceAdapterIfc deploy(String session, String name, byte jarBytes[], String jarName, String serviceClass, String serviceInterface) throws RemoteException, MalformedURLException, StartServiceException, SessionException --> Line_5 $$ jarName = jarFile.getName() [FD]
Line_4 $$ File jarFile = new File(jarName) --> Line_5 $$ jarName = jarFile.getName() [FD]
Line_4 $$ File jarFile = new File(jarName) --> Line_7 $$ jarFile = new File(jarName2) [FD]
Line_4 $$ File jarFile = new File(jarName) --> Line_9 $$ while (jarFile.exists()) [FD]
Line_7 $$ jarFile = new File(jarName2) --> Line_9 $$ while (jarFile.exists()) [FD]
Line_9 $$ while (jarFile.exists()) --> Line_10 $$ jarName2 = jarName + n++ [CD]
Line_6 $$ String jarName2 = jarName --> Line_10 $$ jarName2 = jarName + n++ [FD]
Line_2 $$ public ServiceAdapterIfc deploy(String session, String name, byte jarBytes[], String jarName, String serviceClass, String serviceInterface) throws RemoteException, MalformedURLException, StartServiceException, SessionException --> Line_10 $$ jarName2 = jarName + n++ [FD]
Line_5 $$ jarName = jarFile.getName() --> Line_10 $$ jarName2 = jarName + n++ [FD]
Line_8 $$ int n = 0 --> Line_10 $$ jarName2 = jarName + n++ [FD]
Line_9 $$ while (jarFile.exists()) --> Line_11 $$ jarFile = new File(jarName2) [CD]
Line_4 $$ File jarFile = new File(jarName) --> Line_11 $$ jarFile = new File(jarName2) [FD]
Line_7 $$ jarFile = new File(jarName2) --> Line_11 $$ jarFile = new File(jarName2) [FD]
Line_13 $$ FileOutputStream fos = new FileOutputStream(jarName2) --> Line_14 $$ IOUtils.copy(new ByteArrayInputStream(jarBytes), fos) [FD]
Line_11 $$ jarFile = new File(jarName2) --> Line_15 $$ SCClassLoader cl = new SCClassLoader(new URL[] [FD]
Line_4 $$ File jarFile = new File(jarName) --> Line_15 $$ SCClassLoader cl = new SCClassLoader(new URL[] [FD]
Line_7 $$ jarFile = new File(jarName2) --> Line_15 $$ SCClassLoader cl = new SCClassLoader(new URL[] [FD]
Line_2 $$ public ServiceAdapterIfc deploy(String session, String name, byte jarBytes[], String jarName, String serviceClass, String serviceInterface) throws RemoteException, MalformedURLException, StartServiceException, SessionException --> Line_16 $$ return startService(session, name, serviceClass, serviceInterface, cl) [FD]
Line_15 $$ SCClassLoader cl = new SCClassLoader(new URL[] --> Line_16 $$ return startService(session, name, serviceClass, serviceInterface, cl) [FD]
Line_11 $$ jarFile = new File(jarName2) --> Line_9 $$ while (jarFile.exists()) [FD]
