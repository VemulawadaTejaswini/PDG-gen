Line_2 $$ public static void main(String[] args) --> Line_3 $$ if (args.length < 1) [CD]
Line_3 $$ if (args.length < 1) --> Line_4 $$ System.out.println("Parameters:  method arg1 arg2 arg3 etc") [CD]
Line_3 $$ if (args.length < 1) --> Line_5 $$ System.out.println("") [CD]
Line_3 $$ if (args.length < 1) --> Line_6 $$ System.out.println("Methods:") [CD]
Line_3 $$ if (args.length < 1) --> Line_7 $$ System.out.println("    reloadpolicies") [CD]
Line_3 $$ if (args.length < 1) --> Line_8 $$ System.out.println("    migratedatastreamcontrolgroup") [CD]
Line_3 $$ if (args.length < 1) --> Line_9 $$ System.exit(0) [CD]
Line_2 $$ public static void main(String[] args) --> Line_11 $$ String method = args[0].toLowerCase() [CD]
Line_2 $$ public static void main(String[] args) --> Line_12 $$ if (method.equals("reloadpolicies")) [CD]
Line_11 $$ String method = args[0].toLowerCase() --> Line_12 $$ if (method.equals("reloadpolicies")) [FD]
Line_12 $$ if (method.equals("reloadpolicies")) --> Line_13 $$ if (args.length == 4) [CD]
Line_13 $$ if (args.length == 4) --> Line_24 $$ System.err.println("ERROR: Three arguments required: " + "http|https username password") [CD]
Line_13 $$ if (args.length == 4) --> Line_25 $$ System.exit(1) [CD]
Line_12 $$ if (method.equals("reloadpolicies")) --> Line_27 $$ if (method.equals("migratedatastreamcontrolgroup")) [CD]
Line_11 $$ String method = args[0].toLowerCase() --> Line_27 $$ if (method.equals("migratedatastreamcontrolgroup")) [FD]
Line_27 $$ if (method.equals("migratedatastreamcontrolgroup")) --> Line_28 $$ if (args.length > 10) [CD]
Line_28 $$ if (args.length > 10) --> Line_29 $$ System.err.println("ERROR: too many arguments provided") [CD]
Line_28 $$ if (args.length > 10) --> Line_30 $$ System.exit(1) [CD]
Line_27 $$ if (method.equals("migratedatastreamcontrolgroup")) --> Line_32 $$ if (args.length < 7) [CD]
Line_32 $$ if (args.length < 7) --> Line_33 $$ System.err.println("ERROR: insufficient arguments provided.  Arguments are: ") [CD]
Line_32 $$ if (args.length < 7) --> Line_34 $$ System.err.println("    protocol [http|https]") [CD]
Line_32 $$ if (args.length < 7) --> Line_35 $$ System.err.println("    user") [CD]
Line_32 $$ if (args.length < 7) --> Line_36 $$ System.err.println("    password") [CD]
Line_32 $$ if (args.length < 7) --> Line_37 $$ System.err.println("    pid - either") [CD]
Line_32 $$ if (args.length < 7) --> Line_38 $$ System.err.println("        a single pid, eg demo:object") [CD]
Line_32 $$ if (args.length < 7) --> Line_39 $$ System.err.println("        list of pids separated by commas, eg demo:object1,demo:object2") [CD]
Line_32 $$ if (args.length < 7) --> Line_40 $$ System.err.println("        name of file containing pids, eg file:///path/to/file") [CD]
Line_32 $$ if (args.length < 7) --> Line_41 $$ System.err.println("    dsid - either") [CD]
Line_32 $$ if (args.length < 7) --> Line_42 $$ System.err.println("        a single datastream id, eg DC") [CD]
Line_32 $$ if (args.length < 7) --> Line_43 $$ System.err.println("        list of ids separated by commas, eg DC,RELS-EXT") [CD]
Line_32 $$ if (args.length < 7) --> Line_44 $$ System.err.println("    controlGroup - target control group (note only M is implemented)") [CD]
Line_32 $$ if (args.length < 7) --> Line_45 $$ System.err.println("    addXMLHeader - add an XML header to the datastream [true|false, default false]") [CD]
Line_32 $$ if (args.length < 7) --> Line_46 $$ System.err.println("    reformat - reformat the XML [true|false, default false]") [CD]
Line_32 $$ if (args.length < 7) --> Line_47 $$ System.err.println("    setMIMETypeCharset - add charset=UTF-8 to the MIMEType [true|false, default false]") [CD]
Line_32 $$ if (args.length < 7) --> Line_48 $$ System.exit(1) [CD]
Line_2 $$ public static void main(String[] args) --> Line_51 $$ boolean addXMLHeader = getArgBoolean(args, 7, false) [FD]
Line_2 $$ public static void main(String[] args) --> Line_52 $$ boolean reformat = getArgBoolean(args, 8, false) [FD]
Line_2 $$ public static void main(String[] args) --> Line_53 $$ boolean setMIMETypeCharset = getArgBoolean(args, 9, false) [FD]
Line_51 $$ boolean addXMLHeader = getArgBoolean(args, 7, false) --> Line_55 $$ InputStream is = modifyDatastreamControlGroup(args[1], args[2], args[3], args[4], args[5], args[6], addXMLHeader, reformat, setMIMETypeCharset) [FD]
Line_52 $$ boolean reformat = getArgBoolean(args, 8, false) --> Line_55 $$ InputStream is = modifyDatastreamControlGroup(args[1], args[2], args[3], args[4], args[5], args[6], addXMLHeader, reformat, setMIMETypeCharset) [FD]
Line_53 $$ boolean setMIMETypeCharset = getArgBoolean(args, 9, false) --> Line_55 $$ InputStream is = modifyDatastreamControlGroup(args[1], args[2], args[3], args[4], args[5], args[6], addXMLHeader, reformat, setMIMETypeCharset) [FD]
Line_55 $$ InputStream is = modifyDatastreamControlGroup(args[1], args[2], args[3], args[4], args[5], args[6], addXMLHeader, reformat, setMIMETypeCharset) --> Line_56 $$ IOUtils.copy(is, System.out) [FD]
Line_55 $$ InputStream is = modifyDatastreamControlGroup(args[1], args[2], args[3], args[4], args[5], args[6], addXMLHeader, reformat, setMIMETypeCharset) --> Line_57 $$ is.close() [FD]
Line_27 $$ if (method.equals("migratedatastreamcontrolgroup")) --> Line_66 $$ System.err.println("ERROR: unrecognised method " + method) [CD]
Line_27 $$ if (method.equals("migratedatastreamcontrolgroup")) --> Line_67 $$ System.exit(1) [CD]
