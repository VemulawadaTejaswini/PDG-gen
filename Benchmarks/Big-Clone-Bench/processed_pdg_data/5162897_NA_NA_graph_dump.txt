Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_3 $$ String host = "localhost" [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_4 $$ int port = this.localServer.getServicePort() [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_5 $$ this.localServer.register("*", new BasicRedirectService(host, port)) [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_6 $$ DefaultHttpClient client = new DefaultHttpClient() [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_7 $$ HttpContext context = new BasicHttpContext() [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_8 $$ List<Header> defaultHeaders = new ArrayList<Header>(1) [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_9 $$ defaultHeaders.add(new BasicHeader(HTTP.USER_AGENT, "my-test-client")) [CD]
Line_8 $$ List<Header> defaultHeaders = new ArrayList<Header>(1) --> Line_9 $$ defaultHeaders.add(new BasicHeader(HTTP.USER_AGENT, "my-test-client")) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_10 $$ client.getParams().setParameter(ClientPNames.DEFAULT_HEADERS, defaultHeaders) [CD]
Line_8 $$ List<Header> defaultHeaders = new ArrayList<Header>(1) --> Line_10 $$ client.getParams().setParameter(ClientPNames.DEFAULT_HEADERS, defaultHeaders) [FD]
Line_6 $$ DefaultHttpClient client = new DefaultHttpClient() --> Line_10 $$ client.getParams().setParameter(ClientPNames.DEFAULT_HEADERS, defaultHeaders) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_11 $$ HttpGet httpget = new HttpGet("/oldlocation/") [CD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_12 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context) [CD]
Line_6 $$ DefaultHttpClient client = new DefaultHttpClient() --> Line_12 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context) [FD]
Line_11 $$ HttpGet httpget = new HttpGet("/oldlocation/") --> Line_12 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context) [FD]
Line_7 $$ HttpContext context = new BasicHttpContext() --> Line_12 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_13 $$ HttpEntity e = response.getEntity() [CD]
Line_12 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context) --> Line_13 $$ HttpEntity e = response.getEntity() [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_14 $$ if (e != null) [CD]
Line_13 $$ HttpEntity e = response.getEntity() --> Line_14 $$ if (e != null) [FD]
Line_14 $$ if (e != null) --> Line_15 $$ e.consumeContent() [CD]
Line_13 $$ HttpEntity e = response.getEntity() --> Line_15 $$ e.consumeContent() [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_17 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST) [CD]
Line_7 $$ HttpContext context = new BasicHttpContext() --> Line_17 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_18 $$ assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode()) [CD]
Line_12 $$ HttpResponse response = client.execute(getServerHttp(), httpget, context) --> Line_18 $$ assertEquals(HttpStatus.SC_OK, response.getStatusLine().getStatusCode()) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_19 $$ assertEquals("/newlocation/", reqWrapper.getRequestLine().getUri()) [CD]
Line_17 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST) --> Line_19 $$ assertEquals("/newlocation/", reqWrapper.getRequestLine().getUri()) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_20 $$ Header header = reqWrapper.getFirstHeader(HTTP.USER_AGENT) [CD]
Line_17 $$ HttpRequest reqWrapper = (HttpRequest) context.getAttribute(ExecutionContext.HTTP_REQUEST) --> Line_20 $$ Header header = reqWrapper.getFirstHeader(HTTP.USER_AGENT) [FD]
Line_2 $$ public void testDefaultHeadersRedirect() throws Exception --> Line_21 $$ assertEquals("my-test-client", header.getValue()) [CD]
Line_20 $$ Header header = reqWrapper.getFirstHeader(HTTP.USER_AGENT) --> Line_21 $$ assertEquals("my-test-client", header.getValue()) [FD]
