Line_2 $$ private void initialize() --> Line_3 $$ if (!initialized) [CD]
Line_3 $$ if (!initialized) --> Line_4 $$ if (context.getJavadocLinks() != null) [CD]
Line_5 $$ for (String url : context.getJavadocLinks()) --> Line_6 $$ if (!url.endsWith("/")) [FD]
Line_6 $$ if (!url.endsWith("/")) --> Line_7 $$ url += "/" [CD]
Line_5 $$ for (String url : context.getJavadocLinks()) --> Line_7 $$ url += "/" [FD]
Line_9 $$ StringWriter writer = new StringWriter() --> Line_11 $$ IOUtils.copy(new URL(url + "package-list").openStream(), writer) [FD]
Line_9 $$ StringWriter writer = new StringWriter() --> Line_16 $$ StringTokenizer tokenizer2 = new StringTokenizer(writer.toString()) [FD]
Line_16 $$ StringTokenizer tokenizer2 = new StringTokenizer(writer.toString()) --> Line_17 $$ while (tokenizer2.hasMoreTokens()) [FD]
Line_17 $$ while (tokenizer2.hasMoreTokens()) --> Line_18 $$ javadocByPackage.put(tokenizer2.nextToken(), url) [CD]
Line_5 $$ for (String url : context.getJavadocLinks()) --> Line_18 $$ javadocByPackage.put(tokenizer2.nextToken(), url) [FD]
Line_7 $$ url += "/" --> Line_18 $$ javadocByPackage.put(tokenizer2.nextToken(), url) [FD]
Line_16 $$ StringTokenizer tokenizer2 = new StringTokenizer(writer.toString()) --> Line_18 $$ javadocByPackage.put(tokenizer2.nextToken(), url) [FD]
