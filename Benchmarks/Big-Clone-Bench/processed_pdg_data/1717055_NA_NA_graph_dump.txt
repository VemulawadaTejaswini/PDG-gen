Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_4 $$ if (!newUserData.getAcceptsEULA()) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_4 $$ if (!newUserData.getAcceptsEULA()) [FD]
Line_4 $$ if (!newUserData.getAcceptsEULA()) --> Line_5 $$ pRequest.setAttribute("acceptsEULA", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_5 $$ pRequest.setAttribute("acceptsEULA", new Boolean(true)) [FD]
Line_4 $$ if (!newUserData.getAcceptsEULA()) --> Line_6 $$ pRequest.setAttribute("noEula", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_6 $$ pRequest.setAttribute("noEula", new Boolean(true)) [FD]
Line_4 $$ if (!newUserData.getAcceptsEULA()) --> Line_7 $$ return (pMapping.findForward("noeula")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_7 $$ return (pMapping.findForward("noeula")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_9 $$ if (newUserData.getAction().equals("none")) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_9 $$ if (newUserData.getAction().equals("none")) [FD]
Line_9 $$ if (newUserData.getAction().equals("none")) --> Line_10 $$ newUserData.setAction("submit") [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_10 $$ newUserData.setAction("submit") [FD]
Line_9 $$ if (newUserData.getAction().equals("none")) --> Line_11 $$ pRequest.setAttribute("UserdataBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_11 $$ pRequest.setAttribute("UserdataBad", new Boolean(true)) [FD]
Line_9 $$ if (newUserData.getAction().equals("none")) --> Line_12 $$ return (pMapping.findForward("success")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_12 $$ return (pMapping.findForward("success")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_14 $$ boolean userDataIsOk = true [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_15 $$ if (newUserData == null) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_15 $$ if (newUserData == null) [FD]
Line_15 $$ if (newUserData == null) --> Line_16 $$ return (pMapping.findForward("failure")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_16 $$ return (pMapping.findForward("failure")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_18 $$ if (newUserData.getLastName().length() < 2) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_18 $$ if (newUserData.getLastName().length() < 2) [FD]
Line_18 $$ if (newUserData.getLastName().length() < 2) --> Line_19 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_19 $$ userDataIsOk = false [FD]
Line_18 $$ if (newUserData.getLastName().length() < 2) --> Line_20 $$ pRequest.setAttribute("LastNameBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_20 $$ pRequest.setAttribute("LastNameBad", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_22 $$ if (newUserData.getFirstName().length() < 2) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_22 $$ if (newUserData.getFirstName().length() < 2) [FD]
Line_22 $$ if (newUserData.getFirstName().length() < 2) --> Line_23 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_23 $$ userDataIsOk = false [FD]
Line_19 $$ userDataIsOk = false --> Line_23 $$ userDataIsOk = false [FD]
Line_22 $$ if (newUserData.getFirstName().length() < 2) --> Line_24 $$ pRequest.setAttribute("FirstNameBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_24 $$ pRequest.setAttribute("FirstNameBad", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_26 $$ EmailValidator emailValidator = EmailValidator.getInstance() [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_27 $$ if (!emailValidator.isValid(newUserData.getEmailAddress())) [CD]
Line_26 $$ EmailValidator emailValidator = EmailValidator.getInstance() --> Line_27 $$ if (!emailValidator.isValid(newUserData.getEmailAddress())) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_27 $$ if (!emailValidator.isValid(newUserData.getEmailAddress())) [FD]
Line_27 $$ if (!emailValidator.isValid(newUserData.getEmailAddress())) --> Line_28 $$ pRequest.setAttribute("EmailBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_28 $$ pRequest.setAttribute("EmailBad", new Boolean(true)) [FD]
Line_27 $$ if (!emailValidator.isValid(newUserData.getEmailAddress())) --> Line_29 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_29 $$ userDataIsOk = false [FD]
Line_19 $$ userDataIsOk = false --> Line_29 $$ userDataIsOk = false [FD]
Line_23 $$ userDataIsOk = false --> Line_29 $$ userDataIsOk = false [FD]
Line_27 $$ if (!emailValidator.isValid(newUserData.getEmailAddress())) --> Line_31 $$ if (database.acquireUserByEmail(newUserData.getEmailAddress()) != null) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_31 $$ if (database.acquireUserByEmail(newUserData.getEmailAddress()) != null) [FD]
Line_31 $$ if (database.acquireUserByEmail(newUserData.getEmailAddress()) != null) --> Line_32 $$ pRequest.setAttribute("EmailDouble", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_32 $$ pRequest.setAttribute("EmailDouble", new Boolean(true)) [FD]
Line_31 $$ if (database.acquireUserByEmail(newUserData.getEmailAddress()) != null) --> Line_33 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_33 $$ userDataIsOk = false [FD]
Line_19 $$ userDataIsOk = false --> Line_33 $$ userDataIsOk = false [FD]
Line_23 $$ userDataIsOk = false --> Line_33 $$ userDataIsOk = false [FD]
Line_29 $$ userDataIsOk = false --> Line_33 $$ userDataIsOk = false [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_36 $$ if (newUserData.getFirstPassword().length() < 5) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_36 $$ if (newUserData.getFirstPassword().length() < 5) [FD]
Line_36 $$ if (newUserData.getFirstPassword().length() < 5) --> Line_37 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_37 $$ userDataIsOk = false [FD]
Line_19 $$ userDataIsOk = false --> Line_37 $$ userDataIsOk = false [FD]
Line_23 $$ userDataIsOk = false --> Line_37 $$ userDataIsOk = false [FD]
Line_29 $$ userDataIsOk = false --> Line_37 $$ userDataIsOk = false [FD]
Line_33 $$ userDataIsOk = false --> Line_37 $$ userDataIsOk = false [FD]
Line_36 $$ if (newUserData.getFirstPassword().length() < 5) --> Line_38 $$ pRequest.setAttribute("FirstPasswordBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_38 $$ pRequest.setAttribute("FirstPasswordBad", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_40 $$ if (newUserData.getSecondPassword().length() < 5) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_40 $$ if (newUserData.getSecondPassword().length() < 5) [FD]
Line_40 $$ if (newUserData.getSecondPassword().length() < 5) --> Line_41 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_41 $$ userDataIsOk = false [FD]
Line_19 $$ userDataIsOk = false --> Line_41 $$ userDataIsOk = false [FD]
Line_23 $$ userDataIsOk = false --> Line_41 $$ userDataIsOk = false [FD]
Line_29 $$ userDataIsOk = false --> Line_41 $$ userDataIsOk = false [FD]
Line_33 $$ userDataIsOk = false --> Line_41 $$ userDataIsOk = false [FD]
Line_37 $$ userDataIsOk = false --> Line_41 $$ userDataIsOk = false [FD]
Line_40 $$ if (newUserData.getSecondPassword().length() < 5) --> Line_42 $$ pRequest.setAttribute("SecondPasswordBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_42 $$ pRequest.setAttribute("SecondPasswordBad", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_44 $$ if (!newUserData.getSecondPassword().equals(newUserData.getFirstPassword())) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_44 $$ if (!newUserData.getSecondPassword().equals(newUserData.getFirstPassword())) [FD]
Line_44 $$ if (!newUserData.getSecondPassword().equals(newUserData.getFirstPassword())) --> Line_45 $$ userDataIsOk = false [CD]
Line_14 $$ boolean userDataIsOk = true --> Line_45 $$ userDataIsOk = false [FD]
Line_19 $$ userDataIsOk = false --> Line_45 $$ userDataIsOk = false [FD]
Line_23 $$ userDataIsOk = false --> Line_45 $$ userDataIsOk = false [FD]
Line_29 $$ userDataIsOk = false --> Line_45 $$ userDataIsOk = false [FD]
Line_33 $$ userDataIsOk = false --> Line_45 $$ userDataIsOk = false [FD]
Line_37 $$ userDataIsOk = false --> Line_45 $$ userDataIsOk = false [FD]
Line_41 $$ userDataIsOk = false --> Line_45 $$ userDataIsOk = false [FD]
Line_44 $$ if (!newUserData.getSecondPassword().equals(newUserData.getFirstPassword())) --> Line_46 $$ pRequest.setAttribute("PasswordsNotEqual", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_46 $$ pRequest.setAttribute("PasswordsNotEqual", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_48 $$ if (userDataIsOk) [CD]
Line_48 $$ if (userDataIsOk) --> Line_49 $$ User newUser = new User() [CD]
Line_48 $$ if (userDataIsOk) --> Line_50 $$ newUser.setFirstName(newUserData.getFirstName()) [CD]
Line_49 $$ User newUser = new User() --> Line_50 $$ newUser.setFirstName(newUserData.getFirstName()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_50 $$ newUser.setFirstName(newUserData.getFirstName()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_51 $$ newUser.setLastName(newUserData.getLastName()) [CD]
Line_49 $$ User newUser = new User() --> Line_51 $$ newUser.setLastName(newUserData.getLastName()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_51 $$ newUser.setLastName(newUserData.getLastName()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_52 $$ if (!newUserData.getFirstPassword().equals("")) [CD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_52 $$ if (!newUserData.getFirstPassword().equals("")) [FD]
Line_52 $$ if (!newUserData.getFirstPassword().equals("")) --> Line_53 $$ MessageDigest md [CD]
Line_53 $$ MessageDigest md --> Line_55 $$ md = MessageDigest.getInstance("SHA") [FD]
Line_53 $$ MessageDigest md --> Line_60 $$ md.update(newUserData.getFirstPassword().getBytes("UTF-8")) [FD]
Line_55 $$ md = MessageDigest.getInstance("SHA") --> Line_60 $$ md.update(newUserData.getFirstPassword().getBytes("UTF-8")) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_60 $$ md.update(newUserData.getFirstPassword().getBytes("UTF-8")) [FD]
Line_52 $$ if (!newUserData.getFirstPassword().equals("")) --> Line_64 $$ newUser.setPassword((new BASE64Encoder()).encode(md.digest())) [CD]
Line_49 $$ User newUser = new User() --> Line_64 $$ newUser.setPassword((new BASE64Encoder()).encode(md.digest())) [FD]
Line_53 $$ MessageDigest md --> Line_64 $$ newUser.setPassword((new BASE64Encoder()).encode(md.digest())) [FD]
Line_55 $$ md = MessageDigest.getInstance("SHA") --> Line_64 $$ newUser.setPassword((new BASE64Encoder()).encode(md.digest())) [FD]
Line_48 $$ if (userDataIsOk) --> Line_66 $$ newUser.setEmailAddress(newUserData.getEmailAddress()) [CD]
Line_49 $$ User newUser = new User() --> Line_66 $$ newUser.setEmailAddress(newUserData.getEmailAddress()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_66 $$ newUser.setEmailAddress(newUserData.getEmailAddress()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_67 $$ newUser.setHomepage(newUserData.getHomepage()) [CD]
Line_49 $$ User newUser = new User() --> Line_67 $$ newUser.setHomepage(newUserData.getHomepage()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_67 $$ newUser.setHomepage(newUserData.getHomepage()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_68 $$ newUser.setAddress(newUserData.getAddress()) [CD]
Line_49 $$ User newUser = new User() --> Line_68 $$ newUser.setAddress(newUserData.getAddress()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_68 $$ newUser.setAddress(newUserData.getAddress()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_69 $$ newUser.setInstitution(newUserData.getInstitution()) [CD]
Line_49 $$ User newUser = new User() --> Line_69 $$ newUser.setInstitution(newUserData.getInstitution()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_69 $$ newUser.setInstitution(newUserData.getInstitution()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_70 $$ newUser.setLanguages(newUserData.getLanguages()) [CD]
Line_49 $$ User newUser = new User() --> Line_70 $$ newUser.setLanguages(newUserData.getLanguages()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_70 $$ newUser.setLanguages(newUserData.getLanguages()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_71 $$ newUser.setDegree(newUserData.getDegree()) [CD]
Line_49 $$ User newUser = new User() --> Line_71 $$ newUser.setDegree(newUserData.getDegree()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_71 $$ newUser.setDegree(newUserData.getDegree()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_72 $$ newUser.setNationality(newUserData.getNationality()) [CD]
Line_49 $$ User newUser = new User() --> Line_72 $$ newUser.setNationality(newUserData.getNationality()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_72 $$ newUser.setNationality(newUserData.getNationality()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_73 $$ newUser.setTitle(newUserData.getTitle()) [CD]
Line_49 $$ User newUser = new User() --> Line_73 $$ newUser.setTitle(newUserData.getTitle()) [FD]
Line_3 $$ SubmitRegistrationForm newUserData = (SubmitRegistrationForm) pForm --> Line_73 $$ newUser.setTitle(newUserData.getTitle()) [FD]
Line_48 $$ if (userDataIsOk) --> Line_74 $$ newUser.setActive(true) [CD]
Line_49 $$ User newUser = new User() --> Line_74 $$ newUser.setActive(true) [FD]
Line_49 $$ User newUser = new User() --> Line_76 $$ database.updateUser(newUser) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_78 $$ pRequest.setAttribute("UserstoreBad", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_79 $$ return (pMapping.findForward("success")) [FD]
Line_48 $$ if (userDataIsOk) --> Line_81 $$ pRequest.setAttribute("UserdataFine", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_81 $$ pRequest.setAttribute("UserdataFine", new Boolean(true)) [FD]
Line_48 $$ if (userDataIsOk) --> Line_83 $$ pRequest.setAttribute("UserdataBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_83 $$ pRequest.setAttribute("UserdataBad", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_85 $$ return (pMapping.findForward("success")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_85 $$ return (pMapping.findForward("success")) [FD]
