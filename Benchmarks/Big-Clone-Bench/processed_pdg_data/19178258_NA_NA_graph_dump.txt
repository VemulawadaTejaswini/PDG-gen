Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_3 $$ final String url = baseURL + pub.getKey() + ".html" [CD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_3 $$ final String url = baseURL + pub.getKey() + ".html" [FD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_4 $$ logger.info("fetching pub ee from local cache at: " + url) [CD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_5 $$ HttpMethod method = null [CD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_6 $$ String responseBody = "" [CD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_7 $$ method = new GetMethod(url) [CD]
Line_5 $$ HttpMethod method = null --> Line_7 $$ method = new GetMethod(url) [FD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_8 $$ method.setFollowRedirects(true) [CD]
Line_5 $$ HttpMethod method = null --> Line_8 $$ method.setFollowRedirects(true) [FD]
Line_7 $$ method = new GetMethod(url) --> Line_8 $$ method.setFollowRedirects(true) [FD]
Line_5 $$ HttpMethod method = null --> Line_10 $$ if (StringUtils.isNotBlank(method.getURI().getScheme())) [FD]
Line_7 $$ method = new GetMethod(url) --> Line_10 $$ if (StringUtils.isNotBlank(method.getURI().getScheme())) [FD]
Line_10 $$ if (StringUtils.isNotBlank(method.getURI().getScheme())) --> Line_11 $$ InputStream is = null [CD]
Line_10 $$ if (StringUtils.isNotBlank(method.getURI().getScheme())) --> Line_12 $$ StringWriter writer = new StringWriter() [CD]
Line_5 $$ HttpMethod method = null --> Line_14 $$ client.executeMethod(method) [FD]
Line_7 $$ method = new GetMethod(url) --> Line_14 $$ client.executeMethod(method) [FD]
Line_5 $$ HttpMethod method = null --> Line_15 $$ Header contentType = method.getResponseHeader("Content-Type") [FD]
Line_7 $$ method = new GetMethod(url) --> Line_15 $$ Header contentType = method.getResponseHeader("Content-Type") [FD]
Line_15 $$ Header contentType = method.getResponseHeader("Content-Type") --> Line_16 $$ if (contentType != null && StringUtils.isNotBlank(contentType.getValue()) && contentType.getValue().indexOf("text/html") >= 0) [FD]
Line_16 $$ if (contentType != null && StringUtils.isNotBlank(contentType.getValue()) && contentType.getValue().indexOf("text/html") >= 0) --> Line_17 $$ is = method.getResponseBodyAsStream() [CD]
Line_11 $$ InputStream is = null --> Line_17 $$ is = method.getResponseBodyAsStream() [FD]
Line_5 $$ HttpMethod method = null --> Line_17 $$ is = method.getResponseBodyAsStream() [FD]
Line_7 $$ method = new GetMethod(url) --> Line_17 $$ is = method.getResponseBodyAsStream() [FD]
Line_16 $$ if (contentType != null && StringUtils.isNotBlank(contentType.getValue()) && contentType.getValue().indexOf("text/html") >= 0) --> Line_18 $$ IOUtils.copy(is, writer) [CD]
Line_11 $$ InputStream is = null --> Line_18 $$ IOUtils.copy(is, writer) [FD]
Line_17 $$ is = method.getResponseBodyAsStream() --> Line_18 $$ IOUtils.copy(is, writer) [FD]
Line_12 $$ StringWriter writer = new StringWriter() --> Line_18 $$ IOUtils.copy(is, writer) [FD]
Line_16 $$ if (contentType != null && StringUtils.isNotBlank(contentType.getValue()) && contentType.getValue().indexOf("text/html") >= 0) --> Line_19 $$ responseBody = writer.toString() [CD]
Line_6 $$ String responseBody = "" --> Line_19 $$ responseBody = writer.toString() [FD]
Line_12 $$ StringWriter writer = new StringWriter() --> Line_19 $$ responseBody = writer.toString() [FD]
Line_16 $$ if (contentType != null && StringUtils.isNotBlank(contentType.getValue()) && contentType.getValue().indexOf("text/html") >= 0) --> Line_21 $$ logger.info("ignoring non-text/html response from page: " + url + " content-type:" + contentType) [CD]
Line_11 $$ InputStream is = null --> Line_29 $$ IOUtils.closeQuietly(is) [FD]
Line_17 $$ is = method.getResponseBodyAsStream() --> Line_29 $$ IOUtils.closeQuietly(is) [FD]
Line_12 $$ StringWriter writer = new StringWriter() --> Line_30 $$ IOUtils.closeQuietly(writer) [FD]
Line_5 $$ HttpMethod method = null --> Line_36 $$ method.releaseConnection() [FD]
Line_7 $$ method = new GetMethod(url) --> Line_36 $$ method.releaseConnection() [FD]
Line_2 $$ public String fetchElectronicEdition(Publication pub) --> Line_38 $$ return responseBody [CD]
