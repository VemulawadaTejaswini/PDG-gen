Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_3 $$ StringBuilder json = new StringBuilder() [CD]
Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_4 $$ String requestUrl = "http://api.meetup.com/events.json/?group_urlname=" + groupIdentifier + "&key=" + key [CD]
Line_4 $$ String requestUrl = "http://api.meetup.com/events.json/?group_urlname=" + groupIdentifier + "&key=" + key --> Line_6 $$ URL url = new URL(requestUrl.toString()) [FD]
Line_6 $$ URL url = new URL(requestUrl.toString()) --> Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_8 $$ String inputLine --> Line_9 $$ while ((inputLine = in.readLine()) != null) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_9 $$ while ((inputLine = in.readLine()) != null) [FD]
Line_9 $$ while ((inputLine = in.readLine()) != null) --> Line_10 $$ json.append(inputLine) [CD]
Line_9 $$ while ((inputLine = in.readLine()) != null) --> Line_10 $$ json.append(inputLine) [FD]
Line_3 $$ StringBuilder json = new StringBuilder() --> Line_10 $$ json.append(inputLine) [FD]
Line_8 $$ String inputLine --> Line_10 $$ json.append(inputLine) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_12 $$ in.close() [FD]
Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_16 $$ List<Event> events = new ArrayList<Event>() [CD]
Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_17 $$ JSONObject jsonObj = (JSONObject) JSONValue.parse(json.toString()) [CD]
Line_3 $$ StringBuilder json = new StringBuilder() --> Line_17 $$ JSONObject jsonObj = (JSONObject) JSONValue.parse(json.toString()) [FD]
Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_18 $$ JSONArray results = (JSONArray) jsonObj.get("results") [CD]
Line_17 $$ JSONObject jsonObj = (JSONObject) JSONValue.parse(json.toString()) --> Line_18 $$ JSONArray results = (JSONArray) jsonObj.get("results") [FD]
Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_19 $$ for (int i = 0; i < results.size(); i++) [CD]
Line_18 $$ JSONArray results = (JSONArray) jsonObj.get("results") --> Line_19 $$ for (int i = 0; i < results.size(); i++) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_20 $$ JSONObject result = (JSONObject) results.get(i) [CD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_20 $$ JSONObject result = (JSONObject) results.get(i) [FD]
Line_18 $$ JSONArray results = (JSONArray) jsonObj.get("results") --> Line_20 $$ JSONObject result = (JSONObject) results.get(i) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_21 $$ Event e = new Event() [CD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_22 $$ e.setAttendeeCount(Integer.parseInt((String) result.get("rsvpcount"))) [CD]
Line_21 $$ Event e = new Event() --> Line_22 $$ e.setAttendeeCount(Integer.parseInt((String) result.get("rsvpcount"))) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_22 $$ e.setAttendeeCount(Integer.parseInt((String) result.get("rsvpcount"))) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_23 $$ e.setCity((String) result.get("venue_city")) [CD]
Line_21 $$ Event e = new Event() --> Line_23 $$ e.setCity((String) result.get("venue_city")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_23 $$ e.setCity((String) result.get("venue_city")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_24 $$ e.setDescription((String) result.get("description")) [CD]
Line_21 $$ Event e = new Event() --> Line_24 $$ e.setDescription((String) result.get("description")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_24 $$ e.setDescription((String) result.get("description")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_25 $$ e.setLatitude(Double.parseDouble((String) result.get("venue_lat"))) [CD]
Line_21 $$ Event e = new Event() --> Line_25 $$ e.setLatitude(Double.parseDouble((String) result.get("venue_lat"))) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_25 $$ e.setLatitude(Double.parseDouble((String) result.get("venue_lat"))) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_26 $$ e.setLongitude(Double.parseDouble((String) result.get("venue_lon"))) [CD]
Line_21 $$ Event e = new Event() --> Line_26 $$ e.setLongitude(Double.parseDouble((String) result.get("venue_lon"))) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_26 $$ e.setLongitude(Double.parseDouble((String) result.get("venue_lon"))) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_27 $$ e.setName((String) result.get("name")) [CD]
Line_21 $$ Event e = new Event() --> Line_27 $$ e.setName((String) result.get("name")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_27 $$ e.setName((String) result.get("name")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_28 $$ Date myDate = null [CD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_29 $$ String time = (String) result.get("time") [CD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_29 $$ String time = (String) result.get("time") [FD]
Line_28 $$ Date myDate = null --> Line_31 $$ myDate = meetupDateFormat.parse(time) [FD]
Line_29 $$ String time = (String) result.get("time") --> Line_31 $$ myDate = meetupDateFormat.parse(time) [FD]
Line_21 $$ Event e = new Event() --> Line_32 $$ e.setStartTime(timeDateFormat.format(myDate)) [FD]
Line_28 $$ Date myDate = null --> Line_32 $$ e.setStartTime(timeDateFormat.format(myDate)) [FD]
Line_31 $$ myDate = meetupDateFormat.parse(time) --> Line_32 $$ e.setStartTime(timeDateFormat.format(myDate)) [FD]
Line_21 $$ Event e = new Event() --> Line_33 $$ e.setEndTime(timeDateFormat.format(myDate)) [FD]
Line_28 $$ Date myDate = null --> Line_33 $$ e.setEndTime(timeDateFormat.format(myDate)) [FD]
Line_31 $$ myDate = meetupDateFormat.parse(time) --> Line_33 $$ e.setEndTime(timeDateFormat.format(myDate)) [FD]
Line_21 $$ Event e = new Event() --> Line_34 $$ e.setStartDate(myDate) [FD]
Line_28 $$ Date myDate = null --> Line_34 $$ e.setStartDate(myDate) [FD]
Line_31 $$ myDate = meetupDateFormat.parse(time) --> Line_34 $$ e.setStartDate(myDate) [FD]
Line_21 $$ Event e = new Event() --> Line_35 $$ e.setEndDate(myDate) [FD]
Line_28 $$ Date myDate = null --> Line_35 $$ e.setEndDate(myDate) [FD]
Line_31 $$ myDate = meetupDateFormat.parse(time) --> Line_35 $$ e.setEndDate(myDate) [FD]
Line_28 $$ Date myDate = null --> Line_36 $$ String tz = tzDateFormat.format(myDate) [FD]
Line_31 $$ myDate = meetupDateFormat.parse(time) --> Line_36 $$ String tz = tzDateFormat.format(myDate) [FD]
Line_36 $$ String tz = tzDateFormat.format(myDate) --> Line_37 $$ if (tz != null && tz.startsWith("+")) [FD]
Line_37 $$ if (tz != null && tz.startsWith("+")) --> Line_38 $$ tz = tz.substring(1) [CD]
Line_36 $$ String tz = tzDateFormat.format(myDate) --> Line_38 $$ tz = tz.substring(1) [FD]
Line_21 $$ Event e = new Event() --> Line_40 $$ e.setTimeZone(Integer.toString(Integer.parseInt(tz) / 100)) [FD]
Line_36 $$ String tz = tzDateFormat.format(myDate) --> Line_40 $$ e.setTimeZone(Integer.toString(Integer.parseInt(tz) / 100)) [FD]
Line_38 $$ tz = tz.substring(1) --> Line_40 $$ e.setTimeZone(Integer.toString(Integer.parseInt(tz) / 100)) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_45 $$ e.setState((String) result.get("venue_state")) [CD]
Line_21 $$ Event e = new Event() --> Line_45 $$ e.setState((String) result.get("venue_state")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_45 $$ e.setState((String) result.get("venue_state")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_46 $$ StringBuilder addressBuilder = new StringBuilder() [CD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_47 $$ if (result.get("venue_address1") != null) [CD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_47 $$ if (result.get("venue_address1") != null) [FD]
Line_47 $$ if (result.get("venue_address1") != null) --> Line_48 $$ addressBuilder.append((String) result.get("venue_address1") + " ") [CD]
Line_46 $$ StringBuilder addressBuilder = new StringBuilder() --> Line_48 $$ addressBuilder.append((String) result.get("venue_address1") + " ") [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_48 $$ addressBuilder.append((String) result.get("venue_address1") + " ") [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_50 $$ if (result.get("venue_address2") != null) [CD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_50 $$ if (result.get("venue_address2") != null) [FD]
Line_50 $$ if (result.get("venue_address2") != null) --> Line_51 $$ addressBuilder.append((String) result.get("venue_address2") + " ") [CD]
Line_46 $$ StringBuilder addressBuilder = new StringBuilder() --> Line_51 $$ addressBuilder.append((String) result.get("venue_address2") + " ") [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_51 $$ addressBuilder.append((String) result.get("venue_address2") + " ") [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_53 $$ if (result.get("venue_address3") != null) [CD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_53 $$ if (result.get("venue_address3") != null) [FD]
Line_53 $$ if (result.get("venue_address3") != null) --> Line_54 $$ addressBuilder.append((String) result.get("venue_address3") + " ") [CD]
Line_46 $$ StringBuilder addressBuilder = new StringBuilder() --> Line_54 $$ addressBuilder.append((String) result.get("venue_address3") + " ") [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_54 $$ addressBuilder.append((String) result.get("venue_address3") + " ") [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_56 $$ if (result.get("venue_address4") != null) [CD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_56 $$ if (result.get("venue_address4") != null) [FD]
Line_56 $$ if (result.get("venue_address4") != null) --> Line_57 $$ addressBuilder.append((String) result.get("venue_address4")) [CD]
Line_46 $$ StringBuilder addressBuilder = new StringBuilder() --> Line_57 $$ addressBuilder.append((String) result.get("venue_address4")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_57 $$ addressBuilder.append((String) result.get("venue_address4")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_59 $$ e.setStreetAddress(addressBuilder.toString().trim()) [CD]
Line_21 $$ Event e = new Event() --> Line_59 $$ e.setStreetAddress(addressBuilder.toString().trim()) [FD]
Line_46 $$ StringBuilder addressBuilder = new StringBuilder() --> Line_59 $$ e.setStreetAddress(addressBuilder.toString().trim()) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_60 $$ e.setZipCode((String) result.get("venue_zip")) [CD]
Line_21 $$ Event e = new Event() --> Line_60 $$ e.setZipCode((String) result.get("venue_zip")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_60 $$ e.setZipCode((String) result.get("venue_zip")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_61 $$ e.setUrl((String) result.get("event_url")) [CD]
Line_21 $$ Event e = new Event() --> Line_61 $$ e.setUrl((String) result.get("event_url")) [FD]
Line_20 $$ JSONObject result = (JSONObject) results.get(i) --> Line_61 $$ e.setUrl((String) result.get("event_url")) [FD]
Line_19 $$ for (int i = 0; i < results.size(); i++) --> Line_62 $$ events.add(e) [CD]
Line_16 $$ List<Event> events = new ArrayList<Event>() --> Line_62 $$ events.add(e) [FD]
Line_21 $$ Event e = new Event() --> Line_62 $$ events.add(e) [FD]
Line_2 $$ public List<Event> lookupFutureEvents(String groupIdentifier) throws GtugsException --> Line_64 $$ return events [CD]
Line_38 $$ tz = tz.substring(1) --> Line_37 $$ if (tz != null && tz.startsWith("+")) [FD]
