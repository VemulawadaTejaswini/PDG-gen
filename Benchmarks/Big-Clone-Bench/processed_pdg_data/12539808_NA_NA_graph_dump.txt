Line_2 $$ public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException --> Line_3 $$ InputStream is = file.jsFunction_createInputStream() [CD]
Line_2 $$ public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException --> Line_4 $$ OutputStream output = outputFile.jsFunction_createOutputStream() [CD]
Line_2 $$ public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException --> Line_4 $$ OutputStream output = outputFile.jsFunction_createOutputStream() [FD]
Line_2 $$ public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException --> Line_5 $$ BufferedInputStream buf = new BufferedInputStream(is) [CD]
Line_2 $$ public void jsFunction_extract(ScriptableFile outputFile) throws IOException, FileSystemException, ArchiveException --> Line_6 $$ ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf) [CD]
Line_5 $$ BufferedInputStream buf = new BufferedInputStream(is) --> Line_6 $$ ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf) [FD]
Line_6 $$ ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf) --> Line_9 $$ while (input.getNextEntry() != null) [FD]
Line_8 $$ long count = 0 --> Line_10 $$ if (count == offset) [FD]
Line_10 $$ if (count == offset) --> Line_11 $$ IOUtils.copy(input, output) [CD]
Line_6 $$ ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf) --> Line_11 $$ IOUtils.copy(input, output) [FD]
Line_4 $$ OutputStream output = outputFile.jsFunction_createOutputStream() --> Line_11 $$ IOUtils.copy(input, output) [FD]
Line_8 $$ long count = 0 --> Line_14 $$ count++ [FD]
Line_6 $$ ArchiveInputStream input = ScriptableZipArchive.getFactory().createArchiveInputStream(buf) --> Line_17 $$ input.close() [FD]
Line_4 $$ OutputStream output = outputFile.jsFunction_createOutputStream() --> Line_18 $$ output.close() [FD]
Line_3 $$ InputStream is = file.jsFunction_createInputStream() --> Line_19 $$ is.close() [FD]
