Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_3 $$ Connection cn = null [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_4 $$ Connection cndef = null [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() [CD]
Line_3 $$ Connection cn = null --> Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) [FD]
Line_4 $$ Connection cndef = null --> Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_10 $$ String objecttype = node.getString("OBJECTTYPE") [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_11 $$ if (objecttype.equalsIgnoreCase("T")) [FD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_13 $$ String[] sysflds = [CD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_14 $$ String[] sysfdef = [CD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_15 $$ String[] sysftyp = [CD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_16 $$ String[] sysfsiz = [CD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_17 $$ String[] sysfndef = [CD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_18 $$ String[] sysfdes = [CD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_19 $$ if (!exists && !modo.equals("3")) [CD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_19 $$ if (!exists && !modo.equals("3")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_19 $$ if (!exists && !modo.equals("3")) [FD]
Line_19 $$ if (!exists && !modo.equals("3")) --> Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" [CD]
Line_9 $$ String dml = null --> Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" [FD]
Line_19 $$ if (!exists && !modo.equals("3")) --> Line_21 $$ for (int i = 0; i < sysflds.length; i++) [CD]
Line_21 $$ for (int i = 0; i < sysflds.length; i++) --> Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) [CD]
Line_9 $$ String dml = null --> Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) [FD]
Line_19 $$ if (!exists && !modo.equals("3")) --> Line_24 $$ String vt = node.getString("OBJECTNAME") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_24 $$ String vt = node.getString("OBJECTNAME") [FD]
Line_19 $$ if (!exists && !modo.equals("3")) --> Line_25 $$ if (node.getString("SCHEMA").equals("DEF")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_25 $$ if (node.getString("SCHEMA").equals("DEF")) [FD]
Line_25 $$ if (node.getString("SCHEMA").equals("DEF")) --> Line_26 $$ vt = "NGD_" + vt [CD]
Line_24 $$ String vt = node.getString("OBJECTNAME") --> Line_26 $$ vt = "NGD_" + vt [FD]
Line_25 $$ if (node.getString("SCHEMA").equals("DEF")) --> Line_27 $$ if (node.getString("SCHEMA").equals("SYS")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_27 $$ if (node.getString("SCHEMA").equals("SYS")) [FD]
Line_27 $$ if (node.getString("SCHEMA").equals("SYS")) --> Line_28 $$ vt = "SYS_" + vt [CD]
Line_24 $$ String vt = node.getString("OBJECTNAME") --> Line_28 $$ vt = "SYS_" + vt [FD]
Line_26 $$ vt = "NGD_" + vt --> Line_28 $$ vt = "SYS_" + vt [FD]
Line_19 $$ if (!exists && !modo.equals("3")) --> Line_30 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_30 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_30 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_30 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_30 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_32 $$ if (modo.equals("3") && exists) [CD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_32 $$ if (modo.equals("3") && exists) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_32 $$ if (modo.equals("3") && exists) [FD]
Line_32 $$ if (modo.equals("3") && exists) --> Line_33 $$ executeDDL("DROP TABLE " + node.getString("OBJECTNAME"), node.getString("SCHEMA")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_33 $$ executeDDL("DROP TABLE " + node.getString("OBJECTNAME"), node.getString("SCHEMA")) [FD]
Line_32 $$ if (modo.equals("3") && exists) --> Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") [CD]
Line_4 $$ Connection cndef = null --> Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") [FD]
Line_32 $$ if (modo.equals("3") && exists) --> Line_35 $$ call.setString(1, node.getString("OBJECTNAME")) [CD]
Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") --> Line_35 $$ call.setString(1, node.getString("OBJECTNAME")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_35 $$ call.setString(1, node.getString("OBJECTNAME")) [FD]
Line_32 $$ if (modo.equals("3") && exists) --> Line_36 $$ call.executeUpdate() [CD]
Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") --> Line_36 $$ call.executeUpdate() [FD]
Line_32 $$ if (modo.equals("3") && exists) --> Line_37 $$ call.close() [CD]
Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") --> Line_37 $$ call.close() [FD]
Line_11 $$ if (objecttype.equalsIgnoreCase("T")) --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [CD]
Line_13 $$ String[] sysflds = --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [FD]
Line_15 $$ String[] sysftyp = --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [FD]
Line_16 $$ String[] sysfsiz = --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [FD]
Line_17 $$ String[] sysfndef = --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [FD]
Line_18 $$ String[] sysfdes = --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_39 $$ checkDicFields(node.getString("OBJECTNAME"), node.getString("SCHEMA"), sysflds, sysftyp, sysfsiz, sysfndef, sysfdes) [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_41 $$ if (objecttype.equalsIgnoreCase("F")) [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_42 $$ boolean fldchg = false [CD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_43 $$ boolean fldexi = false [CD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") [CD]
Line_3 $$ Connection cn = null --> Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_45 $$ pstm.setString(1, node.getString("TABLENAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_45 $$ pstm.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_45 $$ pstm.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_46 $$ pstm.setString(2, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_46 $$ pstm.setString(2, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_46 $$ pstm.setString(2, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_47 $$ pstm.setString(3, schema) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_47 $$ pstm.setString(3, schema) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_47 $$ pstm.setString(3, schema) [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_48 $$ ResultSet rslt = pstm.executeQuery() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_48 $$ ResultSet rslt = pstm.executeQuery() [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_49 $$ if (rslt.next()) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_49 $$ if (rslt.next()) [FD]
Line_49 $$ if (rslt.next()) --> Line_50 $$ int fieldsiz = rslt.getInt(3) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_50 $$ int fieldsiz = rslt.getInt(3) [FD]
Line_49 $$ if (rslt.next()) --> Line_51 $$ int fielddec = rslt.getInt(5) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_51 $$ int fielddec = rslt.getInt(5) [FD]
Line_49 $$ if (rslt.next()) --> Line_52 $$ if (",C,N,".indexOf("," + getNgtFieldTypeFromDDL(rslt.getString(2)) + ",") != -1) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_52 $$ if (",C,N,".indexOf("," + getNgtFieldTypeFromDDL(rslt.getString(2)) + ",") != -1) [FD]
Line_52 $$ if (",C,N,".indexOf("," + getNgtFieldTypeFromDDL(rslt.getString(2)) + ",") != -1) --> Line_53 $$ if (getNgtFieldTypeFromDDL(rslt.getString(2)).equals("N")) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_53 $$ if (getNgtFieldTypeFromDDL(rslt.getString(2)).equals("N")) [FD]
Line_53 $$ if (getNgtFieldTypeFromDDL(rslt.getString(2)).equals("N")) --> Line_54 $$ fieldsiz = rslt.getInt(4) [CD]
Line_50 $$ int fieldsiz = rslt.getInt(3) --> Line_54 $$ fieldsiz = rslt.getInt(4) [FD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_54 $$ fieldsiz = rslt.getInt(4) [FD]
Line_52 $$ if (",C,N,".indexOf("," + getNgtFieldTypeFromDDL(rslt.getString(2)) + ",") != -1) --> Line_56 $$ if (fielddec != 0) [CD]
Line_51 $$ int fielddec = rslt.getInt(5) --> Line_56 $$ if (fielddec != 0) [FD]
Line_56 $$ if (fielddec != 0) --> Line_57 $$ if (!(fieldsiz + "," + fielddec).equals(node.getString("FIELDSIZE"))) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_57 $$ if (!(fieldsiz + "," + fielddec).equals(node.getString("FIELDSIZE"))) [FD]
Line_57 $$ if (!(fieldsiz + "," + fielddec).equals(node.getString("FIELDSIZE"))) --> Line_58 $$ fldchg = true [CD]
Line_42 $$ boolean fldchg = false --> Line_58 $$ fldchg = true [FD]
Line_56 $$ if (fielddec != 0) --> Line_61 $$ if (!((fieldsiz == 0) && ((node.getString("FIELDSIZE") == null) || (node.getString("FIELDSIZE").length() == 0)))) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_61 $$ if (!((fieldsiz == 0) && ((node.getString("FIELDSIZE") == null) || (node.getString("FIELDSIZE").length() == 0)))) [FD]
Line_61 $$ if (!((fieldsiz == 0) && ((node.getString("FIELDSIZE") == null) || (node.getString("FIELDSIZE").length() == 0)))) --> Line_62 $$ if (!("" + fieldsiz).equals(node.getString("FIELDSIZE"))) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_62 $$ if (!("" + fieldsiz).equals(node.getString("FIELDSIZE"))) [FD]
Line_62 $$ if (!("" + fieldsiz).equals(node.getString("FIELDSIZE"))) --> Line_63 $$ fldchg = true [CD]
Line_42 $$ boolean fldchg = false --> Line_63 $$ fldchg = true [FD]
Line_58 $$ fldchg = true --> Line_63 $$ fldchg = true [FD]
Line_49 $$ if (rslt.next()) --> Line_68 $$ fldexi = true [CD]
Line_43 $$ boolean fldexi = false --> Line_68 $$ fldexi = true [FD]
Line_49 $$ if (rslt.next()) --> Line_70 $$ fldexi = false [CD]
Line_43 $$ boolean fldexi = false --> Line_70 $$ fldexi = false [FD]
Line_68 $$ fldexi = true --> Line_70 $$ fldexi = false [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_72 $$ rslt.close() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_72 $$ rslt.close() [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_73 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_73 $$ pstm.close() [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_74 $$ boolean drop = false [CD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) [FD]
Line_43 $$ boolean fldexi = false --> Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) [FD]
Line_68 $$ fldexi = true --> Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) [FD]
Line_70 $$ fldexi = false --> Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) [FD]
Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) --> Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_9 $$ String dml = null --> Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_75 $$ if (("20".indexOf(modo) != -1) && !fldexi) --> Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) [CD]
Line_42 $$ boolean fldchg = false --> Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) [FD]
Line_58 $$ fldchg = true --> Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) [FD]
Line_63 $$ fldchg = true --> Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) [FD]
Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) --> Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_9 $$ String dml = null --> Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_77 $$ if (("20".indexOf(modo) != -1) && fldexi && fldchg) --> Line_79 $$ if (modo.equals("3") && fldexi) [CD]
Line_43 $$ boolean fldexi = false --> Line_79 $$ if (modo.equals("3") && fldexi) [FD]
Line_68 $$ fldexi = true --> Line_79 $$ if (modo.equals("3") && fldexi) [FD]
Line_70 $$ fldexi = false --> Line_79 $$ if (modo.equals("3") && fldexi) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_79 $$ if (modo.equals("3") && fldexi) [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_9 $$ String dml = null --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" [CD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) [CD]
Line_3 $$ Connection cn = null --> Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_83 $$ pstmrelc.setString(1, node.getString("TABLENAME").toLowerCase()) [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_83 $$ pstmrelc.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_83 $$ pstmrelc.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_84 $$ pstmrelc.setString(2, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_84 $$ pstmrelc.setString(2, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_84 $$ pstmrelc.setString(2, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_85 $$ pstmrelc.setString(3, schema) [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_85 $$ pstmrelc.setString(3, schema) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_85 $$ pstmrelc.setString(3, schema) [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_87 $$ while (rsltrelc.next()) [CD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_87 $$ while (rsltrelc.next()) [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_88 $$ String constname = rsltrelc.getString(1) [CD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_88 $$ String constname = rsltrelc.getString(1) [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_89 $$ String consttype = rsltrelc.getString(2) [CD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_89 $$ String consttype = rsltrelc.getString(2) [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") [CD]
Line_4 $$ Connection cndef = null --> Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_91 $$ pstmdic.setString(1, node.getString("TABLENAME")) [CD]
Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") --> Line_91 $$ pstmdic.setString(1, node.getString("TABLENAME")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_91 $$ pstmdic.setString(1, node.getString("TABLENAME")) [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_92 $$ pstmdic.setString(2, consttype.equals("R") ? "FK" : "PK") [CD]
Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") --> Line_92 $$ pstmdic.setString(2, consttype.equals("R") ? "FK" : "PK") [FD]
Line_89 $$ String consttype = rsltrelc.getString(2) --> Line_92 $$ pstmdic.setString(2, consttype.equals("R") ? "FK" : "PK") [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_93 $$ pstmdic.setString(3, constname) [CD]
Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") --> Line_93 $$ pstmdic.setString(3, constname) [FD]
Line_88 $$ String constname = rsltrelc.getString(1) --> Line_93 $$ pstmdic.setString(3, constname) [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_94 $$ int nrecs = pstmdic.executeUpdate() [CD]
Line_90 $$ PreparedStatement pstmdic = cndef.prepareStatement("DELETE FROM NGTDIC WHERE TABLENAME=? AND OBJECTTYPE=? AND OBJECTNAME=?") --> Line_94 $$ int nrecs = pstmdic.executeUpdate() [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_95 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_95 $$ pstm.close() [FD]
Line_87 $$ while (rsltrelc.next()) --> Line_96 $$ executeDDL("ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + constname, node.getString("SCHEMA")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_96 $$ executeDDL("ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + constname, node.getString("SCHEMA")) [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_98 $$ rsltrelc.close() [CD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_98 $$ rsltrelc.close() [FD]
Line_79 $$ if (modo.equals("3") && fldexi) --> Line_99 $$ pstmrelc.close() [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_99 $$ pstmrelc.close() [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_9 $$ String dml = null --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) [FD]
Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) --> Line_102 $$ String mfield = node.getString("MACROFIELD") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_102 $$ String mfield = node.getString("MACROFIELD") [FD]
Line_101 $$ if ((dml != null) && (dml.length() > 0) && !modo.equals("3")) --> Line_103 $$ if ((mfield != null) && !(!mfield.equals("TEXTOLIVRE") && !mfield.equals("NUMEROLIVRE") && !mfield.equals("TEXT") && !mfield.equals("BLOB") && !mfield.equals("MDATA"))) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_103 $$ if ((mfield != null) && !(!mfield.equals("TEXTOLIVRE") && !mfield.equals("NUMEROLIVRE") && !mfield.equals("TEXT") && !mfield.equals("BLOB") && !mfield.equals("MDATA"))) [FD]
Line_103 $$ if ((mfield != null) && !(!mfield.equals("TEXTOLIVRE") && !mfield.equals("NUMEROLIVRE") && !mfield.equals("TEXT") && !mfield.equals("BLOB") && !mfield.equals("MDATA"))) --> Line_104 $$ String ngtft = "" [CD]
Line_103 $$ if ((mfield != null) && !(!mfield.equals("TEXTOLIVRE") && !mfield.equals("NUMEROLIVRE") && !mfield.equals("TEXT") && !mfield.equals("BLOB") && !mfield.equals("MDATA"))) --> Line_105 $$ if (mfield.equals("TEXTOLIVRE")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_105 $$ if (mfield.equals("TEXTOLIVRE")) [FD]
Line_105 $$ if (mfield.equals("TEXTOLIVRE")) --> Line_106 $$ ngtft = "C" [CD]
Line_104 $$ String ngtft = "" --> Line_106 $$ ngtft = "C" [FD]
Line_105 $$ if (mfield.equals("TEXTOLIVRE")) --> Line_107 $$ if (mfield.equals("NUMEROLIVRE")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_107 $$ if (mfield.equals("NUMEROLIVRE")) [FD]
Line_107 $$ if (mfield.equals("NUMEROLIVRE")) --> Line_108 $$ ngtft = "N" [CD]
Line_104 $$ String ngtft = "" --> Line_108 $$ ngtft = "N" [FD]
Line_106 $$ ngtft = "C" --> Line_108 $$ ngtft = "N" [FD]
Line_107 $$ if (mfield.equals("NUMEROLIVRE")) --> Line_109 $$ if (mfield.equals("RAW")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_109 $$ if (mfield.equals("RAW")) [FD]
Line_109 $$ if (mfield.equals("RAW")) --> Line_110 $$ ngtft = "RAW" [CD]
Line_104 $$ String ngtft = "" --> Line_110 $$ ngtft = "RAW" [FD]
Line_106 $$ ngtft = "C" --> Line_110 $$ ngtft = "RAW" [FD]
Line_108 $$ ngtft = "N" --> Line_110 $$ ngtft = "RAW" [FD]
Line_109 $$ if (mfield.equals("RAW")) --> Line_111 $$ if (mfield.equals("TIMESTAMP")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_111 $$ if (mfield.equals("TIMESTAMP")) [FD]
Line_111 $$ if (mfield.equals("TIMESTAMP")) --> Line_112 $$ ngtft = "TIMESTAMP" [CD]
Line_104 $$ String ngtft = "" --> Line_112 $$ ngtft = "TIMESTAMP" [FD]
Line_106 $$ ngtft = "C" --> Line_112 $$ ngtft = "TIMESTAMP" [FD]
Line_108 $$ ngtft = "N" --> Line_112 $$ ngtft = "TIMESTAMP" [FD]
Line_110 $$ ngtft = "RAW" --> Line_112 $$ ngtft = "TIMESTAMP" [FD]
Line_111 $$ if (mfield.equals("TIMESTAMP")) --> Line_113 $$ if (mfield.equals("MDATA")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_113 $$ if (mfield.equals("MDATA")) [FD]
Line_113 $$ if (mfield.equals("MDATA")) --> Line_114 $$ ngtft = "D" [CD]
Line_104 $$ String ngtft = "" --> Line_114 $$ ngtft = "D" [FD]
Line_106 $$ ngtft = "C" --> Line_114 $$ ngtft = "D" [FD]
Line_108 $$ ngtft = "N" --> Line_114 $$ ngtft = "D" [FD]
Line_110 $$ ngtft = "RAW" --> Line_114 $$ ngtft = "D" [FD]
Line_112 $$ ngtft = "TIMESTAMP" --> Line_114 $$ ngtft = "D" [FD]
Line_113 $$ if (mfield.equals("MDATA")) --> Line_115 $$ if (mfield.equals("TEXT")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_115 $$ if (mfield.equals("TEXT")) [FD]
Line_115 $$ if (mfield.equals("TEXT")) --> Line_116 $$ ngtft = "CL" [CD]
Line_104 $$ String ngtft = "" --> Line_116 $$ ngtft = "CL" [FD]
Line_106 $$ ngtft = "C" --> Line_116 $$ ngtft = "CL" [FD]
Line_108 $$ ngtft = "N" --> Line_116 $$ ngtft = "CL" [FD]
Line_110 $$ ngtft = "RAW" --> Line_116 $$ ngtft = "CL" [FD]
Line_112 $$ ngtft = "TIMESTAMP" --> Line_116 $$ ngtft = "CL" [FD]
Line_114 $$ ngtft = "D" --> Line_116 $$ ngtft = "CL" [FD]
Line_115 $$ if (mfield.equals("TEXT")) --> Line_117 $$ if (mfield.equals("BLOB")) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_117 $$ if (mfield.equals("BLOB")) [FD]
Line_117 $$ if (mfield.equals("BLOB")) --> Line_118 $$ ngtft = "BL" [CD]
Line_104 $$ String ngtft = "" --> Line_118 $$ ngtft = "BL" [FD]
Line_106 $$ ngtft = "C" --> Line_118 $$ ngtft = "BL" [FD]
Line_108 $$ ngtft = "N" --> Line_118 $$ ngtft = "BL" [FD]
Line_110 $$ ngtft = "RAW" --> Line_118 $$ ngtft = "BL" [FD]
Line_112 $$ ngtft = "TIMESTAMP" --> Line_118 $$ ngtft = "BL" [FD]
Line_114 $$ ngtft = "D" --> Line_118 $$ ngtft = "BL" [FD]
Line_116 $$ ngtft = "CL" --> Line_118 $$ ngtft = "BL" [FD]
Line_103 $$ if ((mfield != null) && !(!mfield.equals("TEXTOLIVRE") && !mfield.equals("NUMEROLIVRE") && !mfield.equals("TEXT") && !mfield.equals("BLOB") && !mfield.equals("MDATA"))) --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_9 $$ String dml = null --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_104 $$ String ngtft = "" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_106 $$ ngtft = "C" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_108 $$ ngtft = "N" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_110 $$ ngtft = "RAW" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_112 $$ ngtft = "TIMESTAMP" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_114 $$ ngtft = "D" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_116 $$ ngtft = "CL" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_118 $$ ngtft = "BL" --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) [FD]
Line_103 $$ if ((mfield != null) && !(!mfield.equals("TEXTOLIVRE") && !mfield.equals("NUMEROLIVRE") && !mfield.equals("TEXT") && !mfield.equals("BLOB") && !mfield.equals("MDATA"))) --> Line_121 $$ if ((mfield != null) && (mfield.length() > 0)) [CD]
Line_102 $$ String mfield = node.getString("MACROFIELD") --> Line_121 $$ if ((mfield != null) && (mfield.length() > 0)) [FD]
Line_121 $$ if ((mfield != null) && (mfield.length() > 0)) --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_9 $$ String dml = null --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_4 $$ Connection cndef = null --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) [FD]
Line_121 $$ if ((mfield != null) && (mfield.length() > 0)) --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_9 $$ String dml = null --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_127 $$ String[] flds = new String[1] [CD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_128 $$ flds[0] = node.getString("OBJECTNAME") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_128 $$ flds[0] = node.getString("OBJECTNAME") [FD]
Line_41 $$ if (objecttype.equalsIgnoreCase("F")) --> Line_129 $$ if (dml != null) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_129 $$ if (dml != null) [FD]
Line_9 $$ String dml = null --> Line_129 $$ if (dml != null) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_129 $$ if (dml != null) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_129 $$ if (dml != null) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_129 $$ if (dml != null) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_129 $$ if (dml != null) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_129 $$ if (dml != null) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_129 $$ if (dml != null) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_129 $$ if (dml != null) [FD]
Line_129 $$ if (dml != null) --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_130 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_133 $$ if (objecttype.equalsIgnoreCase("V")) [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_134 $$ String viewText = null [CD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_135 $$ PreparedStatement pstmrelc = cn.prepareStatement("SELECT view_definition FROM information_schema.views WHERE table_name=? " + "and table_schema=?") [CD]
Line_3 $$ Connection cn = null --> Line_135 $$ PreparedStatement pstmrelc = cn.prepareStatement("SELECT view_definition FROM information_schema.views WHERE table_name=? " + "and table_schema=?") [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_135 $$ PreparedStatement pstmrelc = cn.prepareStatement("SELECT view_definition FROM information_schema.views WHERE table_name=? " + "and table_schema=?") [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_136 $$ pstmrelc.setString(1, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_136 $$ pstmrelc.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_136 $$ pstmrelc.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_137 $$ pstmrelc.setString(2, schema.toLowerCase()) [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_137 $$ pstmrelc.setString(2, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_137 $$ pstmrelc.setString(2, schema.toLowerCase()) [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_138 $$ ResultSet rsltrelc = pstmrelc.executeQuery() [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_138 $$ ResultSet rsltrelc = pstmrelc.executeQuery() [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_140 $$ if (rsltrelc.next()) [CD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_140 $$ if (rsltrelc.next()) [FD]
Line_140 $$ if (rsltrelc.next()) --> Line_141 $$ exists = true [CD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_141 $$ exists = true [FD]
Line_140 $$ if (rsltrelc.next()) --> Line_142 $$ viewText = rsltrelc.getString(1) [CD]
Line_134 $$ String viewText = null --> Line_142 $$ viewText = rsltrelc.getString(1) [FD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_142 $$ viewText = rsltrelc.getString(1) [FD]
Line_140 $$ if (rsltrelc.next()) --> Line_143 $$ viewText = viewText.substring(0, viewText.length() - 1) [CD]
Line_134 $$ String viewText = null --> Line_143 $$ viewText = viewText.substring(0, viewText.length() - 1) [FD]
Line_142 $$ viewText = rsltrelc.getString(1) --> Line_143 $$ viewText = viewText.substring(0, viewText.length() - 1) [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_145 $$ rsltrelc.close() [CD]
Line_86 $$ ResultSet rsltrelc = pstmrelc.executeQuery() --> Line_145 $$ rsltrelc.close() [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_146 $$ pstmrelc.close() [CD]
Line_82 $$ PreparedStatement pstmrelc = cn.prepareStatement(sql) --> Line_146 $$ pstmrelc.close() [FD]
Line_133 $$ if (objecttype.equalsIgnoreCase("V")) --> Line_147 $$ if (!modo.equals("3")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_147 $$ if (!modo.equals("3")) [FD]
Line_147 $$ if (!modo.equals("3")) --> Line_148 $$ String vExpression = node.getString("EXPRESSION") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_148 $$ String vExpression = node.getString("EXPRESSION") [FD]
Line_147 $$ if (!modo.equals("3")) --> Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) [CD]
Line_134 $$ String viewText = null --> Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) [FD]
Line_142 $$ viewText = rsltrelc.getString(1) --> Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) [FD]
Line_143 $$ viewText = viewText.substring(0, viewText.length() - 1) --> Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) [FD]
Line_148 $$ String vExpression = node.getString("EXPRESSION") --> Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) [FD]
Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_9 $$ String dml = null --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_148 $$ String vExpression = node.getString("EXPRESSION") --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression [FD]
Line_149 $$ if (!vExpression.toLowerCase().equals(viewText)) --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_151 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_147 $$ if (!modo.equals("3")) --> Line_154 $$ if (exists) [CD]
Line_154 $$ if (exists) --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_9 $$ String dml = null --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") [FD]
Line_154 $$ if (exists) --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_156 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_154 $$ if (exists) --> Line_157 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") [CD]
Line_4 $$ Connection cndef = null --> Line_157 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_157 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") [FD]
Line_154 $$ if (exists) --> Line_158 $$ call.setString(1, node.getString("OBJECTNAME")) [CD]
Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") --> Line_158 $$ call.setString(1, node.getString("OBJECTNAME")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_158 $$ call.setString(1, node.getString("OBJECTNAME")) [FD]
Line_154 $$ if (exists) --> Line_159 $$ call.executeUpdate() [CD]
Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") --> Line_159 $$ call.executeUpdate() [FD]
Line_154 $$ if (exists) --> Line_160 $$ call.close() [CD]
Line_34 $$ CallableStatement call = cndef.prepareCall("DELETE FROM NGTDIC WHERE TABLENAME=?") --> Line_160 $$ call.close() [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_164 $$ if (objecttype.startsWith("PCK")) [FD]
Line_164 $$ if (objecttype.startsWith("PCK")) --> Line_165 $$ String templatestr = node.getString("EXPRESSION") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_165 $$ String templatestr = node.getString("EXPRESSION") [FD]
Line_164 $$ if (objecttype.startsWith("PCK")) --> Line_166 $$ String bstr = "/*begin_package*/" [CD]
Line_164 $$ if (objecttype.startsWith("PCK")) --> Line_167 $$ String estr = "/*end_package*/" [CD]
Line_164 $$ if (objecttype.startsWith("PCK")) --> Line_168 $$ if ("02".indexOf(modo) != -1) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_168 $$ if ("02".indexOf(modo) != -1) [FD]
Line_168 $$ if ("02".indexOf(modo) != -1) --> Line_169 $$ if (templatestr.indexOf(bstr) != -1) [CD]
Line_165 $$ String templatestr = node.getString("EXPRESSION") --> Line_169 $$ if (templatestr.indexOf(bstr) != -1) [FD]
Line_166 $$ String bstr = "/*begin_package*/" --> Line_169 $$ if (templatestr.indexOf(bstr) != -1) [FD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_170 $$ int defpos [CD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_9 $$ String dml = null --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_165 $$ String templatestr = node.getString("EXPRESSION") --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_166 $$ String bstr = "/*begin_package*/" --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_170 $$ int defpos --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_167 $$ String estr = "/*end_package*/" --> Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) [FD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_9 $$ String dml = null --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_173 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_174 $$ bstr = "/*begin_package_body*/" [CD]
Line_166 $$ String bstr = "/*begin_package*/" --> Line_174 $$ bstr = "/*begin_package_body*/" [FD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_175 $$ estr = "/*end_package_body*/" [CD]
Line_167 $$ String estr = "/*end_package*/" --> Line_175 $$ estr = "/*end_package_body*/" [FD]
Line_169 $$ if (templatestr.indexOf(bstr) != -1) --> Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) [CD]
Line_165 $$ String templatestr = node.getString("EXPRESSION") --> Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) [FD]
Line_166 $$ String bstr = "/*begin_package*/" --> Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) [FD]
Line_174 $$ bstr = "/*begin_package_body*/" --> Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) [FD]
Line_170 $$ int defpos --> Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) [FD]
Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_9 $$ String dml = null --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_165 $$ String templatestr = node.getString("EXPRESSION") --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_166 $$ String bstr = "/*begin_package*/" --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_174 $$ bstr = "/*begin_package_body*/" --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_170 $$ int defpos --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_167 $$ String estr = "/*end_package*/" --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_175 $$ estr = "/*end_package_body*/" --> Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) [FD]
Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_9 $$ String dml = null --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" [FD]
Line_176 $$ if (templatestr.indexOf(bstr, defpos) != -1) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_179 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_187 $$ PreparedStatement pstm = cn.prepareStatement(sql) [CD]
Line_3 $$ Connection cn = null --> Line_187 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_187 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_187 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_188 $$ pstm.setString(1, node.getString("TABLENAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_188 $$ pstm.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_188 $$ pstm.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_189 $$ pstm.setString(2, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_189 $$ pstm.setString(2, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_189 $$ pstm.setString(2, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_190 $$ pstm.setString(3, schema.toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_190 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_190 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_191 $$ boolean isunique = objecttype.startsWith("UN") [CD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_191 $$ boolean isunique = objecttype.startsWith("UN") [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_192 $$ ResultSet rslt = pstm.executeQuery() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_192 $$ ResultSet rslt = pstm.executeQuery() [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_194 $$ StringBuffer expression = new StringBuffer() [CD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_195 $$ while (rslt.next()) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_195 $$ while (rslt.next()) [FD]
Line_195 $$ while (rslt.next()) --> Line_196 $$ if (exists) [CD]
Line_196 $$ if (exists) --> Line_197 $$ expression.append(',') [CD]
Line_194 $$ StringBuffer expression = new StringBuffer() --> Line_197 $$ expression.append(',') [FD]
Line_195 $$ while (rslt.next()) --> Line_199 $$ exists = true [CD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_199 $$ exists = true [FD]
Line_141 $$ exists = true --> Line_199 $$ exists = true [FD]
Line_195 $$ while (rslt.next()) --> Line_200 $$ expression.append(rslt.getString(1)) [CD]
Line_194 $$ StringBuffer expression = new StringBuffer() --> Line_200 $$ expression.append(rslt.getString(1)) [FD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_200 $$ expression.append(rslt.getString(1)) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_202 $$ boolean diff = !expression.toString().toUpperCase().equals(node.getString("EXPRESSION")) [CD]
Line_194 $$ StringBuffer expression = new StringBuffer() --> Line_202 $$ boolean diff = !expression.toString().toUpperCase().equals(node.getString("EXPRESSION")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_202 $$ boolean diff = !expression.toString().toUpperCase().equals(node.getString("EXPRESSION")) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_203 $$ rslt.close() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_203 $$ rslt.close() [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_204 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_204 $$ pstm.close() [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_205 $$ if ((modo.equals("3") || diff) && exists) [CD]
Line_199 $$ exists = true --> Line_205 $$ if ((modo.equals("3") || diff) && exists) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_205 $$ if ((modo.equals("3") || diff) && exists) [FD]
Line_141 $$ exists = true --> Line_205 $$ if ((modo.equals("3") || diff) && exists) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_205 $$ if ((modo.equals("3") || diff) && exists) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" [CD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) [CD]
Line_3 $$ Connection cn = null --> Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_208 $$ pstmrefs.setString(1, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_208 $$ pstmrefs.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_208 $$ pstmrefs.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_209 $$ pstmrefs.setString(2, schema.toLowerCase()) [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_209 $$ pstmrefs.setString(2, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_209 $$ pstmrefs.setString(2, schema.toLowerCase()) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_211 $$ while (rsltrefs.next()) [CD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_211 $$ while (rsltrefs.next()) [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") [CD]
Line_4 $$ Connection cndef = null --> Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_213 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [CD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_213 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [FD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_213 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_214 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [CD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_214 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_214 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_215 $$ pstmdelref.setString(3, rsltrefs.getString(2)) [CD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_215 $$ pstmdelref.setString(3, rsltrefs.getString(2)) [FD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_215 $$ pstmdelref.setString(3, rsltrefs.getString(2)) [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_216 $$ pstmdelref.executeUpdate() [CD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_216 $$ pstmdelref.executeUpdate() [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_217 $$ pstmdelref.close() [CD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_217 $$ pstmdelref.close() [FD]
Line_211 $$ while (rsltrefs.next()) --> Line_218 $$ executeDDL("alter table " + rsltrefs.getString(2) + "  drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [CD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_218 $$ executeDDL("alter table " + rsltrefs.getString(2) + "  drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_218 $$ executeDDL("alter table " + rsltrefs.getString(2) + "  drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_220 $$ rsltrefs.close() [CD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_220 $$ rsltrefs.close() [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_221 $$ pstmrefs.close() [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_221 $$ pstmrefs.close() [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_222 $$ String insql = "'" + node.getString("EXPRESSION").toLowerCase().replaceAll(",", "\\',\\'") + "'" [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_222 $$ String insql = "'" + node.getString("EXPRESSION").toLowerCase().replaceAll(",", "\\',\\'") + "'" [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" [CD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [FD]
Line_3 $$ Connection cn = null --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [FD]
Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" --> Line_224 $$ pstmrefs = cn.prepareStatement(sql) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_225 $$ pstmrefs.setString(1, node.getString("TABLENAME").toLowerCase()) [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_225 $$ pstmrefs.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_224 $$ pstmrefs = cn.prepareStatement(sql) --> Line_225 $$ pstmrefs.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_225 $$ pstmrefs.setString(1, node.getString("TABLENAME").toLowerCase()) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_226 $$ pstmrefs.setString(2, schema.toLowerCase()) [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_226 $$ pstmrefs.setString(2, schema.toLowerCase()) [FD]
Line_224 $$ pstmrefs = cn.prepareStatement(sql) --> Line_226 $$ pstmrefs.setString(2, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_226 $$ pstmrefs.setString(2, schema.toLowerCase()) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_227 $$ rsltrefs = pstmrefs.executeQuery() [CD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_227 $$ rsltrefs = pstmrefs.executeQuery() [FD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_227 $$ rsltrefs = pstmrefs.executeQuery() [FD]
Line_224 $$ pstmrefs = cn.prepareStatement(sql) --> Line_227 $$ rsltrefs = pstmrefs.executeQuery() [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_228 $$ while (rsltrefs.next()) [CD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_228 $$ while (rsltrefs.next()) [FD]
Line_227 $$ rsltrefs = pstmrefs.executeQuery() --> Line_228 $$ while (rsltrefs.next()) [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") [CD]
Line_4 $$ Connection cndef = null --> Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_230 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [CD]
Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_230 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [FD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_230 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [FD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_230 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [FD]
Line_227 $$ rsltrefs = pstmrefs.executeQuery() --> Line_230 $$ pstmdelref.setString(1, rsltrefs.getString(1)) [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_231 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [CD]
Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_231 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [FD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_231 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_231 $$ pstmdelref.setString(2, node.getString("SCHEMA")) [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_232 $$ pstmdelref.setString(3, node.getString("TABLENAME")) [CD]
Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_232 $$ pstmdelref.setString(3, node.getString("TABLENAME")) [FD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_232 $$ pstmdelref.setString(3, node.getString("TABLENAME")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_232 $$ pstmdelref.setString(3, node.getString("TABLENAME")) [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_233 $$ pstmdelref.executeUpdate() [CD]
Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_233 $$ pstmdelref.executeUpdate() [FD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_233 $$ pstmdelref.executeUpdate() [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_234 $$ pstmdelref.close() [CD]
Line_229 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_234 $$ pstmdelref.close() [FD]
Line_212 $$ PreparedStatement pstmdelref = cndef.prepareStatement("DELETE NGTDIC WHERE OBJECTNAME=? AND SCHEMA=? AND TABLENAME=? AND OBJECTTYPE='FK'") --> Line_234 $$ pstmdelref.close() [FD]
Line_228 $$ while (rsltrefs.next()) --> Line_235 $$ executeDDL("alter table " + node.getString("TABLENAME") + " drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_235 $$ executeDDL("alter table " + node.getString("TABLENAME") + " drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [FD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_235 $$ executeDDL("alter table " + node.getString("TABLENAME") + " drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [FD]
Line_227 $$ rsltrefs = pstmrefs.executeQuery() --> Line_235 $$ executeDDL("alter table " + node.getString("TABLENAME") + " drop constraint " + rsltrefs.getString(1), node.getString("SCHEMA")) [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_237 $$ rsltrefs.close() [CD]
Line_210 $$ ResultSet rsltrefs = pstmrefs.executeQuery() --> Line_237 $$ rsltrefs.close() [FD]
Line_227 $$ rsltrefs = pstmrefs.executeQuery() --> Line_237 $$ rsltrefs.close() [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_238 $$ pstmrefs.close() [CD]
Line_207 $$ PreparedStatement pstmrefs = cn.prepareStatement(sql) --> Line_238 $$ pstmrefs.close() [FD]
Line_224 $$ pstmrefs = cn.prepareStatement(sql) --> Line_238 $$ pstmrefs.close() [FD]
Line_205 $$ if ((modo.equals("3") || diff) && exists) --> Line_239 $$ if (exists && diff) [CD]
Line_199 $$ exists = true --> Line_239 $$ if (exists && diff) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_239 $$ if (exists && diff) [FD]
Line_141 $$ exists = true --> Line_239 $$ if (exists && diff) [FD]
Line_202 $$ boolean diff = !expression.toString().toUpperCase().equals(node.getString("EXPRESSION")) --> Line_239 $$ if (exists && diff) [FD]
Line_239 $$ if (exists && diff) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_9 $$ String dml = null --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_242 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_185 $$ if (objecttype.startsWith("PK") || objecttype.startsWith("UN")) --> Line_248 $$ if (!modo.equals("3") && (!exists || diff)) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_248 $$ if (!modo.equals("3") && (!exists || diff)) [FD]
Line_199 $$ exists = true --> Line_248 $$ if (!modo.equals("3") && (!exists || diff)) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_248 $$ if (!modo.equals("3") && (!exists || diff)) [FD]
Line_141 $$ exists = true --> Line_248 $$ if (!modo.equals("3") && (!exists || diff)) [FD]
Line_248 $$ if (!modo.equals("3") && (!exists || diff)) --> Line_249 $$ if (isunique) [CD]
Line_249 $$ if (isunique) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_9 $$ String dml = null --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" [FD]
Line_249 $$ if (isunique) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_9 $$ String dml = null --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" [FD]
Line_248 $$ if (!modo.equals("3") && (!exists || diff)) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_254 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_257 $$ if (objecttype.startsWith("FK")) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_259 $$ PreparedStatement pstm = cn.prepareStatement(sql) [CD]
Line_3 $$ Connection cn = null --> Line_259 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_259 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_259 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_259 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" --> Line_259 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_260 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_260 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_260 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_261 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_261 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_261 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_262 $$ pstm.setString(3, schema.toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_262 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_262 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_263 $$ ResultSet rslt = pstm.executeQuery() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_263 $$ ResultSet rslt = pstm.executeQuery() [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_265 $$ String cExpress = "" [CD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_266 $$ String express = node.getString("EXPRESSION") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_266 $$ String express = node.getString("EXPRESSION") [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_267 $$ if (rslt.next()) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_267 $$ if (rslt.next()) [FD]
Line_267 $$ if (rslt.next()) --> Line_268 $$ exists = true [CD]
Line_199 $$ exists = true --> Line_268 $$ exists = true [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_268 $$ exists = true [FD]
Line_141 $$ exists = true --> Line_268 $$ exists = true [FD]
Line_267 $$ if (rslt.next()) --> Line_269 $$ if (cExpress.length() > 0) [CD]
Line_265 $$ String cExpress = "" --> Line_269 $$ if (cExpress.length() > 0) [FD]
Line_267 $$ if (rslt.next()) --> Line_270 $$ cExpress += rslt.getString(1) [CD]
Line_265 $$ String cExpress = "" --> Line_270 $$ cExpress += rslt.getString(1) [FD]
Line_269 $$ if (cExpress.length() > 0) --> Line_270 $$ cExpress += rslt.getString(1) [FD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_270 $$ cExpress += rslt.getString(1) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_272 $$ rslt.close() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_272 $$ rslt.close() [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_273 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_273 $$ pstm.close() [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_274 $$ if (exists && !express.equals(cExpress)) [CD]
Line_199 $$ exists = true --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_141 $$ exists = true --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_268 $$ exists = true --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_266 $$ String express = node.getString("EXPRESSION") --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_265 $$ String cExpress = "" --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_269 $$ if (cExpress.length() > 0) --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_270 $$ cExpress += rslt.getString(1) --> Line_274 $$ if (exists && !express.equals(cExpress)) [FD]
Line_274 $$ if (exists && !express.equals(cExpress)) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_9 $$ String dml = null --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") [FD]
Line_274 $$ if (exists && !express.equals(cExpress)) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_276 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_257 $$ if (objecttype.startsWith("FK")) --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_199 $$ exists = true --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_141 $$ exists = true --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_268 $$ exists = true --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_266 $$ String express = node.getString("EXPRESSION") --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_265 $$ String cExpress = "" --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_269 $$ if (cExpress.length() > 0) --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_270 $$ cExpress += rslt.getString(1) --> Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) [FD]
Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_9 $$ String dml = null --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" [FD]
Line_278 $$ if (!modo.equals("3") && (!exists || !express.equals(cExpress))) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_280 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_10 $$ String objecttype = node.getString("OBJECTTYPE") --> Line_283 $$ if (objecttype.startsWith("IDX")) [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_284 $$ boolean unflag = false [CD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_286 $$ PreparedStatement pstm = cn.prepareStatement(sql) [CD]
Line_3 $$ Connection cn = null --> Line_286 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_286 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_286 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_286 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" --> Line_286 $$ PreparedStatement pstm = cn.prepareStatement(sql) [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_287 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_287 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_287 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_288 $$ pstm.setString(2, schema.toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_288 $$ pstm.setString(2, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_288 $$ pstm.setString(2, schema.toLowerCase()) [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_289 $$ ResultSet rslt = pstm.executeQuery() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_289 $$ ResultSet rslt = pstm.executeQuery() [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_292 $$ boolean dbunflag = false [CD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_293 $$ String oldexpression = "" [CD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_294 $$ String newexpression = "" [CD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_295 $$ if (rslt.next()) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_295 $$ if (rslt.next()) [FD]
Line_295 $$ if (rslt.next()) --> Line_296 $$ exists = true [CD]
Line_199 $$ exists = true --> Line_296 $$ exists = true [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_296 $$ exists = true [FD]
Line_141 $$ exists = true --> Line_296 $$ exists = true [FD]
Line_268 $$ exists = true --> Line_296 $$ exists = true [FD]
Line_295 $$ if (rslt.next()) --> Line_297 $$ if ((unflag && !(dbunflag = rslt.getString(1).equals("UNIQUE")))) [CD]
Line_292 $$ boolean dbunflag = false --> Line_297 $$ if ((unflag && !(dbunflag = rslt.getString(1).equals("UNIQUE")))) [FD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_297 $$ if ((unflag && !(dbunflag = rslt.getString(1).equals("UNIQUE")))) [FD]
Line_297 $$ if ((unflag && !(dbunflag = rslt.getString(1).equals("UNIQUE")))) --> Line_298 $$ drop = true [CD]
Line_74 $$ boolean drop = false --> Line_298 $$ drop = true [FD]
Line_295 $$ if (rslt.next()) --> Line_300 $$ rslt.close() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_300 $$ rslt.close() [FD]
Line_295 $$ if (rslt.next()) --> Line_301 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_301 $$ pstm.close() [FD]
Line_295 $$ if (rslt.next()) --> Line_302 $$ sql = "SELECT kcu.column_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.constraint_name=?" + " and tc.table_name=?" + " and tc.table_schema=? and tc.constraint_type='UNIQUE'" [CD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_302 $$ sql = "SELECT kcu.column_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.constraint_name=?" + " and tc.table_name=?" + " and tc.table_schema=? and tc.constraint_type='UNIQUE'" [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_302 $$ sql = "SELECT kcu.column_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.constraint_name=?" + " and tc.table_name=?" + " and tc.table_schema=? and tc.constraint_type='UNIQUE'" [FD]
Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" --> Line_302 $$ sql = "SELECT kcu.column_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.constraint_name=?" + " and tc.table_name=?" + " and tc.table_schema=? and tc.constraint_type='UNIQUE'" [FD]
Line_295 $$ if (rslt.next()) --> Line_303 $$ pstm = cn.prepareStatement(sql) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_3 $$ Connection cn = null --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_81 $$ String sql = "SELECT tc.constraint_name,tc.constraint_type" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name = ?" + " AND kcu.column_name = ?" + " and tc.table_schema=?" --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_206 $$ sql = "SELECT tc.constraint_name,tc.table_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE ccu.constraint_name = ?" + " and tc.table_schema=?" --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_223 $$ sql = "SELECT tc.constraint_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.table_name=? and " + "kcu.column_name in (" + insql + ")" + " and tc.table_schema=?" --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_302 $$ sql = "SELECT kcu.column_name" + " FROM information_schema.table_constraints tc" + " LEFT JOIN information_schema.key_column_usage kcu" + " ON tc.constraint_catalog = kcu.constraint_catalog" + " AND tc.constraint_schema = kcu.constraint_schema" + " AND tc.constraint_name = kcu.constraint_name" + " LEFT JOIN information_schema.referential_constraints rc" + " ON tc.constraint_catalog = rc.constraint_catalog" + " AND tc.constraint_schema = rc.constraint_schema" + " AND tc.constraint_name = rc.constraint_name" + " LEFT JOIN information_schema.constraint_column_usage ccu" + " ON rc.unique_constraint_catalog = ccu.constraint_catalog" + " AND rc.unique_constraint_schema = ccu.constraint_schema" + " AND rc.unique_constraint_name = ccu.constraint_name" + " WHERE tc.constraint_name=?" + " and tc.table_name=?" + " and tc.table_schema=? and tc.constraint_type='UNIQUE'" --> Line_303 $$ pstm = cn.prepareStatement(sql) [FD]
Line_295 $$ if (rslt.next()) --> Line_304 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_304 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_303 $$ pstm = cn.prepareStatement(sql) --> Line_304 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_304 $$ pstm.setString(1, node.getString("OBJECTNAME").toLowerCase()) [FD]
Line_295 $$ if (rslt.next()) --> Line_305 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_305 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [FD]
Line_303 $$ pstm = cn.prepareStatement(sql) --> Line_305 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_305 $$ pstm.setString(2, node.getString("TABLENAME").toLowerCase()) [FD]
Line_295 $$ if (rslt.next()) --> Line_306 $$ pstm.setString(3, schema.toLowerCase()) [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_306 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_303 $$ pstm = cn.prepareStatement(sql) --> Line_306 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_5 $$ String schema = boRepository.getDefaultSchemaName(boApplication.getDefaultApplication()).toLowerCase() --> Line_306 $$ pstm.setString(3, schema.toLowerCase()) [FD]
Line_295 $$ if (rslt.next()) --> Line_307 $$ rslt = pstm.executeQuery() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_307 $$ rslt = pstm.executeQuery() [FD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_307 $$ rslt = pstm.executeQuery() [FD]
Line_303 $$ pstm = cn.prepareStatement(sql) --> Line_307 $$ rslt = pstm.executeQuery() [FD]
Line_295 $$ if (rslt.next()) --> Line_308 $$ while (rslt.next()) [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_308 $$ while (rslt.next()) [FD]
Line_307 $$ rslt = pstm.executeQuery() --> Line_308 $$ while (rslt.next()) [FD]
Line_308 $$ while (rslt.next()) --> Line_309 $$ oldexpression += (((oldexpression.length() > 0) ? "," : "") + rslt.getString(1)) [CD]
Line_293 $$ String oldexpression = "" --> Line_309 $$ oldexpression += (((oldexpression.length() > 0) ? "," : "") + rslt.getString(1)) [FD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_309 $$ oldexpression += (((oldexpression.length() > 0) ? "," : "") + rslt.getString(1)) [FD]
Line_307 $$ rslt = pstm.executeQuery() --> Line_309 $$ oldexpression += (((oldexpression.length() > 0) ? "," : "") + rslt.getString(1)) [FD]
Line_295 $$ if (rslt.next()) --> Line_311 $$ rslt.close() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_311 $$ rslt.close() [FD]
Line_307 $$ rslt = pstm.executeQuery() --> Line_311 $$ rslt.close() [FD]
Line_295 $$ if (rslt.next()) --> Line_312 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_312 $$ pstm.close() [FD]
Line_303 $$ pstm = cn.prepareStatement(sql) --> Line_312 $$ pstm.close() [FD]
Line_295 $$ if (rslt.next()) --> Line_314 $$ rslt.close() [CD]
Line_48 $$ ResultSet rslt = pstm.executeQuery() --> Line_314 $$ rslt.close() [FD]
Line_307 $$ rslt = pstm.executeQuery() --> Line_314 $$ rslt.close() [FD]
Line_295 $$ if (rslt.next()) --> Line_315 $$ pstm.close() [CD]
Line_44 $$ PreparedStatement pstm = cn.prepareStatement("select column_name,udt_name,character_maximum_length,numeric_precision,numeric_scale from information_schema.columns" + "  where table_name=? and column_name=? and table_schema=?") --> Line_315 $$ pstm.close() [FD]
Line_303 $$ pstm = cn.prepareStatement(sql) --> Line_315 $$ pstm.close() [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_317 $$ String aux = node.getString("EXPRESSION") [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_317 $$ String aux = node.getString("EXPRESSION") [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_318 $$ String[] nexo [CD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_319 $$ if (aux != null) [CD]
Line_317 $$ String aux = node.getString("EXPRESSION") --> Line_319 $$ if (aux != null) [FD]
Line_319 $$ if (aux != null) --> Line_320 $$ nexo = node.getString("EXPRESSION").split(",") [CD]
Line_318 $$ String[] nexo --> Line_320 $$ nexo = node.getString("EXPRESSION").split(",") [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_320 $$ nexo = node.getString("EXPRESSION").split(",") [FD]
Line_319 $$ if (aux != null) --> Line_322 $$ nexo = new String[0] [CD]
Line_318 $$ String[] nexo --> Line_322 $$ nexo = new String[0] [FD]
Line_320 $$ nexo = node.getString("EXPRESSION").split(",") --> Line_322 $$ nexo = new String[0] [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_324 $$ for (byte i = 0; i < nexo.length; i++) [CD]
Line_21 $$ for (int i = 0; i < sysflds.length; i++) --> Line_324 $$ for (byte i = 0; i < nexo.length; i++) [FD]
Line_324 $$ for (byte i = 0; i < nexo.length; i++) --> Line_325 $$ newexpression += (((newexpression.length() > 0) ? "," : "") + ((nexo[i]).toUpperCase().trim())) [CD]
Line_294 $$ String newexpression = "" --> Line_325 $$ newexpression += (((newexpression.length() > 0) ? "," : "") + ((nexo[i]).toUpperCase().trim())) [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_327 $$ if (!drop) [CD]
Line_74 $$ boolean drop = false --> Line_327 $$ if (!drop) [FD]
Line_298 $$ drop = true --> Line_327 $$ if (!drop) [FD]
Line_327 $$ if (!drop) --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [CD]
Line_74 $$ boolean drop = false --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [FD]
Line_298 $$ drop = true --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [FD]
Line_325 $$ newexpression += (((newexpression.length() > 0) ? "," : "") + ((nexo[i]).toUpperCase().trim())) --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [FD]
Line_294 $$ String newexpression = "" --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [FD]
Line_309 $$ oldexpression += (((oldexpression.length() > 0) ? "," : "") + rslt.getString(1)) --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [FD]
Line_293 $$ String oldexpression = "" --> Line_328 $$ drop = (!newexpression.equals(oldexpression)) && !oldexpression.equals("") [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [CD]
Line_199 $$ exists = true --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [FD]
Line_141 $$ exists = true --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [FD]
Line_268 $$ exists = true --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [FD]
Line_296 $$ exists = true --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_330 $$ if (exists && (drop || modo.equals("3"))) [FD]
Line_330 $$ if (exists && (drop || modo.equals("3"))) --> Line_331 $$ if (!dbunflag) [CD]
Line_292 $$ boolean dbunflag = false --> Line_331 $$ if (!dbunflag) [FD]
Line_297 $$ if ((unflag && !(dbunflag = rslt.getString(1).equals("UNIQUE")))) --> Line_331 $$ if (!dbunflag) [FD]
Line_331 $$ if (!dbunflag) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_9 $$ String dml = null --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") [FD]
Line_331 $$ if (!dbunflag) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_9 $$ String dml = null --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") [FD]
Line_330 $$ if (exists && (drop || modo.equals("3"))) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_336 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_330 $$ if (exists && (drop || modo.equals("3"))) --> Line_337 $$ exists = false [CD]
Line_199 $$ exists = true --> Line_337 $$ exists = false [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_337 $$ exists = false [FD]
Line_141 $$ exists = true --> Line_337 $$ exists = false [FD]
Line_268 $$ exists = true --> Line_337 $$ exists = false [FD]
Line_296 $$ exists = true --> Line_337 $$ exists = false [FD]
Line_283 $$ if (objecttype.startsWith("IDX")) --> Line_339 $$ if (!exists && !modo.equals("3")) [CD]
Line_199 $$ exists = true --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_12 $$ boolean exists = existsTable(p_ctx, schema, node.getString("OBJECTNAME").toLowerCase()) --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_141 $$ exists = true --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_268 $$ exists = true --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_296 $$ exists = true --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_337 $$ exists = false --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_339 $$ if (!exists && !modo.equals("3")) [FD]
Line_339 $$ if (!exists && !modo.equals("3")) --> Line_340 $$ if (!node.getString("OBJECTNAME").equals("") && !newexpression.equals("")) [CD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_340 $$ if (!node.getString("OBJECTNAME").equals("") && !newexpression.equals("")) [FD]
Line_325 $$ newexpression += (((newexpression.length() > 0) ? "," : "") + ((nexo[i]).toUpperCase().trim())) --> Line_340 $$ if (!node.getString("OBJECTNAME").equals("") && !newexpression.equals("")) [FD]
Line_294 $$ String newexpression = "" --> Line_340 $$ if (!node.getString("OBJECTNAME").equals("") && !newexpression.equals("")) [FD]
Line_340 $$ if (!node.getString("OBJECTNAME").equals("") && !newexpression.equals("")) --> Line_341 $$ if (!unflag) [CD]
Line_284 $$ boolean unflag = false --> Line_341 $$ if (!unflag) [FD]
Line_341 $$ if (!unflag) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_9 $$ String dml = null --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" [FD]
Line_341 $$ if (!unflag) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_9 $$ String dml = null --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" [FD]
Line_340 $$ if (!node.getString("OBJECTNAME").equals("") && !newexpression.equals("")) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [CD]
Line_22 $$ dml += (sysflds[i] + " " + sysfdef[i] + ((i < (sysflds.length - 1)) ? "," : ")")) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_9 $$ String dml = null --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_20 $$ dml = "CREATE TABLE " + node.getString("OBJECTNAME") + " (" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_76 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " add \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_78 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ALTER COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_80 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " drop  COLUMN \"" + node.getString("OBJECTNAME").toLowerCase() + "\" " --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_120 $$ dml += getDDLFieldFromNGT(ngtft, node.getString("FIELDSIZE")) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_122 $$ dml += getMacrofieldDef(cndef, node.getString("MACROFIELD")) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_124 $$ dml += getDDLFieldFromNGT(node.getString("FIELDTYPE"), node.getString("FIELDSIZE")) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_150 $$ dml = "CREATE OR REPLACE VIEW \"" + node.getString("OBJECTNAME") + "\" AS \n" + vExpression --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_155 $$ dml = "DROP VIEW " + node.getString("OBJECTNAME") --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_171 $$ dml = templatestr.substring(templatestr.indexOf(bstr), defpos = templatestr.indexOf(estr)) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_172 $$ dml = "create or replace package " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_177 $$ dml = templatestr.substring(templatestr.indexOf(bstr, defpos), templatestr.indexOf(estr, defpos)) --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_178 $$ dml = "create or replace package body " + node.getString("OBJECTNAME") + " is \n" + dml + "end " + node.getString("OBJECTNAME") + ";\n" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_240 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_250 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " unique (" + node.getString("EXPRESSION") + ")" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_252 $$ dml = "alter table " + node.getString("TABLENAME") + " add primary key (" + node.getString("EXPRESSION") + ")" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_275 $$ dml = "alter table " + node.getString("TABLENAME") + " drop constraint " + node.getString("OBJECTNAME") --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_279 $$ dml = "alter table " + node.getString("TABLENAME") + " add constraint " + node.getString("OBJECTNAME") + " foreign key (" + node.getString("EXPRESSION") + ") references " + node.getString("TABLEREFERENCE") + "(" + node.getString("FIELDREFERENCE") + ")" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_332 $$ dml = "DROP INDEX " + node.getString("OBJECTNAME") --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_334 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " DROP CONSTRAINT " + node.getString("OBJECTNAME") --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_342 $$ dml = "CREATE INDEX " + node.getString("OBJECTNAME") + " ON " + node.getString("TABLENAME") + "(" + newexpression + ")" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_344 $$ dml = "ALTER TABLE " + node.getString("TABLENAME") + " ADD CONSTRAINT " + node.getString("OBJECTNAME") + " UNIQUE (" + newexpression + ")" --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_346 $$ executeDDL(dml, node.getString("SCHEMA")) [FD]
Line_2 $$ private String AddAction(ResultSet node, String modo) throws SQLException --> Line_350 $$ updateDictionaryTable(node, modo) [FD]
Line_3 $$ Connection cn = null --> Line_353 $$ cn.rollback() [FD]
Line_7 $$ cn = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 1) --> Line_353 $$ cn.rollback() [FD]
Line_4 $$ Connection cndef = null --> Line_354 $$ cndef.rollback() [FD]
Line_8 $$ cndef = this.getRepositoryConnection(p_ctx.getApplication(), p_ctx.getBoSession().getRepository().getName(), 2) --> Line_354 $$ cndef.rollback() [FD]
