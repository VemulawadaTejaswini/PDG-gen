Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_5 $$ connection.setInstanceFollowRedirects(false) [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_6 $$ connection.connect() [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_9 $$ String location = connection.getHeaderField("Location") [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_9 $$ String location = connection.getHeaderField("Location") [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_10 $$ logger.finest("Redirecting to " + location) [CD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_11 $$ connection.disconnect() [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_11 $$ connection.disconnect() [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_12 $$ this.url = new URL(location) [CD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_14 $$ connection.setInstanceFollowRedirects(false) [CD]
Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() --> Line_14 $$ connection.setInstanceFollowRedirects(false) [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_14 $$ connection.setInstanceFollowRedirects(false) [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_15 $$ connection.connect() [CD]
Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() --> Line_15 $$ connection.connect() [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_15 $$ connection.connect() [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_16 $$ count++ [CD]
Line_7 $$ int count = 0 --> Line_16 $$ count++ [FD]
Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) --> Line_17 $$ if (count > 10) [CD]
Line_7 $$ int count = 0 --> Line_17 $$ if (count > 10) [FD]
Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() --> Line_21 $$ InputStream inputStream = connection.getInputStream() [FD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) this.url.openConnection() --> Line_21 $$ InputStream inputStream = connection.getInputStream() [FD]
Line_24 $$ ParserDelegator parser = new ParserDelegator() --> Line_25 $$ parser.parse(reader, callback, false) [FD]
Line_22 $$ InputStreamReader reader = new InputStreamReader(inputStream) --> Line_25 $$ parser.parse(reader, callback, false) [FD]
Line_23 $$ HtmlRegistryParserCallback callback = new HtmlRegistryParserCallback() --> Line_25 $$ parser.parse(reader, callback, false) [FD]
Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() --> Line_8 $$ while (String.valueOf(connection.getResponseCode()).startsWith("3")) [FD]
Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() --> Line_9 $$ String location = connection.getHeaderField("Location") [FD]
Line_13 $$ connection = (HttpURLConnection) this.url.openConnection() --> Line_11 $$ connection.disconnect() [FD]
