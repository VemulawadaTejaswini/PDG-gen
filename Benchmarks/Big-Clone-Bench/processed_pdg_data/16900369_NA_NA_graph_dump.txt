Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_3 $$ ResourceBundle messages = ResourceBundle.getBundle("ApplicationResources", locale) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_4 $$ String tpl [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_5 $$ int count = 0 [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_6 $$ int numberOfSpecialPages = 7 [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_7 $$ progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_8 $$ count++ [CD]
Line_5 $$ int count = 0 --> Line_8 $$ count++ [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_9 $$ String cssContent = wb.readRaw(virtualWiki, "StyleSheet") [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_10 $$ addZipEntry(zipout, "css/vqwiki.css", cssContent) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_10 $$ addZipEntry(zipout, "css/vqwiki.css", cssContent) [FD]
Line_9 $$ String cssContent = wb.readRaw(virtualWiki, "StyleSheet") --> Line_10 $$ addZipEntry(zipout, "css/vqwiki.css", cssContent) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_11 $$ progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_12 $$ count++ [CD]
Line_5 $$ int count = 0 --> Line_12 $$ count++ [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_13 $$ tpl = getTemplateFilledWithContent("search") [CD]
Line_4 $$ String tpl --> Line_13 $$ tpl = getTemplateFilledWithContent("search") [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_14 $$ addTopicEntry(zipout, tpl, "WikiSearch", "WikiSearch.html") [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_14 $$ addTopicEntry(zipout, tpl, "WikiSearch", "WikiSearch.html") [FD]
Line_4 $$ String tpl --> Line_14 $$ addTopicEntry(zipout, tpl, "WikiSearch", "WikiSearch.html") [FD]
Line_13 $$ tpl = getTemplateFilledWithContent("search") --> Line_14 $$ addTopicEntry(zipout, tpl, "WikiSearch", "WikiSearch.html") [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_15 $$ progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_16 $$ count++ [CD]
Line_5 $$ int count = 0 --> Line_16 $$ count++ [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_17 $$ zipout.putNextEntry(new ZipEntry("applets/export2html-applet.jar")) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_17 $$ zipout.putNextEntry(new ZipEntry("applets/export2html-applet.jar")) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_18 $$ IOUtils.copy(new FileInputStream(ctx.getRealPath("/WEB-INF/classes/export2html/export2html-applet.jar")), zipout) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_18 $$ IOUtils.copy(new FileInputStream(ctx.getRealPath("/WEB-INF/classes/export2html/export2html-applet.jar")), zipout) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_19 $$ zipout.closeEntry() [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_19 $$ zipout.closeEntry() [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_20 $$ zipout.flush() [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_20 $$ zipout.flush() [FD]
Line_25 $$ File searchDir = new File(wb.getSearchEngine().getSearchIndexPath(virtualWiki)) --> Line_26 $$ String files[] = searchDir.list() [FD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_29 $$ if (listOfAllFiles.length() > 0) [CD]
Line_27 $$ StringBuffer listOfAllFiles = new StringBuffer() --> Line_29 $$ if (listOfAllFiles.length() > 0) [FD]
Line_29 $$ if (listOfAllFiles.length() > 0) --> Line_30 $$ listOfAllFiles.append(",") [CD]
Line_27 $$ StringBuffer listOfAllFiles = new StringBuffer() --> Line_30 $$ listOfAllFiles.append(",") [FD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_32 $$ listOfAllFiles.append(files[i]) [CD]
Line_27 $$ StringBuffer listOfAllFiles = new StringBuffer() --> Line_32 $$ listOfAllFiles.append(files[i]) [FD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_33 $$ jarEntry = new JarEntry("lucene/index/" + files[i]) [CD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_34 $$ indexjar.putNextEntry(jarEntry) [CD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_34 $$ indexjar.putNextEntry(jarEntry) [FD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_35 $$ IOUtils.copy(new FileInputStream(new File(searchDir, files[i])), indexjar) [CD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_35 $$ IOUtils.copy(new FileInputStream(new File(searchDir, files[i])), indexjar) [FD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_36 $$ indexjar.closeEntry() [CD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_36 $$ indexjar.closeEntry() [FD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_38 $$ indexjar.flush() [FD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_39 $$ indexjar.putNextEntry(new JarEntry("lucene/index.dir")) [FD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_40 $$ IOUtils.copy(new StringReader(listOfAllFiles.toString()), indexjar) [FD]
Line_27 $$ StringBuffer listOfAllFiles = new StringBuffer() --> Line_40 $$ IOUtils.copy(new StringReader(listOfAllFiles.toString()), indexjar) [FD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_41 $$ indexjar.closeEntry() [FD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_42 $$ indexjar.flush() [FD]
Line_23 $$ JarOutputStream indexjar = new JarOutputStream(bos) --> Line_43 $$ indexjar.close() [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_44 $$ zipout.putNextEntry(new ZipEntry("applets/index.jar")) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_45 $$ zipout.write(bos.toByteArray()) [FD]
Line_22 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream() --> Line_45 $$ zipout.write(bos.toByteArray()) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_46 $$ zipout.closeEntry() [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_47 $$ zipout.flush() [FD]
Line_22 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream() --> Line_48 $$ bos.reset() [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_52 $$ progress = Math.min(progressStart + (int) ((double) count * (double) progressLength / numberOfSpecialPages), 99) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_53 $$ count++ [CD]
Line_5 $$ int count = 0 --> Line_53 $$ count++ [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_54 $$ StringBuffer content = new StringBuffer() [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_55 $$ content.append("<table><tr><th>" + messages.getString("common.date") + "</th><th>" + messages.getString("common.topic") + "</th><th>" + messages.getString("common.user") + "</th></tr>" + IOUtils.LINE_SEPARATOR) [CD]
Line_54 $$ StringBuffer content = new StringBuffer() --> Line_55 $$ content.append("<table><tr><th>" + messages.getString("common.date") + "</th><th>" + messages.getString("common.topic") + "</th><th>" + messages.getString("common.user") + "</th></tr>" + IOUtils.LINE_SEPARATOR) [FD]
Line_3 $$ ResourceBundle messages = ResourceBundle.getBundle("ApplicationResources", locale) --> Line_55 $$ content.append("<table><tr><th>" + messages.getString("common.date") + "</th><th>" + messages.getString("common.topic") + "</th><th>" + messages.getString("common.user") + "</th></tr>" + IOUtils.LINE_SEPARATOR) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_56 $$ Collection all = null [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_60 $$ int n = env.getIntSetting(Environment.PROPERTY_RECENT_CHANGES_DAYS) [FD]
Line_60 $$ int n = env.getIntSetting(Environment.PROPERTY_RECENT_CHANGES_DAYS) --> Line_61 $$ if (n == 0) [FD]
Line_61 $$ if (n == 0) --> Line_62 $$ n = 5 [CD]
Line_60 $$ int n = env.getIntSetting(Environment.PROPERTY_RECENT_CHANGES_DAYS) --> Line_62 $$ n = 5 [FD]
Line_56 $$ Collection all = null --> Line_64 $$ all = new ArrayList() [FD]
Line_28 $$ for (int i = 0; i < files.length; i++) --> Line_65 $$ for (int i = 0; i < n; i++) [FD]
Line_60 $$ int n = env.getIntSetting(Environment.PROPERTY_RECENT_CHANGES_DAYS) --> Line_65 $$ for (int i = 0; i < n; i++) [FD]
Line_62 $$ n = 5 --> Line_65 $$ for (int i = 0; i < n; i++) [FD]
Line_65 $$ for (int i = 0; i < n; i++) --> Line_66 $$ Collection col = cl.getChanges(virtualWiki, cal.getTime()) [CD]
Line_59 $$ ChangeLog cl = wb.getChangeLog() --> Line_66 $$ Collection col = cl.getChanges(virtualWiki, cal.getTime()) [FD]
Line_58 $$ Calendar cal = Calendar.getInstance() --> Line_66 $$ Collection col = cl.getChanges(virtualWiki, cal.getTime()) [FD]
Line_65 $$ for (int i = 0; i < n; i++) --> Line_67 $$ if (col != null) [CD]
Line_66 $$ Collection col = cl.getChanges(virtualWiki, cal.getTime()) --> Line_67 $$ if (col != null) [FD]
Line_67 $$ if (col != null) --> Line_68 $$ all.addAll(col) [CD]
Line_56 $$ Collection all = null --> Line_68 $$ all.addAll(col) [FD]
Line_64 $$ all = new ArrayList() --> Line_68 $$ all.addAll(col) [FD]
Line_66 $$ Collection col = cl.getChanges(virtualWiki, cal.getTime()) --> Line_68 $$ all.addAll(col) [FD]
Line_65 $$ for (int i = 0; i < n; i++) --> Line_70 $$ cal.add(Calendar.DATE, -1) [CD]
Line_58 $$ Calendar cal = Calendar.getInstance() --> Line_70 $$ cal.add(Calendar.DATE, -1) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_74 $$ DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale) [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_75 $$ for (Iterator iter = all.iterator(); iter.hasNext(); ) [CD]
Line_56 $$ Collection all = null --> Line_75 $$ for (Iterator iter = all.iterator(); iter.hasNext(); ) [FD]
Line_64 $$ all = new ArrayList() --> Line_75 $$ for (Iterator iter = all.iterator(); iter.hasNext(); ) [FD]
Line_75 $$ for (Iterator iter = all.iterator(); iter.hasNext(); ) --> Line_76 $$ Change change = (Change) iter.next() [CD]
Line_75 $$ for (Iterator iter = all.iterator(); iter.hasNext(); ) --> Line_76 $$ Change change = (Change) iter.next() [FD]
Line_75 $$ for (Iterator iter = all.iterator(); iter.hasNext(); ) --> Line_77 $$ content.append("<tr><td class=\"recent\">" + df.format(change.getTime()) + "</td><td class=\"recent\"><a href=\"" + safename(change.getTopic()) + ".html\">" + change.getTopic() + "</a></td><td class=\"recent\">" + change.getUser() + "</td></tr>") [CD]
Line_54 $$ StringBuffer content = new StringBuffer() --> Line_77 $$ content.append("<tr><td class=\"recent\">" + df.format(change.getTime()) + "</td><td class=\"recent\"><a href=\"" + safename(change.getTopic()) + ".html\">" + change.getTopic() + "</a></td><td class=\"recent\">" + change.getUser() + "</td></tr>") [FD]
Line_74 $$ DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, locale) --> Line_77 $$ content.append("<tr><td class=\"recent\">" + df.format(change.getTime()) + "</td><td class=\"recent\"><a href=\"" + safename(change.getTopic()) + ".html\">" + change.getTopic() + "</a></td><td class=\"recent\">" + change.getUser() + "</td></tr>") [FD]
Line_76 $$ Change change = (Change) iter.next() --> Line_77 $$ content.append("<tr><td class=\"recent\">" + df.format(change.getTime()) + "</td><td class=\"recent\"><a href=\"" + safename(change.getTopic()) + ".html\">" + change.getTopic() + "</a></td><td class=\"recent\">" + change.getUser() + "</td></tr>") [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_79 $$ content.append("</table>" + IOUtils.LINE_SEPARATOR) [CD]
Line_54 $$ StringBuffer content = new StringBuffer() --> Line_79 $$ content.append("</table>" + IOUtils.LINE_SEPARATOR) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_80 $$ tpl = getTemplateFilledWithContent(null) [CD]
Line_4 $$ String tpl --> Line_80 $$ tpl = getTemplateFilledWithContent(null) [FD]
Line_13 $$ tpl = getTemplateFilledWithContent("search") --> Line_80 $$ tpl = getTemplateFilledWithContent(null) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_81 $$ tpl = tpl.replaceAll("@@CONTENTS@@", content.toString()) [CD]
Line_4 $$ String tpl --> Line_81 $$ tpl = tpl.replaceAll("@@CONTENTS@@", content.toString()) [FD]
Line_13 $$ tpl = getTemplateFilledWithContent("search") --> Line_81 $$ tpl = tpl.replaceAll("@@CONTENTS@@", content.toString()) [FD]
Line_80 $$ tpl = getTemplateFilledWithContent(null) --> Line_81 $$ tpl = tpl.replaceAll("@@CONTENTS@@", content.toString()) [FD]
Line_54 $$ StringBuffer content = new StringBuffer() --> Line_81 $$ tpl = tpl.replaceAll("@@CONTENTS@@", content.toString()) [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_82 $$ addTopicEntry(zipout, tpl, "RecentChanges", "RecentChanges.html") [CD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_82 $$ addTopicEntry(zipout, tpl, "RecentChanges", "RecentChanges.html") [FD]
Line_4 $$ String tpl --> Line_82 $$ addTopicEntry(zipout, tpl, "RecentChanges", "RecentChanges.html") [FD]
Line_13 $$ tpl = getTemplateFilledWithContent("search") --> Line_82 $$ addTopicEntry(zipout, tpl, "RecentChanges", "RecentChanges.html") [FD]
Line_80 $$ tpl = getTemplateFilledWithContent(null) --> Line_82 $$ addTopicEntry(zipout, tpl, "RecentChanges", "RecentChanges.html") [FD]
Line_81 $$ tpl = tpl.replaceAll("@@CONTENTS@@", content.toString()) --> Line_82 $$ addTopicEntry(zipout, tpl, "RecentChanges", "RecentChanges.html") [FD]
Line_2 $$ private void addAllSpecialPages(Environment env, ZipOutputStream zipout, int progressStart, int progressLength) throws Exception, IOException --> Line_83 $$ logger.fine("Done adding all special topics.") [CD]
