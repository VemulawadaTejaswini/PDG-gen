Line_2 $$ private File downloadURL(URL url) --> Line_3 $$ MerlotDebug.msg("Downloading URL: " + url) [CD]
Line_2 $$ private File downloadURL(URL url) --> Line_4 $$ String filename = url.getFile() [CD]
Line_2 $$ private File downloadURL(URL url) --> Line_4 $$ String filename = url.getFile() [FD]
Line_2 $$ private File downloadURL(URL url) --> Line_5 $$ if (filename.indexOf('/') >= 0) [CD]
Line_4 $$ String filename = url.getFile() --> Line_5 $$ if (filename.indexOf('/') >= 0) [FD]
Line_5 $$ if (filename.indexOf('/') >= 0) --> Line_6 $$ filename = filename.substring(filename.lastIndexOf('/') + 1) [CD]
Line_4 $$ String filename = url.getFile() --> Line_6 $$ filename = filename.substring(filename.lastIndexOf('/') + 1) [FD]
Line_2 $$ private File downloadURL(URL url) --> Line_8 $$ File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, "plugins") [CD]
Line_2 $$ private File downloadURL(URL url) --> Line_9 $$ File cache = new File(userPluginsDir, filename) [CD]
Line_8 $$ File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, "plugins") --> Line_11 $$ if (!userPluginsDir.exists()) [FD]
Line_11 $$ if (!userPluginsDir.exists()) --> Line_12 $$ userPluginsDir.mkdirs() [CD]
Line_8 $$ File userPluginsDir = new File(XMLEditorSettings.USER_MERLOT_DIR, "plugins") --> Line_12 $$ userPluginsDir.mkdirs() [FD]
Line_2 $$ private File downloadURL(URL url) --> Line_14 $$ URLConnection connection = url.openConnection() [FD]
Line_9 $$ File cache = new File(userPluginsDir, filename) --> Line_15 $$ if (cache.exists() && cache.canRead()) [FD]
Line_15 $$ if (cache.exists() && cache.canRead()) --> Line_16 $$ connection.connect() [CD]
Line_14 $$ URLConnection connection = url.openConnection() --> Line_16 $$ connection.connect() [FD]
Line_15 $$ if (cache.exists() && cache.canRead()) --> Line_17 $$ long remoteTimestamp = connection.getLastModified() [CD]
Line_14 $$ URLConnection connection = url.openConnection() --> Line_17 $$ long remoteTimestamp = connection.getLastModified() [FD]
Line_15 $$ if (cache.exists() && cache.canRead()) --> Line_18 $$ if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) [CD]
Line_9 $$ File cache = new File(userPluginsDir, filename) --> Line_18 $$ if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) [FD]
Line_18 $$ if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) --> Line_19 $$ cache = downloadContent(connection, cache) [CD]
Line_9 $$ File cache = new File(userPluginsDir, filename) --> Line_19 $$ cache = downloadContent(connection, cache) [FD]
Line_14 $$ URLConnection connection = url.openConnection() --> Line_19 $$ cache = downloadContent(connection, cache) [FD]
Line_18 $$ if (remoteTimestamp == 0 || remoteTimestamp > cache.lastModified()) --> Line_21 $$ MerlotDebug.msg("Using cached version for URL: " + url) [CD]
Line_15 $$ if (cache.exists() && cache.canRead()) --> Line_24 $$ cache = downloadContent(connection, cache) [CD]
Line_9 $$ File cache = new File(userPluginsDir, filename) --> Line_24 $$ cache = downloadContent(connection, cache) [FD]
Line_19 $$ cache = downloadContent(connection, cache) --> Line_24 $$ cache = downloadContent(connection, cache) [FD]
Line_14 $$ URLConnection connection = url.openConnection() --> Line_24 $$ cache = downloadContent(connection, cache) [FD]
Line_2 $$ private File downloadURL(URL url) --> Line_29 $$ if (cache != null && cache.exists()) [CD]
Line_9 $$ File cache = new File(userPluginsDir, filename) --> Line_29 $$ if (cache != null && cache.exists()) [FD]
Line_19 $$ cache = downloadContent(connection, cache) --> Line_29 $$ if (cache != null && cache.exists()) [FD]
Line_24 $$ cache = downloadContent(connection, cache) --> Line_29 $$ if (cache != null && cache.exists()) [FD]
Line_29 $$ if (cache != null && cache.exists()) --> Line_30 $$ return cache [CD]
Line_29 $$ if (cache != null && cache.exists()) --> Line_32 $$ return null [CD]
