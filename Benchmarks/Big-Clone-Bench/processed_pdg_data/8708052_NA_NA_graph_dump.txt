Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_3 $$ Integer key [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_5 $$ if (pRequest.getParameter("key") == null) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_5 $$ if (pRequest.getParameter("key") == null) [FD]
Line_5 $$ if (pRequest.getParameter("key") == null) --> Line_6 $$ key = form.getPrimaryKey() [CD]
Line_3 $$ Integer key --> Line_6 $$ key = form.getPrimaryKey() [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_6 $$ key = form.getPrimaryKey() [FD]
Line_5 $$ if (pRequest.getParameter("key") == null) --> Line_8 $$ key = Integer.parseInt(pRequest.getParameter("key")) [CD]
Line_3 $$ Integer key --> Line_8 $$ key = Integer.parseInt(pRequest.getParameter("key")) [FD]
Line_6 $$ key = form.getPrimaryKey() --> Line_8 $$ key = Integer.parseInt(pRequest.getParameter("key")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_8 $$ key = Integer.parseInt(pRequest.getParameter("key")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_11 $$ if ((currentUser == null) || (!currentUser.getAdminRights() && (currentUser.getPrimaryKey() != key))) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_11 $$ if ((currentUser == null) || (!currentUser.getAdminRights() && (currentUser.getPrimaryKey() != key))) [FD]
Line_11 $$ if ((currentUser == null) || (!currentUser.getAdminRights() && (currentUser.getPrimaryKey() != key))) --> Line_12 $$ return (pMapping.findForward("denied")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_12 $$ return (pMapping.findForward("denied")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_14 $$ if (currentUser.getAdminRights()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_14 $$ if (currentUser.getAdminRights()) [FD]
Line_14 $$ if (currentUser.getAdminRights()) --> Line_15 $$ pRequest.setAttribute("isAdmin", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_15 $$ pRequest.setAttribute("isAdmin", new Boolean(true)) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_17 $$ if (currentUser.getPDFRights()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_17 $$ if (currentUser.getPDFRights()) [FD]
Line_17 $$ if (currentUser.getPDFRights()) --> Line_18 $$ pRequest.setAttribute("pdfRights", Boolean.TRUE) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_18 $$ pRequest.setAttribute("pdfRights", Boolean.TRUE) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_20 $$ User user = database.acquireUserByPrimaryKey(key) [CD]
Line_3 $$ Integer key --> Line_20 $$ User user = database.acquireUserByPrimaryKey(key) [FD]
Line_6 $$ key = form.getPrimaryKey() --> Line_20 $$ User user = database.acquireUserByPrimaryKey(key) [FD]
Line_8 $$ key = Integer.parseInt(pRequest.getParameter("key")) --> Line_20 $$ User user = database.acquireUserByPrimaryKey(key) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_21 $$ if (user.isSuperAdmin() && !currentUser.isSuperAdmin()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_21 $$ if (user.isSuperAdmin() && !currentUser.isSuperAdmin()) [FD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_21 $$ if (user.isSuperAdmin() && !currentUser.isSuperAdmin()) [FD]
Line_21 $$ if (user.isSuperAdmin() && !currentUser.isSuperAdmin()) --> Line_22 $$ return (pMapping.findForward("denied")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_22 $$ return (pMapping.findForward("denied")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_24 $$ pRequest.setAttribute("user", user) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_24 $$ pRequest.setAttribute("user", user) [FD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_24 $$ pRequest.setAttribute("user", user) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_25 $$ pRequest.setAttribute("taxonomy", database.acquireTaxonomy()) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_25 $$ pRequest.setAttribute("taxonomy", database.acquireTaxonomy()) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_26 $$ if (form.getAction().equals("none")) [CD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_26 $$ if (form.getAction().equals("none")) [FD]
Line_26 $$ if (form.getAction().equals("none")) --> Line_27 $$ form.setPrimaryKey(user.getPrimaryKey()) [CD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_27 $$ form.setPrimaryKey(user.getPrimaryKey()) [FD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_27 $$ form.setPrimaryKey(user.getPrimaryKey()) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_29 $$ if (form.getAction().equals("edit")) [CD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_29 $$ if (form.getAction().equals("edit")) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_30 $$ FormError formError = form.validateFields() [CD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_30 $$ FormError formError = form.validateFields() [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_31 $$ if (formError != null) [CD]
Line_30 $$ FormError formError = form.validateFields() --> Line_31 $$ if (formError != null) [FD]
Line_31 $$ if (formError != null) --> Line_32 $$ if (formError.getFormFieldErrors().get("firstName") != null) [CD]
Line_30 $$ FormError formError = form.validateFields() --> Line_32 $$ if (formError.getFormFieldErrors().get("firstName") != null) [FD]
Line_32 $$ if (formError.getFormFieldErrors().get("firstName") != null) --> Line_33 $$ pRequest.setAttribute("FirstNameBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_33 $$ pRequest.setAttribute("FirstNameBad", new Boolean(true)) [FD]
Line_31 $$ if (formError != null) --> Line_35 $$ if (formError.getFormFieldErrors().get("lastName") != null) [CD]
Line_30 $$ FormError formError = form.validateFields() --> Line_35 $$ if (formError.getFormFieldErrors().get("lastName") != null) [FD]
Line_35 $$ if (formError.getFormFieldErrors().get("lastName") != null) --> Line_36 $$ pRequest.setAttribute("LastNameBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_36 $$ pRequest.setAttribute("LastNameBad", new Boolean(true)) [FD]
Line_31 $$ if (formError != null) --> Line_38 $$ if (formError.getFormFieldErrors().get("emailAddress") != null) [CD]
Line_30 $$ FormError formError = form.validateFields() --> Line_38 $$ if (formError.getFormFieldErrors().get("emailAddress") != null) [FD]
Line_38 $$ if (formError.getFormFieldErrors().get("emailAddress") != null) --> Line_39 $$ pRequest.setAttribute("EmailAddressBad", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_39 $$ pRequest.setAttribute("EmailAddressBad", new Boolean(true)) [FD]
Line_31 $$ if (formError != null) --> Line_41 $$ if (formError.getFormFieldErrors().get("mismatchPassword") != null) [CD]
Line_30 $$ FormError formError = form.validateFields() --> Line_41 $$ if (formError.getFormFieldErrors().get("mismatchPassword") != null) [FD]
Line_41 $$ if (formError.getFormFieldErrors().get("mismatchPassword") != null) --> Line_42 $$ pRequest.setAttribute("mismatchPassword", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_42 $$ pRequest.setAttribute("mismatchPassword", new Boolean(true)) [FD]
Line_31 $$ if (formError != null) --> Line_44 $$ if (formError.getFormFieldErrors().get("shortPassword") != null) [CD]
Line_30 $$ FormError formError = form.validateFields() --> Line_44 $$ if (formError.getFormFieldErrors().get("shortPassword") != null) [FD]
Line_44 $$ if (formError.getFormFieldErrors().get("shortPassword") != null) --> Line_45 $$ pRequest.setAttribute("shortPassword", new Boolean(true)) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_45 $$ pRequest.setAttribute("shortPassword", new Boolean(true)) [FD]
Line_31 $$ if (formError != null) --> Line_47 $$ return (pMapping.findForward("invalid")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_47 $$ return (pMapping.findForward("invalid")) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_49 $$ user.setFirstName(form.getFirstName()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_49 $$ user.setFirstName(form.getFirstName()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_49 $$ user.setFirstName(form.getFirstName()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_50 $$ user.setLastName(form.getLastName()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_50 $$ user.setLastName(form.getLastName()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_50 $$ user.setLastName(form.getLastName()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_51 $$ user.setEmailAddress(form.getEmailAddress()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_51 $$ user.setEmailAddress(form.getEmailAddress()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_51 $$ user.setEmailAddress(form.getEmailAddress()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_52 $$ if (!form.getFirstPassword().equals("")) [CD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_52 $$ if (!form.getFirstPassword().equals("")) [FD]
Line_52 $$ if (!form.getFirstPassword().equals("")) --> Line_53 $$ MessageDigest md [CD]
Line_53 $$ MessageDigest md --> Line_55 $$ md = MessageDigest.getInstance("SHA") [FD]
Line_53 $$ MessageDigest md --> Line_60 $$ md.update(form.getFirstPassword().getBytes("UTF-8")) [FD]
Line_55 $$ md = MessageDigest.getInstance("SHA") --> Line_60 $$ md.update(form.getFirstPassword().getBytes("UTF-8")) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_60 $$ md.update(form.getFirstPassword().getBytes("UTF-8")) [FD]
Line_52 $$ if (!form.getFirstPassword().equals("")) --> Line_64 $$ user.setPassword((new BASE64Encoder()).encode(md.digest())) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_64 $$ user.setPassword((new BASE64Encoder()).encode(md.digest())) [FD]
Line_53 $$ MessageDigest md --> Line_64 $$ user.setPassword((new BASE64Encoder()).encode(md.digest())) [FD]
Line_55 $$ md = MessageDigest.getInstance("SHA") --> Line_64 $$ user.setPassword((new BASE64Encoder()).encode(md.digest())) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_66 $$ user.setTitle(form.getTitle()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_66 $$ user.setTitle(form.getTitle()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_66 $$ user.setTitle(form.getTitle()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_67 $$ user.setDegree(form.getDegree()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_67 $$ user.setDegree(form.getDegree()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_67 $$ user.setDegree(form.getDegree()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_68 $$ user.setAddress(form.getAddress()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_68 $$ user.setAddress(form.getAddress()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_68 $$ user.setAddress(form.getAddress()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_69 $$ user.setNationality(form.getNationality()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_69 $$ user.setNationality(form.getNationality()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_69 $$ user.setNationality(form.getNationality()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_70 $$ user.setLanguages(form.getLanguages()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_70 $$ user.setLanguages(form.getLanguages()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_70 $$ user.setLanguages(form.getLanguages()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_71 $$ user.setHomepage(form.getHomepage()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_71 $$ user.setHomepage(form.getHomepage()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_71 $$ user.setHomepage(form.getHomepage()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_72 $$ user.setInstitution(form.getInstitution()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_72 $$ user.setInstitution(form.getInstitution()) [FD]
Line_4 $$ SubmitUserForm form = (SubmitUserForm) pForm --> Line_72 $$ user.setInstitution(form.getInstitution()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_73 $$ if (pRequest.getParameter("hideEmail") != null) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_73 $$ if (pRequest.getParameter("hideEmail") != null) [FD]
Line_73 $$ if (pRequest.getParameter("hideEmail") != null) --> Line_74 $$ if (pRequest.getParameter("hideEmail").equals("on")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_74 $$ if (pRequest.getParameter("hideEmail").equals("on")) [FD]
Line_74 $$ if (pRequest.getParameter("hideEmail").equals("on")) --> Line_75 $$ user.setHideEmail(true) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_75 $$ user.setHideEmail(true) [FD]
Line_73 $$ if (pRequest.getParameter("hideEmail") != null) --> Line_78 $$ user.setHideEmail(false) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_78 $$ user.setHideEmail(false) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_80 $$ User storedUser = database.acquireUserByPrimaryKey(user.getPrimaryKey()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_80 $$ User storedUser = database.acquireUserByPrimaryKey(user.getPrimaryKey()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_81 $$ if (currentUser.isSuperAdmin()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_81 $$ if (currentUser.isSuperAdmin()) [FD]
Line_81 $$ if (currentUser.isSuperAdmin()) --> Line_82 $$ if (pRequest.getParameter("admin") != null) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_82 $$ if (pRequest.getParameter("admin") != null) [FD]
Line_82 $$ if (pRequest.getParameter("admin") != null) --> Line_83 $$ user.setAdminRights(true) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_83 $$ user.setAdminRights(true) [FD]
Line_82 $$ if (pRequest.getParameter("admin") != null) --> Line_85 $$ if (!storedUser.isSuperAdmin()) [CD]
Line_80 $$ User storedUser = database.acquireUserByPrimaryKey(user.getPrimaryKey()) --> Line_85 $$ if (!storedUser.isSuperAdmin()) [FD]
Line_85 $$ if (!storedUser.isSuperAdmin()) --> Line_86 $$ user.setAdminRights(false) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_86 $$ user.setAdminRights(false) [FD]
Line_81 $$ if (currentUser.isSuperAdmin()) --> Line_90 $$ user.setAdminRights(storedUser.getAdminRights()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_90 $$ user.setAdminRights(storedUser.getAdminRights()) [FD]
Line_80 $$ User storedUser = database.acquireUserByPrimaryKey(user.getPrimaryKey()) --> Line_90 $$ user.setAdminRights(storedUser.getAdminRights()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_92 $$ if (pRequest.getParameter("PDFRights") != null) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_92 $$ if (pRequest.getParameter("PDFRights") != null) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_92 $$ if (pRequest.getParameter("PDFRights") != null) [FD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_92 $$ if (pRequest.getParameter("PDFRights") != null) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_93 $$ if (currentUser.isAdmin()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_93 $$ if (currentUser.isAdmin()) [FD]
Line_93 $$ if (currentUser.isAdmin()) --> Line_94 $$ if (!storedUser.isAdmin() || !storedUser.isSuperAdmin()) [CD]
Line_80 $$ User storedUser = database.acquireUserByPrimaryKey(user.getPrimaryKey()) --> Line_94 $$ if (!storedUser.isAdmin() || !storedUser.isSuperAdmin()) [FD]
Line_94 $$ if (!storedUser.isAdmin() || !storedUser.isSuperAdmin()) --> Line_95 $$ if (pRequest.getParameter("active") != null) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_95 $$ if (pRequest.getParameter("active") != null) [FD]
Line_95 $$ if (pRequest.getParameter("active") != null) --> Line_96 $$ user.setActive(true) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_96 $$ user.setActive(true) [FD]
Line_95 $$ if (pRequest.getParameter("active") != null) --> Line_98 $$ user.setActive(false) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_98 $$ user.setActive(false) [FD]
Line_94 $$ if (!storedUser.isAdmin() || !storedUser.isSuperAdmin()) --> Line_101 $$ user.setActive(storedUser.getActive()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_101 $$ user.setActive(storedUser.getActive()) [FD]
Line_80 $$ User storedUser = database.acquireUserByPrimaryKey(user.getPrimaryKey()) --> Line_101 $$ user.setActive(storedUser.getActive()) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_104 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_104 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) [FD]
Line_104 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) --> Line_105 $$ String[] categories = pRequest.getParameterValues("categories") [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_105 $$ String[] categories = pRequest.getParameterValues("categories") [FD]
Line_104 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) --> Line_106 $$ user.setModeratorRights(new Categories()) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_106 $$ user.setModeratorRights(new Categories()) [FD]
Line_104 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) --> Line_107 $$ if (categories != null) [CD]
Line_105 $$ String[] categories = pRequest.getParameterValues("categories") --> Line_107 $$ if (categories != null) [FD]
Line_109 $$ for (int i = 0; i < categories.length; i++) --> Line_110 $$ Integer catkey = Integer.parseInt(categories[i]) [CD]
Line_109 $$ for (int i = 0; i < categories.length; i++) --> Line_111 $$ Category cat = database.acquireCategoryByPrimaryKey(catkey) [CD]
Line_110 $$ Integer catkey = Integer.parseInt(categories[i]) --> Line_111 $$ Category cat = database.acquireCategoryByPrimaryKey(catkey) [FD]
Line_109 $$ for (int i = 0; i < categories.length; i++) --> Line_112 $$ user.getModeratorRights().add(cat) [CD]
Line_111 $$ Category cat = database.acquireCategoryByPrimaryKey(catkey) --> Line_112 $$ user.getModeratorRights().add(cat) [FD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_112 $$ user.getModeratorRights().add(cat) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_119 $$ if (!currentUser.isAdmin() && !currentUser.isSuperAdmin()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_119 $$ if (!currentUser.isAdmin() && !currentUser.isSuperAdmin()) [FD]
Line_119 $$ if (!currentUser.isAdmin() && !currentUser.isSuperAdmin()) --> Line_120 $$ user.setAdminRights(false) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_120 $$ user.setAdminRights(false) [FD]
Line_119 $$ if (!currentUser.isAdmin() && !currentUser.isSuperAdmin()) --> Line_121 $$ user.setSuperAdminRights(false) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_121 $$ user.setSuperAdminRights(false) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_123 $$ database.updateUser(user) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_123 $$ database.updateUser(user) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_124 $$ if (currentUser.getPrimaryKey() == user.getPrimaryKey()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_124 $$ if (currentUser.getPrimaryKey() == user.getPrimaryKey()) [FD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_124 $$ if (currentUser.getPrimaryKey() == user.getPrimaryKey()) [FD]
Line_124 $$ if (currentUser.getPrimaryKey() == user.getPrimaryKey()) --> Line_125 $$ pRequest.getSession().setAttribute("login", user) [CD]
Line_20 $$ User user = database.acquireUserByPrimaryKey(key) --> Line_125 $$ pRequest.getSession().setAttribute("login", user) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_125 $$ pRequest.getSession().setAttribute("login", user) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_127 $$ pRequest.setAttribute("helpKey", key) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_127 $$ pRequest.setAttribute("helpKey", key) [FD]
Line_3 $$ Integer key --> Line_127 $$ pRequest.setAttribute("helpKey", key) [FD]
Line_6 $$ key = form.getPrimaryKey() --> Line_127 $$ pRequest.setAttribute("helpKey", key) [FD]
Line_8 $$ key = Integer.parseInt(pRequest.getParameter("key")) --> Line_127 $$ pRequest.setAttribute("helpKey", key) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_128 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) [CD]
Line_10 $$ User currentUser = (User) (pRequest.getSession().getAttribute("login")) --> Line_128 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) [FD]
Line_128 $$ if (currentUser.isAdmin() || currentUser.isSuperAdmin()) --> Line_129 $$ return (pMapping.findForward("adminfinished")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_129 $$ return (pMapping.findForward("adminfinished")) [FD]
Line_29 $$ if (form.getAction().equals("edit")) --> Line_131 $$ return (pMapping.findForward("finished")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_131 $$ return (pMapping.findForward("finished")) [FD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_133 $$ return (pMapping.findForward("success")) [CD]
Line_2 $$ public ActionForward dbExecute(ActionMapping pMapping, ActionForm pForm, HttpServletRequest pRequest, HttpServletResponse pResponse) throws DatabaseException --> Line_133 $$ return (pMapping.findForward("success")) [FD]
