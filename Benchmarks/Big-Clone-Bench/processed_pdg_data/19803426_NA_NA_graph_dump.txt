Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5") [CD]
Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_4 $$ digest.update(plain.trim().getBytes()) [CD]
Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_4 $$ digest.update(plain.trim().getBytes()) [FD]
Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5") --> Line_4 $$ digest.update(plain.trim().getBytes()) [FD]
Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_5 $$ byte pwdDigest[] = digest.digest() [CD]
Line_3 $$ MessageDigest digest = MessageDigest.getInstance("MD5") --> Line_5 $$ byte pwdDigest[] = digest.digest() [FD]
Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_6 $$ StringBuilder md5buffer = new StringBuilder() [CD]
Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_7 $$ for (int i = 0; i < pwdDigest.length; i++) [CD]
Line_7 $$ for (int i = 0; i < pwdDigest.length; i++) --> Line_8 $$ int number = 0xFF & pwdDigest[i] [CD]
Line_7 $$ for (int i = 0; i < pwdDigest.length; i++) --> Line_9 $$ if (number <= 0xF) [CD]
Line_8 $$ int number = 0xFF & pwdDigest[i] --> Line_9 $$ if (number <= 0xF) [FD]
Line_9 $$ if (number <= 0xF) --> Line_10 $$ md5buffer.append('0') [CD]
Line_6 $$ StringBuilder md5buffer = new StringBuilder() --> Line_10 $$ md5buffer.append('0') [FD]
Line_7 $$ for (int i = 0; i < pwdDigest.length; i++) --> Line_12 $$ md5buffer.append(Integer.toHexString(number)) [CD]
Line_6 $$ StringBuilder md5buffer = new StringBuilder() --> Line_12 $$ md5buffer.append(Integer.toHexString(number)) [FD]
Line_8 $$ int number = 0xFF & pwdDigest[i] --> Line_12 $$ md5buffer.append(Integer.toHexString(number)) [FD]
Line_2 $$ private String md5Digest(String plain) throws Exception --> Line_14 $$ return md5buffer.toString() [CD]
Line_6 $$ StringBuilder md5buffer = new StringBuilder() --> Line_14 $$ return md5buffer.toString() [FD]
