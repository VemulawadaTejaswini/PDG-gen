Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_3 $$ if (!src.isFile() || !src.exists()) [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_3 $$ if (!src.isFile() || !src.exists()) [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_4 $$ throw new IllegalArgumentException("Source file '" + src.getAbsolutePath() + "' not found!") [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_6 $$ if (dst.exists()) [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_6 $$ if (dst.exists()) [FD]
Line_6 $$ if (dst.exists()) --> Line_7 $$ if (dst.isDirectory()) [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_7 $$ if (dst.isDirectory()) [FD]
Line_7 $$ if (dst.isDirectory()) --> Line_8 $$ dst = new File(dst, src.getName()) [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_8 $$ dst = new File(dst, src.getName()) [FD]
Line_7 $$ if (dst.isDirectory()) --> Line_9 $$ if (dst.isFile()) [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_9 $$ if (dst.isFile()) [FD]
Line_8 $$ dst = new File(dst, src.getName()) --> Line_9 $$ if (dst.isFile()) [FD]
Line_9 $$ if (dst.isFile()) --> Line_10 $$ if (!overwrite) [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_10 $$ if (!overwrite) [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_11 $$ throw new IllegalArgumentException("Destination file '" + dst.getAbsolutePath() + "' already exists!") [FD]
Line_8 $$ dst = new File(dst, src.getName()) --> Line_11 $$ throw new IllegalArgumentException("Destination file '" + dst.getAbsolutePath() + "' already exists!") [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_14 $$ throw new IllegalArgumentException("Invalid destination object '" + dst.getAbsolutePath() + "'!") [FD]
Line_8 $$ dst = new File(dst, src.getName()) --> Line_14 $$ throw new IllegalArgumentException("Invalid destination object '" + dst.getAbsolutePath() + "'!") [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_17 $$ final File dstParent = dst.getParentFile() [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_17 $$ final File dstParent = dst.getParentFile() [FD]
Line_8 $$ dst = new File(dst, src.getName()) --> Line_17 $$ final File dstParent = dst.getParentFile() [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_18 $$ if (!dstParent.exists()) [CD]
Line_17 $$ final File dstParent = dst.getParentFile() --> Line_18 $$ if (!dstParent.exists()) [FD]
Line_18 $$ if (!dstParent.exists()) --> Line_19 $$ if (!dstParent.mkdirs()) [CD]
Line_17 $$ final File dstParent = dst.getParentFile() --> Line_19 $$ if (!dstParent.mkdirs()) [FD]
Line_17 $$ final File dstParent = dst.getParentFile() --> Line_20 $$ throw new IOException("Failed to create directory " + dstParent.getAbsolutePath()) [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_23 $$ long fileSize = src.length() [CD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_23 $$ long fileSize = src.length() [FD]
Line_2 $$ public static void copy(final File src, File dst, final boolean overwrite) throws IOException, IllegalArgumentException --> Line_24 $$ if (fileSize > 20971520l) [CD]
Line_23 $$ long fileSize = src.length() --> Line_24 $$ if (fileSize > 20971520l) [FD]
Line_24 $$ if (fileSize > 20971520l) --> Line_25 $$ final FileInputStream in = new FileInputStream(src) [CD]
Line_24 $$ if (fileSize > 20971520l) --> Line_26 $$ final FileOutputStream out = new FileOutputStream(dst) [CD]
Line_28 $$ int doneCnt = -1 --> Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) [FD]
Line_25 $$ final FileInputStream in = new FileInputStream(src) --> Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) [FD]
Line_29 $$ final int bufSize = 32768 --> Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) [FD]
Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) --> Line_32 $$ if (doneCnt == 0) [CD]
Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) --> Line_32 $$ if (doneCnt == 0) [FD]
Line_28 $$ int doneCnt = -1 --> Line_32 $$ if (doneCnt == 0) [FD]
Line_32 $$ if (doneCnt == 0) --> Line_33 $$ Thread.yield() [CD]
Line_32 $$ if (doneCnt == 0) --> Line_35 $$ out.write(buf, 0, doneCnt) [CD]
Line_26 $$ final FileOutputStream out = new FileOutputStream(dst) --> Line_35 $$ out.write(buf, 0, doneCnt) [FD]
Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) --> Line_35 $$ out.write(buf, 0, doneCnt) [FD]
Line_28 $$ int doneCnt = -1 --> Line_35 $$ out.write(buf, 0, doneCnt) [FD]
Line_26 $$ final FileOutputStream out = new FileOutputStream(dst) --> Line_38 $$ out.flush() [FD]
Line_25 $$ final FileInputStream in = new FileInputStream(src) --> Line_41 $$ in.close() [FD]
Line_26 $$ final FileOutputStream out = new FileOutputStream(dst) --> Line_45 $$ out.close() [FD]
Line_24 $$ if (fileSize > 20971520l) --> Line_50 $$ final FileInputStream fis = new FileInputStream(src) [CD]
Line_24 $$ if (fileSize > 20971520l) --> Line_51 $$ final FileOutputStream fos = new FileOutputStream(dst) [CD]
Line_24 $$ if (fileSize > 20971520l) --> Line_52 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel() [CD]
Line_50 $$ final FileInputStream fis = new FileInputStream(src) --> Line_52 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel() [FD]
Line_51 $$ final FileOutputStream fos = new FileOutputStream(dst) --> Line_52 $$ final FileChannel in = fis.getChannel(), out = fos.getChannel() [FD]
Line_23 $$ long fileSize = src.length() --> Line_55 $$ final long copyCnt = Math.min(65536, fileSize) [FD]
Line_23 $$ long fileSize = src.length() --> Line_56 $$ do [FD]
Line_56 $$ do --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [CD]
Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [FD]
Line_28 $$ int doneCnt = -1 --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [FD]
Line_25 $$ final FileInputStream in = new FileInputStream(src) --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [FD]
Line_55 $$ final long copyCnt = Math.min(65536, fileSize) --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [FD]
Line_26 $$ final FileOutputStream out = new FileOutputStream(dst) --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [FD]
Line_56 $$ do --> Line_58 $$ offs += doneCnt [CD]
Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) --> Line_58 $$ offs += doneCnt [FD]
Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) --> Line_58 $$ offs += doneCnt [FD]
Line_28 $$ int doneCnt = -1 --> Line_58 $$ offs += doneCnt [FD]
Line_56 $$ do --> Line_59 $$ fileSize -= doneCnt [CD]
Line_23 $$ long fileSize = src.length() --> Line_59 $$ fileSize -= doneCnt [FD]
Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) --> Line_59 $$ fileSize -= doneCnt [FD]
Line_31 $$ while ((doneCnt = in.read(buf, 0, bufSize)) >= 0) --> Line_59 $$ fileSize -= doneCnt [FD]
Line_28 $$ int doneCnt = -1 --> Line_59 $$ fileSize -= doneCnt [FD]
Line_25 $$ final FileInputStream in = new FileInputStream(src) --> Line_63 $$ in.close() [FD]
Line_26 $$ final FileOutputStream out = new FileOutputStream(dst) --> Line_67 $$ out.close() [FD]
Line_50 $$ final FileInputStream fis = new FileInputStream(src) --> Line_71 $$ fis.close() [FD]
Line_51 $$ final FileOutputStream fos = new FileOutputStream(dst) --> Line_75 $$ fos.close() [FD]
Line_59 $$ fileSize -= doneCnt --> Line_56 $$ do [FD]
Line_58 $$ offs += doneCnt --> Line_57 $$ doneCnt = in.transferTo(offs, copyCnt, out) [FD]
