Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_3 $$ URL urlCon = new URL(urlString) [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() [CD]
Line_3 $$ URL urlCon = new URL(urlString) --> Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_5 $$ conn.setDoInput(true) [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_5 $$ conn.setDoInput(true) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_6 $$ conn.setDoOutput(true) [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_6 $$ conn.setDoOutput(true) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_7 $$ conn.setAllowUserInteraction(true) [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_7 $$ conn.setAllowUserInteraction(true) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_8 $$ List cookies = (List) headers.get("Set-cookie") [CD]
Line_8 $$ List cookies = (List) headers.get("Set-cookie") --> Line_9 $$ cookieValue = (String) cookies.get(0) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_10 $$ StringTokenizer tokenizer = new StringTokenizer(cookieValue, ";") [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_11 $$ cookieValue = tokenizer.nextToken() [CD]
Line_10 $$ StringTokenizer tokenizer = new StringTokenizer(cookieValue, ";") --> Line_11 $$ cookieValue = tokenizer.nextToken() [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_12 $$ String path = "$" + tokenizer.nextToken() [CD]
Line_10 $$ StringTokenizer tokenizer = new StringTokenizer(cookieValue, ";") --> Line_12 $$ String path = "$" + tokenizer.nextToken() [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_13 $$ String cookie = "$Version=\"1\"; " + cookieValue + "; " + path [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_14 $$ Map map = new HashMap() [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_15 $$ map.put("Cookie", Collections.singletonList(cookie)) [CD]
Line_14 $$ Map map = new HashMap() --> Line_15 $$ map.put("Cookie", Collections.singletonList(cookie)) [FD]
Line_13 $$ String cookie = "$Version=\"1\"; " + cookieValue + "; " + path --> Line_15 $$ map.put("Cookie", Collections.singletonList(cookie)) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_16 $$ ((BindingProvider) vimPort).getRequestContext().put(MessageContext.HTTP_REQUEST_HEADERS, map) [CD]
Line_14 $$ Map map = new HashMap() --> Line_16 $$ ((BindingProvider) vimPort).getRequestContext().put(MessageContext.HTTP_REQUEST_HEADERS, map) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_17 $$ conn.setRequestProperty("Cookie", cookie) [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_17 $$ conn.setRequestProperty("Cookie", cookie) [FD]
Line_13 $$ String cookie = "$Version=\"1\"; " + cookieValue + "; " + path --> Line_17 $$ conn.setRequestProperty("Cookie", cookie) [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_18 $$ conn.setRequestProperty("Content-Type", "application/octet-stream") [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_18 $$ conn.setRequestProperty("Content-Type", "application/octet-stream") [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_19 $$ conn.setRequestProperty("Expect", "100-continue") [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_19 $$ conn.setRequestProperty("Expect", "100-continue") [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_20 $$ conn.setRequestMethod("GET") [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_20 $$ conn.setRequestMethod("GET") [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_21 $$ conn.setRequestProperty("Content-Length", "1024") [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_21 $$ conn.setRequestProperty("Content-Length", "1024") [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_22 $$ InputStream in = conn.getInputStream() [CD]
Line_4 $$ HttpsURLConnection conn = (HttpsURLConnection) urlCon.openConnection() --> Line_22 $$ InputStream in = conn.getInputStream() [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_23 $$ String localpath = localPath + "/" + absoluteFile [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_24 $$ OutputStream out = new FileOutputStream(new File(localpath)) [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_25 $$ byte[] buf = new byte[102400] [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_26 $$ int len = 0 [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_27 $$ long written = 0 [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_28 $$ while ((len = in.read(buf)) > 0) [CD]
Line_26 $$ int len = 0 --> Line_28 $$ while ((len = in.read(buf)) > 0) [FD]
Line_22 $$ InputStream in = conn.getInputStream() --> Line_28 $$ while ((len = in.read(buf)) > 0) [FD]
Line_25 $$ byte[] buf = new byte[102400] --> Line_28 $$ while ((len = in.read(buf)) > 0) [FD]
Line_28 $$ while ((len = in.read(buf)) > 0) --> Line_29 $$ out.write(buf, 0, len) [CD]
Line_28 $$ while ((len = in.read(buf)) > 0) --> Line_29 $$ out.write(buf, 0, len) [FD]
Line_24 $$ OutputStream out = new FileOutputStream(new File(localpath)) --> Line_29 $$ out.write(buf, 0, len) [FD]
Line_25 $$ byte[] buf = new byte[102400] --> Line_29 $$ out.write(buf, 0, len) [FD]
Line_26 $$ int len = 0 --> Line_29 $$ out.write(buf, 0, len) [FD]
Line_28 $$ while ((len = in.read(buf)) > 0) --> Line_30 $$ written = written + len [CD]
Line_28 $$ while ((len = in.read(buf)) > 0) --> Line_30 $$ written = written + len [FD]
Line_27 $$ long written = 0 --> Line_30 $$ written = written + len [FD]
Line_26 $$ int len = 0 --> Line_30 $$ written = written + len [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_32 $$ System.out.println("   Exported File " + absoluteFile + " : " + written) [CD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_33 $$ in.close() [CD]
Line_22 $$ InputStream in = conn.getInputStream() --> Line_33 $$ in.close() [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_34 $$ out.close() [CD]
Line_24 $$ OutputStream out = new FileOutputStream(new File(localpath)) --> Line_34 $$ out.close() [FD]
Line_2 $$ private static long writeVMDKFile(String absoluteFile, String urlString) throws Exception --> Line_35 $$ return written [CD]
