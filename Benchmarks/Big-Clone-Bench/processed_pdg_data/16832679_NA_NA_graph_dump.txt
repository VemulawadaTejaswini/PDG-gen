Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_3 $$ if (workflowURI == null) [CD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_3 $$ if (workflowURI == null) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_6 $$ URL url = new URL(workflowURI) [CD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_7 $$ URLConnection urlconn = url.openConnection() [CD]
Line_6 $$ URL url = new URL(workflowURI) --> Line_7 $$ URLConnection urlconn = url.openConnection() [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_8 $$ urlconn.setAllowUserInteraction(false) [CD]
Line_7 $$ URLConnection urlconn = url.openConnection() --> Line_8 $$ urlconn.setAllowUserInteraction(false) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_9 $$ urlconn.setDoInput(true) [CD]
Line_7 $$ URLConnection urlconn = url.openConnection() --> Line_9 $$ urlconn.setDoInput(true) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_10 $$ urlconn.setDoOutput(false) [CD]
Line_7 $$ URLConnection urlconn = url.openConnection() --> Line_10 $$ urlconn.setDoOutput(false) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_11 $$ urlconn.setUseCaches(true) [CD]
Line_7 $$ URLConnection urlconn = url.openConnection() --> Line_11 $$ urlconn.setUseCaches(true) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_12 $$ urlconn.connect() [CD]
Line_7 $$ URLConnection urlconn = url.openConnection() --> Line_12 $$ urlconn.connect() [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_13 $$ InputStream is = urlconn.getInputStream() [CD]
Line_7 $$ URLConnection urlconn = url.openConnection() --> Line_13 $$ InputStream is = urlconn.getInputStream() [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_14 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_15 $$ TavXQueryGenerator generator = (TavXQueryGenerator) Class.forName(generatorClass).newInstance() [CD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_16 $$ generator.setLogger(log) [CD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_16 $$ generator.setLogger(log) [FD]
Line_15 $$ TavXQueryGenerator generator = (TavXQueryGenerator) Class.forName(generatorClass).newInstance() --> Line_16 $$ generator.setLogger(log) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_17 $$ generator.setInputStream(is) [CD]
Line_15 $$ TavXQueryGenerator generator = (TavXQueryGenerator) Class.forName(generatorClass).newInstance() --> Line_17 $$ generator.setInputStream(is) [FD]
Line_13 $$ InputStream is = urlconn.getInputStream() --> Line_17 $$ generator.setInputStream(is) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_18 $$ generator.setOutputStream(baos) [CD]
Line_15 $$ TavXQueryGenerator generator = (TavXQueryGenerator) Class.forName(generatorClass).newInstance() --> Line_18 $$ generator.setOutputStream(baos) [FD]
Line_14 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_18 $$ generator.setOutputStream(baos) [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_19 $$ generator.generateXQuery() [CD]
Line_15 $$ TavXQueryGenerator generator = (TavXQueryGenerator) Class.forName(generatorClass).newInstance() --> Line_19 $$ generator.generateXQuery() [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_20 $$ is.close() [CD]
Line_13 $$ InputStream is = urlconn.getInputStream() --> Line_20 $$ is.close() [FD]
Line_2 $$ public byte[] getXQueryForWorkflow(String workflowURI, Log4JLogger log) throws MalformedURLException, IOException, InstantiationException, IllegalAccessException, ClassNotFoundException --> Line_21 $$ return baos.toByteArray() [CD]
Line_14 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_21 $$ return baos.toByteArray() [FD]
