Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_3 $$ beNice() [CD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_4 $$ dispatchEvent(SynchronizationEventType.FileCopy, sourceFile, targetFile) [CD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_4 $$ dispatchEvent(SynchronizationEventType.FileCopy, sourceFile, targetFile) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_5 $$ File temporaryFile = new File(targetFile.getPath().concat(".jnstemp")) [CD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_5 $$ File temporaryFile = new File(targetFile.getPath().concat(".jnstemp")) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_6 $$ while (temporaryFile.exists()) [CD]
Line_5 $$ File temporaryFile = new File(targetFile.getPath().concat(".jnstemp")) --> Line_6 $$ while (temporaryFile.exists()) [FD]
Line_5 $$ File temporaryFile = new File(targetFile.getPath().concat(".jnstemp")) --> Line_9 $$ temporaryFile.delete() [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_15 $$ if (targetFile.exists()) [FD]
Line_15 $$ if (targetFile.exists()) --> Line_16 $$ targetFile.delete() [CD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_16 $$ targetFile.delete() [FD]
Line_21 $$ int readBytes = 0 --> Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) [FD]
Line_18 $$ FileInputStream fis = new FileInputStream(sourceFile) --> Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) [FD]
Line_20 $$ byte[] buffer = new byte[204800] --> Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) [FD]
Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) --> Line_24 $$ counter++ [CD]
Line_22 $$ int counter = 0 --> Line_24 $$ counter++ [FD]
Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) --> Line_25 $$ updateStatus("... processing fragment " + String.valueOf(counter)) [CD]
Line_22 $$ int counter = 0 --> Line_25 $$ updateStatus("... processing fragment " + String.valueOf(counter)) [FD]
Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) --> Line_26 $$ fos.write(buffer, 0, readBytes) [CD]
Line_23 $$ while ((readBytes = fis.read(buffer)) != -1) --> Line_26 $$ fos.write(buffer, 0, readBytes) [FD]
Line_19 $$ FileOutputStream fos = new FileOutputStream(temporaryFile) --> Line_26 $$ fos.write(buffer, 0, readBytes) [FD]
Line_20 $$ byte[] buffer = new byte[204800] --> Line_26 $$ fos.write(buffer, 0, readBytes) [FD]
Line_21 $$ int readBytes = 0 --> Line_26 $$ fos.write(buffer, 0, readBytes) [FD]
Line_18 $$ FileInputStream fis = new FileInputStream(sourceFile) --> Line_28 $$ fis.close() [FD]
Line_19 $$ FileOutputStream fos = new FileOutputStream(temporaryFile) --> Line_29 $$ fos.close() [FD]
Line_5 $$ File temporaryFile = new File(targetFile.getPath().concat(".jnstemp")) --> Line_30 $$ temporaryFile.renameTo(targetFile) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_30 $$ temporaryFile.renameTo(targetFile) [FD]
Line_5 $$ File temporaryFile = new File(targetFile.getPath().concat(".jnstemp")) --> Line_31 $$ temporaryFile.setLastModified(sourceFile.lastModified()) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_31 $$ temporaryFile.setLastModified(sourceFile.lastModified()) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_32 $$ targetFile.setLastModified(sourceFile.lastModified()) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_34 $$ Exception dispatchedException = new Exception("ERROR: Copy File( " + sourceFile.getPath() + ", " + targetFile.getPath() + " )") [FD]
Line_34 $$ Exception dispatchedException = new Exception("ERROR: Copy File( " + sourceFile.getPath() + ", " + targetFile.getPath() + " )") --> Line_35 $$ dispatchEvent(dispatchedException, sourceFile, targetFile) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_35 $$ dispatchEvent(dispatchedException, sourceFile, targetFile) [FD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_37 $$ dispatchEvent(SynchronizationEventType.FileCopyDone, sourceFile, targetFile) [CD]
Line_2 $$ private void copyFile(File sourceFile, File targetFile) --> Line_37 $$ dispatchEvent(SynchronizationEventType.FileCopyDone, sourceFile, targetFile) [FD]
