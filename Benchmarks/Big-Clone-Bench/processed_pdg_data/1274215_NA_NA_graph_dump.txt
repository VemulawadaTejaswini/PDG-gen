Line_4 $$ if (args.length < 2) --> Line_5 $$ System.err.println("usage: test [src] [dest]") [CD]
Line_4 $$ if (args.length < 2) --> Line_6 $$ return [CD]
Line_8 $$ FileInputStream in = new FileInputStream(args[0]) --> Line_10 $$ FileChannel src = in.getChannel() [FD]
Line_9 $$ FileOutputStream out = new FileOutputStream(args[1]) --> Line_11 $$ FileChannel channel = out.getChannel() [FD]
Line_10 $$ FileChannel src = in.getChannel() --> Line_12 $$ long pos = 0, len = src.size(), ret [FD]
Line_12 $$ long pos = 0, len = src.size(), ret --> Line_13 $$ while (len > 0) [FD]
Line_13 $$ while (len > 0) --> Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) [CD]
Line_12 $$ long pos = 0, len = src.size(), ret --> Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) [FD]
Line_11 $$ FileChannel channel = out.getChannel() --> Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) [FD]
Line_10 $$ FileChannel src = in.getChannel() --> Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) [FD]
Line_13 $$ while (len > 0) --> Line_15 $$ len -= ret [CD]
Line_12 $$ long pos = 0, len = src.size(), ret --> Line_15 $$ len -= ret [FD]
Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) --> Line_15 $$ len -= ret [FD]
Line_13 $$ while (len > 0) --> Line_16 $$ pos += ret [CD]
Line_12 $$ long pos = 0, len = src.size(), ret --> Line_16 $$ pos += ret [FD]
Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) --> Line_16 $$ pos += ret [FD]
Line_9 $$ FileOutputStream out = new FileOutputStream(args[1]) --> Line_18 $$ out.close() [FD]
Line_8 $$ FileInputStream in = new FileInputStream(args[0]) --> Line_19 $$ in.close() [FD]
Line_15 $$ len -= ret --> Line_13 $$ while (len > 0) [FD]
Line_16 $$ pos += ret --> Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) [FD]
Line_15 $$ len -= ret --> Line_14 $$ if ((ret = channel.transferFrom(src, pos, len)) < 0) [FD]
