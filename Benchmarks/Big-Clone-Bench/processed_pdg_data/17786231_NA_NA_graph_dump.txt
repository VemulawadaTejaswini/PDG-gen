Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_3 $$ HttpClient client = new DefaultHttpClient() [CD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_4 $$ HttpGet httpGet = new HttpGet(downloadUrl) [CD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_5 $$ final File outputFile = new File(destinationFile) [CD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_6 $$ createParentDirectories(outputFile) [CD]
Line_5 $$ final File outputFile = new File(destinationFile) --> Line_6 $$ createParentDirectories(outputFile) [FD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_7 $$ FileOutputStream outputStream [CD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_8 $$ outputStream = new FileOutputStream(outputFile) [CD]
Line_7 $$ FileOutputStream outputStream --> Line_8 $$ outputStream = new FileOutputStream(outputFile) [FD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_9 $$ final HttpResponse response = client.execute(httpGet) [CD]
Line_3 $$ HttpClient client = new DefaultHttpClient() --> Line_9 $$ final HttpResponse response = client.execute(httpGet) [FD]
Line_4 $$ HttpGet httpGet = new HttpGet(downloadUrl) --> Line_9 $$ final HttpResponse response = client.execute(httpGet) [FD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_10 $$ if (isInterrupted()) [CD]
Line_10 $$ if (isInterrupted()) --> Line_11 $$ outputStream.close() [CD]
Line_7 $$ FileOutputStream outputStream --> Line_11 $$ outputStream.close() [FD]
Line_8 $$ outputStream = new FileOutputStream(outputFile) --> Line_11 $$ outputStream.close() [FD]
Line_10 $$ if (isInterrupted()) --> Line_12 $$ return [CD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_14 $$ final HttpEntity entity = response.getEntity() [CD]
Line_9 $$ final HttpResponse response = client.execute(httpGet) --> Line_14 $$ final HttpEntity entity = response.getEntity() [FD]
Line_2 $$ private void downloadFile(final String downloadUrl, final String destinationFile) throws IOException --> Line_15 $$ InputStream inputStream = null [CD]
Line_14 $$ final HttpEntity entity = response.getEntity() --> Line_17 $$ if (entity != null) [FD]
Line_17 $$ if (entity != null) --> Line_18 $$ inputStream = entity.getContent() [CD]
Line_15 $$ InputStream inputStream = null --> Line_18 $$ inputStream = entity.getContent() [FD]
Line_14 $$ final HttpEntity entity = response.getEntity() --> Line_18 $$ inputStream = entity.getContent() [FD]
Line_17 $$ if (entity != null) --> Line_19 $$ CopyStreamStatusCallback callback = new CopyStreamStatusCallback() [CD]
Line_19 $$ CopyStreamStatusCallback callback = new CopyStreamStatusCallback() --> Line_21 $$ return entity.getContentLength() * 2 / PERCENTAGE_BASE [CD]
Line_14 $$ final HttpEntity entity = response.getEntity() --> Line_21 $$ return entity.getContentLength() * 2 / PERCENTAGE_BASE [FD]
Line_19 $$ CopyStreamStatusCallback callback = new CopyStreamStatusCallback() --> Line_24 $$ int percentage = (int) (copiedLength * PERCENTAGE_BASE / entity.getContentLength()) [CD]
Line_14 $$ final HttpEntity entity = response.getEntity() --> Line_24 $$ int percentage = (int) (copiedLength * PERCENTAGE_BASE / entity.getContentLength()) [FD]
Line_19 $$ CopyStreamStatusCallback callback = new CopyStreamStatusCallback() --> Line_25 $$ handleUpdate(STATUS_DOWNLOADING, percentage) [CD]
Line_24 $$ int percentage = (int) (copiedLength * PERCENTAGE_BASE / entity.getContentLength()) --> Line_25 $$ handleUpdate(STATUS_DOWNLOADING, percentage) [FD]
Line_17 $$ if (entity != null) --> Line_28 $$ copyStreams(inputStream, outputStream, callback) [CD]
Line_15 $$ InputStream inputStream = null --> Line_28 $$ copyStreams(inputStream, outputStream, callback) [FD]
Line_18 $$ inputStream = entity.getContent() --> Line_28 $$ copyStreams(inputStream, outputStream, callback) [FD]
Line_7 $$ FileOutputStream outputStream --> Line_28 $$ copyStreams(inputStream, outputStream, callback) [FD]
Line_8 $$ outputStream = new FileOutputStream(outputFile) --> Line_28 $$ copyStreams(inputStream, outputStream, callback) [FD]
Line_19 $$ CopyStreamStatusCallback callback = new CopyStreamStatusCallback() --> Line_28 $$ copyStreams(inputStream, outputStream, callback) [FD]
Line_7 $$ FileOutputStream outputStream --> Line_32 $$ outputStream.close() [FD]
Line_8 $$ outputStream = new FileOutputStream(outputFile) --> Line_32 $$ outputStream.close() [FD]
Line_15 $$ InputStream inputStream = null --> Line_33 $$ if (inputStream != null) [FD]
Line_18 $$ inputStream = entity.getContent() --> Line_33 $$ if (inputStream != null) [FD]
Line_33 $$ if (inputStream != null) --> Line_34 $$ inputStream.close() [CD]
Line_15 $$ InputStream inputStream = null --> Line_34 $$ inputStream.close() [FD]
Line_18 $$ inputStream = entity.getContent() --> Line_34 $$ inputStream.close() [FD]
