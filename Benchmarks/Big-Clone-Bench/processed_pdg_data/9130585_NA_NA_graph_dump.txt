Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_3 $$ IPath path = Util.getAbsolutePathFromCodeFile(codeFile) [CD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_3 $$ IPath path = Util.getAbsolutePathFromCodeFile(codeFile) [FD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_4 $$ File file = new File(path.toOSString()) [CD]
Line_3 $$ IPath path = Util.getAbsolutePathFromCodeFile(codeFile) --> Line_4 $$ File file = new File(path.toOSString()) [FD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_5 $$ String[] parts = codeFile.getName().split("\\.") [CD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_5 $$ String[] parts = codeFile.getName().split("\\.") [FD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_6 $$ String extension = parts[parts.length - 1] [CD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_7 $$ IPath ext = path.addFileExtension(extension) [CD]
Line_3 $$ IPath path = Util.getAbsolutePathFromCodeFile(codeFile) --> Line_7 $$ IPath ext = path.addFileExtension(extension) [FD]
Line_6 $$ String extension = parts[parts.length - 1] --> Line_7 $$ IPath ext = path.addFileExtension(extension) [FD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_8 $$ File tempFile = new File(ext.toOSString()) [CD]
Line_7 $$ IPath ext = path.addFileExtension(extension) --> Line_8 $$ File tempFile = new File(ext.toOSString()) [FD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_9 $$ if (tempFile.exists()) [CD]
Line_8 $$ File tempFile = new File(ext.toOSString()) --> Line_9 $$ if (tempFile.exists()) [FD]
Line_9 $$ if (tempFile.exists()) --> Line_10 $$ boolean deleted = tempFile.delete() [CD]
Line_8 $$ File tempFile = new File(ext.toOSString()) --> Line_10 $$ boolean deleted = tempFile.delete() [FD]
Line_9 $$ if (tempFile.exists()) --> Line_11 $$ System.out.println("deleted: " + deleted) [CD]
Line_8 $$ File tempFile = new File(ext.toOSString()) --> Line_14 $$ boolean created = tempFile.createNewFile() [FD]
Line_15 $$ if (created) --> Line_16 $$ FileOutputStream fos = new FileOutputStream(tempFile) [CD]
Line_15 $$ if (created) --> Line_17 $$ FileInputStream fis = new FileInputStream(file) [CD]
Line_15 $$ if (created) --> Line_18 $$ while (fis.available() > 0) [CD]
Line_17 $$ FileInputStream fis = new FileInputStream(file) --> Line_18 $$ while (fis.available() > 0) [FD]
Line_18 $$ while (fis.available() > 0) --> Line_19 $$ fos.write(fis.read()) [CD]
Line_16 $$ FileOutputStream fos = new FileOutputStream(tempFile) --> Line_19 $$ fos.write(fis.read()) [FD]
Line_17 $$ FileInputStream fis = new FileInputStream(file) --> Line_19 $$ fos.write(fis.read()) [FD]
Line_15 $$ if (created) --> Line_21 $$ fis.close() [CD]
Line_17 $$ FileInputStream fis = new FileInputStream(file) --> Line_21 $$ fis.close() [FD]
Line_15 $$ if (created) --> Line_22 $$ fos.close() [CD]
Line_16 $$ FileOutputStream fos = new FileOutputStream(tempFile) --> Line_22 $$ fos.close() [FD]
Line_15 $$ if (created) --> Line_23 $$ IFile iFile = Util.getFileFromPath(ext) [CD]
Line_7 $$ IPath ext = path.addFileExtension(extension) --> Line_23 $$ IFile iFile = Util.getFileFromPath(ext) [FD]
Line_15 $$ if (created) --> Line_24 $$ return iFile [CD]
Line_2 $$ protected static IFile createTempFile(CodeFile codeFile) --> Line_29 $$ return null [CD]
