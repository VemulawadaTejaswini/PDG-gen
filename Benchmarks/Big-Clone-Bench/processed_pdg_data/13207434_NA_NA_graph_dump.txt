Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_3 $$ String reqxml = "" [CD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_4 $$ org.jdom.Document retdoc = null [CD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "") [CD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_6 $$ String myport = "" [CD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_7 $$ myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080") [CD]
Line_6 $$ String myport = "" --> Line_7 $$ myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080") [FD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_8 $$ if (myport == null || myport.trim().equals("")) [CD]
Line_6 $$ String myport = "" --> Line_8 $$ if (myport == null || myport.trim().equals("")) [FD]
Line_7 $$ myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080") --> Line_8 $$ if (myport == null || myport.trim().equals("")) [FD]
Line_8 $$ if (myport == null || myport.trim().equals("")) --> Line_9 $$ myport = "80" [CD]
Line_6 $$ String myport = "" --> Line_9 $$ myport = "80" [FD]
Line_7 $$ myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080") --> Line_9 $$ myport = "80" [FD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_11 $$ if (this.serverURL == null) [CD]
Line_13 $$ java.net.URL codebase = newgen.presentation.NewGenMain.getAppletInstance().getCodeBase() --> Line_14 $$ serverURL = codebase.getHost() [FD]
Line_11 $$ if (this.serverURL == null) --> Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport) [CD]
Line_11 $$ if (this.serverURL == null) --> Line_20 $$ ipdig.show() [CD]
Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport) --> Line_20 $$ ipdig.show() [FD]
Line_11 $$ if (this.serverURL == null) --> Line_21 $$ serverURL = myurl = ipdig.getIPAddress() [CD]
Line_5 $$ String myurl = java.util.prefs.Preferences.systemRoot().get("serverurl", "") --> Line_21 $$ serverURL = myurl = ipdig.getIPAddress() [FD]
Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport) --> Line_21 $$ serverURL = myurl = ipdig.getIPAddress() [FD]
Line_11 $$ if (this.serverURL == null) --> Line_22 $$ myport = ipdig.getPortNo() [CD]
Line_6 $$ String myport = "" --> Line_22 $$ myport = ipdig.getPortNo() [FD]
Line_7 $$ myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080") --> Line_22 $$ myport = ipdig.getPortNo() [FD]
Line_9 $$ myport = "80" --> Line_22 $$ myport = ipdig.getPortNo() [FD]
Line_19 $$ newgen.presentation.component.IPAddressPortNoDialog ipdig = new newgen.presentation.component.IPAddressPortNoDialog(myurl, myport) --> Line_22 $$ myport = ipdig.getPortNo() [FD]
Line_11 $$ if (this.serverURL == null) --> Line_23 $$ java.util.prefs.Preferences.systemRoot().put("serverurl", serverURL) [CD]
Line_11 $$ if (this.serverURL == null) --> Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport) [CD]
Line_6 $$ String myport = "" --> Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport) [FD]
Line_7 $$ myport = java.util.prefs.Preferences.systemRoot().get("portno", "8080") --> Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport) [FD]
Line_9 $$ myport = "80" --> Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport) [FD]
Line_22 $$ myport = ipdig.getPortNo() --> Line_24 $$ java.util.prefs.Preferences.systemRoot().put("portno", myport) [FD]
Line_11 $$ if (this.serverURL == null) --> Line_25 $$ System.out.println(serverURL) [CD]
Line_29 $$ java.net.URL url = new java.net.URL("http://" + serverURL + ":" + myport + "/newgenlibctxt/" + servletName) --> Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() [FD]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_31 $$ urlconn.setDoOutput(true) [FD]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_32 $$ urlconn.setRequestProperty("Content-type", "text/xml; charset=UTF-8") [FD]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_33 $$ java.io.OutputStream os = urlconn.getOutputStream() [FD]
Line_37 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8") --> Line_39 $$ dos.write(req1xml) [FD]
Line_34 $$ String req1xml = request --> Line_39 $$ dos.write(req1xml) [FD]
Line_37 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8") --> Line_40 $$ dos.flush() [FD]
Line_37 $$ java.io.OutputStreamWriter dos = new java.io.OutputStreamWriter(gop, "UTF-8") --> Line_41 $$ dos.close() [FD]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_42 $$ System.out.println("url conn: " + urlconn.getContentEncoding() + "  " + urlconn.getContentType()) [FD]
Line_30 $$ java.net.URLConnection urlconn = (java.net.URLConnection) url.openConnection() --> Line_43 $$ java.io.InputStream ios = urlconn.getInputStream() [FD]
Line_4 $$ org.jdom.Document retdoc = null --> Line_47 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br) [FD]
Line_46 $$ java.io.InputStreamReader br = new java.io.InputStreamReader(gip, "UTF-8") --> Line_47 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br) [FD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_54 $$ System.out.println(reqxml) [CD]
Line_3 $$ String reqxml = "" --> Line_54 $$ System.out.println(reqxml) [FD]
Line_2 $$ public String sendRequest(java.lang.String servletName, java.lang.String request) --> Line_55 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc) [CD]
Line_4 $$ org.jdom.Document retdoc = null --> Line_55 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc) [FD]
Line_47 $$ retdoc = (new org.jdom.input.SAXBuilder()).build(br) --> Line_55 $$ return (new org.jdom.output.XMLOutputter()).outputString(retdoc) [FD]
