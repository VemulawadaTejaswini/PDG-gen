Line_2 $$ public void handleHandshake(Packet2Handshake par1Packet2Handshake) --> Line_3 $$ boolean flag = true [CD]
Line_2 $$ public void handleHandshake(Packet2Handshake par1Packet2Handshake) --> Line_4 $$ String s = par1Packet2Handshake.username [CD]
Line_2 $$ public void handleHandshake(Packet2Handshake par1Packet2Handshake) --> Line_5 $$ if (s == null || s.trim().length() == 0) [CD]
Line_4 $$ String s = par1Packet2Handshake.username --> Line_5 $$ if (s == null || s.trim().length() == 0) [FD]
Line_5 $$ if (s == null || s.trim().length() == 0) --> Line_6 $$ flag = false [CD]
Line_3 $$ boolean flag = true --> Line_6 $$ flag = false [FD]
Line_5 $$ if (s == null || s.trim().length() == 0) --> Line_7 $$ if (!s.equals("-")) [CD]
Line_4 $$ String s = par1Packet2Handshake.username --> Line_7 $$ if (!s.equals("-")) [FD]
Line_4 $$ String s = par1Packet2Handshake.username --> Line_9 $$ Long.parseLong(s, 16) [FD]
Line_3 $$ boolean flag = true --> Line_11 $$ flag = false [FD]
Line_6 $$ flag = false --> Line_11 $$ flag = false [FD]
Line_2 $$ public void handleHandshake(Packet2Handshake par1Packet2Handshake) --> Line_14 $$ if (!flag) [CD]
Line_3 $$ boolean flag = true --> Line_14 $$ if (!flag) [FD]
Line_6 $$ flag = false --> Line_14 $$ if (!flag) [FD]
Line_11 $$ flag = false --> Line_14 $$ if (!flag) [FD]
Line_14 $$ if (!flag) --> Line_15 $$ netManager.networkShutdown("disconnect.genericReason", new Object[] [CD]
Line_14 $$ if (!flag) --> Line_16 $$ if (par1Packet2Handshake.username.equals("-")) [CD]
Line_16 $$ if (par1Packet2Handshake.username.equals("-")) --> Line_17 $$ addToSendQueue(new Packet1Login(mc.session.username, 29)) [CD]
Line_20 $$ URL url = new URL((new StringBuilder()).append("http://session.minecraft.net/game/joinserver.jsp?user=").append(mc.session.username).append("&sessionId=").append(mc.session.sessionId).append("&serverId=").append(par1Packet2Handshake.username).toString()) --> Line_21 $$ BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_21 $$ BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_22 $$ String s1 = bufferedreader.readLine() [FD]
Line_21 $$ BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_23 $$ bufferedreader.close() [FD]
Line_22 $$ String s1 = bufferedreader.readLine() --> Line_24 $$ if (s1.equalsIgnoreCase("ok")) [FD]
Line_24 $$ if (s1.equalsIgnoreCase("ok")) --> Line_25 $$ addToSendQueue(new Packet1Login(mc.session.username, 29)) [CD]
Line_24 $$ if (s1.equalsIgnoreCase("ok")) --> Line_27 $$ netManager.networkShutdown("disconnect.loginFailedInfo", new Object[] [CD]
