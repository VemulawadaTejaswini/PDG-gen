Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_3 $$ if (clazz.hasAnnotation("icon16")) [CD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_3 $$ if (clazz.hasAnnotation("icon16")) [FD]
Line_3 $$ if (clazz.hasAnnotation("icon16")) --> Line_4 $$ String i16 = clazz.annotationValue("icon16") [CD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_4 $$ String i16 = clazz.annotationValue("icon16") [FD]
Line_3 $$ if (clazz.hasAnnotation("icon16")) --> Line_5 $$ String fileType = ".png" [CD]
Line_3 $$ if (clazz.hasAnnotation("icon16")) --> Line_6 $$ if (i16.endsWith(".jpg")) [CD]
Line_4 $$ String i16 = clazz.annotationValue("icon16") --> Line_6 $$ if (i16.endsWith(".jpg")) [FD]
Line_5 $$ String fileType = ".png" --> Line_6 $$ if (i16.endsWith(".jpg")) [FD]
Line_3 $$ if (clazz.hasAnnotation("icon16")) --> Line_7 $$ if (i16.endsWith(".gif")) [CD]
Line_4 $$ String i16 = clazz.annotationValue("icon16") --> Line_7 $$ if (i16.endsWith(".gif")) [FD]
Line_5 $$ String fileType = ".png" --> Line_7 $$ if (i16.endsWith(".gif")) [FD]
Line_6 $$ if (i16.endsWith(".jpg")) --> Line_7 $$ if (i16.endsWith(".gif")) [FD]
Line_3 $$ if (clazz.hasAnnotation("icon16")) --> Line_8 $$ String desti16 = output_dir + "/../resources/images/" + clazz.getName() + "16" + fileType [CD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_8 $$ String desti16 = output_dir + "/../resources/images/" + clazz.getName() + "16" + fileType [FD]
Line_11 $$ FileChannel dst = new FileOutputStream(desti16).getChannel() --> Line_12 $$ dst.transferFrom(src, 0, src.size()) [FD]
Line_10 $$ FileChannel src = new FileInputStream(i16).getChannel() --> Line_12 $$ dst.transferFrom(src, 0, src.size()) [FD]
Line_10 $$ FileChannel src = new FileInputStream(i16).getChannel() --> Line_13 $$ src.close() [FD]
Line_11 $$ FileChannel dst = new FileOutputStream(desti16).getChannel() --> Line_14 $$ dst.close() [FD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_19 $$ if (clazz.hasAnnotation("icon32")) [CD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_19 $$ if (clazz.hasAnnotation("icon32")) [FD]
Line_19 $$ if (clazz.hasAnnotation("icon32")) --> Line_20 $$ String i32 = clazz.annotationValue("icon32") [CD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_20 $$ String i32 = clazz.annotationValue("icon32") [FD]
Line_19 $$ if (clazz.hasAnnotation("icon32")) --> Line_22 $$ if (i32.endsWith(".jpg")) [CD]
Line_20 $$ String i32 = clazz.annotationValue("icon32") --> Line_22 $$ if (i32.endsWith(".jpg")) [FD]
Line_5 $$ String fileType = ".png" --> Line_22 $$ if (i32.endsWith(".jpg")) [FD]
Line_6 $$ if (i16.endsWith(".jpg")) --> Line_22 $$ if (i32.endsWith(".jpg")) [FD]
Line_7 $$ if (i16.endsWith(".gif")) --> Line_22 $$ if (i32.endsWith(".jpg")) [FD]
Line_19 $$ if (clazz.hasAnnotation("icon32")) --> Line_23 $$ if (i32.endsWith(".gif")) [CD]
Line_20 $$ String i32 = clazz.annotationValue("icon32") --> Line_23 $$ if (i32.endsWith(".gif")) [FD]
Line_5 $$ String fileType = ".png" --> Line_23 $$ if (i32.endsWith(".gif")) [FD]
Line_6 $$ if (i16.endsWith(".jpg")) --> Line_23 $$ if (i32.endsWith(".gif")) [FD]
Line_7 $$ if (i16.endsWith(".gif")) --> Line_23 $$ if (i32.endsWith(".gif")) [FD]
Line_22 $$ if (i32.endsWith(".jpg")) --> Line_23 $$ if (i32.endsWith(".gif")) [FD]
Line_19 $$ if (clazz.hasAnnotation("icon32")) --> Line_24 $$ String desti32 = output_dir + "/../resources/images/" + clazz.getName() + "32" + fileType [CD]
Line_2 $$ private void copyIconFiles(UmlClass clazz) --> Line_24 $$ String desti32 = output_dir + "/../resources/images/" + clazz.getName() + "32" + fileType [FD]
Line_11 $$ FileChannel dst = new FileOutputStream(desti16).getChannel() --> Line_28 $$ dst.transferFrom(src, 0, src.size()) [FD]
Line_10 $$ FileChannel src = new FileInputStream(i16).getChannel() --> Line_28 $$ dst.transferFrom(src, 0, src.size()) [FD]
Line_10 $$ FileChannel src = new FileInputStream(i16).getChannel() --> Line_29 $$ src.close() [FD]
Line_11 $$ FileChannel dst = new FileOutputStream(desti16).getChannel() --> Line_30 $$ dst.close() [FD]
