Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_3 $$ SQLDialect dialect = getDatabase().getSQLDialect() [CD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_4 $$ if (TRANSACTIONS_ENABLED) [CD]
Line_4 $$ if (TRANSACTIONS_ENABLED) --> Line_5 $$ conn.setAutoCommit(false) [CD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_5 $$ conn.setAutoCommit(false) [FD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_8 $$ Object thisKey = c.getPrimaryKey() [FD]
Line_8 $$ Object thisKey = c.getPrimaryKey() --> Line_9 $$ deleteFieldContent(thisKey, conn) [FD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_9 $$ deleteFieldContent(thisKey, conn) [FD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_12 $$ Map fieldMap = c.getFieldMap() [FD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) [FD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_16 $$ nextItem = (StructureItem) i.next() [CD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_16 $$ nextItem = (StructureItem) i.next() [FD]
Line_11 $$ StructureItem nextItem --> Line_16 $$ nextItem = (StructureItem) i.next() [FD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_17 $$ type = nextItem.getDataType().toUpperCase() [CD]
Line_13 $$ String type --> Line_17 $$ type = nextItem.getDataType().toUpperCase() [FD]
Line_16 $$ nextItem = (StructureItem) i.next() --> Line_17 $$ type = nextItem.getDataType().toUpperCase() [FD]
Line_11 $$ StructureItem nextItem --> Line_17 $$ type = nextItem.getDataType().toUpperCase() [FD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_18 $$ siKey = nextItem.getPrimaryKey() [CD]
Line_14 $$ Object value, siKey --> Line_18 $$ siKey = nextItem.getPrimaryKey() [FD]
Line_16 $$ nextItem = (StructureItem) i.next() --> Line_18 $$ siKey = nextItem.getPrimaryKey() [FD]
Line_11 $$ StructureItem nextItem --> Line_18 $$ siKey = nextItem.getPrimaryKey() [FD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_19 $$ value = fieldMap.get(nextItem.getName()) [CD]
Line_14 $$ Object value, siKey --> Line_19 $$ value = fieldMap.get(nextItem.getName()) [FD]
Line_12 $$ Map fieldMap = c.getFieldMap() --> Line_19 $$ value = fieldMap.get(nextItem.getName()) [FD]
Line_16 $$ nextItem = (StructureItem) i.next() --> Line_19 $$ value = fieldMap.get(nextItem.getName()) [FD]
Line_11 $$ StructureItem nextItem --> Line_19 $$ value = fieldMap.get(nextItem.getName()) [FD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_20 $$ if (type.equals(StructureItem.DATE)) [CD]
Line_17 $$ type = nextItem.getDataType().toUpperCase() --> Line_20 $$ if (type.equals(StructureItem.DATE)) [FD]
Line_13 $$ String type --> Line_20 $$ if (type.equals(StructureItem.DATE)) [FD]
Line_20 $$ if (type.equals(StructureItem.DATE)) --> Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) [CD]
Line_10 $$ PreparedStatement ps = null --> Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) [FD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) [FD]
Line_20 $$ if (type.equals(StructureItem.DATE)) --> Line_22 $$ ps.setObject(1, thisKey) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_22 $$ ps.setObject(1, thisKey) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_22 $$ ps.setObject(1, thisKey) [FD]
Line_8 $$ Object thisKey = c.getPrimaryKey() --> Line_22 $$ ps.setObject(1, thisKey) [FD]
Line_20 $$ if (type.equals(StructureItem.DATE)) --> Line_23 $$ ps.setObject(2, siKey) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_23 $$ ps.setObject(2, siKey) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_23 $$ ps.setObject(2, siKey) [FD]
Line_18 $$ siKey = nextItem.getPrimaryKey() --> Line_23 $$ ps.setObject(2, siKey) [FD]
Line_14 $$ Object value, siKey --> Line_23 $$ ps.setObject(2, siKey) [FD]
Line_20 $$ if (type.equals(StructureItem.DATE)) --> Line_24 $$ dialect.setDate(ps, 3, (java.util.Date) value) [CD]
Line_3 $$ SQLDialect dialect = getDatabase().getSQLDialect() --> Line_24 $$ dialect.setDate(ps, 3, (java.util.Date) value) [FD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_24 $$ dialect.setDate(ps, 3, (java.util.Date) value) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_24 $$ dialect.setDate(ps, 3, (java.util.Date) value) [FD]
Line_20 $$ if (type.equals(StructureItem.DATE)) --> Line_25 $$ ps.executeUpdate() [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_25 $$ ps.executeUpdate() [FD]
Line_10 $$ PreparedStatement ps = null --> Line_25 $$ ps.executeUpdate() [FD]
Line_20 $$ if (type.equals(StructureItem.DATE)) --> Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [CD]
Line_17 $$ type = nextItem.getDataType().toUpperCase() --> Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [FD]
Line_13 $$ String type --> Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) [FD]
Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) --> Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) [FD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) [FD]
Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) --> Line_28 $$ ps.setObject(1, thisKey) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_28 $$ ps.setObject(1, thisKey) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_28 $$ ps.setObject(1, thisKey) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_28 $$ ps.setObject(1, thisKey) [FD]
Line_8 $$ Object thisKey = c.getPrimaryKey() --> Line_28 $$ ps.setObject(1, thisKey) [FD]
Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) --> Line_29 $$ ps.setObject(2, siKey) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_29 $$ ps.setObject(2, siKey) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_29 $$ ps.setObject(2, siKey) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_29 $$ ps.setObject(2, siKey) [FD]
Line_18 $$ siKey = nextItem.getPrimaryKey() --> Line_29 $$ ps.setObject(2, siKey) [FD]
Line_14 $$ Object value, siKey --> Line_29 $$ ps.setObject(2, siKey) [FD]
Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) --> Line_30 $$ if (value != null) [CD]
Line_19 $$ value = fieldMap.get(nextItem.getName()) --> Line_30 $$ if (value != null) [FD]
Line_14 $$ Object value, siKey --> Line_30 $$ if (value != null) [FD]
Line_30 $$ if (value != null) --> Line_31 $$ ps.setObject(3, value) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_31 $$ ps.setObject(3, value) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_31 $$ ps.setObject(3, value) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_31 $$ ps.setObject(3, value) [FD]
Line_19 $$ value = fieldMap.get(nextItem.getName()) --> Line_31 $$ ps.setObject(3, value) [FD]
Line_14 $$ Object value, siKey --> Line_31 $$ ps.setObject(3, value) [FD]
Line_30 $$ if (value != null) --> Line_33 $$ int sqlType = Types.INTEGER [CD]
Line_30 $$ if (value != null) --> Line_34 $$ if (type.equals(StructureItem.FLOAT)) [CD]
Line_17 $$ type = nextItem.getDataType().toUpperCase() --> Line_34 $$ if (type.equals(StructureItem.FLOAT)) [FD]
Line_13 $$ String type --> Line_34 $$ if (type.equals(StructureItem.FLOAT)) [FD]
Line_34 $$ if (type.equals(StructureItem.FLOAT)) --> Line_35 $$ sqlType = Types.FLOAT [CD]
Line_33 $$ int sqlType = Types.INTEGER --> Line_35 $$ sqlType = Types.FLOAT [FD]
Line_34 $$ if (type.equals(StructureItem.FLOAT)) --> Line_36 $$ if (type.equals(StructureItem.VARCHAR)) [CD]
Line_17 $$ type = nextItem.getDataType().toUpperCase() --> Line_36 $$ if (type.equals(StructureItem.VARCHAR)) [FD]
Line_13 $$ String type --> Line_36 $$ if (type.equals(StructureItem.VARCHAR)) [FD]
Line_36 $$ if (type.equals(StructureItem.VARCHAR)) --> Line_37 $$ sqlType = Types.VARCHAR [CD]
Line_33 $$ int sqlType = Types.INTEGER --> Line_37 $$ sqlType = Types.VARCHAR [FD]
Line_35 $$ sqlType = Types.FLOAT --> Line_37 $$ sqlType = Types.VARCHAR [FD]
Line_30 $$ if (value != null) --> Line_39 $$ ps.setNull(3, sqlType) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_33 $$ int sqlType = Types.INTEGER --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_35 $$ sqlType = Types.FLOAT --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_37 $$ sqlType = Types.VARCHAR --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) --> Line_41 $$ ps.executeUpdate() [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_41 $$ ps.executeUpdate() [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_41 $$ ps.executeUpdate() [FD]
Line_10 $$ PreparedStatement ps = null --> Line_41 $$ ps.executeUpdate() [FD]
Line_26 $$ if (type.equals(StructureItem.INT) || type.equals(StructureItem.FLOAT) || type.equals(StructureItem.VARCHAR)) --> Line_42 $$ if (type.equals(StructureItem.TEXT)) [CD]
Line_17 $$ type = nextItem.getDataType().toUpperCase() --> Line_42 $$ if (type.equals(StructureItem.TEXT)) [FD]
Line_13 $$ String type --> Line_42 $$ if (type.equals(StructureItem.TEXT)) [FD]
Line_42 $$ if (type.equals(StructureItem.TEXT)) --> Line_43 $$ setTextField(c, siKey, (String) value, conn) [CD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_43 $$ setTextField(c, siKey, (String) value, conn) [FD]
Line_18 $$ siKey = nextItem.getPrimaryKey() --> Line_43 $$ setTextField(c, siKey, (String) value, conn) [FD]
Line_14 $$ Object value, siKey --> Line_43 $$ setTextField(c, siKey, (String) value, conn) [FD]
Line_15 $$ for (Iterator i = c.getStructure().getStructureItems().iterator(); i.hasNext(); ) --> Line_45 $$ if (ps != null) [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_45 $$ if (ps != null) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_45 $$ if (ps != null) [FD]
Line_10 $$ PreparedStatement ps = null --> Line_45 $$ if (ps != null) [FD]
Line_45 $$ if (ps != null) --> Line_46 $$ ps.close() [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_46 $$ ps.close() [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_46 $$ ps.close() [FD]
Line_10 $$ PreparedStatement ps = null --> Line_46 $$ ps.close() [FD]
Line_45 $$ if (ps != null) --> Line_47 $$ ps = null [CD]
Line_21 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_DATE_FIELD")) --> Line_47 $$ ps = null [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_47 $$ ps = null [FD]
Line_10 $$ PreparedStatement ps = null --> Line_47 $$ ps = null [FD]
Line_50 $$ if (TRANSACTIONS_ENABLED) --> Line_51 $$ conn.commit() [CD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_51 $$ conn.commit() [FD]
Line_54 $$ if (TRANSACTIONS_ENABLED) --> Line_55 $$ conn.rollback() [CD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_55 $$ conn.rollback() [FD]
Line_59 $$ if (TRANSACTIONS_ENABLED) --> Line_60 $$ conn.setAutoCommit(true) [CD]
Line_2 $$ private void storeFieldMap(Content c, Connection conn) throws SQLException --> Line_60 $$ conn.setAutoCommit(true) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_22 $$ ps.setObject(1, thisKey) [FD]
Line_47 $$ ps = null --> Line_22 $$ ps.setObject(1, thisKey) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_23 $$ ps.setObject(2, siKey) [FD]
Line_47 $$ ps = null --> Line_23 $$ ps.setObject(2, siKey) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_24 $$ dialect.setDate(ps, 3, (java.util.Date) value) [FD]
Line_47 $$ ps = null --> Line_24 $$ dialect.setDate(ps, 3, (java.util.Date) value) [FD]
Line_27 $$ ps = conn.prepareStatement(sqlConstants.get("INSERT_" + type + "_FIELD")) --> Line_25 $$ ps.executeUpdate() [FD]
Line_47 $$ ps = null --> Line_25 $$ ps.executeUpdate() [FD]
Line_47 $$ ps = null --> Line_28 $$ ps.setObject(1, thisKey) [FD]
Line_47 $$ ps = null --> Line_29 $$ ps.setObject(2, siKey) [FD]
Line_47 $$ ps = null --> Line_31 $$ ps.setObject(3, value) [FD]
Line_47 $$ ps = null --> Line_39 $$ ps.setNull(3, sqlType) [FD]
Line_47 $$ ps = null --> Line_41 $$ ps.executeUpdate() [FD]
Line_47 $$ ps = null --> Line_45 $$ if (ps != null) [FD]
Line_47 $$ ps = null --> Line_46 $$ ps.close() [FD]
