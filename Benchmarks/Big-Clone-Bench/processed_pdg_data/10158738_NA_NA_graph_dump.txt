Line_4 $$ Connection conn = null --> Line_7 $$ conn = FidoDataSource.getConnection() [FD]
Line_4 $$ Connection conn = null --> Line_8 $$ conn.setAutoCommit(false) [FD]
Line_7 $$ conn = FidoDataSource.getConnection() --> Line_8 $$ conn.setAutoCommit(false) [FD]
Line_5 $$ Statement stmt = null --> Line_9 $$ stmt = conn.createStatement() [FD]
Line_4 $$ Connection conn = null --> Line_9 $$ stmt = conn.createStatement() [FD]
Line_7 $$ conn = FidoDataSource.getConnection() --> Line_9 $$ stmt = conn.createStatement() [FD]
Line_5 $$ Statement stmt = null --> Line_10 $$ if (containsTag(stmt, tag) == false) [FD]
Line_9 $$ stmt = conn.createStatement() --> Line_10 $$ if (containsTag(stmt, tag) == false) [FD]
Line_2 $$ public void add(String language, String tag, String root, String surface) throws FidoDatabaseException, MorphologyTagNotFoundException --> Line_10 $$ if (containsTag(stmt, tag) == false) [FD]
Line_5 $$ Statement stmt = null --> Line_11 $$ if (isRuleUnique(stmt, language, tag, root, surface) == false) [FD]
Line_9 $$ stmt = conn.createStatement() --> Line_11 $$ if (isRuleUnique(stmt, language, tag, root, surface) == false) [FD]
Line_2 $$ public void add(String language, String tag, String root, String surface) throws FidoDatabaseException, MorphologyTagNotFoundException --> Line_11 $$ if (isRuleUnique(stmt, language, tag, root, surface) == false) [FD]
Line_2 $$ public void add(String language, String tag, String root, String surface) throws FidoDatabaseException, MorphologyTagNotFoundException --> Line_13 $$ row = getFirstRegularFormForTag(stmt, language, tag) [FD]
Line_12 $$ int row --> Line_13 $$ row = getFirstRegularFormForTag(stmt, language, tag) [FD]
Line_5 $$ Statement stmt = null --> Line_13 $$ row = getFirstRegularFormForTag(stmt, language, tag) [FD]
Line_9 $$ stmt = conn.createStatement() --> Line_13 $$ row = getFirstRegularFormForTag(stmt, language, tag) [FD]
Line_2 $$ public void add(String language, String tag, String root, String surface) throws FidoDatabaseException, MorphologyTagNotFoundException --> Line_14 $$ boolean use = determineRecognitionUse(root, surface) [FD]
Line_5 $$ Statement stmt = null --> Line_15 $$ bumpAllRowsDown(stmt, language, tag, row) [FD]
Line_9 $$ stmt = conn.createStatement() --> Line_15 $$ bumpAllRowsDown(stmt, language, tag, row) [FD]
Line_2 $$ public void add(String language, String tag, String root, String surface) throws FidoDatabaseException, MorphologyTagNotFoundException --> Line_15 $$ bumpAllRowsDown(stmt, language, tag, row) [FD]
Line_12 $$ int row --> Line_15 $$ bumpAllRowsDown(stmt, language, tag, row) [FD]
Line_13 $$ row = getFirstRegularFormForTag(stmt, language, tag) --> Line_15 $$ bumpAllRowsDown(stmt, language, tag, row) [FD]
Line_14 $$ boolean use = determineRecognitionUse(root, surface) --> Line_17 $$ sql = sql + "FALSE)" [FD]
Line_16 $$ String sql = "insert into LanguageMorphologies (LanguageName, Rank, Root, Surface, MorphologyTag, Used) " + "values ('" + language + "', " + row + ", '" + root + "', '" + surface + "', '" + tag + "', " --> Line_17 $$ sql = sql + "FALSE)" [FD]
Line_5 $$ Statement stmt = null --> Line_18 $$ stmt.executeUpdate(sql) [FD]
Line_9 $$ stmt = conn.createStatement() --> Line_18 $$ stmt.executeUpdate(sql) [FD]
Line_16 $$ String sql = "insert into LanguageMorphologies (LanguageName, Rank, Root, Surface, MorphologyTag, Used) " + "values ('" + language + "', " + row + ", '" + root + "', '" + surface + "', '" + tag + "', " --> Line_18 $$ stmt.executeUpdate(sql) [FD]
Line_17 $$ sql = sql + "FALSE)" --> Line_18 $$ stmt.executeUpdate(sql) [FD]
Line_4 $$ Connection conn = null --> Line_19 $$ conn.commit() [FD]
Line_7 $$ conn = FidoDataSource.getConnection() --> Line_19 $$ conn.commit() [FD]
Line_4 $$ Connection conn = null --> Line_21 $$ if (conn != null) [FD]
Line_7 $$ conn = FidoDataSource.getConnection() --> Line_21 $$ if (conn != null) [FD]
Line_5 $$ Statement stmt = null --> Line_24 $$ if (stmt != null) [FD]
Line_9 $$ stmt = conn.createStatement() --> Line_24 $$ if (stmt != null) [FD]
Line_4 $$ Connection conn = null --> Line_25 $$ if (conn != null) [FD]
Line_7 $$ conn = FidoDataSource.getConnection() --> Line_25 $$ if (conn != null) [FD]
