Line_2 $$ public void parse() throws IOException --> Line_3 $$ URL url = new URL(getDataUrl()) [CD]
Line_2 $$ public void parse() throws IOException --> Line_4 $$ URLConnection con = url.openConnection() [CD]
Line_3 $$ URL url = new URL(getDataUrl()) --> Line_4 $$ URLConnection con = url.openConnection() [FD]
Line_2 $$ public void parse() throws IOException --> Line_5 $$ BufferedReader bStream = new BufferedReader(new InputStreamReader(con.getInputStream())) [CD]
Line_4 $$ URLConnection con = url.openConnection() --> Line_5 $$ BufferedReader bStream = new BufferedReader(new InputStreamReader(con.getInputStream())) [FD]
Line_2 $$ public void parse() throws IOException --> Line_6 $$ String str [CD]
Line_2 $$ public void parse() throws IOException --> Line_7 $$ while ((str = bStream.readLine()) != null) [CD]
Line_6 $$ String str --> Line_7 $$ while ((str = bStream.readLine()) != null) [FD]
Line_5 $$ BufferedReader bStream = new BufferedReader(new InputStreamReader(con.getInputStream())) --> Line_7 $$ while ((str = bStream.readLine()) != null) [FD]
Line_7 $$ while ((str = bStream.readLine()) != null) --> Line_8 $$ String[] tokens = str.split(",") [CD]
Line_7 $$ while ((str = bStream.readLine()) != null) --> Line_8 $$ String[] tokens = str.split(",") [FD]
Line_6 $$ String str --> Line_8 $$ String[] tokens = str.split(",") [FD]
Line_7 $$ while ((str = bStream.readLine()) != null) --> Line_9 $$ CurrencyUnit unit = new CurrencyUnit(tokens[1], Float.valueOf(tokens[3]), Integer.valueOf(tokens[2])) [CD]
Line_7 $$ while ((str = bStream.readLine()) != null) --> Line_10 $$ this.set.add(unit) [CD]
Line_9 $$ CurrencyUnit unit = new CurrencyUnit(tokens[1], Float.valueOf(tokens[3]), Integer.valueOf(tokens[2])) --> Line_10 $$ this.set.add(unit) [FD]
