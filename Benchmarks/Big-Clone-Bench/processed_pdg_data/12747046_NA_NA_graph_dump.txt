Line_2 $$ public Object construct() --> Line_3 $$ Object result [CD]
Line_5 $$ if (getParameter("data") != null && getParameter("data").length() > 0) --> Line_6 $$ NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter("data"))) [CD]
Line_5 $$ if (getParameter("data") != null && getParameter("data").length() > 0) --> Line_7 $$ result = domi.readObject(0) [CD]
Line_3 $$ Object result --> Line_7 $$ result = domi.readObject(0) [FD]
Line_6 $$ NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter("data"))) --> Line_7 $$ result = domi.readObject(0) [FD]
Line_5 $$ if (getParameter("data") != null && getParameter("data").length() > 0) --> Line_8 $$ if (getParameter("datafile") != null) [CD]
Line_8 $$ if (getParameter("datafile") != null) --> Line_9 $$ InputStream in = null [CD]
Line_9 $$ InputStream in = null --> Line_12 $$ in = url.openConnection().getInputStream() [FD]
Line_11 $$ URL url = new URL(getDocumentBase(), getParameter("datafile")) --> Line_12 $$ in = url.openConnection().getInputStream() [FD]
Line_3 $$ Object result --> Line_14 $$ result = domi.readObject(0) [FD]
Line_7 $$ result = domi.readObject(0) --> Line_14 $$ result = domi.readObject(0) [FD]
Line_6 $$ NanoXMLDOMInput domi = new NanoXMLDOMInput(new UMLFigureFactory(), new StringReader(getParameter("data"))) --> Line_14 $$ result = domi.readObject(0) [FD]
Line_9 $$ InputStream in = null --> Line_16 $$ if (in != null) [FD]
Line_12 $$ in = url.openConnection().getInputStream() --> Line_16 $$ if (in != null) [FD]
Line_8 $$ if (getParameter("datafile") != null) --> Line_19 $$ result = null [CD]
Line_3 $$ Object result --> Line_19 $$ result = null [FD]
Line_7 $$ result = domi.readObject(0) --> Line_19 $$ result = null [FD]
Line_14 $$ result = domi.readObject(0) --> Line_19 $$ result = null [FD]
Line_3 $$ Object result --> Line_22 $$ result = t [FD]
Line_7 $$ result = domi.readObject(0) --> Line_22 $$ result = t [FD]
Line_14 $$ result = domi.readObject(0) --> Line_22 $$ result = t [FD]
Line_19 $$ result = null --> Line_22 $$ result = t [FD]
Line_2 $$ public Object construct() --> Line_24 $$ return result [CD]
