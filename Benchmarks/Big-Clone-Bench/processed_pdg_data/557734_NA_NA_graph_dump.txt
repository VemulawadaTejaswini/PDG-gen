Line_2 $$ public void constructAssociationView() --> Line_3 $$ String className [CD]
Line_2 $$ public void constructAssociationView() --> Line_4 $$ String methodName [CD]
Line_2 $$ public void constructAssociationView() --> Line_5 $$ String field [CD]
Line_2 $$ public void constructAssociationView() --> Line_6 $$ boolean foundRead = false [CD]
Line_2 $$ public void constructAssociationView() --> Line_7 $$ boolean foundWrite = false [CD]
Line_2 $$ public void constructAssociationView() --> Line_8 $$ boolean classWritten = false [CD]
Line_5 $$ String field --> Line_14 $$ while ((field = PC.readLine()) != null) [FD]
Line_13 $$ BufferedReader PC = new BufferedReader(new InputStreamReader(inPC)) --> Line_14 $$ while ((field = PC.readLine()) != null) [FD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_15 $$ className = field [CD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_15 $$ className = field [FD]
Line_5 $$ String field --> Line_15 $$ className = field [FD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_16 $$ AssocView.write(className) [CD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_17 $$ AssocView.newLine() [CD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_18 $$ classWritten = true [CD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_19 $$ while ((methodName = PC.readLine()) != null) [CD]
Line_4 $$ String methodName --> Line_19 $$ while ((methodName = PC.readLine()) != null) [FD]
Line_13 $$ BufferedReader PC = new BufferedReader(new InputStreamReader(inPC)) --> Line_19 $$ while ((methodName = PC.readLine()) != null) [FD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_20 $$ if (methodName.contentEquals("EndOfClass")) [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_20 $$ if (methodName.contentEquals("EndOfClass")) [FD]
Line_4 $$ String methodName --> Line_20 $$ if (methodName.contentEquals("EndOfClass")) [FD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_21 $$ AssocView.write("StartOfMethod") [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_22 $$ AssocView.newLine() [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_23 $$ AssocView.write(methodName) [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_23 $$ AssocView.write(methodName) [FD]
Line_4 $$ String methodName --> Line_23 $$ AssocView.write(methodName) [FD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_24 $$ AssocView.newLine() [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_25 $$ for (int i = 0; i < readFileCount && foundRead == false; i++) [CD]
Line_25 $$ for (int i = 0; i < readFileCount && foundRead == false; i++) --> Line_26 $$ if (methodName.compareTo(readArray[i]) == 0) [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_26 $$ if (methodName.compareTo(readArray[i]) == 0) [FD]
Line_4 $$ String methodName --> Line_26 $$ if (methodName.compareTo(readArray[i]) == 0) [FD]
Line_26 $$ if (methodName.compareTo(readArray[i]) == 0) --> Line_27 $$ foundRead = true [CD]
Line_6 $$ boolean foundRead = false --> Line_27 $$ foundRead = true [FD]
Line_26 $$ if (methodName.compareTo(readArray[i]) == 0) --> Line_28 $$ for (int j = 1; readArray[i + j].compareTo("EndOfMethod") != 0; j++) [CD]
Line_28 $$ for (int j = 1; readArray[i + j].compareTo("EndOfMethod") != 0; j++) --> Line_29 $$ if (readArray[i + j].indexOf(".") > 0) [CD]
Line_29 $$ if (readArray[i + j].indexOf(".") > 0) --> Line_30 $$ field = readArray[i + j].substring(0, readArray[i + j].indexOf(".")) [CD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_30 $$ field = readArray[i + j].substring(0, readArray[i + j].indexOf(".")) [FD]
Line_5 $$ String field --> Line_30 $$ field = readArray[i + j].substring(0, readArray[i + j].indexOf(".")) [FD]
Line_29 $$ if (readArray[i + j].indexOf(".") > 0) --> Line_31 $$ if (isPrincipleClass(field) == true) [CD]
Line_30 $$ field = readArray[i + j].substring(0, readArray[i + j].indexOf(".")) --> Line_31 $$ if (isPrincipleClass(field) == true) [FD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_31 $$ if (isPrincipleClass(field) == true) [FD]
Line_5 $$ String field --> Line_31 $$ if (isPrincipleClass(field) == true) [FD]
Line_31 $$ if (isPrincipleClass(field) == true) --> Line_32 $$ AssocView.write(readArray[i + j]) [CD]
Line_31 $$ if (isPrincipleClass(field) == true) --> Line_33 $$ AssocView.newLine() [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_39 $$ for (int i = 0; i < writeFileCount && foundWrite == false; i++) [CD]
Line_25 $$ for (int i = 0; i < readFileCount && foundRead == false; i++) --> Line_39 $$ for (int i = 0; i < writeFileCount && foundWrite == false; i++) [FD]
Line_39 $$ for (int i = 0; i < writeFileCount && foundWrite == false; i++) --> Line_40 $$ if (methodName.compareTo(writeArray[i]) == 0) [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_40 $$ if (methodName.compareTo(writeArray[i]) == 0) [FD]
Line_4 $$ String methodName --> Line_40 $$ if (methodName.compareTo(writeArray[i]) == 0) [FD]
Line_40 $$ if (methodName.compareTo(writeArray[i]) == 0) --> Line_41 $$ foundWrite = true [CD]
Line_7 $$ boolean foundWrite = false --> Line_41 $$ foundWrite = true [FD]
Line_40 $$ if (methodName.compareTo(writeArray[i]) == 0) --> Line_42 $$ for (int j = 1; writeArray[i + j].compareTo("EndOfMethod") != 0; j++) [CD]
Line_28 $$ for (int j = 1; readArray[i + j].compareTo("EndOfMethod") != 0; j++) --> Line_42 $$ for (int j = 1; writeArray[i + j].compareTo("EndOfMethod") != 0; j++) [FD]
Line_42 $$ for (int j = 1; writeArray[i + j].compareTo("EndOfMethod") != 0; j++) --> Line_43 $$ if (writeArray[i + j].indexOf(".") > 0) [CD]
Line_43 $$ if (writeArray[i + j].indexOf(".") > 0) --> Line_44 $$ field = writeArray[i + j].substring(0, writeArray[i + j].indexOf(".")) [CD]
Line_30 $$ field = readArray[i + j].substring(0, readArray[i + j].indexOf(".")) --> Line_44 $$ field = writeArray[i + j].substring(0, writeArray[i + j].indexOf(".")) [FD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_44 $$ field = writeArray[i + j].substring(0, writeArray[i + j].indexOf(".")) [FD]
Line_5 $$ String field --> Line_44 $$ field = writeArray[i + j].substring(0, writeArray[i + j].indexOf(".")) [FD]
Line_43 $$ if (writeArray[i + j].indexOf(".") > 0) --> Line_45 $$ if (isPrincipleClass(field) == true) [CD]
Line_44 $$ field = writeArray[i + j].substring(0, writeArray[i + j].indexOf(".")) --> Line_45 $$ if (isPrincipleClass(field) == true) [FD]
Line_30 $$ field = readArray[i + j].substring(0, readArray[i + j].indexOf(".")) --> Line_45 $$ if (isPrincipleClass(field) == true) [FD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_45 $$ if (isPrincipleClass(field) == true) [FD]
Line_5 $$ String field --> Line_45 $$ if (isPrincipleClass(field) == true) [FD]
Line_45 $$ if (isPrincipleClass(field) == true) --> Line_46 $$ AssocView.write(writeArray[i + j]) [CD]
Line_45 $$ if (isPrincipleClass(field) == true) --> Line_47 $$ AssocView.newLine() [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_53 $$ AssocView.write("EndOfMethod") [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_54 $$ AssocView.newLine() [CD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_55 $$ foundRead = false [CD]
Line_27 $$ foundRead = true --> Line_55 $$ foundRead = false [FD]
Line_6 $$ boolean foundRead = false --> Line_55 $$ foundRead = false [FD]
Line_19 $$ while ((methodName = PC.readLine()) != null) --> Line_56 $$ foundWrite = false [CD]
Line_41 $$ foundWrite = true --> Line_56 $$ foundWrite = false [FD]
Line_7 $$ boolean foundWrite = false --> Line_56 $$ foundWrite = false [FD]
Line_14 $$ while ((field = PC.readLine()) != null) --> Line_58 $$ if (classWritten == true) [CD]
Line_13 $$ BufferedReader PC = new BufferedReader(new InputStreamReader(inPC)) --> Line_64 $$ PC.close() [FD]
