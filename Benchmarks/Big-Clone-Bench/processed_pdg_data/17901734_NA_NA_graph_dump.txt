Line_2 $$ public static void track(String strUserName, String strShortDescription, String strLongDescription, String strPriority, String strComponent) --> Line_3 $$ String strFromToken = "" [CD]
Line_5 $$ URL url = new URL(getTracUrl() + "newticket") --> Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_7 $$ String buffer = reader.readLine() [FD]
Line_7 $$ String buffer = reader.readLine() --> Line_8 $$ while (buffer != null) [FD]
Line_8 $$ while (buffer != null) --> Line_9 $$ if (buffer.contains("__FORM_TOKEN")) [CD]
Line_7 $$ String buffer = reader.readLine() --> Line_9 $$ if (buffer.contains("__FORM_TOKEN")) [FD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_10 $$ Pattern pattern = Pattern.compile("value=\"[^\"]*\"") [CD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_11 $$ Matcher matcher = pattern.matcher(buffer) [CD]
Line_10 $$ Pattern pattern = Pattern.compile("value=\"[^\"]*\"") --> Line_11 $$ Matcher matcher = pattern.matcher(buffer) [FD]
Line_7 $$ String buffer = reader.readLine() --> Line_11 $$ Matcher matcher = pattern.matcher(buffer) [FD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_12 $$ int start = 0 [CD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_13 $$ matcher.find(start) [CD]
Line_11 $$ Matcher matcher = pattern.matcher(buffer) --> Line_13 $$ matcher.find(start) [FD]
Line_12 $$ int start = 0 --> Line_13 $$ matcher.find(start) [FD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_14 $$ int von = matcher.start() + 7 [CD]
Line_11 $$ Matcher matcher = pattern.matcher(buffer) --> Line_14 $$ int von = matcher.start() + 7 [FD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_15 $$ int bis = matcher.end() - 1 [CD]
Line_11 $$ Matcher matcher = pattern.matcher(buffer) --> Line_15 $$ int bis = matcher.end() - 1 [FD]
Line_9 $$ if (buffer.contains("__FORM_TOKEN")) --> Line_16 $$ strFromToken = buffer.substring(von, bis) [CD]
Line_3 $$ String strFromToken = "" --> Line_16 $$ strFromToken = buffer.substring(von, bis) [FD]
Line_7 $$ String buffer = reader.readLine() --> Line_16 $$ strFromToken = buffer.substring(von, bis) [FD]
Line_14 $$ int von = matcher.start() + 7 --> Line_16 $$ strFromToken = buffer.substring(von, bis) [FD]
Line_15 $$ int bis = matcher.end() - 1 --> Line_16 $$ strFromToken = buffer.substring(von, bis) [FD]
Line_8 $$ while (buffer != null) --> Line_18 $$ buffer = reader.readLine() [CD]
Line_7 $$ String buffer = reader.readLine() --> Line_18 $$ buffer = reader.readLine() [FD]
Line_6 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_18 $$ buffer = reader.readLine() [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_22 $$ method.setRequestHeader("Cookie", "trac_form_token=" + strFromToken) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_23 $$ method.addParameter("__FORM_TOKEN", strFromToken) [FD]
Line_16 $$ strFromToken = buffer.substring(von, bis) --> Line_23 $$ method.addParameter("__FORM_TOKEN", strFromToken) [FD]
Line_3 $$ String strFromToken = "" --> Line_23 $$ method.addParameter("__FORM_TOKEN", strFromToken) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_24 $$ method.addParameter("reporter", strUserName) [FD]
Line_2 $$ public static void track(String strUserName, String strShortDescription, String strLongDescription, String strPriority, String strComponent) --> Line_24 $$ method.addParameter("reporter", strUserName) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_25 $$ method.addParameter("summary", strShortDescription) [FD]
Line_2 $$ public static void track(String strUserName, String strShortDescription, String strLongDescription, String strPriority, String strComponent) --> Line_25 $$ method.addParameter("summary", strShortDescription) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_26 $$ method.addParameter("type", "Fehler") [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_27 $$ method.addParameter("description", strLongDescription) [FD]
Line_2 $$ public static void track(String strUserName, String strShortDescription, String strLongDescription, String strPriority, String strComponent) --> Line_27 $$ method.addParameter("description", strLongDescription) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_28 $$ method.addParameter("action", "create") [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_29 $$ method.addParameter("status", "new") [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_30 $$ method.addParameter("priority", strPriority) [FD]
Line_2 $$ public static void track(String strUserName, String strShortDescription, String strLongDescription, String strPriority, String strComponent) --> Line_30 $$ method.addParameter("priority", strPriority) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_31 $$ method.addParameter("milestone", "") [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_32 $$ method.addParameter("component", strComponent) [FD]
Line_2 $$ public static void track(String strUserName, String strShortDescription, String strLongDescription, String strPriority, String strComponent) --> Line_32 $$ method.addParameter("component", strComponent) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_33 $$ method.addParameter("keywords", "BugReporter") [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_34 $$ method.addParameter("cc", "") [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_35 $$ method.addParameter("version", "") [FD]
Line_20 $$ HttpClient client = new HttpClient() --> Line_36 $$ client.executeMethod(method) [FD]
Line_21 $$ PostMethod method = new PostMethod(getTracUrl() + "newticket") --> Line_36 $$ client.executeMethod(method) [FD]
Line_18 $$ buffer = reader.readLine() --> Line_8 $$ while (buffer != null) [FD]
Line_18 $$ buffer = reader.readLine() --> Line_9 $$ if (buffer.contains("__FORM_TOKEN")) [FD]
Line_18 $$ buffer = reader.readLine() --> Line_11 $$ Matcher matcher = pattern.matcher(buffer) [FD]
Line_18 $$ buffer = reader.readLine() --> Line_16 $$ strFromToken = buffer.substring(von, bis) [FD]
