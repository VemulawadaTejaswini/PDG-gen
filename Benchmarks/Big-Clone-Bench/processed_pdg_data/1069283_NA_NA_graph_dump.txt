Line_2 $$ private void getPage(final String path, final String dataToSend, final GetPageCallback callback) --> Line_3 $$ runner.add(new Runnable() [CD]
Line_3 $$ runner.add(new Runnable() --> Line_5 $$ String url = "http://" + resources.getString(R.string.host) + path [CD]
Line_3 $$ runner.add(new Runnable() --> Line_6 $$ HttpUriRequest req [CD]
Line_3 $$ runner.add(new Runnable() --> Line_7 $$ if (dataToSend == null) [CD]
Line_2 $$ private void getPage(final String path, final String dataToSend, final GetPageCallback callback) --> Line_7 $$ if (dataToSend == null) [FD]
Line_7 $$ if (dataToSend == null) --> Line_8 $$ req = new HttpGet(url) [CD]
Line_6 $$ HttpUriRequest req --> Line_8 $$ req = new HttpGet(url) [FD]
Line_7 $$ if (dataToSend == null) --> Line_10 $$ req = new HttpPost(url) [CD]
Line_6 $$ HttpUriRequest req --> Line_10 $$ req = new HttpPost(url) [FD]
Line_8 $$ req = new HttpGet(url) --> Line_10 $$ req = new HttpPost(url) [FD]
Line_3 $$ runner.add(new Runnable() --> Line_17 $$ req.addHeader("Cookie", getAuthCookie(false)) [CD]
Line_6 $$ HttpUriRequest req --> Line_17 $$ req.addHeader("Cookie", getAuthCookie(false)) [FD]
Line_8 $$ req = new HttpGet(url) --> Line_17 $$ req.addHeader("Cookie", getAuthCookie(false)) [FD]
Line_10 $$ req = new HttpPost(url) --> Line_17 $$ req.addHeader("Cookie", getAuthCookie(false)) [FD]
Line_6 $$ HttpUriRequest req --> Line_19 $$ HttpResponse response = httpclient.execute(req) [FD]
Line_8 $$ req = new HttpGet(url) --> Line_19 $$ HttpResponse response = httpclient.execute(req) [FD]
Line_10 $$ req = new HttpPost(url) --> Line_19 $$ HttpResponse response = httpclient.execute(req) [FD]
Line_19 $$ HttpResponse response = httpclient.execute(req) --> Line_20 $$ Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, "Response status is '" + response.getStatusLine() + "'.") [FD]
Line_19 $$ HttpResponse response = httpclient.execute(req) --> Line_21 $$ HttpEntity entity = response.getEntity() [FD]
Line_21 $$ HttpEntity entity = response.getEntity() --> Line_22 $$ if (entity != null) [FD]
Line_22 $$ if (entity != null) --> Line_23 $$ InputStream instream = entity.getContent() [CD]
Line_21 $$ HttpEntity entity = response.getEntity() --> Line_23 $$ InputStream instream = entity.getContent() [FD]
Line_27 $$ String line --> Line_29 $$ while ((line = in.readLine()) != null) [FD]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(instream)) --> Line_29 $$ while ((line = in.readLine()) != null) [FD]
Line_29 $$ while ((line = in.readLine()) != null) --> Line_30 $$ b.append(line) [CD]
Line_29 $$ while ((line = in.readLine()) != null) --> Line_30 $$ b.append(line) [FD]
Line_26 $$ StringBuilder b = new StringBuilder() --> Line_30 $$ b.append(line) [FD]
Line_27 $$ String line --> Line_30 $$ b.append(line) [FD]
Line_29 $$ while ((line = in.readLine()) != null) --> Line_31 $$ if (first) [CD]
Line_31 $$ if (first) --> Line_32 $$ first = false [CD]
Line_28 $$ boolean first = true --> Line_32 $$ first = false [FD]
Line_31 $$ if (first) --> Line_34 $$ b.append("\r\n") [CD]
Line_26 $$ StringBuilder b = new StringBuilder() --> Line_34 $$ b.append("\r\n") [FD]
Line_25 $$ BufferedReader in = new BufferedReader(new InputStreamReader(instream)) --> Line_37 $$ in.close() [FD]
Line_2 $$ private void getPage(final String path, final String dataToSend, final GetPageCallback callback) --> Line_38 $$ callback.success(b.toString()) [FD]
Line_26 $$ StringBuilder b = new StringBuilder() --> Line_38 $$ callback.success(b.toString()) [FD]
Line_23 $$ InputStream instream = entity.getContent() --> Line_43 $$ instream.close() [FD]
Line_3 $$ runner.add(new Runnable() --> Line_51 $$ Logger.getLogger(JSBridge.class.getName()).log(Level.INFO, "Calling error from JSBridge.getPage because of previous errors.") [CD]
Line_3 $$ runner.add(new Runnable() --> Line_52 $$ callback.error() [CD]
Line_2 $$ private void getPage(final String path, final String dataToSend, final GetPageCallback callback) --> Line_52 $$ callback.error() [FD]
