Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_3 $$ IFile targetFile = project.getFile(target) [CD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_3 $$ IFile targetFile = project.getFile(target) [FD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_4 $$ URL url = bundle.getEntry(resource) [CD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_4 $$ URL url = bundle.getEntry(resource) [FD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_5 $$ InputStream is = null [CD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_6 $$ ByteArrayInputStream bais = null [CD]
Line_5 $$ InputStream is = null --> Line_8 $$ is = FileLocator.toFileURL(url).openStream() [FD]
Line_5 $$ InputStream is = null --> Line_9 $$ int len = is.available() [FD]
Line_8 $$ is = FileLocator.toFileURL(url).openStream() --> Line_9 $$ int len = is.available() [FD]
Line_5 $$ InputStream is = null --> Line_11 $$ is.read(buf) [FD]
Line_8 $$ is = FileLocator.toFileURL(url).openStream() --> Line_11 $$ is.read(buf) [FD]
Line_10 $$ byte[] buf = new byte[len] --> Line_11 $$ is.read(buf) [FD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_13 $$ for (String toRepl : replacement.keySet()) [FD]
Line_12 $$ String str = new String(buf, charset) --> Line_14 $$ str = str.replaceAll(toRepl, replacement.get(toRepl)) [FD]
Line_13 $$ for (String toRepl : replacement.keySet()) --> Line_14 $$ str = str.replaceAll(toRepl, replacement.get(toRepl)) [FD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_14 $$ str = str.replaceAll(toRepl, replacement.get(toRepl)) [FD]
Line_6 $$ ByteArrayInputStream bais = null --> Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) [FD]
Line_12 $$ String str = new String(buf, charset) --> Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) [FD]
Line_14 $$ str = str.replaceAll(toRepl, replacement.get(toRepl)) --> Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) [FD]
Line_3 $$ IFile targetFile = project.getFile(target) --> Line_17 $$ if (targetFile.exists()) [FD]
Line_17 $$ if (targetFile.exists()) --> Line_18 $$ targetFile.setContents(bais, true, false, monitor) [CD]
Line_3 $$ IFile targetFile = project.getFile(target) --> Line_18 $$ targetFile.setContents(bais, true, false, monitor) [FD]
Line_6 $$ ByteArrayInputStream bais = null --> Line_18 $$ targetFile.setContents(bais, true, false, monitor) [FD]
Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) --> Line_18 $$ targetFile.setContents(bais, true, false, monitor) [FD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_18 $$ targetFile.setContents(bais, true, false, monitor) [FD]
Line_17 $$ if (targetFile.exists()) --> Line_20 $$ targetFile.create(bais, true, monitor) [CD]
Line_3 $$ IFile targetFile = project.getFile(target) --> Line_20 $$ targetFile.create(bais, true, monitor) [FD]
Line_6 $$ ByteArrayInputStream bais = null --> Line_20 $$ targetFile.create(bais, true, monitor) [FD]
Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) --> Line_20 $$ targetFile.create(bais, true, monitor) [FD]
Line_2 $$ private void resourceCopy(String resource, IProject project, String target, IProgressMonitor monitor, Map<String, String> replacement, String charset) throws URISyntaxException, IOException --> Line_20 $$ targetFile.create(bais, true, monitor) [FD]
Line_6 $$ ByteArrayInputStream bais = null --> Line_25 $$ if (bais != null) [FD]
Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) --> Line_25 $$ if (bais != null) [FD]
Line_25 $$ if (bais != null) --> Line_26 $$ bais.close() [CD]
Line_6 $$ ByteArrayInputStream bais = null --> Line_26 $$ bais.close() [FD]
Line_16 $$ bais = new ByteArrayInputStream(str.getBytes("UTF-8")) --> Line_26 $$ bais.close() [FD]
Line_5 $$ InputStream is = null --> Line_28 $$ if (is != null) [FD]
Line_8 $$ is = FileLocator.toFileURL(url).openStream() --> Line_28 $$ if (is != null) [FD]
Line_28 $$ if (is != null) --> Line_29 $$ is.close() [CD]
Line_5 $$ InputStream is = null --> Line_29 $$ is.close() [FD]
Line_8 $$ is = FileLocator.toFileURL(url).openStream() --> Line_29 $$ is.close() [FD]
