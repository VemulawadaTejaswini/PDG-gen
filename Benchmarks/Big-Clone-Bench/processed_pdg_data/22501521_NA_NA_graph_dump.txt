Line_2 $$ public String sendRequest(HTTPHandler.RequestData requestData) throws HTTPHandlerException --> Line_4 $$ final String urlString = requestData.getURLString() [FD]
Line_2 $$ public String sendRequest(HTTPHandler.RequestData requestData) throws HTTPHandlerException --> Line_6 $$ final String postString = requestData.getPostString() [FD]
Line_5 $$ final URL url = new URL(urlString) --> Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public String sendRequest(HTTPHandler.RequestData requestData) throws HTTPHandlerException --> Line_9 $$ final Iterator headersIterator = requestData.getHeaders().entrySet().iterator() [FD]
Line_9 $$ final Iterator headersIterator = requestData.getHeaders().entrySet().iterator() --> Line_10 $$ while (headersIterator.hasNext()) [FD]
Line_10 $$ while (headersIterator.hasNext()) --> Line_11 $$ final Map.Entry entry = (Map.Entry) headersIterator.next() [CD]
Line_9 $$ final Iterator headersIterator = requestData.getHeaders().entrySet().iterator() --> Line_11 $$ final Map.Entry entry = (Map.Entry) headersIterator.next() [FD]
Line_10 $$ while (headersIterator.hasNext()) --> Line_12 $$ connection.setRequestProperty((String) entry.getKey(), (String) entry.getValue()) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_12 $$ connection.setRequestProperty((String) entry.getKey(), (String) entry.getValue()) [FD]
Line_2 $$ public String sendRequest(HTTPHandler.RequestData requestData) throws HTTPHandlerException --> Line_14 $$ final AuthorizationData authorizationData = requestData.getAuthorizationData() [FD]
Line_15 $$ if (authorizationData != null && authorizationData instanceof HTTPHandler.BasicAuthorizationData) --> Line_16 $$ final HTTPHandler.BasicAuthorizationData basicAuthorizationData = (HTTPHandler.BasicAuthorizationData) authorizationData [CD]
Line_15 $$ if (authorizationData != null && authorizationData instanceof HTTPHandler.BasicAuthorizationData) --> Line_17 $$ connection.setRequestProperty("Authorization", "Basic " + Codecs.base64Encode(basicAuthorizationData.getUser() + ":" + basicAuthorizationData.getPassword())) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_17 $$ connection.setRequestProperty("Authorization", "Basic " + Codecs.base64Encode(basicAuthorizationData.getUser() + ":" + basicAuthorizationData.getPassword())) [FD]
Line_16 $$ final HTTPHandler.BasicAuthorizationData basicAuthorizationData = (HTTPHandler.BasicAuthorizationData) authorizationData --> Line_17 $$ connection.setRequestProperty("Authorization", "Basic " + Codecs.base64Encode(basicAuthorizationData.getUser() + ":" + basicAuthorizationData.getPassword())) [FD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_19 $$ connection.setInstanceFollowRedirects(m_followRedirects) [FD]
Line_20 $$ if (m_useCookies) --> Line_21 $$ final String cookieString = m_cookieHandler.getCookieString(url, m_useCookiesVersionString) [CD]
Line_5 $$ final URL url = new URL(urlString) --> Line_21 $$ final String cookieString = m_cookieHandler.getCookieString(url, m_useCookiesVersionString) [FD]
Line_20 $$ if (m_useCookies) --> Line_22 $$ if (cookieString != null) [CD]
Line_21 $$ final String cookieString = m_cookieHandler.getCookieString(url, m_useCookiesVersionString) --> Line_22 $$ if (cookieString != null) [FD]
Line_22 $$ if (cookieString != null) --> Line_23 $$ connection.setRequestProperty("Cookie", cookieString) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_23 $$ connection.setRequestProperty("Cookie", cookieString) [FD]
Line_21 $$ final String cookieString = m_cookieHandler.getCookieString(url, m_useCookiesVersionString) --> Line_23 $$ connection.setRequestProperty("Cookie", cookieString) [FD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_26 $$ connection.setUseCaches(false) [FD]
Line_6 $$ final String postString = requestData.getPostString() --> Line_27 $$ if (postString != null) [FD]
Line_27 $$ if (postString != null) --> Line_28 $$ connection.setRequestMethod("POST") [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_28 $$ connection.setRequestMethod("POST") [FD]
Line_27 $$ if (postString != null) --> Line_29 $$ connection.setDoOutput(true) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_29 $$ connection.setDoOutput(true) [FD]
Line_27 $$ if (postString != null) --> Line_30 $$ final BufferedOutputStream bos = new BufferedOutputStream(connection.getOutputStream()) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_30 $$ final BufferedOutputStream bos = new BufferedOutputStream(connection.getOutputStream()) [FD]
Line_27 $$ if (postString != null) --> Line_31 $$ final PrintWriter out = new PrintWriter(bos) [CD]
Line_27 $$ if (postString != null) --> Line_32 $$ out.write(postString) [CD]
Line_31 $$ final PrintWriter out = new PrintWriter(bos) --> Line_32 $$ out.write(postString) [FD]
Line_6 $$ final String postString = requestData.getPostString() --> Line_32 $$ out.write(postString) [FD]
Line_27 $$ if (postString != null) --> Line_33 $$ out.close() [CD]
Line_31 $$ final PrintWriter out = new PrintWriter(bos) --> Line_33 $$ out.close() [FD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_35 $$ connection.connect() [FD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_36 $$ final int responseCode = connection.getResponseCode() [FD]
Line_37 $$ if (m_timeToFirstByteIndex != null) --> Line_38 $$ m_pluginThreadContext.getCurrentTestStatistics().addValue(m_timeToFirstByteIndex, System.currentTimeMillis() - m_pluginThreadContext.getStartTime()) [CD]
Line_40 $$ if (m_useCookies) --> Line_41 $$ int headerIndex = 1 [CD]
Line_40 $$ if (m_useCookies) --> Line_42 $$ String headerKey = null [CD]
Line_40 $$ if (m_useCookies) --> Line_43 $$ String headerValue = connection.getHeaderField(headerIndex) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_43 $$ String headerValue = connection.getHeaderField(headerIndex) [FD]
Line_41 $$ int headerIndex = 1 --> Line_43 $$ String headerValue = connection.getHeaderField(headerIndex) [FD]
Line_40 $$ if (m_useCookies) --> Line_44 $$ while (headerValue != null) [CD]
Line_43 $$ String headerValue = connection.getHeaderField(headerIndex) --> Line_44 $$ while (headerValue != null) [FD]
Line_44 $$ while (headerValue != null) --> Line_45 $$ headerKey = connection.getHeaderFieldKey(headerIndex) [CD]
Line_42 $$ String headerKey = null --> Line_45 $$ headerKey = connection.getHeaderFieldKey(headerIndex) [FD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_45 $$ headerKey = connection.getHeaderFieldKey(headerIndex) [FD]
Line_41 $$ int headerIndex = 1 --> Line_45 $$ headerKey = connection.getHeaderFieldKey(headerIndex) [FD]
Line_44 $$ while (headerValue != null) --> Line_46 $$ if (headerKey != null && "Set-Cookie".equals(headerKey)) [CD]
Line_45 $$ headerKey = connection.getHeaderFieldKey(headerIndex) --> Line_46 $$ if (headerKey != null && "Set-Cookie".equals(headerKey)) [FD]
Line_42 $$ String headerKey = null --> Line_46 $$ if (headerKey != null && "Set-Cookie".equals(headerKey)) [FD]
Line_46 $$ if (headerKey != null && "Set-Cookie".equals(headerKey)) --> Line_47 $$ m_cookieHandler.setCookies(headerValue, url) [CD]
Line_43 $$ String headerValue = connection.getHeaderField(headerIndex) --> Line_47 $$ m_cookieHandler.setCookies(headerValue, url) [FD]
Line_5 $$ final URL url = new URL(urlString) --> Line_47 $$ m_cookieHandler.setCookies(headerValue, url) [FD]
Line_44 $$ while (headerValue != null) --> Line_49 $$ headerValue = connection.getHeaderField(++headerIndex) [CD]
Line_43 $$ String headerValue = connection.getHeaderField(headerIndex) --> Line_49 $$ headerValue = connection.getHeaderField(++headerIndex) [FD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_49 $$ headerValue = connection.getHeaderField(++headerIndex) [FD]
Line_41 $$ int headerIndex = 1 --> Line_49 $$ headerValue = connection.getHeaderField(++headerIndex) [FD]
Line_36 $$ final int responseCode = connection.getResponseCode() --> Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) [FD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_53 $$ final InputStreamReader isr = new InputStreamReader(connection.getInputStream()) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_53 $$ final InputStreamReader isr = new InputStreamReader(connection.getInputStream()) [FD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_54 $$ final BufferedReader in = new BufferedReader(isr) [CD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_55 $$ final StringWriter stringWriter = new StringWriter(512) [CD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_56 $$ char[] buffer = new char[512] [CD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_57 $$ int charsRead = 0 [CD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_58 $$ if (!m_dontReadBody) [CD]
Line_58 $$ if (!m_dontReadBody) --> Line_59 $$ while ((charsRead = in.read(buffer, 0, buffer.length)) > 0) [CD]
Line_57 $$ int charsRead = 0 --> Line_59 $$ while ((charsRead = in.read(buffer, 0, buffer.length)) > 0) [FD]
Line_54 $$ final BufferedReader in = new BufferedReader(isr) --> Line_59 $$ while ((charsRead = in.read(buffer, 0, buffer.length)) > 0) [FD]
Line_56 $$ char[] buffer = new char[512] --> Line_59 $$ while ((charsRead = in.read(buffer, 0, buffer.length)) > 0) [FD]
Line_59 $$ while ((charsRead = in.read(buffer, 0, buffer.length)) > 0) --> Line_60 $$ stringWriter.write(buffer, 0, charsRead) [CD]
Line_59 $$ while ((charsRead = in.read(buffer, 0, buffer.length)) > 0) --> Line_60 $$ stringWriter.write(buffer, 0, charsRead) [FD]
Line_55 $$ final StringWriter stringWriter = new StringWriter(512) --> Line_60 $$ stringWriter.write(buffer, 0, charsRead) [FD]
Line_56 $$ char[] buffer = new char[512] --> Line_60 $$ stringWriter.write(buffer, 0, charsRead) [FD]
Line_57 $$ int charsRead = 0 --> Line_60 $$ stringWriter.write(buffer, 0, charsRead) [FD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_63 $$ in.close() [CD]
Line_54 $$ final BufferedReader in = new BufferedReader(isr) --> Line_63 $$ in.close() [FD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_64 $$ stringWriter.close() [CD]
Line_55 $$ final StringWriter stringWriter = new StringWriter(512) --> Line_64 $$ stringWriter.close() [FD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_65 $$ m_pluginThreadContext.logMessage(urlString + " OK") [CD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_66 $$ return stringWriter.toString() [CD]
Line_55 $$ final StringWriter stringWriter = new StringWriter(512) --> Line_66 $$ return stringWriter.toString() [FD]
Line_52 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_67 $$ if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED) [CD]
Line_36 $$ final int responseCode = connection.getResponseCode() --> Line_67 $$ if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED) [FD]
Line_67 $$ if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED) --> Line_68 $$ m_pluginThreadContext.logMessage(urlString + " was not modified") [CD]
Line_67 $$ if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED) --> Line_69 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == 307) [CD]
Line_69 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == 307) --> Line_70 $$ m_pluginThreadContext.logMessage(urlString + " returned a redirect (" + responseCode + "). " + "Ensure the next URL is " + connection.getHeaderField("Location")) [CD]
Line_8 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection() --> Line_70 $$ m_pluginThreadContext.logMessage(urlString + " returned a redirect (" + responseCode + "). " + "Ensure the next URL is " + connection.getHeaderField("Location")) [FD]
Line_69 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == 307) --> Line_71 $$ return null [CD]
Line_69 $$ if (responseCode == HttpURLConnection.HTTP_MOVED_PERM || responseCode == HttpURLConnection.HTTP_MOVED_TEMP || responseCode == 307) --> Line_73 $$ m_pluginThreadContext.logError("Unknown response code: " + responseCode + " for " + urlString) [CD]
Line_49 $$ headerValue = connection.getHeaderField(++headerIndex) --> Line_44 $$ while (headerValue != null) [FD]
Line_49 $$ headerValue = connection.getHeaderField(++headerIndex) --> Line_47 $$ m_cookieHandler.setCookies(headerValue, url) [FD]
