Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_3 $$ final XTextDocument xTextDocument = (XTextDocument) this.docController.getXInterface(XTextDocument.class, this.docController.getXFrame().getController().getModel()) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_4 $$ final XMultiServiceFactory xMultiServiceFactory = (XMultiServiceFactory) this.docController.getXInterface(XMultiServiceFactory.class, xTextDocument) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_5 $$ final XText xText = xTextDocument.getText() [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_6 $$ final XTextViewCursor xTextViewCursor = ((XTextViewCursorSupplier) this.docController.getXInterface(XTextViewCursorSupplier.class, this.docController.getXFrame().getController())).getViewCursor() [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_7 $$ final XTextRange xTextRange = xTextViewCursor.getStart() [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) [FD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_9 $$ final XPropertySet xQuoteProps = (XPropertySet) this.docController.getXInterface(XPropertySet.class, xTextViewCursor) [CD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_10 $$ if (this.docController.getTemplateController().isIndentation()) [CD]
Line_10 $$ if (this.docController.getTemplateController().isIndentation()) --> Line_11 $$ xText.insertControlCharacter(xTextViewCursor, ControlCharacter.PARAGRAPH_BREAK, false) [CD]
Line_5 $$ final XText xText = xTextDocument.getText() --> Line_11 $$ xText.insertControlCharacter(xTextViewCursor, ControlCharacter.PARAGRAPH_BREAK, false) [FD]
Line_10 $$ if (this.docController.getTemplateController().isIndentation()) --> Line_12 $$ xQuoteProps.setPropertyValue("ParaStyleName", new String("Quotations")) [CD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_14 $$ xQuoteProps.setPropertyValue("CharStyleName", new String("Citation")) [CD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_15 $$ final Object aBookmark = xMultiServiceFactory.createInstance("com.sun.star.text.Bookmark") [CD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_16 $$ this.sourceUtils.setNameToObject(aBookmark, this.docController.getLanguageController().__("Quote: ") + aSource.getShortinfo()) [CD]
Line_15 $$ final Object aBookmark = xMultiServiceFactory.createInstance("com.sun.star.text.Bookmark") --> Line_16 $$ this.sourceUtils.setNameToObject(aBookmark, this.docController.getLanguageController().__("Quote: ") + aSource.getShortinfo()) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_16 $$ this.sourceUtils.setNameToObject(aBookmark, this.docController.getLanguageController().__("Quote: ") + aSource.getShortinfo()) [FD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_17 $$ final XTextContent xTextContent = (XTextContent) this.docController.getXInterface(XTextContent.class, aBookmark) [CD]
Line_15 $$ final Object aBookmark = xMultiServiceFactory.createInstance("com.sun.star.text.Bookmark") --> Line_17 $$ final XTextContent xTextContent = (XTextContent) this.docController.getXInterface(XTextContent.class, aBookmark) [FD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_18 $$ xText.insertTextContent(xTextRange, xTextContent, false) [CD]
Line_5 $$ final XText xText = xTextDocument.getText() --> Line_18 $$ xText.insertTextContent(xTextRange, xTextContent, false) [FD]
Line_7 $$ final XTextRange xTextRange = xTextViewCursor.getStart() --> Line_18 $$ xText.insertTextContent(xTextRange, xTextContent, false) [FD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_19 $$ this.sourceUtils.insertBibliographyEntry(xMultiServiceFactory, xTextRange, aSource, sText) [CD]
Line_7 $$ final XTextRange xTextRange = xTextViewCursor.getStart() --> Line_19 $$ this.sourceUtils.insertBibliographyEntry(xMultiServiceFactory, xTextRange, aSource, sText) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_19 $$ this.sourceUtils.insertBibliographyEntry(xMultiServiceFactory, xTextRange, aSource, sText) [FD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_20 $$ if (this.docController.getTemplateController().isIndentation()) [CD]
Line_20 $$ if (this.docController.getTemplateController().isIndentation()) --> Line_21 $$ xText.insertControlCharacter(xTextViewCursor, ControlCharacter.PARAGRAPH_BREAK, false) [CD]
Line_5 $$ final XText xText = xTextDocument.getText() --> Line_21 $$ xText.insertControlCharacter(xTextViewCursor, ControlCharacter.PARAGRAPH_BREAK, false) [FD]
Line_20 $$ if (this.docController.getTemplateController().isIndentation()) --> Line_22 $$ xQuoteProps.setPropertyValue("ParaStyleName", new String(this.docController.getLanguageController().__("Default"))) [CD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_24 $$ xQuoteProps.setPropertyValue("CharStyleName", new String(this.docController.getLanguageController().__("Default"))) [CD]
Line_8 $$ if (aSource.getSourceType() == SourceType.QUOTE || aSource.getSourceType() == SourceType.WEBQUOTE || aSource.getSourceType() == SourceType.WEBQUOTE) --> Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_26 $$ xText.insertControlCharacter(xTextRange, ControlCharacter.PARAGRAPH_BREAK, false) [CD]
Line_5 $$ final XText xText = xTextDocument.getText() --> Line_26 $$ xText.insertControlCharacter(xTextRange, ControlCharacter.PARAGRAPH_BREAK, false) [FD]
Line_7 $$ final XTextRange xTextRange = xTextViewCursor.getStart() --> Line_26 $$ xText.insertControlCharacter(xTextRange, ControlCharacter.PARAGRAPH_BREAK, false) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_28 $$ xText.insertTextContent(xTextRange, xFrame, false) [CD]
Line_5 $$ final XText xText = xTextDocument.getText() --> Line_28 $$ xText.insertTextContent(xTextRange, xFrame, false) [FD]
Line_7 $$ final XTextRange xTextRange = xTextViewCursor.getStart() --> Line_28 $$ xText.insertTextContent(xTextRange, xFrame, false) [FD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_28 $$ xText.insertTextContent(xTextRange, xFrame, false) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_29 $$ final XText xFrameText = xFrame.getText() [CD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_29 $$ final XText xFrameText = xFrame.getText() [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_30 $$ final XTextCursor xFrameCursor = xFrameText.createTextCursor() [CD]
Line_29 $$ final XText xFrameText = xFrame.getText() --> Line_30 $$ final XTextCursor xFrameCursor = xFrameText.createTextCursor() [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_31 $$ final Size aNewSize = new Size() [CD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_32 $$ XPropertySet xBaseFrameProps = null [CD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_33 $$ final Size aPageTextAreaSize = this.sourceUtils.getPageTextAreaSize(xTextDocument, xTextViewCursor) [CD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_34 $$ if (aSource.getSourceType() == SourceType.IMAGE) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_34 $$ if (aSource.getSourceType() == SourceType.IMAGE) [FD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_36 $$ this.sourceUtils.setNameToObject(xFrame, this.docController.getLanguageController().__("Caption illustration: ") + aSource.getShortinfo()) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_36 $$ this.sourceUtils.setNameToObject(xFrame, this.docController.getLanguageController().__("Caption illustration: ") + aSource.getShortinfo()) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_39 $$ this.sourceUtils.setNameToObject(xImage, this.docController.getLanguageController().__("Illustration: ") + aSource.getShortinfo()) [FD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_41 $$ xBaseFrameProps = (XPropertySet) this.docController.getXInterface(XPropertySet.class, xImage) [FD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_42 $$ xBaseFrameProps.setPropertyValue("AnchorType", com.sun.star.text.TextContentAnchorType.AT_PARAGRAPH) [FD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_43 $$ xBaseFrameProps.setPropertyValue("GraphicURL", graphicURL) [FD]
Line_40 $$ final String graphicURL = this.docController.getPathUtils().getFileURLFromSystemPath(((Image) aSource).getFile().getPath(), ((Image) aSource).getFile().getPath()) --> Line_43 $$ xBaseFrameProps.setPropertyValue("GraphicURL", graphicURL) [FD]
Line_44 $$ final MessageDigest md = MessageDigest.getInstance("MD5") --> Line_45 $$ md.update(graphicURL.getBytes(), 0, graphicURL.length()) [FD]
Line_40 $$ final String graphicURL = this.docController.getPathUtils().getFileURLFromSystemPath(((Image) aSource).getFile().getPath(), ((Image) aSource).getFile().getPath()) --> Line_45 $$ md.update(graphicURL.getBytes(), 0, graphicURL.length()) [FD]
Line_44 $$ final MessageDigest md = MessageDigest.getInstance("MD5") --> Line_46 $$ final String internalName = new BigInteger(1, md.digest()).toString(16) [FD]
Line_46 $$ final String internalName = new BigInteger(1, md.digest()).toString(16) --> Line_47 $$ xBitmapContainer.insertByName(internalName, graphicURL) [FD]
Line_40 $$ final String graphicURL = this.docController.getPathUtils().getFileURLFromSystemPath(((Image) aSource).getFile().getPath(), ((Image) aSource).getFile().getPath()) --> Line_47 $$ xBitmapContainer.insertByName(internalName, graphicURL) [FD]
Line_46 $$ final String internalName = new BigInteger(1, md.digest()).toString(16) --> Line_48 $$ final String internalURL = (String) (xBitmapContainer.getByName(internalName)) [FD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_49 $$ xBaseFrameProps.setPropertyValue("GraphicURL", internalURL) [FD]
Line_48 $$ final String internalURL = (String) (xBitmapContainer.getByName(internalName)) --> Line_49 $$ xBaseFrameProps.setPropertyValue("GraphicURL", internalURL) [FD]
Line_52 $$ if (aUsedAreaSize.Width >= aPageTextAreaSize.Width) --> Line_53 $$ aNewSize.Width = aPageTextAreaSize.Width [CD]
Line_52 $$ if (aUsedAreaSize.Width >= aPageTextAreaSize.Width) --> Line_54 $$ aNewSize.Height = (int) (aPageTextAreaSize.Width * imageRatio) [CD]
Line_52 $$ if (aUsedAreaSize.Width >= aPageTextAreaSize.Width) --> Line_56 $$ aNewSize.Width = aUsedAreaSize.Width [CD]
Line_52 $$ if (aUsedAreaSize.Width >= aPageTextAreaSize.Width) --> Line_57 $$ aNewSize.Height = aUsedAreaSize.Height [CD]
Line_29 $$ final XText xFrameText = xFrame.getText() --> Line_59 $$ xFrameText.insertTextContent(xFrameCursor, xImage, false) [FD]
Line_30 $$ final XTextCursor xFrameCursor = xFrameText.createTextCursor() --> Line_59 $$ xFrameText.insertTextContent(xFrameCursor, xImage, false) [FD]
Line_46 $$ final String internalName = new BigInteger(1, md.digest()).toString(16) --> Line_60 $$ xBitmapContainer.removeByName(internalName) [FD]
Line_34 $$ if (aSource.getSourceType() == SourceType.IMAGE) --> Line_64 $$ this.sourceUtils.insertCaption(xFrame, aSource, this.docController.getLanguageController().__("Illustration"), xMultiServiceFactory) [CD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_64 $$ this.sourceUtils.insertCaption(xFrame, aSource, this.docController.getLanguageController().__("Illustration"), xMultiServiceFactory) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_64 $$ this.sourceUtils.insertCaption(xFrame, aSource, this.docController.getLanguageController().__("Illustration"), xMultiServiceFactory) [FD]
Line_34 $$ if (aSource.getSourceType() == SourceType.IMAGE) --> Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_66 $$ this.sourceUtils.setNameToObject(xFrame, this.docController.getLanguageController().__("Caption table: ") + aSource.getShortinfo()) [CD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_66 $$ this.sourceUtils.setNameToObject(xFrame, this.docController.getLanguageController().__("Caption table: ") + aSource.getShortinfo()) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_66 $$ this.sourceUtils.setNameToObject(xFrame, this.docController.getLanguageController().__("Caption table: ") + aSource.getShortinfo()) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) [CD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_68 $$ this.sourceUtils.setNameToObject(xBaseFrameProps, this.docController.getLanguageController().__("Table: ") + aSource.getShortinfo()) [CD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_68 $$ this.sourceUtils.setNameToObject(xBaseFrameProps, this.docController.getLanguageController().__("Table: ") + aSource.getShortinfo()) [FD]
Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) --> Line_68 $$ this.sourceUtils.setNameToObject(xBaseFrameProps, this.docController.getLanguageController().__("Table: ") + aSource.getShortinfo()) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_68 $$ this.sourceUtils.setNameToObject(xBaseFrameProps, this.docController.getLanguageController().__("Table: ") + aSource.getShortinfo()) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_69 $$ xFrameText.insertTextContent(xFrameCursor, (XTextContent) this.docController.getXInterface(XTextContent.class, xBaseFrameProps), false) [CD]
Line_29 $$ final XText xFrameText = xFrame.getText() --> Line_69 $$ xFrameText.insertTextContent(xFrameCursor, (XTextContent) this.docController.getXInterface(XTextContent.class, xBaseFrameProps), false) [FD]
Line_30 $$ final XTextCursor xFrameCursor = xFrameText.createTextCursor() --> Line_69 $$ xFrameText.insertTextContent(xFrameCursor, (XTextContent) this.docController.getXInterface(XTextContent.class, xBaseFrameProps), false) [FD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_69 $$ xFrameText.insertTextContent(xFrameCursor, (XTextContent) this.docController.getXInterface(XTextContent.class, xBaseFrameProps), false) [FD]
Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) --> Line_69 $$ xFrameText.insertTextContent(xFrameCursor, (XTextContent) this.docController.getXInterface(XTextContent.class, xBaseFrameProps), false) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_70 $$ final XEmbeddedObjectSupplier2 xEmbeddedObjectSupplier = (XEmbeddedObjectSupplier2) this.docController.getXInterface(XEmbeddedObjectSupplier2.class, xBaseFrameProps) [CD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_70 $$ final XEmbeddedObjectSupplier2 xEmbeddedObjectSupplier = (XEmbeddedObjectSupplier2) this.docController.getXInterface(XEmbeddedObjectSupplier2.class, xBaseFrameProps) [FD]
Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) --> Line_70 $$ final XEmbeddedObjectSupplier2 xEmbeddedObjectSupplier = (XEmbeddedObjectSupplier2) this.docController.getXInterface(XEmbeddedObjectSupplier2.class, xBaseFrameProps) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_71 $$ final XEmbeddedObject xEmbeddedObject = xEmbeddedObjectSupplier.getExtendedControlOverEmbeddedObject() [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_72 $$ long nAspect = xEmbeddedObjectSupplier.getAspect() [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_73 $$ final Size aVisualAreaSize = xEmbeddedObject.getVisualAreaSize(nAspect) [CD]
Line_71 $$ final XEmbeddedObject xEmbeddedObject = xEmbeddedObjectSupplier.getExtendedControlOverEmbeddedObject() --> Line_73 $$ final Size aVisualAreaSize = xEmbeddedObject.getVisualAreaSize(nAspect) [FD]
Line_72 $$ long nAspect = xEmbeddedObjectSupplier.getAspect() --> Line_73 $$ final Size aVisualAreaSize = xEmbeddedObject.getVisualAreaSize(nAspect) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_74 $$ final XComponent xComponent = xEmbeddedObjectSupplier.getEmbeddedObject() [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_75 $$ XSpreadsheets xSpreadsheets = ((XSpreadsheetDocument) this.docController.getXInterface(XSpreadsheetDocument.class, xComponent)).getSheets() [CD]
Line_74 $$ final XComponent xComponent = xEmbeddedObjectSupplier.getEmbeddedObject() --> Line_75 $$ XSpreadsheets xSpreadsheets = ((XSpreadsheetDocument) this.docController.getXInterface(XSpreadsheetDocument.class, xComponent)).getSheets() [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_76 $$ final XIndexAccess xIndexAccess = (XIndexAccess) this.docController.getXInterface(XIndexAccess.class, xSpreadsheets) [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_77 $$ final XSpreadsheet xSpreadsheet = (XSpreadsheet) this.docController.getXInterface(XSpreadsheet.class, xIndexAccess.getByIndex(0)) [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_78 $$ final XSheetLinkable xSheetLinkable = (XSheetLinkable) this.docController.getXInterface(XSheetLinkable.class, xSpreadsheet) [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_79 $$ xSheetLinkable.link(this.docController.getPathUtils().getFileURLFromSystemPath(((Table) aSource).getFile().getPath(), ((Table) aSource).getFile().getPath()), "", "", "", com.sun.star.sheet.SheetLinkMode.NORMAL) [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_80 $$ final CellRangeAddress aUsedArea = this.sourceUtils.getUsedArea(xSpreadsheet) [CD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_81 $$ final Size aUsedAreaSize = this.sourceUtils.calcCellRangeSize(xSpreadsheets, aUsedArea) [CD]
Line_80 $$ final CellRangeAddress aUsedArea = this.sourceUtils.getUsedArea(xSpreadsheet) --> Line_81 $$ final Size aUsedAreaSize = this.sourceUtils.calcCellRangeSize(xSpreadsheets, aUsedArea) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_82 $$ if ((aUsedAreaSize.Width != aVisualAreaSize.Width) || (aUsedAreaSize.Height != aVisualAreaSize.Height)) [CD]
Line_82 $$ if ((aUsedAreaSize.Width != aVisualAreaSize.Width) || (aUsedAreaSize.Height != aVisualAreaSize.Height)) --> Line_83 $$ aNewSize.Height = (aUsedAreaSize.Height > aPageTextAreaSize.Height) ? aPageTextAreaSize.Height : aUsedAreaSize.Height [CD]
Line_82 $$ if ((aUsedAreaSize.Width != aVisualAreaSize.Width) || (aUsedAreaSize.Height != aVisualAreaSize.Height)) --> Line_84 $$ aNewSize.Width = (aUsedAreaSize.Width > aPageTextAreaSize.Width) ? aPageTextAreaSize.Width : aUsedAreaSize.Width [CD]
Line_82 $$ if ((aUsedAreaSize.Width != aVisualAreaSize.Width) || (aUsedAreaSize.Height != aVisualAreaSize.Height)) --> Line_85 $$ xEmbeddedObject.setVisualAreaSize(nAspect, aNewSize) [CD]
Line_71 $$ final XEmbeddedObject xEmbeddedObject = xEmbeddedObjectSupplier.getExtendedControlOverEmbeddedObject() --> Line_85 $$ xEmbeddedObject.setVisualAreaSize(nAspect, aNewSize) [FD]
Line_72 $$ long nAspect = xEmbeddedObjectSupplier.getAspect() --> Line_85 $$ xEmbeddedObject.setVisualAreaSize(nAspect, aNewSize) [FD]
Line_31 $$ final Size aNewSize = new Size() --> Line_85 $$ xEmbeddedObject.setVisualAreaSize(nAspect, aNewSize) [FD]
Line_65 $$ if (aSource.getSourceType() == SourceType.TABLE) --> Line_87 $$ this.sourceUtils.insertCaption(xFrame, aSource, this.docController.getLanguageController().__("Table"), xMultiServiceFactory) [CD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_87 $$ this.sourceUtils.insertCaption(xFrame, aSource, this.docController.getLanguageController().__("Table"), xMultiServiceFactory) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_87 $$ this.sourceUtils.insertCaption(xFrame, aSource, this.docController.getLanguageController().__("Table"), xMultiServiceFactory) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_89 $$ xBaseFrameProps.setPropertyValue("Width", aNewSize.Width) [CD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_89 $$ xBaseFrameProps.setPropertyValue("Width", aNewSize.Width) [FD]
Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) --> Line_89 $$ xBaseFrameProps.setPropertyValue("Width", aNewSize.Width) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_90 $$ xBaseFrameProps.setPropertyValue("Height", aNewSize.Height) [CD]
Line_32 $$ XPropertySet xBaseFrameProps = null --> Line_90 $$ xBaseFrameProps.setPropertyValue("Height", aNewSize.Height) [FD]
Line_67 $$ xBaseFrameProps = this.sourceUtils.createTextEmbeddedObjectCalc(xMultiServiceFactory) --> Line_90 $$ xBaseFrameProps.setPropertyValue("Height", aNewSize.Height) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_91 $$ final XShape xShape = (XShape) this.docController.getXInterface(XShape.class, xFrame) [CD]
Line_27 $$ final XTextFrame xFrame = this.sourceUtils.getTextFrame(aSource.getShortinfo(), xMultiServiceFactory) --> Line_91 $$ final XShape xShape = (XShape) this.docController.getXInterface(XShape.class, xFrame) [FD]
Line_25 $$ if (aSource.getSourceType() == SourceType.IMAGE || aSource.getSourceType() == SourceType.TABLE) --> Line_92 $$ xShape.setSize(aNewSize) [CD]
Line_31 $$ final Size aNewSize = new Size() --> Line_92 $$ xShape.setSize(aNewSize) [FD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_94 $$ final XTextFieldsSupplier xTextFieldsSupplier = (XTextFieldsSupplier) this.docController.getXInterface(XTextFieldsSupplier.class, xMultiServiceFactory) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_95 $$ final XRefreshable xRefreshable = (XRefreshable) this.docController.getXInterface(XRefreshable.class, xTextFieldsSupplier.getTextFields()) [CD]
Line_2 $$ public void insertQuotation(final String sText, final Source aSource) throws ConfigHandlerError, com.sun.star.uno.Exception --> Line_96 $$ xRefreshable.refresh() [CD]
