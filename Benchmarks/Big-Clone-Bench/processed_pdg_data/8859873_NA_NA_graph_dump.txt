Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_3 $$ to.start() [CD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_3 $$ to.start() [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_4 $$ final OutputStream outs = dstFS.create(new Path(outPath, filename)) [CD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_4 $$ final OutputStream outs = dstFS.create(new Path(outPath, filename)) [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_5 $$ final FileStatus[] parts = srcFS.globStatus(new Path(sorted ? getSortOutputDir(level, strand) : wrkDir, filename + "-[0-9][0-9][0-9][0-9][0-9][0-9]")) [CD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_5 $$ final FileStatus[] parts = srcFS.globStatus(new Path(sorted ? getSortOutputDir(level, strand) : wrkDir, filename + "-[0-9][0-9][0-9][0-9][0-9][0-9]")) [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_7 $$ final InputStream ins = srcFS.open(part.getPath()) [FD]
Line_6 $$ for (final FileStatus part : parts) --> Line_7 $$ final InputStream ins = srcFS.open(part.getPath()) [FD]
Line_7 $$ final InputStream ins = srcFS.open(part.getPath()) --> Line_8 $$ IOUtils.copyBytes(ins, outs, getConf(), false) [FD]
Line_4 $$ final OutputStream outs = dstFS.create(new Path(outPath, filename)) --> Line_8 $$ IOUtils.copyBytes(ins, outs, getConf(), false) [FD]
Line_7 $$ final InputStream ins = srcFS.open(part.getPath()) --> Line_9 $$ ins.close() [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_11 $$ srcFS.delete(part.getPath(), false) [FD]
Line_6 $$ for (final FileStatus part : parts) --> Line_11 $$ srcFS.delete(part.getPath(), false) [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_12 $$ outs.write(BlockCompressedStreamConstants.EMPTY_GZIP_BLOCK) [CD]
Line_4 $$ final OutputStream outs = dstFS.create(new Path(outPath, filename)) --> Line_12 $$ outs.write(BlockCompressedStreamConstants.EMPTY_GZIP_BLOCK) [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_13 $$ outs.close() [CD]
Line_4 $$ final OutputStream outs = dstFS.create(new Path(outPath, filename)) --> Line_13 $$ outs.close() [FD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_14 $$ System.out.printf("summarize :: Merged %s%c in %d.%03d s.\n", level, strand, to.stopS(), to.fms()) [CD]
Line_2 $$ private void mergeOne(String level, char strand, String filename, Path outPath, FileSystem srcFS, FileSystem dstFS, Timer to) throws IOException --> Line_14 $$ System.out.printf("summarize :: Merged %s%c in %d.%03d s.\n", level, strand, to.stopS(), to.fms()) [FD]
