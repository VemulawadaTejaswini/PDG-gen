Line_2 $$ private synchronized void persist() --> Line_3 $$ Connection conn = null [CD]
Line_3 $$ Connection conn = null --> Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) [FD]
Line_5 $$ PoolManager pm = PoolManager.getInstance() --> Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) [FD]
Line_3 $$ Connection conn = null --> Line_7 $$ conn.setAutoCommit(false) [FD]
Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) --> Line_7 $$ conn.setAutoCommit(false) [FD]
Line_3 $$ Connection conn = null --> Line_8 $$ Statement state = conn.createStatement() [FD]
Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) --> Line_8 $$ Statement state = conn.createStatement() [FD]
Line_8 $$ Statement state = conn.createStatement() --> Line_9 $$ state.executeUpdate("DELETE FROM PlaylistEntry WHERE playlistid=" + this.id) [FD]
Line_10 $$ if (this.size() > 0) --> Line_11 $$ StringBuffer sql = new StringBuffer() [CD]
Line_10 $$ if (this.size() > 0) --> Line_12 $$ sql.append("INSERT INTO PlaylistEntry ( playlistid , trackid , position ) VALUES ") [CD]
Line_11 $$ StringBuffer sql = new StringBuffer() --> Line_12 $$ sql.append("INSERT INTO PlaylistEntry ( playlistid , trackid , position ) VALUES ") [FD]
Line_10 $$ if (this.size() > 0) --> Line_13 $$ int location = 0 [CD]
Line_10 $$ if (this.size() > 0) --> Line_14 $$ Iterator i = ll.iterator() [CD]
Line_10 $$ if (this.size() > 0) --> Line_15 $$ while (i.hasNext()) [CD]
Line_14 $$ Iterator i = ll.iterator() --> Line_15 $$ while (i.hasNext()) [FD]
Line_15 $$ while (i.hasNext()) --> Line_16 $$ long currTrackID = ((DatabaseObject) i.next()).getId() [CD]
Line_14 $$ Iterator i = ll.iterator() --> Line_16 $$ long currTrackID = ((DatabaseObject) i.next()).getId() [FD]
Line_15 $$ while (i.hasNext()) --> Line_17 $$ sql.append('(').append(this.id).append(',').append(currTrackID).append(',').append(location++).append(')') [CD]
Line_16 $$ long currTrackID = ((DatabaseObject) i.next()).getId() --> Line_17 $$ sql.append('(').append(this.id).append(',').append(currTrackID).append(',').append(location++).append(')') [FD]
Line_11 $$ StringBuffer sql = new StringBuffer() --> Line_17 $$ sql.append('(').append(this.id).append(',').append(currTrackID).append(',').append(location++).append(')') [FD]
Line_13 $$ int location = 0 --> Line_17 $$ sql.append('(').append(this.id).append(',').append(currTrackID).append(',').append(location++).append(')') [FD]
Line_15 $$ while (i.hasNext()) --> Line_18 $$ if (i.hasNext()) [CD]
Line_14 $$ Iterator i = ll.iterator() --> Line_18 $$ if (i.hasNext()) [FD]
Line_11 $$ StringBuffer sql = new StringBuffer() --> Line_18 $$ if (i.hasNext()) [FD]
Line_10 $$ if (this.size() > 0) --> Line_20 $$ state.executeUpdate(sql.toString()) [CD]
Line_8 $$ Statement state = conn.createStatement() --> Line_20 $$ state.executeUpdate(sql.toString()) [FD]
Line_11 $$ StringBuffer sql = new StringBuffer() --> Line_20 $$ state.executeUpdate(sql.toString()) [FD]
Line_3 $$ Connection conn = null --> Line_22 $$ conn.commit() [FD]
Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) --> Line_22 $$ conn.commit() [FD]
Line_3 $$ Connection conn = null --> Line_23 $$ conn.setAutoCommit(true) [FD]
Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) --> Line_23 $$ conn.setAutoCommit(true) [FD]
Line_8 $$ Statement state = conn.createStatement() --> Line_24 $$ state.close() [FD]
Line_3 $$ Connection conn = null --> Line_27 $$ conn.rollback() [FD]
Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) --> Line_27 $$ conn.rollback() [FD]
Line_3 $$ Connection conn = null --> Line_33 $$ conn.close() [FD]
Line_6 $$ conn = pm.getConnection(JukeXTrackStore.DB_NAME) --> Line_33 $$ conn.close() [FD]
