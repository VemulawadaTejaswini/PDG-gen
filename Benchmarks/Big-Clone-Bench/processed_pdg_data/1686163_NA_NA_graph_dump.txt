Line_2 $$ private void sendRemoteFiles() throws Exception --> Line_3 $$ if (validParameters()) [CD]
Line_3 $$ if (validParameters()) --> Line_4 $$ URL url = new URL(storageUrlString) [CD]
Line_3 $$ if (validParameters()) --> Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [CD]
Line_4 $$ URL url = new URL(storageUrlString) --> Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [FD]
Line_3 $$ if (validParameters()) --> Line_6 $$ RequestUtils requestUtils = new RequestUtils() [CD]
Line_3 $$ if (validParameters()) --> Line_7 $$ requestUtils.preRequestAddParameter("senderObj", "FileSender") [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_7 $$ requestUtils.preRequestAddParameter("senderObj", "FileSender") [FD]
Line_3 $$ if (validParameters()) --> Line_8 $$ requestUtils.preRequestAddParameter("wfiType", "zen") [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_8 $$ requestUtils.preRequestAddParameter("wfiType", "zen") [FD]
Line_3 $$ if (validParameters()) --> Line_9 $$ requestUtils.preRequestAddParameter("portalID", this.portalID) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_9 $$ requestUtils.preRequestAddParameter("portalID", this.portalID) [FD]
Line_3 $$ if (validParameters()) --> Line_10 $$ requestUtils.preRequestAddParameter("userID", this.userID) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_10 $$ requestUtils.preRequestAddParameter("userID", this.userID) [FD]
Line_3 $$ if (validParameters()) --> Line_11 $$ requestUtils.preRequestAddParameter("workflowID", this.workflowID) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_11 $$ requestUtils.preRequestAddParameter("workflowID", this.workflowID) [FD]
Line_3 $$ if (validParameters()) --> Line_12 $$ requestUtils.preRequestAddParameter("jobID", this.jobID) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_12 $$ requestUtils.preRequestAddParameter("jobID", this.jobID) [FD]
Line_3 $$ if (validParameters()) --> Line_13 $$ requestUtils.preRequestAddParameter("pidID", this.pidID) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_13 $$ requestUtils.preRequestAddParameter("pidID", this.pidID) [FD]
Line_3 $$ if (validParameters()) --> Line_14 $$ requestUtils.preRequestAddParameter("runtimeID", this.runtimeID) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_14 $$ requestUtils.preRequestAddParameter("runtimeID", this.runtimeID) [FD]
Line_3 $$ if (validParameters()) --> Line_15 $$ requestUtils.preRequestAddParameter("copyhash", getCopyHashStr()) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_15 $$ requestUtils.preRequestAddParameter("copyhash", getCopyHashStr()) [FD]
Line_3 $$ if (validParameters()) --> Line_16 $$ String zipFileName = ZipUtils.getInstance().getUniqueZipFileName() [CD]
Line_3 $$ if (validParameters()) --> Line_17 $$ requestUtils.preRequestAddFile("zipFileName", zipFileName) [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_17 $$ requestUtils.preRequestAddFile("zipFileName", zipFileName) [FD]
Line_16 $$ String zipFileName = ZipUtils.getInstance().getUniqueZipFileName() --> Line_17 $$ requestUtils.preRequestAddFile("zipFileName", zipFileName) [FD]
Line_3 $$ if (validParameters()) --> Line_18 $$ requestUtils.createPostRequest() [CD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_18 $$ requestUtils.createPostRequest() [FD]
Line_3 $$ if (validParameters()) --> Line_19 $$ httpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + requestUtils.getBoundary()) [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_19 $$ httpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + requestUtils.getBoundary()) [FD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_19 $$ httpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + requestUtils.getBoundary()) [FD]
Line_3 $$ if (validParameters()) --> Line_20 $$ httpURLConnection.setRequestMethod("POST") [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_20 $$ httpURLConnection.setRequestMethod("POST") [FD]
Line_3 $$ if (validParameters()) --> Line_21 $$ httpURLConnection.setDoOutput(true) [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_21 $$ httpURLConnection.setDoOutput(true) [FD]
Line_3 $$ if (validParameters()) --> Line_22 $$ httpURLConnection.setDoInput(true) [CD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_22 $$ httpURLConnection.setDoInput(true) [FD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_24 $$ httpURLConnection.connect() [FD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() [FD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_26 $$ byte[] preBytes = requestUtils.getPreRequestStringBytes() [FD]
Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_27 $$ out.write(preBytes) [FD]
Line_26 $$ byte[] preBytes = requestUtils.getPreRequestStringBytes() --> Line_27 $$ out.write(preBytes) [FD]
Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_28 $$ out.flush() [FD]
Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_29 $$ ZipUtils.getInstance().sendDirAllFilesToStream(sendFilesDir, out) [FD]
Line_6 $$ RequestUtils requestUtils = new RequestUtils() --> Line_30 $$ byte[] postBytes = requestUtils.getPostRequestStringBytes() [FD]
Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_31 $$ out.write(postBytes) [FD]
Line_30 $$ byte[] postBytes = requestUtils.getPostRequestStringBytes() --> Line_31 $$ out.write(postBytes) [FD]
Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_32 $$ out.flush() [FD]
Line_25 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_33 $$ out.close() [FD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_34 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream())) [FD]
Line_34 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream())) --> Line_35 $$ in.readLine() [FD]
Line_34 $$ BufferedReader in = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream())) --> Line_36 $$ in.close() [FD]
Line_5 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_37 $$ if (HttpURLConnection.HTTP_OK != httpURLConnection.getResponseCode()) [FD]
