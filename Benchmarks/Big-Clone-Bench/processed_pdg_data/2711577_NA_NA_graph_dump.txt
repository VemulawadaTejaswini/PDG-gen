Line_6 $$ File from = new java.io.File(filePath) --> Line_7 $$ if (!from.exists()) [FD]
Line_7 $$ if (!from.exists()) --> Line_8 $$ Properties properties = new Properties() [CD]
Line_7 $$ if (!from.exists()) --> Line_9 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_MIDDLE_NAME_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_MIDDLE_NAME_VISIBILITY")) [CD]
Line_8 $$ Properties properties = new Properties() --> Line_9 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_MIDDLE_NAME_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_MIDDLE_NAME_VISIBILITY")) [FD]
Line_7 $$ if (!from.exists()) --> Line_10 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_DATE_OF_BIRTH_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_DATE_OF_BIRTH_VISIBILITY")) [CD]
Line_8 $$ Properties properties = new Properties() --> Line_10 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_DATE_OF_BIRTH_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_DATE_OF_BIRTH_VISIBILITY")) [FD]
Line_7 $$ if (!from.exists()) --> Line_11 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_CELL_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_CELL_VISIBILITY")) [CD]
Line_8 $$ Properties properties = new Properties() --> Line_11 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_CELL_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_CELL_VISIBILITY")) [FD]
Line_7 $$ if (!from.exists()) --> Line_12 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_CATEGORIES_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_CATEGORIES_VISIBILITY")) [CD]
Line_8 $$ Properties properties = new Properties() --> Line_12 $$ properties.put(Config.getStringProperty("ADDITIONAL_INFO_CATEGORIES_PROPNAME"), Config.getStringProperty("ADDITIONAL_INFO_CATEGORIES_VISIBILITY")) [FD]
Line_7 $$ if (!from.exists()) --> Line_13 $$ Company comp = PublicCompanyFactory.getDefaultCompany() [CD]
Line_7 $$ if (!from.exists()) --> Line_14 $$ int numberGenericVariables = Config.getIntProperty("MAX_NUMBER_VARIABLES_TO_SHOW") [CD]
Line_7 $$ if (!from.exists()) --> Line_15 $$ for (int i = 1; i <= numberGenericVariables; i++) [CD]
Line_14 $$ int numberGenericVariables = Config.getIntProperty("MAX_NUMBER_VARIABLES_TO_SHOW") --> Line_15 $$ for (int i = 1; i <= numberGenericVariables; i++) [FD]
Line_15 $$ for (int i = 1; i <= numberGenericVariables; i++) --> Line_16 $$ properties.put(LanguageUtil.get(comp.getCompanyId(), comp.getLocale(), "user.profile.var" + i).replace(" ", "_"), Config.getStringProperty("ADDITIONAL_INFO_DEFAULT_VISIBILITY")) [CD]
Line_8 $$ Properties properties = new Properties() --> Line_16 $$ properties.put(LanguageUtil.get(comp.getCompanyId(), comp.getLocale(), "user.profile.var" + i).replace(" ", "_"), Config.getStringProperty("ADDITIONAL_INFO_DEFAULT_VISIBILITY")) [FD]
Line_13 $$ Company comp = PublicCompanyFactory.getDefaultCompany() --> Line_16 $$ properties.put(LanguageUtil.get(comp.getCompanyId(), comp.getLocale(), "user.profile.var" + i).replace(" ", "_"), Config.getStringProperty("ADDITIONAL_INFO_DEFAULT_VISIBILITY")) [FD]
Line_8 $$ Properties properties = new Properties() --> Line_19 $$ properties.store(new java.io.FileOutputStream(filePath), null) [FD]
Line_7 $$ if (!from.exists()) --> Line_23 $$ from = new java.io.File(filePath) [CD]
Line_6 $$ File from = new java.io.File(filePath) --> Line_23 $$ from = new java.io.File(filePath) [FD]
Line_7 $$ if (!from.exists()) --> Line_24 $$ copy = true [CD]
Line_5 $$ boolean copy = false --> Line_24 $$ copy = true [FD]
Line_27 $$ File to = new java.io.File(tmpFilePath) --> Line_28 $$ if (!to.exists()) [FD]
Line_28 $$ if (!to.exists()) --> Line_29 $$ to.createNewFile() [CD]
Line_27 $$ File to = new java.io.File(tmpFilePath) --> Line_29 $$ to.createNewFile() [FD]
Line_28 $$ if (!to.exists()) --> Line_30 $$ copy = true [CD]
Line_5 $$ boolean copy = false --> Line_30 $$ copy = true [FD]
Line_24 $$ copy = true --> Line_30 $$ copy = true [FD]
Line_32 $$ if (copy) --> Line_33 $$ FileChannel srcChannel = new FileInputStream(from).getChannel() [CD]
Line_32 $$ if (copy) --> Line_34 $$ FileChannel dstChannel = new FileOutputStream(to).getChannel() [CD]
Line_32 $$ if (copy) --> Line_35 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [CD]
Line_34 $$ FileChannel dstChannel = new FileOutputStream(to).getChannel() --> Line_35 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [FD]
Line_33 $$ FileChannel srcChannel = new FileInputStream(from).getChannel() --> Line_35 $$ dstChannel.transferFrom(srcChannel, 0, srcChannel.size()) [FD]
Line_32 $$ if (copy) --> Line_36 $$ srcChannel.close() [CD]
Line_33 $$ FileChannel srcChannel = new FileInputStream(from).getChannel() --> Line_36 $$ srcChannel.close() [FD]
Line_32 $$ if (copy) --> Line_37 $$ dstChannel.close() [CD]
Line_34 $$ FileChannel dstChannel = new FileOutputStream(to).getChannel() --> Line_37 $$ dstChannel.close() [FD]
