Line_2 $$ public static void copy(File srcDir, File dstDir) throws IOException --> Line_3 $$ if (srcDir.isDirectory()) [CD]
Line_2 $$ public static void copy(File srcDir, File dstDir) throws IOException --> Line_3 $$ if (srcDir.isDirectory()) [FD]
Line_3 $$ if (srcDir.isDirectory()) --> Line_4 $$ if (!dstDir.exists()) [CD]
Line_2 $$ public static void copy(File srcDir, File dstDir) throws IOException --> Line_4 $$ if (!dstDir.exists()) [FD]
Line_3 $$ if (srcDir.isDirectory()) --> Line_5 $$ String[] children = srcDir.list() [CD]
Line_2 $$ public static void copy(File srcDir, File dstDir) throws IOException --> Line_5 $$ String[] children = srcDir.list() [FD]
Line_3 $$ if (srcDir.isDirectory()) --> Line_6 $$ for (int i = 0; i < children.length; i++) copy(new File(srcDir, children[i]), new File(dstDir, children[i])) [CD]
Line_3 $$ if (srcDir.isDirectory()) --> Line_8 $$ InputStream in = null [CD]
Line_3 $$ if (srcDir.isDirectory()) --> Line_9 $$ OutputStream out = null [CD]
Line_8 $$ InputStream in = null --> Line_11 $$ in = new FileInputStream(srcDir) [FD]
Line_9 $$ OutputStream out = null --> Line_12 $$ out = new FileOutputStream(dstDir) [FD]
Line_14 $$ int len --> Line_15 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_8 $$ InputStream in = null --> Line_15 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_11 $$ in = new FileInputStream(srcDir) --> Line_15 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_13 $$ byte[] buf = new byte[1024] --> Line_15 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_9 $$ OutputStream out = null --> Line_15 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_12 $$ out = new FileOutputStream(dstDir) --> Line_15 $$ while ((len = in.read(buf)) > 0) out.write(buf, 0, len) [FD]
Line_8 $$ InputStream in = null --> Line_17 $$ Util.close(in) [FD]
Line_11 $$ in = new FileInputStream(srcDir) --> Line_17 $$ Util.close(in) [FD]
Line_9 $$ OutputStream out = null --> Line_18 $$ Util.close(out) [FD]
Line_12 $$ out = new FileOutputStream(dstDir) --> Line_18 $$ Util.close(out) [FD]
