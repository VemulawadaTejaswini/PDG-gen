Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") [CD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_4 $$ md.update(username.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_4 $$ md.update(username.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_5 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_5 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_6 $$ md.update(realm.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_6 $$ md.update(realm.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_7 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_7 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_8 $$ md.update(password.getBytes("ISO-8859-1")) [CD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_8 $$ md.update(password.getBytes("ISO-8859-1")) [FD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_8 $$ md.update(password.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_9 $$ byte[] ha1 = md.digest() [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_9 $$ byte[] ha1 = md.digest() [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_10 $$ String hexHa1 = new String(Hex.encodeHex(ha1)) [CD]
Line_9 $$ byte[] ha1 = md.digest() --> Line_10 $$ String hexHa1 = new String(Hex.encodeHex(ha1)) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_11 $$ md.reset() [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_11 $$ md.reset() [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_12 $$ md.update(method.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_12 $$ md.update(method.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_13 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_13 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_14 $$ md.update(uri.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_14 $$ md.update(uri.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_15 $$ byte[] ha2 = md.digest() [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_15 $$ byte[] ha2 = md.digest() [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_16 $$ String hexHa2 = new String(Hex.encodeHex(ha2)) [CD]
Line_15 $$ byte[] ha2 = md.digest() --> Line_16 $$ String hexHa2 = new String(Hex.encodeHex(ha2)) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_17 $$ md.reset() [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_17 $$ md.reset() [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_18 $$ md.update(hexHa1.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_18 $$ md.update(hexHa1.getBytes("ISO-8859-1")) [FD]
Line_10 $$ String hexHa1 = new String(Hex.encodeHex(ha1)) --> Line_18 $$ md.update(hexHa1.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_19 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_19 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_20 $$ md.update(nonce.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_20 $$ md.update(nonce.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_21 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_21 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_22 $$ md.update(nc.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_22 $$ md.update(nc.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_23 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_23 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_24 $$ md.update(cnonce.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_24 $$ md.update(cnonce.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_25 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_25 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_26 $$ md.update(qop.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_26 $$ md.update(qop.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_27 $$ md.update((byte) ':') [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_27 $$ md.update((byte) ':') [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_28 $$ md.update(hexHa2.getBytes("ISO-8859-1")) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_28 $$ md.update(hexHa2.getBytes("ISO-8859-1")) [FD]
Line_16 $$ String hexHa2 = new String(Hex.encodeHex(ha2)) --> Line_28 $$ md.update(hexHa2.getBytes("ISO-8859-1")) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_29 $$ byte[] digest = md.digest() [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_29 $$ byte[] digest = md.digest() [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_30 $$ String hexDigest = new String(Hex.encodeHex(digest)) [CD]
Line_29 $$ byte[] digest = md.digest() --> Line_30 $$ String hexDigest = new String(Hex.encodeHex(digest)) [FD]
Line_2 $$ public boolean check(String password) throws UnsupportedEncodingException, NoSuchAlgorithmException --> Line_31 $$ return (hexDigest.equalsIgnoreCase(response)) [CD]
Line_30 $$ String hexDigest = new String(Hex.encodeHex(digest)) --> Line_31 $$ return (hexDigest.equalsIgnoreCase(response)) [FD]
