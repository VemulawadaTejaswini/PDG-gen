Line_2 $$ public static void main(String[] args) --> Line_3 $$ System.out.println("Starting encoding test....") [CD]
Line_2 $$ public static void main(String[] args) --> Line_4 $$ Properties p = new Properties() [CD]
Line_4 $$ Properties p = new Properties() --> Line_7 $$ p.load(pStream) [FD]
Line_6 $$ InputStream pStream = ClassLoader.getSystemResourceAsStream("sample_weather.properties") --> Line_7 $$ p.load(pStream) [FD]
Line_2 $$ public static void main(String[] args) --> Line_14 $$ if (WeatherUpdater.DEBUG) [CD]
Line_14 $$ if (WeatherUpdater.DEBUG) --> Line_15 $$ System.out.println("hostname: " + p.getProperty("weather.hostname")) [CD]
Line_4 $$ Properties p = new Properties() --> Line_15 $$ System.out.println("hostname: " + p.getProperty("weather.hostname")) [FD]
Line_2 $$ public static void main(String[] args) --> Line_17 $$ if (WeatherUpdater.DEBUG) [CD]
Line_17 $$ if (WeatherUpdater.DEBUG) --> Line_18 $$ System.out.println("database: " + p.getProperty("weather.database")) [CD]
Line_4 $$ Properties p = new Properties() --> Line_18 $$ System.out.println("database: " + p.getProperty("weather.database")) [FD]
Line_2 $$ public static void main(String[] args) --> Line_20 $$ if (WeatherUpdater.DEBUG) [CD]
Line_20 $$ if (WeatherUpdater.DEBUG) --> Line_21 $$ System.out.println("username: " + p.getProperty("weather.username")) [CD]
Line_4 $$ Properties p = new Properties() --> Line_21 $$ System.out.println("username: " + p.getProperty("weather.username")) [FD]
Line_2 $$ public static void main(String[] args) --> Line_23 $$ if (WeatherUpdater.DEBUG) [CD]
Line_23 $$ if (WeatherUpdater.DEBUG) --> Line_24 $$ System.out.println("password: " + p.getProperty("weather.password")) [CD]
Line_4 $$ Properties p = new Properties() --> Line_24 $$ System.out.println("password: " + p.getProperty("weather.password")) [FD]
Line_2 $$ public static void main(String[] args) --> Line_26 $$ SqlAccount sqlAccount = new SqlAccount(p.getProperty("weather.hostname"), p.getProperty("weather.database"), p.getProperty("weather.username"), p.getProperty("weather.password")) [CD]
Line_4 $$ Properties p = new Properties() --> Line_26 $$ SqlAccount sqlAccount = new SqlAccount(p.getProperty("weather.hostname"), p.getProperty("weather.database"), p.getProperty("weather.username"), p.getProperty("weather.password")) [FD]
Line_2 $$ public static void main(String[] args) --> Line_27 $$ DatabaseInterface dbi = null [CD]
Line_27 $$ DatabaseInterface dbi = null --> Line_29 $$ dbi = new DatabaseInterface(sqlAccount) [FD]
Line_2 $$ public static void main(String[] args) --> Line_35 $$ System.out.println("Established connection to database.") [CD]
Line_2 $$ public static void main(String[] args) --> Line_36 $$ String query = "SELECT * FROM Current_Weather WHERE ZipCode = '99702'" [CD]
Line_2 $$ public static void main(String[] args) --> Line_37 $$ ResultTable results [CD]
Line_2 $$ public static void main(String[] args) --> Line_38 $$ System.out.println("Executing query: " + query) [CD]
Line_37 $$ ResultTable results --> Line_40 $$ results = dbi.executeQuery(query) [FD]
Line_27 $$ DatabaseInterface dbi = null --> Line_40 $$ results = dbi.executeQuery(query) [FD]
Line_29 $$ dbi = new DatabaseInterface(sqlAccount) --> Line_40 $$ results = dbi.executeQuery(query) [FD]
Line_36 $$ String query = "SELECT * FROM Current_Weather WHERE ZipCode = '99702'" --> Line_40 $$ results = dbi.executeQuery(query) [FD]
Line_2 $$ public static void main(String[] args) --> Line_46 $$ System.out.println("Got results from query.") [CD]
Line_2 $$ public static void main(String[] args) --> Line_47 $$ System.out.println("Converted results into the following table:") [CD]
Line_2 $$ public static void main(String[] args) --> Line_48 $$ System.out.println(results) [CD]
Line_37 $$ ResultTable results --> Line_48 $$ System.out.println(results) [FD]
Line_40 $$ results = dbi.executeQuery(query) --> Line_48 $$ System.out.println(results) [FD]
Line_2 $$ public static void main(String[] args) --> Line_49 $$ System.out.println() [CD]
Line_2 $$ public static void main(String[] args) --> Line_50 $$ Class<? extends ResultEncoder> encoder_class [CD]
Line_2 $$ public static void main(String[] args) --> Line_51 $$ Class<? extends ResultDecoder> decoder_class [CD]
Line_4 $$ Properties p = new Properties() --> Line_53 $$ encoder_class = (Class<? extends ResultEncoder>) Class.forName(p.getProperty("mysms.coding.resultEncoder")) [FD]
Line_4 $$ Properties p = new Properties() --> Line_54 $$ decoder_class = (Class<? extends ResultDecoder>) Class.forName(p.getProperty("mysms.coding.resultDecoder")) [FD]
Line_4 $$ Properties p = new Properties() --> Line_56 $$ System.err.println("Could not find specified encoder: " + p.getProperty("result.encoder")) [FD]
Line_2 $$ public static void main(String[] args) --> Line_61 $$ System.out.println("Found class of encoder: " + encoder_class) [CD]
Line_2 $$ public static void main(String[] args) --> Line_62 $$ System.out.println("Found class of decoder: " + decoder_class) [CD]
Line_2 $$ public static void main(String[] args) --> Line_63 $$ ResultEncoder encoder [CD]
Line_2 $$ public static void main(String[] args) --> Line_64 $$ ResultDecoder decoder [CD]
Line_63 $$ ResultEncoder encoder --> Line_66 $$ encoder = encoder_class.newInstance() [FD]
Line_63 $$ ResultEncoder encoder --> Line_67 $$ if (encoder_class.equals(decoder_class) && decoder_class.isInstance(encoder)) [FD]
Line_64 $$ ResultDecoder decoder --> Line_68 $$ decoder = (ResultDecoder) encoder [FD]
Line_64 $$ ResultDecoder decoder --> Line_70 $$ decoder = decoder_class.newInstance() [FD]
Line_68 $$ decoder = (ResultDecoder) encoder --> Line_70 $$ decoder = decoder_class.newInstance() [FD]
Line_2 $$ public static void main(String[] args) --> Line_78 $$ System.out.println("Created instances of encoder and decoder.") [CD]
Line_2 $$ public static void main(String[] args) --> Line_79 $$ if (decoder.equals(encoder)) [CD]
Line_64 $$ ResultDecoder decoder --> Line_79 $$ if (decoder.equals(encoder)) [FD]
Line_68 $$ decoder = (ResultDecoder) encoder --> Line_79 $$ if (decoder.equals(encoder)) [FD]
Line_63 $$ ResultEncoder encoder --> Line_79 $$ if (decoder.equals(encoder)) [FD]
Line_79 $$ if (decoder.equals(encoder)) --> Line_80 $$ System.out.println("Decoder and encoder are same object.") [CD]
Line_2 $$ public static void main(String[] args) --> Line_82 $$ ByteBuffer buffer [CD]
Line_82 $$ ByteBuffer buffer --> Line_84 $$ buffer = encoder.encode(null, results) [FD]
Line_63 $$ ResultEncoder encoder --> Line_84 $$ buffer = encoder.encode(null, results) [FD]
Line_37 $$ ResultTable results --> Line_84 $$ buffer = encoder.encode(null, results) [FD]
Line_40 $$ results = dbi.executeQuery(query) --> Line_84 $$ buffer = encoder.encode(null, results) [FD]
Line_2 $$ public static void main(String[] args) --> Line_91 $$ System.out.println("Encoded results to ByteBuffer with size: " + buffer.capacity()) [CD]
Line_82 $$ ByteBuffer buffer --> Line_91 $$ System.out.println("Encoded results to ByteBuffer with size: " + buffer.capacity()) [FD]
Line_84 $$ buffer = encoder.encode(null, results) --> Line_91 $$ System.out.println("Encoded results to ByteBuffer with size: " + buffer.capacity()) [FD]
Line_2 $$ public static void main(String[] args) --> Line_92 $$ File temp [CD]
Line_92 $$ File temp --> Line_94 $$ temp = File.createTempFile("encoding_test", ".results") [FD]
Line_92 $$ File temp --> Line_95 $$ temp.deleteOnExit() [FD]
Line_94 $$ temp = File.createTempFile("encoding_test", ".results") --> Line_95 $$ temp.deleteOnExit() [FD]
Line_96 $$ FileChannel out = new FileOutputStream(temp).getChannel() --> Line_97 $$ out.write(buffer) [FD]
Line_82 $$ ByteBuffer buffer --> Line_97 $$ out.write(buffer) [FD]
Line_84 $$ buffer = encoder.encode(null, results) --> Line_97 $$ out.write(buffer) [FD]
Line_96 $$ FileChannel out = new FileOutputStream(temp).getChannel() --> Line_98 $$ out.close() [FD]
Line_2 $$ public static void main(String[] args) --> Line_105 $$ System.out.println("Wrote buffer to file: \"" + temp.getName() + "\" with length: " + temp.length()) [CD]
Line_92 $$ File temp --> Line_105 $$ System.out.println("Wrote buffer to file: \"" + temp.getName() + "\" with length: " + temp.length()) [FD]
Line_94 $$ temp = File.createTempFile("encoding_test", ".results") --> Line_105 $$ System.out.println("Wrote buffer to file: \"" + temp.getName() + "\" with length: " + temp.length()) [FD]
Line_2 $$ public static void main(String[] args) --> Line_106 $$ ByteBuffer re_buffer [CD]
Line_92 $$ File temp --> Line_108 $$ FileInputStream in = new FileInputStream(temp.getAbsolutePath()) [FD]
Line_94 $$ temp = File.createTempFile("encoding_test", ".results") --> Line_108 $$ FileInputStream in = new FileInputStream(temp.getAbsolutePath()) [FD]
Line_92 $$ File temp --> Line_109 $$ byte[] temp_buffer = new byte[(int) temp.length()] [FD]
Line_94 $$ temp = File.createTempFile("encoding_test", ".results") --> Line_109 $$ byte[] temp_buffer = new byte[(int) temp.length()] [FD]
Line_110 $$ int totalRead = 0 --> Line_112 $$ while (totalRead < temp_buffer.length) [FD]
Line_112 $$ while (totalRead < temp_buffer.length) --> Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) [CD]
Line_111 $$ int numRead = 0 --> Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) [FD]
Line_108 $$ FileInputStream in = new FileInputStream(temp.getAbsolutePath()) --> Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) [FD]
Line_109 $$ byte[] temp_buffer = new byte[(int) temp.length()] --> Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) [FD]
Line_110 $$ int totalRead = 0 --> Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) [FD]
Line_112 $$ while (totalRead < temp_buffer.length) --> Line_114 $$ if (numRead < 0) [CD]
Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) --> Line_114 $$ if (numRead < 0) [FD]
Line_111 $$ int numRead = 0 --> Line_114 $$ if (numRead < 0) [FD]
Line_114 $$ if (numRead < 0) --> Line_117 $$ totalRead += numRead [CD]
Line_110 $$ int totalRead = 0 --> Line_117 $$ totalRead += numRead [FD]
Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) --> Line_117 $$ totalRead += numRead [FD]
Line_111 $$ int numRead = 0 --> Line_117 $$ totalRead += numRead [FD]
Line_106 $$ ByteBuffer re_buffer --> Line_120 $$ re_buffer = ByteBuffer.wrap(temp_buffer) [FD]
Line_109 $$ byte[] temp_buffer = new byte[(int) temp.length()] --> Line_120 $$ re_buffer = ByteBuffer.wrap(temp_buffer) [FD]
Line_108 $$ FileInputStream in = new FileInputStream(temp.getAbsolutePath()) --> Line_121 $$ in.close() [FD]
Line_2 $$ public static void main(String[] args) --> Line_128 $$ System.out.println("Read file back into buffer with length: " + re_buffer.capacity()) [CD]
Line_106 $$ ByteBuffer re_buffer --> Line_128 $$ System.out.println("Read file back into buffer with length: " + re_buffer.capacity()) [FD]
Line_120 $$ re_buffer = ByteBuffer.wrap(temp_buffer) --> Line_128 $$ System.out.println("Read file back into buffer with length: " + re_buffer.capacity()) [FD]
Line_2 $$ public static void main(String[] args) --> Line_129 $$ ResultTable re_results [CD]
Line_129 $$ ResultTable re_results --> Line_131 $$ re_results = decoder.decode(null, re_buffer) [FD]
Line_64 $$ ResultDecoder decoder --> Line_131 $$ re_results = decoder.decode(null, re_buffer) [FD]
Line_68 $$ decoder = (ResultDecoder) encoder --> Line_131 $$ re_results = decoder.decode(null, re_buffer) [FD]
Line_106 $$ ByteBuffer re_buffer --> Line_131 $$ re_results = decoder.decode(null, re_buffer) [FD]
Line_120 $$ re_buffer = ByteBuffer.wrap(temp_buffer) --> Line_131 $$ re_results = decoder.decode(null, re_buffer) [FD]
Line_2 $$ public static void main(String[] args) --> Line_138 $$ System.out.println("Decoded buffer back into the following table:") [CD]
Line_2 $$ public static void main(String[] args) --> Line_139 $$ System.out.println(re_results) [CD]
Line_129 $$ ResultTable re_results --> Line_139 $$ System.out.println(re_results) [FD]
Line_131 $$ re_results = decoder.decode(null, re_buffer) --> Line_139 $$ System.out.println(re_results) [FD]
Line_2 $$ public static void main(String[] args) --> Line_140 $$ System.out.println() [CD]
Line_2 $$ public static void main(String[] args) --> Line_141 $$ System.out.println("... encoding test complete.") [CD]
Line_117 $$ totalRead += numRead --> Line_112 $$ while (totalRead < temp_buffer.length) [FD]
Line_117 $$ totalRead += numRead --> Line_113 $$ numRead = in.read(temp_buffer, totalRead, temp_buffer.length - totalRead) [FD]
