Line_2 $$ public InputStream openStream(URL url) throws IOException --> Line_3 $$ List<String> lines = IOUtils.readLines(url.openStream()) [CD]
Line_2 $$ public InputStream openStream(URL url) throws IOException --> Line_3 $$ List<String> lines = IOUtils.readLines(url.openStream()) [FD]
Line_4 $$ for (String line : lines) --> Line_5 $$ Matcher m = PATTERN.matcher(line) [FD]
Line_5 $$ Matcher m = PATTERN.matcher(line) --> Line_6 $$ if (m.matches()) [FD]
Line_6 $$ if (m.matches()) --> Line_7 $$ String origUrl = m.group(1) [CD]
Line_5 $$ Matcher m = PATTERN.matcher(line) --> Line_7 $$ String origUrl = m.group(1) [FD]
Line_6 $$ if (m.matches()) --> Line_8 $$ log.info("Loading content from: " + origUrl) [CD]
Line_6 $$ if (m.matches()) --> Line_9 $$ return new HttpUtil<InputStream>() [CD]
Line_9 $$ return new HttpUtil<InputStream>() --> Line_11 $$ return new ByteArrayInputStream(IOUtils.toByteArray(response)) [CD]
Line_9 $$ return new HttpUtil<InputStream>() --> Line_11 $$ return new ByteArrayInputStream(IOUtils.toByteArray(response)) [FD]
Line_2 $$ public InputStream openStream(URL url) throws IOException --> Line_16 $$ log.error("No origUrl found for url: " + url) [CD]
Line_2 $$ public InputStream openStream(URL url) throws IOException --> Line_17 $$ return null [CD]
