Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_3 $$ FileInputStream fis = null [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_4 $$ FileOutputStream fos = null [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_5 $$ FileChannel inChannel = null [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_6 $$ FileChannel outChannel = null [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_7 $$ final File tempOut = File.createTempFile("move", ".tmp") [CD]
Line_3 $$ FileInputStream fis = null --> Line_9 $$ fis = new FileInputStream(in) [FD]
Line_4 $$ FileOutputStream fos = null --> Line_10 $$ fos = new FileOutputStream(tempOut) [FD]
Line_5 $$ FileChannel inChannel = null --> Line_11 $$ inChannel = fis.getChannel() [FD]
Line_3 $$ FileInputStream fis = null --> Line_11 $$ inChannel = fis.getChannel() [FD]
Line_9 $$ fis = new FileInputStream(in) --> Line_11 $$ inChannel = fis.getChannel() [FD]
Line_6 $$ FileChannel outChannel = null --> Line_12 $$ outChannel = fos.getChannel() [FD]
Line_4 $$ FileOutputStream fos = null --> Line_12 $$ outChannel = fos.getChannel() [FD]
Line_10 $$ fos = new FileOutputStream(tempOut) --> Line_12 $$ outChannel = fos.getChannel() [FD]
Line_5 $$ FileChannel inChannel = null --> Line_13 $$ inChannel.transferTo(0, inChannel.size(), outChannel) [FD]
Line_11 $$ inChannel = fis.getChannel() --> Line_13 $$ inChannel.transferTo(0, inChannel.size(), outChannel) [FD]
Line_6 $$ FileChannel outChannel = null --> Line_13 $$ inChannel.transferTo(0, inChannel.size(), outChannel) [FD]
Line_12 $$ outChannel = fos.getChannel() --> Line_13 $$ inChannel.transferTo(0, inChannel.size(), outChannel) [FD]
Line_5 $$ FileChannel inChannel = null --> Line_16 $$ if (inChannel != null) [FD]
Line_11 $$ inChannel = fis.getChannel() --> Line_16 $$ if (inChannel != null) [FD]
Line_5 $$ FileChannel inChannel = null --> Line_18 $$ LogUtils.debugf(JRobinConverter.class, "failed to close channel %s", inChannel) [FD]
Line_11 $$ inChannel = fis.getChannel() --> Line_18 $$ LogUtils.debugf(JRobinConverter.class, "failed to close channel %s", inChannel) [FD]
Line_6 $$ FileChannel outChannel = null --> Line_21 $$ if (outChannel != null) [FD]
Line_12 $$ outChannel = fos.getChannel() --> Line_21 $$ if (outChannel != null) [FD]
Line_6 $$ FileChannel outChannel = null --> Line_23 $$ LogUtils.debugf(JRobinConverter.class, "failed to close channel %s", outChannel) [FD]
Line_12 $$ outChannel = fos.getChannel() --> Line_23 $$ LogUtils.debugf(JRobinConverter.class, "failed to close channel %s", outChannel) [FD]
Line_3 $$ FileInputStream fis = null --> Line_26 $$ if (fis != null) [FD]
Line_9 $$ fis = new FileInputStream(in) --> Line_26 $$ if (fis != null) [FD]
Line_3 $$ FileInputStream fis = null --> Line_28 $$ LogUtils.debugf(JRobinConverter.class, "failed to close stream %s", fis) [FD]
Line_9 $$ fis = new FileInputStream(in) --> Line_28 $$ LogUtils.debugf(JRobinConverter.class, "failed to close stream %s", fis) [FD]
Line_4 $$ FileOutputStream fos = null --> Line_31 $$ if (fos != null) [FD]
Line_10 $$ fos = new FileOutputStream(tempOut) --> Line_31 $$ if (fos != null) [FD]
Line_4 $$ FileOutputStream fos = null --> Line_33 $$ LogUtils.debugf(JRobinConverter.class, "failed to close stream %s", fos) [FD]
Line_10 $$ fos = new FileOutputStream(tempOut) --> Line_33 $$ LogUtils.debugf(JRobinConverter.class, "failed to close stream %s", fos) [FD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_36 $$ out.delete() [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_36 $$ out.delete() [FD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_37 $$ if (!out.exists()) [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_37 $$ if (!out.exists()) [FD]
Line_37 $$ if (!out.exists()) --> Line_38 $$ tempOut.renameTo(out) [CD]
Line_7 $$ final File tempOut = File.createTempFile("move", ".tmp") --> Line_38 $$ tempOut.renameTo(out) [FD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_38 $$ tempOut.renameTo(out) [FD]
Line_37 $$ if (!out.exists()) --> Line_39 $$ return in.delete() [CD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_39 $$ return in.delete() [FD]
Line_2 $$ public boolean moveFileSafely(final File in, final File out) throws IOException --> Line_41 $$ return false [CD]
