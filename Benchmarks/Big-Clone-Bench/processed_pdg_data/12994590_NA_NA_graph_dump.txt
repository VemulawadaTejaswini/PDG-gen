Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_3 $$ File tmpFile [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_4 $$ GenericDAO<MapOriginal> mapDao = DAOFactory.createDAO(MapOriginal.class) [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_8 $$ if (file.getContentType().startsWith("image/")) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_9 $$ tmpFile = File.createTempFile("gmap", "img") [CD]
Line_3 $$ File tmpFile --> Line_9 $$ tmpFile = File.createTempFile("gmap", "img") [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_10 $$ OutputStream out = new FileOutputStream(tmpFile) [CD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_11 $$ IOUtils.copy(file.getInputStream(), out) [CD]
Line_10 $$ OutputStream out = new FileOutputStream(tmpFile) --> Line_11 $$ IOUtils.copy(file.getInputStream(), out) [FD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_11 $$ IOUtils.copy(file.getInputStream(), out) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_12 $$ out.flush() [CD]
Line_10 $$ OutputStream out = new FileOutputStream(tmpFile) --> Line_12 $$ out.flush() [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_13 $$ out.close() [CD]
Line_10 $$ OutputStream out = new FileOutputStream(tmpFile) --> Line_13 $$ out.close() [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_14 $$ map.setState(MapOriginal.MapState.UPLOAD) [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_14 $$ map.setState(MapOriginal.MapState.UPLOAD) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_15 $$ map.setUser(user) [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_15 $$ map.setUser(user) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_16 $$ map.setMapPath(tmpFile.getPath()) [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_16 $$ map.setMapPath(tmpFile.getPath()) [FD]
Line_3 $$ File tmpFile --> Line_16 $$ map.setMapPath(tmpFile.getPath()) [FD]
Line_9 $$ tmpFile = File.createTempFile("gmap", "img") --> Line_16 $$ map.setMapPath(tmpFile.getPath()) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_17 $$ map.setThumbnailUrl("/map/inproc.gif") [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_17 $$ map.setThumbnailUrl("/map/inproc.gif") [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_18 $$ map.setMimeType(file.getContentType()) [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_18 $$ map.setMimeType(file.getContentType()) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_19 $$ mapDao.saveOrUpdate(map) [CD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_19 $$ mapDao.saveOrUpdate(map) [FD]
Line_8 $$ if (file.getContentType().startsWith("image/")) --> Line_20 $$ jobid = PoolFactory.getClientPool().put(map, TaskState.STATE_MO_FINISH, MapOverrideStrategy.class) [CD]
Line_7 $$ String jobid = null --> Line_20 $$ jobid = PoolFactory.getClientPool().put(map, TaskState.STATE_MO_FINISH, MapOverrideStrategy.class) [FD]
Line_2 $$ public String saveOrUpdate(FileItem file, User user, MapOriginal map) throws HttpRpcException --> Line_20 $$ jobid = PoolFactory.getClientPool().put(map, TaskState.STATE_MO_FINISH, MapOverrideStrategy.class) [FD]
