Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_3 $$ super.execute(context) [CD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_3 $$ super.execute(context) [FD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_4 $$ debug("Start execute job " + this.getClass().getName()) [CD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_13 $$ f += "/" + name [FD]
Line_6 $$ String name = "nixspam-ip.dump.gz" --> Line_13 $$ f += "/" + name [FD]
Line_14 $$ String url = "http://www.dnsbl.manitu.net/download/" + name --> Line_16 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_16 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_13 $$ f += "/" + name --> Line_16 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_17 $$ com.utils.IOUtil.unzip(f, f.replace(".gz", "")) [FD]
Line_13 $$ f += "/" + name --> Line_17 $$ com.utils.IOUtil.unzip(f, f.replace(".gz", "")) [FD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) [FD]
Line_13 $$ f += "/" + name --> Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) [FD]
Line_19 $$ BigFile lines = null --> Line_21 $$ lines = new BigFile(file_to_read.toString()) [FD]
Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) --> Line_21 $$ lines = new BigFile(file_to_read.toString()) [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_28 $$ stat.executeUpdate(properties.get("query_delete")) [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_29 $$ stat.close() [FD]
Line_40 $$ for (String line : lines) --> Line_41 $$ if (StringUtil.isEmpty(line) || line.indexOf(" ") == -1) [FD]
Line_40 $$ for (String line : lines) --> Line_45 $$ line = line.substring(line.indexOf(" ")) [FD]
Line_40 $$ for (String line : lines) --> Line_46 $$ line = line.trim() [FD]
Line_45 $$ line = line.substring(line.indexOf(" ")) --> Line_46 $$ line = line.trim() [FD]
Line_40 $$ for (String line : lines) --> Line_47 $$ if (getIPException(line)) [FD]
Line_45 $$ line = line.substring(line.indexOf(" ")) --> Line_47 $$ if (getIPException(line)) [FD]
Line_46 $$ line = line.trim() --> Line_47 $$ if (getIPException(line)) [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_51 $$ stat.executeUpdate("insert into blacklist(url) values('" + line + "')") [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_52 $$ stat.close() [FD]
Line_39 $$ int i = 0 --> Line_53 $$ i++ [FD]
Line_38 $$ boolean ok = true --> Line_61 $$ ok = false [FD]
Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) --> Line_65 $$ boolean del = file_to_read.delete() [FD]
Line_6 $$ String name = "nixspam-ip.dump.gz" --> Line_67 $$ name = "spam-ip.com_" + DateTimeUtil.getNowWithFormat("MM-dd-yyyy") + ".csv" [FD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_68 $$ f = this.path_app_root + "/" + this.properties.get("dir") + "/" [FD]
Line_13 $$ f += "/" + name --> Line_68 $$ f = this.path_app_root + "/" + this.properties.get("dir") + "/" [FD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_70 $$ f += "/" + name [FD]
Line_13 $$ f += "/" + name --> Line_70 $$ f += "/" + name [FD]
Line_68 $$ f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_70 $$ f += "/" + name [FD]
Line_6 $$ String name = "nixspam-ip.dump.gz" --> Line_70 $$ f += "/" + name [FD]
Line_67 $$ name = "spam-ip.com_" + DateTimeUtil.getNowWithFormat("MM-dd-yyyy") + ".csv" --> Line_70 $$ f += "/" + name [FD]
Line_14 $$ String url = "http://www.dnsbl.manitu.net/download/" + name --> Line_71 $$ url = "http://spam-ip.com/csv_dump/" + name [FD]
Line_6 $$ String name = "nixspam-ip.dump.gz" --> Line_71 $$ url = "http://spam-ip.com/csv_dump/" + name [FD]
Line_67 $$ name = "spam-ip.com_" + DateTimeUtil.getNowWithFormat("MM-dd-yyyy") + ".csv" --> Line_71 $$ url = "http://spam-ip.com/csv_dump/" + name [FD]
Line_14 $$ String url = "http://www.dnsbl.manitu.net/download/" + name --> Line_73 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_71 $$ url = "http://spam-ip.com/csv_dump/" + name --> Line_73 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_7 $$ String f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_73 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_13 $$ f += "/" + name --> Line_73 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_68 $$ f = this.path_app_root + "/" + this.properties.get("dir") + "/" --> Line_73 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_70 $$ f += "/" + name --> Line_73 $$ com.utils.HttpUtil.downloadData(url, f) [FD]
Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) --> Line_74 $$ file_to_read = new File(f) [FD]
Line_19 $$ BigFile lines = null --> Line_76 $$ lines = new BigFile(file_to_read.toString()) [FD]
Line_21 $$ lines = new BigFile(file_to_read.toString()) --> Line_76 $$ lines = new BigFile(file_to_read.toString()) [FD]
Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) --> Line_76 $$ lines = new BigFile(file_to_read.toString()) [FD]
Line_74 $$ file_to_read = new File(f) --> Line_76 $$ lines = new BigFile(file_to_read.toString()) [FD]
Line_38 $$ boolean ok = true --> Line_86 $$ ok = true [FD]
Line_61 $$ ok = false --> Line_86 $$ ok = true [FD]
Line_40 $$ for (String line : lines) --> Line_88 $$ if (StringUtil.isEmpty(line) || line.indexOf(" ") == -1) [FD]
Line_45 $$ line = line.substring(line.indexOf(" ")) --> Line_88 $$ if (StringUtil.isEmpty(line) || line.indexOf(" ") == -1) [FD]
Line_46 $$ line = line.trim() --> Line_88 $$ if (StringUtil.isEmpty(line) || line.indexOf(" ") == -1) [FD]
Line_40 $$ for (String line : lines) --> Line_92 $$ line = line.split(",")[1] [FD]
Line_45 $$ line = line.substring(line.indexOf(" ")) --> Line_92 $$ line = line.split(",")[1] [FD]
Line_46 $$ line = line.trim() --> Line_92 $$ line = line.split(",")[1] [FD]
Line_40 $$ for (String line : lines) --> Line_93 $$ line = line.trim() [FD]
Line_45 $$ line = line.substring(line.indexOf(" ")) --> Line_93 $$ line = line.trim() [FD]
Line_46 $$ line = line.trim() --> Line_93 $$ line = line.trim() [FD]
Line_92 $$ line = line.split(",")[1] --> Line_93 $$ line = line.trim() [FD]
Line_40 $$ for (String line : lines) --> Line_94 $$ if (getIPException(line)) [FD]
Line_45 $$ line = line.substring(line.indexOf(" ")) --> Line_94 $$ if (getIPException(line)) [FD]
Line_46 $$ line = line.trim() --> Line_94 $$ if (getIPException(line)) [FD]
Line_92 $$ line = line.split(",")[1] --> Line_94 $$ if (getIPException(line)) [FD]
Line_93 $$ line = line.trim() --> Line_94 $$ if (getIPException(line)) [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_98 $$ stat.executeUpdate("insert into blacklist(url) values('" + line + "')") [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_99 $$ stat.close() [FD]
Line_39 $$ int i = 0 --> Line_100 $$ i++ [FD]
Line_38 $$ boolean ok = true --> Line_108 $$ ok = false [FD]
Line_61 $$ ok = false --> Line_108 $$ ok = false [FD]
Line_86 $$ ok = true --> Line_108 $$ ok = false [FD]
Line_65 $$ boolean del = file_to_read.delete() --> Line_112 $$ del = file_to_read.delete() [FD]
Line_18 $$ File file_to_read = new File(f.replaceAll(".gz", "")) --> Line_112 $$ del = file_to_read.delete() [FD]
Line_74 $$ file_to_read = new File(f) --> Line_112 $$ del = file_to_read.delete() [FD]
Line_114 $$ if (ok) --> Line_115 $$ debug("Import della BlackList Concluso tot righe: " + i) [CD]
Line_114 $$ if (ok) --> Line_122 $$ fatal("Problemi con la Blacklist") [CD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_131 $$ stat.executeUpdate("VACUUM") [FD]
Line_27 $$ Statement stat = conn_url.createStatement() --> Line_132 $$ stat.close() [FD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_139 $$ debug("End execute job " + this.getClass().getName()) [CD]
