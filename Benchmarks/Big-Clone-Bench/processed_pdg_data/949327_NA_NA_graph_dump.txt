Line_4 $$ File f = new File("test.txt") --> Line_5 $$ if (f.exists()) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_14 $$ out.write(i) [CD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_14 $$ out.write(i) [FD]
Line_12 $$ FileOutputStream out = new FileOutputStream(f) --> Line_14 $$ out.write(i) [FD]
Line_12 $$ FileOutputStream out = new FileOutputStream(f) --> Line_16 $$ out.close() [FD]
Line_8 $$ StraightStreamReader in --> Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_18 $$ for (int i = 0x00; i < 0x100; i++) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_19 $$ read = in.read() [CD]
Line_10 $$ int read --> Line_19 $$ read = in.read() [FD]
Line_8 $$ StraightStreamReader in --> Line_19 $$ read = in.read() [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_19 $$ read = in.read() [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_20 $$ if (read != i) [CD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_20 $$ if (read != i) [FD]
Line_19 $$ read = in.read() --> Line_20 $$ if (read != i) [FD]
Line_10 $$ int read --> Line_20 $$ if (read != i) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_20 $$ if (read != i) [FD]
Line_20 $$ if (read != i) --> Line_21 $$ System.err.println("Error: " + i + " read as " + read) [CD]
Line_8 $$ StraightStreamReader in --> Line_24 $$ in.close() [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_24 $$ in.close() [FD]
Line_8 $$ StraightStreamReader in --> Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_11 $$ int totRead --> Line_26 $$ totRead = in.read(cbuf) [FD]
Line_8 $$ StraightStreamReader in --> Line_26 $$ totRead = in.read(cbuf) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_26 $$ totRead = in.read(cbuf) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_26 $$ totRead = in.read(cbuf) [FD]
Line_9 $$ char[] cbuf = new char[0x1000] --> Line_26 $$ totRead = in.read(cbuf) [FD]
Line_11 $$ int totRead --> Line_27 $$ if (totRead != 0x100) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_27 $$ if (totRead != 0x100) [FD]
Line_27 $$ if (totRead != 0x100) --> Line_28 $$ System.err.println("Simple buffered read did not read the full amount: 0x" + Integer.toHexString(totRead)) [CD]
Line_11 $$ int totRead --> Line_28 $$ System.err.println("Simple buffered read did not read the full amount: 0x" + Integer.toHexString(totRead)) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_28 $$ System.err.println("Simple buffered read did not read the full amount: 0x" + Integer.toHexString(totRead)) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_30 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_30 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_11 $$ int totRead --> Line_30 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_30 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_31 $$ if (cbuf[i] != i) [CD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_31 $$ if (cbuf[i] != i) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_31 $$ if (cbuf[i] != i) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_31 $$ if (cbuf[i] != i) [FD]
Line_31 $$ if (cbuf[i] != i) --> Line_32 $$ System.err.println("Error: 0x" + i + " read as 0x" + cbuf[i]) [CD]
Line_8 $$ StraightStreamReader in --> Line_35 $$ in.close() [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_35 $$ in.close() [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_35 $$ in.close() [FD]
Line_8 $$ StraightStreamReader in --> Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_11 $$ int totRead --> Line_37 $$ totRead = 0 [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_37 $$ totRead = 0 [FD]
Line_19 $$ read = in.read() --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_10 $$ int read --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_8 $$ StraightStreamReader in --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_9 $$ char[] cbuf = new char[0x1000] --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_11 $$ int totRead --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_37 $$ totRead = 0 --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) --> Line_39 $$ totRead += read [CD]
Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) --> Line_39 $$ totRead += read [FD]
Line_11 $$ int totRead --> Line_39 $$ totRead += read [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_39 $$ totRead += read [FD]
Line_37 $$ totRead = 0 --> Line_39 $$ totRead += read [FD]
Line_19 $$ read = in.read() --> Line_39 $$ totRead += read [FD]
Line_10 $$ int read --> Line_39 $$ totRead += read [FD]
Line_39 $$ totRead += read --> Line_41 $$ if (totRead != 0x100) [FD]
Line_11 $$ int totRead --> Line_41 $$ if (totRead != 0x100) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_41 $$ if (totRead != 0x100) [FD]
Line_37 $$ totRead = 0 --> Line_41 $$ if (totRead != 0x100) [FD]
Line_41 $$ if (totRead != 0x100) --> Line_42 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [CD]
Line_39 $$ totRead += read --> Line_42 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_11 $$ int totRead --> Line_42 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_42 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_37 $$ totRead = 0 --> Line_42 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_39 $$ totRead += read --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_11 $$ int totRead --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_37 $$ totRead = 0 --> Line_44 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_44 $$ for (int i = 0x00; i < totRead; i++) --> Line_45 $$ if (cbuf[i] != i) [CD]
Line_44 $$ for (int i = 0x00; i < totRead; i++) --> Line_45 $$ if (cbuf[i] != i) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_45 $$ if (cbuf[i] != i) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_45 $$ if (cbuf[i] != i) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_45 $$ if (cbuf[i] != i) [FD]
Line_45 $$ if (cbuf[i] != i) --> Line_46 $$ System.err.println("Error: 0x" + i + " read as 0x" + cbuf[i]) [CD]
Line_8 $$ StraightStreamReader in --> Line_49 $$ in.close() [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_49 $$ in.close() [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_49 $$ in.close() [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_49 $$ in.close() [FD]
Line_8 $$ StraightStreamReader in --> Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_39 $$ totRead += read --> Line_51 $$ totRead = 0 [FD]
Line_11 $$ int totRead --> Line_51 $$ totRead = 0 [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_51 $$ totRead = 0 [FD]
Line_37 $$ totRead = 0 --> Line_51 $$ totRead = 0 [FD]
Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_19 $$ read = in.read() --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_10 $$ int read --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_8 $$ StraightStreamReader in --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_9 $$ char[] cbuf = new char[0x1000] --> Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) [FD]
Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) --> Line_53 $$ totRead += read [CD]
Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) --> Line_53 $$ totRead += read [FD]
Line_39 $$ totRead += read --> Line_53 $$ totRead += read [FD]
Line_11 $$ int totRead --> Line_53 $$ totRead += read [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_53 $$ totRead += read [FD]
Line_37 $$ totRead = 0 --> Line_53 $$ totRead += read [FD]
Line_51 $$ totRead = 0 --> Line_53 $$ totRead += read [FD]
Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) --> Line_53 $$ totRead += read [FD]
Line_19 $$ read = in.read() --> Line_53 $$ totRead += read [FD]
Line_10 $$ int read --> Line_53 $$ totRead += read [FD]
Line_53 $$ totRead += read --> Line_55 $$ if (totRead != 0x100) [FD]
Line_39 $$ totRead += read --> Line_55 $$ if (totRead != 0x100) [FD]
Line_11 $$ int totRead --> Line_55 $$ if (totRead != 0x100) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_55 $$ if (totRead != 0x100) [FD]
Line_37 $$ totRead = 0 --> Line_55 $$ if (totRead != 0x100) [FD]
Line_51 $$ totRead = 0 --> Line_55 $$ if (totRead != 0x100) [FD]
Line_55 $$ if (totRead != 0x100) --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [CD]
Line_53 $$ totRead += read --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_39 $$ totRead += read --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_11 $$ int totRead --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_37 $$ totRead = 0 --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_51 $$ totRead = 0 --> Line_56 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_44 $$ for (int i = 0x00; i < totRead; i++) --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_53 $$ totRead += read --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_39 $$ totRead += read --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_11 $$ int totRead --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_37 $$ totRead = 0 --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_51 $$ totRead = 0 --> Line_58 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_58 $$ for (int i = 0x00; i < totRead; i++) --> Line_59 $$ if (cbuf[i + 0x123] != i) [CD]
Line_58 $$ for (int i = 0x00; i < totRead; i++) --> Line_59 $$ if (cbuf[i + 0x123] != i) [FD]
Line_44 $$ for (int i = 0x00; i < totRead; i++) --> Line_59 $$ if (cbuf[i + 0x123] != i) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_59 $$ if (cbuf[i + 0x123] != i) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_59 $$ if (cbuf[i + 0x123] != i) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_59 $$ if (cbuf[i + 0x123] != i) [FD]
Line_59 $$ if (cbuf[i + 0x123] != i) --> Line_60 $$ System.err.println("Error: 0x" + i + " read as 0x" + cbuf[i + 0x123]) [CD]
Line_8 $$ StraightStreamReader in --> Line_63 $$ in.close() [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_63 $$ in.close() [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_63 $$ in.close() [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_63 $$ in.close() [FD]
Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_63 $$ in.close() [FD]
Line_8 $$ StraightStreamReader in --> Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) [FD]
Line_53 $$ totRead += read --> Line_65 $$ totRead = 0 [FD]
Line_39 $$ totRead += read --> Line_65 $$ totRead = 0 [FD]
Line_11 $$ int totRead --> Line_65 $$ totRead = 0 [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_65 $$ totRead = 0 [FD]
Line_37 $$ totRead = 0 --> Line_65 $$ totRead = 0 [FD]
Line_51 $$ totRead = 0 --> Line_65 $$ totRead = 0 [FD]
Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_19 $$ read = in.read() --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_10 $$ int read --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_8 $$ StraightStreamReader in --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_9 $$ char[] cbuf = new char[0x1000] --> Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) [FD]
Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) --> Line_67 $$ totRead += read [CD]
Line_66 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 7)) > 0) --> Line_67 $$ totRead += read [FD]
Line_53 $$ totRead += read --> Line_67 $$ totRead += read [FD]
Line_39 $$ totRead += read --> Line_67 $$ totRead += read [FD]
Line_11 $$ int totRead --> Line_67 $$ totRead += read [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_67 $$ totRead += read [FD]
Line_37 $$ totRead = 0 --> Line_67 $$ totRead += read [FD]
Line_51 $$ totRead = 0 --> Line_67 $$ totRead += read [FD]
Line_65 $$ totRead = 0 --> Line_67 $$ totRead += read [FD]
Line_52 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead + 0x123, 0x100 - totRead)) > 0) --> Line_67 $$ totRead += read [FD]
Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) --> Line_67 $$ totRead += read [FD]
Line_19 $$ read = in.read() --> Line_67 $$ totRead += read [FD]
Line_10 $$ int read --> Line_67 $$ totRead += read [FD]
Line_67 $$ totRead += read --> Line_69 $$ if (totRead != 0x100) [FD]
Line_53 $$ totRead += read --> Line_69 $$ if (totRead != 0x100) [FD]
Line_39 $$ totRead += read --> Line_69 $$ if (totRead != 0x100) [FD]
Line_11 $$ int totRead --> Line_69 $$ if (totRead != 0x100) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_69 $$ if (totRead != 0x100) [FD]
Line_37 $$ totRead = 0 --> Line_69 $$ if (totRead != 0x100) [FD]
Line_51 $$ totRead = 0 --> Line_69 $$ if (totRead != 0x100) [FD]
Line_65 $$ totRead = 0 --> Line_69 $$ if (totRead != 0x100) [FD]
Line_69 $$ if (totRead != 0x100) --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [CD]
Line_67 $$ totRead += read --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_53 $$ totRead += read --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_39 $$ totRead += read --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_11 $$ int totRead --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_37 $$ totRead = 0 --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_51 $$ totRead = 0 --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_65 $$ totRead = 0 --> Line_70 $$ System.err.println("Not enough read. Bytes read: " + Integer.toHexString(totRead)) [FD]
Line_58 $$ for (int i = 0x00; i < totRead; i++) --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_44 $$ for (int i = 0x00; i < totRead; i++) --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_67 $$ totRead += read --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_53 $$ totRead += read --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_39 $$ totRead += read --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_11 $$ int totRead --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_26 $$ totRead = in.read(cbuf) --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_37 $$ totRead = 0 --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_51 $$ totRead = 0 --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_65 $$ totRead = 0 --> Line_72 $$ for (int i = 0x00; i < totRead; i++) [FD]
Line_72 $$ for (int i = 0x00; i < totRead; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [CD]
Line_72 $$ for (int i = 0x00; i < totRead; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [FD]
Line_58 $$ for (int i = 0x00; i < totRead; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [FD]
Line_44 $$ for (int i = 0x00; i < totRead; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [FD]
Line_30 $$ for (int i = 0x00; i < totRead; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [FD]
Line_18 $$ for (int i = 0x00; i < 0x100; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [FD]
Line_13 $$ for (int i = 0x00; i < 0x100; i++) --> Line_73 $$ if (cbuf[i + 0x123] != i) [FD]
Line_73 $$ if (cbuf[i + 0x123] != i) --> Line_74 $$ System.err.println("Error: 0x" + i + " read as 0x" + cbuf[i + 0x123]) [CD]
Line_8 $$ StraightStreamReader in --> Line_77 $$ in.close() [FD]
Line_17 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_77 $$ in.close() [FD]
Line_25 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_77 $$ in.close() [FD]
Line_36 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_77 $$ in.close() [FD]
Line_50 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_77 $$ in.close() [FD]
Line_64 $$ in = new StraightStreamReader(new FileInputStream(f)) --> Line_77 $$ in.close() [FD]
Line_4 $$ File f = new File("test.txt") --> Line_78 $$ f.delete() [FD]
Line_39 $$ totRead += read --> Line_38 $$ while (totRead <= 0x100 && (read = in.read(cbuf, totRead, 0x100 - totRead)) > 0) [FD]
