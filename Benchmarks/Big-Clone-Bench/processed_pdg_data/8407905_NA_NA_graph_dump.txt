Line_2 $$ private void copyResources(File oggDecDir, String[] resources, String resPrefix) throws FileNotFoundException, IOException --> Line_3 $$ for (int i = 0; i < resources.length; i++) [CD]
Line_3 $$ for (int i = 0; i < resources.length; i++) --> Line_4 $$ String res = resPrefix + resources[i] [CD]
Line_3 $$ for (int i = 0; i < resources.length; i++) --> Line_5 $$ InputStream is = this.getClass().getResourceAsStream(res) [CD]
Line_4 $$ String res = resPrefix + resources[i] --> Line_5 $$ InputStream is = this.getClass().getResourceAsStream(res) [FD]
Line_3 $$ for (int i = 0; i < resources.length; i++) --> Line_6 $$ if (is == null) [CD]
Line_5 $$ InputStream is = this.getClass().getResourceAsStream(res) --> Line_6 $$ if (is == null) [FD]
Line_3 $$ for (int i = 0; i < resources.length; i++) --> Line_7 $$ File file = new File(oggDecDir, resources[i]) [CD]
Line_3 $$ for (int i = 0; i < resources.length; i++) --> Line_8 $$ if (!file.exists() || file.length() == 0) [CD]
Line_7 $$ File file = new File(oggDecDir, resources[i]) --> Line_8 $$ if (!file.exists() || file.length() == 0) [FD]
Line_8 $$ if (!file.exists() || file.length() == 0) --> Line_9 $$ FileOutputStream fos = new FileOutputStream(file) [CD]
Line_5 $$ InputStream is = this.getClass().getResourceAsStream(res) --> Line_11 $$ IOUtils.copyStreams(is, fos) [FD]
Line_9 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_11 $$ IOUtils.copyStreams(is, fos) [FD]
Line_9 $$ FileOutputStream fos = new FileOutputStream(file) --> Line_13 $$ fos.close() [FD]
