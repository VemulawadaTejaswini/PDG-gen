Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_3 $$ if (efile.isDirectory()) [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_3 $$ if (efile.isDirectory()) [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_4 $$ File[] lf = efile.listFiles() [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_4 $$ File[] lf = efile.listFiles() [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_5 $$ base = base + File.separator + efile.getName() [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_5 $$ base = base + File.separator + efile.getName() [FD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_7 $$ zip(zos, file, base) [FD]
Line_6 $$ for (File file : lf) --> Line_7 $$ zip(zos, file, base) [FD]
Line_5 $$ base = base + File.separator + efile.getName() --> Line_7 $$ zip(zos, file, base) [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_10 $$ ZipArchiveEntry entry = new ZipArchiveEntry(efile, base + File.separator + efile.getName()) [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_10 $$ ZipArchiveEntry entry = new ZipArchiveEntry(efile, base + File.separator + efile.getName()) [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_11 $$ zos.setEncoding("utf-8") [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_11 $$ zos.setEncoding("utf-8") [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_12 $$ zos.putArchiveEntry(entry) [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_12 $$ zos.putArchiveEntry(entry) [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_13 $$ InputStream is = new FileInputStream(efile) [CD]
Line_3 $$ if (efile.isDirectory()) --> Line_14 $$ IOUtils.copy(is, zos) [CD]
Line_13 $$ InputStream is = new FileInputStream(efile) --> Line_14 $$ IOUtils.copy(is, zos) [FD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_14 $$ IOUtils.copy(is, zos) [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_15 $$ is.close() [CD]
Line_13 $$ InputStream is = new FileInputStream(efile) --> Line_15 $$ is.close() [FD]
Line_3 $$ if (efile.isDirectory()) --> Line_16 $$ zos.closeArchiveEntry() [CD]
Line_2 $$ private static void zip(ZipArchiveOutputStream zos, File efile, String base) throws IOException --> Line_16 $$ zos.closeArchiveEntry() [FD]
