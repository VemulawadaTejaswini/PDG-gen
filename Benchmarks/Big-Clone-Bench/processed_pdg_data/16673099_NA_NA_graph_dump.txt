Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_3 $$ java.io.FileInputStream inputStream = null [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_4 $$ java.nio.channels.FileChannel sourceChannel = null [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_5 $$ java.io.FileOutputStream outputStream = null [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_6 $$ java.nio.channels.FileChannel destChannel = null [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_7 $$ long size = source.length() [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_7 $$ long size = source.length() [FD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_8 $$ long bufferSize = 1024 [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_9 $$ long count = 0 [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_10 $$ if (size < bufferSize) [CD]
Line_7 $$ long size = source.length() --> Line_10 $$ if (size < bufferSize) [FD]
Line_8 $$ long bufferSize = 1024 --> Line_10 $$ if (size < bufferSize) [FD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_11 $$ Exception exception = null [CD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_13 $$ if (dest.exists() == false) [FD]
Line_3 $$ java.io.FileInputStream inputStream = null --> Line_14 $$ inputStream = new java.io.FileInputStream(source) [FD]
Line_4 $$ java.nio.channels.FileChannel sourceChannel = null --> Line_15 $$ sourceChannel = inputStream.getChannel() [FD]
Line_3 $$ java.io.FileInputStream inputStream = null --> Line_15 $$ sourceChannel = inputStream.getChannel() [FD]
Line_14 $$ inputStream = new java.io.FileInputStream(source) --> Line_15 $$ sourceChannel = inputStream.getChannel() [FD]
Line_5 $$ java.io.FileOutputStream outputStream = null --> Line_16 $$ outputStream = new java.io.FileOutputStream(dest) [FD]
Line_6 $$ java.nio.channels.FileChannel destChannel = null --> Line_17 $$ destChannel = outputStream.getChannel() [FD]
Line_5 $$ java.io.FileOutputStream outputStream = null --> Line_17 $$ destChannel = outputStream.getChannel() [FD]
Line_16 $$ outputStream = new java.io.FileOutputStream(dest) --> Line_17 $$ destChannel = outputStream.getChannel() [FD]
Line_9 $$ long count = 0 --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_7 $$ long size = source.length() --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_4 $$ java.nio.channels.FileChannel sourceChannel = null --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_15 $$ sourceChannel = inputStream.getChannel() --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_8 $$ long bufferSize = 1024 --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_10 $$ if (size < bufferSize) --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_6 $$ java.nio.channels.FileChannel destChannel = null --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_17 $$ destChannel = outputStream.getChannel() --> Line_18 $$ while (count < size) count += sourceChannel.transferTo(count, bufferSize, destChannel) [FD]
Line_11 $$ Exception exception = null --> Line_20 $$ exception = e [FD]
Line_4 $$ java.nio.channels.FileChannel sourceChannel = null --> Line_22 $$ closeFileChannel(sourceChannel) [FD]
Line_15 $$ sourceChannel = inputStream.getChannel() --> Line_22 $$ closeFileChannel(sourceChannel) [FD]
Line_6 $$ java.nio.channels.FileChannel destChannel = null --> Line_23 $$ closeFileChannel(destChannel) [FD]
Line_17 $$ destChannel = outputStream.getChannel() --> Line_23 $$ closeFileChannel(destChannel) [FD]
Line_2 $$ public static void copyTo(java.io.File source, java.io.File dest) throws Exception --> Line_25 $$ if (exception != null) [CD]
Line_11 $$ Exception exception = null --> Line_25 $$ if (exception != null) [FD]
Line_20 $$ exception = e --> Line_25 $$ if (exception != null) [FD]
