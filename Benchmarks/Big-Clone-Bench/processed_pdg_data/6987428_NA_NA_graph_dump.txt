Line_2 $$ public void createControl(Composite parent) --> Line_4 $$ top.setLayout(new GridLayout()) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_5 $$ top.setLayoutData(new GridData(GridData.FILL_BOTH)) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_6 $$ ComposedAdapterFactory factories = new ComposedAdapterFactory() [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_7 $$ factories.addAdapterFactory(new EcoreItemProviderAdapterFactory()) [CD]
Line_6 $$ ComposedAdapterFactory factories = new ComposedAdapterFactory() --> Line_7 $$ factories.addAdapterFactory(new EcoreItemProviderAdapterFactory()) [FD]
Line_2 $$ public void createControl(Composite parent) --> Line_8 $$ factories.addAdapterFactory(new NotationAdapterFactory()) [CD]
Line_6 $$ ComposedAdapterFactory factories = new ComposedAdapterFactory() --> Line_8 $$ factories.addAdapterFactory(new NotationAdapterFactory()) [FD]
Line_2 $$ public void createControl(Composite parent) --> Line_9 $$ factories.addAdapterFactory(new ResourceItemProviderAdapterFactory()) [CD]
Line_6 $$ ComposedAdapterFactory factories = new ComposedAdapterFactory() --> Line_9 $$ factories.addAdapterFactory(new ResourceItemProviderAdapterFactory()) [FD]
Line_2 $$ public void createControl(Composite parent) --> Line_11 $$ modelViewer.getTree().setLayoutData(new GridData(GridData.FILL_BOTH)) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_14 $$ boolean result = super.hasChildren(object) [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_14 $$ boolean result = super.hasChildren(object) [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_15 $$ if (object instanceof Diagram) [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_15 $$ if (object instanceof Diagram) [FD]
Line_15 $$ if (object instanceof Diagram) --> Line_16 $$ result = false [CD]
Line_14 $$ boolean result = super.hasChildren(object) --> Line_16 $$ result = false [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_18 $$ if (object instanceof EPackage && result == false) [CD]
Line_18 $$ if (object instanceof EPackage && result == false) --> Line_19 $$ result = !DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()).isEmpty() [CD]
Line_14 $$ boolean result = super.hasChildren(object) --> Line_19 $$ result = !DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()).isEmpty() [FD]
Line_16 $$ result = false --> Line_19 $$ result = !DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()).isEmpty() [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_21 $$ return result [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_24 $$ Object[] result = super.getChildren(object) [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_24 $$ Object[] result = super.getChildren(object) [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_25 $$ if (object instanceof EPackage) [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_25 $$ if (object instanceof EPackage) [FD]
Line_25 $$ if (object instanceof EPackage) --> Line_26 $$ List<Diagram> list = DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()) [CD]
Line_25 $$ if (object instanceof EPackage) --> Line_27 $$ if (list.size() != 0) [CD]
Line_26 $$ List<Diagram> list = DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()) --> Line_27 $$ if (list.size() != 0) [FD]
Line_27 $$ if (list.size() != 0) --> Line_28 $$ Object[] newResult = new Object[result.length + list.size()] [CD]
Line_26 $$ List<Diagram> list = DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()) --> Line_28 $$ Object[] newResult = new Object[result.length + list.size()] [FD]
Line_27 $$ if (list.size() != 0) --> Line_29 $$ for (int i = 0; i < result.length; i++) [CD]
Line_29 $$ for (int i = 0; i < result.length; i++) --> Line_30 $$ newResult[i] = result[i] [CD]
Line_27 $$ if (list.size() != 0) --> Line_32 $$ for (int i = 0; i < list.size(); i++) [CD]
Line_29 $$ for (int i = 0; i < result.length; i++) --> Line_32 $$ for (int i = 0; i < list.size(); i++) [FD]
Line_26 $$ List<Diagram> list = DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()) --> Line_32 $$ for (int i = 0; i < list.size(); i++) [FD]
Line_32 $$ for (int i = 0; i < list.size(); i++) --> Line_33 $$ newResult[result.length + i] = list.get(i) [CD]
Line_32 $$ for (int i = 0; i < list.size(); i++) --> Line_33 $$ newResult[result.length + i] = list.get(i) [FD]
Line_26 $$ List<Diagram> list = DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()) --> Line_33 $$ newResult[result.length + i] = list.get(i) [FD]
Line_29 $$ for (int i = 0; i < result.length; i++) --> Line_33 $$ newResult[result.length + i] = list.get(i) [FD]
Line_27 $$ if (list.size() != 0) --> Line_35 $$ return newResult [CD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_38 $$ return result [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_43 $$ String result = super.getText(element) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_43 $$ String result = super.getText(element) [FD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_44 $$ if (element instanceof Diagram) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_44 $$ if (element instanceof Diagram) [FD]
Line_44 $$ if (element instanceof Diagram) --> Line_45 $$ if (editor.getDiagram() == element) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_45 $$ if (editor.getDiagram() == element) [FD]
Line_45 $$ if (editor.getDiagram() == element) --> Line_46 $$ result += " *" [CD]
Line_43 $$ String result = super.getText(element) --> Line_46 $$ result += " *" [FD]
Line_24 $$ Object[] result = super.getChildren(object) --> Line_46 $$ result += " *" [FD]
Line_14 $$ boolean result = super.hasChildren(object) --> Line_46 $$ result += " *" [FD]
Line_16 $$ result = false --> Line_46 $$ result += " *" [FD]
Line_19 $$ result = !DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()).isEmpty() --> Line_46 $$ result += " *" [FD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_49 $$ return result [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_52 $$ String result = super.getText(object) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_52 $$ String result = super.getText(object) [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_52 $$ String result = super.getText(object) [FD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_53 $$ if (object instanceof Diagram) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_53 $$ if (object instanceof Diagram) [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_53 $$ if (object instanceof Diagram) [FD]
Line_53 $$ if (object instanceof Diagram) --> Line_54 $$ if (editor.getDiagram() == object) [CD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_54 $$ if (editor.getDiagram() == object) [FD]
Line_12 $$ modelViewer.setContentProvider(new AdapterFactoryContentProvider(factories) --> Line_54 $$ if (editor.getDiagram() == object) [FD]
Line_54 $$ if (editor.getDiagram() == object) --> Line_55 $$ result += " (active)" [CD]
Line_52 $$ String result = super.getText(object) --> Line_55 $$ result += " (active)" [FD]
Line_43 $$ String result = super.getText(element) --> Line_55 $$ result += " (active)" [FD]
Line_46 $$ result += " *" --> Line_55 $$ result += " (active)" [FD]
Line_24 $$ Object[] result = super.getChildren(object) --> Line_55 $$ result += " (active)" [FD]
Line_14 $$ boolean result = super.hasChildren(object) --> Line_55 $$ result += " (active)" [FD]
Line_16 $$ result = false --> Line_55 $$ result += " (active)" [FD]
Line_19 $$ result = !DiagramUtil.getDiagrams((EPackage) object, editor.getDiagram().eResource()).isEmpty() --> Line_55 $$ result += " (active)" [FD]
Line_41 $$ modelViewer.setLabelProvider(new AdapterFactoryLabelProvider(factories) --> Line_58 $$ return result [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_61 $$ modelViewer.addSelectionChangedListener(new ISelectionChangedListener() [CD]
Line_61 $$ modelViewer.addSelectionChangedListener(new ISelectionChangedListener() --> Line_63 $$ setDiagramSelection(modelViewer.getSelection()) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_66 $$ modelViewer.addDragSupport(DND.DROP_COPY, new Transfer[] [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_67 $$ modelViewer.addDoubleClickListener(new IDoubleClickListener() [CD]
Line_67 $$ modelViewer.addDoubleClickListener(new IDoubleClickListener() --> Line_69 $$ IStructuredSelection selection = (IStructuredSelection) event.getSelection() [CD]
Line_67 $$ modelViewer.addDoubleClickListener(new IDoubleClickListener() --> Line_69 $$ IStructuredSelection selection = (IStructuredSelection) event.getSelection() [FD]
Line_61 $$ modelViewer.addSelectionChangedListener(new ISelectionChangedListener() --> Line_69 $$ IStructuredSelection selection = (IStructuredSelection) event.getSelection() [FD]
Line_67 $$ modelViewer.addDoubleClickListener(new IDoubleClickListener() --> Line_70 $$ Object selectedObject = selection.getFirstElement() [CD]
Line_69 $$ IStructuredSelection selection = (IStructuredSelection) event.getSelection() --> Line_70 $$ Object selectedObject = selection.getFirstElement() [FD]
Line_67 $$ modelViewer.addDoubleClickListener(new IDoubleClickListener() --> Line_71 $$ if (selectedObject instanceof Diagram) [CD]
Line_70 $$ Object selectedObject = selection.getFirstElement() --> Line_71 $$ if (selectedObject instanceof Diagram) [FD]
Line_71 $$ if (selectedObject instanceof Diagram) --> Line_72 $$ openDiagram((Diagram) selectedObject) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_76 $$ createContextMenuFor(modelViewer) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_77 $$ editor.getDiagramGraphicalViewer().addSelectionChangedListener(new ISelectionChangedListener() [CD]
Line_77 $$ editor.getDiagramGraphicalViewer().addSelectionChangedListener(new ISelectionChangedListener() --> Line_79 $$ selectionInDiagramChange(event) [CD]
Line_77 $$ editor.getDiagramGraphicalViewer().addSelectionChangedListener(new ISelectionChangedListener() --> Line_79 $$ selectionInDiagramChange(event) [FD]
Line_67 $$ modelViewer.addDoubleClickListener(new IDoubleClickListener() --> Line_79 $$ selectionInDiagramChange(event) [FD]
Line_61 $$ modelViewer.addSelectionChangedListener(new ISelectionChangedListener() --> Line_79 $$ selectionInDiagramChange(event) [FD]
Line_2 $$ public void createControl(Composite parent) --> Line_82 $$ this.getSite().setSelectionProvider(modelViewer) [CD]
Line_2 $$ public void createControl(Composite parent) --> Line_83 $$ setInput() [CD]
