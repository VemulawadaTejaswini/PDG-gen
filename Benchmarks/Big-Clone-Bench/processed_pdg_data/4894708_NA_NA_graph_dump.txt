Line_4 $$ File saveFld = new File(imageFolder + File.separator + userDisplay.getUser().getUsername()) --> Line_5 $$ if (!saveFld.exists()) [FD]
Line_5 $$ if (!saveFld.exists()) --> Line_6 $$ if (!saveFld.mkdir()) [CD]
Line_4 $$ File saveFld = new File(imageFolder + File.separator + userDisplay.getUser().getUsername()) --> Line_6 $$ if (!saveFld.mkdir()) [FD]
Line_6 $$ if (!saveFld.mkdir()) --> Line_7 $$ logger.info("Unable to create folder: " + saveFld.getAbsolutePath()) [CD]
Line_4 $$ File saveFld = new File(imageFolder + File.separator + userDisplay.getUser().getUsername()) --> Line_7 $$ logger.info("Unable to create folder: " + saveFld.getAbsolutePath()) [FD]
Line_6 $$ if (!saveFld.mkdir()) --> Line_8 $$ return null [CD]
Line_2 $$ private String save(UploadedFile imageFile) --> Line_12 $$ IOUtils.copy(imageFile.getInputstream(), new FileOutputStream(tmp)) [FD]
Line_11 $$ File tmp = File.createTempFile("img", "img") --> Line_15 $$ BufferedImage image = ImageIO.read(tmp) [FD]
Line_15 $$ BufferedImage image = ImageIO.read(tmp) --> Line_16 $$ Image thumbnailIm = image.getScaledInstance(310, 210, Image.SCALE_SMOOTH) [FD]
Line_16 $$ Image thumbnailIm = image.getScaledInstance(310, 210, Image.SCALE_SMOOTH) --> Line_17 $$ BufferedImage thumbnailBi = new BufferedImage(thumbnailIm.getWidth(null), thumbnailIm.getHeight(null), BufferedImage.TYPE_INT_RGB) [FD]
Line_17 $$ BufferedImage thumbnailBi = new BufferedImage(thumbnailIm.getWidth(null), thumbnailIm.getHeight(null), BufferedImage.TYPE_INT_RGB) --> Line_18 $$ Graphics bg = thumbnailBi.getGraphics() [FD]
Line_18 $$ Graphics bg = thumbnailBi.getGraphics() --> Line_19 $$ bg.drawImage(thumbnailIm, 0, 0, null) [FD]
Line_16 $$ Image thumbnailIm = image.getScaledInstance(310, 210, Image.SCALE_SMOOTH) --> Line_19 $$ bg.drawImage(thumbnailIm, 0, 0, null) [FD]
Line_18 $$ Graphics bg = thumbnailBi.getGraphics() --> Line_20 $$ bg.dispose() [FD]
Line_17 $$ BufferedImage thumbnailBi = new BufferedImage(thumbnailIm.getWidth(null), thumbnailIm.getHeight(null), BufferedImage.TYPE_INT_RGB) --> Line_21 $$ ImageIO.write(thumbnailBi, "png", thumbnailImage) [FD]
Line_13 $$ File thumbnailImage = new File(saveFld + File.separator + UUID.randomUUID().toString() + ".png") --> Line_21 $$ ImageIO.write(thumbnailBi, "png", thumbnailImage) [FD]
Line_15 $$ BufferedImage image = ImageIO.read(tmp) --> Line_22 $$ ImageIO.write(image, "png", fullResolution) [FD]
Line_14 $$ File fullResolution = new File(saveFld + File.separator + UUID.randomUUID().toString() + ".png") --> Line_22 $$ ImageIO.write(image, "png", fullResolution) [FD]
Line_11 $$ File tmp = File.createTempFile("img", "img") --> Line_23 $$ if (!tmp.delete()) [FD]
Line_23 $$ if (!tmp.delete()) --> Line_24 $$ logger.info("Unable to delete: " + tmp.getAbsolutePath()) [CD]
Line_11 $$ File tmp = File.createTempFile("img", "img") --> Line_24 $$ logger.info("Unable to delete: " + tmp.getAbsolutePath()) [FD]
Line_26 $$ String imageId = UUID.randomUUID().toString() --> Line_27 $$ imageBean.addImage(imageId, new ImageRecord(imageFile.getFileName(), fullResolution.getAbsolutePath(), thumbnailImage.getAbsolutePath(), userDisplay.getUser().getUsername())) [FD]
Line_2 $$ private String save(UploadedFile imageFile) --> Line_27 $$ imageBean.addImage(imageId, new ImageRecord(imageFile.getFileName(), fullResolution.getAbsolutePath(), thumbnailImage.getAbsolutePath(), userDisplay.getUser().getUsername())) [FD]
Line_14 $$ File fullResolution = new File(saveFld + File.separator + UUID.randomUUID().toString() + ".png") --> Line_27 $$ imageBean.addImage(imageId, new ImageRecord(imageFile.getFileName(), fullResolution.getAbsolutePath(), thumbnailImage.getAbsolutePath(), userDisplay.getUser().getUsername())) [FD]
Line_13 $$ File thumbnailImage = new File(saveFld + File.separator + UUID.randomUUID().toString() + ".png") --> Line_27 $$ imageBean.addImage(imageId, new ImageRecord(imageFile.getFileName(), fullResolution.getAbsolutePath(), thumbnailImage.getAbsolutePath(), userDisplay.getUser().getUsername())) [FD]
