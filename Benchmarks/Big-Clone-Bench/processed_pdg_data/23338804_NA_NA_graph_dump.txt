Line_2 $$ public void test_setUseCaches() throws Exception --> Line_3 $$ File resources = Support_Resources.createTempFolder() [CD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_4 $$ Support_Resources.copyFile(resources, null, "hyts_att.jar") [CD]
Line_3 $$ File resources = Support_Resources.createTempFolder() --> Line_4 $$ Support_Resources.copyFile(resources, null, "hyts_att.jar") [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_5 $$ File file = new File(resources.toString() + "/hyts_att.jar") [CD]
Line_3 $$ File resources = Support_Resources.createTempFolder() --> Line_5 $$ File file = new File(resources.toString() + "/hyts_att.jar") [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_6 $$ URL url = new URL("jar:file:" + file.getPath() + "!/HasAttributes.txt") [CD]
Line_5 $$ File file = new File(resources.toString() + "/hyts_att.jar") --> Line_6 $$ URL url = new URL("jar:file:" + file.getPath() + "!/HasAttributes.txt") [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() [CD]
Line_6 $$ URL url = new URL("jar:file:" + file.getPath() + "!/HasAttributes.txt") --> Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_8 $$ connection.setUseCaches(false) [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_8 $$ connection.setUseCaches(false) [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_9 $$ InputStream in = connection.getInputStream() [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_9 $$ InputStream in = connection.getInputStream() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_10 $$ in = connection.getInputStream() [CD]
Line_9 $$ InputStream in = connection.getInputStream() --> Line_10 $$ in = connection.getInputStream() [FD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_10 $$ in = connection.getInputStream() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_11 $$ JarFile jarFile1 = connection.getJarFile() [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_11 $$ JarFile jarFile1 = connection.getJarFile() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_12 $$ JarEntry jarEntry1 = connection.getJarEntry() [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_12 $$ JarEntry jarEntry1 = connection.getJarEntry() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_13 $$ in.read() [CD]
Line_9 $$ InputStream in = connection.getInputStream() --> Line_13 $$ in.read() [FD]
Line_10 $$ in = connection.getInputStream() --> Line_13 $$ in.read() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_14 $$ in.close() [CD]
Line_9 $$ InputStream in = connection.getInputStream() --> Line_14 $$ in.close() [FD]
Line_10 $$ in = connection.getInputStream() --> Line_14 $$ in.close() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_15 $$ JarFile jarFile2 = connection.getJarFile() [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_15 $$ JarFile jarFile2 = connection.getJarFile() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_16 $$ JarEntry jarEntry2 = connection.getJarEntry() [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_16 $$ JarEntry jarEntry2 = connection.getJarEntry() [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_17 $$ assertSame(jarFile1, jarFile2) [CD]
Line_11 $$ JarFile jarFile1 = connection.getJarFile() --> Line_17 $$ assertSame(jarFile1, jarFile2) [FD]
Line_15 $$ JarFile jarFile2 = connection.getJarFile() --> Line_17 $$ assertSame(jarFile1, jarFile2) [FD]
Line_2 $$ public void test_setUseCaches() throws Exception --> Line_18 $$ assertSame(jarEntry1, jarEntry2) [CD]
Line_7 $$ JarURLConnection connection = (JarURLConnection) url.openConnection() --> Line_20 $$ connection.getInputStream() [FD]
