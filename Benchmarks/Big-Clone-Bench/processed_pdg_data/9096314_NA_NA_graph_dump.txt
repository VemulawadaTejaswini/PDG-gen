Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_3 $$ Category log = ThreadCategory.getInstance(OutageWriter.class) [CD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_4 $$ if (eventID == -1 || nodeID == -1 || ipAddr == null || serviceID == -1) [CD]
Line_4 $$ if (eventID == -1 || nodeID == -1 || ipAddr == null || serviceID == -1) --> Line_5 $$ log.warn(EventConstants.NODE_REGAINED_SERVICE_EVENT_UEI + " ignored - info incomplete - eventid/nodeid/ip/svc: " + eventID + "/" + nodeID + "/" + ipAddr + "/" + serviceID) [CD]
Line_4 $$ if (eventID == -1 || nodeID == -1 || ipAddr == null || serviceID == -1) --> Line_6 $$ return [CD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_8 $$ Connection dbConn = null [CD]
Line_8 $$ Connection dbConn = null --> Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() [FD]
Line_8 $$ Connection dbConn = null --> Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [FD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_12 $$ log.warn("\'" + EventConstants.NODE_LOST_SERVICE_EVENT_UEI + "\' for " + nodeID + "/" + ipAddr + "/" + serviceID + " ignored - table already  has an open record ") [CD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_14 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID()) [CD]
Line_8 $$ Connection dbConn = null --> Line_14 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID()) [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_14 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID()) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_15 $$ long outageID = -1 [CD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_16 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery() [CD]
Line_14 $$ PreparedStatement getNextOutageIdStmt = dbConn.prepareStatement(OutageManagerConfigFactory.getInstance().getGetNextOutageID()) --> Line_16 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery() [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_17 $$ if (seqRS.next()) [CD]
Line_16 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery() --> Line_17 $$ if (seqRS.next()) [FD]
Line_17 $$ if (seqRS.next()) --> Line_18 $$ outageID = seqRS.getLong(1) [CD]
Line_15 $$ long outageID = -1 --> Line_18 $$ outageID = seqRS.getLong(1) [FD]
Line_16 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery() --> Line_18 $$ outageID = seqRS.getLong(1) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_20 $$ seqRS.close() [CD]
Line_16 $$ ResultSet seqRS = getNextOutageIdStmt.executeQuery() --> Line_20 $$ seqRS.close() [FD]
Line_8 $$ Connection dbConn = null --> Line_22 $$ dbConn.setAutoCommit(false) [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_22 $$ dbConn.setAutoCommit(false) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_27 $$ PreparedStatement newOutageWriter = null [CD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_28 $$ log.debug("handleNodeLostService: creating new outage entry...") [CD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) [FD]
Line_8 $$ Connection dbConn = null --> Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_30 $$ newOutageWriter.setLong(1, outageID) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_30 $$ newOutageWriter.setLong(1, outageID) [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_30 $$ newOutageWriter.setLong(1, outageID) [FD]
Line_15 $$ long outageID = -1 --> Line_30 $$ newOutageWriter.setLong(1, outageID) [FD]
Line_18 $$ outageID = seqRS.getLong(1) --> Line_30 $$ newOutageWriter.setLong(1, outageID) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_31 $$ newOutageWriter.setLong(2, eventID) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_31 $$ newOutageWriter.setLong(2, eventID) [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_31 $$ newOutageWriter.setLong(2, eventID) [FD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_31 $$ newOutageWriter.setLong(2, eventID) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_32 $$ newOutageWriter.setLong(3, nodeID) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_32 $$ newOutageWriter.setLong(3, nodeID) [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_32 $$ newOutageWriter.setLong(3, nodeID) [FD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_32 $$ newOutageWriter.setLong(3, nodeID) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_33 $$ newOutageWriter.setString(4, ipAddr) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_33 $$ newOutageWriter.setString(4, ipAddr) [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_33 $$ newOutageWriter.setString(4, ipAddr) [FD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_33 $$ newOutageWriter.setString(4, ipAddr) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_34 $$ newOutageWriter.setLong(5, serviceID) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_34 $$ newOutageWriter.setLong(5, serviceID) [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_34 $$ newOutageWriter.setLong(5, serviceID) [FD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_34 $$ newOutageWriter.setLong(5, serviceID) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_35 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime)) [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_35 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime)) [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_35 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime)) [FD]
Line_2 $$ private void handleNodeLostService(long eventID, long nodeID, String ipAddr, long serviceID, String eventTime) --> Line_35 $$ newOutageWriter.setTimestamp(6, convertEventTimeIntoTimestamp(eventTime)) [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_36 $$ newOutageWriter.executeUpdate() [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_36 $$ newOutageWriter.executeUpdate() [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_36 $$ newOutageWriter.executeUpdate() [FD]
Line_11 $$ if (openOutageExists(dbConn, nodeID, ipAddr, serviceID)) --> Line_37 $$ newOutageWriter.close() [CD]
Line_27 $$ PreparedStatement newOutageWriter = null --> Line_37 $$ newOutageWriter.close() [FD]
Line_29 $$ newOutageWriter = dbConn.prepareStatement(OutageConstants.DB_INS_NEW_OUTAGE) --> Line_37 $$ newOutageWriter.close() [FD]
Line_8 $$ Connection dbConn = null --> Line_39 $$ dbConn.commit() [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_39 $$ dbConn.commit() [FD]
Line_8 $$ Connection dbConn = null --> Line_44 $$ dbConn.rollback() [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_44 $$ dbConn.rollback() [FD]
Line_8 $$ Connection dbConn = null --> Line_54 $$ if (dbConn != null) [FD]
Line_10 $$ dbConn = DatabaseConnectionFactory.getInstance().getConnection() --> Line_54 $$ if (dbConn != null) [FD]
