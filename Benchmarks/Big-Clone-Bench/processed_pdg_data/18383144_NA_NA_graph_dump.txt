Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_3 $$ Connection db = context.getConnection() [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_3 $$ Connection db = context.getConnection() [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_4 $$ Statement st = null [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_5 $$ String q = null [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_7 $$ int amount = 0 [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_8 $$ if (subscriber == null) [CD]
Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") --> Line_8 $$ if (subscriber == null) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_11 $$ Object response = context.get("Response") [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_11 $$ Object response = context.get("Response") [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_12 $$ if (response == null) [CD]
Line_11 $$ Object response = context.get("Response") --> Line_12 $$ if (response == null) [FD]
Line_12 $$ if (response == null) --> Line_15 $$ Context scratch = (Context) context.clone() [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_15 $$ Context scratch = (Context) context.clone() [FD]
Line_12 $$ if (response == null) --> Line_16 $$ TableDescriptor.getDescriptor("response", "response", scratch).fetch(scratch) [CD]
Line_15 $$ Context scratch = (Context) context.clone() --> Line_16 $$ TableDescriptor.getDescriptor("response", "response", scratch).fetch(scratch) [FD]
Line_12 $$ if (response == null) --> Line_17 $$ Integer author = scratch.getValueAsInteger("author") [CD]
Line_15 $$ Context scratch = (Context) context.clone() --> Line_17 $$ Integer author = scratch.getValueAsInteger("author") [FD]
Line_12 $$ if (response == null) --> Line_18 $$ if (subscriber.equals(author)) [CD]
Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") --> Line_18 $$ if (subscriber.equals(author)) [FD]
Line_17 $$ Integer author = scratch.getValueAsInteger("author") --> Line_18 $$ if (subscriber.equals(author)) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_22 $$ context.put("moderator", subscriber) [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_22 $$ context.put("moderator", subscriber) [FD]
Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") --> Line_22 $$ context.put("moderator", subscriber) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_23 $$ context.put("moderated", response) [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_23 $$ context.put("moderated", response) [FD]
Line_11 $$ Object response = context.get("Response") --> Line_23 $$ context.put("moderated", response) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_24 $$ if (db != null) [CD]
Line_3 $$ Connection db = context.getConnection() --> Line_24 $$ if (db != null) [FD]
Line_4 $$ Statement st = null --> Line_26 $$ st = db.createStatement() [FD]
Line_3 $$ Connection db = context.getConnection() --> Line_26 $$ st = db.createStatement() [FD]
Line_5 $$ String q = null --> Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() [FD]
Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") --> Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() [FD]
Line_4 $$ Statement st = null --> Line_28 $$ ResultSet r = st.executeQuery(q) [FD]
Line_26 $$ st = db.createStatement() --> Line_28 $$ ResultSet r = st.executeQuery(q) [FD]
Line_5 $$ String q = null --> Line_28 $$ ResultSet r = st.executeQuery(q) [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_28 $$ ResultSet r = st.executeQuery(q) [FD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_29 $$ if (r.next()) [FD]
Line_29 $$ if (r.next()) --> Line_30 $$ if (r.getInt("mods") < 1) [CD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_30 $$ if (r.getInt("mods") < 1) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_36 $$ Object reason = context.get("reason") [FD]
Line_5 $$ String q = null --> Line_37 $$ q = "select score from modreason where modreason = " + reason [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_37 $$ q = "select score from modreason where modreason = " + reason [FD]
Line_36 $$ Object reason = context.get("reason") --> Line_37 $$ q = "select score from modreason where modreason = " + reason [FD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_38 $$ r = st.executeQuery(q) [FD]
Line_4 $$ Statement st = null --> Line_38 $$ r = st.executeQuery(q) [FD]
Line_26 $$ st = db.createStatement() --> Line_38 $$ r = st.executeQuery(q) [FD]
Line_5 $$ String q = null --> Line_38 $$ r = st.executeQuery(q) [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_38 $$ r = st.executeQuery(q) [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_38 $$ r = st.executeQuery(q) [FD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_39 $$ if (r.next()) [FD]
Line_38 $$ r = st.executeQuery(q) --> Line_39 $$ if (r.next()) [FD]
Line_39 $$ if (r.next()) --> Line_40 $$ amount = r.getInt("score") [CD]
Line_7 $$ int amount = 0 --> Line_40 $$ amount = r.getInt("score") [FD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_40 $$ amount = r.getInt("score") [FD]
Line_38 $$ r = st.executeQuery(q) --> Line_40 $$ amount = r.getInt("score") [FD]
Line_39 $$ if (r.next()) --> Line_41 $$ context.put("amount", new Integer(amount)) [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_41 $$ context.put("amount", new Integer(amount)) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_45 $$ context.put(keyField, null) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_46 $$ if (super.store(context, db)) [FD]
Line_3 $$ Connection db = context.getConnection() --> Line_46 $$ if (super.store(context, db)) [FD]
Line_46 $$ if (super.store(context, db)) --> Line_47 $$ db.setAutoCommit(false) [CD]
Line_3 $$ Connection db = context.getConnection() --> Line_47 $$ db.setAutoCommit(false) [FD]
Line_46 $$ if (super.store(context, db)) --> Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response [CD]
Line_5 $$ String q = null --> Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response [FD]
Line_11 $$ Object response = context.get("Response") --> Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response [FD]
Line_46 $$ if (super.store(context, db)) --> Line_49 $$ st.executeUpdate(q) [CD]
Line_4 $$ Statement st = null --> Line_49 $$ st.executeUpdate(q) [FD]
Line_26 $$ st = db.createStatement() --> Line_49 $$ st.executeUpdate(q) [FD]
Line_5 $$ String q = null --> Line_49 $$ st.executeUpdate(q) [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_49 $$ st.executeUpdate(q) [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_49 $$ st.executeUpdate(q) [FD]
Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response --> Line_49 $$ st.executeUpdate(q) [FD]
Line_46 $$ if (super.store(context, db)) --> Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber [CD]
Line_5 $$ String q = null --> Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber [FD]
Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response --> Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber [FD]
Line_6 $$ Integer subscriber = context.getValueAsInteger("subscriber") --> Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber [FD]
Line_46 $$ if (super.store(context, db)) --> Line_51 $$ st.executeUpdate(q) [CD]
Line_4 $$ Statement st = null --> Line_51 $$ st.executeUpdate(q) [FD]
Line_26 $$ st = db.createStatement() --> Line_51 $$ st.executeUpdate(q) [FD]
Line_5 $$ String q = null --> Line_51 $$ st.executeUpdate(q) [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_51 $$ st.executeUpdate(q) [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_51 $$ st.executeUpdate(q) [FD]
Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response --> Line_51 $$ st.executeUpdate(q) [FD]
Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber --> Line_51 $$ st.executeUpdate(q) [FD]
Line_46 $$ if (super.store(context, db)) --> Line_52 $$ q = "select author from response " + "where response = " + response [CD]
Line_5 $$ String q = null --> Line_52 $$ q = "select author from response " + "where response = " + response [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_52 $$ q = "select author from response " + "where response = " + response [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_52 $$ q = "select author from response " + "where response = " + response [FD]
Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response --> Line_52 $$ q = "select author from response " + "where response = " + response [FD]
Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber --> Line_52 $$ q = "select author from response " + "where response = " + response [FD]
Line_11 $$ Object response = context.get("Response") --> Line_52 $$ q = "select author from response " + "where response = " + response [FD]
Line_46 $$ if (super.store(context, db)) --> Line_53 $$ r = st.executeQuery(q) [CD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_38 $$ r = st.executeQuery(q) --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_4 $$ Statement st = null --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_26 $$ st = db.createStatement() --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_5 $$ String q = null --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_27 $$ q = "select mods from subscriber where subscriber = " + subscriber.toString() --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_37 $$ q = "select score from modreason where modreason = " + reason --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_48 $$ q = "update RESPONSE set Moderation = " + "( select sum( Amount) from MODERATION " + "where Moderated = " + response + ") " + "where Response = " + response --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_50 $$ q = "update subscriber set mods = mods - 1 " + "where subscriber = " + subscriber --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_52 $$ q = "select author from response " + "where response = " + response --> Line_53 $$ r = st.executeQuery(q) [FD]
Line_46 $$ if (super.store(context, db)) --> Line_54 $$ if (r.next()) [CD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_54 $$ if (r.next()) [FD]
Line_38 $$ r = st.executeQuery(q) --> Line_54 $$ if (r.next()) [FD]
Line_53 $$ r = st.executeQuery(q) --> Line_54 $$ if (r.next()) [FD]
Line_54 $$ if (r.next()) --> Line_55 $$ int author = r.getInt("author") [CD]
Line_28 $$ ResultSet r = st.executeQuery(q) --> Line_55 $$ int author = r.getInt("author") [FD]
Line_38 $$ r = st.executeQuery(q) --> Line_55 $$ int author = r.getInt("author") [FD]
Line_53 $$ r = st.executeQuery(q) --> Line_55 $$ int author = r.getInt("author") [FD]
Line_54 $$ if (r.next()) --> Line_56 $$ if (author != 0) [CD]
Line_17 $$ Integer author = scratch.getValueAsInteger("author") --> Line_56 $$ if (author != 0) [FD]
Line_56 $$ if (author != 0) --> Line_57 $$ int points = -1 [CD]
Line_56 $$ if (author != 0) --> Line_58 $$ if (amount > 0) [CD]
Line_7 $$ int amount = 0 --> Line_58 $$ if (amount > 0) [FD]
Line_40 $$ amount = r.getInt("score") --> Line_58 $$ if (amount > 0) [FD]
Line_58 $$ if (amount > 0) --> Line_59 $$ points = 1 [CD]
Line_57 $$ int points = -1 --> Line_59 $$ points = 1 [FD]
Line_56 $$ if (author != 0) --> Line_61 $$ StringBuffer qb = new StringBuffer("update subscriber ") [CD]
Line_56 $$ if (author != 0) --> Line_62 $$ qb.append("set score = score + ").append(amount) [CD]
Line_7 $$ int amount = 0 --> Line_62 $$ qb.append("set score = score + ").append(amount) [FD]
Line_40 $$ amount = r.getInt("score") --> Line_62 $$ qb.append("set score = score + ").append(amount) [FD]
Line_61 $$ StringBuffer qb = new StringBuffer("update subscriber ") --> Line_62 $$ qb.append("set score = score + ").append(amount) [FD]
Line_56 $$ if (author != 0) --> Line_63 $$ qb.append(", mods = mods + ").append(points) [CD]
Line_57 $$ int points = -1 --> Line_63 $$ qb.append(", mods = mods + ").append(points) [FD]
Line_59 $$ points = 1 --> Line_63 $$ qb.append(", mods = mods + ").append(points) [FD]
Line_61 $$ StringBuffer qb = new StringBuffer("update subscriber ") --> Line_63 $$ qb.append(", mods = mods + ").append(points) [FD]
Line_56 $$ if (author != 0) --> Line_64 $$ qb.append(" where subscriber = ").append(author) [CD]
Line_17 $$ Integer author = scratch.getValueAsInteger("author") --> Line_64 $$ qb.append(" where subscriber = ").append(author) [FD]
Line_61 $$ StringBuffer qb = new StringBuffer("update subscriber ") --> Line_64 $$ qb.append(" where subscriber = ").append(author) [FD]
Line_56 $$ if (author != 0) --> Line_65 $$ st.executeUpdate(qb.toString()) [CD]
Line_4 $$ Statement st = null --> Line_65 $$ st.executeUpdate(qb.toString()) [FD]
Line_26 $$ st = db.createStatement() --> Line_65 $$ st.executeUpdate(qb.toString()) [FD]
Line_61 $$ StringBuffer qb = new StringBuffer("update subscriber ") --> Line_65 $$ st.executeUpdate(qb.toString()) [FD]
Line_46 $$ if (super.store(context, db)) --> Line_68 $$ db.commit() [CD]
Line_3 $$ Connection db = context.getConnection() --> Line_68 $$ db.commit() [FD]
Line_3 $$ Connection db = context.getConnection() --> Line_72 $$ db.rollback() [FD]
Line_4 $$ Statement st = null --> Line_78 $$ if (st != null) [FD]
Line_26 $$ st = db.createStatement() --> Line_78 $$ if (st != null) [FD]
Line_4 $$ Statement st = null --> Line_80 $$ st.close() [FD]
Line_26 $$ st = db.createStatement() --> Line_80 $$ st.close() [FD]
Line_78 $$ if (st != null) --> Line_83 $$ context.releaseConnection(db) [CD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_83 $$ context.releaseConnection(db) [FD]
Line_3 $$ Connection db = context.getConnection() --> Line_83 $$ context.releaseConnection(db) [FD]
Line_2 $$ protected boolean store(Context context) throws DataStoreException, ServletException --> Line_87 $$ return true [CD]
