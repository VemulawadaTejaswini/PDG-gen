Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_3 $$ super.execute(context) [CD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_3 $$ super.execute(context) [FD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_4 $$ debug("Start execute job " + this.getClass().getName()) [CD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_5 $$ String dir = this.path_app_root + "/" + this.properties.get("dir") + "/" [CD]
Line_7 $$ File dir_f = new File(dir) --> Line_8 $$ if (!dir_f.exists()) [FD]
Line_8 $$ if (!dir_f.exists()) --> Line_9 $$ debug("(0) - make dir: " + dir_f + " - ") [CD]
Line_8 $$ if (!dir_f.exists()) --> Line_10 $$ org.apache.commons.io.FileUtils.forceMkdir(dir_f) [CD]
Line_7 $$ File dir_f = new File(dir) --> Line_10 $$ org.apache.commons.io.FileUtils.forceMkdir(dir_f) [FD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_15 $$ debug("Files:" + this.properties.get("url")) [CD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_16 $$ String[] url_to_download = properties.get("url").split(";") [CD]
Line_17 $$ for (String u : url_to_download) --> Line_18 $$ if (StringUtil.isNullOrEmpty(u)) [FD]
Line_17 $$ for (String u : url_to_download) --> Line_21 $$ u = StringUtil.trim(u) [FD]
Line_17 $$ for (String u : url_to_download) --> Line_23 $$ String f_name = u.substring(u.lastIndexOf("/"), u.length()) [FD]
Line_21 $$ u = StringUtil.trim(u) --> Line_23 $$ String f_name = u.substring(u.lastIndexOf("/"), u.length()) [FD]
Line_17 $$ for (String u : url_to_download) --> Line_25 $$ com.utils.HttpUtil.downloadData(u, new File(dir + "/" + f_name).toString()) [FD]
Line_21 $$ u = StringUtil.trim(u) --> Line_25 $$ com.utils.HttpUtil.downloadData(u, new File(dir + "/" + f_name).toString()) [FD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_32 $$ String[] query_delete = properties.get("query_delete").split(";") [CD]
Line_33 $$ for (String q : query_delete) --> Line_34 $$ if (StringUtil.isNullOrEmpty(q)) [FD]
Line_33 $$ for (String q : query_delete) --> Line_37 $$ q = StringUtil.trim(q) [FD]
Line_40 $$ Statement stat = conn_stats.createStatement() --> Line_41 $$ stat.executeUpdate(q) [FD]
Line_33 $$ for (String q : query_delete) --> Line_41 $$ stat.executeUpdate(q) [FD]
Line_37 $$ q = StringUtil.trim(q) --> Line_41 $$ stat.executeUpdate(q) [FD]
Line_40 $$ Statement stat = conn_stats.createStatement() --> Line_42 $$ stat.close() [FD]
Line_17 $$ for (String u : url_to_download) --> Line_53 $$ if (StringUtil.isNullOrEmpty(u)) [FD]
Line_21 $$ u = StringUtil.trim(u) --> Line_53 $$ if (StringUtil.isNullOrEmpty(u)) [FD]
Line_17 $$ for (String u : url_to_download) --> Line_56 $$ u = StringUtil.trim(u) [FD]
Line_21 $$ u = StringUtil.trim(u) --> Line_56 $$ u = StringUtil.trim(u) [FD]
Line_17 $$ for (String u : url_to_download) --> Line_59 $$ String f_name = new File(dir + "/" + u.substring(u.lastIndexOf("/"), u.length())).toString() [FD]
Line_21 $$ u = StringUtil.trim(u) --> Line_59 $$ String f_name = new File(dir + "/" + u.substring(u.lastIndexOf("/"), u.length())).toString() [FD]
Line_56 $$ u = StringUtil.trim(u) --> Line_59 $$ String f_name = new File(dir + "/" + u.substring(u.lastIndexOf("/"), u.length())).toString() [FD]
Line_63 $$ for (String l : lines) --> Line_64 $$ String fields[] = l.split(",") [FD]
Line_23 $$ String f_name = u.substring(u.lastIndexOf("/"), u.length()) --> Line_66 $$ if (f_name.indexOf("hip_countries.csv") != -1) [FD]
Line_66 $$ if (f_name.indexOf("hip_countries.csv") != -1) --> Line_67 $$ query = "insert into hip_countries values (" + fields[0] + ",'" + normalize(fields[1]) + "','" + normalize(fields[2]) + "')" [CD]
Line_65 $$ String query = "" --> Line_67 $$ query = "insert into hip_countries values (" + fields[0] + ",'" + normalize(fields[1]) + "','" + normalize(fields[2]) + "')" [FD]
Line_66 $$ if (f_name.indexOf("hip_countries.csv") != -1) --> Line_68 $$ if (f_name.indexOf("hip_ip4_city_lat_lng.csv") != -1) [CD]
Line_23 $$ String f_name = u.substring(u.lastIndexOf("/"), u.length()) --> Line_68 $$ if (f_name.indexOf("hip_ip4_city_lat_lng.csv") != -1) [FD]
Line_68 $$ if (f_name.indexOf("hip_ip4_city_lat_lng.csv") != -1) --> Line_69 $$ query = "insert into hip_ip4_city_lat_lng values (" + fields[0] + ",'" + normalize(fields[1]) + "'," + fields[2] + "," + fields[3] + ")" [CD]
Line_65 $$ String query = "" --> Line_69 $$ query = "insert into hip_ip4_city_lat_lng values (" + fields[0] + ",'" + normalize(fields[1]) + "'," + fields[2] + "," + fields[3] + ")" [FD]
Line_67 $$ query = "insert into hip_countries values (" + fields[0] + ",'" + normalize(fields[1]) + "','" + normalize(fields[2]) + "')" --> Line_69 $$ query = "insert into hip_ip4_city_lat_lng values (" + fields[0] + ",'" + normalize(fields[1]) + "'," + fields[2] + "," + fields[3] + ")" [FD]
Line_68 $$ if (f_name.indexOf("hip_ip4_city_lat_lng.csv") != -1) --> Line_70 $$ if (f_name.indexOf("hip_ip4_country.csv") != -1) [CD]
Line_23 $$ String f_name = u.substring(u.lastIndexOf("/"), u.length()) --> Line_70 $$ if (f_name.indexOf("hip_ip4_country.csv") != -1) [FD]
Line_70 $$ if (f_name.indexOf("hip_ip4_country.csv") != -1) --> Line_71 $$ query = "insert into hip_ip4_country values (" + fields[0] + "," + fields[1] + ")" [CD]
Line_65 $$ String query = "" --> Line_71 $$ query = "insert into hip_ip4_country values (" + fields[0] + "," + fields[1] + ")" [FD]
Line_67 $$ query = "insert into hip_countries values (" + fields[0] + ",'" + normalize(fields[1]) + "','" + normalize(fields[2]) + "')" --> Line_71 $$ query = "insert into hip_ip4_country values (" + fields[0] + "," + fields[1] + ")" [FD]
Line_69 $$ query = "insert into hip_ip4_city_lat_lng values (" + fields[0] + ",'" + normalize(fields[1]) + "'," + fields[2] + "," + fields[3] + ")" --> Line_71 $$ query = "insert into hip_ip4_country values (" + fields[0] + "," + fields[1] + ")" [FD]
Line_40 $$ Statement stat = conn_stats.createStatement() --> Line_74 $$ stat.executeUpdate(query) [FD]
Line_65 $$ String query = "" --> Line_74 $$ stat.executeUpdate(query) [FD]
Line_67 $$ query = "insert into hip_countries values (" + fields[0] + ",'" + normalize(fields[1]) + "','" + normalize(fields[2]) + "')" --> Line_74 $$ stat.executeUpdate(query) [FD]
Line_69 $$ query = "insert into hip_ip4_city_lat_lng values (" + fields[0] + ",'" + normalize(fields[1]) + "'," + fields[2] + "," + fields[3] + ")" --> Line_74 $$ stat.executeUpdate(query) [FD]
Line_71 $$ query = "insert into hip_ip4_country values (" + fields[0] + "," + fields[1] + ")" --> Line_74 $$ stat.executeUpdate(query) [FD]
Line_62 $$ int n = 0 --> Line_75 $$ n++ [FD]
Line_40 $$ Statement stat = conn_stats.createStatement() --> Line_78 $$ stat.close() [FD]
Line_40 $$ Statement stat = conn_stats.createStatement() --> Line_106 $$ stat.executeUpdate("VACUUM") [FD]
Line_40 $$ Statement stat = conn_stats.createStatement() --> Line_107 $$ stat.close() [FD]
Line_2 $$ public void execute(JobExecutionContext context) throws JobExecutionException --> Line_111 $$ debug("End execute job " + this.getClass().getName()) [CD]
