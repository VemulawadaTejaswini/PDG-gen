Line_2 $$ public void testLoadHttpGzipped() throws Exception --> Line_3 $$ String url = HTTP_GZIPPED [CD]
Line_2 $$ public void testLoadHttpGzipped() throws Exception --> Line_4 $$ LoadingInfo loadingInfo = Utils.openFileObject(fsManager.resolveFile(url)) [CD]
Line_3 $$ String url = HTTP_GZIPPED --> Line_4 $$ LoadingInfo loadingInfo = Utils.openFileObject(fsManager.resolveFile(url)) [FD]
Line_2 $$ public void testLoadHttpGzipped() throws Exception --> Line_5 $$ InputStream contentInputStream = loadingInfo.getContentInputStream() [CD]
Line_4 $$ LoadingInfo loadingInfo = Utils.openFileObject(fsManager.resolveFile(url)) --> Line_5 $$ InputStream contentInputStream = loadingInfo.getContentInputStream() [FD]
Line_2 $$ public void testLoadHttpGzipped() throws Exception --> Line_6 $$ byte[] actual = IOUtils.toByteArray(contentInputStream) [CD]
Line_5 $$ InputStream contentInputStream = loadingInfo.getContentInputStream() --> Line_6 $$ byte[] actual = IOUtils.toByteArray(contentInputStream) [FD]
Line_2 $$ public void testLoadHttpGzipped() throws Exception --> Line_7 $$ byte[] expected = IOUtils.toByteArray(new GZIPInputStream(new URL(url).openStream())) [CD]
Line_2 $$ public void testLoadHttpGzipped() throws Exception --> Line_8 $$ assertEquals(expected.length, actual.length) [CD]
