Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_3 $$ Lookup defaultLookup = new Lookup(listFileName, majorType, minorType, languages, annotationType) [CD]
Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_4 $$ URL lurl = new URL(listsURL, listFileName) [CD]
Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_5 $$ BufferedReader listReader = new BomStrippingInputStreamReader(lurl.openStream(), encoding) [CD]
Line_4 $$ URL lurl = new URL(listsURL, listFileName) --> Line_5 $$ BufferedReader listReader = new BomStrippingInputStreamReader(lurl.openStream(), encoding) [FD]
Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_6 $$ String line [CD]
Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_7 $$ int lines = 0 [CD]
Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_8 $$ while (null != (line = listReader.readLine())) [CD]
Line_6 $$ String line --> Line_8 $$ while (null != (line = listReader.readLine())) [FD]
Line_5 $$ BufferedReader listReader = new BomStrippingInputStreamReader(lurl.openStream(), encoding) --> Line_8 $$ while (null != (line = listReader.readLine())) [FD]
Line_8 $$ while (null != (line = listReader.readLine())) --> Line_9 $$ GazetteerNode node = new GazetteerNode(line, unescapedSeparator, false) [CD]
Line_8 $$ while (null != (line = listReader.readLine())) --> Line_10 $$ Lookup lookup = defaultLookup [CD]
Line_8 $$ while (null != (line = listReader.readLine())) --> Line_11 $$ Map<String, String> fm = node.getFeatureMap() [CD]
Line_9 $$ GazetteerNode node = new GazetteerNode(line, unescapedSeparator, false) --> Line_11 $$ Map<String, String> fm = node.getFeatureMap() [FD]
Line_8 $$ while (null != (line = listReader.readLine())) --> Line_12 $$ if (fm != null && fm.size() > 0) [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_12 $$ if (fm != null && fm.size() > 0) [FD]
Line_12 $$ if (fm != null && fm.size() > 0) --> Line_13 $$ lookup = new Lookup(listFileName, majorType, minorType, languages, annotationType) [CD]
Line_10 $$ Lookup lookup = defaultLookup --> Line_13 $$ lookup = new Lookup(listFileName, majorType, minorType, languages, annotationType) [FD]
Line_12 $$ if (fm != null && fm.size() > 0) --> Line_14 $$ Set<String> keyset = fm.keySet() [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_14 $$ Set<String> keyset = fm.keySet() [FD]
Line_12 $$ if (fm != null && fm.size() > 0) --> Line_15 $$ if (keyset.size() <= 4) [CD]
Line_14 $$ Set<String> keyset = fm.keySet() --> Line_15 $$ if (keyset.size() <= 4) [FD]
Line_15 $$ if (keyset.size() <= 4) --> Line_16 $$ Map<String, String> newfm = null [CD]
Line_17 $$ for (String key : keyset) --> Line_18 $$ if (key.equals("majorType")) [FD]
Line_18 $$ if (key.equals("majorType")) --> Line_19 $$ String tmp = fm.get("majorType") [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_19 $$ String tmp = fm.get("majorType") [FD]
Line_18 $$ if (key.equals("majorType")) --> Line_20 $$ if (canonicalizeStrings) [CD]
Line_20 $$ if (canonicalizeStrings) --> Line_21 $$ tmp.intern() [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_21 $$ tmp.intern() [FD]
Line_18 $$ if (key.equals("majorType")) --> Line_23 $$ lookup.majorType = tmp [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_23 $$ lookup.majorType = tmp [FD]
Line_18 $$ if (key.equals("majorType")) --> Line_24 $$ if (key.equals("minorType")) [CD]
Line_17 $$ for (String key : keyset) --> Line_24 $$ if (key.equals("minorType")) [FD]
Line_24 $$ if (key.equals("minorType")) --> Line_25 $$ String tmp = fm.get("minorType") [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_25 $$ String tmp = fm.get("minorType") [FD]
Line_24 $$ if (key.equals("minorType")) --> Line_26 $$ if (canonicalizeStrings) [CD]
Line_26 $$ if (canonicalizeStrings) --> Line_27 $$ tmp.intern() [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_27 $$ tmp.intern() [FD]
Line_24 $$ if (key.equals("minorType")) --> Line_29 $$ lookup.minorType = tmp [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_29 $$ lookup.minorType = tmp [FD]
Line_24 $$ if (key.equals("minorType")) --> Line_30 $$ if (key.equals("languages")) [CD]
Line_17 $$ for (String key : keyset) --> Line_30 $$ if (key.equals("languages")) [FD]
Line_30 $$ if (key.equals("languages")) --> Line_31 $$ String tmp = fm.get("languages") [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_31 $$ String tmp = fm.get("languages") [FD]
Line_30 $$ if (key.equals("languages")) --> Line_32 $$ if (canonicalizeStrings) [CD]
Line_32 $$ if (canonicalizeStrings) --> Line_33 $$ tmp.intern() [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_33 $$ tmp.intern() [FD]
Line_30 $$ if (key.equals("languages")) --> Line_35 $$ lookup.languages = tmp [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_35 $$ lookup.languages = tmp [FD]
Line_30 $$ if (key.equals("languages")) --> Line_36 $$ if (key.equals("annotationType")) [CD]
Line_17 $$ for (String key : keyset) --> Line_36 $$ if (key.equals("annotationType")) [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_37 $$ String tmp = fm.get("annotationType") [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_37 $$ String tmp = fm.get("annotationType") [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_38 $$ if (canonicalizeStrings) [CD]
Line_38 $$ if (canonicalizeStrings) --> Line_39 $$ tmp.intern() [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_39 $$ tmp.intern() [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_41 $$ lookup.annotationType = tmp [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_41 $$ lookup.annotationType = tmp [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_43 $$ if (newfm == null) [CD]
Line_16 $$ Map<String, String> newfm = null --> Line_43 $$ if (newfm == null) [FD]
Line_43 $$ if (newfm == null) --> Line_44 $$ newfm = new HashMap<String, String>() [CD]
Line_16 $$ Map<String, String> newfm = null --> Line_44 $$ newfm = new HashMap<String, String>() [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_46 $$ String tmp = fm.get(key) [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_46 $$ String tmp = fm.get(key) [FD]
Line_17 $$ for (String key : keyset) --> Line_46 $$ String tmp = fm.get(key) [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_47 $$ if (canonicalizeStrings) [CD]
Line_47 $$ if (canonicalizeStrings) --> Line_48 $$ tmp.intern() [CD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_48 $$ tmp.intern() [FD]
Line_36 $$ if (key.equals("annotationType")) --> Line_50 $$ newfm.put(key, tmp) [CD]
Line_16 $$ Map<String, String> newfm = null --> Line_50 $$ newfm.put(key, tmp) [FD]
Line_44 $$ newfm = new HashMap<String, String>() --> Line_50 $$ newfm.put(key, tmp) [FD]
Line_17 $$ for (String key : keyset) --> Line_50 $$ newfm.put(key, tmp) [FD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_50 $$ newfm.put(key, tmp) [FD]
Line_15 $$ if (keyset.size() <= 4) --> Line_53 $$ if (newfm != null) [CD]
Line_16 $$ Map<String, String> newfm = null --> Line_53 $$ if (newfm != null) [FD]
Line_44 $$ newfm = new HashMap<String, String>() --> Line_53 $$ if (newfm != null) [FD]
Line_53 $$ if (newfm != null) --> Line_54 $$ lookup.features = newfm [CD]
Line_16 $$ Map<String, String> newfm = null --> Line_54 $$ lookup.features = newfm [FD]
Line_44 $$ newfm = new HashMap<String, String>() --> Line_54 $$ lookup.features = newfm [FD]
Line_15 $$ if (keyset.size() <= 4) --> Line_57 $$ if (canonicalizeStrings) [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_58 $$ for (String key : fm.keySet()) [FD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_59 $$ String tmp = fm.get(key) [FD]
Line_17 $$ for (String key : keyset) --> Line_59 $$ String tmp = fm.get(key) [FD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_60 $$ tmp.intern() [FD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_61 $$ fm.put(key, tmp) [FD]
Line_17 $$ for (String key : keyset) --> Line_61 $$ fm.put(key, tmp) [FD]
Line_19 $$ String tmp = fm.get("majorType") --> Line_61 $$ fm.put(key, tmp) [FD]
Line_15 $$ if (keyset.size() <= 4) --> Line_64 $$ lookup.features = fm [CD]
Line_11 $$ Map<String, String> fm = node.getFeatureMap() --> Line_64 $$ lookup.features = fm [FD]
Line_8 $$ while (null != (line = listReader.readLine())) --> Line_67 $$ addLookup(node.getEntry(), lookup) [CD]
Line_10 $$ Lookup lookup = defaultLookup --> Line_67 $$ addLookup(node.getEntry(), lookup) [FD]
Line_13 $$ lookup = new Lookup(listFileName, majorType, minorType, languages, annotationType) --> Line_67 $$ addLookup(node.getEntry(), lookup) [FD]
Line_9 $$ GazetteerNode node = new GazetteerNode(line, unescapedSeparator, false) --> Line_67 $$ addLookup(node.getEntry(), lookup) [FD]
Line_8 $$ while (null != (line = listReader.readLine())) --> Line_68 $$ lines++ [CD]
Line_7 $$ int lines = 0 --> Line_68 $$ lines++ [FD]
Line_2 $$ void loadListFile(String listFileName, String majorType, String minorType, String languages, String annotationType) throws MalformedURLException, IOException --> Line_70 $$ logger.debug("Lines read: " + lines) [CD]
Line_44 $$ newfm = new HashMap<String, String>() --> Line_43 $$ if (newfm == null) [FD]
