Line_2 $$ private File createWorkingCopy(File _originalRawDataFile) --> Line_3 $$ File fOriginalRawDataFile = _originalRawDataFile [CD]
Line_2 $$ private File createWorkingCopy(File _originalRawDataFile) --> Line_4 $$ File fWorkingCopy [CD]
Line_2 $$ private File createWorkingCopy(File _originalRawDataFile) --> Line_5 $$ System.gc() [CD]
Line_4 $$ File fWorkingCopy --> Line_7 $$ fWorkingCopy = File.createTempFile("MZmine", null) [FD]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(fOriginalRawDataFile).getChannel() --> Line_11 $$ long sourceChannelSize = sourceChannel.size() [FD]
Line_10 $$ long sourceChannelPos = 0 --> Line_14 $$ while (sourceChannelPos < sourceChannelSize) [FD]
Line_11 $$ long sourceChannelSize = sourceChannel.size() --> Line_14 $$ while (sourceChannelPos < sourceChannelSize) [FD]
Line_14 $$ while (sourceChannelPos < sourceChannelSize) --> Line_15 $$ long transferAmount = maxReadSize [CD]
Line_14 $$ while (sourceChannelPos < sourceChannelSize) --> Line_16 $$ if (transferAmount > (sourceChannelSize - sourceChannelPos)) [CD]
Line_15 $$ long transferAmount = maxReadSize --> Line_16 $$ if (transferAmount > (sourceChannelSize - sourceChannelPos)) [FD]
Line_16 $$ if (transferAmount > (sourceChannelSize - sourceChannelPos)) --> Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos [CD]
Line_15 $$ long transferAmount = maxReadSize --> Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos [FD]
Line_11 $$ long sourceChannelSize = sourceChannel.size() --> Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos [FD]
Line_10 $$ long sourceChannelPos = 0 --> Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos [FD]
Line_14 $$ while (sourceChannelPos < sourceChannelSize) --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [CD]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(fOriginalRawDataFile).getChannel() --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [FD]
Line_10 $$ long sourceChannelPos = 0 --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [FD]
Line_15 $$ long transferAmount = maxReadSize --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [FD]
Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [FD]
Line_9 $$ FileChannel destinationChannel = new FileOutputStream(fWorkingCopy).getChannel() --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [FD]
Line_14 $$ while (sourceChannelPos < sourceChannelSize) --> Line_20 $$ sourceChannelPos += transferAmount [CD]
Line_10 $$ long sourceChannelPos = 0 --> Line_20 $$ sourceChannelPos += transferAmount [FD]
Line_15 $$ long transferAmount = maxReadSize --> Line_20 $$ sourceChannelPos += transferAmount [FD]
Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos --> Line_20 $$ sourceChannelPos += transferAmount [FD]
Line_8 $$ FileChannel sourceChannel = new FileInputStream(fOriginalRawDataFile).getChannel() --> Line_22 $$ sourceChannel.close() [FD]
Line_9 $$ FileChannel destinationChannel = new FileOutputStream(fWorkingCopy).getChannel() --> Line_23 $$ destinationChannel.close() [FD]
Line_2 $$ private File createWorkingCopy(File _originalRawDataFile) --> Line_29 $$ return fWorkingCopy [CD]
Line_20 $$ sourceChannelPos += transferAmount --> Line_14 $$ while (sourceChannelPos < sourceChannelSize) [FD]
Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos --> Line_16 $$ if (transferAmount > (sourceChannelSize - sourceChannelPos)) [FD]
Line_20 $$ sourceChannelPos += transferAmount --> Line_17 $$ transferAmount = sourceChannelSize - sourceChannelPos [FD]
Line_20 $$ sourceChannelPos += transferAmount --> Line_19 $$ sourceChannel.transferTo(sourceChannelPos, transferAmount, destinationChannel) [FD]
