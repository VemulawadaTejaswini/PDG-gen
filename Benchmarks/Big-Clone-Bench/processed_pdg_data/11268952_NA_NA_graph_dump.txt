Line_2 $$ public Vector split() --> Line_3 $$ File nextFile = new File(filename) [CD]
Line_2 $$ public Vector split() --> Line_4 $$ long fileSize = nextFile.length() [CD]
Line_3 $$ File nextFile = new File(filename) --> Line_4 $$ long fileSize = nextFile.length() [FD]
Line_2 $$ public Vector split() --> Line_5 $$ long parts = fileSize / splitSize [CD]
Line_2 $$ public Vector split() --> Line_6 $$ Vector vec = new Vector(new Long(parts).intValue()) [CD]
Line_2 $$ public Vector split() --> Line_7 $$ if (debug) [CD]
Line_7 $$ if (debug) --> Line_8 $$ System.out.println("File: " + nextFile.getName() + "\nfileSize: " + fileSize + "\nsplitSize: " + splitSize + "\nparts: " + parts) [CD]
Line_3 $$ File nextFile = new File(filename) --> Line_8 $$ System.out.println("File: " + nextFile.getName() + "\nfileSize: " + fileSize + "\nsplitSize: " + splitSize + "\nparts: " + parts) [FD]
Line_2 $$ public Vector split() --> Line_10 $$ if (fileSize % splitSize > 0) [CD]
Line_10 $$ if (fileSize % splitSize > 0) --> Line_11 $$ parts++ [CD]
Line_5 $$ long parts = fileSize / splitSize --> Line_11 $$ parts++ [FD]
Line_3 $$ File nextFile = new File(filename) --> Line_17 $$ File destinationDirectory = new File(nextFile.getParent()) [FD]
Line_17 $$ File destinationDirectory = new File(nextFile.getParent()) --> Line_18 $$ if (!destinationDirectory.exists()) [FD]
Line_18 $$ if (!destinationDirectory.exists()) --> Line_19 $$ destinationDirectory.mkdir() [CD]
Line_17 $$ File destinationDirectory = new File(nextFile.getParent()) --> Line_19 $$ destinationDirectory.mkdir() [FD]
Line_5 $$ long parts = fileSize / splitSize --> Line_21 $$ for (long k = 0; k < parts; k++) [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_22 $$ if (debug) [CD]
Line_22 $$ if (debug) --> Line_23 $$ System.out.println("Splitting parts: " + nextFile.getName() + " into part " + k) [CD]
Line_3 $$ File nextFile = new File(filename) --> Line_23 $$ System.out.println("Splitting parts: " + nextFile.getName() + " into part " + k) [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_25 $$ String filePartName = nextFile.getName() [CD]
Line_3 $$ File nextFile = new File(filename) --> Line_25 $$ String filePartName = nextFile.getName() [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_26 $$ filePartName = filePartName + "." + String.valueOf(k) [CD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_26 $$ filePartName = filePartName + "." + String.valueOf(k) [FD]
Line_25 $$ String filePartName = nextFile.getName() --> Line_26 $$ filePartName = filePartName + "." + String.valueOf(k) [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_27 $$ File outputFile = new File(destinationDirectory, filePartName) [CD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_28 $$ FileOutputStream fos = new FileOutputStream(outputFile) [CD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_29 $$ DataOutputStream dos = new DataOutputStream(fos) [CD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_30 $$ long bytesWritten = 0 [CD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_31 $$ while ((bytesWritten < splitSize) && (bytesRead < fileSize)) [CD]
Line_31 $$ while ((bytesWritten < splitSize) && (bytesRead < fileSize)) --> Line_32 $$ dos.writeByte(dis.readByte()) [CD]
Line_29 $$ DataOutputStream dos = new DataOutputStream(fos) --> Line_32 $$ dos.writeByte(dis.readByte()) [FD]
Line_15 $$ DataInputStream dis = new DataInputStream(fis) --> Line_32 $$ dos.writeByte(dis.readByte()) [FD]
Line_31 $$ while ((bytesWritten < splitSize) && (bytesRead < fileSize)) --> Line_33 $$ bytesRead++ [CD]
Line_16 $$ long bytesRead = 0 --> Line_33 $$ bytesRead++ [FD]
Line_31 $$ while ((bytesWritten < splitSize) && (bytesRead < fileSize)) --> Line_34 $$ bytesWritten++ [CD]
Line_30 $$ long bytesWritten = 0 --> Line_34 $$ bytesWritten++ [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_36 $$ dos.close() [CD]
Line_29 $$ DataOutputStream dos = new DataOutputStream(fos) --> Line_36 $$ dos.close() [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_37 $$ vec.addElement(outputFile.getAbsolutePath()) [CD]
Line_6 $$ Vector vec = new Vector(new Long(parts).intValue()) --> Line_37 $$ vec.addElement(outputFile.getAbsolutePath()) [FD]
Line_27 $$ File outputFile = new File(destinationDirectory, filePartName) --> Line_37 $$ vec.addElement(outputFile.getAbsolutePath()) [FD]
Line_21 $$ for (long k = 0; k < parts; k++) --> Line_38 $$ if (debug) [CD]
Line_38 $$ if (debug) --> Line_39 $$ System.out.println("Wrote " + bytesWritten + " bytes." + outputFile.getName() + " created.") [CD]
Line_27 $$ File outputFile = new File(destinationDirectory, filePartName) --> Line_39 $$ System.out.println("Wrote " + bytesWritten + " bytes." + outputFile.getName() + " created.") [FD]
Line_6 $$ Vector vec = new Vector(new Long(parts).intValue()) --> Line_44 $$ vec = null [FD]
Line_6 $$ Vector vec = new Vector(new Long(parts).intValue()) --> Line_47 $$ vec = null [FD]
Line_44 $$ vec = null --> Line_47 $$ vec = null [FD]
Line_2 $$ public Vector split() --> Line_49 $$ return vec [CD]
