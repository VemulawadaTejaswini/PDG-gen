Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_3 $$ File zip_output = new File(dir_output, file_input.getName() + ".zip") [CD]
Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_3 $$ File zip_output = new File(dir_output, file_input.getName() + ".zip") [FD]
Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_4 $$ ZipOutputStream zip_out_stream [CD]
Line_4 $$ ZipOutputStream zip_out_stream --> Line_7 $$ zip_out_stream = new ZipOutputStream(new BufferedOutputStream(out)) [FD]
Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_11 $$ byte[] input_buffer = new byte[BUF_SIZE] [CD]
Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_12 $$ int len = 0 [CD]
Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_14 $$ ZipEntry zip_entry = new ZipEntry(file_input.getName()) [FD]
Line_4 $$ ZipOutputStream zip_out_stream --> Line_15 $$ zip_out_stream.putNextEntry(zip_entry) [FD]
Line_7 $$ zip_out_stream = new ZipOutputStream(new BufferedOutputStream(out)) --> Line_15 $$ zip_out_stream.putNextEntry(zip_entry) [FD]
Line_12 $$ int len = 0 --> Line_18 $$ while ((len = source.read(input_buffer, 0, BUF_SIZE)) != -1) zip_out_stream.write(input_buffer, 0, len) [FD]
Line_17 $$ BufferedInputStream source = new BufferedInputStream(in, BUF_SIZE) --> Line_18 $$ while ((len = source.read(input_buffer, 0, BUF_SIZE)) != -1) zip_out_stream.write(input_buffer, 0, len) [FD]
Line_11 $$ byte[] input_buffer = new byte[BUF_SIZE] --> Line_18 $$ while ((len = source.read(input_buffer, 0, BUF_SIZE)) != -1) zip_out_stream.write(input_buffer, 0, len) [FD]
Line_4 $$ ZipOutputStream zip_out_stream --> Line_18 $$ while ((len = source.read(input_buffer, 0, BUF_SIZE)) != -1) zip_out_stream.write(input_buffer, 0, len) [FD]
Line_7 $$ zip_out_stream = new ZipOutputStream(new BufferedOutputStream(out)) --> Line_18 $$ while ((len = source.read(input_buffer, 0, BUF_SIZE)) != -1) zip_out_stream.write(input_buffer, 0, len) [FD]
Line_16 $$ FileInputStream in = new FileInputStream(file_input) --> Line_19 $$ in.close() [FD]
Line_4 $$ ZipOutputStream zip_out_stream --> Line_24 $$ zip_out_stream.close() [FD]
Line_7 $$ zip_out_stream = new ZipOutputStream(new BufferedOutputStream(out)) --> Line_24 $$ zip_out_stream.close() [FD]
Line_2 $$ public static int zipFile(File file_input, File dir_output) --> Line_27 $$ return STATUS_OK [CD]
