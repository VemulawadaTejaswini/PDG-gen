Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_3 $$ if (!info.isUTF8()) [CD]
Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_3 $$ if (!info.isUTF8()) [FD]
Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_4 $$ InputStream in = null [CD]
Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_5 $$ OutputStream out = null [CD]
Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_6 $$ print("\tConverting to ASCII... ") [CD]
Line_4 $$ InputStream in = null --> Line_8 $$ in = new BufferedInputStream(new FileInputStream(info.getFileName())) [FD]
Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_8 $$ in = new BufferedInputStream(new FileInputStream(info.getFileName())) [FD]
Line_4 $$ InputStream in = null --> Line_9 $$ in.mark(3) [FD]
Line_8 $$ in = new BufferedInputStream(new FileInputStream(info.getFileName())) --> Line_9 $$ in.mark(3) [FD]
Line_4 $$ InputStream in = null --> Line_10 $$ if (in.read() != 0xEF || in.read() != 0xBB || in.read() != 0xBF) [FD]
Line_8 $$ in = new BufferedInputStream(new FileInputStream(info.getFileName())) --> Line_10 $$ if (in.read() != 0xEF || in.read() != 0xBB || in.read() != 0xBF) [FD]
Line_5 $$ OutputStream out = null --> Line_12 $$ out = new BufferedOutputStream(new FileOutputStream(info.getAlternateFileName())) [FD]
Line_2 $$ private void native2ascii(LanguageInfo info) --> Line_12 $$ out = new BufferedOutputStream(new FileOutputStream(info.getAlternateFileName())) [FD]
Line_14 $$ String read --> Line_15 $$ while ((read = reader.readLine()) != null) [FD]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(in, "UTF8")) --> Line_15 $$ while ((read = reader.readLine()) != null) [FD]
Line_15 $$ while ((read = reader.readLine()) != null) --> Line_16 $$ writer.write(ascii(read)) [CD]
Line_15 $$ while ((read = reader.readLine()) != null) --> Line_16 $$ writer.write(ascii(read)) [FD]
Line_13 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(out, "ISO-8859-1")) --> Line_16 $$ writer.write(ascii(read)) [FD]
Line_14 $$ String read --> Line_16 $$ writer.write(ascii(read)) [FD]
Line_15 $$ while ((read = reader.readLine()) != null) --> Line_17 $$ writer.newLine() [CD]
Line_13 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(out, "ISO-8859-1")) --> Line_17 $$ writer.newLine() [FD]
Line_13 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(out, "ISO-8859-1")) --> Line_19 $$ writer.flush() [FD]
Line_5 $$ OutputStream out = null --> Line_20 $$ out.flush() [FD]
Line_12 $$ out = new BufferedOutputStream(new FileOutputStream(info.getAlternateFileName())) --> Line_20 $$ out.flush() [FD]
Line_4 $$ InputStream in = null --> Line_25 $$ if (in != null) [FD]
Line_8 $$ in = new BufferedInputStream(new FileInputStream(info.getFileName())) --> Line_25 $$ if (in != null) [FD]
Line_4 $$ InputStream in = null --> Line_26 $$ in.close() [FD]
Line_8 $$ in = new BufferedInputStream(new FileInputStream(info.getFileName())) --> Line_26 $$ in.close() [FD]
Line_5 $$ OutputStream out = null --> Line_29 $$ if (out != null) [FD]
Line_12 $$ out = new BufferedOutputStream(new FileOutputStream(info.getAlternateFileName())) --> Line_29 $$ if (out != null) [FD]
Line_5 $$ OutputStream out = null --> Line_30 $$ out.close() [FD]
Line_12 $$ out = new BufferedOutputStream(new FileOutputStream(info.getAlternateFileName())) --> Line_30 $$ out.close() [FD]
