Line_2 $$ public void saveFile(MainWindow window) --> Line_3 $$ FileOutputStream stream = null [CD]
Line_5 $$ Document outputDoc = new Document() --> Line_8 $$ outputDoc.setDocType(dtd) [FD]
Line_6 $$ DocType dtd = new DocType(UI, DIRECTORY + File.separator + FILE_NAME_DTD) --> Line_8 $$ outputDoc.setDocType(dtd) [FD]
Line_5 $$ Document outputDoc = new Document() --> Line_9 $$ outputDoc.addContent(uiElement) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_9 $$ outputDoc.addContent(uiElement) [FD]
Line_5 $$ Document outputDoc = new Document() --> Line_10 $$ outputDoc.setRootElement(uiElement) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_10 $$ outputDoc.setRootElement(uiElement) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_11 $$ uiElement.setAttribute(USE_DEFAULT, "false") [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_12 $$ uiElement.setAttribute(SHOW_TOOL_BAR, Boolean.toString(window.getToolToolBar().isVisible())) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_12 $$ uiElement.setAttribute(SHOW_TOOL_BAR, Boolean.toString(window.getToolToolBar().isVisible())) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_13 $$ uiElement.setAttribute(SHOW_UNIT_BAR, Boolean.toString(window.getUnitToolBar().isVisible())) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_13 $$ uiElement.setAttribute(SHOW_UNIT_BAR, Boolean.toString(window.getUnitToolBar().isVisible())) [FD]
Line_14 $$ String currentLFClassName = UIManager.getLookAndFeel().getClass().getName() --> Line_16 $$ if (currentLFClassName.equals(systemLFClassName)) [FD]
Line_15 $$ String systemLFClassName = UIManager.getSystemLookAndFeelClassName() --> Line_16 $$ if (currentLFClassName.equals(systemLFClassName)) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_16 $$ if (currentLFClassName.equals(systemLFClassName)) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_18 $$ uiElement.addContent(mainWindowElement) [FD]
Line_17 $$ Element mainWindowElement = new Element(MAIN_WINDOW) --> Line_18 $$ uiElement.addContent(mainWindowElement) [FD]
Line_17 $$ Element mainWindowElement = new Element(MAIN_WINDOW) --> Line_19 $$ mainWindowElement.setAttribute(LOCATION_X, Integer.toString(window.getFrame().getX())) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_19 $$ mainWindowElement.setAttribute(LOCATION_X, Integer.toString(window.getFrame().getX())) [FD]
Line_17 $$ Element mainWindowElement = new Element(MAIN_WINDOW) --> Line_20 $$ mainWindowElement.setAttribute(LOCATION_Y, Integer.toString(window.getFrame().getY())) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_20 $$ mainWindowElement.setAttribute(LOCATION_Y, Integer.toString(window.getFrame().getY())) [FD]
Line_17 $$ Element mainWindowElement = new Element(MAIN_WINDOW) --> Line_21 $$ mainWindowElement.setAttribute(WIDTH, Integer.toString(window.getFrame().getWidth())) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_21 $$ mainWindowElement.setAttribute(WIDTH, Integer.toString(window.getFrame().getWidth())) [FD]
Line_17 $$ Element mainWindowElement = new Element(MAIN_WINDOW) --> Line_22 $$ mainWindowElement.setAttribute(HEIGHT, Integer.toString(window.getFrame().getHeight())) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_22 $$ mainWindowElement.setAttribute(HEIGHT, Integer.toString(window.getFrame().getHeight())) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_24 $$ uiElement.addContent(volumeElement) [FD]
Line_23 $$ Element volumeElement = new Element(VOLUME) --> Line_24 $$ uiElement.addContent(volumeElement) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_25 $$ AudioPlayer player = window.getDesktop().getSoundPlayer() [FD]
Line_23 $$ Element volumeElement = new Element(VOLUME) --> Line_26 $$ volumeElement.setAttribute(SOUND, Float.toString(player.getVolume())) [FD]
Line_25 $$ AudioPlayer player = window.getDesktop().getSoundPlayer() --> Line_26 $$ volumeElement.setAttribute(SOUND, Float.toString(player.getVolume())) [FD]
Line_23 $$ Element volumeElement = new Element(VOLUME) --> Line_27 $$ volumeElement.setAttribute(MUTE, Boolean.toString(player.isMute())) [FD]
Line_25 $$ AudioPlayer player = window.getDesktop().getSoundPlayer() --> Line_27 $$ volumeElement.setAttribute(MUTE, Boolean.toString(player.isMute())) [FD]
Line_7 $$ Element uiElement = new Element(UI) --> Line_29 $$ uiElement.addContent(internalWindowsElement) [FD]
Line_28 $$ Element internalWindowsElement = new Element(INTERNAL_WINDOWS) --> Line_29 $$ uiElement.addContent(internalWindowsElement) [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_30 $$ MainDesktopPane desktop = window.getDesktop() [FD]
Line_30 $$ MainDesktopPane desktop = window.getDesktop() --> Line_31 $$ JInternalFrame[] windows = desktop.getAllFrames() [FD]
Line_28 $$ Element internalWindowsElement = new Element(INTERNAL_WINDOWS) --> Line_34 $$ internalWindowsElement.addContent(windowElement) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_34 $$ internalWindowsElement.addContent(windowElement) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_35 $$ windowElement.setAttribute(Z_ORDER, Integer.toString(desktop.getComponentZOrder(window1))) [FD]
Line_30 $$ MainDesktopPane desktop = window.getDesktop() --> Line_35 $$ windowElement.setAttribute(Z_ORDER, Integer.toString(desktop.getComponentZOrder(window1))) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_35 $$ windowElement.setAttribute(Z_ORDER, Integer.toString(desktop.getComponentZOrder(window1))) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_36 $$ windowElement.setAttribute(LOCATION_X, Integer.toString(window1.getX())) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_36 $$ windowElement.setAttribute(LOCATION_X, Integer.toString(window1.getX())) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_37 $$ windowElement.setAttribute(LOCATION_Y, Integer.toString(window1.getY())) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_37 $$ windowElement.setAttribute(LOCATION_Y, Integer.toString(window1.getY())) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_38 $$ windowElement.setAttribute(WIDTH, Integer.toString(window1.getWidth())) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_38 $$ windowElement.setAttribute(WIDTH, Integer.toString(window1.getWidth())) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_39 $$ windowElement.setAttribute(HEIGHT, Integer.toString(window1.getHeight())) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_39 $$ windowElement.setAttribute(HEIGHT, Integer.toString(window1.getHeight())) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_40 $$ windowElement.setAttribute(DISPLAY, Boolean.toString(!window1.isClosed())) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_40 $$ windowElement.setAttribute(DISPLAY, Boolean.toString(!window1.isClosed())) [FD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_41 $$ if (window1 instanceof ToolWindow) [FD]
Line_41 $$ if (window1 instanceof ToolWindow) --> Line_42 $$ windowElement.setAttribute(TYPE, TOOL) [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_42 $$ windowElement.setAttribute(TYPE, TOOL) [FD]
Line_41 $$ if (window1 instanceof ToolWindow) --> Line_43 $$ windowElement.setAttribute(NAME, ((ToolWindow) window1).getToolName()) [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_43 $$ windowElement.setAttribute(NAME, ((ToolWindow) window1).getToolName()) [FD]
Line_41 $$ if (window1 instanceof ToolWindow) --> Line_44 $$ if (window1 instanceof UnitWindow) [CD]
Line_32 $$ for (JInternalFrame window1 : windows) --> Line_44 $$ if (window1 instanceof UnitWindow) [FD]
Line_44 $$ if (window1 instanceof UnitWindow) --> Line_45 $$ windowElement.setAttribute(TYPE, UNIT) [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_45 $$ windowElement.setAttribute(TYPE, UNIT) [FD]
Line_44 $$ if (window1 instanceof UnitWindow) --> Line_46 $$ windowElement.setAttribute(NAME, ((UnitWindow) window1).getUnit().getName()) [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_46 $$ windowElement.setAttribute(NAME, ((UnitWindow) window1).getUnit().getName()) [FD]
Line_44 $$ if (window1 instanceof UnitWindow) --> Line_48 $$ windowElement.setAttribute(TYPE, "other") [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_48 $$ windowElement.setAttribute(TYPE, "other") [FD]
Line_44 $$ if (window1 instanceof UnitWindow) --> Line_49 $$ windowElement.setAttribute(NAME, "other") [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_49 $$ windowElement.setAttribute(NAME, "other") [FD]
Line_2 $$ public void saveFile(MainWindow window) --> Line_52 $$ Unit[] toolBarUnits = window.getUnitToolBar().getUnitsInToolBar() [FD]
Line_30 $$ MainDesktopPane desktop = window.getDesktop() --> Line_54 $$ UnitWindow unitWindow = desktop.findUnitWindow(toolBarUnit) [FD]
Line_53 $$ for (Unit toolBarUnit : toolBarUnits) --> Line_54 $$ UnitWindow unitWindow = desktop.findUnitWindow(toolBarUnit) [FD]
Line_54 $$ UnitWindow unitWindow = desktop.findUnitWindow(toolBarUnit) --> Line_55 $$ if ((unitWindow == null) || unitWindow.isIcon()) [FD]
Line_55 $$ if ((unitWindow == null) || unitWindow.isIcon()) --> Line_57 $$ internalWindowsElement.addContent(windowElement) [CD]
Line_28 $$ Element internalWindowsElement = new Element(INTERNAL_WINDOWS) --> Line_57 $$ internalWindowsElement.addContent(windowElement) [FD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_57 $$ internalWindowsElement.addContent(windowElement) [FD]
Line_55 $$ if ((unitWindow == null) || unitWindow.isIcon()) --> Line_58 $$ windowElement.setAttribute(TYPE, UNIT) [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_58 $$ windowElement.setAttribute(TYPE, UNIT) [FD]
Line_55 $$ if ((unitWindow == null) || unitWindow.isIcon()) --> Line_59 $$ windowElement.setAttribute(NAME, toolBarUnit.getName()) [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_59 $$ windowElement.setAttribute(NAME, toolBarUnit.getName()) [FD]
Line_53 $$ for (Unit toolBarUnit : toolBarUnits) --> Line_59 $$ windowElement.setAttribute(NAME, toolBarUnit.getName()) [FD]
Line_55 $$ if ((unitWindow == null) || unitWindow.isIcon()) --> Line_60 $$ windowElement.setAttribute(DISPLAY, "false") [CD]
Line_33 $$ Element windowElement = new Element(WINDOW) --> Line_60 $$ windowElement.setAttribute(DISPLAY, "false") [FD]
Line_63 $$ File configFile = new File(DIRECTORY, FILE_NAME) --> Line_64 $$ if (!configFile.getParentFile().exists()) [FD]
Line_64 $$ if (!configFile.getParentFile().exists()) --> Line_65 $$ configFile.getParentFile().mkdirs() [CD]
Line_63 $$ File configFile = new File(DIRECTORY, FILE_NAME) --> Line_65 $$ configFile.getParentFile().mkdirs() [FD]
Line_67 $$ InputStream in = getClass().getResourceAsStream("/dtd/ui_settings.dtd") --> Line_68 $$ IOUtils.copy(in, new FileOutputStream(new File(DIRECTORY, "ui_settings.dtd"))) [FD]
Line_69 $$ XMLOutputter fmt = new XMLOutputter() --> Line_70 $$ fmt.setFormat(Format.getPrettyFormat()) [FD]
Line_3 $$ FileOutputStream stream = null --> Line_71 $$ stream = new FileOutputStream(configFile) [FD]
Line_69 $$ XMLOutputter fmt = new XMLOutputter() --> Line_73 $$ fmt.output(outputDoc, writer) [FD]
Line_5 $$ Document outputDoc = new Document() --> Line_73 $$ fmt.output(outputDoc, writer) [FD]
Line_72 $$ OutputStreamWriter writer = new OutputStreamWriter(stream, "UTF-8") --> Line_73 $$ fmt.output(outputDoc, writer) [FD]
Line_3 $$ FileOutputStream stream = null --> Line_77 $$ IOUtils.closeQuietly(stream) [FD]
Line_71 $$ stream = new FileOutputStream(configFile) --> Line_77 $$ IOUtils.closeQuietly(stream) [FD]
