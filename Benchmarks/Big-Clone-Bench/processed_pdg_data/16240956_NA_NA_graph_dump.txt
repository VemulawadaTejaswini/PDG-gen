Line_2 $$ public static void copyZip() --> Line_3 $$ InputStream is [CD]
Line_2 $$ public static void copyZip() --> Line_4 $$ OutputStream os [CD]
Line_2 $$ public static void copyZip() --> Line_5 $$ String javacZip = "" [CD]
Line_7 $$ if ("windows".equalsIgnoreCase(Compilador.getSo())) --> Line_8 $$ javacZip = "javacWin.zip" [CD]
Line_5 $$ String javacZip = "" --> Line_8 $$ javacZip = "javacWin.zip" [FD]
Line_7 $$ if ("windows".equalsIgnoreCase(Compilador.getSo())) --> Line_9 $$ is = UnZip.class.getResourceAsStream("javacWin.zip") [CD]
Line_3 $$ InputStream is --> Line_9 $$ is = UnZip.class.getResourceAsStream("javacWin.zip") [FD]
Line_7 $$ if ("windows".equalsIgnoreCase(Compilador.getSo())) --> Line_10 $$ if ("linux".equalsIgnoreCase(Compilador.getSo())) [CD]
Line_10 $$ if ("linux".equalsIgnoreCase(Compilador.getSo())) --> Line_11 $$ javacZip = "javacLinux.zip" [CD]
Line_5 $$ String javacZip = "" --> Line_11 $$ javacZip = "javacLinux.zip" [FD]
Line_8 $$ javacZip = "javacWin.zip" --> Line_11 $$ javacZip = "javacLinux.zip" [FD]
Line_10 $$ if ("linux".equalsIgnoreCase(Compilador.getSo())) --> Line_12 $$ is = UnZip.class.getResourceAsStream("javacLinux.zip") [CD]
Line_3 $$ InputStream is --> Line_12 $$ is = UnZip.class.getResourceAsStream("javacLinux.zip") [FD]
Line_3 $$ InputStream is --> Line_14 $$ is = UnZip.class.getResourceAsStream(javacZip) [FD]
Line_5 $$ String javacZip = "" --> Line_14 $$ is = UnZip.class.getResourceAsStream(javacZip) [FD]
Line_8 $$ javacZip = "javacWin.zip" --> Line_14 $$ is = UnZip.class.getResourceAsStream(javacZip) [FD]
Line_11 $$ javacZip = "javacLinux.zip" --> Line_14 $$ is = UnZip.class.getResourceAsStream(javacZip) [FD]
Line_15 $$ File tempZip = File.createTempFile("tempJavacJTraductor", ".zip") --> Line_16 $$ tempZip.mkdir() [FD]
Line_15 $$ File tempZip = File.createTempFile("tempJavacJTraductor", ".zip") --> Line_17 $$ tempZip.deleteOnExit() [FD]
Line_4 $$ OutputStream os --> Line_18 $$ os = FileUtils.openOutputStream(tempZip) [FD]
Line_15 $$ File tempZip = File.createTempFile("tempJavacJTraductor", ".zip") --> Line_18 $$ os = FileUtils.openOutputStream(tempZip) [FD]
Line_3 $$ InputStream is --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_4 $$ OutputStream os --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_18 $$ os = FileUtils.openOutputStream(tempZip) --> Line_19 $$ IOUtils.copy(is, os) [FD]
Line_3 $$ InputStream is --> Line_20 $$ is.close() [FD]
Line_4 $$ OutputStream os --> Line_21 $$ os.close() [FD]
Line_18 $$ os = FileUtils.openOutputStream(tempZip) --> Line_21 $$ os.close() [FD]
Line_15 $$ File tempZip = File.createTempFile("tempJavacJTraductor", ".zip") --> Line_22 $$ extractZip(tempZip.getPath()) [FD]
