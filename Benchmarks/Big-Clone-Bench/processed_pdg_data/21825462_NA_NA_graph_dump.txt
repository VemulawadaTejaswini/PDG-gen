Line_4 $$ XPathFactory xpf = XPathFactory.newInstance(NamespaceConstant.OBJECT_MODEL_SAXON) --> Line_5 $$ XPath xpe = xpf.newXPath() [FD]
Line_6 $$ InputStream is = null --> Line_8 $$ is = url.openStream() [FD]
Line_2 $$ public static void convert(URL url, PrintWriter writer, String server) --> Line_8 $$ is = url.openStream() [FD]
Line_6 $$ InputStream is = null --> Line_12 $$ Document doc = readFromStream(is) [FD]
Line_8 $$ is = url.openStream() --> Line_12 $$ Document doc = readFromStream(is) [FD]
Line_5 $$ XPath xpe = xpf.newXPath() --> Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() [FD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_15 $$ if (s.equals("tns")) [CD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_15 $$ if (s.equals("tns")) [FD]
Line_15 $$ if (s.equals("tns")) --> Line_16 $$ return "http://services.remote/" [CD]
Line_15 $$ if (s.equals("tns")) --> Line_17 $$ if (s.equals("xsd")) [CD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_17 $$ if (s.equals("xsd")) [FD]
Line_17 $$ if (s.equals("xsd")) --> Line_18 $$ return "http://www.w3.org/2001/XMLSchema" [CD]
Line_17 $$ if (s.equals("xsd")) --> Line_19 $$ if (s.equals("soap")) [CD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_19 $$ if (s.equals("soap")) [FD]
Line_19 $$ if (s.equals("soap")) --> Line_20 $$ return "http://schemas.xmlsoap.org/wsdl/soap/" [CD]
Line_19 $$ if (s.equals("soap")) --> Line_21 $$ if (s.equals(XMLConstants.DEFAULT_NS_PREFIX)) [CD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_21 $$ if (s.equals(XMLConstants.DEFAULT_NS_PREFIX)) [FD]
Line_21 $$ if (s.equals(XMLConstants.DEFAULT_NS_PREFIX)) --> Line_22 $$ return "http://schemas.xmlsoap.org/wsdl/" [CD]
Line_21 $$ if (s.equals(XMLConstants.DEFAULT_NS_PREFIX)) --> Line_24 $$ return null [CD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_28 $$ return null [CD]
Line_13 $$ xpe.setNamespaceContext(new NamespaceContext() --> Line_31 $$ return null [CD]
Line_12 $$ Document doc = readFromStream(is) --> Line_34 $$ Element defs = (Element) xpe.compile("/*:definitions").evaluate(doc, XPathConstants.NODE) [FD]
Line_5 $$ XPath xpe = xpf.newXPath() --> Line_34 $$ Element defs = (Element) xpe.compile("/*:definitions").evaluate(doc, XPathConstants.NODE) [FD]
Line_12 $$ Document doc = readFromStream(is) --> Line_36 $$ Node schemaLocation = (Node) xpe.compile("/*:definitions/*:types/xsd:schema/xsd:import/@schemaLocation").evaluate(doc, XPathConstants.NODE) [FD]
Line_5 $$ XPath xpe = xpf.newXPath() --> Line_36 $$ Node schemaLocation = (Node) xpe.compile("/*:definitions/*:types/xsd:schema/xsd:import/@schemaLocation").evaluate(doc, XPathConstants.NODE) [FD]
Line_12 $$ Document doc = readFromStream(is) --> Line_40 $$ Node location = (Node) xpe.compile("/*:definitions/*:service/*:port/soap:address/@location").evaluate(doc, XPathConstants.NODE) [FD]
Line_5 $$ XPath xpe = xpf.newXPath() --> Line_40 $$ Node location = (Node) xpe.compile("/*:definitions/*:service/*:port/soap:address/@location").evaluate(doc, XPathConstants.NODE) [FD]
Line_38 $$ for (int i = 0; i < 3; i++) sl = sl.substring(sl.indexOf('/') + 1) --> Line_42 $$ for (int i = 0; i < 3; i++) l = l.substring(l.indexOf('/') + 1) [FD]
Line_12 $$ Document doc = readFromStream(is) --> Line_44 $$ write(doc, writer) [FD]
Line_2 $$ public static void convert(URL url, PrintWriter writer, String server) --> Line_44 $$ write(doc, writer) [FD]
