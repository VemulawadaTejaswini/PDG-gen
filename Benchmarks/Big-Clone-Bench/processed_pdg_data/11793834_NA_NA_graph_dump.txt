Line_2 $$ public static void addProviders(URL url) --> Line_3 $$ Reader reader = null [CD]
Line_2 $$ public static void addProviders(URL url) --> Line_4 $$ Properties prop = new Properties() [CD]
Line_3 $$ Reader reader = null --> Line_6 $$ reader = new InputStreamReader(url.openStream()) [FD]
Line_2 $$ public static void addProviders(URL url) --> Line_6 $$ reader = new InputStreamReader(url.openStream()) [FD]
Line_4 $$ Properties prop = new Properties() --> Line_7 $$ prop.load(reader) [FD]
Line_3 $$ Reader reader = null --> Line_7 $$ prop.load(reader) [FD]
Line_6 $$ reader = new InputStreamReader(url.openStream()) --> Line_7 $$ prop.load(reader) [FD]
Line_3 $$ Reader reader = null --> Line_10 $$ if (reader != null) [FD]
Line_6 $$ reader = new InputStreamReader(url.openStream()) --> Line_10 $$ if (reader != null) [FD]
Line_3 $$ Reader reader = null --> Line_12 $$ reader.close() [FD]
Line_6 $$ reader = new InputStreamReader(url.openStream()) --> Line_12 $$ reader.close() [FD]
Line_4 $$ Properties prop = new Properties() --> Line_17 $$ for (Map.Entry<Object, Object> entry : prop.entrySet()) [FD]
Line_19 $$ Class<?> cla = Class.forName((String) entry.getValue(), true, Thread.currentThread().getContextClassLoader()) --> Line_20 $$ providers.put(((String) entry.getKey()).toUpperCase(), (CharsetProvider) cla.newInstance()) [FD]
