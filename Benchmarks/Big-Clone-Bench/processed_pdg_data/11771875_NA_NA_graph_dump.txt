Line_2 $$ private synchronized jdbcResultSet executeHTTP(String s) throws SQLException --> Line_3 $$ byte result[] [CD]
Line_6 $$ String p = StringConverter.unicodeToHexString(sUser) --> Line_7 $$ p += "+" + StringConverter.unicodeToHexString(sPassword) [FD]
Line_6 $$ String p = StringConverter.unicodeToHexString(sUser) --> Line_8 $$ p += "+" + StringConverter.unicodeToHexString(s) [FD]
Line_7 $$ p += "+" + StringConverter.unicodeToHexString(sPassword) --> Line_8 $$ p += "+" + StringConverter.unicodeToHexString(s) [FD]
Line_2 $$ private synchronized jdbcResultSet executeHTTP(String s) throws SQLException --> Line_8 $$ p += "+" + StringConverter.unicodeToHexString(s) [FD]
Line_5 $$ URL url = new URL(sConnect) --> Line_9 $$ URLConnection c = url.openConnection() [FD]
Line_9 $$ URLConnection c = url.openConnection() --> Line_10 $$ c.setDoOutput(true) [FD]
Line_9 $$ URLConnection c = url.openConnection() --> Line_11 $$ OutputStream os = c.getOutputStream() [FD]
Line_11 $$ OutputStream os = c.getOutputStream() --> Line_12 $$ os.write(p.getBytes(ENCODING)) [FD]
Line_6 $$ String p = StringConverter.unicodeToHexString(sUser) --> Line_12 $$ os.write(p.getBytes(ENCODING)) [FD]
Line_7 $$ p += "+" + StringConverter.unicodeToHexString(sPassword) --> Line_12 $$ os.write(p.getBytes(ENCODING)) [FD]
Line_8 $$ p += "+" + StringConverter.unicodeToHexString(s) --> Line_12 $$ os.write(p.getBytes(ENCODING)) [FD]
Line_11 $$ OutputStream os = c.getOutputStream() --> Line_13 $$ os.close() [FD]
Line_9 $$ URLConnection c = url.openConnection() --> Line_14 $$ c.connect() [FD]
Line_9 $$ URLConnection c = url.openConnection() --> Line_15 $$ InputStream is = (InputStream) c.getContent() [FD]
Line_9 $$ URLConnection c = url.openConnection() --> Line_17 $$ int len = c.getContentLength() [FD]
Line_17 $$ int len = c.getContentLength() --> Line_19 $$ for (int i = 0; i < len; i++) [FD]
Line_19 $$ for (int i = 0; i < len; i++) --> Line_20 $$ int r = in.read() [CD]
Line_16 $$ BufferedInputStream in = new BufferedInputStream(is) --> Line_20 $$ int r = in.read() [FD]
Line_19 $$ for (int i = 0; i < len; i++) --> Line_21 $$ result[i] = (byte) r [CD]
Line_2 $$ private synchronized jdbcResultSet executeHTTP(String s) throws SQLException --> Line_26 $$ return new jdbcResultSet(new Result(result)) [CD]
