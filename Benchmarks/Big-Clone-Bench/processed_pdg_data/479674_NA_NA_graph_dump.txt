Line_2 $$ public static synchronized String getSequenceNumber(String SequenceName) --> Line_3 $$ String result = "0" [CD]
Line_2 $$ public static synchronized String getSequenceNumber(String SequenceName) --> Line_4 $$ Connection conn = null [CD]
Line_2 $$ public static synchronized String getSequenceNumber(String SequenceName) --> Line_5 $$ Statement ps = null [CD]
Line_2 $$ public static synchronized String getSequenceNumber(String SequenceName) --> Line_6 $$ ResultSet rs = null [CD]
Line_4 $$ Connection conn = null --> Line_8 $$ conn = TPCW_Database.getConnection() [FD]
Line_4 $$ Connection conn = null --> Line_9 $$ conn.setAutoCommit(false) [FD]
Line_8 $$ conn = TPCW_Database.getConnection() --> Line_9 $$ conn.setAutoCommit(false) [FD]
Line_5 $$ Statement ps = null --> Line_11 $$ ps = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE) [FD]
Line_4 $$ Connection conn = null --> Line_11 $$ ps = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE) [FD]
Line_8 $$ conn = TPCW_Database.getConnection() --> Line_11 $$ ps = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE) [FD]
Line_6 $$ ResultSet rs = null --> Line_12 $$ rs = ps.executeQuery(sql) [FD]
Line_5 $$ Statement ps = null --> Line_12 $$ rs = ps.executeQuery(sql) [FD]
Line_11 $$ ps = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE) --> Line_12 $$ rs = ps.executeQuery(sql) [FD]
Line_10 $$ String sql = "select num from sequence where name='" + SequenceName + "'" --> Line_12 $$ rs = ps.executeQuery(sql) [FD]
Line_6 $$ ResultSet rs = null --> Line_14 $$ while (rs.next()) [FD]
Line_12 $$ rs = ps.executeQuery(sql) --> Line_14 $$ while (rs.next()) [FD]
Line_14 $$ while (rs.next()) --> Line_15 $$ num = rs.getLong(1) [CD]
Line_13 $$ long num = 0 --> Line_15 $$ num = rs.getLong(1) [FD]
Line_6 $$ ResultSet rs = null --> Line_15 $$ num = rs.getLong(1) [FD]
Line_12 $$ rs = ps.executeQuery(sql) --> Line_15 $$ num = rs.getLong(1) [FD]
Line_14 $$ while (rs.next()) --> Line_16 $$ result = new Long(num).toString() [CD]
Line_3 $$ String result = "0" --> Line_16 $$ result = new Long(num).toString() [FD]
Line_15 $$ num = rs.getLong(1) --> Line_18 $$ num++ [FD]
Line_13 $$ long num = 0 --> Line_18 $$ num++ [FD]
Line_10 $$ String sql = "select num from sequence where name='" + SequenceName + "'" --> Line_19 $$ sql = "update sequence set num=" + num + " where name='" + SequenceName + "'" [FD]
Line_5 $$ Statement ps = null --> Line_20 $$ int res = ps.executeUpdate(sql) [FD]
Line_11 $$ ps = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE) --> Line_20 $$ int res = ps.executeUpdate(sql) [FD]
Line_10 $$ String sql = "select num from sequence where name='" + SequenceName + "'" --> Line_20 $$ int res = ps.executeUpdate(sql) [FD]
Line_19 $$ sql = "update sequence set num=" + num + " where name='" + SequenceName + "'" --> Line_20 $$ int res = ps.executeUpdate(sql) [FD]
Line_20 $$ int res = ps.executeUpdate(sql) --> Line_21 $$ if (res == 1) [FD]
Line_21 $$ if (res == 1) --> Line_22 $$ conn.commit() [CD]
Line_4 $$ Connection conn = null --> Line_22 $$ conn.commit() [FD]
Line_8 $$ conn = TPCW_Database.getConnection() --> Line_22 $$ conn.commit() [FD]
Line_21 $$ if (res == 1) --> Line_23 $$ conn.rollback() [CD]
Line_4 $$ Connection conn = null --> Line_23 $$ conn.rollback() [FD]
Line_8 $$ conn = TPCW_Database.getConnection() --> Line_23 $$ conn.rollback() [FD]
Line_4 $$ Connection conn = null --> Line_29 $$ if (conn != null) [FD]
Line_8 $$ conn = TPCW_Database.getConnection() --> Line_29 $$ if (conn != null) [FD]
Line_6 $$ ResultSet rs = null --> Line_30 $$ if (rs != null) [FD]
Line_12 $$ rs = ps.executeQuery(sql) --> Line_30 $$ if (rs != null) [FD]
Line_5 $$ Statement ps = null --> Line_31 $$ if (ps != null) [FD]
Line_11 $$ ps = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE) --> Line_31 $$ if (ps != null) [FD]
Line_2 $$ public static synchronized String getSequenceNumber(String SequenceName) --> Line_36 $$ return result [CD]
