Line_2 $$ private InputStream open(String url) throws IOException --> Line_3 $$ debug(url) [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_3 $$ debug(url) [FD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_4 $$ if (!useCache) [CD]
Line_4 $$ if (!useCache) --> Line_5 $$ return new URL(url).openStream() [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_7 $$ File f = new File(System.getProperty("java.io.tmpdir", "."), Digest.SHA1.encrypt(url) + ".xml") [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_7 $$ File f = new File(System.getProperty("java.io.tmpdir", "."), Digest.SHA1.encrypt(url) + ".xml") [FD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_8 $$ debug("Cache : " + f) [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_9 $$ if (f.exists()) [CD]
Line_7 $$ File f = new File(System.getProperty("java.io.tmpdir", "."), Digest.SHA1.encrypt(url) + ".xml") --> Line_9 $$ if (f.exists()) [FD]
Line_9 $$ if (f.exists()) --> Line_10 $$ return new FileInputStream(f) [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_12 $$ InputStream in = new URL(url).openStream() [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_13 $$ OutputStream out = new FileOutputStream(f) [CD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_14 $$ IOUtils.copyTo(in, out) [CD]
Line_12 $$ InputStream in = new URL(url).openStream() --> Line_14 $$ IOUtils.copyTo(in, out) [FD]
Line_13 $$ OutputStream out = new FileOutputStream(f) --> Line_14 $$ IOUtils.copyTo(in, out) [FD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_15 $$ out.flush() [CD]
Line_13 $$ OutputStream out = new FileOutputStream(f) --> Line_15 $$ out.flush() [FD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_16 $$ out.close() [CD]
Line_13 $$ OutputStream out = new FileOutputStream(f) --> Line_16 $$ out.close() [FD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_17 $$ in.close() [CD]
Line_12 $$ InputStream in = new URL(url).openStream() --> Line_17 $$ in.close() [FD]
Line_2 $$ private InputStream open(String url) throws IOException --> Line_18 $$ return new FileInputStream(f) [CD]
