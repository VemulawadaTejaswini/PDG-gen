Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_3 $$ if (ctx.isRobot()) [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_3 $$ if (ctx.isRobot()) [FD]
Line_3 $$ if (ctx.isRobot()) --> Line_4 $$ ctx.forbidden() [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_4 $$ ctx.forbidden() [FD]
Line_3 $$ if (ctx.isRobot()) --> Line_5 $$ return [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_7 $$ long id = ctx.id() [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_7 $$ long id = ctx.id() [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_8 $$ File bean = File.INSTANCE.Get(id) [CD]
Line_7 $$ long id = ctx.id() --> Line_8 $$ File bean = File.INSTANCE.Get(id) [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_9 $$ if (bean == null) [CD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_9 $$ if (bean == null) [FD]
Line_9 $$ if (bean == null) --> Line_10 $$ ctx.not_found() [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_10 $$ ctx.not_found() [FD]
Line_9 $$ if (bean == null) --> Line_11 $$ return [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_13 $$ String f_ident = ctx.param("fn", "") [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_13 $$ String f_ident = ctx.param("fn", "") [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_14 $$ if (id >= 100 && !StringUtils.equals(f_ident, bean.getIdent())) [CD]
Line_13 $$ String f_ident = ctx.param("fn", "") --> Line_14 $$ if (id >= 100 && !StringUtils.equals(f_ident, bean.getIdent())) [FD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_14 $$ if (id >= 100 && !StringUtils.equals(f_ident, bean.getIdent())) [FD]
Line_14 $$ if (id >= 100 && !StringUtils.equals(f_ident, bean.getIdent())) --> Line_15 $$ ctx.not_found() [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_15 $$ ctx.not_found() [FD]
Line_14 $$ if (id >= 100 && !StringUtils.equals(f_ident, bean.getIdent())) --> Line_16 $$ return [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_18 $$ if (bean.IsLoginRequired() && ctx.user() == null) [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_18 $$ if (bean.IsLoginRequired() && ctx.user() == null) [FD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_18 $$ if (bean.IsLoginRequired() && ctx.user() == null) [FD]
Line_18 $$ if (bean.IsLoginRequired() && ctx.user() == null) --> Line_19 $$ StringBuilder login = new StringBuilder(LinkTool.home("home/login?goto_page=")) [CD]
Line_18 $$ if (bean.IsLoginRequired() && ctx.user() == null) --> Line_20 $$ ctx.redirect(login.toString()) [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_20 $$ ctx.redirect(login.toString()) [FD]
Line_19 $$ StringBuilder login = new StringBuilder(LinkTool.home("home/login?goto_page=")) --> Line_20 $$ ctx.redirect(login.toString()) [FD]
Line_18 $$ if (bean.IsLoginRequired() && ctx.user() == null) --> Line_21 $$ return [CD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_23 $$ FileInputStream fis = null [CD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_25 $$ java.io.File file = StorageService.FILES.readFile(bean.getPath()) [FD]
Line_23 $$ FileInputStream fis = null --> Line_26 $$ fis = new FileInputStream(file) [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_27 $$ ctx.response().setContentLength((int) file.length()) [FD]
Line_25 $$ java.io.File file = StorageService.FILES.readFile(bean.getPath()) --> Line_27 $$ ctx.response().setContentLength((int) file.length()) [FD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_28 $$ String ext = FilenameUtils.getExtension(bean.getPath()) [FD]
Line_28 $$ String ext = FilenameUtils.getExtension(bean.getPath()) --> Line_29 $$ String mine_type = Multimedia.mime_types.get(ext) [FD]
Line_29 $$ String mine_type = Multimedia.mime_types.get(ext) --> Line_30 $$ ctx.response().setContentType(mine_type) [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_30 $$ ctx.response().setContentType(mine_type) [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_31 $$ String ua = ctx.header("user-agent") [FD]
Line_31 $$ String ua = ctx.header("user-agent") --> Line_32 $$ ctx.header("Content-Disposition", "attachment; filename*=\"utf8''" + LinkTool.encode_url(bean.getName()) + "." + ext + "\"") [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_32 $$ ctx.header("Content-Disposition", "attachment; filename*=\"utf8''" + LinkTool.encode_url(bean.getName()) + "." + ext + "\"") [FD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_32 $$ ctx.header("Content-Disposition", "attachment; filename*=\"utf8''" + LinkTool.encode_url(bean.getName()) + "." + ext + "\"") [FD]
Line_23 $$ FileInputStream fis = null --> Line_33 $$ IOUtils.copy(fis, ctx.response().getOutputStream()) [FD]
Line_26 $$ fis = new FileInputStream(file) --> Line_33 $$ IOUtils.copy(fis, ctx.response().getOutputStream()) [FD]
Line_2 $$ public void download(RequestContext ctx) throws IOException --> Line_33 $$ IOUtils.copy(fis, ctx.response().getOutputStream()) [FD]
Line_8 $$ File bean = File.INSTANCE.Get(id) --> Line_34 $$ bean.IncDownloadCount(1) [FD]
Line_23 $$ FileInputStream fis = null --> Line_36 $$ IOUtils.closeQuietly(fis) [FD]
Line_26 $$ fis = new FileInputStream(file) --> Line_36 $$ IOUtils.closeQuietly(fis) [FD]
