Line_2 $$ public void run() --> Line_3 $$ logger.info("downloading '" + url.toString() + "' to: " + dstFile.getAbsolutePath()) [CD]
Line_2 $$ public void run() --> Line_4 $$ Preferences prefs = Preferences.userRoot().node("gvsig.downloader") [CD]
Line_2 $$ public void run() --> Line_5 $$ int timeout = prefs.getInt("timeout", 60000) [CD]
Line_4 $$ Preferences prefs = Preferences.userRoot().node("gvsig.downloader") --> Line_5 $$ int timeout = prefs.getInt("timeout", 60000) [FD]
Line_2 $$ public void run() --> Line_6 $$ DataOutputStream dos [CD]
Line_11 $$ if (url.getProtocol().equals("https")) --> Line_12 $$ disableHttsValidation() [CD]
Line_10 $$ HttpURLConnection connection = null --> Line_14 $$ connection = (HttpURLConnection) url.openConnection() [FD]
Line_10 $$ HttpURLConnection connection = null --> Line_15 $$ connection.setConnectTimeout(timeout) [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_15 $$ connection.setConnectTimeout(timeout) [FD]
Line_5 $$ int timeout = prefs.getInt("timeout", 60000) --> Line_15 $$ connection.setConnectTimeout(timeout) [FD]
Line_16 $$ if (data != null) --> Line_17 $$ connection.setRequestProperty("SOAPAction", "post") [CD]
Line_10 $$ HttpURLConnection connection = null --> Line_17 $$ connection.setRequestProperty("SOAPAction", "post") [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_17 $$ connection.setRequestProperty("SOAPAction", "post") [FD]
Line_16 $$ if (data != null) --> Line_18 $$ connection.setRequestMethod("POST") [CD]
Line_10 $$ HttpURLConnection connection = null --> Line_18 $$ connection.setRequestMethod("POST") [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_18 $$ connection.setRequestMethod("POST") [FD]
Line_16 $$ if (data != null) --> Line_19 $$ connection.setDoOutput(true) [CD]
Line_10 $$ HttpURLConnection connection = null --> Line_19 $$ connection.setDoOutput(true) [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_19 $$ connection.setDoOutput(true) [FD]
Line_16 $$ if (data != null) --> Line_20 $$ connection.setRequestProperty("Content-Type", "text/xml; charset=UTF-8") [CD]
Line_10 $$ HttpURLConnection connection = null --> Line_20 $$ connection.setRequestProperty("Content-Type", "text/xml; charset=UTF-8") [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_20 $$ connection.setRequestProperty("Content-Type", "text/xml; charset=UTF-8") [FD]
Line_16 $$ if (data != null) --> Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) [CD]
Line_9 $$ OutputStreamWriter os = null --> Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) [FD]
Line_10 $$ HttpURLConnection connection = null --> Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) [FD]
Line_16 $$ if (data != null) --> Line_22 $$ os.write(data) [CD]
Line_9 $$ OutputStreamWriter os = null --> Line_22 $$ os.write(data) [FD]
Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) --> Line_22 $$ os.write(data) [FD]
Line_16 $$ if (data != null) --> Line_23 $$ os.flush() [CD]
Line_9 $$ OutputStreamWriter os = null --> Line_23 $$ os.flush() [FD]
Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) --> Line_23 $$ os.flush() [FD]
Line_16 $$ if (data != null) --> Line_24 $$ is = new DataInputStream(connection.getInputStream()) [CD]
Line_8 $$ DataInputStream is --> Line_24 $$ is = new DataInputStream(connection.getInputStream()) [FD]
Line_10 $$ HttpURLConnection connection = null --> Line_24 $$ is = new DataInputStream(connection.getInputStream()) [FD]
Line_14 $$ connection = (HttpURLConnection) url.openConnection() --> Line_24 $$ is = new DataInputStream(connection.getInputStream()) [FD]
Line_16 $$ if (data != null) --> Line_26 $$ is = new DataInputStream(url.openStream()) [CD]
Line_8 $$ DataInputStream is --> Line_26 $$ is = new DataInputStream(url.openStream()) [FD]
Line_24 $$ is = new DataInputStream(connection.getInputStream()) --> Line_26 $$ is = new DataInputStream(url.openStream()) [FD]
Line_6 $$ DataOutputStream dos --> Line_28 $$ dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dstFile))) [FD]
Line_8 $$ DataInputStream is --> Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) [FD]
Line_24 $$ is = new DataInputStream(connection.getInputStream()) --> Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) [FD]
Line_26 $$ is = new DataInputStream(url.openStream()) --> Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) [FD]
Line_29 $$ byte[] buffer = new byte[1024 * 4] --> Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) [FD]
Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) --> Line_32 $$ dos.write(buffer, 0, i) [CD]
Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) --> Line_32 $$ dos.write(buffer, 0, i) [FD]
Line_6 $$ DataOutputStream dos --> Line_32 $$ dos.write(buffer, 0, i) [FD]
Line_28 $$ dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dstFile))) --> Line_32 $$ dos.write(buffer, 0, i) [FD]
Line_29 $$ byte[] buffer = new byte[1024 * 4] --> Line_32 $$ dos.write(buffer, 0, i) [FD]
Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) --> Line_33 $$ readed += i [CD]
Line_31 $$ for (int i = is.read(buffer); !Utilities.getCanceled(groupID) && i > 0; i = is.read(buffer)) --> Line_33 $$ readed += i [FD]
Line_30 $$ long readed = 0 --> Line_33 $$ readed += i [FD]
Line_9 $$ OutputStreamWriter os = null --> Line_35 $$ if (os != null) [FD]
Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) --> Line_35 $$ if (os != null) [FD]
Line_35 $$ if (os != null) --> Line_36 $$ os.close() [CD]
Line_9 $$ OutputStreamWriter os = null --> Line_36 $$ os.close() [FD]
Line_21 $$ os = new OutputStreamWriter(connection.getOutputStream()) --> Line_36 $$ os.close() [FD]
Line_6 $$ DataOutputStream dos --> Line_38 $$ dos.close() [FD]
Line_28 $$ dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dstFile))) --> Line_38 $$ dos.close() [FD]
Line_8 $$ DataInputStream is --> Line_39 $$ is.close() [FD]
Line_24 $$ is = new DataInputStream(connection.getInputStream()) --> Line_39 $$ is.close() [FD]
Line_26 $$ is = new DataInputStream(url.openStream()) --> Line_39 $$ is.close() [FD]
Line_8 $$ DataInputStream is --> Line_40 $$ is = null [FD]
Line_24 $$ is = new DataInputStream(connection.getInputStream()) --> Line_40 $$ is = null [FD]
Line_26 $$ is = new DataInputStream(url.openStream()) --> Line_40 $$ is = null [FD]
Line_6 $$ DataOutputStream dos --> Line_41 $$ dos = null [FD]
Line_28 $$ dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(dstFile))) --> Line_41 $$ dos = null [FD]
Line_42 $$ if (Utilities.getCanceled(groupID)) --> Line_43 $$ logger.warning("[RemoteServices] '" + url + "' CANCELED.") [CD]
Line_42 $$ if (Utilities.getCanceled(groupID)) --> Line_44 $$ dstFile.delete() [CD]
Line_42 $$ if (Utilities.getCanceled(groupID)) --> Line_47 $$ Utilities.addDownloadedURL(url, dstFile.getAbsolutePath()) [CD]
