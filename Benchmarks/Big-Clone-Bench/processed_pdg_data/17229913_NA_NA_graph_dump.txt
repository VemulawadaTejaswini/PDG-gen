Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_3 $$ final int srlimit = 500 [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_4 $$ final QName att_title = new QName("title") [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_5 $$ final QName att_sroffset = new QName("sroffset") [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_6 $$ String sroffset = null [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_7 $$ String srnamespace = null [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_8 $$ if (!this.srnamespaces.isEmpty()) [CD]
Line_8 $$ if (!this.srnamespaces.isEmpty()) --> Line_9 $$ StringBuilder sb = new StringBuilder() [CD]
Line_9 $$ StringBuilder sb = new StringBuilder() --> Line_11 $$ if (sb.length() > 0) [FD]
Line_9 $$ StringBuilder sb = new StringBuilder() --> Line_12 $$ sb.append(String.valueOf(i)) [FD]
Line_10 $$ for (Integer i : this.srnamespaces) --> Line_12 $$ sb.append(String.valueOf(i)) [FD]
Line_8 $$ if (!this.srnamespaces.isEmpty()) --> Line_14 $$ srnamespace = sb.toString() [CD]
Line_7 $$ String srnamespace = null --> Line_14 $$ srnamespace = sb.toString() [FD]
Line_9 $$ StringBuilder sb = new StringBuilder() --> Line_14 $$ srnamespace = sb.toString() [FD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_16 $$ StringBuilder terms = new StringBuilder() [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_17 $$ while (optind < args.length) [CD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_17 $$ while (optind < args.length) [FD]
Line_17 $$ while (optind < args.length) --> Line_18 $$ if (terms.length() > 0) [CD]
Line_16 $$ StringBuilder terms = new StringBuilder() --> Line_18 $$ if (terms.length() > 0) [FD]
Line_17 $$ while (optind < args.length) --> Line_19 $$ terms.append(args[optind++]) [CD]
Line_16 $$ StringBuilder terms = new StringBuilder() --> Line_19 $$ terms.append(args[optind++]) [FD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_19 $$ terms.append(args[optind++]) [FD]
Line_2 $$ private void process(int optind, String args[]) throws IOException, XMLStreamException --> Line_21 $$ while (true) [CD]
Line_21 $$ while (true) --> Line_22 $$ String url = this.base_api + "?action=query" + "&list=search" + "&format=xml" + "&srsearch=" + URLEncoder.encode(terms.toString(), "UTF-8") + (srnamespace != null ? "&srnamespace=" + srnamespace : "") + (sroffset == null ? "" : "&sroffset=" + sroffset) + "&srlimit=" + srlimit + "&srwhat=text&srprop=timestamp" [CD]
Line_16 $$ StringBuilder terms = new StringBuilder() --> Line_22 $$ String url = this.base_api + "?action=query" + "&list=search" + "&format=xml" + "&srsearch=" + URLEncoder.encode(terms.toString(), "UTF-8") + (srnamespace != null ? "&srnamespace=" + srnamespace : "") + (sroffset == null ? "" : "&sroffset=" + sroffset) + "&srlimit=" + srlimit + "&srwhat=text&srprop=timestamp" [FD]
Line_21 $$ while (true) --> Line_23 $$ sroffset = null [CD]
Line_6 $$ String sroffset = null --> Line_23 $$ sroffset = null [FD]
Line_21 $$ while (true) --> Line_24 $$ LOG.info(url) [CD]
Line_22 $$ String url = this.base_api + "?action=query" + "&list=search" + "&format=xml" + "&srsearch=" + URLEncoder.encode(terms.toString(), "UTF-8") + (srnamespace != null ? "&srnamespace=" + srnamespace : "") + (sroffset == null ? "" : "&sroffset=" + sroffset) + "&srlimit=" + srlimit + "&srwhat=text&srprop=timestamp" --> Line_24 $$ LOG.info(url) [FD]
Line_21 $$ while (true) --> Line_25 $$ XMLEventReader reader = this.xmlInputFactory.createXMLEventReader(openStream(url)) [CD]
Line_22 $$ String url = this.base_api + "?action=query" + "&list=search" + "&format=xml" + "&srsearch=" + URLEncoder.encode(terms.toString(), "UTF-8") + (srnamespace != null ? "&srnamespace=" + srnamespace : "") + (sroffset == null ? "" : "&sroffset=" + sroffset) + "&srlimit=" + srlimit + "&srwhat=text&srprop=timestamp" --> Line_25 $$ XMLEventReader reader = this.xmlInputFactory.createXMLEventReader(openStream(url)) [FD]
Line_21 $$ while (true) --> Line_26 $$ while (reader.hasNext()) [CD]
Line_25 $$ XMLEventReader reader = this.xmlInputFactory.createXMLEventReader(openStream(url)) --> Line_26 $$ while (reader.hasNext()) [FD]
Line_26 $$ while (reader.hasNext()) --> Line_27 $$ XMLEvent event = reader.nextEvent() [CD]
Line_25 $$ XMLEventReader reader = this.xmlInputFactory.createXMLEventReader(openStream(url)) --> Line_27 $$ XMLEvent event = reader.nextEvent() [FD]
Line_26 $$ while (reader.hasNext()) --> Line_28 $$ if (event.isStartElement()) [CD]
Line_27 $$ XMLEvent event = reader.nextEvent() --> Line_28 $$ if (event.isStartElement()) [FD]
Line_28 $$ if (event.isStartElement()) --> Line_29 $$ StartElement e = event.asStartElement() [CD]
Line_27 $$ XMLEvent event = reader.nextEvent() --> Line_29 $$ StartElement e = event.asStartElement() [FD]
Line_28 $$ if (event.isStartElement()) --> Line_30 $$ String name = e.getName().getLocalPart() [CD]
Line_29 $$ StartElement e = event.asStartElement() --> Line_30 $$ String name = e.getName().getLocalPart() [FD]
Line_28 $$ if (event.isStartElement()) --> Line_31 $$ Attribute att = null [CD]
Line_28 $$ if (event.isStartElement()) --> Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) [CD]
Line_30 $$ String name = e.getName().getLocalPart() --> Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) [FD]
Line_31 $$ Attribute att = null --> Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) [FD]
Line_29 $$ StartElement e = event.asStartElement() --> Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) [FD]
Line_4 $$ final QName att_title = new QName("title") --> Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) [FD]
Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) --> Line_33 $$ System.out.println(att.getValue()) [CD]
Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) --> Line_33 $$ System.out.println(att.getValue()) [FD]
Line_31 $$ Attribute att = null --> Line_33 $$ System.out.println(att.getValue()) [FD]
Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) --> Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) [CD]
Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) --> Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) [FD]
Line_30 $$ String name = e.getName().getLocalPart() --> Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) [FD]
Line_31 $$ Attribute att = null --> Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) [FD]
Line_29 $$ StartElement e = event.asStartElement() --> Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) [FD]
Line_5 $$ final QName att_sroffset = new QName("sroffset") --> Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) [FD]
Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) --> Line_35 $$ sroffset = att.getValue() [CD]
Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) --> Line_35 $$ sroffset = att.getValue() [FD]
Line_23 $$ sroffset = null --> Line_35 $$ sroffset = att.getValue() [FD]
Line_6 $$ String sroffset = null --> Line_35 $$ sroffset = att.getValue() [FD]
Line_31 $$ Attribute att = null --> Line_35 $$ sroffset = att.getValue() [FD]
Line_32 $$ if (name.equals("p") && (att = e.getAttributeByName(att_title)) != null) --> Line_35 $$ sroffset = att.getValue() [FD]
Line_21 $$ while (true) --> Line_39 $$ reader.close() [CD]
Line_25 $$ XMLEventReader reader = this.xmlInputFactory.createXMLEventReader(openStream(url)) --> Line_39 $$ reader.close() [FD]
Line_21 $$ while (true) --> Line_40 $$ if (sroffset == null) [CD]
Line_35 $$ sroffset = att.getValue() --> Line_40 $$ if (sroffset == null) [FD]
Line_23 $$ sroffset = null --> Line_40 $$ if (sroffset == null) [FD]
Line_6 $$ String sroffset = null --> Line_40 $$ if (sroffset == null) [FD]
Line_34 $$ if (name.equals("search") && (att = e.getAttributeByName(att_sroffset)) != null) --> Line_33 $$ System.out.println(att.getValue()) [FD]
