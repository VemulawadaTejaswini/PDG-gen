Line_6 $$ DefaultCasFileReadIndexToContigLookup read2contigMap = new DefaultCasFileReadIndexToContigLookup() --> Line_8 $$ CasParser.parseOnlyMetaData(casFile, MultipleWrapper.createMultipleWrapper(CasFileVisitor.class, read2contigMap, readIdLookup)) [FD]
Line_7 $$ AbstractDefaultCasFileLookup readIdLookup = new DefaultReadCasFileLookup(casWorkingDirectory) --> Line_8 $$ CasParser.parseOnlyMetaData(casFile, MultipleWrapper.createMultipleWrapper(CasFileVisitor.class, read2contigMap, readIdLookup)) [FD]
Line_6 $$ DefaultCasFileReadIndexToContigLookup read2contigMap = new DefaultCasFileReadIndexToContigLookup() --> Line_11 $$ int numberOfCasContigs = read2contigMap.getNumberOfContigs() [FD]
Line_11 $$ int numberOfCasContigs = read2contigMap.getNumberOfContigs() --> Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_13 $$ File outputDir = consedOut.createNewDir("" + i) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_13 $$ File outputDir = consedOut.createNewDir("" + i) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) [CD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_15 $$ aCommand.setOption("-casId", "" + i) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_15 $$ aCommand.setOption("-casId", "" + i) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_16 $$ aCommand.setOption("-cas", commandLine.getOptionValue("cas")) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_16 $$ aCommand.setOption("-cas", commandLine.getOptionValue("cas")) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_17 $$ aCommand.setOption("-o", outputDir.getAbsolutePath()) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_17 $$ aCommand.setOption("-o", outputDir.getAbsolutePath()) [FD]
Line_13 $$ File outputDir = consedOut.createNewDir("" + i) --> Line_17 $$ aCommand.setOption("-o", outputDir.getAbsolutePath()) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_18 $$ aCommand.setOption("-tempDir", tempDir.getAbsolutePath()) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_18 $$ aCommand.setOption("-tempDir", tempDir.getAbsolutePath()) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_19 $$ aCommand.setOption("-prefix", "temp") [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_19 $$ aCommand.setOption("-prefix", "temp") [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_20 $$ if (commandLine.hasOption("useIllumina")) [CD]
Line_20 $$ if (commandLine.hasOption("useIllumina")) --> Line_21 $$ aCommand.addFlag("-useIllumina") [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_21 $$ aCommand.addFlag("-useIllumina") [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_23 $$ if (commandLine.hasOption("useClosureTrimming")) [CD]
Line_23 $$ if (commandLine.hasOption("useClosureTrimming")) --> Line_24 $$ aCommand.addFlag("-useClosureTrimming") [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_24 $$ aCommand.addFlag("-useClosureTrimming") [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_26 $$ if (commandLine.hasOption("trim")) [CD]
Line_26 $$ if (commandLine.hasOption("trim")) --> Line_27 $$ aCommand.setOption("-trim", commandLine.getOptionValue("trim")) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_27 $$ aCommand.setOption("-trim", commandLine.getOptionValue("trim")) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_29 $$ if (commandLine.hasOption("trimMap")) [CD]
Line_29 $$ if (commandLine.hasOption("trimMap")) --> Line_30 $$ aCommand.setOption("-trimMap", commandLine.getOptionValue("trimMap")) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_30 $$ aCommand.setOption("-trimMap", commandLine.getOptionValue("trimMap")) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_32 $$ if (commandLine.hasOption("chromat_dir")) [CD]
Line_32 $$ if (commandLine.hasOption("chromat_dir")) --> Line_33 $$ aCommand.setOption("-chromat_dir", commandLine.getOptionValue("chromat_dir")) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_33 $$ aCommand.setOption("-chromat_dir", commandLine.getOptionValue("chromat_dir")) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_35 $$ submitSingleCasAssemblyConversion(aCommand) [CD]
Line_14 $$ Command aCommand = new Command(new File("fakeCommand")) --> Line_35 $$ submitSingleCasAssemblyConversion(aCommand) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) [FD]
Line_11 $$ int numberOfCasContigs = read2contigMap.getNumberOfContigs() --> Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) [FD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_41 $$ File countMap = consedOut.getFile(i + "/temp.counts") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_41 $$ File countMap = consedOut.getFile(i + "/temp.counts") [FD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_42 $$ Scanner scanner = new Scanner(countMap) [CD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_43 $$ if (!scanner.hasNextInt()) [CD]
Line_42 $$ Scanner scanner = new Scanner(countMap) --> Line_43 $$ if (!scanner.hasNextInt()) [FD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_46 $$ numContigs += scanner.nextInt() [CD]
Line_38 $$ int numContigs = 0 --> Line_46 $$ numContigs += scanner.nextInt() [FD]
Line_42 $$ Scanner scanner = new Scanner(countMap) --> Line_46 $$ numContigs += scanner.nextInt() [FD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_47 $$ numReads += scanner.nextInt() [CD]
Line_39 $$ int numReads = 0 --> Line_47 $$ numReads += scanner.nextInt() [FD]
Line_42 $$ Scanner scanner = new Scanner(countMap) --> Line_47 $$ numReads += scanner.nextInt() [FD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_48 $$ scanner.close() [CD]
Line_42 $$ Scanner scanner = new Scanner(countMap) --> Line_48 $$ scanner.close() [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_52 $$ consedOut.createNewDir("edit_dir") [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_53 $$ consedOut.createNewDir("phd_dir") [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_55 $$ OutputStream masterAceOut = new FileOutputStream(consedOut.createNewFile("edit_dir/" + prefix + ".ace.1")) [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_56 $$ OutputStream masterPhdOut = new FileOutputStream(consedOut.createNewFile("phd_dir/" + prefix + ".phd.ball")) [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_57 $$ OutputStream masterConsensusOut = new FileOutputStream(consedOut.createNewFile(prefix + ".consensus.fasta")) [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_58 $$ OutputStream logOut = new FileOutputStream(consedOut.createNewFile(prefix + ".log")) [FD]
Line_55 $$ OutputStream masterAceOut = new FileOutputStream(consedOut.createNewFile("edit_dir/" + prefix + ".ace.1")) --> Line_60 $$ masterAceOut.write(String.format("AS %d %d%n", numContigs, numReads).getBytes()) [FD]
Line_46 $$ numContigs += scanner.nextInt() --> Line_60 $$ masterAceOut.write(String.format("AS %d %d%n", numContigs, numReads).getBytes()) [FD]
Line_38 $$ int numContigs = 0 --> Line_60 $$ masterAceOut.write(String.format("AS %d %d%n", numContigs, numReads).getBytes()) [FD]
Line_47 $$ numReads += scanner.nextInt() --> Line_60 $$ masterAceOut.write(String.format("AS %d %d%n", numContigs, numReads).getBytes()) [FD]
Line_39 $$ int numReads = 0 --> Line_60 $$ masterAceOut.write(String.format("AS %d %d%n", numContigs, numReads).getBytes()) [FD]
Line_40 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) [FD]
Line_12 $$ for (long i = 0; i < numberOfCasContigs; i++) --> Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) [FD]
Line_11 $$ int numberOfCasContigs = read2contigMap.getNumberOfContigs() --> Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_62 $$ InputStream aceIn = consedOut.getFileAsStream(i + "/temp.ace") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_62 $$ InputStream aceIn = consedOut.getFileAsStream(i + "/temp.ace") [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_63 $$ IOUtils.copy(aceIn, masterAceOut) [CD]
Line_62 $$ InputStream aceIn = consedOut.getFileAsStream(i + "/temp.ace") --> Line_63 $$ IOUtils.copy(aceIn, masterAceOut) [FD]
Line_55 $$ OutputStream masterAceOut = new FileOutputStream(consedOut.createNewFile("edit_dir/" + prefix + ".ace.1")) --> Line_63 $$ IOUtils.copy(aceIn, masterAceOut) [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_64 $$ InputStream phdIn = consedOut.getFileAsStream(i + "/temp.phd") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_64 $$ InputStream phdIn = consedOut.getFileAsStream(i + "/temp.phd") [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_65 $$ IOUtils.copy(phdIn, masterPhdOut) [CD]
Line_64 $$ InputStream phdIn = consedOut.getFileAsStream(i + "/temp.phd") --> Line_65 $$ IOUtils.copy(phdIn, masterPhdOut) [FD]
Line_56 $$ OutputStream masterPhdOut = new FileOutputStream(consedOut.createNewFile("phd_dir/" + prefix + ".phd.ball")) --> Line_65 $$ IOUtils.copy(phdIn, masterPhdOut) [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_66 $$ InputStream consensusIn = consedOut.getFileAsStream(i + "/temp.consensus.fasta") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_66 $$ InputStream consensusIn = consedOut.getFileAsStream(i + "/temp.consensus.fasta") [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_67 $$ IOUtils.copy(consensusIn, masterConsensusOut) [CD]
Line_66 $$ InputStream consensusIn = consedOut.getFileAsStream(i + "/temp.consensus.fasta") --> Line_67 $$ IOUtils.copy(consensusIn, masterConsensusOut) [FD]
Line_57 $$ OutputStream masterConsensusOut = new FileOutputStream(consedOut.createNewFile(prefix + ".consensus.fasta")) --> Line_67 $$ IOUtils.copy(consensusIn, masterConsensusOut) [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_68 $$ IOUtil.closeAndIgnoreErrors(aceIn, phdIn, consensusIn) [CD]
Line_62 $$ InputStream aceIn = consedOut.getFileAsStream(i + "/temp.ace") --> Line_68 $$ IOUtil.closeAndIgnoreErrors(aceIn, phdIn, consensusIn) [FD]
Line_64 $$ InputStream phdIn = consedOut.getFileAsStream(i + "/temp.phd") --> Line_68 $$ IOUtil.closeAndIgnoreErrors(aceIn, phdIn, consensusIn) [FD]
Line_66 $$ InputStream consensusIn = consedOut.getFileAsStream(i + "/temp.consensus.fasta") --> Line_68 $$ IOUtil.closeAndIgnoreErrors(aceIn, phdIn, consensusIn) [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_69 $$ File tempDir = consedOut.getFile(i + "") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_69 $$ File tempDir = consedOut.getFile(i + "") [FD]
Line_61 $$ for (int i = 0; i < numberOfCasContigs; i++) --> Line_70 $$ IOUtil.recursiveDelete(tempDir) [CD]
Line_69 $$ File tempDir = consedOut.getFile(i + "") --> Line_70 $$ IOUtil.recursiveDelete(tempDir) [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_72 $$ consedOut.createNewSymLink("../phd_dir/" + prefix + ".phd.ball", "edit_dir/phd.ball") [FD]
Line_73 $$ if (commandLine.hasOption("chromat_dir")) --> Line_74 $$ consedOut.createNewDir("chromat_dir") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_74 $$ consedOut.createNewDir("chromat_dir") [FD]
Line_73 $$ if (commandLine.hasOption("chromat_dir")) --> Line_75 $$ File originalChromatDir = new File(commandLine.getOptionValue("chromat_dir")) [CD]
Line_75 $$ File originalChromatDir = new File(commandLine.getOptionValue("chromat_dir")) --> Line_76 $$ for (File chromat : originalChromatDir.listFiles(new FilenameFilter() [FD]
Line_76 $$ for (File chromat : originalChromatDir.listFiles(new FilenameFilter() --> Line_78 $$ return name.endsWith(".scf") [CD]
Line_76 $$ for (File chromat : originalChromatDir.listFiles(new FilenameFilter() --> Line_78 $$ return name.endsWith(".scf") [FD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_81 $$ File newChromatFile = consedOut.createNewFile("chromat_dir/" + FilenameUtils.getBaseName(chromat.getName())) [FD]
Line_76 $$ for (File chromat : originalChromatDir.listFiles(new FilenameFilter() --> Line_81 $$ File newChromatFile = consedOut.createNewFile("chromat_dir/" + FilenameUtils.getBaseName(chromat.getName())) [FD]
Line_7 $$ AbstractDefaultCasFileLookup readIdLookup = new DefaultReadCasFileLookup(casWorkingDirectory) --> Line_89 $$ for (File traceFile : readIdLookup.getFiles()) [FD]
Line_76 $$ for (File chromat : originalChromatDir.listFiles(new FilenameFilter() --> Line_91 $$ String extension = FilenameUtils.getExtension(name) [FD]
Line_76 $$ for (File chromat : originalChromatDir.listFiles(new FilenameFilter() --> Line_92 $$ if (name.contains("fastq")) [FD]
Line_92 $$ if (name.contains("fastq")) --> Line_93 $$ if (!consedOut.contains("solexa_dir")) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_93 $$ if (!consedOut.contains("solexa_dir")) [FD]
Line_93 $$ if (!consedOut.contains("solexa_dir")) --> Line_94 $$ consedOut.createNewDir("solexa_dir") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_94 $$ consedOut.createNewDir("solexa_dir") [FD]
Line_92 $$ if (name.contains("fastq")) --> Line_96 $$ if (consedOut.contains("solexa_dir/" + name)) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_96 $$ if (consedOut.contains("solexa_dir/" + name)) [FD]
Line_96 $$ if (consedOut.contains("solexa_dir/" + name)) --> Line_97 $$ IOUtil.delete(consedOut.getFile("solexa_dir/" + name)) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_97 $$ IOUtil.delete(consedOut.getFile("solexa_dir/" + name)) [FD]
Line_92 $$ if (name.contains("fastq")) --> Line_99 $$ consedOut.createNewSymLink(traceFile.getAbsolutePath(), "solexa_dir/" + name) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_99 $$ consedOut.createNewSymLink(traceFile.getAbsolutePath(), "solexa_dir/" + name) [FD]
Line_92 $$ if (name.contains("fastq")) --> Line_100 $$ if ("sff".equals(extension)) [CD]
Line_100 $$ if ("sff".equals(extension)) --> Line_101 $$ if (!consedOut.contains("sff_dir")) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_101 $$ if (!consedOut.contains("sff_dir")) [FD]
Line_101 $$ if (!consedOut.contains("sff_dir")) --> Line_102 $$ consedOut.createNewDir("sff_dir") [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_102 $$ consedOut.createNewDir("sff_dir") [FD]
Line_100 $$ if ("sff".equals(extension)) --> Line_104 $$ if (consedOut.contains("sff_dir/" + name)) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_104 $$ if (consedOut.contains("sff_dir/" + name)) [FD]
Line_104 $$ if (consedOut.contains("sff_dir/" + name)) --> Line_105 $$ IOUtil.delete(consedOut.getFile("sff_dir/" + name)) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_105 $$ IOUtil.delete(consedOut.getFile("sff_dir/" + name)) [FD]
Line_100 $$ if ("sff".equals(extension)) --> Line_107 $$ consedOut.createNewSymLink(traceFile.getAbsolutePath(), "sff_dir/" + name) [CD]
Line_9 $$ ReadWriteDirectoryFileServer consedOut = DirectoryFileServer.createReadWriteDirectoryFileServer(commandLine.getOptionValue("o")) --> Line_107 $$ consedOut.createNewSymLink(traceFile.getAbsolutePath(), "sff_dir/" + name) [FD]
Line_58 $$ OutputStream logOut = new FileOutputStream(consedOut.createNewFile(prefix + ".log")) --> Line_111 $$ logOut.write(String.format("took %s%n", new Period(endTime - startTime)).getBytes()) [FD]
Line_55 $$ OutputStream masterAceOut = new FileOutputStream(consedOut.createNewFile("edit_dir/" + prefix + ".ace.1")) --> Line_113 $$ IOUtil.closeAndIgnoreErrors(masterAceOut, masterPhdOut, masterConsensusOut, logOut) [FD]
Line_56 $$ OutputStream masterPhdOut = new FileOutputStream(consedOut.createNewFile("phd_dir/" + prefix + ".phd.ball")) --> Line_113 $$ IOUtil.closeAndIgnoreErrors(masterAceOut, masterPhdOut, masterConsensusOut, logOut) [FD]
Line_57 $$ OutputStream masterConsensusOut = new FileOutputStream(consedOut.createNewFile(prefix + ".consensus.fasta")) --> Line_113 $$ IOUtil.closeAndIgnoreErrors(masterAceOut, masterPhdOut, masterConsensusOut, logOut) [FD]
Line_58 $$ OutputStream logOut = new FileOutputStream(consedOut.createNewFile(prefix + ".log")) --> Line_113 $$ IOUtil.closeAndIgnoreErrors(masterAceOut, masterPhdOut, masterConsensusOut, logOut) [FD]
Line_2 $$ public CasAssembly build() --> Line_120 $$ return null [CD]
