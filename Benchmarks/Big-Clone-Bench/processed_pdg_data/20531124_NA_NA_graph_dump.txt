Line_4 $$ Socket s = new Socket(host, port) --> Line_6 $$ ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream()) [FD]
Line_4 $$ Socket s = new Socket(host, port) --> Line_7 $$ ObjectInputStream in = new ObjectInputStream(s.getInputStream()) [FD]
Line_7 $$ ObjectInputStream in = new ObjectInputStream(s.getInputStream()) --> Line_8 $$ int protocolVersion = in.readInt() [FD]
Line_8 $$ int protocolVersion = in.readInt() --> Line_9 $$ if (protocolVersion > 220) [FD]
Line_7 $$ ObjectInputStream in = new ObjectInputStream(s.getInputStream()) --> Line_12 $$ byte[] challenge = (byte[]) in.readObject() [FD]
Line_13 $$ MessageDigest md = MessageDigest.getInstance("SHA") --> Line_14 $$ md.update(password.getBytes("UTF-8")) [FD]
Line_2 $$ public static Debugger getDebugger(InetAddress host, int port, String password) throws IOException --> Line_14 $$ md.update(password.getBytes("UTF-8")) [FD]
Line_13 $$ MessageDigest md = MessageDigest.getInstance("SHA") --> Line_15 $$ md.update(challenge) [FD]
Line_12 $$ byte[] challenge = (byte[]) in.readObject() --> Line_15 $$ md.update(challenge) [FD]
Line_6 $$ ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream()) --> Line_16 $$ out.writeObject(md.digest()) [FD]
Line_13 $$ MessageDigest md = MessageDigest.getInstance("SHA") --> Line_16 $$ out.writeObject(md.digest()) [FD]
Line_7 $$ ObjectInputStream in = new ObjectInputStream(s.getInputStream()) --> Line_17 $$ return new LocalDebuggerProxy((Debugger) in.readObject()) [FD]
Line_4 $$ Socket s = new Socket(host, port) --> Line_19 $$ s.close() [FD]
