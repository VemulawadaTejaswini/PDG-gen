Line_2 $$ private Callable<Request> newRequestCall(final Request request) --> Line_3 $$ return new Callable<Request>() [CD]
Line_3 $$ return new Callable<Request>() --> Line_5 $$ InputStream is = null [CD]
Line_8 $$ HttpGet httpGet = new HttpGet(request.uri.toString()) --> Line_9 $$ httpGet.addHeader("Accept-Encoding", "gzip") [FD]
Line_8 $$ HttpGet httpGet = new HttpGet(request.uri.toString()) --> Line_10 $$ HttpResponse response = mHttpClient.execute(httpGet) [FD]
Line_10 $$ HttpResponse response = mHttpClient.execute(httpGet) --> Line_11 $$ String mimeType = response.getHeaders("Content-Type")[0].getValue() [FD]
Line_11 $$ String mimeType = response.getHeaders("Content-Type")[0].getValue() --> Line_13 $$ if (mimeType.startsWith("image")) [FD]
Line_13 $$ if (mimeType.startsWith("image")) --> Line_14 $$ HttpEntity entity = response.getEntity() [CD]
Line_10 $$ HttpResponse response = mHttpClient.execute(httpGet) --> Line_14 $$ HttpEntity entity = response.getEntity() [FD]
Line_13 $$ if (mimeType.startsWith("image")) --> Line_15 $$ is = getUngzippedContent(entity) [CD]
Line_5 $$ InputStream is = null --> Line_15 $$ is = getUngzippedContent(entity) [FD]
Line_14 $$ HttpEntity entity = response.getEntity() --> Line_15 $$ is = getUngzippedContent(entity) [FD]
Line_13 $$ if (mimeType.startsWith("image")) --> Line_16 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) [CD]
Line_5 $$ InputStream is = null --> Line_16 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) [FD]
Line_15 $$ is = getUngzippedContent(entity) --> Line_16 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) [FD]
Line_13 $$ if (mimeType.startsWith("image")) --> Line_17 $$ if (mResourceCache.store(request.hash, bitmap)) [CD]
Line_16 $$ Bitmap bitmap = BitmapFactory.decodeStream(is) --> Line_17 $$ if (mResourceCache.store(request.hash, bitmap)) [FD]
Line_17 $$ if (mResourceCache.store(request.hash, bitmap)) --> Line_18 $$ mCache.put(request.uri.toString(), new SoftReference<Bitmap>(bitmap)) [CD]
Line_17 $$ if (mResourceCache.store(request.hash, bitmap)) --> Line_19 $$ Log.d(TAG, "Request successful: " + request.uri) [CD]
Line_17 $$ if (mResourceCache.store(request.hash, bitmap)) --> Line_21 $$ mResourceCache.invalidate(request.hash) [CD]
Line_2 $$ private Callable<Request> newRequestCall(final Request request) --> Line_28 $$ mActiveRequestsMap.remove(request) [FD]
Line_5 $$ InputStream is = null --> Line_29 $$ if (is != null) [FD]
Line_15 $$ is = getUngzippedContent(entity) --> Line_29 $$ if (is != null) [FD]
Line_29 $$ if (is != null) --> Line_30 $$ notifyObservers(request.uri) [CD]
Line_5 $$ InputStream is = null --> Line_33 $$ if (is != null) [FD]
Line_15 $$ is = getUngzippedContent(entity) --> Line_33 $$ if (is != null) [FD]
Line_33 $$ if (is != null) --> Line_34 $$ is.close() [CD]
Line_5 $$ InputStream is = null --> Line_34 $$ is.close() [FD]
Line_15 $$ is = getUngzippedContent(entity) --> Line_34 $$ is.close() [FD]
Line_3 $$ return new Callable<Request>() --> Line_40 $$ return request [CD]
