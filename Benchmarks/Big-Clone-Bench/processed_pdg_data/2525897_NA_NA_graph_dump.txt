Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST) --> Line_6 $$ digester.reset() [FD]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) --> Line_8 $$ digester.update(salt) [CD]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST) --> Line_8 $$ digester.update(salt) [FD]
Line_2 $$ public static byte[] decode(String cryptPassword, byte[] encoded, byte[] salt) --> Line_8 $$ digester.update(salt) [FD]
Line_7 $$ for (int i = 0; i < ITERATIONS; i++) --> Line_9 $$ digester.update(cryptPassword.getBytes("UTF-8")) [CD]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST) --> Line_9 $$ digester.update(cryptPassword.getBytes("UTF-8")) [FD]
Line_2 $$ public static byte[] decode(String cryptPassword, byte[] encoded, byte[] salt) --> Line_9 $$ digester.update(cryptPassword.getBytes("UTF-8")) [FD]
Line_4 $$ MessageDigest digester = MessageDigest.getInstance(DIGEST) --> Line_11 $$ byte[] hash = digester.digest() [FD]
Line_5 $$ SecureRandom random = SecureRandom.getInstance(RANDOM) --> Line_12 $$ random.setSeed(hash) [FD]
Line_11 $$ byte[] hash = digester.digest() --> Line_12 $$ random.setSeed(hash) [FD]
Line_14 $$ KeyGenerator generator = KeyGenerator.getInstance(CIPHER) --> Line_15 $$ generator.init(maxKeySize, random) [FD]
Line_13 $$ int maxKeySize = Cipher.getMaxAllowedKeyLength(CIPHER) --> Line_15 $$ generator.init(maxKeySize, random) [FD]
Line_5 $$ SecureRandom random = SecureRandom.getInstance(RANDOM) --> Line_15 $$ generator.init(maxKeySize, random) [FD]
Line_14 $$ KeyGenerator generator = KeyGenerator.getInstance(CIPHER) --> Line_16 $$ SecretKey key = generator.generateKey() [FD]
Line_17 $$ Cipher cipher = Cipher.getInstance(CIPHER) --> Line_18 $$ cipher.init(Cipher.DECRYPT_MODE, key) [FD]
Line_16 $$ SecretKey key = generator.generateKey() --> Line_18 $$ cipher.init(Cipher.DECRYPT_MODE, key) [FD]
Line_17 $$ Cipher cipher = Cipher.getInstance(CIPHER) --> Line_19 $$ byte[] decoded = cipher.doFinal(encoded) [FD]
Line_2 $$ public static byte[] decode(String cryptPassword, byte[] encoded, byte[] salt) --> Line_19 $$ byte[] decoded = cipher.doFinal(encoded) [FD]
Line_2 $$ public static byte[] decode(String cryptPassword, byte[] encoded, byte[] salt) --> Line_24 $$ return new byte[0] [CD]
