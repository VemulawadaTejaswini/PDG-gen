Line_2 $$ private static int chkPasswd(final String sInputPwd, final String sSshaPwd) --> Line_5 $$ int r = ERR_LOGIN_ACCOUNT [CD]
Line_7 $$ BASE64Decoder decoder = new BASE64Decoder() --> Line_8 $$ byte[] ba = decoder.decodeBuffer(sSshaPwd) [FD]
Line_2 $$ private static int chkPasswd(final String sInputPwd, final String sSshaPwd) --> Line_8 $$ byte[] ba = decoder.decodeBuffer(sSshaPwd) [FD]
Line_8 $$ byte[] ba = decoder.decodeBuffer(sSshaPwd) --> Line_12 $$ System.arraycopy(ba, 0, hash, 0, FIXED_HASH_SIZE) [FD]
Line_10 $$ byte[] hash = new byte[FIXED_HASH_SIZE] --> Line_12 $$ System.arraycopy(ba, 0, hash, 0, FIXED_HASH_SIZE) [FD]
Line_8 $$ byte[] ba = decoder.decodeBuffer(sSshaPwd) --> Line_13 $$ System.arraycopy(ba, FIXED_HASH_SIZE, salt, 0, FIXED_SALT_SIZE) [FD]
Line_11 $$ byte[] salt = new byte[FIXED_SALT_SIZE] --> Line_13 $$ System.arraycopy(ba, FIXED_HASH_SIZE, salt, 0, FIXED_SALT_SIZE) [FD]
Line_14 $$ MessageDigest md = MessageDigest.getInstance("SHA-1") --> Line_15 $$ md.update(sInputPwd.getBytes()) [FD]
Line_2 $$ private static int chkPasswd(final String sInputPwd, final String sSshaPwd) --> Line_15 $$ md.update(sInputPwd.getBytes()) [FD]
Line_14 $$ MessageDigest md = MessageDigest.getInstance("SHA-1") --> Line_16 $$ md.update(salt) [FD]
Line_11 $$ byte[] salt = new byte[FIXED_SALT_SIZE] --> Line_16 $$ md.update(salt) [FD]
Line_14 $$ MessageDigest md = MessageDigest.getInstance("SHA-1") --> Line_17 $$ byte[] baPwdHash = md.digest() [FD]
Line_10 $$ byte[] hash = new byte[FIXED_HASH_SIZE] --> Line_18 $$ if (MessageDigest.isEqual(hash, baPwdHash)) [FD]
Line_17 $$ byte[] baPwdHash = md.digest() --> Line_18 $$ if (MessageDigest.isEqual(hash, baPwdHash)) [FD]
Line_18 $$ if (MessageDigest.isEqual(hash, baPwdHash)) --> Line_19 $$ r = ERR_LOGIN_OK [CD]
Line_5 $$ int r = ERR_LOGIN_ACCOUNT --> Line_19 $$ r = ERR_LOGIN_OK [FD]
Line_2 $$ private static int chkPasswd(final String sInputPwd, final String sSshaPwd) --> Line_24 $$ return r [CD]
