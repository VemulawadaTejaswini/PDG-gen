Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_12 $$ iCount = -1 [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_13 $$ iCursor = -1 [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_14 $$ iRealCursor = -1 [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_15 $$ iCompleteListSize = -1 [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_16 $$ if (!strVerb.equals("ListIdentifiers") && !strVerb.equals("ListMetadataFormats") && !strVerb.equals("ListRecords") && !strVerb.equals("ListSets")) [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_19 $$ if (strBaseURL.length() == 0) [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_22 $$ if (params.length() > 0) [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_22 $$ if (params.length() > 0) [FD]
Line_22 $$ if (params.length() > 0) --> Line_23 $$ if (params.charAt(0) != '&') [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_23 $$ if (params.charAt(0) != '&') [FD]
Line_23 $$ if (params.charAt(0) != '&') --> Line_24 $$ params = "&" + params [CD]
Line_2 $$ private void initialize(OAIRepository repo, String u, String v, String params) throws OAIException --> Line_24 $$ params = "&" + params [FD]
Line_28 $$ URL url = new URL(strBaseURL + "?verb=" + strVerb + params) --> Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() [FD]
Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() --> Line_30 $$ http = oParent.frndTrySend(http) [FD]
Line_31 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance() --> Line_32 $$ docFactory.setNamespaceAware(true) [FD]
Line_33 $$ if (oParent.getValidation() == OAIRepository.VALIDATION_VERY_STRICT) --> Line_34 $$ docFactory.setValidating(true) [CD]
Line_31 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance() --> Line_34 $$ docFactory.setValidating(true) [FD]
Line_33 $$ if (oParent.getValidation() == OAIRepository.VALIDATION_VERY_STRICT) --> Line_36 $$ docFactory.setValidating(false) [CD]
Line_31 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance() --> Line_36 $$ docFactory.setValidating(false) [FD]
Line_31 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance() --> Line_38 $$ DocumentBuilder docBuilder = docFactory.newDocumentBuilder() [FD]
Line_38 $$ DocumentBuilder docBuilder = docFactory.newDocumentBuilder() --> Line_40 $$ xml = docBuilder.parse(http.getInputStream()) [FD]
Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() --> Line_40 $$ xml = docBuilder.parse(http.getInputStream()) [FD]
Line_30 $$ http = oParent.frndTrySend(http) --> Line_40 $$ xml = docBuilder.parse(http.getInputStream()) [FD]
Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() --> Line_49 $$ http.disconnect() [FD]
Line_30 $$ http = oParent.frndTrySend(http) --> Line_49 $$ http.disconnect() [FD]
Line_28 $$ URL url = new URL(strBaseURL + "?verb=" + strVerb + params) --> Line_50 $$ url = new URL(strBaseURL + "?verb=" + strVerb + params) [FD]
Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() --> Line_51 $$ http = (HttpURLConnection) url.openConnection() [FD]
Line_30 $$ http = oParent.frndTrySend(http) --> Line_51 $$ http = (HttpURLConnection) url.openConnection() [FD]
Line_28 $$ URL url = new URL(strBaseURL + "?verb=" + strVerb + params) --> Line_51 $$ http = (HttpURLConnection) url.openConnection() [FD]
Line_50 $$ url = new URL(strBaseURL + "?verb=" + strVerb + params) --> Line_51 $$ http = (HttpURLConnection) url.openConnection() [FD]
Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() --> Line_52 $$ http = oParent.frndTrySend(http) [FD]
Line_30 $$ http = oParent.frndTrySend(http) --> Line_52 $$ http = oParent.frndTrySend(http) [FD]
Line_51 $$ http = (HttpURLConnection) url.openConnection() --> Line_52 $$ http = oParent.frndTrySend(http) [FD]
Line_38 $$ DocumentBuilder docBuilder = docFactory.newDocumentBuilder() --> Line_53 $$ xml = docBuilder.parse(priCreateDummyResponse(http.getInputStream())) [FD]
Line_29 $$ HttpURLConnection http = (HttpURLConnection) url.openConnection() --> Line_53 $$ xml = docBuilder.parse(priCreateDummyResponse(http.getInputStream())) [FD]
Line_30 $$ http = oParent.frndTrySend(http) --> Line_53 $$ xml = docBuilder.parse(priCreateDummyResponse(http.getInputStream())) [FD]
Line_51 $$ http = (HttpURLConnection) url.openConnection() --> Line_53 $$ xml = docBuilder.parse(priCreateDummyResponse(http.getInputStream())) [FD]
Line_52 $$ http = oParent.frndTrySend(http) --> Line_53 $$ xml = docBuilder.parse(priCreateDummyResponse(http.getInputStream())) [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_65 $$ int ctxtNode = xpathSupport.getDTMHandleFromNode(xml) [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_65 $$ int ctxtNode = xpathSupport.getDTMHandleFromNode(xml) --> Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_67 $$ Node node = list.nodeset().nextNode() [FD]
Line_67 $$ Node node = list.nodeset().nextNode() --> Line_68 $$ if (node == null) [FD]
Line_68 $$ if (node == null) --> Line_69 $$ namespaceNode.setAttribute("xmlns:oai", OAIRepository.XMLNS_OAI_2_0) [CD]
Line_68 $$ if (node == null) --> Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) [CD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) [FD]
Line_68 $$ if (node == null) --> Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) [CD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) [FD]
Line_68 $$ if (node == null) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [CD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_65 $$ int ctxtNode = xpathSupport.getDTMHandleFromNode(xml) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_68 $$ if (node == null) --> Line_73 $$ node = list.nodeset().nextNode() [CD]
Line_67 $$ Node node = list.nodeset().nextNode() --> Line_73 $$ node = list.nodeset().nextNode() [FD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_73 $$ node = list.nodeset().nextNode() [FD]
Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_73 $$ node = list.nodeset().nextNode() [FD]
Line_68 $$ if (node == null) --> Line_74 $$ if (node == null) [CD]
Line_67 $$ Node node = list.nodeset().nextNode() --> Line_74 $$ if (node == null) [FD]
Line_73 $$ node = list.nodeset().nextNode() --> Line_74 $$ if (node == null) [FD]
Line_74 $$ if (node == null) --> Line_75 $$ namespaceNode.setAttribute("xmlns:oai", OAIRepository.XMLNS_OAI_1_0 + strVerb) [CD]
Line_74 $$ if (node == null) --> Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) [CD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) [FD]
Line_74 $$ if (node == null) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [CD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_65 $$ int ctxtNode = xpathSupport.getDTMHandleFromNode(xml) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_74 $$ if (node == null) --> Line_79 $$ NodeList nl = list.nodelist() [CD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_79 $$ NodeList nl = list.nodelist() [FD]
Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_79 $$ NodeList nl = list.nodelist() [FD]
Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_79 $$ NodeList nl = list.nodelist() [FD]
Line_74 $$ if (node == null) --> Line_80 $$ if (nl.getLength() > 0) [CD]
Line_79 $$ NodeList nl = list.nodelist() --> Line_80 $$ if (nl.getLength() > 0) [FD]
Line_80 $$ if (nl.getLength() > 0) --> Line_81 $$ oParent.frndSetErrors(nl) [CD]
Line_79 $$ NodeList nl = list.nodelist() --> Line_81 $$ oParent.frndSetErrors(nl) [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) [FD]
Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) --> Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) [FD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_65 $$ int ctxtNode = xpathSupport.getDTMHandleFromNode(xml) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) [FD]
Line_66 $$ XObject list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_88 $$ nodeList = list.nodelist() [FD]
Line_72 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_88 $$ nodeList = list.nodelist() [FD]
Line_78 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_88 $$ nodeList = list.nodelist() [FD]
Line_87 $$ list = xpath.execute(xpathSupport, ctxtNode, prefixResolver) --> Line_88 $$ nodeList = list.nodelist() [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_91 $$ xpath = new XPath("//oai:requestURL | //oai:request", null, prefixResolver, XPath.SELECT, null) [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_91 $$ xpath = new XPath("//oai:requestURL | //oai:request", null, prefixResolver, XPath.SELECT, null) [FD]
Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) --> Line_91 $$ xpath = new XPath("//oai:requestURL | //oai:request", null, prefixResolver, XPath.SELECT, null) [FD]
Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_91 $$ xpath = new XPath("//oai:requestURL | //oai:request", null, prefixResolver, XPath.SELECT, null) [FD]
Line_67 $$ Node node = list.nodeset().nextNode() --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_73 $$ node = list.nodeset().nextNode() --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_91 $$ xpath = new XPath("//oai:requestURL | //oai:request", null, prefixResolver, XPath.SELECT, null) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_65 $$ int ctxtNode = xpathSupport.getDTMHandleFromNode(xml) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() [FD]
Line_67 $$ Node node = list.nodeset().nextNode() --> Line_93 $$ if (node != null) [FD]
Line_73 $$ node = list.nodeset().nextNode() --> Line_93 $$ if (node != null) [FD]
Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() --> Line_93 $$ if (node != null) [FD]
Line_93 $$ if (node != null) --> Line_94 $$ oParent.frndSetRequest(node) [CD]
Line_67 $$ Node node = list.nodeset().nextNode() --> Line_94 $$ oParent.frndSetRequest(node) [FD]
Line_73 $$ node = list.nodeset().nextNode() --> Line_94 $$ oParent.frndSetRequest(node) [FD]
Line_92 $$ node = xpath.execute(xpathSupport, ctxtNode, prefixResolver).nodeset().nextNode() --> Line_94 $$ oParent.frndSetRequest(node) [FD]
Line_31 $$ DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance() --> Line_97 $$ docFactory = null [FD]
Line_38 $$ DocumentBuilder docBuilder = docFactory.newDocumentBuilder() --> Line_98 $$ docBuilder = null [FD]
Line_28 $$ URL url = new URL(strBaseURL + "?verb=" + strVerb + params) --> Line_99 $$ url = null [FD]
Line_50 $$ url = new URL(strBaseURL + "?verb=" + strVerb + params) --> Line_99 $$ url = null [FD]
Line_62 $$ PrefixResolverDefault prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_100 $$ prefixResolver = null [FD]
Line_70 $$ prefixResolver = new PrefixResolverDefault(namespaceNode) --> Line_100 $$ prefixResolver = null [FD]
Line_64 $$ XPathContext xpathSupport = new XPathContext() --> Line_101 $$ xpathSupport = null [FD]
Line_63 $$ XPath xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_102 $$ xpath = null [FD]
Line_71 $$ xpath = new XPath("/oai:OAI-PMH", null, prefixResolver, XPath.SELECT, null) --> Line_102 $$ xpath = null [FD]
Line_77 $$ xpath = new XPath("oai:OAI-PMH/oai:error", null, prefixResolver, XPath.SELECT, null) --> Line_102 $$ xpath = null [FD]
Line_86 $$ xpath = new XPath("//oai:" + strVerb + "/oai:" + priGetMainNodeName(), null, prefixResolver, XPath.SELECT, null) --> Line_102 $$ xpath = null [FD]
Line_91 $$ xpath = new XPath("//oai:requestURL | //oai:request", null, prefixResolver, XPath.SELECT, null) --> Line_102 $$ xpath = null [FD]
