Line_5 $$ URLConnection conn = (new URL(url)).openConnection() --> Line_6 $$ conn.connect() [FD]
Line_5 $$ URLConnection conn = (new URL(url)).openConnection() --> Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_8 $$ in.readLine() [FD]
Line_9 $$ String str = "" --> Line_10 $$ while ((str = in.readLine()) != null) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_10 $$ while ((str = in.readLine()) != null) [FD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_11 $$ final String[] split = str.split(",") [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_11 $$ final String[] split = str.split(",") [FD]
Line_9 $$ String str = "" --> Line_11 $$ final String[] split = str.split(",") [FD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_12 $$ final String date = split[0] [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_13 $$ final double open = Double.parseDouble(split[1]) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_14 $$ final double high = Double.parseDouble(split[2]) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_15 $$ final double low = Double.parseDouble(split[3]) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_16 $$ final double close = Double.parseDouble(split[4]) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_17 $$ final int volume = Integer.parseInt(split[5]) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_18 $$ final double adjClose = Double.parseDouble(split[6]) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_19 $$ final HistoricalPrice price = new HistoricalPrice(date, open, high, low, close, volume, adjClose) [CD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_20 $$ historicalPrices.add(price) [CD]
Line_19 $$ final HistoricalPrice price = new HistoricalPrice(date, open, high, low, close, volume, adjClose) --> Line_20 $$ historicalPrices.add(price) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_22 $$ in.close() [FD]
Line_4 $$ String url = "http://ichart.finance.yahoo.com/table.csv?s=" + symbol + "&a=00&b=2&c=1962&d=11&e=11&f=2099&g=d&ignore=.csv" --> Line_23 $$ url = "http://ichart.finance.yahoo.com/table.csv?s=" + symbol + "&a=00&b=2&c=1962&d=11&e=17&f=2008&g=v&ignore=.csv" [FD]
Line_5 $$ URLConnection conn = (new URL(url)).openConnection() --> Line_24 $$ conn = (new URL(url)).openConnection() [FD]
Line_5 $$ URLConnection conn = (new URL(url)).openConnection() --> Line_25 $$ conn.connect() [FD]
Line_24 $$ conn = (new URL(url)).openConnection() --> Line_25 $$ conn.connect() [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_26 $$ in = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_5 $$ URLConnection conn = (new URL(url)).openConnection() --> Line_26 $$ in = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_24 $$ conn = (new URL(url)).openConnection() --> Line_26 $$ in = new BufferedReader(new InputStreamReader(conn.getInputStream())) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_27 $$ in.readLine() [FD]
Line_26 $$ in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_27 $$ in.readLine() [FD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_28 $$ str = "" [FD]
Line_9 $$ String str = "" --> Line_28 $$ str = "" [FD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_29 $$ while ((str = in.readLine()) != null) [FD]
Line_9 $$ String str = "" --> Line_29 $$ while ((str = in.readLine()) != null) [FD]
Line_28 $$ str = "" --> Line_29 $$ while ((str = in.readLine()) != null) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_29 $$ while ((str = in.readLine()) != null) [FD]
Line_26 $$ in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_29 $$ while ((str = in.readLine()) != null) [FD]
Line_29 $$ while ((str = in.readLine()) != null) --> Line_30 $$ final String[] split = str.split(",") [CD]
Line_29 $$ while ((str = in.readLine()) != null) --> Line_30 $$ final String[] split = str.split(",") [FD]
Line_10 $$ while ((str = in.readLine()) != null) --> Line_30 $$ final String[] split = str.split(",") [FD]
Line_9 $$ String str = "" --> Line_30 $$ final String[] split = str.split(",") [FD]
Line_28 $$ str = "" --> Line_30 $$ final String[] split = str.split(",") [FD]
Line_29 $$ while ((str = in.readLine()) != null) --> Line_31 $$ final String date = split[0] [CD]
Line_29 $$ while ((str = in.readLine()) != null) --> Line_32 $$ final double amount = Double.parseDouble(split[1]) [CD]
Line_29 $$ while ((str = in.readLine()) != null) --> Line_33 $$ final Dividend dividend = new Dividend(date, amount) [CD]
Line_29 $$ while ((str = in.readLine()) != null) --> Line_34 $$ dividends.add(dividend) [CD]
Line_33 $$ final Dividend dividend = new Dividend(date, amount) --> Line_34 $$ dividends.add(dividend) [FD]
Line_7 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_36 $$ in.close() [FD]
Line_26 $$ in = new BufferedReader(new InputStreamReader(conn.getInputStream())) --> Line_36 $$ in.close() [FD]
