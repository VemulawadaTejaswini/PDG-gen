Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_3 $$ MessageDigest sha = null [CD]
Line_3 $$ MessageDigest sha = null --> Line_5 $$ sha = MessageDigest.getInstance("SHA") [FD]
Line_3 $$ MessageDigest sha = null --> Line_6 $$ assertNotNull(sha) [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_6 $$ assertNotNull(sha) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_10 $$ sha.update(MESSAGE.getBytes("UTF-8")) [CD]
Line_3 $$ MessageDigest sha = null --> Line_10 $$ sha.update(MESSAGE.getBytes("UTF-8")) [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_10 $$ sha.update(MESSAGE.getBytes("UTF-8")) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_11 $$ byte[] digest = sha.digest() [CD]
Line_3 $$ MessageDigest sha = null --> Line_11 $$ byte[] digest = sha.digest() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_11 $$ byte[] digest = sha.digest() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_12 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST)) [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_12 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST)) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_13 $$ sha.reset() [CD]
Line_3 $$ MessageDigest sha = null --> Line_13 $$ sha.reset() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_13 $$ sha.reset() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_14 $$ for (int i = 0; i < 63; i++) [CD]
Line_14 $$ for (int i = 0; i < 63; i++) --> Line_15 $$ sha.update((byte) 'a') [CD]
Line_3 $$ MessageDigest sha = null --> Line_15 $$ sha.update((byte) 'a') [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_15 $$ sha.update((byte) 'a') [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_17 $$ digest = sha.digest() [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_17 $$ digest = sha.digest() [FD]
Line_3 $$ MessageDigest sha = null --> Line_17 $$ digest = sha.digest() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_17 $$ digest = sha.digest() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_18 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_63_As)) [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_18 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_63_As)) [FD]
Line_17 $$ digest = sha.digest() --> Line_18 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_63_As)) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_19 $$ sha.reset() [CD]
Line_3 $$ MessageDigest sha = null --> Line_19 $$ sha.reset() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_19 $$ sha.reset() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_20 $$ for (int i = 0; i < 64; i++) [CD]
Line_14 $$ for (int i = 0; i < 63; i++) --> Line_20 $$ for (int i = 0; i < 64; i++) [FD]
Line_20 $$ for (int i = 0; i < 64; i++) --> Line_21 $$ sha.update((byte) 'a') [CD]
Line_3 $$ MessageDigest sha = null --> Line_21 $$ sha.update((byte) 'a') [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_21 $$ sha.update((byte) 'a') [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_23 $$ digest = sha.digest() [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_23 $$ digest = sha.digest() [FD]
Line_17 $$ digest = sha.digest() --> Line_23 $$ digest = sha.digest() [FD]
Line_3 $$ MessageDigest sha = null --> Line_23 $$ digest = sha.digest() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_23 $$ digest = sha.digest() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_24 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_64_As)) [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_24 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_64_As)) [FD]
Line_17 $$ digest = sha.digest() --> Line_24 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_64_As)) [FD]
Line_23 $$ digest = sha.digest() --> Line_24 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_64_As)) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_25 $$ sha.reset() [CD]
Line_3 $$ MessageDigest sha = null --> Line_25 $$ sha.reset() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_25 $$ sha.reset() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_26 $$ for (int i = 0; i < 65; i++) [CD]
Line_20 $$ for (int i = 0; i < 64; i++) --> Line_26 $$ for (int i = 0; i < 65; i++) [FD]
Line_14 $$ for (int i = 0; i < 63; i++) --> Line_26 $$ for (int i = 0; i < 65; i++) [FD]
Line_26 $$ for (int i = 0; i < 65; i++) --> Line_27 $$ sha.update((byte) 'a') [CD]
Line_3 $$ MessageDigest sha = null --> Line_27 $$ sha.update((byte) 'a') [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_27 $$ sha.update((byte) 'a') [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_29 $$ digest = sha.digest() [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_29 $$ digest = sha.digest() [FD]
Line_17 $$ digest = sha.digest() --> Line_29 $$ digest = sha.digest() [FD]
Line_23 $$ digest = sha.digest() --> Line_29 $$ digest = sha.digest() [FD]
Line_3 $$ MessageDigest sha = null --> Line_29 $$ digest = sha.digest() [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_29 $$ digest = sha.digest() [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_30 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_65_As)) [CD]
Line_11 $$ byte[] digest = sha.digest() --> Line_30 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_65_As)) [FD]
Line_17 $$ digest = sha.digest() --> Line_30 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_65_As)) [FD]
Line_23 $$ digest = sha.digest() --> Line_30 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_65_As)) [FD]
Line_29 $$ digest = sha.digest() --> Line_30 $$ assertTrue("bug in SHA", MessageDigest.isEqual(digest, MESSAGE_DIGEST_65_As)) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_31 $$ testSerializationSHA_DATA_1(sha) [CD]
Line_3 $$ MessageDigest sha = null --> Line_31 $$ testSerializationSHA_DATA_1(sha) [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_31 $$ testSerializationSHA_DATA_1(sha) [FD]
Line_2 $$ public void test_digest() throws UnsupportedEncodingException --> Line_32 $$ testSerializationSHA_DATA_2(sha) [CD]
Line_3 $$ MessageDigest sha = null --> Line_32 $$ testSerializationSHA_DATA_2(sha) [FD]
Line_5 $$ sha = MessageDigest.getInstance("SHA") --> Line_32 $$ testSerializationSHA_DATA_2(sha) [FD]
