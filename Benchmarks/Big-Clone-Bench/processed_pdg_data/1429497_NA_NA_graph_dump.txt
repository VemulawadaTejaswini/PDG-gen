Line_2 $$ private Scanner getUrlScanner(String strUrl) --> Line_3 $$ URL urlParticipants = null [CD]
Line_2 $$ private Scanner getUrlScanner(String strUrl) --> Line_4 $$ Scanner scannerParticipants [CD]
Line_3 $$ URL urlParticipants = null --> Line_6 $$ urlParticipants = new URL(strUrl) [FD]
Line_8 $$ if (StringUtils.isBlank(this.configProxyIp)) --> Line_9 $$ connParticipants = urlParticipants.openConnection() [CD]
Line_7 $$ URLConnection connParticipants --> Line_9 $$ connParticipants = urlParticipants.openConnection() [FD]
Line_3 $$ URL urlParticipants = null --> Line_9 $$ connParticipants = urlParticipants.openConnection() [FD]
Line_6 $$ urlParticipants = new URL(strUrl) --> Line_9 $$ connParticipants = urlParticipants.openConnection() [FD]
Line_8 $$ if (StringUtils.isBlank(this.configProxyIp)) --> Line_11 $$ SocketAddress address = new InetSocketAddress(this.configProxyIp, this.configProxyPort) [CD]
Line_8 $$ if (StringUtils.isBlank(this.configProxyIp)) --> Line_12 $$ Proxy proxy = new Proxy(Proxy.Type.HTTP, address) [CD]
Line_8 $$ if (StringUtils.isBlank(this.configProxyIp)) --> Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) [CD]
Line_7 $$ URLConnection connParticipants --> Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) [FD]
Line_9 $$ connParticipants = urlParticipants.openConnection() --> Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) [FD]
Line_3 $$ URL urlParticipants = null --> Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) [FD]
Line_6 $$ urlParticipants = new URL(strUrl) --> Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) [FD]
Line_12 $$ Proxy proxy = new Proxy(Proxy.Type.HTTP, address) --> Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) [FD]
Line_7 $$ URLConnection connParticipants --> Line_15 $$ InputStream streamParticipant = connParticipants.getInputStream() [FD]
Line_9 $$ connParticipants = urlParticipants.openConnection() --> Line_15 $$ InputStream streamParticipant = connParticipants.getInputStream() [FD]
Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) --> Line_15 $$ InputStream streamParticipant = connParticipants.getInputStream() [FD]
Line_7 $$ URLConnection connParticipants --> Line_16 $$ String charSet = StringUtils.substringAfterLast(connParticipants.getContentType(), "charset=") [FD]
Line_9 $$ connParticipants = urlParticipants.openConnection() --> Line_16 $$ String charSet = StringUtils.substringAfterLast(connParticipants.getContentType(), "charset=") [FD]
Line_13 $$ connParticipants = urlParticipants.openConnection(proxy) --> Line_16 $$ String charSet = StringUtils.substringAfterLast(connParticipants.getContentType(), "charset=") [FD]
Line_4 $$ Scanner scannerParticipants --> Line_17 $$ scannerParticipants = new Scanner(streamParticipant, charSet) [FD]
Line_3 $$ URL urlParticipants = null --> Line_19 $$ throw new IcehorsetoolsRuntimeException(MessageFormat.format(Lang.get(this.getClass(), "MalformedURLException"), new Object[] [FD]
Line_6 $$ urlParticipants = new URL(strUrl) --> Line_19 $$ throw new IcehorsetoolsRuntimeException(MessageFormat.format(Lang.get(this.getClass(), "MalformedURLException"), new Object[] [FD]
Line_3 $$ URL urlParticipants = null --> Line_21 $$ throw new IcehorsetoolsRuntimeException(MessageFormat.format(Lang.get(this.getClass(), "IOException"), new Object[] [FD]
Line_6 $$ urlParticipants = new URL(strUrl) --> Line_21 $$ throw new IcehorsetoolsRuntimeException(MessageFormat.format(Lang.get(this.getClass(), "IOException"), new Object[] [FD]
Line_2 $$ private Scanner getUrlScanner(String strUrl) --> Line_23 $$ return scannerParticipants [CD]
