Line_2 $$ public static String getFileContents(String path) --> Line_3 $$ BufferedReader buffReader = null [CD]
Line_2 $$ public static String getFileContents(String path) --> Line_4 $$ InputStream stream = null [CD]
Line_2 $$ public static String getFileContents(String path) --> Line_5 $$ if (path.indexOf("://") != -1) [CD]
Line_2 $$ public static String getFileContents(String path) --> Line_5 $$ if (path.indexOf("://") != -1) [FD]
Line_5 $$ if (path.indexOf("://") != -1) --> Line_6 $$ URL url = null [CD]
Line_6 $$ URL url = null --> Line_8 $$ url = new URL(path) [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_10 $$ LOGGER.warn(String.format("Malformed URL: \"%s\"", path)) [FD]
Line_5 $$ if (path.indexOf("://") != -1) --> Line_12 $$ if (url == null) [CD]
Line_6 $$ URL url = null --> Line_12 $$ if (url == null) [FD]
Line_8 $$ url = new URL(path) --> Line_12 $$ if (url == null) [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_13 $$ throw new DeveloperError(String.format("Cannot create URL from path: \"%s\"", path), new NullPointerException()) [FD]
Line_6 $$ URL url = null --> Line_16 $$ String encoding = Characters.getDeclaredXMLEncoding(url) [FD]
Line_8 $$ url = new URL(path) --> Line_16 $$ String encoding = Characters.getDeclaredXMLEncoding(url) [FD]
Line_4 $$ InputStream stream = null --> Line_17 $$ stream = url.openStream() [FD]
Line_6 $$ URL url = null --> Line_17 $$ stream = url.openStream() [FD]
Line_8 $$ url = new URL(path) --> Line_17 $$ stream = url.openStream() [FD]
Line_3 $$ BufferedReader buffReader = null --> Line_18 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_20 $$ LOGGER.warn(String.format("I/O error trying to read \"%s\"", path)) [FD]
Line_5 $$ if (path.indexOf("://") != -1) --> Line_23 $$ File toRead = null [CD]
Line_23 $$ File toRead = null --> Line_25 $$ toRead = getExistingFile(path) [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_25 $$ toRead = getExistingFile(path) [FD]
Line_5 $$ if (path.indexOf("://") != -1) --> Line_29 $$ if (toRead.isAbsolute()) [CD]
Line_23 $$ File toRead = null --> Line_29 $$ if (toRead.isAbsolute()) [FD]
Line_25 $$ toRead = getExistingFile(path) --> Line_29 $$ if (toRead.isAbsolute()) [FD]
Line_29 $$ if (toRead.isAbsolute()) --> Line_30 $$ String parent = toRead.getParent() [CD]
Line_23 $$ File toRead = null --> Line_30 $$ String parent = toRead.getParent() [FD]
Line_25 $$ toRead = getExistingFile(path) --> Line_30 $$ String parent = toRead.getParent() [FD]
Line_30 $$ String parent = toRead.getParent() --> Line_32 $$ workingDirectory.push(URLTools.createValidURL(parent)) [FD]
Line_30 $$ String parent = toRead.getParent() --> Line_34 $$ throw new DeveloperError(String.format("Created an invalid parent file: \"%s\".", parent), e) [FD]
Line_5 $$ if (path.indexOf("://") != -1) --> Line_37 $$ if (toRead.exists() && !toRead.isDirectory()) [CD]
Line_23 $$ File toRead = null --> Line_37 $$ if (toRead.exists() && !toRead.isDirectory()) [FD]
Line_25 $$ toRead = getExistingFile(path) --> Line_37 $$ if (toRead.exists() && !toRead.isDirectory()) [FD]
Line_37 $$ if (toRead.exists() && !toRead.isDirectory()) --> Line_38 $$ String _path = toRead.getAbsolutePath() [CD]
Line_23 $$ File toRead = null --> Line_38 $$ String _path = toRead.getAbsolutePath() [FD]
Line_25 $$ toRead = getExistingFile(path) --> Line_38 $$ String _path = toRead.getAbsolutePath() [FD]
Line_38 $$ String _path = toRead.getAbsolutePath() --> Line_40 $$ String encoding = Characters.getDeclaredXMLEncoding(URLTools.createValidURL(_path)) [FD]
Line_4 $$ InputStream stream = null --> Line_41 $$ stream = new FileInputStream(_path) [FD]
Line_17 $$ stream = url.openStream() --> Line_41 $$ stream = new FileInputStream(_path) [FD]
Line_3 $$ BufferedReader buffReader = null --> Line_42 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) [FD]
Line_18 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) --> Line_42 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) [FD]
Line_38 $$ String _path = toRead.getAbsolutePath() --> Line_44 $$ LOGGER.warn(String.format("I/O error trying to read \"%s\"", _path)) [FD]
Line_23 $$ File toRead = null --> Line_48 $$ assert toRead.exists() : "getExistingFile() returned a non-existent file" [FD]
Line_25 $$ toRead = getExistingFile(path) --> Line_48 $$ assert toRead.exists() : "getExistingFile() returned a non-existent file" [FD]
Line_37 $$ if (toRead.exists() && !toRead.isDirectory()) --> Line_49 $$ if (toRead.isDirectory()) [CD]
Line_23 $$ File toRead = null --> Line_49 $$ if (toRead.isDirectory()) [FD]
Line_25 $$ toRead = getExistingFile(path) --> Line_49 $$ if (toRead.isDirectory()) [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_54 $$ StringBuilder result = new StringBuilder() [CD]
Line_2 $$ public static String getFileContents(String path) --> Line_55 $$ String line [CD]
Line_2 $$ public static String getFileContents(String path) --> Line_56 $$ if (buffReader != null && stream != null) [CD]
Line_55 $$ String line --> Line_58 $$ while ((line = buffReader.readLine()) != null) [FD]
Line_3 $$ BufferedReader buffReader = null --> Line_58 $$ while ((line = buffReader.readLine()) != null) [FD]
Line_18 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) --> Line_58 $$ while ((line = buffReader.readLine()) != null) [FD]
Line_42 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) --> Line_58 $$ while ((line = buffReader.readLine()) != null) [FD]
Line_58 $$ while ((line = buffReader.readLine()) != null) --> Line_59 $$ result.append(line) [CD]
Line_58 $$ while ((line = buffReader.readLine()) != null) --> Line_59 $$ result.append(line) [FD]
Line_54 $$ StringBuilder result = new StringBuilder() --> Line_59 $$ result.append(line) [FD]
Line_55 $$ String line --> Line_59 $$ result.append(line) [FD]
Line_3 $$ BufferedReader buffReader = null --> Line_61 $$ buffReader.close() [FD]
Line_18 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) --> Line_61 $$ buffReader.close() [FD]
Line_42 $$ buffReader = new BufferedReader(new InputStreamReader(stream, encoding)) --> Line_61 $$ buffReader.close() [FD]
Line_4 $$ InputStream stream = null --> Line_62 $$ stream.close() [FD]
Line_17 $$ stream = url.openStream() --> Line_62 $$ stream.close() [FD]
Line_41 $$ stream = new FileInputStream(_path) --> Line_62 $$ stream.close() [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_64 $$ LOGGER.warn(String.format("I/O error trying to read \"%s\"", path)) [FD]
Line_2 $$ public static String getFileContents(String path) --> Line_68 $$ return result.toString() [CD]
Line_54 $$ StringBuilder result = new StringBuilder() --> Line_68 $$ return result.toString() [FD]
