Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_3 $$ Process p = Runtime.getRuntime().exec("tidy -q -f /dev/null -wrap 0 --output-xml yes --doctype omit --force-output true --new-empty-tags  " + emptyTags + " --quote-nbsp no -utf8") [CD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_4 $$ Thread t = new CopyThread(input, p.getOutputStream()) [CD]
Line_3 $$ Process p = Runtime.getRuntime().exec("tidy -q -f /dev/null -wrap 0 --output-xml yes --doctype omit --force-output true --new-empty-tags  " + emptyTags + " --quote-nbsp no -utf8") --> Line_4 $$ Thread t = new CopyThread(input, p.getOutputStream()) [FD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_5 $$ t.start() [CD]
Line_4 $$ Thread t = new CopyThread(input, p.getOutputStream()) --> Line_5 $$ t.start() [FD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_6 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() [CD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_7 $$ IOUtils.copy(p.getInputStream(), output) [CD]
Line_6 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_7 $$ IOUtils.copy(p.getInputStream(), output) [FD]
Line_3 $$ Process p = Runtime.getRuntime().exec("tidy -q -f /dev/null -wrap 0 --output-xml yes --doctype omit --force-output true --new-empty-tags  " + emptyTags + " --quote-nbsp no -utf8") --> Line_7 $$ IOUtils.copy(p.getInputStream(), output) [FD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_8 $$ p.waitFor() [CD]
Line_3 $$ Process p = Runtime.getRuntime().exec("tidy -q -f /dev/null -wrap 0 --output-xml yes --doctype omit --force-output true --new-empty-tags  " + emptyTags + " --quote-nbsp no -utf8") --> Line_8 $$ p.waitFor() [FD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_9 $$ t.join() [CD]
Line_4 $$ Thread t = new CopyThread(input, p.getOutputStream()) --> Line_9 $$ t.join() [FD]
Line_2 $$ private String convert(InputStream input, String encoding) throws Exception --> Line_10 $$ return output.toString() [CD]
Line_6 $$ ByteArrayOutputStream output = new ByteArrayOutputStream() --> Line_10 $$ return output.toString() [FD]
