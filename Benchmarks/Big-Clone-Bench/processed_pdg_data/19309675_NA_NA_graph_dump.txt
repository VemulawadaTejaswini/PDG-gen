Line_2 $$ public final void propertyChange(final PropertyChangeEvent event) --> Line_3 $$ if (fChecker != null && event.getProperty().equals(ISpellCheckPreferenceKeys.SPELLING_USER_DICTIONARY)) [CD]
Line_2 $$ public final void propertyChange(final PropertyChangeEvent event) --> Line_3 $$ if (fChecker != null && event.getProperty().equals(ISpellCheckPreferenceKeys.SPELLING_USER_DICTIONARY)) [FD]
Line_3 $$ if (fChecker != null && event.getProperty().equals(ISpellCheckPreferenceKeys.SPELLING_USER_DICTIONARY)) --> Line_4 $$ if (fUserDictionary != null) [CD]
Line_4 $$ if (fUserDictionary != null) --> Line_5 $$ fChecker.removeDictionary(fUserDictionary) [CD]
Line_3 $$ if (fChecker != null && event.getProperty().equals(ISpellCheckPreferenceKeys.SPELLING_USER_DICTIONARY)) --> Line_8 $$ final String file = (String) event.getNewValue() [CD]
Line_2 $$ public final void propertyChange(final PropertyChangeEvent event) --> Line_8 $$ final String file = (String) event.getNewValue() [FD]
Line_3 $$ if (fChecker != null && event.getProperty().equals(ISpellCheckPreferenceKeys.SPELLING_USER_DICTIONARY)) --> Line_9 $$ if (file.length() > 0) [CD]
Line_8 $$ final String file = (String) event.getNewValue() --> Line_9 $$ if (file.length() > 0) [FD]
Line_11 $$ final URL url = new URL("file", null, file) --> Line_12 $$ InputStream stream = url.openStream() [FD]
Line_12 $$ InputStream stream = url.openStream() --> Line_13 $$ if (stream != null) [FD]
Line_12 $$ InputStream stream = url.openStream() --> Line_18 $$ stream.close() [FD]
