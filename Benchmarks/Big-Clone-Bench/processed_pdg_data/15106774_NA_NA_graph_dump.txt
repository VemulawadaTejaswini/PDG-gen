Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_3 $$ String out = null [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_4 $$ int count = 8 [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_5 $$ MessageDigest digester [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_6 $$ if (!seed.substring(0, 3).equals("$H$")) [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_6 $$ if (!seed.substring(0, 3).equals("$H$")) [FD]
Line_6 $$ if (!seed.substring(0, 3).equals("$H$")) --> Line_7 $$ byte[] randomBytes = new byte[6] [CD]
Line_6 $$ if (!seed.substring(0, 3).equals("$H$")) --> Line_8 $$ java.util.Random randomGenerator = new java.util.Random() [CD]
Line_6 $$ if (!seed.substring(0, 3).equals("$H$")) --> Line_9 $$ randomGenerator.nextBytes(randomBytes) [CD]
Line_8 $$ java.util.Random randomGenerator = new java.util.Random() --> Line_9 $$ randomGenerator.nextBytes(randomBytes) [FD]
Line_7 $$ byte[] randomBytes = new byte[6] --> Line_9 $$ randomGenerator.nextBytes(randomBytes) [FD]
Line_6 $$ if (!seed.substring(0, 3).equals("$H$")) --> Line_10 $$ seed = genSalt(randomBytes) [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_10 $$ seed = genSalt(randomBytes) [FD]
Line_7 $$ byte[] randomBytes = new byte[6] --> Line_10 $$ seed = genSalt(randomBytes) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_12 $$ String salt = seed.substring(4, 12) [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_12 $$ String salt = seed.substring(4, 12) [FD]
Line_10 $$ seed = genSalt(randomBytes) --> Line_12 $$ String salt = seed.substring(4, 12) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_13 $$ if (salt.length() != 8) [CD]
Line_12 $$ String salt = seed.substring(4, 12) --> Line_13 $$ if (salt.length() != 8) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_16 $$ byte[] sha1Hash = new byte[40] [CD]
Line_5 $$ MessageDigest digester --> Line_18 $$ digester = MessageDigest.getInstance("SHA-1") [FD]
Line_5 $$ MessageDigest digester --> Line_19 $$ digester.update((salt + password).getBytes("iso-8859-1"), 0, (salt + password).length()) [FD]
Line_18 $$ digester = MessageDigest.getInstance("SHA-1") --> Line_19 $$ digester.update((salt + password).getBytes("iso-8859-1"), 0, (salt + password).length()) [FD]
Line_16 $$ byte[] sha1Hash = new byte[40] --> Line_20 $$ sha1Hash = digester.digest() [FD]
Line_5 $$ MessageDigest digester --> Line_20 $$ sha1Hash = digester.digest() [FD]
Line_18 $$ digester = MessageDigest.getInstance("SHA-1") --> Line_20 $$ sha1Hash = digester.digest() [FD]
Line_21 $$ do --> Line_22 $$ byte[] CombinedBytes = new byte[sha1Hash.length + password.length()] [CD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_22 $$ byte[] CombinedBytes = new byte[sha1Hash.length + password.length()] [FD]
Line_21 $$ do --> Line_23 $$ System.arraycopy(sha1Hash, 0, CombinedBytes, 0, sha1Hash.length) [CD]
Line_16 $$ byte[] sha1Hash = new byte[40] --> Line_23 $$ System.arraycopy(sha1Hash, 0, CombinedBytes, 0, sha1Hash.length) [FD]
Line_20 $$ sha1Hash = digester.digest() --> Line_23 $$ System.arraycopy(sha1Hash, 0, CombinedBytes, 0, sha1Hash.length) [FD]
Line_22 $$ byte[] CombinedBytes = new byte[sha1Hash.length + password.length()] --> Line_23 $$ System.arraycopy(sha1Hash, 0, CombinedBytes, 0, sha1Hash.length) [FD]
Line_21 $$ do --> Line_24 $$ System.arraycopy(password.getBytes("iso-8859-1"), 0, CombinedBytes, sha1Hash.length, password.getBytes("iso-8859-1").length) [CD]
Line_22 $$ byte[] CombinedBytes = new byte[sha1Hash.length + password.length()] --> Line_24 $$ System.arraycopy(password.getBytes("iso-8859-1"), 0, CombinedBytes, sha1Hash.length, password.getBytes("iso-8859-1").length) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_24 $$ System.arraycopy(password.getBytes("iso-8859-1"), 0, CombinedBytes, sha1Hash.length, password.getBytes("iso-8859-1").length) [FD]
Line_21 $$ do --> Line_25 $$ digester.update(CombinedBytes, 0, CombinedBytes.length) [CD]
Line_5 $$ MessageDigest digester --> Line_25 $$ digester.update(CombinedBytes, 0, CombinedBytes.length) [FD]
Line_18 $$ digester = MessageDigest.getInstance("SHA-1") --> Line_25 $$ digester.update(CombinedBytes, 0, CombinedBytes.length) [FD]
Line_22 $$ byte[] CombinedBytes = new byte[sha1Hash.length + password.length()] --> Line_25 $$ digester.update(CombinedBytes, 0, CombinedBytes.length) [FD]
Line_21 $$ do --> Line_26 $$ sha1Hash = digester.digest() [CD]
Line_16 $$ byte[] sha1Hash = new byte[40] --> Line_26 $$ sha1Hash = digester.digest() [FD]
Line_20 $$ sha1Hash = digester.digest() --> Line_26 $$ sha1Hash = digester.digest() [FD]
Line_5 $$ MessageDigest digester --> Line_26 $$ sha1Hash = digester.digest() [FD]
Line_18 $$ digester = MessageDigest.getInstance("SHA-1") --> Line_26 $$ sha1Hash = digester.digest() [FD]
Line_4 $$ int count = 8 --> Line_21 $$ do [FD]
Line_3 $$ String out = null --> Line_28 $$ out = seed.substring(0, 12) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_28 $$ out = seed.substring(0, 12) [FD]
Line_10 $$ seed = genSalt(randomBytes) --> Line_28 $$ out = seed.substring(0, 12) [FD]
Line_3 $$ String out = null --> Line_29 $$ out += encode64(sha1Hash) [FD]
Line_28 $$ out = seed.substring(0, 12) --> Line_29 $$ out += encode64(sha1Hash) [FD]
Line_26 $$ sha1Hash = digester.digest() --> Line_29 $$ out += encode64(sha1Hash) [FD]
Line_16 $$ byte[] sha1Hash = new byte[40] --> Line_29 $$ out += encode64(sha1Hash) [FD]
Line_20 $$ sha1Hash = digester.digest() --> Line_29 $$ out += encode64(sha1Hash) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_35 $$ if (out == null) [CD]
Line_3 $$ String out = null --> Line_35 $$ if (out == null) [FD]
Line_28 $$ out = seed.substring(0, 12) --> Line_35 $$ if (out == null) [FD]
Line_29 $$ out += encode64(sha1Hash) --> Line_35 $$ if (out == null) [FD]
Line_2 $$ private static String myCrypt(String password, String seed) throws RuntimeException --> Line_38 $$ return out [CD]
Line_26 $$ sha1Hash = digester.digest() --> Line_23 $$ System.arraycopy(sha1Hash, 0, CombinedBytes, 0, sha1Hash.length) [FD]
