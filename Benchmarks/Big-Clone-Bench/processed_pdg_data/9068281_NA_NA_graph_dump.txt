Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException --> Line_3 $$ String classFile = name.replace('.', '/') + ".class" [CD]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException --> Line_3 $$ String classFile = name.replace('.', '/') + ".class" [FD]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException --> Line_4 $$ InputStream classInputStream = null [CD]
Line_5 $$ for (JarFile java3DJar : this.java3DJars) --> Line_6 $$ JarEntry jarEntry = java3DJar.getJarEntry(classFile) [FD]
Line_5 $$ for (JarFile java3DJar : this.java3DJars) --> Line_9 $$ classInputStream = java3DJar.getInputStream(jarEntry) [FD]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException --> Line_15 $$ if (classInputStream == null) [CD]
Line_30 $$ int size --> Line_31 $$ while ((size = in.read(buffer)) != -1) [FD]
Line_29 $$ byte[] buffer = new byte[8096] --> Line_31 $$ while ((size = in.read(buffer)) != -1) [FD]
Line_31 $$ while ((size = in.read(buffer)) != -1) --> Line_32 $$ out.write(buffer, 0, size) [CD]
Line_31 $$ while ((size = in.read(buffer)) != -1) --> Line_32 $$ out.write(buffer, 0, size) [FD]
Line_27 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_32 $$ out.write(buffer, 0, size) [FD]
Line_29 $$ byte[] buffer = new byte[8096] --> Line_32 $$ out.write(buffer, 0, size) [FD]
Line_30 $$ int size --> Line_32 $$ out.write(buffer, 0, size) [FD]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException --> Line_35 $$ return defineClass(name, out.toByteArray(), 0, out.size(), this.protectionDomain) [FD]
Line_27 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_35 $$ return defineClass(name, out.toByteArray(), 0, out.size(), this.protectionDomain) [FD]
