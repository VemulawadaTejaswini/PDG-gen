Line_2 $$ public List<AnalyzerResult> analyze(LWComponent c, boolean tryFallback) --> Line_3 $$ List<AnalyzerResult> results = new ArrayList<AnalyzerResult>() [CD]
Line_2 $$ public List<AnalyzerResult> analyze(LWComponent c, boolean tryFallback) --> Line_5 $$ URL url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + c.getLabel()) [FD]
Line_6 $$ if (flow != null) --> Line_7 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + getSpecFromComponent(c)) [CD]
Line_5 $$ URL url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + c.getLabel()) --> Line_7 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + getSpecFromComponent(c)) [FD]
Line_2 $$ public List<AnalyzerResult> analyze(LWComponent c, boolean tryFallback) --> Line_7 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + getSpecFromComponent(c)) [FD]
Line_5 $$ URL url = new URL(DEFAULT_FLOW_URL + "?" + DEFAULT_INPUT + "=" + c.getLabel()) --> Line_10 $$ XMLDecoder decoder = new XMLDecoder(url.openStream()) [FD]
Line_7 $$ url = new URL(flow.getUrl() + "?" + flow.getInputList().get(0) + "=" + getSpecFromComponent(c)) --> Line_10 $$ XMLDecoder decoder = new XMLDecoder(url.openStream()) [FD]
Line_10 $$ XMLDecoder decoder = new XMLDecoder(url.openStream()) --> Line_11 $$ Map map = (Map) decoder.readObject() [FD]
Line_11 $$ Map map = (Map) decoder.readObject() --> Line_12 $$ for (Object key : map.keySet()) [FD]
Line_3 $$ List<AnalyzerResult> results = new ArrayList<AnalyzerResult>() --> Line_13 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString())) [FD]
Line_12 $$ for (Object key : map.keySet()) --> Line_13 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString())) [FD]
Line_11 $$ Map map = (Map) decoder.readObject() --> Line_13 $$ results.add(new AnalyzerResult(key.toString(), map.get(key).toString())) [FD]
Line_2 $$ public List<AnalyzerResult> analyze(LWComponent c, boolean tryFallback) --> Line_17 $$ VueUtil.alert("Can't Execute Flow on the node " + c.getLabel(), "Can't Execute Seasr flow") [FD]
Line_2 $$ public List<AnalyzerResult> analyze(LWComponent c, boolean tryFallback) --> Line_19 $$ return results [CD]
