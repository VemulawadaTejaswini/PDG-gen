Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_3 $$ boolean resp = false [CD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_4 $$ int respCode = 0 [CD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_5 $$ URL url = new URL(storageUrlString) [CD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [CD]
Line_5 $$ URL url = new URL(storageUrlString) --> Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_7 $$ RequestUtils requestUtils = new RequestUtils() [CD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_8 $$ requestUtils.preRequestAddParameter("senderObj", "FileGetter") [CD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_8 $$ requestUtils.preRequestAddParameter("senderObj", "FileGetter") [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_9 $$ requestUtils.preRequestAddParameter("wfiType", "zen") [CD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_9 $$ requestUtils.preRequestAddParameter("wfiType", "zen") [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_10 $$ requestUtils.preRequestAddParameter("portalID", this.portalID) [CD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_10 $$ requestUtils.preRequestAddParameter("portalID", this.portalID) [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_11 $$ requestUtils.preRequestAddParameter("userID", this.userID) [CD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_11 $$ requestUtils.preRequestAddParameter("userID", this.userID) [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_12 $$ addRenameFileParameters(requestUtils) [CD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_12 $$ addRenameFileParameters(requestUtils) [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_13 $$ requestUtils.createPostRequest() [CD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_13 $$ requestUtils.createPostRequest() [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_14 $$ httpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + requestUtils.getBoundary()) [CD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_14 $$ httpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + requestUtils.getBoundary()) [FD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_14 $$ httpURLConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + requestUtils.getBoundary()) [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_15 $$ httpURLConnection.setRequestMethod("POST") [CD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_15 $$ httpURLConnection.setRequestMethod("POST") [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_16 $$ httpURLConnection.setDoOutput(true) [CD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_16 $$ httpURLConnection.setDoOutput(true) [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_17 $$ httpURLConnection.setDoInput(true) [CD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_17 $$ httpURLConnection.setDoInput(true) [FD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_19 $$ httpURLConnection.connect() [FD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_20 $$ OutputStream out = httpURLConnection.getOutputStream() [FD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_21 $$ byte[] preBytes = requestUtils.getPreRequestStringBytes() [FD]
Line_20 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_22 $$ out.write(preBytes) [FD]
Line_21 $$ byte[] preBytes = requestUtils.getPreRequestStringBytes() --> Line_22 $$ out.write(preBytes) [FD]
Line_20 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_23 $$ out.flush() [FD]
Line_7 $$ RequestUtils requestUtils = new RequestUtils() --> Line_24 $$ byte[] postBytes = requestUtils.getPostRequestStringBytes() [FD]
Line_20 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_25 $$ out.write(postBytes) [FD]
Line_24 $$ byte[] postBytes = requestUtils.getPostRequestStringBytes() --> Line_25 $$ out.write(postBytes) [FD]
Line_20 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_26 $$ out.flush() [FD]
Line_20 $$ OutputStream out = httpURLConnection.getOutputStream() --> Line_27 $$ out.close() [FD]
Line_4 $$ int respCode = 0 --> Line_28 $$ respCode = httpURLConnection.getResponseCode() [FD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_28 $$ respCode = httpURLConnection.getResponseCode() [FD]
Line_4 $$ int respCode = 0 --> Line_29 $$ if (HttpURLConnection.HTTP_OK == respCode) [FD]
Line_28 $$ respCode = httpURLConnection.getResponseCode() --> Line_29 $$ if (HttpURLConnection.HTTP_OK == respCode) [FD]
Line_29 $$ if (HttpURLConnection.HTTP_OK == respCode) --> Line_30 $$ resp = true [CD]
Line_3 $$ boolean resp = false --> Line_30 $$ resp = true [FD]
Line_29 $$ if (HttpURLConnection.HTTP_OK == respCode) --> Line_31 $$ InputStream in = httpURLConnection.getInputStream() [CD]
Line_6 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection() --> Line_31 $$ InputStream in = httpURLConnection.getInputStream() [FD]
Line_29 $$ if (HttpURLConnection.HTTP_OK == respCode) --> Line_32 $$ ZipUtils.getInstance().getFilesFromStream(in, getFilesDir) [CD]
Line_31 $$ InputStream in = httpURLConnection.getInputStream() --> Line_32 $$ ZipUtils.getInstance().getFilesFromStream(in, getFilesDir) [FD]
Line_29 $$ if (HttpURLConnection.HTTP_OK == respCode) --> Line_33 $$ in.close() [CD]
Line_31 $$ InputStream in = httpURLConnection.getInputStream() --> Line_33 $$ in.close() [FD]
Line_4 $$ int respCode = 0 --> Line_35 $$ if (respCode == 500) [FD]
Line_28 $$ respCode = httpURLConnection.getResponseCode() --> Line_35 $$ if (respCode == 500) [FD]
Line_35 $$ if (respCode == 500) --> Line_36 $$ resp = false [CD]
Line_3 $$ boolean resp = false --> Line_36 $$ resp = false [FD]
Line_30 $$ resp = true --> Line_36 $$ resp = false [FD]
Line_4 $$ int respCode = 0 --> Line_38 $$ if (respCode == 560) [FD]
Line_28 $$ respCode = httpURLConnection.getResponseCode() --> Line_38 $$ if (respCode == 560) [FD]
Line_38 $$ if (respCode == 560) --> Line_39 $$ resp = false [CD]
Line_3 $$ boolean resp = false --> Line_39 $$ resp = false [FD]
Line_30 $$ resp = true --> Line_39 $$ resp = false [FD]
Line_36 $$ resp = false --> Line_39 $$ resp = false [FD]
Line_2 $$ private boolean getRemoteFiles() throws Exception --> Line_46 $$ return resp [CD]
