Line_2 $$ public String postDownloadRequest(String localFile) throws Exception --> Line_3 $$ String responseString = "" [CD]
Line_2 $$ public String postDownloadRequest(String localFile) throws Exception --> Line_4 $$ String requestString = "" [CD]
Line_2 $$ public String postDownloadRequest(String localFile) throws Exception --> Line_5 $$ if (localFile == null) [CD]
Line_2 $$ public String postDownloadRequest(String localFile) throws Exception --> Line_5 $$ if (localFile == null) [FD]
Line_5 $$ if (localFile == null) --> Line_7 $$ errorStr = errorStr.concat("No local target for: " + currentFile.getRelativePath() + "\n") [CD]
Line_5 $$ if (localFile == null) --> Line_8 $$ return "" [CD]
Line_11 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) --> Line_12 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next() [CD]
Line_11 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) --> Line_12 $$ java.util.Map.Entry e = (java.util.Map.Entry) i.next() [FD]
Line_11 $$ for (java.util.Iterator i = parameters.entrySet().iterator(); i.hasNext(); ) --> Line_13 $$ requestString = requestString + URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&" [CD]
Line_4 $$ String requestString = "" --> Line_13 $$ requestString = requestString + URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&" [FD]
Line_15 $$ URL url = new URL(urlString) --> Line_16 $$ URLConnection connection = url.openConnection() [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_18 $$ httpConn.setRequestProperty("Content-Length", String.valueOf(requestString.length())) [FD]
Line_13 $$ requestString = requestString + URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&" --> Line_18 $$ httpConn.setRequestProperty("Content-Length", String.valueOf(requestString.length())) [FD]
Line_4 $$ String requestString = "" --> Line_18 $$ httpConn.setRequestProperty("Content-Length", String.valueOf(requestString.length())) [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_19 $$ httpConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_20 $$ httpConn.setRequestMethod("POST") [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_21 $$ httpConn.setDoOutput(true) [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_22 $$ httpConn.setDoInput(true) [FD]
Line_16 $$ URLConnection connection = url.openConnection() --> Line_23 $$ connection.connect() [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_24 $$ PrintWriter out = new PrintWriter(httpConn.getOutputStream()) [FD]
Line_24 $$ PrintWriter out = new PrintWriter(httpConn.getOutputStream()) --> Line_25 $$ out.println(requestString) [FD]
Line_13 $$ requestString = requestString + URLEncoder.encode((String) e.getKey(), "UTF-8") + "=" + URLEncoder.encode((String) e.getValue(), "UTF-8") + "&" --> Line_25 $$ out.println(requestString) [FD]
Line_4 $$ String requestString = "" --> Line_25 $$ out.println(requestString) [FD]
Line_24 $$ PrintWriter out = new PrintWriter(httpConn.getOutputStream()) --> Line_26 $$ out.close() [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_27 $$ if (httpConn.HTTP_NOT_FOUND == httpConn.getResponseCode()) [FD]
Line_27 $$ if (httpConn.HTTP_NOT_FOUND == httpConn.getResponseCode()) --> Line_29 $$ errorStr = errorStr.concat("Cannot find file: " + currentFile.getRelativePath() + "\n") [CD]
Line_27 $$ if (httpConn.HTTP_NOT_FOUND == httpConn.getResponseCode()) --> Line_30 $$ return responseString [CD]
Line_33 $$ File f = new File(localFileName) --> Line_34 $$ File dir = new File(f.getParent()) [FD]
Line_34 $$ File dir = new File(f.getParent()) --> Line_35 $$ dir.mkdirs() [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_38 $$ InputStream is = httpConn.getInputStream() [FD]
Line_40 $$ int temp --> Line_41 $$ while ((temp = gin.read()) != -1) [FD]
Line_39 $$ java.util.zip.GZIPInputStream gin = new java.util.zip.GZIPInputStream(new BufferedInputStream(is)) --> Line_41 $$ while ((temp = gin.read()) != -1) [FD]
Line_41 $$ while ((temp = gin.read()) != -1) --> Line_42 $$ fis.write(temp) [CD]
Line_41 $$ while ((temp = gin.read()) != -1) --> Line_42 $$ fis.write(temp) [FD]
Line_36 $$ FileOutputStream fis = new FileOutputStream(f) --> Line_42 $$ fis.write(temp) [FD]
Line_40 $$ int temp --> Line_42 $$ fis.write(temp) [FD]
Line_36 $$ FileOutputStream fis = new FileOutputStream(f) --> Line_44 $$ if (fis.getChannel().size() > 0) [FD]
Line_44 $$ if (fis.getChannel().size() > 0) --> Line_45 $$ fis.getChannel().truncate(fis.getChannel().size() - 1) [CD]
Line_36 $$ FileOutputStream fis = new FileOutputStream(f) --> Line_45 $$ fis.getChannel().truncate(fis.getChannel().size() - 1) [FD]
Line_3 $$ String responseString = "" --> Line_47 $$ responseString = downloadDir + "/" + currentFile.getRelativePath() [FD]
Line_38 $$ InputStream is = httpConn.getInputStream() --> Line_48 $$ is.close() [FD]
Line_36 $$ FileOutputStream fis = new FileOutputStream(f) --> Line_49 $$ fis.close() [FD]
Line_17 $$ HttpURLConnection httpConn = (HttpURLConnection) connection --> Line_50 $$ httpConn.disconnect() [FD]
Line_2 $$ public String postDownloadRequest(String localFile) throws Exception --> Line_75 $$ return responseString [CD]
