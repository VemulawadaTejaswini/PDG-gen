Line_2 $$ protected void download() --> Line_3 $$ boolean connected = false [CD]
Line_2 $$ protected void download() --> Line_4 $$ String outcome = "" [CD]
Line_10 $$ if (destroyed) --> Line_11 $$ return [CD]
Line_16 $$ HttpURLConnection connection --> Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() [FD]
Line_16 $$ HttpURLConnection connection --> Line_19 $$ connection.setRequestProperty("Connection", "Keep-Alive") [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_19 $$ connection.setRequestProperty("Connection", "Keep-Alive") [FD]
Line_16 $$ HttpURLConnection connection --> Line_20 $$ connection.setRequestProperty("User-Agent", user_agent) [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_20 $$ connection.setRequestProperty("User-Agent", user_agent) [FD]
Line_21 $$ int time_remaining = listener.getPermittedTime() --> Line_22 $$ if (time_remaining > 0) [FD]
Line_22 $$ if (time_remaining > 0) --> Line_23 $$ Java15Utils.setConnectTimeout(connection, time_remaining) [CD]
Line_16 $$ HttpURLConnection connection --> Line_23 $$ Java15Utils.setConnectTimeout(connection, time_remaining) [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_23 $$ Java15Utils.setConnectTimeout(connection, time_remaining) [FD]
Line_21 $$ int time_remaining = listener.getPermittedTime() --> Line_23 $$ Java15Utils.setConnectTimeout(connection, time_remaining) [FD]
Line_16 $$ HttpURLConnection connection --> Line_25 $$ connection.connect() [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_25 $$ connection.connect() [FD]
Line_21 $$ int time_remaining = listener.getPermittedTime() --> Line_26 $$ time_remaining = listener.getPermittedTime() [FD]
Line_21 $$ int time_remaining = listener.getPermittedTime() --> Line_27 $$ if (time_remaining < 0) [FD]
Line_26 $$ time_remaining = listener.getPermittedTime() --> Line_27 $$ if (time_remaining < 0) [FD]
Line_16 $$ HttpURLConnection connection --> Line_30 $$ Java15Utils.setReadTimeout(connection, time_remaining) [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_30 $$ Java15Utils.setReadTimeout(connection, time_remaining) [FD]
Line_21 $$ int time_remaining = listener.getPermittedTime() --> Line_30 $$ Java15Utils.setReadTimeout(connection, time_remaining) [FD]
Line_26 $$ time_remaining = listener.getPermittedTime() --> Line_30 $$ Java15Utils.setReadTimeout(connection, time_remaining) [FD]
Line_3 $$ boolean connected = false --> Line_31 $$ connected = true [FD]
Line_17 $$ int response --> Line_32 $$ response = connection.getResponseCode() [FD]
Line_16 $$ HttpURLConnection connection --> Line_32 $$ response = connection.getResponseCode() [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_32 $$ response = connection.getResponseCode() [FD]
Line_17 $$ int response --> Line_35 $$ if (response == 503) [FD]
Line_32 $$ response = connection.getResponseCode() --> Line_35 $$ if (response == 503) [FD]
Line_35 $$ if (response == 503) --> Line_36 $$ long retry_after_date = new Long(connection.getHeaderFieldDate("Retry-After", -1L)).longValue() [CD]
Line_16 $$ HttpURLConnection connection --> Line_36 $$ long retry_after_date = new Long(connection.getHeaderFieldDate("Retry-After", -1L)).longValue() [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_36 $$ long retry_after_date = new Long(connection.getHeaderFieldDate("Retry-After", -1L)).longValue() [FD]
Line_35 $$ if (response == 503) --> Line_37 $$ if (retry_after_date <= -1) [CD]
Line_36 $$ long retry_after_date = new Long(connection.getHeaderFieldDate("Retry-After", -1L)).longValue() --> Line_37 $$ if (retry_after_date <= -1) [FD]
Line_37 $$ if (retry_after_date <= -1) --> Line_38 $$ last_response_retry_after_secs = connection.getHeaderFieldInt("Retry-After", -1) [CD]
Line_16 $$ HttpURLConnection connection --> Line_38 $$ last_response_retry_after_secs = connection.getHeaderFieldInt("Retry-After", -1) [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_38 $$ last_response_retry_after_secs = connection.getHeaderFieldInt("Retry-After", -1) [FD]
Line_37 $$ if (retry_after_date <= -1) --> Line_41 $$ if (last_response_retry_after_secs < 0) [CD]
Line_41 $$ if (last_response_retry_after_secs < 0) --> Line_42 $$ last_response_retry_after_secs = -1 [CD]
Line_6 $$ InputStream is = null --> Line_46 $$ is = connection.getInputStream() [FD]
Line_16 $$ HttpURLConnection connection --> Line_46 $$ is = connection.getInputStream() [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_46 $$ is = connection.getInputStream() [FD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_48 $$ byte[] buffer = new byte[64 * 1024] [CD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_49 $$ int requests_outstanding = 1 [CD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_50 $$ while (!destroyed) [CD]
Line_50 $$ while (!destroyed) --> Line_51 $$ int permitted = listener.getPermittedBytes() [CD]
Line_50 $$ while (!destroyed) --> Line_52 $$ if (requests_outstanding == 0 || permitted < 1) [CD]
Line_52 $$ if (requests_outstanding == 0 || permitted < 1) --> Line_53 $$ permitted = 1 [CD]
Line_51 $$ int permitted = listener.getPermittedBytes() --> Line_53 $$ permitted = 1 [FD]
Line_52 $$ if (requests_outstanding == 0 || permitted < 1) --> Line_54 $$ Thread.sleep(100) [CD]
Line_50 $$ while (!destroyed) --> Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) [CD]
Line_6 $$ InputStream is = null --> Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) [FD]
Line_46 $$ is = connection.getInputStream() --> Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) [FD]
Line_48 $$ byte[] buffer = new byte[64 * 1024] --> Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) [FD]
Line_51 $$ int permitted = listener.getPermittedBytes() --> Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) [FD]
Line_53 $$ permitted = 1 --> Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) [FD]
Line_50 $$ while (!destroyed) --> Line_57 $$ if (len <= 0) [CD]
Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) --> Line_57 $$ if (len <= 0) [FD]
Line_48 $$ byte[] buffer = new byte[64 * 1024] --> Line_62 $$ raf.write(buffer, 0, len) [FD]
Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) --> Line_62 $$ raf.write(buffer, 0, len) [FD]
Line_4 $$ String outcome = "" --> Line_64 $$ outcome = "Write failed: " + e.getMessage() [FD]
Line_65 $$ ExternalSeedException error = new ExternalSeedException(outcome, e) --> Line_66 $$ error.setPermanentFailure(true) [FD]
Line_50 $$ while (!destroyed) --> Line_70 $$ listener.reportBytesRead(len) [CD]
Line_56 $$ int len = is.read(buffer, 0, Math.min(permitted, buffer.length)) --> Line_70 $$ listener.reportBytesRead(len) [FD]
Line_50 $$ while (!destroyed) --> Line_71 $$ requests_outstanding = checkRequests() [CD]
Line_49 $$ int requests_outstanding = 1 --> Line_71 $$ requests_outstanding = checkRequests() [FD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_73 $$ checkRequests() [CD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() [CD]
Line_64 $$ outcome = "Write failed: " + e.getMessage() --> Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() [FD]
Line_4 $$ String outcome = "" --> Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() [FD]
Line_16 $$ HttpURLConnection connection --> Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() [FD]
Line_18 $$ connection = (HttpURLConnection) original_url.openConnection() --> Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() [FD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_76 $$ ExternalSeedException error = new ExternalSeedException(outcome) [CD]
Line_47 $$ if (response == HttpURLConnection.HTTP_ACCEPTED || response == HttpURLConnection.HTTP_OK || response == HttpURLConnection.HTTP_PARTIAL) --> Line_77 $$ error.setPermanentFailure(true) [CD]
Line_65 $$ ExternalSeedException error = new ExternalSeedException(outcome, e) --> Line_77 $$ error.setPermanentFailure(true) [FD]
Line_76 $$ ExternalSeedException error = new ExternalSeedException(outcome) --> Line_77 $$ error.setPermanentFailure(true) [FD]
Line_3 $$ boolean connected = false --> Line_81 $$ if (con_fail_is_perm_fail && !connected) [FD]
Line_31 $$ connected = true --> Line_81 $$ if (con_fail_is_perm_fail && !connected) [FD]
Line_81 $$ if (con_fail_is_perm_fail && !connected) --> Line_82 $$ outcome = "Connection failed: " + e.getMessage() [CD]
Line_64 $$ outcome = "Write failed: " + e.getMessage() --> Line_82 $$ outcome = "Connection failed: " + e.getMessage() [FD]
Line_4 $$ String outcome = "" --> Line_82 $$ outcome = "Connection failed: " + e.getMessage() [FD]
Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() --> Line_82 $$ outcome = "Connection failed: " + e.getMessage() [FD]
Line_81 $$ if (con_fail_is_perm_fail && !connected) --> Line_84 $$ error.setPermanentFailure(true) [CD]
Line_65 $$ ExternalSeedException error = new ExternalSeedException(outcome, e) --> Line_84 $$ error.setPermanentFailure(true) [FD]
Line_76 $$ ExternalSeedException error = new ExternalSeedException(outcome) --> Line_84 $$ error.setPermanentFailure(true) [FD]
Line_81 $$ if (con_fail_is_perm_fail && !connected) --> Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [CD]
Line_64 $$ outcome = "Write failed: " + e.getMessage() --> Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_4 $$ String outcome = "" --> Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() --> Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_82 $$ outcome = "Connection failed: " + e.getMessage() --> Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_81 $$ if (con_fail_is_perm_fail && !connected) --> Line_88 $$ if (last_response_retry_after_secs >= 0) [CD]
Line_88 $$ if (last_response_retry_after_secs >= 0) --> Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" [CD]
Line_64 $$ outcome = "Write failed: " + e.getMessage() --> Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" [FD]
Line_4 $$ String outcome = "" --> Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" [FD]
Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() --> Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" [FD]
Line_82 $$ outcome = "Connection failed: " + e.getMessage() --> Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" [FD]
Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) --> Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" [FD]
Line_81 $$ if (con_fail_is_perm_fail && !connected) --> Line_91 $$ ExternalSeedException excep = new ExternalSeedException(outcome, e) [CD]
Line_81 $$ if (con_fail_is_perm_fail && !connected) --> Line_92 $$ if (e instanceof FileNotFoundException) [CD]
Line_92 $$ if (e instanceof FileNotFoundException) --> Line_93 $$ excep.setPermanentFailure(true) [CD]
Line_91 $$ ExternalSeedException excep = new ExternalSeedException(outcome, e) --> Line_93 $$ excep.setPermanentFailure(true) [FD]
Line_64 $$ outcome = "Write failed: " + e.getMessage() --> Line_103 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_4 $$ String outcome = "" --> Line_103 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_75 $$ outcome = "Connection failed: " + connection.getResponseMessage() --> Line_103 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_82 $$ outcome = "Connection failed: " + e.getMessage() --> Line_103 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_87 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) --> Line_103 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_89 $$ outcome += ", Retry-After: " + last_response_retry_after_secs + " seconds" --> Line_103 $$ outcome = "Connection failed: " + Debug.getNestedExceptionMessage(e) [FD]
Line_6 $$ InputStream is = null --> Line_107 $$ if (is != null) [FD]
Line_46 $$ is = connection.getInputStream() --> Line_107 $$ if (is != null) [FD]
Line_6 $$ InputStream is = null --> Line_109 $$ is.close() [FD]
Line_46 $$ is = connection.getInputStream() --> Line_109 $$ is.close() [FD]
Line_3 $$ boolean connected = false --> Line_115 $$ if (!connected && con_fail_is_perm_fail) [FD]
Line_31 $$ connected = true --> Line_115 $$ if (!connected && con_fail_is_perm_fail) [FD]
Line_115 $$ if (!connected && con_fail_is_perm_fail) --> Line_116 $$ e.setPermanentFailure(true) [CD]
