Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_3 $$ String reqPath = req.getPathInfo() [CD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_3 $$ String reqPath = req.getPathInfo() [FD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_4 $$ reqPath = reqPath.substring(1) [CD]
Line_3 $$ String reqPath = req.getPathInfo() --> Line_4 $$ reqPath = reqPath.substring(1) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_5 $$ ZipEntry entry = zipInfo.get(reqPath) [CD]
Line_3 $$ String reqPath = req.getPathInfo() --> Line_5 $$ ZipEntry entry = zipInfo.get(reqPath) [FD]
Line_4 $$ reqPath = reqPath.substring(1) --> Line_5 $$ ZipEntry entry = zipInfo.get(reqPath) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_6 $$ if (entry == null) [CD]
Line_6 $$ if (entry == null) --> Line_7 $$ logger.debug(Utils.join("Requested path not found: [", reqPath, "]")) [CD]
Line_3 $$ String reqPath = req.getPathInfo() --> Line_7 $$ logger.debug(Utils.join("Requested path not found: [", reqPath, "]")) [FD]
Line_4 $$ reqPath = reqPath.substring(1) --> Line_7 $$ logger.debug(Utils.join("Requested path not found: [", reqPath, "]")) [FD]
Line_6 $$ if (entry == null) --> Line_8 $$ resp.sendError(HttpServletResponse.SC_NOT_FOUND) [CD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_8 $$ resp.sendError(HttpServletResponse.SC_NOT_FOUND) [FD]
Line_6 $$ if (entry == null) --> Line_9 $$ return [CD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_11 $$ logger.debug(Utils.join("Requested path: [", reqPath, "]")) [CD]
Line_3 $$ String reqPath = req.getPathInfo() --> Line_11 $$ logger.debug(Utils.join("Requested path: [", reqPath, "]")) [FD]
Line_4 $$ reqPath = reqPath.substring(1) --> Line_11 $$ logger.debug(Utils.join("Requested path: [", reqPath, "]")) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_12 $$ ServletUtils.establishContentType(reqPath, resp) [CD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_12 $$ ServletUtils.establishContentType(reqPath, resp) [FD]
Line_3 $$ String reqPath = req.getPathInfo() --> Line_12 $$ ServletUtils.establishContentType(reqPath, resp) [FD]
Line_4 $$ reqPath = reqPath.substring(1) --> Line_12 $$ ServletUtils.establishContentType(reqPath, resp) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_13 $$ InputStream in = null [CD]
Line_13 $$ InputStream in = null --> Line_15 $$ in = new BufferedInputStream(zipFile.getInputStream(entry)) [FD]
Line_13 $$ InputStream in = null --> Line_16 $$ IOUtils.copy(in, resp.getOutputStream()) [FD]
Line_15 $$ in = new BufferedInputStream(zipFile.getInputStream(entry)) --> Line_16 $$ IOUtils.copy(in, resp.getOutputStream()) [FD]
Line_2 $$ protected void doRequest(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException --> Line_16 $$ IOUtils.copy(in, resp.getOutputStream()) [FD]
Line_13 $$ InputStream in = null --> Line_21 $$ IOUtils.closeQuietly(in) [FD]
Line_15 $$ in = new BufferedInputStream(zipFile.getInputStream(entry)) --> Line_21 $$ IOUtils.closeQuietly(in) [FD]
