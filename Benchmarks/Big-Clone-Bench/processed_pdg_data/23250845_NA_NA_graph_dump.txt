Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_3 $$ assertTrue(resourceName.startsWith("/")) [CD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_3 $$ assertTrue(resourceName.startsWith("/")) [FD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_4 $$ final URL resource = this.getClass().getResource(resourceName) [CD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_4 $$ final URL resource = this.getClass().getResource(resourceName) [FD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_5 $$ assertNotNull("Expected '" + resourceName + "' not found.", resource) [CD]
Line_4 $$ final URL resource = this.getClass().getResource(resourceName) --> Line_5 $$ assertNotNull("Expected '" + resourceName + "' not found.", resource) [FD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_6 $$ assertTrue(targetDirectory.isAbsolute()) [CD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_6 $$ assertTrue(targetDirectory.isAbsolute()) [FD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_7 $$ FileUtils.deleteDirectory(targetDirectory) [CD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_7 $$ FileUtils.deleteDirectory(targetDirectory) [FD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_8 $$ assertTrue(targetDirectory.mkdirs()) [CD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_8 $$ assertTrue(targetDirectory.mkdirs()) [FD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_9 $$ ZipInputStream in = null [CD]
Line_2 $$ private void unzipResource(final String resourceName, final File targetDirectory) throws IOException --> Line_10 $$ boolean suppressExceptionOnClose = true [CD]
Line_9 $$ ZipInputStream in = null --> Line_12 $$ in = new ZipInputStream(resource.openStream()) [FD]
Line_4 $$ final URL resource = this.getClass().getResource(resourceName) --> Line_12 $$ in = new ZipInputStream(resource.openStream()) [FD]
Line_9 $$ ZipInputStream in = null --> Line_14 $$ while ((e = in.getNextEntry()) != null) [FD]
Line_12 $$ in = new ZipInputStream(resource.openStream()) --> Line_14 $$ while ((e = in.getNextEntry()) != null) [FD]
Line_18 $$ final File dest = new File(targetDirectory, e.getName()) --> Line_19 $$ assertTrue(dest.isAbsolute()) [FD]
Line_20 $$ OutputStream out = null --> Line_22 $$ out = FileUtils.openOutputStream(dest) [FD]
Line_18 $$ final File dest = new File(targetDirectory, e.getName()) --> Line_22 $$ out = FileUtils.openOutputStream(dest) [FD]
Line_9 $$ ZipInputStream in = null --> Line_23 $$ IOUtils.copy(in, out) [FD]
Line_12 $$ in = new ZipInputStream(resource.openStream()) --> Line_23 $$ IOUtils.copy(in, out) [FD]
Line_20 $$ OutputStream out = null --> Line_23 $$ IOUtils.copy(in, out) [FD]
Line_22 $$ out = FileUtils.openOutputStream(dest) --> Line_23 $$ IOUtils.copy(in, out) [FD]
Line_10 $$ boolean suppressExceptionOnClose = true --> Line_24 $$ suppressExceptionOnClose = false [FD]
Line_20 $$ OutputStream out = null --> Line_27 $$ if (out != null) [FD]
Line_22 $$ out = FileUtils.openOutputStream(dest) --> Line_27 $$ if (out != null) [FD]
Line_27 $$ if (out != null) --> Line_28 $$ out.close() [CD]
Line_20 $$ OutputStream out = null --> Line_28 $$ out.close() [FD]
Line_22 $$ out = FileUtils.openOutputStream(dest) --> Line_28 $$ out.close() [FD]
Line_24 $$ suppressExceptionOnClose = false --> Line_30 $$ suppressExceptionOnClose = true [FD]
Line_10 $$ boolean suppressExceptionOnClose = true --> Line_30 $$ suppressExceptionOnClose = true [FD]
Line_24 $$ suppressExceptionOnClose = false --> Line_32 $$ if (!suppressExceptionOnClose) [FD]
Line_30 $$ suppressExceptionOnClose = true --> Line_32 $$ if (!suppressExceptionOnClose) [FD]
Line_10 $$ boolean suppressExceptionOnClose = true --> Line_32 $$ if (!suppressExceptionOnClose) [FD]
Line_9 $$ ZipInputStream in = null --> Line_37 $$ in.closeEntry() [FD]
Line_12 $$ in = new ZipInputStream(resource.openStream()) --> Line_37 $$ in.closeEntry() [FD]
Line_24 $$ suppressExceptionOnClose = false --> Line_39 $$ suppressExceptionOnClose = false [FD]
Line_30 $$ suppressExceptionOnClose = true --> Line_39 $$ suppressExceptionOnClose = false [FD]
Line_10 $$ boolean suppressExceptionOnClose = true --> Line_39 $$ suppressExceptionOnClose = false [FD]
Line_9 $$ ZipInputStream in = null --> Line_42 $$ if (in != null) [FD]
Line_12 $$ in = new ZipInputStream(resource.openStream()) --> Line_42 $$ if (in != null) [FD]
Line_42 $$ if (in != null) --> Line_43 $$ in.close() [CD]
Line_9 $$ ZipInputStream in = null --> Line_43 $$ in.close() [FD]
Line_12 $$ in = new ZipInputStream(resource.openStream()) --> Line_43 $$ in.close() [FD]
Line_24 $$ suppressExceptionOnClose = false --> Line_46 $$ if (!suppressExceptionOnClose) [FD]
Line_30 $$ suppressExceptionOnClose = true --> Line_46 $$ if (!suppressExceptionOnClose) [FD]
Line_10 $$ boolean suppressExceptionOnClose = true --> Line_46 $$ if (!suppressExceptionOnClose) [FD]
Line_39 $$ suppressExceptionOnClose = false --> Line_46 $$ if (!suppressExceptionOnClose) [FD]
