Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_3 $$ Assert.Arg.notNull(output, "output") [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_3 $$ Assert.Arg.notNull(output, "output") [FD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_4 $$ Assert.Arg.notNull(fragment, "fragment") [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_4 $$ Assert.Arg.notNull(fragment, "fragment") [FD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_5 $$ Assert.Arg.notNull(fragment.getId(), "fragment.getId()") [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_5 $$ Assert.Arg.notNull(fragment.getId(), "fragment.getId()") [FD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_6 $$ if (this.delegate != null) [CD]
Line_6 $$ if (this.delegate != null) --> Line_7 $$ this.delegate.getFile(output, fragment) [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_7 $$ this.delegate.getFile(output, fragment) [FD]
Line_6 $$ if (this.delegate != null) --> Line_8 $$ return [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_10 $$ ensureBaseDirectoryCreated() [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_11 $$ File filePath = getFragmentFilePath(fragment) [CD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_11 $$ File filePath = getFragmentFilePath(fragment) [FD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_12 $$ InputStream input = FileUtils.openInputStream(filePath) [CD]
Line_11 $$ File filePath = getFragmentFilePath(fragment) --> Line_12 $$ InputStream input = FileUtils.openInputStream(filePath) [FD]
Line_12 $$ InputStream input = FileUtils.openInputStream(filePath) --> Line_14 $$ IOUtils.copyLarge(input, output) [FD]
Line_2 $$ public void getFile(OutputStream output, Fragment fragment) throws Exception --> Line_14 $$ IOUtils.copyLarge(input, output) [FD]
Line_12 $$ InputStream input = FileUtils.openInputStream(filePath) --> Line_16 $$ IOUtils.closeQuietly(input) [FD]
