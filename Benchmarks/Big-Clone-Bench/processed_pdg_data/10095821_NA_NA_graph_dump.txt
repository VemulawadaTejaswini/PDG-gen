Line_2 $$ public void download() throws IOException --> Line_3 $$ FileObject typica = fsManager.resolveFile("s3://" + bucketName + "/jonny.zip") [CD]
Line_2 $$ public void download() throws IOException --> Line_4 $$ File localCache = File.createTempFile("vfs.", ".s3-test") [CD]
Line_2 $$ public void download() throws IOException --> Line_5 $$ FileOutputStream out = new FileOutputStream(localCache) [CD]
Line_2 $$ public void download() throws IOException --> Line_6 $$ IOUtils.copy(typica.getContent().getInputStream(), out) [CD]
Line_5 $$ FileOutputStream out = new FileOutputStream(localCache) --> Line_6 $$ IOUtils.copy(typica.getContent().getInputStream(), out) [FD]
Line_3 $$ FileObject typica = fsManager.resolveFile("s3://" + bucketName + "/jonny.zip") --> Line_6 $$ IOUtils.copy(typica.getContent().getInputStream(), out) [FD]
Line_2 $$ public void download() throws IOException --> Line_7 $$ Assert.assertEquals(localCache.length(), typica.getContent().getSize()) [CD]
Line_4 $$ File localCache = File.createTempFile("vfs.", ".s3-test") --> Line_7 $$ Assert.assertEquals(localCache.length(), typica.getContent().getSize()) [FD]
Line_3 $$ FileObject typica = fsManager.resolveFile("s3://" + bucketName + "/jonny.zip") --> Line_7 $$ Assert.assertEquals(localCache.length(), typica.getContent().getSize()) [FD]
Line_2 $$ public void download() throws IOException --> Line_8 $$ localCache.delete() [CD]
Line_4 $$ File localCache = File.createTempFile("vfs.", ".s3-test") --> Line_8 $$ localCache.delete() [FD]
