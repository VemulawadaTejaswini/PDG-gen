Line_2 $$ private void dealWith(String line) throws Exception --> Line_3 $$ if (line.startsWith("#") || (line.length() == 0)) [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_3 $$ if (line.startsWith("#") || (line.length() == 0)) [FD]
Line_3 $$ if (line.startsWith("#") || (line.length() == 0)) --> Line_4 $$ return [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_6 $$ String sarr[] [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_7 $$ sarr = StringUtil.split(line, '\t') [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_7 $$ sarr = StringUtil.split(line, '\t') [FD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_8 $$ String path = destDir + File.separator + sarr[0] [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_9 $$ boolean copyFile = true [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_10 $$ if (sarr.length == 2) [CD]
Line_13 $$ String fileHash = loadFileHash(destDir + File.separator + sarr[0]) --> Line_14 $$ if (fileHash != null) [FD]
Line_14 $$ if (fileHash != null) --> Line_15 $$ if (serverHash.equalsIgnoreCase(fileHash)) [CD]
Line_12 $$ String serverHash = sarr[1] --> Line_15 $$ if (serverHash.equalsIgnoreCase(fileHash)) [FD]
Line_13 $$ String fileHash = loadFileHash(destDir + File.separator + sarr[0]) --> Line_15 $$ if (serverHash.equalsIgnoreCase(fileHash)) [FD]
Line_15 $$ if (serverHash.equalsIgnoreCase(fileHash)) --> Line_16 $$ copyFile = false [CD]
Line_9 $$ boolean copyFile = true --> Line_16 $$ copyFile = false [FD]
Line_15 $$ if (serverHash.equalsIgnoreCase(fileHash)) --> Line_18 $$ if (verbose) [CD]
Line_18 $$ if (verbose) --> Line_19 $$ System.out.println(" -- " + sarr[0] + " has changed") [CD]
Line_2 $$ private void dealWith(String line) throws Exception --> Line_29 $$ if (copyFile) [CD]
Line_29 $$ if (copyFile) --> Line_30 $$ int idx = path.lastIndexOf('/') [CD]
Line_8 $$ String path = destDir + File.separator + sarr[0] --> Line_30 $$ int idx = path.lastIndexOf('/') [FD]
Line_29 $$ if (copyFile) --> Line_31 $$ if (idx > 0) [CD]
Line_30 $$ int idx = path.lastIndexOf('/') --> Line_31 $$ if (idx > 0) [FD]
Line_31 $$ if (idx > 0) --> Line_32 $$ String dir = path.substring(0, idx) [CD]
Line_8 $$ String path = destDir + File.separator + sarr[0] --> Line_32 $$ String dir = path.substring(0, idx) [FD]
Line_30 $$ int idx = path.lastIndexOf('/') --> Line_32 $$ String dir = path.substring(0, idx) [FD]
Line_31 $$ if (idx > 0) --> Line_33 $$ File f = new File(dir) [CD]
Line_31 $$ if (idx > 0) --> Line_34 $$ f.mkdirs() [CD]
Line_33 $$ File f = new File(dir) --> Line_34 $$ f.mkdirs() [FD]
Line_29 $$ if (copyFile) --> Line_36 $$ FileOutputStream os = new FileOutputStream(path) [CD]
Line_29 $$ if (copyFile) --> Line_37 $$ byte buf[] = new byte[1024] [CD]
Line_29 $$ if (copyFile) --> Line_38 $$ URLConnection urc = new URL(urlStr + "/" + sarr[0]).openConnection() [CD]
Line_29 $$ if (copyFile) --> Line_39 $$ InputStream is = urc.getInputStream() [CD]
Line_38 $$ URLConnection urc = new URL(urlStr + "/" + sarr[0]).openConnection() --> Line_39 $$ InputStream is = urc.getInputStream() [FD]
Line_29 $$ if (copyFile) --> Line_40 $$ boolean done = false [CD]
Line_29 $$ if (copyFile) --> Line_41 $$ while (!done) [CD]
Line_40 $$ boolean done = false --> Line_41 $$ while (!done) [FD]
Line_41 $$ while (!done) --> Line_42 $$ int read = is.read(buf, 0, 1024) [CD]
Line_39 $$ InputStream is = urc.getInputStream() --> Line_42 $$ int read = is.read(buf, 0, 1024) [FD]
Line_41 $$ while (!done) --> Line_43 $$ if (read == -1) [CD]
Line_42 $$ int read = is.read(buf, 0, 1024) --> Line_43 $$ if (read == -1) [FD]
Line_43 $$ if (read == -1) --> Line_44 $$ done = true [CD]
Line_40 $$ boolean done = false --> Line_44 $$ done = true [FD]
Line_43 $$ if (read == -1) --> Line_46 $$ os.write(buf, 0, read) [CD]
Line_36 $$ FileOutputStream os = new FileOutputStream(path) --> Line_46 $$ os.write(buf, 0, read) [FD]
Line_42 $$ int read = is.read(buf, 0, 1024) --> Line_46 $$ os.write(buf, 0, read) [FD]
Line_29 $$ if (copyFile) --> Line_49 $$ os.close() [CD]
Line_36 $$ FileOutputStream os = new FileOutputStream(path) --> Line_49 $$ os.close() [FD]
Line_29 $$ if (copyFile) --> Line_50 $$ is.close() [CD]
Line_39 $$ InputStream is = urc.getInputStream() --> Line_50 $$ is.close() [FD]
Line_29 $$ if (copyFile) --> Line_51 $$ if (verbose) [CD]
Line_51 $$ if (verbose) --> Line_52 $$ System.out.println(" -- Copied: " + sarr[0]) [CD]
Line_44 $$ done = true --> Line_41 $$ while (!done) [FD]
