Line_2 $$ public void run() --> Line_3 $$ long timeout = 10 * 1000L [CD]
Line_2 $$ public void run() --> Line_4 $$ long start = (new Date()).getTime() [CD]
Line_7 $$ boolean available = false --> Line_8 $$ while (!available && !socket.isClosed()) [FD]
Line_6 $$ InputStream is = socket.getInputStream() --> Line_10 $$ if (is.available() != 0) [FD]
Line_10 $$ if (is.available() != 0) --> Line_11 $$ available = true [CD]
Line_7 $$ boolean available = false --> Line_11 $$ available = true [FD]
Line_10 $$ if (is.available() != 0) --> Line_13 $$ Thread.sleep(100) [CD]
Line_8 $$ while (!available && !socket.isClosed()) --> Line_18 $$ long curr = (new Date()).getTime() [CD]
Line_8 $$ while (!available && !socket.isClosed()) --> Line_19 $$ if ((curr - start) >= timeout) [CD]
Line_3 $$ long timeout = 10 * 1000L --> Line_19 $$ if ((curr - start) >= timeout) [FD]
Line_23 $$ if (socket.isClosed()) --> Line_25 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_23 $$ if (socket.isClosed()) --> Line_26 $$ IOUtils.copy(is, baos) [CD]
Line_6 $$ InputStream is = socket.getInputStream() --> Line_26 $$ IOUtils.copy(is, baos) [FD]
Line_25 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_26 $$ IOUtils.copy(is, baos) [FD]
Line_23 $$ if (socket.isClosed()) --> Line_27 $$ baos.flush() [CD]
Line_25 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_27 $$ baos.flush() [FD]
Line_23 $$ if (socket.isClosed()) --> Line_28 $$ baos.close() [CD]
Line_25 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_28 $$ baos.close() [FD]
Line_23 $$ if (socket.isClosed()) --> Line_29 $$ data = baos.toByteArray() [CD]
Line_25 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_29 $$ data = baos.toByteArray() [FD]
Line_32 $$ List<String> list = new ArrayList<String>() --> Line_33 $$ list.add(msg) [FD]
Line_31 $$ String msg = FtpResponse.ReadComplete.asString() + ClientCommand.SP + "Read Complete" + ClientCommand.CRLF --> Line_33 $$ list.add(msg) [FD]
Line_34 $$ ClientResponse response = new ClientResponse(list) --> Line_35 $$ ftpClient.notifyListeners(response) [FD]
Line_11 $$ available = true --> Line_8 $$ while (!available && !socket.isClosed()) [FD]
