Line_2 $$ public Vector parse(String link) --> Line_3 $$ addMessage("Parsing: " + link) [CD]
Line_2 $$ public Vector parse(String link) --> Line_4 $$ links.removeAllElements() [CD]
Line_2 $$ public Vector parse(String link) --> Line_5 $$ URLConnection conn = null [CD]
Line_2 $$ public Vector parse(String link) --> Line_6 $$ Reader rd = null [CD]
Line_2 $$ public Vector parse(String link) --> Line_7 $$ EditorKit kit = new HTMLEditorKit() [CD]
Line_2 $$ public Vector parse(String link) --> Line_8 $$ Document doc = kit.createDefaultDocument() [CD]
Line_7 $$ EditorKit kit = new HTMLEditorKit() --> Line_8 $$ Document doc = kit.createDefaultDocument() [FD]
Line_2 $$ public Vector parse(String link) --> Line_9 $$ doc.putProperty("IgnoreCharsetDirective", Boolean.TRUE) [CD]
Line_8 $$ Document doc = kit.createDefaultDocument() --> Line_9 $$ doc.putProperty("IgnoreCharsetDirective", Boolean.TRUE) [FD]
Line_2 $$ public Vector parse(String link) --> Line_10 $$ URL url = null [CD]
Line_10 $$ URL url = null --> Line_12 $$ url = new URL(link) [FD]
Line_5 $$ URLConnection conn = null --> Line_18 $$ conn = new URL(link).openConnection() [FD]
Line_6 $$ Reader rd = null --> Line_19 $$ rd = new InputStreamReader(conn.getInputStream()) [FD]
Line_5 $$ URLConnection conn = null --> Line_19 $$ rd = new InputStreamReader(conn.getInputStream()) [FD]
Line_18 $$ conn = new URL(link).openConnection() --> Line_19 $$ rd = new InputStreamReader(conn.getInputStream()) [FD]
Line_7 $$ EditorKit kit = new HTMLEditorKit() --> Line_25 $$ kit.read(rd, doc, 0) [FD]
Line_6 $$ Reader rd = null --> Line_25 $$ kit.read(rd, doc, 0) [FD]
Line_19 $$ rd = new InputStreamReader(conn.getInputStream()) --> Line_25 $$ kit.read(rd, doc, 0) [FD]
Line_8 $$ Document doc = kit.createDefaultDocument() --> Line_25 $$ kit.read(rd, doc, 0) [FD]
Line_27 $$ javax.swing.text.Element elem --> Line_28 $$ while ((elem = it.next()) != null) [FD]
Line_26 $$ ElementIterator it = new ElementIterator(doc) --> Line_28 $$ while ((elem = it.next()) != null) [FD]
Line_28 $$ while ((elem = it.next()) != null) --> Line_29 $$ SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A) [CD]
Line_28 $$ while ((elem = it.next()) != null) --> Line_29 $$ SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A) [FD]
Line_27 $$ javax.swing.text.Element elem --> Line_29 $$ SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A) [FD]
Line_28 $$ while ((elem = it.next()) != null) --> Line_30 $$ if (s != null) [CD]
Line_29 $$ SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A) --> Line_30 $$ if (s != null) [FD]
Line_30 $$ if (s != null) --> Line_31 $$ if (s.toString().indexOf("script") >= 0) [CD]
Line_29 $$ SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A) --> Line_31 $$ if (s.toString().indexOf("script") >= 0) [FD]
Line_30 $$ if (s != null) --> Line_32 $$ String lnk = "" [CD]
Line_32 $$ String lnk = "" --> Line_34 $$ lnk = s.getAttribute(HTML.Attribute.HREF).toString() [FD]
Line_29 $$ SimpleAttributeSet s = (SimpleAttributeSet) elem.getAttributes().getAttribute(HTML.Tag.A) --> Line_34 $$ lnk = s.getAttribute(HTML.Attribute.HREF).toString() [FD]
Line_30 $$ if (s != null) --> Line_38 $$ int j = 0 [CD]
Line_30 $$ if (s != null) --> Line_39 $$ if ((j = lnk.indexOf('#')) >= 0) [CD]
Line_38 $$ int j = 0 --> Line_39 $$ if ((j = lnk.indexOf('#')) >= 0) [FD]
Line_32 $$ String lnk = "" --> Line_39 $$ if ((j = lnk.indexOf('#')) >= 0) [FD]
Line_34 $$ lnk = s.getAttribute(HTML.Attribute.HREF).toString() --> Line_39 $$ if ((j = lnk.indexOf('#')) >= 0) [FD]
Line_30 $$ if (s != null) --> Line_40 $$ URL urlLink = new URL(url, lnk) [CD]
Line_30 $$ if (s != null) --> Line_41 $$ if (!url.getHost().equals(urlLink.getHost())) [CD]
Line_10 $$ URL url = null --> Line_41 $$ if (!url.getHost().equals(urlLink.getHost())) [FD]
Line_12 $$ url = new URL(link) --> Line_41 $$ if (!url.getHost().equals(urlLink.getHost())) [FD]
Line_40 $$ URL urlLink = new URL(url, lnk) --> Line_41 $$ if (!url.getHost().equals(urlLink.getHost())) [FD]
Line_30 $$ if (s != null) --> Line_42 $$ String str = urlLink.toString() [CD]
Line_40 $$ URL urlLink = new URL(url, lnk) --> Line_42 $$ String str = urlLink.toString() [FD]
Line_30 $$ if (s != null) --> Line_43 $$ if (!str.startsWith("http")) [CD]
Line_42 $$ String str = urlLink.toString() --> Line_43 $$ if (!str.startsWith("http")) [FD]
Line_30 $$ if (s != null) --> Line_44 $$ if (str.endsWith(".pdf")) [CD]
Line_42 $$ String str = urlLink.toString() --> Line_44 $$ if (str.endsWith(".pdf")) [FD]
Line_30 $$ if (s != null) --> Line_47 $$ for (int i = 0; i < leaveSuffix.length; i++) [CD]
Line_47 $$ for (int i = 0; i < leaveSuffix.length; i++) --> Line_48 $$ if ((str.endsWith(leaveSuffix[i]))) [CD]
Line_42 $$ String str = urlLink.toString() --> Line_48 $$ if ((str.endsWith(leaveSuffix[i]))) [FD]
Line_30 $$ if (s != null) --> Line_51 $$ for (int i = 0; i < suffix.length; i++) [CD]
Line_47 $$ for (int i = 0; i < leaveSuffix.length; i++) --> Line_51 $$ for (int i = 0; i < suffix.length; i++) [FD]
Line_51 $$ for (int i = 0; i < suffix.length; i++) --> Line_52 $$ if ((str.endsWith(suffix[i]))) [CD]
Line_42 $$ String str = urlLink.toString() --> Line_52 $$ if ((str.endsWith(suffix[i]))) [FD]
Line_30 $$ if (s != null) --> Line_54 $$ if (!skip) [CD]
Line_5 $$ URLConnection conn = null --> Line_56 $$ conn = urlLink.openConnection() [FD]
Line_18 $$ conn = new URL(link).openConnection() --> Line_56 $$ conn = urlLink.openConnection() [FD]
Line_40 $$ URL urlLink = new URL(url, lnk) --> Line_56 $$ conn = urlLink.openConnection() [FD]
Line_54 $$ if (!skip) --> Line_60 $$ contentType = conn.getContentType() [CD]
Line_56 $$ conn = urlLink.openConnection() --> Line_60 $$ contentType = conn.getContentType() [FD]
Line_5 $$ URLConnection conn = null --> Line_60 $$ contentType = conn.getContentType() [FD]
Line_18 $$ conn = new URL(link).openConnection() --> Line_60 $$ contentType = conn.getContentType() [FD]
Line_54 $$ if (!skip) --> Line_61 $$ if (contentType.equals("application/pdf")) [CD]
Line_61 $$ if (contentType.equals("application/pdf")) --> Line_63 $$ if (!contentType.equals("text/html")) [CD]
Line_30 $$ if (s != null) --> Line_67 $$ if (!links.contains(urlLink.toString())) [CD]
Line_40 $$ URL urlLink = new URL(url, lnk) --> Line_67 $$ if (!links.contains(urlLink.toString())) [FD]
Line_67 $$ if (!links.contains(urlLink.toString())) --> Line_68 $$ links.addElement(urlLink.toString()) [CD]
Line_40 $$ URL urlLink = new URL(url, lnk) --> Line_68 $$ links.addElement(urlLink.toString()) [FD]
Line_2 $$ public Vector parse(String link) --> Line_75 $$ return links [CD]
