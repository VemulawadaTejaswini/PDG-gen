Line_2 $$ public static String[] check() throws Exception --> Line_3 $$ if (currentVersion == null) [CD]
Line_2 $$ public static String[] check() throws Exception --> Line_4 $$ URL url = new URL(versionURL) [CD]
Line_2 $$ public static String[] check() throws Exception --> Line_5 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection() [CD]
Line_4 $$ URL url = new URL(versionURL) --> Line_5 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_6 $$ String str = "" [CD]
Line_2 $$ public static String[] check() throws Exception --> Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) [CD]
Line_5 $$ HttpURLConnection con = (HttpURLConnection) url.openConnection() --> Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_8 $$ while (br.ready()) [CD]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) --> Line_8 $$ while (br.ready()) [FD]
Line_8 $$ while (br.ready()) --> Line_9 $$ str = str + br.readLine() [CD]
Line_6 $$ String str = "" --> Line_9 $$ str = str + br.readLine() [FD]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) --> Line_9 $$ str = str + br.readLine() [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_11 $$ br.close() [CD]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(con.getInputStream())) --> Line_11 $$ br.close() [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_12 $$ Document document = DocumentHelper.parseText(str) [CD]
Line_9 $$ str = str + br.readLine() --> Line_12 $$ Document document = DocumentHelper.parseText(str) [FD]
Line_6 $$ String str = "" --> Line_12 $$ Document document = DocumentHelper.parseText(str) [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_13 $$ Node node = document.selectSingleNode("//root/version") [CD]
Line_12 $$ Document document = DocumentHelper.parseText(str) --> Line_13 $$ Node node = document.selectSingleNode("//root/version") [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_14 $$ String latestVersion = node.valueOf("@id") [CD]
Line_13 $$ Node node = document.selectSingleNode("//root/version") --> Line_14 $$ String latestVersion = node.valueOf("@id") [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_15 $$ Double latest = Double.parseDouble(latestVersion) [CD]
Line_14 $$ String latestVersion = node.valueOf("@id") --> Line_15 $$ Double latest = Double.parseDouble(latestVersion) [FD]
Line_2 $$ public static String[] check() throws Exception --> Line_16 $$ Double current = Double.parseDouble(currentVersion.substring(0, currentVersion.indexOf("-"))) [CD]
Line_2 $$ public static String[] check() throws Exception --> Line_17 $$ if (latest > current) [CD]
Line_15 $$ Double latest = Double.parseDouble(latestVersion) --> Line_17 $$ if (latest > current) [FD]
Line_16 $$ Double current = Double.parseDouble(currentVersion.substring(0, currentVersion.indexOf("-"))) --> Line_17 $$ if (latest > current) [FD]
Line_17 $$ if (latest > current) --> Line_18 $$ String[] a = [CD]
Line_13 $$ Node node = document.selectSingleNode("//root/version") --> Line_18 $$ String[] a = [FD]
Line_17 $$ if (latest > current) --> Line_19 $$ return a [CD]
Line_2 $$ public static String[] check() throws Exception --> Line_21 $$ return null [CD]
