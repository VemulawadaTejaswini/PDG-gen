Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_3 $$ printAccess(request, false) [CD]
Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_3 $$ printAccess(request, false) [FD]
Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_5 $$ response.setContentType("application/json") [FD]
Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_6 $$ String position = request.getParameter("pos") [FD]
Line_6 $$ String position = request.getParameter("pos") --> Line_7 $$ if (position == null || position.length() == 0) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_8 $$ reportJsonError(request, response, "Missing position parameter") [CD]
Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_8 $$ reportJsonError(request, response, "Missing position parameter") [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_10 $$ PositionParser pp [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_11 $$ pp = new PositionParser(position) [CD]
Line_10 $$ PositionParser pp --> Line_11 $$ pp = new PositionParser(position) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_12 $$ String url = "http://simbad.u-strasbg.fr/simbad/sim-script?submit=submit+script&script=" [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_13 $$ url += URLEncoder.encode("format object \"%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\"\n" + pp.getPosition() + " radius=1m", "ISO-8859-1") [CD]
Line_12 $$ String url = "http://simbad.u-strasbg.fr/simbad/sim-script?submit=submit+script&script=" --> Line_13 $$ url += URLEncoder.encode("format object \"%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\"\n" + pp.getPosition() + " radius=1m", "ISO-8859-1") [FD]
Line_10 $$ PositionParser pp --> Line_13 $$ url += URLEncoder.encode("format object \"%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\"\n" + pp.getPosition() + " radius=1m", "ISO-8859-1") [FD]
Line_11 $$ pp = new PositionParser(position) --> Line_13 $$ url += URLEncoder.encode("format object \"%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\"\n" + pp.getPosition() + " radius=1m", "ISO-8859-1") [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_14 $$ System.out.println(url) [CD]
Line_12 $$ String url = "http://simbad.u-strasbg.fr/simbad/sim-script?submit=submit+script&script=" --> Line_14 $$ System.out.println(url) [FD]
Line_13 $$ url += URLEncoder.encode("format object \"%IDLIST[%-30*]|-%COO(A)|%COO(D)|%OTYPELIST(S)\"\n" + pp.getPosition() + " radius=1m", "ISO-8859-1") --> Line_14 $$ System.out.println(url) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_15 $$ URL simurl = new URL(url) [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(simurl.openStream())) [CD]
Line_15 $$ URL simurl = new URL(url) --> Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(simurl.openStream())) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_17 $$ String boeuf [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_18 $$ boolean data_found = false [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_19 $$ JSONObject retour = new JSONObject() [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_20 $$ JSONArray dataarray = new JSONArray() [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_21 $$ JSONArray colarray = new JSONArray() [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_22 $$ JSONObject jsloc = new JSONObject() [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_23 $$ jsloc.put("sTitle", "ID") [CD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_23 $$ jsloc.put("sTitle", "ID") [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_24 $$ colarray.add(jsloc) [CD]
Line_21 $$ JSONArray colarray = new JSONArray() --> Line_24 $$ colarray.add(jsloc) [FD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_24 $$ colarray.add(jsloc) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_25 $$ jsloc = new JSONObject() [CD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_25 $$ jsloc = new JSONObject() [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_26 $$ jsloc.put("sTitle", "Position") [CD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_26 $$ jsloc.put("sTitle", "Position") [FD]
Line_25 $$ jsloc = new JSONObject() --> Line_26 $$ jsloc.put("sTitle", "Position") [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_27 $$ colarray.add(jsloc) [CD]
Line_21 $$ JSONArray colarray = new JSONArray() --> Line_27 $$ colarray.add(jsloc) [FD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_27 $$ colarray.add(jsloc) [FD]
Line_25 $$ jsloc = new JSONObject() --> Line_27 $$ colarray.add(jsloc) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_28 $$ jsloc = new JSONObject() [CD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_28 $$ jsloc = new JSONObject() [FD]
Line_25 $$ jsloc = new JSONObject() --> Line_28 $$ jsloc = new JSONObject() [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_29 $$ jsloc.put("sTitle", "Type") [CD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_29 $$ jsloc.put("sTitle", "Type") [FD]
Line_25 $$ jsloc = new JSONObject() --> Line_29 $$ jsloc.put("sTitle", "Type") [FD]
Line_28 $$ jsloc = new JSONObject() --> Line_29 $$ jsloc.put("sTitle", "Type") [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_30 $$ colarray.add(jsloc) [CD]
Line_21 $$ JSONArray colarray = new JSONArray() --> Line_30 $$ colarray.add(jsloc) [FD]
Line_22 $$ JSONObject jsloc = new JSONObject() --> Line_30 $$ colarray.add(jsloc) [FD]
Line_25 $$ jsloc = new JSONObject() --> Line_30 $$ colarray.add(jsloc) [FD]
Line_28 $$ jsloc = new JSONObject() --> Line_30 $$ colarray.add(jsloc) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_31 $$ retour.put("aoColumns", colarray) [CD]
Line_19 $$ JSONObject retour = new JSONObject() --> Line_31 $$ retour.put("aoColumns", colarray) [FD]
Line_21 $$ JSONArray colarray = new JSONArray() --> Line_31 $$ retour.put("aoColumns", colarray) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_32 $$ int datasize = 0 [CD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_33 $$ while ((boeuf = in.readLine()) != null) [CD]
Line_17 $$ String boeuf --> Line_33 $$ while ((boeuf = in.readLine()) != null) [FD]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(simurl.openStream())) --> Line_33 $$ while ((boeuf = in.readLine()) != null) [FD]
Line_33 $$ while ((boeuf = in.readLine()) != null) --> Line_34 $$ if (data_found) [CD]
Line_34 $$ if (data_found) --> Line_35 $$ String[] fields = boeuf.trim().split("\\|", -1) [CD]
Line_33 $$ while ((boeuf = in.readLine()) != null) --> Line_35 $$ String[] fields = boeuf.trim().split("\\|", -1) [FD]
Line_17 $$ String boeuf --> Line_35 $$ String[] fields = boeuf.trim().split("\\|", -1) [FD]
Line_34 $$ if (data_found) --> Line_36 $$ int pos = fields.length - 1 [CD]
Line_34 $$ if (data_found) --> Line_37 $$ if (pos >= 3) [CD]
Line_36 $$ int pos = fields.length - 1 --> Line_37 $$ if (pos >= 3) [FD]
Line_37 $$ if (pos >= 3) --> Line_38 $$ String type = fields[pos] [CD]
Line_37 $$ if (pos >= 3) --> Line_39 $$ pos-- [CD]
Line_36 $$ int pos = fields.length - 1 --> Line_39 $$ pos-- [FD]
Line_37 $$ if (pos >= 3) --> Line_40 $$ String dec = fields[pos] [CD]
Line_37 $$ if (pos >= 3) --> Line_41 $$ pos-- [CD]
Line_36 $$ int pos = fields.length - 1 --> Line_41 $$ pos-- [FD]
Line_37 $$ if (pos >= 3) --> Line_42 $$ String ra = fields[pos] [CD]
Line_37 $$ if (pos >= 3) --> Line_43 $$ String id = fields[0].split("\\s [CD]
Line_37 $$ if (pos >= 3) --> Line_44 $$ JSONArray darray = new JSONArray() [CD]
Line_37 $$ if (pos >= 3) --> Line_45 $$ darray.add(id.trim()) [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_45 $$ darray.add(id.trim()) [FD]
Line_43 $$ String id = fields[0].split("\\s --> Line_45 $$ darray.add(id.trim()) [FD]
Line_37 $$ if (pos >= 3) --> Line_46 $$ darray.add(ra + " " + dec) [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_46 $$ darray.add(ra + " " + dec) [FD]
Line_37 $$ if (pos >= 3) --> Line_47 $$ darray.add(type.trim()) [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_47 $$ darray.add(type.trim()) [FD]
Line_38 $$ String type = fields[pos] --> Line_47 $$ darray.add(type.trim()) [FD]
Line_37 $$ if (pos >= 3) --> Line_48 $$ dataarray.add(darray) [CD]
Line_20 $$ JSONArray dataarray = new JSONArray() --> Line_48 $$ dataarray.add(darray) [FD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_48 $$ dataarray.add(darray) [FD]
Line_37 $$ if (pos >= 3) --> Line_49 $$ datasize++ [CD]
Line_32 $$ int datasize = 0 --> Line_49 $$ datasize++ [FD]
Line_37 $$ if (pos >= 3) --> Line_50 $$ if (datasize >= 15) [CD]
Line_32 $$ int datasize = 0 --> Line_50 $$ if (datasize >= 15) [FD]
Line_50 $$ if (datasize >= 15) --> Line_51 $$ darray = new JSONArray() [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_51 $$ darray = new JSONArray() [FD]
Line_50 $$ if (datasize >= 15) --> Line_52 $$ darray.add("truncated to 15") [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_52 $$ darray.add("truncated to 15") [FD]
Line_51 $$ darray = new JSONArray() --> Line_52 $$ darray.add("truncated to 15") [FD]
Line_50 $$ if (datasize >= 15) --> Line_53 $$ darray.add("") [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_53 $$ darray.add("") [FD]
Line_51 $$ darray = new JSONArray() --> Line_53 $$ darray.add("") [FD]
Line_50 $$ if (datasize >= 15) --> Line_54 $$ darray.add("") [CD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_54 $$ darray.add("") [FD]
Line_51 $$ darray = new JSONArray() --> Line_54 $$ darray.add("") [FD]
Line_50 $$ if (datasize >= 15) --> Line_55 $$ dataarray.add(darray) [CD]
Line_20 $$ JSONArray dataarray = new JSONArray() --> Line_55 $$ dataarray.add(darray) [FD]
Line_44 $$ JSONArray darray = new JSONArray() --> Line_55 $$ dataarray.add(darray) [FD]
Line_51 $$ darray = new JSONArray() --> Line_55 $$ dataarray.add(darray) [FD]
Line_50 $$ if (datasize >= 15) --> Line_56 $$ datasize++ [CD]
Line_32 $$ int datasize = 0 --> Line_56 $$ datasize++ [FD]
Line_34 $$ if (data_found) --> Line_59 $$ if (boeuf.startsWith("::data")) [CD]
Line_33 $$ while ((boeuf = in.readLine()) != null) --> Line_59 $$ if (boeuf.startsWith("::data")) [FD]
Line_17 $$ String boeuf --> Line_59 $$ if (boeuf.startsWith("::data")) [FD]
Line_59 $$ if (boeuf.startsWith("::data")) --> Line_60 $$ data_found = true [CD]
Line_18 $$ boolean data_found = false --> Line_60 $$ data_found = true [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_63 $$ in.close() [CD]
Line_16 $$ BufferedReader in = new BufferedReader(new InputStreamReader(simurl.openStream())) --> Line_63 $$ in.close() [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_64 $$ retour.put("aaData", dataarray) [CD]
Line_19 $$ JSONObject retour = new JSONObject() --> Line_64 $$ retour.put("aaData", dataarray) [FD]
Line_20 $$ JSONArray dataarray = new JSONArray() --> Line_64 $$ retour.put("aaData", dataarray) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_65 $$ retour.put("iTotalRecords", datasize) [CD]
Line_19 $$ JSONObject retour = new JSONObject() --> Line_65 $$ retour.put("iTotalRecords", datasize) [FD]
Line_32 $$ int datasize = 0 --> Line_65 $$ retour.put("iTotalRecords", datasize) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_66 $$ retour.put("iTotalDisplayRecords", datasize) [CD]
Line_19 $$ JSONObject retour = new JSONObject() --> Line_66 $$ retour.put("iTotalDisplayRecords", datasize) [FD]
Line_32 $$ int datasize = 0 --> Line_66 $$ retour.put("iTotalDisplayRecords", datasize) [FD]
Line_7 $$ if (position == null || position.length() == 0) --> Line_67 $$ JsonUtils.teePrint(response.getOutputStream(), retour.toJSONString()) [CD]
Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_67 $$ JsonUtils.teePrint(response.getOutputStream(), retour.toJSONString()) [FD]
Line_19 $$ JSONObject retour = new JSONObject() --> Line_67 $$ JsonUtils.teePrint(response.getOutputStream(), retour.toJSONString()) [FD]
Line_2 $$ private void process(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_70 $$ reportJsonError(request, response, e) [FD]
Line_51 $$ darray = new JSONArray() --> Line_45 $$ darray.add(id.trim()) [FD]
Line_51 $$ darray = new JSONArray() --> Line_46 $$ darray.add(ra + " " + dec) [FD]
Line_51 $$ darray = new JSONArray() --> Line_47 $$ darray.add(type.trim()) [FD]
Line_51 $$ darray = new JSONArray() --> Line_48 $$ dataarray.add(darray) [FD]
