Line_2 $$ byte[] toByteArray() throws IOException --> Line_3 $$ DataElement element = new DataElement(DataElement.DATSEQ) [CD]
Line_2 $$ byte[] toByteArray() throws IOException --> Line_4 $$ final boolean sort = true [CD]
Line_2 $$ byte[] toByteArray() throws IOException --> Line_5 $$ if (sort) [CD]
Line_5 $$ if (sort) --> Line_6 $$ int[] sortIDs = new int[attributes.size()] [CD]
Line_5 $$ if (sort) --> Line_7 $$ int k = 0 [CD]
Line_5 $$ if (sort) --> Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) [CD]
Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_9 $$ Integer key = (Integer) e.nextElement() [CD]
Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_9 $$ Integer key = (Integer) e.nextElement() [FD]
Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_10 $$ sortIDs[k] = key.intValue() [CD]
Line_9 $$ Integer key = (Integer) e.nextElement() --> Line_10 $$ sortIDs[k] = key.intValue() [FD]
Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_11 $$ k++ [CD]
Line_7 $$ int k = 0 --> Line_11 $$ k++ [FD]
Line_5 $$ if (sort) --> Line_13 $$ for (int i = 0; i < sortIDs.length; i++) [CD]
Line_13 $$ for (int i = 0; i < sortIDs.length; i++) --> Line_14 $$ for (int j = 0; j < sortIDs.length - i - 1; j++) [CD]
Line_14 $$ for (int j = 0; j < sortIDs.length - i - 1; j++) --> Line_15 $$ if (sortIDs[j] > sortIDs[j + 1]) [CD]
Line_15 $$ if (sortIDs[j] > sortIDs[j + 1]) --> Line_16 $$ int temp = sortIDs[j] [CD]
Line_15 $$ if (sortIDs[j] > sortIDs[j + 1]) --> Line_17 $$ sortIDs[j] = sortIDs[j + 1] [CD]
Line_15 $$ if (sortIDs[j] > sortIDs[j + 1]) --> Line_18 $$ sortIDs[j + 1] = temp [CD]
Line_16 $$ int temp = sortIDs[j] --> Line_18 $$ sortIDs[j + 1] = temp [FD]
Line_5 $$ if (sort) --> Line_22 $$ for (int i = 0; i < sortIDs.length; i++) [CD]
Line_13 $$ for (int i = 0; i < sortIDs.length; i++) --> Line_22 $$ for (int i = 0; i < sortIDs.length; i++) [FD]
Line_22 $$ for (int i = 0; i < sortIDs.length; i++) --> Line_23 $$ element.addElement(new DataElement(DataElement.U_INT_2, sortIDs[i])) [CD]
Line_3 $$ DataElement element = new DataElement(DataElement.DATSEQ) --> Line_23 $$ element.addElement(new DataElement(DataElement.U_INT_2, sortIDs[i])) [FD]
Line_22 $$ for (int i = 0; i < sortIDs.length; i++) --> Line_24 $$ element.addElement(getAttributeValue(sortIDs[i])) [CD]
Line_3 $$ DataElement element = new DataElement(DataElement.DATSEQ) --> Line_24 $$ element.addElement(getAttributeValue(sortIDs[i])) [FD]
Line_5 $$ if (sort) --> Line_27 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) [CD]
Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_27 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) [FD]
Line_27 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_28 $$ Integer key = (Integer) e.nextElement() [CD]
Line_27 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_28 $$ Integer key = (Integer) e.nextElement() [FD]
Line_8 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_28 $$ Integer key = (Integer) e.nextElement() [FD]
Line_27 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_29 $$ element.addElement(new DataElement(DataElement.U_INT_2, key.intValue())) [CD]
Line_3 $$ DataElement element = new DataElement(DataElement.DATSEQ) --> Line_29 $$ element.addElement(new DataElement(DataElement.U_INT_2, key.intValue())) [FD]
Line_28 $$ Integer key = (Integer) e.nextElement() --> Line_29 $$ element.addElement(new DataElement(DataElement.U_INT_2, key.intValue())) [FD]
Line_9 $$ Integer key = (Integer) e.nextElement() --> Line_29 $$ element.addElement(new DataElement(DataElement.U_INT_2, key.intValue())) [FD]
Line_27 $$ for (Enumeration e = attributes.keys(); e.hasMoreElements(); ) --> Line_30 $$ element.addElement((DataElement) attributes.get(key)) [CD]
Line_3 $$ DataElement element = new DataElement(DataElement.DATSEQ) --> Line_30 $$ element.addElement((DataElement) attributes.get(key)) [FD]
Line_28 $$ Integer key = (Integer) e.nextElement() --> Line_30 $$ element.addElement((DataElement) attributes.get(key)) [FD]
Line_9 $$ Integer key = (Integer) e.nextElement() --> Line_30 $$ element.addElement((DataElement) attributes.get(key)) [FD]
Line_2 $$ byte[] toByteArray() throws IOException --> Line_33 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() [CD]
Line_2 $$ byte[] toByteArray() throws IOException --> Line_34 $$ (new SDPOutputStream(out)).writeElement(element) [CD]
Line_3 $$ DataElement element = new DataElement(DataElement.DATSEQ) --> Line_34 $$ (new SDPOutputStream(out)).writeElement(element) [FD]
Line_2 $$ byte[] toByteArray() throws IOException --> Line_35 $$ return out.toByteArray() [CD]
Line_33 $$ ByteArrayOutputStream out = new ByteArrayOutputStream() --> Line_35 $$ return out.toByteArray() [FD]
