Line_2 $$ private void work(int timeout) throws Exception --> Line_3 $$ Thread.currentThread().setName("Update - " + mod.getName()) [CD]
Line_2 $$ private void work(int timeout) throws Exception --> Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) [CD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_5 $$ URL url = new URL(mod.getUpdateCheckUrl().trim()) [CD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_6 $$ URLConnection connection = url.openConnection() [CD]
Line_5 $$ URL url = new URL(mod.getUpdateCheckUrl().trim()) --> Line_6 $$ URLConnection connection = url.openConnection() [FD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_7 $$ connection.setConnectTimeout(timeout) [CD]
Line_6 $$ URLConnection connection = url.openConnection() --> Line_7 $$ connection.setConnectTimeout(timeout) [FD]
Line_2 $$ private void work(int timeout) throws Exception --> Line_7 $$ connection.setConnectTimeout(timeout) [FD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_8 $$ connection.setReadTimeout(timeout) [CD]
Line_6 $$ URLConnection connection = url.openConnection() --> Line_8 $$ connection.setReadTimeout(timeout) [FD]
Line_2 $$ private void work(int timeout) throws Exception --> Line_8 $$ connection.setReadTimeout(timeout) [FD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) [CD]
Line_6 $$ URLConnection connection = url.openConnection() --> Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_10 $$ String str = in.readLine() [CD]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_10 $$ String str = in.readLine() [FD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_11 $$ in.close() [CD]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_11 $$ in.close() [FD]
Line_4 $$ if (mod.getUpdateCheckUrl() != null && mod.getUpdateDownloadUrl() != null) --> Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) [CD]
Line_10 $$ String str = in.readLine() --> Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) [FD]
Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) --> Line_13 $$ InputStream is = new URL(mod.getUpdateDownloadUrl().trim()).openStream() [CD]
Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) --> Line_15 $$ FileOutputStream fos = new FileOutputStream(file, false) [CD]
Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) --> Line_16 $$ FileUtils.copyInputStream(is, fos) [CD]
Line_13 $$ InputStream is = new URL(mod.getUpdateDownloadUrl().trim()).openStream() --> Line_16 $$ FileUtils.copyInputStream(is, fos) [FD]
Line_15 $$ FileOutputStream fos = new FileOutputStream(file, false) --> Line_16 $$ FileUtils.copyInputStream(is, fos) [FD]
Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) --> Line_17 $$ is.close() [CD]
Line_13 $$ InputStream is = new URL(mod.getUpdateDownloadUrl().trim()).openStream() --> Line_17 $$ is.close() [FD]
Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) --> Line_18 $$ fos.flush() [CD]
Line_15 $$ FileOutputStream fos = new FileOutputStream(file, false) --> Line_18 $$ fos.flush() [FD]
Line_12 $$ if (str != null && !str.toLowerCase().trim().contains("error") && !str.toLowerCase().trim().contains("Error") && !Manager.getInstance().compareModsVersions(str, "*-" + mod.getVersion())) --> Line_19 $$ fos.close() [CD]
Line_15 $$ FileOutputStream fos = new FileOutputStream(file, false) --> Line_19 $$ fos.close() [FD]
