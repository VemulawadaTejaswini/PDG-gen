Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_3 $$ File directory = new File(tmpDir, object.getId()) [CD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_3 $$ File directory = new File(tmpDir, object.getId()) [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_4 $$ File target = new File(directory, pid) [CD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_5 $$ if (!target.exists()) [CD]
Line_4 $$ File target = new File(directory, pid) --> Line_5 $$ if (!target.exists()) [FD]
Line_5 $$ if (!target.exists()) --> Line_6 $$ target.getParentFile().mkdirs() [CD]
Line_4 $$ File target = new File(directory, pid) --> Line_6 $$ target.getParentFile().mkdirs() [FD]
Line_5 $$ if (!target.exists()) --> Line_7 $$ target.createNewFile() [CD]
Line_4 $$ File target = new File(directory, pid) --> Line_7 $$ target.createNewFile() [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_9 $$ Payload payload = object.getPayload(pid) [CD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_9 $$ Payload payload = object.getPayload(pid) [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_10 $$ InputStream in = payload.open() [CD]
Line_9 $$ Payload payload = object.getPayload(pid) --> Line_10 $$ InputStream in = payload.open() [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_11 $$ FileOutputStream out = null [CD]
Line_11 $$ FileOutputStream out = null --> Line_13 $$ out = new FileOutputStream(target) [FD]
Line_10 $$ InputStream in = payload.open() --> Line_14 $$ IOUtils.copyLarge(in, out) [FD]
Line_11 $$ FileOutputStream out = null --> Line_14 $$ IOUtils.copyLarge(in, out) [FD]
Line_13 $$ out = new FileOutputStream(target) --> Line_14 $$ IOUtils.copyLarge(in, out) [FD]
Line_11 $$ FileOutputStream out = null --> Line_16 $$ close(out) [FD]
Line_13 $$ out = new FileOutputStream(target) --> Line_16 $$ close(out) [FD]
Line_4 $$ File target = new File(directory, pid) --> Line_17 $$ target.delete() [FD]
Line_9 $$ Payload payload = object.getPayload(pid) --> Line_18 $$ payload.close() [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_21 $$ close(out) [CD]
Line_11 $$ FileOutputStream out = null --> Line_21 $$ close(out) [FD]
Line_13 $$ out = new FileOutputStream(target) --> Line_21 $$ close(out) [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_22 $$ payload.close() [CD]
Line_9 $$ Payload payload = object.getPayload(pid) --> Line_22 $$ payload.close() [FD]
Line_2 $$ private File getTempFile(DigitalObject object, String pid) throws Exception --> Line_23 $$ return target [CD]
