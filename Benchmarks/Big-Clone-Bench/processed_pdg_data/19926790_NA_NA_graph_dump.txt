Line_2 $$ public void generateReport(AllTestsResult atr, AllConvsResult acr, File nwbConvGraph) --> Line_3 $$ ConvResult[] convs = acr.getConvResults() [CD]
Line_2 $$ public void generateReport(AllTestsResult atr, AllConvsResult acr, File nwbConvGraph) --> Line_3 $$ ConvResult[] convs = acr.getConvResults() [FD]
Line_2 $$ public void generateReport(AllTestsResult atr, AllConvsResult acr, File nwbConvGraph) --> Line_4 $$ BufferedReader reader = null [CD]
Line_2 $$ public void generateReport(AllTestsResult atr, AllConvsResult acr, File nwbConvGraph) --> Line_5 $$ BufferedWriter writer = null [CD]
Line_4 $$ BufferedReader reader = null --> Line_7 $$ reader = new BufferedReader(new FileReader(nwbConvGraph)) [FD]
Line_5 $$ BufferedWriter writer = null --> Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) [FD]
Line_9 $$ String line = null --> Line_10 $$ while ((line = reader.readLine()) != null) [FD]
Line_4 $$ BufferedReader reader = null --> Line_10 $$ while ((line = reader.readLine()) != null) [FD]
Line_7 $$ reader = new BufferedReader(new FileReader(nwbConvGraph)) --> Line_10 $$ while ((line = reader.readLine()) != null) [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_11 $$ line = line.trim() [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_11 $$ line = line.trim() [FD]
Line_9 $$ String line = null --> Line_11 $$ line = line.trim() [FD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_12 $$ if (line.startsWith("id*int")) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_12 $$ if (line.startsWith("id*int")) [FD]
Line_11 $$ line = line.trim() --> Line_12 $$ if (line.startsWith("id*int")) [FD]
Line_9 $$ String line = null --> Line_12 $$ if (line.startsWith("id*int")) [FD]
Line_12 $$ if (line.startsWith("id*int")) --> Line_13 $$ writer.write(line + " isTrusted*int chanceCorrect*float isConverter*int \r\n") [CD]
Line_5 $$ BufferedWriter writer = null --> Line_13 $$ writer.write(line + " isTrusted*int chanceCorrect*float isConverter*int \r\n") [FD]
Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) --> Line_13 $$ writer.write(line + " isTrusted*int chanceCorrect*float isConverter*int \r\n") [FD]
Line_12 $$ if (line.startsWith("id*int")) --> Line_14 $$ if (line.matches(NODE_LINE)) [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_14 $$ if (line.matches(NODE_LINE)) [FD]
Line_11 $$ line = line.trim() --> Line_14 $$ if (line.matches(NODE_LINE)) [FD]
Line_9 $$ String line = null --> Line_14 $$ if (line.matches(NODE_LINE)) [FD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_15 $$ String[] parts = line.split(" ") [CD]
Line_10 $$ while ((line = reader.readLine()) != null) --> Line_15 $$ String[] parts = line.split(" ") [FD]
Line_11 $$ line = line.trim() --> Line_15 $$ String[] parts = line.split(" ") [FD]
Line_9 $$ String line = null --> Line_15 $$ String[] parts = line.split(" ") [FD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_16 $$ String rawConvName = parts[1] [CD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_17 $$ String convName = rawConvName.replaceAll("\"", "") [CD]
Line_16 $$ String rawConvName = parts[1] --> Line_17 $$ String convName = rawConvName.replaceAll("\"", "") [FD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_18 $$ boolean wroteAttributes = false [CD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_19 $$ for (int ii = 0; ii < convs.length; ii++) [CD]
Line_19 $$ for (int ii = 0; ii < convs.length; ii++) --> Line_20 $$ ConvResult cr = convs[ii] [CD]
Line_19 $$ for (int ii = 0; ii < convs.length; ii++) --> Line_21 $$ if (cr.getShortName().equals(convName)) [CD]
Line_17 $$ String convName = rawConvName.replaceAll("\"", "") --> Line_21 $$ if (cr.getShortName().equals(convName)) [FD]
Line_20 $$ ConvResult cr = convs[ii] --> Line_21 $$ if (cr.getShortName().equals(convName)) [FD]
Line_21 $$ if (cr.getShortName().equals(convName)) --> Line_22 $$ int trusted [CD]
Line_21 $$ if (cr.getShortName().equals(convName)) --> Line_23 $$ if (cr.isTrusted()) [CD]
Line_20 $$ ConvResult cr = convs[ii] --> Line_23 $$ if (cr.isTrusted()) [FD]
Line_23 $$ if (cr.isTrusted()) --> Line_24 $$ trusted = 1 [CD]
Line_22 $$ int trusted --> Line_24 $$ trusted = 1 [FD]
Line_23 $$ if (cr.isTrusted()) --> Line_26 $$ trusted = 0 [CD]
Line_22 $$ int trusted --> Line_26 $$ trusted = 0 [FD]
Line_24 $$ trusted = 1 --> Line_26 $$ trusted = 0 [FD]
Line_21 $$ if (cr.getShortName().equals(convName)) --> Line_28 $$ writer.write(line + " " + trusted + " " + FormatUtil.formatToPercent(cr.getChanceCorrect()) + " 1 " + "\r\n") [CD]
Line_5 $$ BufferedWriter writer = null --> Line_28 $$ writer.write(line + " " + trusted + " " + FormatUtil.formatToPercent(cr.getChanceCorrect()) + " 1 " + "\r\n") [FD]
Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) --> Line_28 $$ writer.write(line + " " + trusted + " " + FormatUtil.formatToPercent(cr.getChanceCorrect()) + " 1 " + "\r\n") [FD]
Line_20 $$ ConvResult cr = convs[ii] --> Line_28 $$ writer.write(line + " " + trusted + " " + FormatUtil.formatToPercent(cr.getChanceCorrect()) + " 1 " + "\r\n") [FD]
Line_21 $$ if (cr.getShortName().equals(convName)) --> Line_29 $$ wroteAttributes = true [CD]
Line_18 $$ boolean wroteAttributes = false --> Line_29 $$ wroteAttributes = true [FD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_33 $$ if (!wroteAttributes) [CD]
Line_29 $$ wroteAttributes = true --> Line_33 $$ if (!wroteAttributes) [FD]
Line_18 $$ boolean wroteAttributes = false --> Line_33 $$ if (!wroteAttributes) [FD]
Line_33 $$ if (!wroteAttributes) --> Line_34 $$ writer.write(line + " 1 100.0 0" + "\r\n") [CD]
Line_5 $$ BufferedWriter writer = null --> Line_34 $$ writer.write(line + " 1 100.0 0" + "\r\n") [FD]
Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) --> Line_34 $$ writer.write(line + " 1 100.0 0" + "\r\n") [FD]
Line_14 $$ if (line.matches(NODE_LINE)) --> Line_37 $$ writer.write(line + "\r\n") [CD]
Line_5 $$ BufferedWriter writer = null --> Line_37 $$ writer.write(line + "\r\n") [FD]
Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) --> Line_37 $$ writer.write(line + "\r\n") [FD]
Line_4 $$ BufferedReader reader = null --> Line_43 $$ if (reader != null) [FD]
Line_7 $$ reader = new BufferedReader(new FileReader(nwbConvGraph)) --> Line_43 $$ if (reader != null) [FD]
Line_4 $$ BufferedReader reader = null --> Line_49 $$ if (reader != null) [FD]
Line_7 $$ reader = new BufferedReader(new FileReader(nwbConvGraph)) --> Line_49 $$ if (reader != null) [FD]
Line_49 $$ if (reader != null) --> Line_50 $$ reader.close() [CD]
Line_4 $$ BufferedReader reader = null --> Line_50 $$ reader.close() [FD]
Line_7 $$ reader = new BufferedReader(new FileReader(nwbConvGraph)) --> Line_50 $$ reader.close() [FD]
Line_5 $$ BufferedWriter writer = null --> Line_52 $$ if (writer != null) [FD]
Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) --> Line_52 $$ if (writer != null) [FD]
Line_52 $$ if (writer != null) --> Line_53 $$ writer.close() [CD]
Line_5 $$ BufferedWriter writer = null --> Line_53 $$ writer.close() [FD]
Line_8 $$ writer = new BufferedWriter(new FileWriter(this.annotatedNWBGraph)) --> Line_53 $$ writer.close() [FD]
