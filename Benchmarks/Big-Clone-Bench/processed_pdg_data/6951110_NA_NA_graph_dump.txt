Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_3 $$ URLConnection u = new URL(url, "action").openConnection() [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_4 $$ OutputStream os [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_5 $$ InputStream is [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_6 $$ ValidEPoint[] v = new ValidEPoint[2] [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_7 $$ u.setDoOutput(true) [CD]
Line_3 $$ URLConnection u = new URL(url, "action").openConnection() --> Line_7 $$ u.setDoOutput(true) [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_8 $$ u.setDoInput(true) [CD]
Line_3 $$ URLConnection u = new URL(url, "action").openConnection() --> Line_8 $$ u.setDoInput(true) [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_9 $$ u.setAllowUserInteraction(false) [CD]
Line_3 $$ URLConnection u = new URL(url, "action").openConnection() --> Line_9 $$ u.setAllowUserInteraction(false) [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_10 $$ os = u.getOutputStream() [CD]
Line_4 $$ OutputStream os --> Line_10 $$ os = u.getOutputStream() [FD]
Line_3 $$ URLConnection u = new URL(url, "action").openConnection() --> Line_10 $$ os = u.getOutputStream() [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_11 $$ os.write(("B=" + URLEncoder.encode(o.toString(), "UTF-8") + "&D=" + Base16.encode(e1.getMD()) + "&F=" + Long.toString(v1) + "&C=" + Base16.encode(e2.getMD())).getBytes()) [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_11 $$ os.write(("B=" + URLEncoder.encode(o.toString(), "UTF-8") + "&D=" + Base16.encode(e1.getMD()) + "&F=" + Long.toString(v1) + "&C=" + Base16.encode(e2.getMD())).getBytes()) [FD]
Line_4 $$ OutputStream os --> Line_11 $$ os.write(("B=" + URLEncoder.encode(o.toString(), "UTF-8") + "&D=" + Base16.encode(e1.getMD()) + "&F=" + Long.toString(v1) + "&C=" + Base16.encode(e2.getMD())).getBytes()) [FD]
Line_10 $$ os = u.getOutputStream() --> Line_11 $$ os.write(("B=" + URLEncoder.encode(o.toString(), "UTF-8") + "&D=" + Base16.encode(e1.getMD()) + "&F=" + Long.toString(v1) + "&C=" + Base16.encode(e2.getMD())).getBytes()) [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_12 $$ os.close() [CD]
Line_4 $$ OutputStream os --> Line_12 $$ os.close() [FD]
Line_10 $$ os = u.getOutputStream() --> Line_12 $$ os.close() [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_13 $$ is = u.getInputStream() [CD]
Line_5 $$ InputStream is --> Line_13 $$ is = u.getInputStream() [FD]
Line_3 $$ URLConnection u = new URL(url, "action").openConnection() --> Line_13 $$ is = u.getInputStream() [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_14 $$ v[1] = new ValidEPoint(this, e2, is) [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_15 $$ is.close() [CD]
Line_5 $$ InputStream is --> Line_15 $$ is.close() [FD]
Line_13 $$ is = u.getInputStream() --> Line_15 $$ is.close() [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_16 $$ v[0] = validate(e1) [CD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_16 $$ v[0] = validate(e1) [FD]
Line_2 $$ public ValidEPoint[] split(EPoint o, EPoint e1, long v1, EPoint e2) throws MalformedURLException, IOException, NoSuchAlgorithmException, InvalidEPointCertificateException, InvalidKeyException, SignatureException --> Line_17 $$ return v [CD]
