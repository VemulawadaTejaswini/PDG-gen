Line_2 $$ private boolean downloadFile() --> Line_3 $$ FTPClient ftp = new FTPClient() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_6 $$ ftp.connect(this.server) [FD]
Line_5 $$ int reply --> Line_8 $$ reply = ftp.getReplyCode() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_8 $$ reply = ftp.getReplyCode() [FD]
Line_5 $$ int reply --> Line_9 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_8 $$ reply = ftp.getReplyCode() --> Line_9 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_9 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_10 $$ ftp.disconnect() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_10 $$ ftp.disconnect() [FD]
Line_9 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_11 $$ ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, "FTP server refused connection.") [CD]
Line_9 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_12 $$ return false [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_15 $$ if (ftp.isConnected()) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_17 $$ ftp.disconnect() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_27 $$ if (!ftp.login(this.user, this.password)) [FD]
Line_27 $$ if (!ftp.login(this.user, this.password)) --> Line_28 $$ ftp.logout() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_28 $$ ftp.logout() [FD]
Line_27 $$ if (!ftp.login(this.user, this.password)) --> Line_29 $$ ResourcePool.LogMessage(this, ResourcePool.ERROR_MESSAGE, "FTP login failed.") [CD]
Line_27 $$ if (!ftp.login(this.user, this.password)) --> Line_30 $$ return false [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_32 $$ ResourcePool.LogMessage(this, ResourcePool.INFO_MESSAGE, "Remote system is " + ftp.getSystemName()) [FD]
Line_33 $$ if ((this.transferType != null) && (this.transferType.compareTo(FTPWorkerThread.ASCII) == 0)) --> Line_34 $$ ftp.setFileType(FTP.ASCII_FILE_TYPE) [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_34 $$ ftp.setFileType(FTP.ASCII_FILE_TYPE) [FD]
Line_33 $$ if ((this.transferType != null) && (this.transferType.compareTo(FTPWorkerThread.ASCII) == 0)) --> Line_36 $$ ftp.setFileType(FTP.BINARY_FILE_TYPE) [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_36 $$ ftp.setFileType(FTP.BINARY_FILE_TYPE) [FD]
Line_38 $$ if ((this.passiveMode != null) && this.passiveMode.equalsIgnoreCase(FTPWorkerThread.FALSE)) --> Line_39 $$ ftp.enterLocalActiveMode() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_39 $$ ftp.enterLocalActiveMode() [FD]
Line_38 $$ if ((this.passiveMode != null) && this.passiveMode.equalsIgnoreCase(FTPWorkerThread.FALSE)) --> Line_41 $$ ftp.enterLocalPassiveMode() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_41 $$ ftp.enterLocalPassiveMode() [FD]
Line_2 $$ private boolean downloadFile() --> Line_51 $$ OutputStream output [CD]
Line_51 $$ OutputStream output --> Line_54 $$ output = new FileOutputStream(this.destFileName) [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_55 $$ ftp.retrieveFile(this.fileName, output) [FD]
Line_51 $$ OutputStream output --> Line_55 $$ ftp.retrieveFile(this.fileName, output) [FD]
Line_54 $$ output = new FileOutputStream(this.destFileName) --> Line_55 $$ ftp.retrieveFile(this.fileName, output) [FD]
Line_56 $$ File f = new File(this.destFileName) --> Line_57 $$ if (f.exists() && (this.lastModifiedDate != null)) [FD]
Line_57 $$ if (f.exists() && (this.lastModifiedDate != null)) --> Line_58 $$ f.setLastModified(this.lastModifiedDate.longValue()) [CD]
Line_56 $$ File f = new File(this.destFileName) --> Line_58 $$ f.setLastModified(this.lastModifiedDate.longValue()) [FD]
Line_60 $$ java.util.Date endDate = new java.util.Date() --> Line_61 $$ this.downloadTime = endDate.getTime() - startDate.getTime() [FD]
Line_53 $$ java.util.Date startDate = new java.util.Date() --> Line_61 $$ this.downloadTime = endDate.getTime() - startDate.getTime() [FD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_65 $$ if (ftp.isConnected()) [FD]
Line_65 $$ if (ftp.isConnected()) --> Line_66 $$ ftp.disconnect() [CD]
Line_3 $$ FTPClient ftp = new FTPClient() --> Line_66 $$ ftp.disconnect() [FD]
Line_2 $$ private boolean downloadFile() --> Line_76 $$ return true [CD]
