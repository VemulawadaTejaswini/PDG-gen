Line_2 $$ private void auth() throws IOException --> Line_5 $$ DatagramSocket ds = new DatagramSocket() [CD]
Line_2 $$ private void auth() throws IOException --> Line_6 $$ ds.setSoTimeout(UDPHID_DEFAULT_TIMEOUT) [CD]
Line_5 $$ DatagramSocket ds = new DatagramSocket() --> Line_6 $$ ds.setSoTimeout(UDPHID_DEFAULT_TIMEOUT) [FD]
Line_2 $$ private void auth() throws IOException --> Line_7 $$ ds.connect(addr, port) [CD]
Line_5 $$ DatagramSocket ds = new DatagramSocket() --> Line_7 $$ ds.connect(addr, port) [FD]
Line_2 $$ private void auth() throws IOException --> Line_8 $$ DatagramPacket p = new DatagramPacket(buffer.array(), buffer.capacity()) [CD]
Line_2 $$ private void auth() throws IOException --> Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_10 $$ buffer.clear() [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_11 $$ buffer.put((byte) REQ_CHALLENGE) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_12 $$ buffer.put(htons((short) UDPHID_PROTO)) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_13 $$ buffer.put(name.getBytes()) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_14 $$ ds.send(new DatagramPacket(buffer.array(), buffer.position())) [CD]
Line_5 $$ DatagramSocket ds = new DatagramSocket() --> Line_14 $$ ds.send(new DatagramPacket(buffer.array(), buffer.position())) [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_15 $$ buffer.clear() [CD]
Line_5 $$ DatagramSocket ds = new DatagramSocket() --> Line_17 $$ ds.receive(p) [FD]
Line_8 $$ DatagramPacket p = new DatagramPacket(buffer.array(), buffer.capacity()) --> Line_17 $$ ds.receive(p) [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_29 $$ byte challenge_id = buffer.get() [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_30 $$ int challenge_len = (int) buffer.get() [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_31 $$ byte[] challenge = new byte[challenge_len] [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_32 $$ buffer.get(challenge, 0, p.getLength() - buffer.position()) [CD]
Line_31 $$ byte[] challenge = new byte[challenge_len] --> Line_32 $$ buffer.get(challenge, 0, p.getLength() - buffer.position()) [FD]
Line_8 $$ DatagramPacket p = new DatagramPacket(buffer.array(), buffer.capacity()) --> Line_32 $$ buffer.get(challenge, 0, p.getLength() - buffer.position()) [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_33 $$ byte[] response [CD]
Line_35 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_36 $$ md.update(challenge_id) [FD]
Line_29 $$ byte challenge_id = buffer.get() --> Line_36 $$ md.update(challenge_id) [FD]
Line_35 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_37 $$ md.update(password.getBytes(), 0, password.length()) [FD]
Line_35 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_38 $$ md.update(challenge, 0, challenge.length) [FD]
Line_31 $$ byte[] challenge = new byte[challenge_len] --> Line_38 $$ md.update(challenge, 0, challenge.length) [FD]
Line_33 $$ byte[] response --> Line_39 $$ response = md.digest() [FD]
Line_35 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_39 $$ response = md.digest() [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_43 $$ buffer.clear() [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_44 $$ buffer.put((byte) REQ_RESPONSE) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_45 $$ buffer.put(challenge_id) [CD]
Line_29 $$ byte challenge_id = buffer.get() --> Line_45 $$ buffer.put(challenge_id) [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_46 $$ buffer.put((byte) response.length) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_47 $$ buffer.put(response) [CD]
Line_33 $$ byte[] response --> Line_47 $$ buffer.put(response) [FD]
Line_39 $$ response = md.digest() --> Line_47 $$ buffer.put(response) [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_48 $$ buffer.put(login.getBytes()) [CD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_49 $$ ds.send(new DatagramPacket(buffer.array(), buffer.position())) [CD]
Line_5 $$ DatagramSocket ds = new DatagramSocket() --> Line_49 $$ ds.send(new DatagramPacket(buffer.array(), buffer.position())) [FD]
Line_9 $$ for (int i = 0; i < UDPHID_DEFAULT_ATTEMPTS; i++) --> Line_50 $$ buffer.clear() [CD]
Line_5 $$ DatagramSocket ds = new DatagramSocket() --> Line_52 $$ ds.receive(p) [FD]
Line_8 $$ DatagramPacket p = new DatagramPacket(buffer.array(), buffer.capacity()) --> Line_52 $$ ds.receive(p) [FD]
Line_58 $$ int sidLength = buffer.get() --> Line_60 $$ buffer.get(sid, 0, sidLength) [FD]
