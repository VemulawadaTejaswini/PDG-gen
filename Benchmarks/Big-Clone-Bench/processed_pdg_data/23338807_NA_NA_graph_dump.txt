Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_3 $$ String jarFileName = "" [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_4 $$ String entry = "text.txt" [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_5 $$ String cts = System.getProperty("java.io.tmpdir") [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_6 $$ File tmpDir = new File(cts) [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_7 $$ File jarFile = tmpDir.createTempFile("file", ".jar", tmpDir) [CD]
Line_6 $$ File tmpDir = new File(cts) --> Line_7 $$ File jarFile = tmpDir.createTempFile("file", ".jar", tmpDir) [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_8 $$ jarFileName = jarFile.getPath() [CD]
Line_3 $$ String jarFileName = "" --> Line_8 $$ jarFileName = jarFile.getPath() [FD]
Line_7 $$ File jarFile = tmpDir.createTempFile("file", ".jar", tmpDir) --> Line_8 $$ jarFileName = jarFile.getPath() [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_9 $$ FileOutputStream jarFileOutputStream = new FileOutputStream(jarFileName) [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_10 $$ JarOutputStream out = new JarOutputStream(new BufferedOutputStream(jarFileOutputStream)) [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_11 $$ JarEntry jarEntry = new JarEntry(entry) [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_12 $$ out.putNextEntry(jarEntry) [CD]
Line_10 $$ JarOutputStream out = new JarOutputStream(new BufferedOutputStream(jarFileOutputStream)) --> Line_12 $$ out.putNextEntry(jarEntry) [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_13 $$ out.write(new byte[] [CD]
Line_10 $$ JarOutputStream out = new JarOutputStream(new BufferedOutputStream(jarFileOutputStream)) --> Line_13 $$ out.write(new byte[] [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_14 $$ out.close() [CD]
Line_10 $$ JarOutputStream out = new JarOutputStream(new BufferedOutputStream(jarFileOutputStream)) --> Line_14 $$ out.close() [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_15 $$ URL url = new URL("jar:file:" + jarFileName + "!/" + entry) [CD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_16 $$ URLConnection conn = url.openConnection() [CD]
Line_15 $$ URL url = new URL("jar:file:" + jarFileName + "!/" + entry) --> Line_16 $$ URLConnection conn = url.openConnection() [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_17 $$ conn.setUseCaches(false) [CD]
Line_16 $$ URLConnection conn = url.openConnection() --> Line_17 $$ conn.setUseCaches(false) [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_18 $$ InputStream is = conn.getInputStream() [CD]
Line_16 $$ URLConnection conn = url.openConnection() --> Line_18 $$ InputStream is = conn.getInputStream() [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_19 $$ is.close() [CD]
Line_18 $$ InputStream is = conn.getInputStream() --> Line_19 $$ is.close() [FD]
Line_2 $$ public void test_getInputStream_DeleteJarFileUsingURLConnection() throws Exception --> Line_20 $$ assertTrue(jarFile.delete()) [CD]
Line_7 $$ File jarFile = tmpDir.createTempFile("file", ".jar", tmpDir) --> Line_20 $$ assertTrue(jarFile.delete()) [FD]
