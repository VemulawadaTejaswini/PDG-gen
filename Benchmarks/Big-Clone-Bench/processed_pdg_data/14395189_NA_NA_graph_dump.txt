Line_2 $$ public void test2() throws Exception --> Line_3 $$ SpreadsheetDocument document = new SpreadsheetDocument() [CD]
Line_2 $$ public void test2() throws Exception --> Line_4 $$ Sheet sheet = new Sheet("Planilha 1") [CD]
Line_2 $$ public void test2() throws Exception --> Line_5 $$ sheet.setLandscape(true) [CD]
Line_4 $$ Sheet sheet = new Sheet("Planilha 1") --> Line_5 $$ sheet.setLandscape(true) [FD]
Line_2 $$ public void test2() throws Exception --> Line_6 $$ Row row = new Row() [CD]
Line_2 $$ public void test2() throws Exception --> Line_7 $$ row.setHeight(20) [CD]
Line_6 $$ Row row = new Row() --> Line_7 $$ row.setHeight(20) [FD]
Line_2 $$ public void test2() throws Exception --> Line_8 $$ sheet.getMerges().add(new IntegerCellMerge(0, 0, 0, 5)) [CD]
Line_4 $$ Sheet sheet = new Sheet("Planilha 1") --> Line_8 $$ sheet.getMerges().add(new IntegerCellMerge(0, 0, 0, 5)) [FD]
Line_2 $$ public void test2() throws Exception --> Line_9 $$ sheet.getImages().add(new Image(new FileInputStream("D:/image001.jpg"), 0, 0, ImageType.JPEG, 80, 60)) [CD]
Line_4 $$ Sheet sheet = new Sheet("Planilha 1") --> Line_9 $$ sheet.getImages().add(new Image(new FileInputStream("D:/image001.jpg"), 0, 0, ImageType.JPEG, 80, 60)) [FD]
Line_2 $$ public void test2() throws Exception --> Line_10 $$ for (int i = 0; i < 10; i++) [CD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_11 $$ Cell cell = new Cell() [CD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_12 $$ cell.setValue("Celula " + i) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_12 $$ cell.setValue("Celula " + i) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_13 $$ cell.setBackgroundColor(new Color(192, 192, 192)) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_13 $$ cell.setBackgroundColor(new Color(192, 192, 192)) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_14 $$ cell.setUnderline(true) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_14 $$ cell.setUnderline(true) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_15 $$ cell.setBold(true) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_15 $$ cell.setBold(true) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_16 $$ cell.setItalic(true) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_16 $$ cell.setItalic(true) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_17 $$ cell.setFont("Times New Roman") [CD]
Line_11 $$ Cell cell = new Cell() --> Line_17 $$ cell.setFont("Times New Roman") [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_18 $$ cell.setFontSize(10) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_18 $$ cell.setFontSize(10) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_19 $$ cell.setFontColor(new Color(255, 0, 0)) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_19 $$ cell.setFontColor(new Color(255, 0, 0)) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_20 $$ Border border = new Border() [CD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_21 $$ border.setWidth(1) [CD]
Line_20 $$ Border border = new Border() --> Line_21 $$ border.setWidth(1) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_22 $$ border.setColor(new Color(0, 0, 0)) [CD]
Line_20 $$ Border border = new Border() --> Line_22 $$ border.setColor(new Color(0, 0, 0)) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_23 $$ cell.setLeftBorder(border) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_23 $$ cell.setLeftBorder(border) [FD]
Line_20 $$ Border border = new Border() --> Line_23 $$ cell.setLeftBorder(border) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_24 $$ cell.setTopBorder(border) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_24 $$ cell.setTopBorder(border) [FD]
Line_20 $$ Border border = new Border() --> Line_24 $$ cell.setTopBorder(border) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_25 $$ cell.setRightBorder(border) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_25 $$ cell.setRightBorder(border) [FD]
Line_20 $$ Border border = new Border() --> Line_25 $$ cell.setRightBorder(border) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_26 $$ cell.setBottomBorder(border) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_26 $$ cell.setBottomBorder(border) [FD]
Line_20 $$ Border border = new Border() --> Line_26 $$ cell.setBottomBorder(border) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_27 $$ row.getCells().add(cell) [CD]
Line_11 $$ Cell cell = new Cell() --> Line_27 $$ row.getCells().add(cell) [FD]
Line_6 $$ Row row = new Row() --> Line_27 $$ row.getCells().add(cell) [FD]
Line_10 $$ for (int i = 0; i < 10; i++) --> Line_28 $$ sheet.getColumnsWith().put(new Integer(i), new Integer(25)) [CD]
Line_4 $$ Sheet sheet = new Sheet("Planilha 1") --> Line_28 $$ sheet.getColumnsWith().put(new Integer(i), new Integer(25)) [FD]
Line_2 $$ public void test2() throws Exception --> Line_30 $$ sheet.getRows().add(row) [CD]
Line_6 $$ Row row = new Row() --> Line_30 $$ sheet.getRows().add(row) [FD]
Line_4 $$ Sheet sheet = new Sheet("Planilha 1") --> Line_30 $$ sheet.getRows().add(row) [FD]
Line_2 $$ public void test2() throws Exception --> Line_31 $$ document.getSheets().add(sheet) [CD]
Line_4 $$ Sheet sheet = new Sheet("Planilha 1") --> Line_31 $$ document.getSheets().add(sheet) [FD]
Line_3 $$ SpreadsheetDocument document = new SpreadsheetDocument() --> Line_31 $$ document.getSheets().add(sheet) [FD]
Line_2 $$ public void test2() throws Exception --> Line_32 $$ FileOutputStream fos = new FileOutputStream("D:/teste2.xls") [CD]
Line_2 $$ public void test2() throws Exception --> Line_33 $$ SpreadsheetDocumentWriter writer = HSSFSpreadsheetDocumentWriter.getInstance() [CD]
Line_2 $$ public void test2() throws Exception --> Line_34 $$ writer.write(document, fos) [CD]
Line_33 $$ SpreadsheetDocumentWriter writer = HSSFSpreadsheetDocumentWriter.getInstance() --> Line_34 $$ writer.write(document, fos) [FD]
Line_3 $$ SpreadsheetDocument document = new SpreadsheetDocument() --> Line_34 $$ writer.write(document, fos) [FD]
Line_32 $$ FileOutputStream fos = new FileOutputStream("D:/teste2.xls") --> Line_34 $$ writer.write(document, fos) [FD]
Line_2 $$ public void test2() throws Exception --> Line_35 $$ fos.close() [CD]
Line_32 $$ FileOutputStream fos = new FileOutputStream("D:/teste2.xls") --> Line_35 $$ fos.close() [FD]
