Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_3 $$ res.setContentType(contentType) [CD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_3 $$ res.setContentType(contentType) [FD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_4 $$ final Object r [CD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) [CD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_5 $$ if (HttpRpcServer.HttpRpcOutput.class.isAssignableFrom(bean.getClass())) [FD]
Line_4 $$ final Object r --> Line_7 $$ r = output.getResult() [FD]
Line_6 $$ HttpRpcServer.HttpRpcOutput output = (HttpRpcServer.HttpRpcOutput) bean --> Line_7 $$ r = output.getResult() [FD]
Line_4 $$ final Object r --> Line_8 $$ r = bean [FD]
Line_7 $$ r = output.getResult() --> Line_8 $$ r = bean [FD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_8 $$ r = bean [FD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_9 $$ if (r != null) [CD]
Line_4 $$ final Object r --> Line_9 $$ if (r != null) [FD]
Line_7 $$ r = output.getResult() --> Line_9 $$ if (r != null) [FD]
Line_8 $$ r = bean --> Line_9 $$ if (r != null) [FD]
Line_9 $$ if (r != null) --> Line_10 $$ final ServletOutputStream outputStream = res.getOutputStream() [CD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_10 $$ final ServletOutputStream outputStream = res.getOutputStream() [FD]
Line_9 $$ if (r != null) --> Line_11 $$ if (File.class.isAssignableFrom(r.getClass())) [CD]
Line_4 $$ final Object r --> Line_11 $$ if (File.class.isAssignableFrom(r.getClass())) [FD]
Line_7 $$ r = output.getResult() --> Line_11 $$ if (File.class.isAssignableFrom(r.getClass())) [FD]
Line_8 $$ r = bean --> Line_11 $$ if (File.class.isAssignableFrom(r.getClass())) [FD]
Line_13 $$ InputStream in = null --> Line_15 $$ in = new FileInputStream(file) [FD]
Line_13 $$ InputStream in = null --> Line_16 $$ IOUtils.copy(in, outputStream) [FD]
Line_15 $$ in = new FileInputStream(file) --> Line_16 $$ IOUtils.copy(in, outputStream) [FD]
Line_10 $$ final ServletOutputStream outputStream = res.getOutputStream() --> Line_16 $$ IOUtils.copy(in, outputStream) [FD]
Line_13 $$ InputStream in = null --> Line_18 $$ if (in != null) [FD]
Line_15 $$ in = new FileInputStream(file) --> Line_18 $$ if (in != null) [FD]
Line_4 $$ final Object r --> Line_20 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [FD]
Line_7 $$ r = output.getResult() --> Line_20 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [FD]
Line_8 $$ r = bean --> Line_20 $$ if (InputStream.class.isAssignableFrom(r.getClass())) [FD]
Line_13 $$ InputStream in = null --> Line_23 $$ in = (InputStream) r [FD]
Line_15 $$ in = new FileInputStream(file) --> Line_23 $$ in = (InputStream) r [FD]
Line_4 $$ final Object r --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_7 $$ r = output.getResult() --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_8 $$ r = bean --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_2 $$ public void write(HttpServletRequest req, HttpServletResponse res, Object bean) throws IntrospectionException, IllegalAccessException, NoSuchMethodException, InvocationTargetException, IOException --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_13 $$ InputStream in = null --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_15 $$ in = new FileInputStream(file) --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_23 $$ in = (InputStream) r --> Line_24 $$ res.addHeader("Content-Length", Integer.toString(in.available())) [FD]
Line_13 $$ InputStream in = null --> Line_25 $$ IOUtils.copy(in, outputStream) [FD]
Line_15 $$ in = new FileInputStream(file) --> Line_25 $$ IOUtils.copy(in, outputStream) [FD]
Line_23 $$ in = (InputStream) r --> Line_25 $$ IOUtils.copy(in, outputStream) [FD]
Line_10 $$ final ServletOutputStream outputStream = res.getOutputStream() --> Line_25 $$ IOUtils.copy(in, outputStream) [FD]
Line_13 $$ InputStream in = null --> Line_27 $$ if (in != null) [FD]
Line_15 $$ in = new FileInputStream(file) --> Line_27 $$ if (in != null) [FD]
Line_23 $$ in = (InputStream) r --> Line_27 $$ if (in != null) [FD]
Line_9 $$ if (r != null) --> Line_30 $$ outputStream.flush() [CD]
Line_10 $$ final ServletOutputStream outputStream = res.getOutputStream() --> Line_30 $$ outputStream.flush() [FD]
