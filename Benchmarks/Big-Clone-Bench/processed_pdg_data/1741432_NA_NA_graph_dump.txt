Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_3 $$ String seldir = directoryHandler.getSelectedDirectory() [CD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_4 $$ if (seldir == null) [CD]
Line_3 $$ String seldir = directoryHandler.getSelectedDirectory() --> Line_4 $$ if (seldir == null) [FD]
Line_4 $$ if (seldir == null) --> Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) [CD]
Line_4 $$ if (seldir == null) --> Line_6 $$ box.setText("Cannot install") [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_6 $$ box.setText("Cannot install") [FD]
Line_4 $$ if (seldir == null) --> Line_7 $$ box.setMessage("A target directory must be selected.") [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_7 $$ box.setMessage("A target directory must be selected.") [FD]
Line_4 $$ if (seldir == null) --> Line_8 $$ box.open() [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_8 $$ box.open() [FD]
Line_4 $$ if (seldir == null) --> Line_9 $$ return false [CD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_11 $$ String sjar = pathText.getText() [CD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_12 $$ File fjar = new File(sjar) [CD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_13 $$ if (!fjar.exists()) [CD]
Line_12 $$ File fjar = new File(sjar) --> Line_13 $$ if (!fjar.exists()) [FD]
Line_13 $$ if (!fjar.exists()) --> Line_15 $$ box.setText("Cannot install") [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_15 $$ box.setText("Cannot install") [FD]
Line_13 $$ if (!fjar.exists()) --> Line_16 $$ box.setMessage("A non-existing jar file has been selected.") [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_16 $$ box.setMessage("A non-existing jar file has been selected.") [FD]
Line_13 $$ if (!fjar.exists()) --> Line_17 $$ box.open() [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_17 $$ box.open() [FD]
Line_13 $$ if (!fjar.exists()) --> Line_18 $$ return false [CD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_20 $$ int count = 0 [CD]
Line_12 $$ File fjar = new File(sjar) --> Line_22 $$ URLClassLoader loader = new URLClassLoader(new URL[] [FD]
Line_23 $$ JarInputStream jis = new JarInputStream(new FileInputStream(fjar)) --> Line_24 $$ JarEntry entry = jis.getNextJarEntry() [FD]
Line_25 $$ while (entry != null) --> Line_26 $$ String name = entry.getName() [CD]
Line_25 $$ while (entry != null) --> Line_27 $$ if (name.endsWith(".class")) [CD]
Line_26 $$ String name = entry.getName() --> Line_27 $$ if (name.endsWith(".class")) [FD]
Line_26 $$ String name = entry.getName() --> Line_28 $$ name = name.substring(0, name.length() - 6) [FD]
Line_26 $$ String name = entry.getName() --> Line_29 $$ name = name.replace('/', '.') [FD]
Line_28 $$ name = name.substring(0, name.length() - 6) --> Line_29 $$ name = name.replace('/', '.') [FD]
Line_22 $$ URLClassLoader loader = new URLClassLoader(new URL[] --> Line_30 $$ Class<?> cls = loader.loadClass(name) [FD]
Line_26 $$ String name = entry.getName() --> Line_30 $$ Class<?> cls = loader.loadClass(name) [FD]
Line_28 $$ name = name.substring(0, name.length() - 6) --> Line_30 $$ Class<?> cls = loader.loadClass(name) [FD]
Line_29 $$ name = name.replace('/', '.') --> Line_30 $$ Class<?> cls = loader.loadClass(name) [FD]
Line_30 $$ Class<?> cls = loader.loadClass(name) --> Line_31 $$ if (IAlgorithm.class.isAssignableFrom(cls) && !cls.isInterface() && (cls.getModifiers() & Modifier.ABSTRACT) == 0) [FD]
Line_30 $$ Class<?> cls = loader.loadClass(name) --> Line_32 $$ if (!testAlgorithm(cls, m)) [FD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_32 $$ if (!testAlgorithm(cls, m)) [FD]
Line_20 $$ int count = 0 --> Line_33 $$ count++ [FD]
Line_25 $$ while (entry != null) --> Line_36 $$ entry = jis.getNextJarEntry() [CD]
Line_23 $$ JarInputStream jis = new JarInputStream(new FileInputStream(fjar)) --> Line_36 $$ entry = jis.getNextJarEntry() [FD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_42 $$ if (count == 0) [CD]
Line_20 $$ int count = 0 --> Line_42 $$ if (count == 0) [FD]
Line_42 $$ if (count == 0) --> Line_44 $$ box.setText("Cannot install") [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_44 $$ box.setText("Cannot install") [FD]
Line_42 $$ if (count == 0) --> Line_45 $$ box.setMessage("There don't seem to be any algorithms in the specified module.") [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_45 $$ box.setMessage("There don't seem to be any algorithms in the specified module.") [FD]
Line_42 $$ if (count == 0) --> Line_46 $$ box.open() [CD]
Line_5 $$ MessageBox box = new MessageBox(shell, SWT.ICON_WARNING | SWT.OK) --> Line_46 $$ box.open() [FD]
Line_42 $$ if (count == 0) --> Line_47 $$ return false [CD]
Line_12 $$ File fjar = new File(sjar) --> Line_51 $$ FileChannel oc = new FileOutputStream(seldir + File.separator + fjar.getName()).getChannel() [FD]
Line_50 $$ FileChannel ic = new FileInputStream(sjar).getChannel() --> Line_52 $$ ic.transferTo(0, ic.size(), oc) [FD]
Line_51 $$ FileChannel oc = new FileOutputStream(seldir + File.separator + fjar.getName()).getChannel() --> Line_52 $$ ic.transferTo(0, ic.size(), oc) [FD]
Line_50 $$ FileChannel ic = new FileInputStream(sjar).getChannel() --> Line_53 $$ ic.close() [FD]
Line_51 $$ FileChannel oc = new FileOutputStream(seldir + File.separator + fjar.getName()).getChannel() --> Line_54 $$ oc.close() [FD]
Line_2 $$ private boolean performModuleInstallation(Model m) --> Line_60 $$ return true [CD]
Line_28 $$ name = name.substring(0, name.length() - 6) --> Line_27 $$ if (name.endsWith(".class")) [FD]
Line_29 $$ name = name.replace('/', '.') --> Line_27 $$ if (name.endsWith(".class")) [FD]
Line_29 $$ name = name.replace('/', '.') --> Line_28 $$ name = name.substring(0, name.length() - 6) [FD]
