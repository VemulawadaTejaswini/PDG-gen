Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_3 $$ if (resourceUri.getHost() == null) [CD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_3 $$ if (resourceUri.getHost() == null) [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_4 $$ throw new IllegalStateException(InternalBundleHelper.StoreMessageBundle.getMessage("store.uri.http.illegal", resourceUri.toString())) [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_7 $$ final URL configUrl = resourceUri.toURL() [FD]
Line_10 $$ if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxySet))) --> Line_11 $$ if (context.getBoolean(FileStoreContextBuilder.ProxySet)) [CD]
Line_11 $$ if (context.getBoolean(FileStoreContextBuilder.ProxySet)) --> Line_12 $$ final String proxyHost = context.getString(FileStoreContextBuilder.ProxyHost) [CD]
Line_11 $$ if (context.getBoolean(FileStoreContextBuilder.ProxySet)) --> Line_13 $$ final String proxyPort = context.getString(FileStoreContextBuilder.ProxyPort) [CD]
Line_11 $$ if (context.getBoolean(FileStoreContextBuilder.ProxySet)) --> Line_14 $$ if (!StringHelper.isEmpty(proxyHost)) [CD]
Line_12 $$ final String proxyHost = context.getString(FileStoreContextBuilder.ProxyHost) --> Line_14 $$ if (!StringHelper.isEmpty(proxyHost)) [FD]
Line_14 $$ if (!StringHelper.isEmpty(proxyHost)) --> Line_15 $$ httpProxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, !StringHelper.isEmpty(proxyPort) ? Integer.parseInt(proxyPort) : 80)) [CD]
Line_9 $$ Proxy httpProxy = null --> Line_15 $$ httpProxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, !StringHelper.isEmpty(proxyPort) ? Integer.parseInt(proxyPort) : 80)) [FD]
Line_13 $$ final String proxyPort = context.getString(FileStoreContextBuilder.ProxyPort) --> Line_15 $$ httpProxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, !StringHelper.isEmpty(proxyPort) ? Integer.parseInt(proxyPort) : 80)) [FD]
Line_14 $$ if (!StringHelper.isEmpty(proxyHost)) --> Line_16 $$ if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.NonProxyHosts))) [CD]
Line_16 $$ if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.NonProxyHosts))) --> Line_17 $$ System.getProperties().put("http.nonProxyHosts", context.getProperty(FileStoreContextBuilder.NonProxyHosts)) [CD]
Line_14 $$ if (!StringHelper.isEmpty(proxyHost)) --> Line_19 $$ if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxyUser)) && !StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxyPassword))) [CD]
Line_19 $$ if (!StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxyUser)) && !StringHelper.isEmpty(context.getString(FileStoreContextBuilder.ProxyPassword))) --> Line_20 $$ Authenticator.setDefault(new Authenticator() [CD]
Line_20 $$ Authenticator.setDefault(new Authenticator() --> Line_22 $$ return new PasswordAuthentication(context.getString(FileStoreContextBuilder.ProxyUser), context.getString(FileStoreContextBuilder.ProxyPassword).toCharArray()) [CD]
Line_9 $$ Proxy httpProxy = null --> Line_29 $$ if (httpProxy == null) [FD]
Line_15 $$ httpProxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, !StringHelper.isEmpty(proxyPort) ? Integer.parseInt(proxyPort) : 80)) --> Line_29 $$ if (httpProxy == null) [FD]
Line_29 $$ if (httpProxy == null) --> Line_30 $$ urlConnection = configUrl.openConnection() [CD]
Line_7 $$ final URL configUrl = resourceUri.toURL() --> Line_30 $$ urlConnection = configUrl.openConnection() [FD]
Line_29 $$ if (httpProxy == null) --> Line_32 $$ urlConnection = configUrl.openConnection(httpProxy) [CD]
Line_7 $$ final URL configUrl = resourceUri.toURL() --> Line_32 $$ urlConnection = configUrl.openConnection(httpProxy) [FD]
Line_9 $$ Proxy httpProxy = null --> Line_32 $$ urlConnection = configUrl.openConnection(httpProxy) [FD]
Line_15 $$ httpProxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyHost, !StringHelper.isEmpty(proxyPort) ? Integer.parseInt(proxyPort) : 80)) --> Line_32 $$ urlConnection = configUrl.openConnection(httpProxy) [FD]
Line_8 $$ final URLConnection urlConnection --> Line_34 $$ setUrlConnectionSettings(urlConnection) [FD]
Line_8 $$ final URLConnection urlConnection --> Line_35 $$ urlConnection.connect() [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_37 $$ return createResourceHandler(resourceUri.toString(), urlConnection.getInputStream()) [FD]
Line_8 $$ final URLConnection urlConnection --> Line_37 $$ return createResourceHandler(resourceUri.toString(), urlConnection.getInputStream()) [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_39 $$ throw new ResourceNotFoundException(resourceUri.toString()) [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_42 $$ throw new IllegalStateException(InternalBundleHelper.StoreMessageBundle.getMessage("store.uri.malformed", resourceUri.toString())) [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_44 $$ throw new ResourceException("store.connection.error", ce, resourceUri.toString()) [FD]
Line_2 $$ protected ResourceHandler doGet(final URI resourceUri) throws ResourceNotFoundException, ResourceException --> Line_49 $$ throw new ResourceException(ioe, resourceUri.toString()) [FD]
