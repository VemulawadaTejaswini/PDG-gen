Line_2 $$ public void handleEvent(Event event) --> Line_3 $$ if (fileDialog == null) [CD]
Line_3 $$ if (fileDialog == null) --> Line_5 $$ fileDialog.setText("Open device profile file...") [CD]
Line_3 $$ if (fileDialog == null) --> Line_6 $$ fileDialog.setFilterNames(new String[] [CD]
Line_3 $$ if (fileDialog == null) --> Line_7 $$ fileDialog.setFilterExtensions(new String[] [CD]
Line_2 $$ public void handleEvent(Event event) --> Line_9 $$ fileDialog.open() [CD]
Line_2 $$ public void handleEvent(Event event) --> Line_10 $$ if (fileDialog.getFileName() != null) [CD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_11 $$ File file [CD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_12 $$ String manifestDeviceName = null [CD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_13 $$ URL[] urls = new URL[1] [CD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_14 $$ ArrayList descriptorEntries = new ArrayList() [CD]
Line_11 $$ File file --> Line_16 $$ file = new File(fileDialog.getFilterPath(), fileDialog.getFileName()) [FD]
Line_17 $$ JarFile jar = new JarFile(file) --> Line_18 $$ Manifest manifest = jar.getManifest() [FD]
Line_18 $$ Manifest manifest = jar.getManifest() --> Line_19 $$ if (manifest != null) [FD]
Line_19 $$ if (manifest != null) --> Line_20 $$ Attributes attrs = manifest.getMainAttributes() [CD]
Line_18 $$ Manifest manifest = jar.getManifest() --> Line_20 $$ Attributes attrs = manifest.getMainAttributes() [FD]
Line_19 $$ if (manifest != null) --> Line_21 $$ manifestDeviceName = attrs.getValue("Device-Name") [CD]
Line_12 $$ String manifestDeviceName = null --> Line_21 $$ manifestDeviceName = attrs.getValue("Device-Name") [FD]
Line_20 $$ Attributes attrs = manifest.getMainAttributes() --> Line_21 $$ manifestDeviceName = attrs.getValue("Device-Name") [FD]
Line_17 $$ JarFile jar = new JarFile(file) --> Line_23 $$ for (Enumeration en = jar.entries(); en.hasMoreElements(); ) [FD]
Line_23 $$ for (Enumeration en = jar.entries(); en.hasMoreElements(); ) --> Line_24 $$ String entry = ((JarEntry) en.nextElement()).getName() [CD]
Line_23 $$ for (Enumeration en = jar.entries(); en.hasMoreElements(); ) --> Line_24 $$ String entry = ((JarEntry) en.nextElement()).getName() [FD]
Line_23 $$ for (Enumeration en = jar.entries(); en.hasMoreElements(); ) --> Line_25 $$ if ((entry.toLowerCase().endsWith(".xml") || entry.toLowerCase().endsWith("device.txt")) && !entry.toLowerCase().startsWith("meta-inf")) [CD]
Line_25 $$ if ((entry.toLowerCase().endsWith(".xml") || entry.toLowerCase().endsWith("device.txt")) && !entry.toLowerCase().startsWith("meta-inf")) --> Line_26 $$ descriptorEntries.add(entry) [CD]
Line_14 $$ ArrayList descriptorEntries = new ArrayList() --> Line_26 $$ descriptorEntries.add(entry) [FD]
Line_17 $$ JarFile jar = new JarFile(file) --> Line_29 $$ jar.close() [FD]
Line_11 $$ File file --> Line_30 $$ urls[0] = file.toURL() [FD]
Line_16 $$ file = new File(fileDialog.getFilterPath(), fileDialog.getFileName()) --> Line_30 $$ urls[0] = file.toURL() [FD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_35 $$ if (descriptorEntries.size() == 0) [CD]
Line_14 $$ ArrayList descriptorEntries = new ArrayList() --> Line_35 $$ if (descriptorEntries.size() == 0) [FD]
Line_35 $$ if (descriptorEntries.size() == 0) --> Line_36 $$ Message.error("Cannot find any device profile in file: " + fileDialog.getFileName()) [CD]
Line_35 $$ if (descriptorEntries.size() == 0) --> Line_37 $$ return [CD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_39 $$ if (descriptorEntries.size() > 1) [CD]
Line_14 $$ ArrayList descriptorEntries = new ArrayList() --> Line_39 $$ if (descriptorEntries.size() > 1) [FD]
Line_39 $$ if (descriptorEntries.size() > 1) --> Line_40 $$ manifestDeviceName = null [CD]
Line_12 $$ String manifestDeviceName = null --> Line_40 $$ manifestDeviceName = null [FD]
Line_21 $$ manifestDeviceName = attrs.getValue("Device-Name") --> Line_40 $$ manifestDeviceName = null [FD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_42 $$ ClassLoader classLoader = Common.createExtensionsClassLoader(urls) [CD]
Line_13 $$ URL[] urls = new URL[1] --> Line_42 $$ ClassLoader classLoader = Common.createExtensionsClassLoader(urls) [FD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_43 $$ HashMap devices = new HashMap() [CD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_44 $$ for (Iterator it = descriptorEntries.iterator(); it.hasNext(); ) [CD]
Line_14 $$ ArrayList descriptorEntries = new ArrayList() --> Line_44 $$ for (Iterator it = descriptorEntries.iterator(); it.hasNext(); ) [FD]
Line_44 $$ for (Iterator it = descriptorEntries.iterator(); it.hasNext(); ) --> Line_45 $$ JarEntry entry = (JarEntry) it.next() [CD]
Line_44 $$ for (Iterator it = descriptorEntries.iterator(); it.hasNext(); ) --> Line_45 $$ JarEntry entry = (JarEntry) it.next() [FD]
Line_43 $$ HashMap devices = new HashMap() --> Line_47 $$ devices.put(entry.getName(), DeviceImpl.create(emulatorContext, classLoader, entry.getName(), SwtDevice.class)) [FD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) [CD]
Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_54 $$ DeviceEntry entry = (DeviceEntry) deviceModel.elementAt(i) [CD]
Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_54 $$ DeviceEntry entry = (DeviceEntry) deviceModel.elementAt(i) [FD]
Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_55 $$ if (devices.containsKey(entry.getDescriptorLocation())) [CD]
Line_43 $$ HashMap devices = new HashMap() --> Line_55 $$ if (devices.containsKey(entry.getDescriptorLocation())) [FD]
Line_55 $$ if (devices.containsKey(entry.getDescriptorLocation())) --> Line_56 $$ devices.remove(entry.getDescriptorLocation()) [CD]
Line_43 $$ HashMap devices = new HashMap() --> Line_56 $$ devices.remove(entry.getDescriptorLocation()) [FD]
Line_10 $$ if (fileDialog.getFileName() != null) --> Line_59 $$ if (devices.size() == 0) [CD]
Line_43 $$ HashMap devices = new HashMap() --> Line_59 $$ if (devices.size() == 0) [FD]
Line_59 $$ if (devices.size() == 0) --> Line_60 $$ Message.info("Device profile already added") [CD]
Line_59 $$ if (devices.size() == 0) --> Line_61 $$ return [CD]
Line_11 $$ File file --> Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) [FD]
Line_16 $$ file = new File(fileDialog.getFilterPath(), fileDialog.getFileName()) --> Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) [FD]
Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) --> Line_65 $$ if (deviceFile.exists()) [FD]
Line_65 $$ if (deviceFile.exists()) --> Line_66 $$ deviceFile = File.createTempFile("device", ".jar", Config.getConfigPath()) [CD]
Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) --> Line_66 $$ deviceFile = File.createTempFile("device", ".jar", Config.getConfigPath()) [FD]
Line_11 $$ File file --> Line_68 $$ IOUtils.copyFile(file, deviceFile) [FD]
Line_16 $$ file = new File(fileDialog.getFilterPath(), fileDialog.getFileName()) --> Line_68 $$ IOUtils.copyFile(file, deviceFile) [FD]
Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) --> Line_68 $$ IOUtils.copyFile(file, deviceFile) [FD]
Line_66 $$ deviceFile = File.createTempFile("device", ".jar", Config.getConfigPath()) --> Line_68 $$ IOUtils.copyFile(file, deviceFile) [FD]
Line_44 $$ for (Iterator it = descriptorEntries.iterator(); it.hasNext(); ) --> Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) [FD]
Line_43 $$ HashMap devices = new HashMap() --> Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) [FD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_71 $$ String descriptorLocation = (String) it.next() [CD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_71 $$ String descriptorLocation = (String) it.next() [FD]
Line_44 $$ for (Iterator it = descriptorEntries.iterator(); it.hasNext(); ) --> Line_71 $$ String descriptorLocation = (String) it.next() [FD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_72 $$ Device device = (Device) devices.get(descriptorLocation) [CD]
Line_43 $$ HashMap devices = new HashMap() --> Line_72 $$ Device device = (Device) devices.get(descriptorLocation) [FD]
Line_71 $$ String descriptorLocation = (String) it.next() --> Line_72 $$ Device device = (Device) devices.get(descriptorLocation) [FD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_73 $$ if (manifestDeviceName != null) [CD]
Line_12 $$ String manifestDeviceName = null --> Line_73 $$ if (manifestDeviceName != null) [FD]
Line_21 $$ manifestDeviceName = attrs.getValue("Device-Name") --> Line_73 $$ if (manifestDeviceName != null) [FD]
Line_40 $$ manifestDeviceName = null --> Line_73 $$ if (manifestDeviceName != null) [FD]
Line_73 $$ if (manifestDeviceName != null) --> Line_74 $$ entry = new DeviceEntry(manifestDeviceName, deviceFile.getName(), descriptorLocation, false) [CD]
Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) --> Line_74 $$ entry = new DeviceEntry(manifestDeviceName, deviceFile.getName(), descriptorLocation, false) [FD]
Line_66 $$ deviceFile = File.createTempFile("device", ".jar", Config.getConfigPath()) --> Line_74 $$ entry = new DeviceEntry(manifestDeviceName, deviceFile.getName(), descriptorLocation, false) [FD]
Line_73 $$ if (manifestDeviceName != null) --> Line_76 $$ entry = new DeviceEntry(device.getName(), deviceFile.getName(), descriptorLocation, false) [CD]
Line_72 $$ Device device = (Device) devices.get(descriptorLocation) --> Line_76 $$ entry = new DeviceEntry(device.getName(), deviceFile.getName(), descriptorLocation, false) [FD]
Line_64 $$ File deviceFile = new File(Config.getConfigPath(), file.getName()) --> Line_76 $$ entry = new DeviceEntry(device.getName(), deviceFile.getName(), descriptorLocation, false) [FD]
Line_66 $$ deviceFile = File.createTempFile("device", ".jar", Config.getConfigPath()) --> Line_76 $$ entry = new DeviceEntry(device.getName(), deviceFile.getName(), descriptorLocation, false) [FD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_78 $$ deviceModel.addElement(entry) [CD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_79 $$ for (int i = 0; i < deviceModel.size(); i++) [CD]
Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_79 $$ for (int i = 0; i < deviceModel.size(); i++) [FD]
Line_79 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_80 $$ if (deviceModel.elementAt(i) == entry) [CD]
Line_79 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_80 $$ if (deviceModel.elementAt(i) == entry) [FD]
Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_80 $$ if (deviceModel.elementAt(i) == entry) [FD]
Line_80 $$ if (deviceModel.elementAt(i) == entry) --> Line_81 $$ lsDevices.add(entry.getName()) [CD]
Line_80 $$ if (deviceModel.elementAt(i) == entry) --> Line_82 $$ lsDevices.select(i) [CD]
Line_79 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_82 $$ lsDevices.select(i) [FD]
Line_53 $$ for (int i = 0; i < deviceModel.size(); i++) --> Line_82 $$ lsDevices.select(i) [FD]
Line_70 $$ for (Iterator it = devices.keySet().iterator(); it.hasNext(); ) --> Line_85 $$ Config.addDeviceEntry(entry) [CD]
