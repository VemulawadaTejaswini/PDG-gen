Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_3 $$ DBOperation dbo = null [CD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_4 $$ Connection connection = null [CD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_5 $$ PreparedStatement ps = null [CD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_6 $$ ResultSet rset = null [CD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_7 $$ String sql = "insert into " + SHARE_TABLE + " values(?,?,?)" [CD]
Line_3 $$ DBOperation dbo = null --> Line_9 $$ dbo = createDBOperation() [FD]
Line_4 $$ Connection connection = null --> Line_10 $$ connection = dbo.getConnection() [FD]
Line_3 $$ DBOperation dbo = null --> Line_10 $$ connection = dbo.getConnection() [FD]
Line_9 $$ dbo = createDBOperation() --> Line_10 $$ connection = dbo.getConnection() [FD]
Line_4 $$ Connection connection = null --> Line_11 $$ connection.setAutoCommit(false) [FD]
Line_10 $$ connection = dbo.getConnection() --> Line_11 $$ connection.setAutoCommit(false) [FD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_12 $$ for (int i = 0; i < userId.size(); i++) [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_13 $$ String user = (String) userId.elementAt(i) [CD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_13 $$ String user = (String) userId.elementAt(i) [FD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_13 $$ String user = (String) userId.elementAt(i) [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_14 $$ ps = connection.prepareStatement(sql) [CD]
Line_5 $$ PreparedStatement ps = null --> Line_14 $$ ps = connection.prepareStatement(sql) [FD]
Line_4 $$ Connection connection = null --> Line_14 $$ ps = connection.prepareStatement(sql) [FD]
Line_10 $$ connection = dbo.getConnection() --> Line_14 $$ ps = connection.prepareStatement(sql) [FD]
Line_7 $$ String sql = "insert into " + SHARE_TABLE + " values(?,?,?)" --> Line_14 $$ ps = connection.prepareStatement(sql) [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_15 $$ ps.setInt(1, Integer.parseInt(folderId)) [CD]
Line_14 $$ ps = connection.prepareStatement(sql) --> Line_15 $$ ps.setInt(1, Integer.parseInt(folderId)) [FD]
Line_5 $$ PreparedStatement ps = null --> Line_15 $$ ps.setInt(1, Integer.parseInt(folderId)) [FD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_15 $$ ps.setInt(1, Integer.parseInt(folderId)) [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_16 $$ ps.setInt(2, Integer.parseInt(user)) [CD]
Line_14 $$ ps = connection.prepareStatement(sql) --> Line_16 $$ ps.setInt(2, Integer.parseInt(user)) [FD]
Line_5 $$ PreparedStatement ps = null --> Line_16 $$ ps.setInt(2, Integer.parseInt(user)) [FD]
Line_13 $$ String user = (String) userId.elementAt(i) --> Line_16 $$ ps.setInt(2, Integer.parseInt(user)) [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_17 $$ ps.setString(3, shareFlag) [CD]
Line_14 $$ ps = connection.prepareStatement(sql) --> Line_17 $$ ps.setString(3, shareFlag) [FD]
Line_5 $$ PreparedStatement ps = null --> Line_17 $$ ps.setString(3, shareFlag) [FD]
Line_2 $$ public void doNew(Vector userId, String shareFlag, String folderId) throws AddrException --> Line_17 $$ ps.setString(3, shareFlag) [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_18 $$ int resultCount = ps.executeUpdate() [CD]
Line_14 $$ ps = connection.prepareStatement(sql) --> Line_18 $$ int resultCount = ps.executeUpdate() [FD]
Line_5 $$ PreparedStatement ps = null --> Line_18 $$ int resultCount = ps.executeUpdate() [FD]
Line_12 $$ for (int i = 0; i < userId.size(); i++) --> Line_19 $$ if (resultCount != 1) [CD]
Line_18 $$ int resultCount = ps.executeUpdate() --> Line_19 $$ if (resultCount != 1) [FD]
Line_4 $$ Connection connection = null --> Line_23 $$ connection.commit() [FD]
Line_10 $$ connection = dbo.getConnection() --> Line_23 $$ connection.commit() [FD]
Line_4 $$ Connection connection = null --> Line_25 $$ if (connection != null) [FD]
Line_10 $$ connection = dbo.getConnection() --> Line_25 $$ if (connection != null) [FD]
Line_4 $$ Connection connection = null --> Line_27 $$ connection.rollback() [FD]
Line_10 $$ connection = dbo.getConnection() --> Line_27 $$ connection.rollback() [FD]
Line_6 $$ ResultSet rset = null --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
Line_14 $$ ps = connection.prepareStatement(sql) --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
Line_5 $$ PreparedStatement ps = null --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
Line_4 $$ Connection connection = null --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
Line_10 $$ connection = dbo.getConnection() --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
Line_3 $$ DBOperation dbo = null --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
Line_9 $$ dbo = createDBOperation() --> Line_35 $$ close(rset, null, ps, connection, dbo) [FD]
