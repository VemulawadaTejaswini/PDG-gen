Line_2 $$ public Object[] bubblesort(Object[] tosort) --> Line_3 $$ Boolean sorting [CD]
Line_2 $$ public Object[] bubblesort(Object[] tosort) --> Line_4 $$ int upperlimit = tosort.length - 1 [CD]
Line_2 $$ public Object[] bubblesort(Object[] tosort) --> Line_5 $$ do [CD]
Line_5 $$ do --> Line_6 $$ sorting = false [CD]
Line_3 $$ Boolean sorting --> Line_6 $$ sorting = false [FD]
Line_5 $$ do --> Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) [CD]
Line_4 $$ int upperlimit = tosort.length - 1 --> Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) [FD]
Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) --> Line_8 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) < 0) [CD]
Line_8 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) < 0) --> Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) [CD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_10 $$ Object[] tosortnew = new Object[tosort.length - 1] [CD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_11 $$ for (int tmp = 0; tmp < s0; tmp++) [CD]
Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) --> Line_11 $$ for (int tmp = 0; tmp < s0; tmp++) [FD]
Line_11 $$ for (int tmp = 0; tmp < s0; tmp++) --> Line_12 $$ tosortnew[tmp] = tosort[tmp] [CD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_14 $$ for (int tmp = s0; tmp < tosortnew.length; tmp++) [CD]
Line_11 $$ for (int tmp = 0; tmp < s0; tmp++) --> Line_14 $$ for (int tmp = s0; tmp < tosortnew.length; tmp++) [FD]
Line_14 $$ for (int tmp = s0; tmp < tosortnew.length; tmp++) --> Line_15 $$ tosortnew[tmp] = tosort[tmp + 1] [CD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_17 $$ tosort = tosortnew [CD]
Line_2 $$ public Object[] bubblesort(Object[] tosort) --> Line_17 $$ tosort = tosortnew [FD]
Line_10 $$ Object[] tosortnew = new Object[tosort.length - 1] --> Line_17 $$ tosort = tosortnew [FD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_18 $$ upperlimit = upperlimit - 1 [CD]
Line_4 $$ int upperlimit = tosort.length - 1 --> Line_18 $$ upperlimit = upperlimit - 1 [FD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_19 $$ s0 = s0 - 1 [CD]
Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) --> Line_19 $$ s0 = s0 - 1 [FD]
Line_9 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) == 0) --> Line_20 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) > 0) [CD]
Line_20 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) > 0) --> Line_22 $$ tosort[s0] = tosort[s0 + 1] [CD]
Line_20 $$ if (tosort[s0].toString().compareTo(tosort[s0 + 1].toString()) > 0) --> Line_24 $$ sorting = true [CD]
Line_6 $$ sorting = false --> Line_24 $$ sorting = true [FD]
Line_3 $$ Boolean sorting --> Line_24 $$ sorting = true [FD]
Line_5 $$ do --> Line_27 $$ upperlimit = upperlimit - 1 [CD]
Line_18 $$ upperlimit = upperlimit - 1 --> Line_27 $$ upperlimit = upperlimit - 1 [FD]
Line_4 $$ int upperlimit = tosort.length - 1 --> Line_27 $$ upperlimit = upperlimit - 1 [FD]
Line_2 $$ public Object[] bubblesort(Object[] tosort) --> Line_29 $$ return tosort [CD]
Line_19 $$ s0 = s0 - 1 --> Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) [FD]
Line_18 $$ upperlimit = upperlimit - 1 --> Line_7 $$ for (int s0 = 0; s0 < upperlimit; s0++) [FD]
