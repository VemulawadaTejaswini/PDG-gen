Line_4 $$ MessageDigest md = MessageDigest.getInstance("SHA") --> Line_5 $$ md.update(s.getBytes(), 0, s.getBytes().length) [FD]
Line_2 $$ public static String SHA(String s) --> Line_5 $$ md.update(s.getBytes(), 0, s.getBytes().length) [FD]
Line_4 $$ MessageDigest md = MessageDigest.getInstance("SHA") --> Line_6 $$ byte[] hash = md.digest() [FD]
Line_10 $$ int i --> Line_11 $$ for (i = 0; i < hash.length; i++) [FD]
Line_11 $$ for (i = 0; i < hash.length; i++) --> Line_12 $$ msb = ((int) hash[i] & 0x000000FF) / 16 [CD]
Line_8 $$ int msb --> Line_12 $$ msb = ((int) hash[i] & 0x000000FF) / 16 [FD]
Line_11 $$ for (i = 0; i < hash.length; i++) --> Line_13 $$ lsb = ((int) hash[i] & 0x000000FF) % 16 [CD]
Line_9 $$ int lsb = 0 --> Line_13 $$ lsb = ((int) hash[i] & 0x000000FF) % 16 [FD]
Line_11 $$ for (i = 0; i < hash.length; i++) --> Line_14 $$ sb.append(hexChars[msb]) [CD]
Line_7 $$ StringBuilder sb = new StringBuilder() --> Line_14 $$ sb.append(hexChars[msb]) [FD]
Line_11 $$ for (i = 0; i < hash.length; i++) --> Line_15 $$ sb.append(hexChars[lsb]) [CD]
Line_7 $$ StringBuilder sb = new StringBuilder() --> Line_15 $$ sb.append(hexChars[lsb]) [FD]
Line_7 $$ StringBuilder sb = new StringBuilder() --> Line_17 $$ return sb.toString() [FD]
