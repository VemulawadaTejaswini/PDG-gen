Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_3 $$ String zoneFileName = null [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_4 $$ String costFileName = null [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_5 $$ String homesFileName = null [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_6 $$ String jobsFileName = null [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_7 $$ Properties props = new Properties() [CD]
Line_7 $$ Properties props = new Properties() --> Line_9 $$ props.loadFromXML(propurl.openStream()) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_9 $$ props.loadFromXML(propurl.openStream()) [FD]
Line_3 $$ String zoneFileName = null --> Line_10 $$ zoneFileName = props.getProperty("zoneFileName") [FD]
Line_7 $$ Properties props = new Properties() --> Line_10 $$ zoneFileName = props.getProperty("zoneFileName") [FD]
Line_4 $$ String costFileName = null --> Line_11 $$ costFileName = props.getProperty("costFileName") [FD]
Line_7 $$ Properties props = new Properties() --> Line_11 $$ costFileName = props.getProperty("costFileName") [FD]
Line_5 $$ String homesFileName = null --> Line_12 $$ homesFileName = props.getProperty("homesFileName") [FD]
Line_7 $$ Properties props = new Properties() --> Line_12 $$ homesFileName = props.getProperty("homesFileName") [FD]
Line_6 $$ String jobsFileName = null --> Line_13 $$ jobsFileName = props.getProperty("jobsFileName") [FD]
Line_7 $$ Properties props = new Properties() --> Line_13 $$ jobsFileName = props.getProperty("jobsFileName") [FD]
Line_7 $$ Properties props = new Properties() --> Line_14 $$ maxiter = Integer.parseInt(props.getProperty("maxiter")) [FD]
Line_7 $$ Properties props = new Properties() --> Line_15 $$ mu = Double.parseDouble(props.getProperty("mu")) [FD]
Line_7 $$ Properties props = new Properties() --> Line_16 $$ theta = Double.parseDouble(props.getProperty("theta")) [FD]
Line_7 $$ Properties props = new Properties() --> Line_17 $$ threshold1 = Double.parseDouble(props.getProperty("threshold1")) [FD]
Line_7 $$ Properties props = new Properties() --> Line_18 $$ threshold2 = Double.parseDouble(props.getProperty("threshold2")) [FD]
Line_7 $$ Properties props = new Properties() --> Line_19 $$ verbose = Boolean.parseBoolean(props.getProperty("verbose")) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_24 $$ HashSet<Integer> zoneids = SomeIO.readZoneIDs(zoneFileName) [CD]
Line_3 $$ String zoneFileName = null --> Line_24 $$ HashSet<Integer> zoneids = SomeIO.readZoneIDs(zoneFileName) [FD]
Line_10 $$ zoneFileName = props.getProperty("zoneFileName") --> Line_24 $$ HashSet<Integer> zoneids = SomeIO.readZoneIDs(zoneFileName) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_25 $$ numZ = zoneids.size() [CD]
Line_24 $$ HashSet<Integer> zoneids = SomeIO.readZoneIDs(zoneFileName) --> Line_25 $$ numZ = zoneids.size() [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_26 $$ if (verbose) [CD]
Line_26 $$ if (verbose) --> Line_27 $$ System.out.println("Data:") [CD]
Line_26 $$ if (verbose) --> Line_28 $$ System.out.println(" . #zones:" + numZ) [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_30 $$ int idx = 0 [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_31 $$ TreeMap<Integer, Integer> zonemap = new TreeMap<Integer, Integer>() [CD]
Line_31 $$ TreeMap<Integer, Integer> zonemap = new TreeMap<Integer, Integer>() --> Line_32 $$ for (Integer id : zoneids) zonemap.put(id, idx++) [FD]
Line_30 $$ int idx = 0 --> Line_32 $$ for (Integer id : zoneids) zonemap.put(id, idx++) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_33 $$ cij = SomeIO.readMatrix(costFileName, numZ, numZ) [CD]
Line_4 $$ String costFileName = null --> Line_33 $$ cij = SomeIO.readMatrix(costFileName, numZ, numZ) [FD]
Line_11 $$ costFileName = props.getProperty("costFileName") --> Line_33 $$ cij = SomeIO.readMatrix(costFileName, numZ, numZ) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_34 $$ for (int i = 0; i < numZ; i++) [CD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_35 $$ double mincij = Double.POSITIVE_INFINITY [CD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_36 $$ for (int j = 0; j < numZ; j++) [CD]
Line_36 $$ for (int j = 0; j < numZ; j++) --> Line_37 $$ double v = cij.get(i, j) [CD]
Line_36 $$ for (int j = 0; j < numZ; j++) --> Line_37 $$ double v = cij.get(i, j) [FD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_37 $$ double v = cij.get(i, j) [FD]
Line_36 $$ for (int j = 0; j < numZ; j++) --> Line_38 $$ if ((v < mincij) && (v > 0.0)) [CD]
Line_35 $$ double mincij = Double.POSITIVE_INFINITY --> Line_38 $$ if ((v < mincij) && (v > 0.0)) [FD]
Line_37 $$ double v = cij.get(i, j) --> Line_38 $$ if ((v < mincij) && (v > 0.0)) [FD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_40 $$ if (cij.get(i, i) == 0.0) [CD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_40 $$ if (cij.get(i, i) == 0.0) [FD]
Line_38 $$ if ((v < mincij) && (v > 0.0)) --> Line_40 $$ if (cij.get(i, i) == 0.0) [FD]
Line_35 $$ double mincij = Double.POSITIVE_INFINITY --> Line_40 $$ if (cij.get(i, i) == 0.0) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_42 $$ setupECij() [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_43 $$ double meanCost = 0.0 [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_44 $$ double stdCost = 0.0 [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_45 $$ for (int i = 0; i < numZ; i++) [CD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_45 $$ for (int i = 0; i < numZ; i++) [FD]
Line_45 $$ for (int i = 0; i < numZ; i++) --> Line_46 $$ for (int j = 0; j < numZ; j++) [CD]
Line_36 $$ for (int j = 0; j < numZ; j++) --> Line_46 $$ for (int j = 0; j < numZ; j++) [FD]
Line_46 $$ for (int j = 0; j < numZ; j++) --> Line_47 $$ double v = cij.get(i, j) [CD]
Line_46 $$ for (int j = 0; j < numZ; j++) --> Line_47 $$ double v = cij.get(i, j) [FD]
Line_45 $$ for (int i = 0; i < numZ; i++) --> Line_47 $$ double v = cij.get(i, j) [FD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_47 $$ double v = cij.get(i, j) [FD]
Line_36 $$ for (int j = 0; j < numZ; j++) --> Line_47 $$ double v = cij.get(i, j) [FD]
Line_46 $$ for (int j = 0; j < numZ; j++) --> Line_48 $$ meanCost += v [CD]
Line_43 $$ double meanCost = 0.0 --> Line_48 $$ meanCost += v [FD]
Line_47 $$ double v = cij.get(i, j) --> Line_48 $$ meanCost += v [FD]
Line_37 $$ double v = cij.get(i, j) --> Line_48 $$ meanCost += v [FD]
Line_46 $$ for (int j = 0; j < numZ; j++) --> Line_49 $$ stdCost += v * v [CD]
Line_44 $$ double stdCost = 0.0 --> Line_49 $$ stdCost += v * v [FD]
Line_47 $$ double v = cij.get(i, j) --> Line_49 $$ stdCost += v * v [FD]
Line_37 $$ double v = cij.get(i, j) --> Line_49 $$ stdCost += v * v [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_52 $$ meanCost = meanCost / (numZ * numZ) [CD]
Line_48 $$ meanCost += v --> Line_52 $$ meanCost = meanCost / (numZ * numZ) [FD]
Line_43 $$ double meanCost = 0.0 --> Line_52 $$ meanCost = meanCost / (numZ * numZ) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_53 $$ stdCost = stdCost / (numZ * numZ) - meanCost * meanCost [CD]
Line_49 $$ stdCost += v * v --> Line_53 $$ stdCost = stdCost / (numZ * numZ) - meanCost * meanCost [FD]
Line_44 $$ double stdCost = 0.0 --> Line_53 $$ stdCost = stdCost / (numZ * numZ) - meanCost * meanCost [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_54 $$ System.out.println(" . Travel costs  mean=" + meanCost + " std.dev.= " + Math.sqrt(stdCost)) [CD]
Line_49 $$ stdCost += v * v --> Line_54 $$ System.out.println(" . Travel costs  mean=" + meanCost + " std.dev.= " + Math.sqrt(stdCost)) [FD]
Line_44 $$ double stdCost = 0.0 --> Line_54 $$ System.out.println(" . Travel costs  mean=" + meanCost + " std.dev.= " + Math.sqrt(stdCost)) [FD]
Line_53 $$ stdCost = stdCost / (numZ * numZ) - meanCost * meanCost --> Line_54 $$ System.out.println(" . Travel costs  mean=" + meanCost + " std.dev.= " + Math.sqrt(stdCost)) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_55 $$ P = SomeIO.readZoneAttribute(numZ, homesFileName, zonemap) [CD]
Line_5 $$ String homesFileName = null --> Line_55 $$ P = SomeIO.readZoneAttribute(numZ, homesFileName, zonemap) [FD]
Line_12 $$ homesFileName = props.getProperty("homesFileName") --> Line_55 $$ P = SomeIO.readZoneAttribute(numZ, homesFileName, zonemap) [FD]
Line_31 $$ TreeMap<Integer, Integer> zonemap = new TreeMap<Integer, Integer>() --> Line_55 $$ P = SomeIO.readZoneAttribute(numZ, homesFileName, zonemap) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_56 $$ J = SomeIO.readZoneAttribute(numZ, jobsFileName, zonemap) [CD]
Line_6 $$ String jobsFileName = null --> Line_56 $$ J = SomeIO.readZoneAttribute(numZ, jobsFileName, zonemap) [FD]
Line_13 $$ jobsFileName = props.getProperty("jobsFileName") --> Line_56 $$ J = SomeIO.readZoneAttribute(numZ, jobsFileName, zonemap) [FD]
Line_31 $$ TreeMap<Integer, Integer> zonemap = new TreeMap<Integer, Integer>() --> Line_56 $$ J = SomeIO.readZoneAttribute(numZ, jobsFileName, zonemap) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_57 $$ double maxpj = 0.0 [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_58 $$ double sp = 0.0 [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_59 $$ double sj = 0.0 [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_60 $$ for (int i = 0; i < numZ; i++) [CD]
Line_45 $$ for (int i = 0; i < numZ; i++) --> Line_60 $$ for (int i = 0; i < numZ; i++) [FD]
Line_34 $$ for (int i = 0; i < numZ; i++) --> Line_60 $$ for (int i = 0; i < numZ; i++) [FD]
Line_60 $$ for (int i = 0; i < numZ; i++) --> Line_61 $$ sp += P[i] [CD]
Line_58 $$ double sp = 0.0 --> Line_61 $$ sp += P[i] [FD]
Line_60 $$ for (int i = 0; i < numZ; i++) --> Line_62 $$ sj += J[i] [CD]
Line_59 $$ double sj = 0.0 --> Line_62 $$ sj += J[i] [FD]
Line_60 $$ for (int i = 0; i < numZ; i++) --> Line_63 $$ if (P[i] > maxpj) [CD]
Line_57 $$ double maxpj = 0.0 --> Line_63 $$ if (P[i] > maxpj) [FD]
Line_60 $$ for (int i = 0; i < numZ; i++) --> Line_64 $$ if (J[i] > maxpj) [CD]
Line_63 $$ if (P[i] > maxpj) --> Line_64 $$ if (J[i] > maxpj) [FD]
Line_57 $$ double maxpj = 0.0 --> Line_64 $$ if (J[i] > maxpj) [FD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_66 $$ if (Math.abs(sp - sj) > 1.0) [CD]
Line_66 $$ if (Math.abs(sp - sj) > 1.0) --> Line_67 $$ System.err.println("Error: #jobs(" + sj + ")!= #homes(" + sp + ")") [CD]
Line_66 $$ if (Math.abs(sp - sj) > 1.0) --> Line_68 $$ System.exit(-1) [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_71 $$ System.out.println(" . Trip tables: #jobs=#homes= " + N) [CD]
Line_2 $$ TreeMap<Integer, Integer> initProperties(URL propurl) --> Line_72 $$ return zonemap [CD]
Line_64 $$ if (J[i] > maxpj) --> Line_63 $$ if (P[i] > maxpj) [FD]
