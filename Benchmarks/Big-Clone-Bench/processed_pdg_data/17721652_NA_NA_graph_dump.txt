Line_2 $$ public void actionPerformed(ActionEvent e) --> Line_3 $$ if (e.getSource() == cancel) [CD]
Line_2 $$ public void actionPerformed(ActionEvent e) --> Line_3 $$ if (e.getSource() == cancel) [FD]
Line_3 $$ if (e.getSource() == cancel) --> Line_4 $$ email.setText("") [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_5 $$ name.setText("") [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_6 $$ category.setSelectedIndex(0) [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_7 $$ subject.setText("") [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_8 $$ message.setText("") [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_9 $$ setVisible(false) [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_11 $$ StringBuffer errors = new StringBuffer() [CD]
Line_3 $$ if (e.getSource() == cancel) --> Line_12 $$ errors.append("El campo 'Email' es obligatorio<br/>") [CD]
Line_11 $$ StringBuffer errors = new StringBuffer() --> Line_12 $$ errors.append("El campo 'Email' es obligatorio<br/>") [FD]
Line_3 $$ if (e.getSource() == cancel) --> Line_13 $$ errors.append("El campo 'Nombre' es obligatorio<br/>") [CD]
Line_11 $$ StringBuffer errors = new StringBuffer() --> Line_13 $$ errors.append("El campo 'Nombre' es obligatorio<br/>") [FD]
Line_3 $$ if (e.getSource() == cancel) --> Line_14 $$ errors.append("El campo 'T�tulo' es obligatorio<br/>") [CD]
Line_11 $$ StringBuffer errors = new StringBuffer() --> Line_14 $$ errors.append("El campo 'T�tulo' es obligatorio<br/>") [FD]
Line_3 $$ if (e.getSource() == cancel) --> Line_15 $$ errors.append("No hay conrtenido en el mensaje<br/>") [CD]
Line_11 $$ StringBuffer errors = new StringBuffer() --> Line_15 $$ errors.append("No hay conrtenido en el mensaje<br/>") [FD]
Line_3 $$ if (e.getSource() == cancel) --> Line_16 $$ if (errors.length() > 0) [CD]
Line_11 $$ StringBuffer errors = new StringBuffer() --> Line_16 $$ if (errors.length() > 0) [FD]
Line_16 $$ if (errors.length() > 0) --> Line_17 $$ JOptionPane.showMessageDialog(this, "<html><b>Error</b><br/>" + errors.toString() + "</html>", "Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_11 $$ StringBuffer errors = new StringBuffer() --> Line_17 $$ JOptionPane.showMessageDialog(this, "<html><b>Error</b><br/>" + errors.toString() + "</html>", "Error", JOptionPane.ERROR_MESSAGE) [FD]
Line_20 $$ StringBuffer params = new StringBuffer() --> Line_21 $$ params.append("name=").append(URLEncoder.encode(name.getText(), "UTF-8")).append("&category=").append(URLEncoder.encode((String) category.getSelectedItem(), "UTF-8")).append("&title=").append(URLEncoder.encode(subject.getText(), "UTF-8")).append("&email=").append(URLEncoder.encode(email.getText(), "UTF-8")).append("&id=").append(URLEncoder.encode(MainWindow.getUserPreferences().getUniqueId() + "", "UTF-8")).append("&body=").append(URLEncoder.encode(message.getText(), "UTF-8")) [FD]
Line_22 $$ URL url = new URL("http://www.cronopista.com/diccionario2/sendMessage.php") --> Line_23 $$ URLConnection connection = url.openConnection() [FD]
Line_23 $$ URLConnection connection = url.openConnection() --> Line_24 $$ Utils.setupProxy(connection) [FD]
Line_23 $$ URLConnection connection = url.openConnection() --> Line_25 $$ connection.setDoOutput(true) [FD]
Line_23 $$ URLConnection connection = url.openConnection() --> Line_26 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) [FD]
Line_26 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) --> Line_27 $$ out.write(params.toString()) [FD]
Line_20 $$ StringBuffer params = new StringBuffer() --> Line_27 $$ out.write(params.toString()) [FD]
Line_26 $$ OutputStreamWriter out = new OutputStreamWriter(connection.getOutputStream()) --> Line_28 $$ out.close() [FD]
Line_23 $$ URLConnection connection = url.openConnection() --> Line_29 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_30 $$ String decodedString --> Line_31 $$ while ((decodedString = in.readLine()) != null) [FD]
Line_29 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_31 $$ while ((decodedString = in.readLine()) != null) [FD]
Line_31 $$ while ((decodedString = in.readLine()) != null) --> Line_32 $$ System.out.println(decodedString) [CD]
Line_31 $$ while ((decodedString = in.readLine()) != null) --> Line_32 $$ System.out.println(decodedString) [FD]
Line_30 $$ String decodedString --> Line_32 $$ System.out.println(decodedString) [FD]
Line_29 $$ BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_34 $$ in.close() [FD]
