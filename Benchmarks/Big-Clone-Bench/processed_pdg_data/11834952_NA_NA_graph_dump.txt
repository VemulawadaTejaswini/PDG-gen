Line_2 $$ public void downloadTranslationsAndReload() --> Line_3 $$ File languages = new File(this.translationsFile) [CD]
Line_5 $$ URL languageURL = new URL(languageServer) --> Line_6 $$ InputStream is = languageURL.openStream() [FD]
Line_9 $$ int bytesRead = 0 --> Line_10 $$ do [FD]
Line_10 $$ do --> Line_11 $$ bytesRead = is.read(read) [CD]
Line_9 $$ int bytesRead = 0 --> Line_11 $$ bytesRead = is.read(read) [FD]
Line_6 $$ InputStream is = languageURL.openStream() --> Line_11 $$ bytesRead = is.read(read) [FD]
Line_8 $$ byte[] read = new byte[512000] --> Line_11 $$ bytesRead = is.read(read) [FD]
Line_10 $$ do --> Line_12 $$ if (bytesRead > 0) [CD]
Line_11 $$ bytesRead = is.read(read) --> Line_12 $$ if (bytesRead > 0) [FD]
Line_9 $$ int bytesRead = 0 --> Line_12 $$ if (bytesRead > 0) [FD]
Line_12 $$ if (bytesRead > 0) --> Line_13 $$ os.write(read, 0, bytesRead) [CD]
Line_7 $$ OutputStream os = new FileOutputStream(languages) --> Line_13 $$ os.write(read, 0, bytesRead) [FD]
Line_8 $$ byte[] read = new byte[512000] --> Line_13 $$ os.write(read, 0, bytesRead) [FD]
Line_11 $$ bytesRead = is.read(read) --> Line_13 $$ os.write(read, 0, bytesRead) [FD]
Line_9 $$ int bytesRead = 0 --> Line_13 $$ os.write(read, 0, bytesRead) [FD]
Line_6 $$ InputStream is = languageURL.openStream() --> Line_16 $$ is.close() [FD]
Line_7 $$ OutputStream os = new FileOutputStream(languages) --> Line_17 $$ os.close() [FD]
Line_3 $$ File languages = new File(this.translationsFile) --> Line_21 $$ if (languages.exists()) [FD]
Line_23 $$ XMLDecoder loader = new XMLDecoder(new FileInputStream(languages)) --> Line_24 $$ this.languages = (Hashtable) loader.readObject() [FD]
Line_23 $$ XMLDecoder loader = new XMLDecoder(new FileInputStream(languages)) --> Line_25 $$ loader.close() [FD]
Line_21 $$ if (languages.exists()) --> Line_30 $$ this.languages.put(naiveLanguage, new Hashtable()) [CD]
Line_11 $$ bytesRead = is.read(read) --> Line_10 $$ do [FD]
