Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_3 $$ Timestamp now = new Timestamp(System.currentTimeMillis()) [CD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_4 $$ Statement stmt = null [CD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_5 $$ PreparedStatement pstmt = null [CD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_8 $$ if (events != null && events.size() > 0) [FD]
Line_8 $$ if (events != null && events.size() > 0) --> Line_9 $$ String seqnoList = buildCommaSeparatedList(events) [CD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_9 $$ String seqnoList = buildCommaSeparatedList(events) [FD]
Line_8 $$ if (events != null && events.size() > 0) --> Line_10 $$ stmt = conn.createStatement() [CD]
Line_4 $$ Statement stmt = null --> Line_10 $$ stmt = conn.createStatement() [FD]
Line_8 $$ if (events != null && events.size() > 0) --> Line_11 $$ stmt.executeUpdate("UPDATE history SET status = " + THLEvent.FAILED + ", comments = 'Event was rollbacked due to failure while processing event#" + failedEvent.getSeqno() + "'" + ", processed_tstamp = " + conn.getNowFunction() + " WHERE seqno in " + seqnoList) [CD]
Line_4 $$ Statement stmt = null --> Line_11 $$ stmt.executeUpdate("UPDATE history SET status = " + THLEvent.FAILED + ", comments = 'Event was rollbacked due to failure while processing event#" + failedEvent.getSeqno() + "'" + ", processed_tstamp = " + conn.getNowFunction() + " WHERE seqno in " + seqnoList) [FD]
Line_10 $$ stmt = conn.createStatement() --> Line_11 $$ stmt.executeUpdate("UPDATE history SET status = " + THLEvent.FAILED + ", comments = 'Event was rollbacked due to failure while processing event#" + failedEvent.getSeqno() + "'" + ", processed_tstamp = " + conn.getNowFunction() + " WHERE seqno in " + seqnoList) [FD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_11 $$ stmt.executeUpdate("UPDATE history SET status = " + THLEvent.FAILED + ", comments = 'Event was rollbacked due to failure while processing event#" + failedEvent.getSeqno() + "'" + ", processed_tstamp = " + conn.getNowFunction() + " WHERE seqno in " + seqnoList) [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_14 $$ pstmt.setShort(1, THLEvent.FAILED) [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_14 $$ pstmt.setShort(1, THLEvent.FAILED) [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_15 $$ pstmt.setString(2, truncate(failedEvent.getException() != null ? failedEvent.getException().getMessage() : "Unknown failure", commentLength)) [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_15 $$ pstmt.setString(2, truncate(failedEvent.getException() != null ? failedEvent.getException().getMessage() : "Unknown failure", commentLength)) [FD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_15 $$ pstmt.setString(2, truncate(failedEvent.getException() != null ? failedEvent.getException().getMessage() : "Unknown failure", commentLength)) [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_16 $$ pstmt.setTimestamp(3, now) [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_16 $$ pstmt.setTimestamp(3, now) [FD]
Line_3 $$ Timestamp now = new Timestamp(System.currentTimeMillis()) --> Line_16 $$ pstmt.setTimestamp(3, now) [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_17 $$ pstmt.setLong(4, failedEvent.getSeqno()) [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_17 $$ pstmt.setLong(4, failedEvent.getSeqno()) [FD]
Line_2 $$ public void updateFailedStatus(THLEventStatus failedEvent, ArrayList<THLEventStatus> events) throws THLException --> Line_17 $$ pstmt.setLong(4, failedEvent.getSeqno()) [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_18 $$ pstmt.executeUpdate() [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_18 $$ pstmt.executeUpdate() [FD]
Line_21 $$ THLException exception = new THLException("Failed to update events status") --> Line_22 $$ exception.initCause(e) [FD]
Line_21 $$ THLException exception = new THLException("Failed to update events status") --> Line_27 $$ e1.initCause(exception) [FD]
Line_26 $$ THLException exception2 = new THLException("Failed to rollback after failure while updating events status") --> Line_28 $$ exception2.initCause(e1) [FD]
Line_21 $$ THLException exception = new THLException("Failed to update events status") --> Line_29 $$ exception = exception2 [FD]
Line_26 $$ THLException exception2 = new THLException("Failed to rollback after failure while updating events status") --> Line_29 $$ exception = exception2 [FD]
Line_4 $$ Statement stmt = null --> Line_33 $$ if (stmt != null) [FD]
Line_10 $$ stmt = conn.createStatement() --> Line_33 $$ if (stmt != null) [FD]
Line_4 $$ Statement stmt = null --> Line_35 $$ stmt.close() [FD]
Line_10 $$ stmt = conn.createStatement() --> Line_35 $$ stmt.close() [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_39 $$ if (pstmt != null) [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_39 $$ if (pstmt != null) [FD]
Line_5 $$ PreparedStatement pstmt = null --> Line_41 $$ pstmt.close() [FD]
Line_13 $$ pstmt = conn.prepareStatement("UPDATE history SET status = ?" + ", comments = ?" + ", processed_tstamp = ?" + " WHERE seqno = ?") --> Line_41 $$ pstmt.close() [FD]
