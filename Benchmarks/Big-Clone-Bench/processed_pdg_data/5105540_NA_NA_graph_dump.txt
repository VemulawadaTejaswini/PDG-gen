Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_3 $$ if (TDebug.TraceAudioFileReader) [CD]
Line_3 $$ if (TDebug.TraceAudioFileReader) --> Line_4 $$ TDebug.out("MpegAudioFileReader.getAudioInputStream(URL): begin") [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_6 $$ long lFileLengthInBytes = AudioSystem.NOT_SPECIFIED [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_7 $$ URLConnection conn = url.openConnection() [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_7 $$ URLConnection conn = url.openConnection() [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_8 $$ boolean isShout = false [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_9 $$ int toRead = 4 [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_10 $$ byte[] head = new byte[toRead] [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_11 $$ conn.setRequestProperty("Icy-Metadata", "1") [CD]
Line_7 $$ URLConnection conn = url.openConnection() --> Line_11 $$ conn.setRequestProperty("Icy-Metadata", "1") [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_12 $$ BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream()) [CD]
Line_7 $$ URLConnection conn = url.openConnection() --> Line_12 $$ BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream()) [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_13 $$ bInputStream.mark(toRead) [CD]
Line_12 $$ BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream()) --> Line_13 $$ bInputStream.mark(toRead) [FD]
Line_9 $$ int toRead = 4 --> Line_13 $$ bInputStream.mark(toRead) [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_14 $$ int read = bInputStream.read(head, 0, toRead) [CD]
Line_12 $$ BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream()) --> Line_14 $$ int read = bInputStream.read(head, 0, toRead) [FD]
Line_10 $$ byte[] head = new byte[toRead] --> Line_14 $$ int read = bInputStream.read(head, 0, toRead) [FD]
Line_9 $$ int toRead = 4 --> Line_14 $$ int read = bInputStream.read(head, 0, toRead) [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_15 $$ if ((read > 2) && (((head[0] == 'I') | (head[0] == 'i')) && ((head[1] == 'C') | (head[1] == 'c')) && ((head[2] == 'Y') | (head[2] == 'y')))) [CD]
Line_8 $$ boolean isShout = false --> Line_15 $$ if ((read > 2) && (((head[0] == 'I') | (head[0] == 'i')) && ((head[1] == 'C') | (head[1] == 'c')) && ((head[2] == 'Y') | (head[2] == 'y')))) [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_16 $$ bInputStream.reset() [CD]
Line_12 $$ BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream()) --> Line_16 $$ bInputStream.reset() [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_17 $$ InputStream inputStream = null [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_18 $$ if (isShout == true) [CD]
Line_8 $$ boolean isShout = false --> Line_18 $$ if (isShout == true) [FD]
Line_15 $$ if ((read > 2) && (((head[0] == 'I') | (head[0] == 'i')) && ((head[1] == 'C') | (head[1] == 'c')) && ((head[2] == 'Y') | (head[2] == 'y')))) --> Line_18 $$ if (isShout == true) [FD]
Line_18 $$ if (isShout == true) --> Line_19 $$ IcyInputStream icyStream = new IcyInputStream(bInputStream) [CD]
Line_18 $$ if (isShout == true) --> Line_20 $$ icyStream.addTagParseListener(IcyListener.getInstance()) [CD]
Line_19 $$ IcyInputStream icyStream = new IcyInputStream(bInputStream) --> Line_20 $$ icyStream.addTagParseListener(IcyListener.getInstance()) [FD]
Line_18 $$ if (isShout == true) --> Line_21 $$ inputStream = icyStream [CD]
Line_17 $$ InputStream inputStream = null --> Line_21 $$ inputStream = icyStream [FD]
Line_19 $$ IcyInputStream icyStream = new IcyInputStream(bInputStream) --> Line_21 $$ inputStream = icyStream [FD]
Line_18 $$ if (isShout == true) --> Line_23 $$ String metaint = conn.getHeaderField("icy-metaint") [CD]
Line_7 $$ URLConnection conn = url.openConnection() --> Line_23 $$ String metaint = conn.getHeaderField("icy-metaint") [FD]
Line_18 $$ if (isShout == true) --> Line_24 $$ if (metaint != null) [CD]
Line_23 $$ String metaint = conn.getHeaderField("icy-metaint") --> Line_24 $$ if (metaint != null) [FD]
Line_24 $$ if (metaint != null) --> Line_26 $$ icyStream.addTagParseListener(IcyListener.getInstance()) [CD]
Line_19 $$ IcyInputStream icyStream = new IcyInputStream(bInputStream) --> Line_26 $$ icyStream.addTagParseListener(IcyListener.getInstance()) [FD]
Line_24 $$ if (metaint != null) --> Line_27 $$ inputStream = icyStream [CD]
Line_17 $$ InputStream inputStream = null --> Line_27 $$ inputStream = icyStream [FD]
Line_21 $$ inputStream = icyStream --> Line_27 $$ inputStream = icyStream [FD]
Line_19 $$ IcyInputStream icyStream = new IcyInputStream(bInputStream) --> Line_27 $$ inputStream = icyStream [FD]
Line_24 $$ if (metaint != null) --> Line_29 $$ inputStream = bInputStream [CD]
Line_17 $$ InputStream inputStream = null --> Line_29 $$ inputStream = bInputStream [FD]
Line_21 $$ inputStream = icyStream --> Line_29 $$ inputStream = bInputStream [FD]
Line_27 $$ inputStream = icyStream --> Line_29 $$ inputStream = bInputStream [FD]
Line_12 $$ BufferedInputStream bInputStream = new BufferedInputStream(conn.getInputStream()) --> Line_29 $$ inputStream = bInputStream [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_32 $$ AudioInputStream audioInputStream = null [CD]
Line_32 $$ AudioInputStream audioInputStream = null --> Line_34 $$ audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes) [FD]
Line_17 $$ InputStream inputStream = null --> Line_34 $$ audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes) [FD]
Line_21 $$ inputStream = icyStream --> Line_34 $$ audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes) [FD]
Line_27 $$ inputStream = icyStream --> Line_34 $$ audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes) [FD]
Line_29 $$ inputStream = bInputStream --> Line_34 $$ audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes) [FD]
Line_6 $$ long lFileLengthInBytes = AudioSystem.NOT_SPECIFIED --> Line_34 $$ audioInputStream = getAudioInputStream(inputStream, lFileLengthInBytes) [FD]
Line_17 $$ InputStream inputStream = null --> Line_36 $$ inputStream.close() [FD]
Line_21 $$ inputStream = icyStream --> Line_36 $$ inputStream.close() [FD]
Line_27 $$ inputStream = icyStream --> Line_36 $$ inputStream.close() [FD]
Line_29 $$ inputStream = bInputStream --> Line_36 $$ inputStream.close() [FD]
Line_17 $$ InputStream inputStream = null --> Line_39 $$ inputStream.close() [FD]
Line_21 $$ inputStream = icyStream --> Line_39 $$ inputStream.close() [FD]
Line_27 $$ inputStream = icyStream --> Line_39 $$ inputStream.close() [FD]
Line_29 $$ inputStream = bInputStream --> Line_39 $$ inputStream.close() [FD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_42 $$ if (TDebug.TraceAudioFileReader) [CD]
Line_42 $$ if (TDebug.TraceAudioFileReader) --> Line_43 $$ TDebug.out("MpegAudioFileReader.getAudioInputStream(URL): end") [CD]
Line_2 $$ public AudioInputStream getAudioInputStream(URL url) throws UnsupportedAudioFileException, IOException --> Line_45 $$ return audioInputStream [CD]
