Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_3 $$ int length = list.size() [CD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_3 $$ int length = list.size() [FD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_4 $$ Index_value[] distri = new Index_value[length] [CD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_5 $$ for (int i = 0; i < length; i++) [CD]
Line_3 $$ int length = list.size() --> Line_5 $$ for (int i = 0; i < length; i++) [FD]
Line_5 $$ for (int i = 0; i < length; i++) --> Line_6 $$ distri[i] = new Index_value(i, list.get(i)) [CD]
Line_5 $$ for (int i = 0; i < length; i++) --> Line_6 $$ distri[i] = new Index_value(i, list.get(i)) [FD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_6 $$ distri[i] = new Index_value(i, list.get(i)) [FD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_8 $$ boolean permut [CD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_9 $$ do [CD]
Line_9 $$ do --> Line_10 $$ permut = false [CD]
Line_8 $$ boolean permut --> Line_10 $$ permut = false [FD]
Line_9 $$ do --> Line_11 $$ for (int i = 0; i < length - 1; i++) [CD]
Line_5 $$ for (int i = 0; i < length; i++) --> Line_11 $$ for (int i = 0; i < length - 1; i++) [FD]
Line_11 $$ for (int i = 0; i < length - 1; i++) --> Line_12 $$ if (distri[i].value < distri[i + 1].value) [CD]
Line_12 $$ if (distri[i].value < distri[i + 1].value) --> Line_13 $$ Index_value a = distri[i] [CD]
Line_12 $$ if (distri[i].value < distri[i + 1].value) --> Line_14 $$ distri[i] = distri[i + 1] [CD]
Line_12 $$ if (distri[i].value < distri[i + 1].value) --> Line_15 $$ distri[i + 1] = a [CD]
Line_13 $$ Index_value a = distri[i] --> Line_15 $$ distri[i + 1] = a [FD]
Line_12 $$ if (distri[i].value < distri[i + 1].value) --> Line_16 $$ permut = true [CD]
Line_10 $$ permut = false --> Line_16 $$ permut = true [FD]
Line_8 $$ boolean permut --> Line_16 $$ permut = true [FD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_20 $$ RobotList<Float> sol = new RobotList<Float>(Float.class) [CD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_21 $$ for (int i = 0; i < length; i++) [CD]
Line_11 $$ for (int i = 0; i < length - 1; i++) --> Line_21 $$ for (int i = 0; i < length; i++) [FD]
Line_5 $$ for (int i = 0; i < length; i++) --> Line_21 $$ for (int i = 0; i < length; i++) [FD]
Line_3 $$ int length = list.size() --> Line_21 $$ for (int i = 0; i < length; i++) [FD]
Line_21 $$ for (int i = 0; i < length; i++) --> Line_22 $$ sol.addLast(new Float(distri[i].value)) [CD]
Line_2 $$ public RobotList<Float> sort_decr_Float(RobotList<Float> list, String field) --> Line_24 $$ return sol [CD]
