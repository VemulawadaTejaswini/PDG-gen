Line_4 $$ File outDir = new File(outDirTextField.getText()) --> Line_5 $$ if (!outDir.exists()) [FD]
Line_5 $$ if (!outDir.exists()) --> Line_6 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_6 $$ SwingUtilities.invokeLater(new Runnable() --> Line_8 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "The chosen directory does not exist!", "Directory Not Found Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_5 $$ if (!outDir.exists()) --> Line_11 $$ return [CD]
Line_4 $$ File outDir = new File(outDirTextField.getText()) --> Line_13 $$ if (!outDir.isDirectory()) [FD]
Line_13 $$ if (!outDir.isDirectory()) --> Line_14 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_14 $$ SwingUtilities.invokeLater(new Runnable() --> Line_16 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "The chosen file is not a directory!", "Not a Directory Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_13 $$ if (!outDir.isDirectory()) --> Line_19 $$ return [CD]
Line_4 $$ File outDir = new File(outDirTextField.getText()) --> Line_21 $$ if (!outDir.canWrite()) [FD]
Line_21 $$ if (!outDir.canWrite()) --> Line_22 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_22 $$ SwingUtilities.invokeLater(new Runnable() --> Line_24 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "Cannot write to the chosen directory!", "Directory Not Writeable Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_21 $$ if (!outDir.canWrite()) --> Line_27 $$ return [CD]
Line_31 $$ if (baseUrl.getProtocol().equals("jar")) --> Line_32 $$ String jarPath = baseUrl.getPath() [CD]
Line_31 $$ if (baseUrl.getProtocol().equals("jar")) --> Line_33 $$ jarPath = jarPath.substring(0, jarPath.indexOf('!')) [CD]
Line_31 $$ if (baseUrl.getProtocol().equals("jar")) --> Line_34 $$ if (jarPath.startsWith("file:")) [CD]
Line_45 $$ if (key.startsWith("archive file ")) --> Line_46 $$ inputFileNames.put(Integer.parseInt(key.substring("archive file ".length())), anEntry.getValue().toString()) [CD]
Line_56 $$ if (aFile.exists()) --> Line_57 $$ if (aFile.isFile()) [CD]
Line_57 $$ if (aFile.isFile()) --> Line_58 $$ bytesToWrite += aFile.length() [CD]
Line_57 $$ if (aFile.isFile()) --> Line_61 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_61 $$ SwingUtilities.invokeLater(new Runnable() --> Line_63 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "File \"" + wrongFile.getAbsolutePath() + "\" is not a standard file!", "Non Standard File Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_57 $$ if (aFile.isFile()) --> Line_66 $$ return [CD]
Line_56 $$ if (aFile.exists()) --> Line_70 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_70 $$ SwingUtilities.invokeLater(new Runnable() --> Line_72 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "File \"" + wrongFile.getAbsolutePath() + "\" does not exist!", "File Not Found Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_56 $$ if (aFile.exists()) --> Line_75 $$ return [CD]
Line_4 $$ File outDir = new File(outDirTextField.getText()) --> Line_82 $$ File outFile = new File(outDir.getAbsolutePath() + "/" + tarEntry.getName()) [FD]
Line_83 $$ if (outFile.exists()) --> Line_84 $$ final File wrongFile = outFile [CD]
Line_83 $$ if (outFile.exists()) --> Line_85 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_85 $$ SwingUtilities.invokeLater(new Runnable() --> Line_87 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "Was about to write out file \"" + wrongFile.getAbsolutePath() + "\" but it already " + "exists.\nPlease [re]move existing files out of the way " + "and try again.", "File Not Found Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_84 $$ final File wrongFile = outFile --> Line_87 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "Was about to write out file \"" + wrongFile.getAbsolutePath() + "\" but it already " + "exists.\nPlease [re]move existing files out of the way " + "and try again.", "File Not Found Error", JOptionPane.ERROR_MESSAGE) [FD]
Line_83 $$ if (outFile.exists()) --> Line_90 $$ return [CD]
Line_97 $$ int len = tis.read(buff, 0, buff.length) --> Line_98 $$ while (len != -1) [FD]
Line_98 $$ while (len != -1) --> Line_99 $$ os.write(buff, 0, len) [CD]
Line_96 $$ OutputStream os = new BufferedOutputStream(new FileOutputStream(outFile)) --> Line_99 $$ os.write(buff, 0, len) [FD]
Line_97 $$ int len = tis.read(buff, 0, buff.length) --> Line_99 $$ os.write(buff, 0, len) [FD]
Line_98 $$ while (len != -1) --> Line_101 $$ if (bytesWritten - bytesReported > (10 * 1024 * 1024)) [CD]
Line_101 $$ if (bytesWritten - bytesReported > (10 * 1024 * 1024)) --> Line_103 $$ final int progress = (int) (bytesReported * 100 / bytesToWrite) [CD]
Line_101 $$ if (bytesWritten - bytesReported > (10 * 1024 * 1024)) --> Line_104 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_104 $$ SwingUtilities.invokeLater(new Runnable() --> Line_106 $$ progressBar.setValue(progress) [CD]
Line_103 $$ final int progress = (int) (bytesReported * 100 / bytesToWrite) --> Line_106 $$ progressBar.setValue(progress) [FD]
Line_98 $$ while (len != -1) --> Line_110 $$ len = tis.read(buff, 0, buff.length) [CD]
Line_97 $$ int len = tis.read(buff, 0, buff.length) --> Line_110 $$ len = tis.read(buff, 0, buff.length) [FD]
Line_96 $$ OutputStream os = new BufferedOutputStream(new FileOutputStream(outFile)) --> Line_112 $$ os.close() [FD]
Line_123 $$ if (mfis.getCRC() == expectedCrc) --> Line_124 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_124 $$ SwingUtilities.invokeLater(new Runnable() --> Line_126 $$ progressBar.setValue(0) [CD]
Line_124 $$ SwingUtilities.invokeLater(new Runnable() --> Line_127 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "Extraction completed successfully!", "Done!", JOptionPane.INFORMATION_MESSAGE) [CD]
Line_123 $$ if (mfis.getCRC() == expectedCrc) --> Line_130 $$ return [CD]
Line_123 $$ if (mfis.getCRC() == expectedCrc) --> Line_132 $$ System.err.println("CRC Error: was expecting " + expectedCrc + " but got " + mfis.getCRC()) [CD]
Line_123 $$ if (mfis.getCRC() == expectedCrc) --> Line_133 $$ SwingUtilities.invokeLater(new Runnable() [CD]
Line_133 $$ SwingUtilities.invokeLater(new Runnable() --> Line_135 $$ progressBar.setValue(0) [CD]
Line_133 $$ SwingUtilities.invokeLater(new Runnable() --> Line_136 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "CRC Error: the data extracted does not have the expected CRC!\n" + "You should probably delete the extracted files, as they are " + "likely to be invalid.", "CRC Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_123 $$ if (mfis.getCRC() == expectedCrc) --> Line_139 $$ return [CD]
Line_143 $$ SwingUtilities.invokeLater(new Runnable() --> Line_145 $$ progressBar.setValue(0) [CD]
Line_143 $$ SwingUtilities.invokeLater(new Runnable() --> Line_146 $$ JOptionPane.showMessageDialog(UnpackWizard.this, "Input/Output Error: " + e.getLocalizedMessage(), "Input/Output Error", JOptionPane.ERROR_MESSAGE) [CD]
Line_152 $$ SwingUtilities.invokeLater(new Runnable() --> Line_154 $$ progressBar.setValue(0) [CD]
Line_152 $$ SwingUtilities.invokeLater(new Runnable() --> Line_155 $$ setEnabled(true) [CD]
Line_110 $$ len = tis.read(buff, 0, buff.length) --> Line_98 $$ while (len != -1) [FD]
Line_110 $$ len = tis.read(buff, 0, buff.length) --> Line_99 $$ os.write(buff, 0, len) [FD]
