Line_2 $$ public void testParts() throws Exception --> Line_3 $$ URL url = getClass().getClassLoader().getResource("de/schlund/pfixxml/parts.xml") [CD]
Line_2 $$ public void testParts() throws Exception --> Line_4 $$ InputSource source = new InputSource(url.openStream()) [CD]
Line_3 $$ URL url = getClass().getClassLoader().getResource("de/schlund/pfixxml/parts.xml") --> Line_4 $$ InputSource source = new InputSource(url.openStream()) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_5 $$ source.setSystemId(url.toString()) [CD]
Line_4 $$ InputSource source = new InputSource(url.openStream()) --> Line_5 $$ source.setSystemId(url.toString()) [FD]
Line_3 $$ URL url = getClass().getClassLoader().getResource("de/schlund/pfixxml/parts.xml") --> Line_5 $$ source.setSystemId(url.toString()) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_6 $$ IncludePartsInfo info = IncludePartsInfoParser.parse(source) [CD]
Line_4 $$ InputSource source = new InputSource(url.openStream()) --> Line_6 $$ IncludePartsInfo info = IncludePartsInfoParser.parse(source) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() [CD]
Line_6 $$ IncludePartsInfo info = IncludePartsInfoParser.parse(source) --> Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() [FD]
Line_2 $$ public void testParts() throws Exception --> Line_8 $$ assertEquals(3, parts.size()) [CD]
Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() --> Line_8 $$ assertEquals(3, parts.size()) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_9 $$ assertTrue(parts.containsKey("aaa")) [CD]
Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() --> Line_9 $$ assertTrue(parts.containsKey("aaa")) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_10 $$ assertTrue(parts.containsKey("bbb")) [CD]
Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() --> Line_10 $$ assertTrue(parts.containsKey("bbb")) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_11 $$ assertFalse(parts.containsKey("ccc")) [CD]
Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() --> Line_11 $$ assertFalse(parts.containsKey("ccc")) [FD]
Line_2 $$ public void testParts() throws Exception --> Line_12 $$ assertTrue(parts.containsKey("ddd")) [CD]
Line_7 $$ Map<String, IncludePartInfo> parts = info.getParts() --> Line_12 $$ assertTrue(parts.containsKey("ddd")) [FD]
