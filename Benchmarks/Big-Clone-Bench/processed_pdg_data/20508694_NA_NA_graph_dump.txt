Line_2 $$ private void tar(FileHolder fileHolder, boolean gzipIt) --> Line_3 $$ byte[] buffer = new byte[BUFFER_SIZE] [CD]
Line_2 $$ private void tar(FileHolder fileHolder, boolean gzipIt) --> Line_4 $$ int bytes_read [CD]
Line_2 $$ private void tar(FileHolder fileHolder, boolean gzipIt) --> Line_5 $$ if (fileHolder.selectedFileList.size() == 0) [CD]
Line_5 $$ if (fileHolder.selectedFileList.size() == 0) --> Line_6 $$ return [CD]
Line_2 $$ private void tar(FileHolder fileHolder, boolean gzipIt) --> Line_8 $$ File tarDestFile = new File(fileHolder.destFiles[0]) [CD]
Line_11 $$ if (gzipIt) --> Line_12 $$ outStream = new GZIPOutputStream(outStream) [CD]
Line_10 $$ OutputStream outStream = new FileOutputStream(tarDestFile) --> Line_12 $$ outStream = new GZIPOutputStream(outStream) [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_16 $$ File selectedFile = fileHolder.selectedFileList.get(i) [CD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_16 $$ File selectedFile = fileHolder.selectedFileList.get(i) [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_17 $$ super.currentObjBeingProcessed = selectedFile [CD]
Line_16 $$ File selectedFile = fileHolder.selectedFileList.get(i) --> Line_17 $$ super.currentObjBeingProcessed = selectedFile [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_18 $$ this.inStream = new FileInputStream(selectedFile) [CD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_19 $$ TarEntry tarEntry = null [CD]
Line_16 $$ File selectedFile = fileHolder.selectedFileList.get(i) --> Line_21 $$ tarEntry = new TarEntry(selectedFile, selectedFile.getName()) [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_28 $$ tarOutStream.putNextEntry(tarEntry) [CD]
Line_14 $$ TarOutputStream tarOutStream = new TarOutputStream(outStream) --> Line_28 $$ tarOutStream.putNextEntry(tarEntry) [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_29 $$ while ((bytes_read = inStream.read(buffer)) != -1) [CD]
Line_4 $$ int bytes_read --> Line_29 $$ while ((bytes_read = inStream.read(buffer)) != -1) [FD]
Line_3 $$ byte[] buffer = new byte[BUFFER_SIZE] --> Line_29 $$ while ((bytes_read = inStream.read(buffer)) != -1) [FD]
Line_29 $$ while ((bytes_read = inStream.read(buffer)) != -1) --> Line_30 $$ tarOutStream.write(buffer, 0, bytes_read) [CD]
Line_29 $$ while ((bytes_read = inStream.read(buffer)) != -1) --> Line_30 $$ tarOutStream.write(buffer, 0, bytes_read) [FD]
Line_14 $$ TarOutputStream tarOutStream = new TarOutputStream(outStream) --> Line_30 $$ tarOutStream.write(buffer, 0, bytes_read) [FD]
Line_3 $$ byte[] buffer = new byte[BUFFER_SIZE] --> Line_30 $$ tarOutStream.write(buffer, 0, bytes_read) [FD]
Line_4 $$ int bytes_read --> Line_30 $$ tarOutStream.write(buffer, 0, bytes_read) [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_32 $$ tarOutStream.closeEntry() [CD]
Line_14 $$ TarOutputStream tarOutStream = new TarOutputStream(outStream) --> Line_32 $$ tarOutStream.closeEntry() [FD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_33 $$ inStream.close() [CD]
Line_15 $$ for (int i = 0; i < fileHolder.selectedFileList.size(); i++) --> Line_34 $$ super.processorSyncFlag.restartWaitUntilFalse() [CD]
Line_14 $$ TarOutputStream tarOutStream = new TarOutputStream(outStream) --> Line_36 $$ tarOutStream.close() [FD]
