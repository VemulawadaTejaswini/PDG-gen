Line_2 $$ protected static boolean copyFile(File src, File dest) --> Line_4 $$ if (!dest.exists()) [FD]
Line_4 $$ if (!dest.exists()) --> Line_5 $$ dest.createNewFile() [CD]
Line_2 $$ protected static boolean copyFile(File src, File dest) --> Line_5 $$ dest.createNewFile() [FD]
Line_10 $$ int readSize = 0 --> Line_11 $$ do [FD]
Line_11 $$ do --> Line_12 $$ readSize = fis.read(temp) [CD]
Line_10 $$ int readSize = 0 --> Line_12 $$ readSize = fis.read(temp) [FD]
Line_7 $$ FileInputStream fis = new FileInputStream(src) --> Line_12 $$ readSize = fis.read(temp) [FD]
Line_9 $$ byte[] temp = new byte[1024 * 8] --> Line_12 $$ readSize = fis.read(temp) [FD]
Line_11 $$ do --> Line_13 $$ fos.write(temp, 0, readSize) [CD]
Line_8 $$ FileOutputStream fos = new FileOutputStream(dest) --> Line_13 $$ fos.write(temp, 0, readSize) [FD]
Line_9 $$ byte[] temp = new byte[1024 * 8] --> Line_13 $$ fos.write(temp, 0, readSize) [FD]
Line_12 $$ readSize = fis.read(temp) --> Line_13 $$ fos.write(temp, 0, readSize) [FD]
Line_10 $$ int readSize = 0 --> Line_13 $$ fos.write(temp, 0, readSize) [FD]
Line_9 $$ byte[] temp = new byte[1024 * 8] --> Line_15 $$ temp = null [FD]
Line_7 $$ FileInputStream fis = new FileInputStream(src) --> Line_16 $$ fis.close() [FD]
Line_8 $$ FileOutputStream fos = new FileOutputStream(dest) --> Line_17 $$ fos.flush() [FD]
Line_8 $$ FileOutputStream fos = new FileOutputStream(dest) --> Line_18 $$ fos.close() [FD]
Line_2 $$ protected static boolean copyFile(File src, File dest) --> Line_22 $$ return true [CD]
Line_12 $$ readSize = fis.read(temp) --> Line_11 $$ do [FD]
