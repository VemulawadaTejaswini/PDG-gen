Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_3 $$ if (file == null || !file.exists()) [CD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_3 $$ if (file == null || !file.exists()) [FD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_6 $$ File directory = new File("lib/") [CD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_7 $$ File dest = new File(directory, file.getName()) [CD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_7 $$ File dest = new File(directory, file.getName()) [FD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_8 $$ File parent = dest.getParentFile() [CD]
Line_7 $$ File dest = new File(directory, file.getName()) --> Line_8 $$ File parent = dest.getParentFile() [FD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_9 $$ while (parent != null && !parent.equals(directory)) [CD]
Line_8 $$ File parent = dest.getParentFile() --> Line_9 $$ while (parent != null && !parent.equals(directory)) [FD]
Line_6 $$ File directory = new File("lib/") --> Line_9 $$ while (parent != null && !parent.equals(directory)) [FD]
Line_9 $$ while (parent != null && !parent.equals(directory)) --> Line_10 $$ parent = parent.getParentFile() [CD]
Line_8 $$ File parent = dest.getParentFile() --> Line_10 $$ parent = parent.getParentFile() [FD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_12 $$ if (parent.equals(directory)) [CD]
Line_10 $$ parent = parent.getParentFile() --> Line_12 $$ if (parent.equals(directory)) [FD]
Line_8 $$ File parent = dest.getParentFile() --> Line_12 $$ if (parent.equals(directory)) [FD]
Line_6 $$ File directory = new File("lib/") --> Line_12 $$ if (parent.equals(directory)) [FD]
Line_12 $$ if (parent.equals(directory)) --> Line_13 $$ return file [CD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_15 $$ FileChannel in = null [CD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_16 $$ FileChannel out = null [CD]
Line_15 $$ FileChannel in = null --> Line_18 $$ in = new FileInputStream(file).getChannel() [FD]
Line_16 $$ FileChannel out = null --> Line_19 $$ out = new FileOutputStream(dest).getChannel() [FD]
Line_15 $$ FileChannel in = null --> Line_20 $$ in.transferTo(0, in.size(), out) [FD]
Line_18 $$ in = new FileInputStream(file).getChannel() --> Line_20 $$ in.transferTo(0, in.size(), out) [FD]
Line_16 $$ FileChannel out = null --> Line_20 $$ in.transferTo(0, in.size(), out) [FD]
Line_19 $$ out = new FileOutputStream(dest).getChannel() --> Line_20 $$ in.transferTo(0, in.size(), out) [FD]
Line_15 $$ FileChannel in = null --> Line_22 $$ if (in != null) [FD]
Line_18 $$ in = new FileInputStream(file).getChannel() --> Line_22 $$ if (in != null) [FD]
Line_15 $$ FileChannel in = null --> Line_24 $$ in.close() [FD]
Line_18 $$ in = new FileInputStream(file).getChannel() --> Line_24 $$ in.close() [FD]
Line_16 $$ FileChannel out = null --> Line_28 $$ if (out != null) [FD]
Line_19 $$ out = new FileOutputStream(dest).getChannel() --> Line_28 $$ if (out != null) [FD]
Line_16 $$ FileChannel out = null --> Line_30 $$ out.close() [FD]
Line_19 $$ out = new FileOutputStream(dest).getChannel() --> Line_30 $$ out.close() [FD]
Line_2 $$ public static File copyToLibDirectory(final File file) throws FileNotFoundException, IOException --> Line_35 $$ return dest [CD]
Line_10 $$ parent = parent.getParentFile() --> Line_9 $$ while (parent != null && !parent.equals(directory)) [FD]
