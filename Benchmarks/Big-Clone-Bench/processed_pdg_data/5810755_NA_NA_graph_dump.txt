Line_2 $$ public Response callService(RemoteCallUrl urlModel) throws RemoteCallFailedException --> Line_3 $$ String path [CD]
Line_2 $$ public Response callService(RemoteCallUrl urlModel) throws RemoteCallFailedException --> Line_4 $$ path = urlModel.getRootPath() + urlModel.getServicePath() [CD]
Line_2 $$ public Response callService(RemoteCallUrl urlModel) throws RemoteCallFailedException --> Line_4 $$ path = urlModel.getRootPath() + urlModel.getServicePath() [FD]
Line_3 $$ String path --> Line_4 $$ path = urlModel.getRootPath() + urlModel.getServicePath() [FD]
Line_2 $$ public Response callService(RemoteCallUrl urlModel) throws RemoteCallFailedException --> Line_6 $$ URL url = new URL(HTTP_PROTOCOL, urlModel.getHost(), urlModel.getPort(), path) [FD]
Line_6 $$ URL url = new URL(HTTP_PROTOCOL, urlModel.getHost(), urlModel.getPort(), path) --> Line_7 $$ URLConnection urlConnection = url.openConnection() [FD]
Line_6 $$ URL url = new URL(HTTP_PROTOCOL, urlModel.getHost(), urlModel.getPort(), path) --> Line_8 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_9 $$ String inputLine --> Line_11 $$ while ((inputLine = in.readLine()) != null) data += inputLine [FD]
Line_8 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_11 $$ while ((inputLine = in.readLine()) != null) data += inputLine [FD]
Line_10 $$ String data = "" --> Line_11 $$ while ((inputLine = in.readLine()) != null) data += inputLine [FD]
Line_12 $$ Response remoteData = new Response(new String(data)) --> Line_13 $$ remoteData.setStatus(urlConnection.getHeaderField(Response.RPC_STATUS_NAME)) [FD]
Line_7 $$ URLConnection urlConnection = url.openConnection() --> Line_13 $$ remoteData.setStatus(urlConnection.getHeaderField(Response.RPC_STATUS_NAME)) [FD]
Line_8 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_14 $$ in.close() [FD]
