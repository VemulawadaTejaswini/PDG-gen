Line_2 $$ public static Recipes addRecipe(Lists complexity, String about, String title, Users user, int preparationTime, int cookingTime, int servings, Lists dishType, String picUrl, Iterable<String> instructions) throws Exception --> Line_3 $$ URL url = new URL(picUrl) [CD]
Line_2 $$ public static Recipes addRecipe(Lists complexity, String about, String title, Users user, int preparationTime, int cookingTime, int servings, Lists dishType, String picUrl, Iterable<String> instructions) throws Exception --> Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [CD]
Line_3 $$ URL url = new URL(picUrl) --> Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public static Recipes addRecipe(Lists complexity, String about, String title, Users user, int preparationTime, int cookingTime, int servings, Lists dishType, String picUrl, Iterable<String> instructions) throws Exception --> Line_5 $$ conn.connect() [CD]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_5 $$ conn.connect() [FD]
Line_2 $$ public static Recipes addRecipe(Lists complexity, String about, String title, Users user, int preparationTime, int cookingTime, int servings, Lists dishType, String picUrl, Iterable<String> instructions) throws Exception --> Line_6 $$ Recipes rec = new Recipes(user, title, about, preparationTime, cookingTime, servings, complexity, dishType, Hibernate.createBlob(conn.getInputStream(), conn.getContentLength()), new Date(), 0) [CD]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection() --> Line_6 $$ Recipes rec = new Recipes(user, title, about, preparationTime, cookingTime, servings, complexity, dishType, Hibernate.createBlob(conn.getInputStream(), conn.getContentLength()), new Date(), 0) [FD]
Line_2 $$ public static Recipes addRecipe(Lists complexity, String about, String title, Users user, int preparationTime, int cookingTime, int servings, Lists dishType, String picUrl, Iterable<String> instructions) throws Exception --> Line_7 $$ session.save(rec) [CD]
Line_6 $$ Recipes rec = new Recipes(user, title, about, preparationTime, cookingTime, servings, complexity, dishType, Hibernate.createBlob(conn.getInputStream(), conn.getContentLength()), new Date(), 0) --> Line_7 $$ session.save(rec) [FD]
Line_6 $$ Recipes rec = new Recipes(user, title, about, preparationTime, cookingTime, servings, complexity, dishType, Hibernate.createBlob(conn.getInputStream(), conn.getContentLength()), new Date(), 0) --> Line_9 $$ createRecipeInstructions(rec, s) [FD]
Line_8 $$ for (String s : instructions) --> Line_9 $$ createRecipeInstructions(rec, s) [FD]
Line_2 $$ public static Recipes addRecipe(Lists complexity, String about, String title, Users user, int preparationTime, int cookingTime, int servings, Lists dishType, String picUrl, Iterable<String> instructions) throws Exception --> Line_11 $$ return rec [CD]
