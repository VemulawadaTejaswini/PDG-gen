Line_4 $$ if (logger.isDebugEnabled()) --> Line_5 $$ logger.debug("Searching through bing...") [CD]
Line_2 $$ private BingResponse queryBing(BingRequest request) throws BingException --> Line_7 $$ String query = request.getQuery() [FD]
Line_7 $$ String query = request.getQuery() --> Line_8 $$ query = URLEncoder.encode(query, "UTF-8") [FD]
Line_2 $$ private BingResponse queryBing(BingRequest request) throws BingException --> Line_9 $$ URL url = new URL("http://api.bing.net/json.aspx?" + "AppId=" + request.getAppId() + "&Query=" + query + "&Sources=" + request.getType().toString()) [FD]
Line_11 $$ if (useProxy) --> Line_12 $$ if (proxyType == null) [CD]
Line_11 $$ if (useProxy) --> Line_15 $$ connection = ProxyWrapper.getURLConnection(url.toString(), proxyType.toString(), proxyHost, proxyPort) [CD]
Line_10 $$ URLConnection connection = null --> Line_15 $$ connection = ProxyWrapper.getURLConnection(url.toString(), proxyType.toString(), proxyHost, proxyPort) [FD]
Line_9 $$ URL url = new URL("http://api.bing.net/json.aspx?" + "AppId=" + request.getAppId() + "&Query=" + query + "&Sources=" + request.getType().toString()) --> Line_15 $$ connection = ProxyWrapper.getURLConnection(url.toString(), proxyType.toString(), proxyHost, proxyPort) [FD]
Line_11 $$ if (useProxy) --> Line_17 $$ connection = new URL(url.toString()).openConnection() [CD]
Line_10 $$ URLConnection connection = null --> Line_17 $$ connection = new URL(url.toString()).openConnection() [FD]
Line_15 $$ connection = ProxyWrapper.getURLConnection(url.toString(), proxyType.toString(), proxyHost, proxyPort) --> Line_17 $$ connection = new URL(url.toString()).openConnection() [FD]
Line_9 $$ URL url = new URL("http://api.bing.net/json.aspx?" + "AppId=" + request.getAppId() + "&Query=" + query + "&Sources=" + request.getType().toString()) --> Line_17 $$ connection = new URL(url.toString()).openConnection() [FD]
Line_10 $$ URLConnection connection = null --> Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_15 $$ connection = ProxyWrapper.getURLConnection(url.toString(), proxyType.toString(), proxyHost, proxyPort) --> Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_17 $$ connection = new URL(url.toString()).openConnection() --> Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_19 $$ String line --> Line_22 $$ while ((line = reader.readLine()) != null) [FD]
Line_21 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_22 $$ while ((line = reader.readLine()) != null) [FD]
Line_22 $$ while ((line = reader.readLine()) != null) --> Line_23 $$ builder.append(line) [CD]
Line_22 $$ while ((line = reader.readLine()) != null) --> Line_23 $$ builder.append(line) [FD]
Line_20 $$ StringBuilder builder = new StringBuilder() --> Line_23 $$ builder.append(line) [FD]
Line_19 $$ String line --> Line_23 $$ builder.append(line) [FD]
Line_20 $$ StringBuilder builder = new StringBuilder() --> Line_25 $$ String response = builder.toString() [FD]
Line_26 $$ ResponseParser parser = new ResponseParser() --> Line_27 $$ parser.getError(response) [FD]
Line_25 $$ String response = builder.toString() --> Line_27 $$ parser.getError(response) [FD]
Line_26 $$ ResponseParser parser = new ResponseParser() --> Line_28 $$ return parser.getResults(response) [FD]
Line_25 $$ String response = builder.toString() --> Line_28 $$ return parser.getResults(response) [FD]
