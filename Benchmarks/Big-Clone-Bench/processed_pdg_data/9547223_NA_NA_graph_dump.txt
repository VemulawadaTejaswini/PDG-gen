Line_2 $$ public void testStopPoll() throws Exception --> Line_3 $$ for (int i = 0; i < 500; i++) index(masterClient, "id", i, "name", "name = " + i) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_4 $$ masterClient.commit() [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_5 $$ NamedList masterQueryRsp = query("*:*", masterClient) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_6 $$ SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get("response") [CD]
Line_5 $$ NamedList masterQueryRsp = query("*:*", masterClient) --> Line_6 $$ SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get("response") [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_7 $$ assertEquals(500, masterQueryResult.getNumFound()) [CD]
Line_6 $$ SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get("response") --> Line_7 $$ assertEquals(500, masterQueryResult.getNumFound()) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_8 $$ Thread.sleep(3000) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_9 $$ NamedList slaveQueryRsp = query("*:*", slaveClient) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [CD]
Line_9 $$ NamedList slaveQueryRsp = query("*:*", slaveClient) --> Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_11 $$ assertEquals(500, slaveQueryResult.getNumFound()) [CD]
Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_11 $$ assertEquals(500, slaveQueryResult.getNumFound()) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_12 $$ String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null) [CD]
Line_6 $$ SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get("response") --> Line_12 $$ String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null) [FD]
Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_12 $$ String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_13 $$ assertEquals(null, cmp) [CD]
Line_12 $$ String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null) --> Line_13 $$ assertEquals(null, cmp) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_14 $$ String masterUrl = "http://localhost:" + slaveJetty.getLocalPort() + "/solr/replication?command=disablepoll" [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_15 $$ URL url = new URL(masterUrl) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_16 $$ InputStream stream = url.openStream() [CD]
Line_15 $$ URL url = new URL(masterUrl) --> Line_16 $$ InputStream stream = url.openStream() [FD]
Line_16 $$ InputStream stream = url.openStream() --> Line_18 $$ stream.close() [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_21 $$ index(masterClient, "id", 501, "name", "name = " + 501) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_22 $$ masterClient.commit() [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_23 $$ Thread.sleep(3000) [CD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_24 $$ slaveQueryRsp = query("*:*", slaveClient) [CD]
Line_9 $$ NamedList slaveQueryRsp = query("*:*", slaveClient) --> Line_24 $$ slaveQueryRsp = query("*:*", slaveClient) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [CD]
Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_9 $$ NamedList slaveQueryRsp = query("*:*", slaveClient) --> Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_24 $$ slaveQueryRsp = query("*:*", slaveClient) --> Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_26 $$ assertEquals(500, slaveQueryResult.getNumFound()) [CD]
Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_26 $$ assertEquals(500, slaveQueryResult.getNumFound()) [FD]
Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_26 $$ assertEquals(500, slaveQueryResult.getNumFound()) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_27 $$ slaveQueryRsp = query("*:*", masterClient) [CD]
Line_9 $$ NamedList slaveQueryRsp = query("*:*", slaveClient) --> Line_27 $$ slaveQueryRsp = query("*:*", masterClient) [FD]
Line_24 $$ slaveQueryRsp = query("*:*", slaveClient) --> Line_27 $$ slaveQueryRsp = query("*:*", masterClient) [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [CD]
Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_9 $$ NamedList slaveQueryRsp = query("*:*", slaveClient) --> Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_24 $$ slaveQueryRsp = query("*:*", slaveClient) --> Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_27 $$ slaveQueryRsp = query("*:*", masterClient) --> Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") [FD]
Line_2 $$ public void testStopPoll() throws Exception --> Line_29 $$ assertEquals(501, slaveQueryResult.getNumFound()) [CD]
Line_10 $$ SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_29 $$ assertEquals(501, slaveQueryResult.getNumFound()) [FD]
Line_25 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_29 $$ assertEquals(501, slaveQueryResult.getNumFound()) [FD]
Line_28 $$ slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get("response") --> Line_29 $$ assertEquals(501, slaveQueryResult.getNumFound()) [FD]
