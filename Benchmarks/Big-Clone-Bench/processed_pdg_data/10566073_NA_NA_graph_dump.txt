Line_2 $$ public IntactOntology parseOboFile(URL url, boolean keepTemporaryFile) throws PsiLoaderException --> Line_3 $$ if (url == null) [CD]
Line_2 $$ public IntactOntology parseOboFile(URL url, boolean keepTemporaryFile) throws PsiLoaderException --> Line_3 $$ if (url == null) [FD]
Line_2 $$ public IntactOntology parseOboFile(URL url, boolean keepTemporaryFile) throws PsiLoaderException --> Line_6 $$ StringBuffer buffer = new StringBuffer(1024 * 8) [CD]
Line_2 $$ public IntactOntology parseOboFile(URL url, boolean keepTemporaryFile) throws PsiLoaderException --> Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()), 1024) [FD]
Line_10 $$ String line --> Line_12 $$ while ((line = in.readLine()) != null) [FD]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()), 1024) --> Line_12 $$ while ((line = in.readLine()) != null) [FD]
Line_12 $$ while ((line = in.readLine()) != null) --> Line_13 $$ lineCount++ [CD]
Line_11 $$ int lineCount = 0 --> Line_13 $$ lineCount++ [FD]
Line_12 $$ while ((line = in.readLine()) != null) --> Line_14 $$ buffer.append(line).append(NEW_LINE) [CD]
Line_12 $$ while ((line = in.readLine()) != null) --> Line_14 $$ buffer.append(line).append(NEW_LINE) [FD]
Line_6 $$ StringBuffer buffer = new StringBuffer(1024 * 8) --> Line_14 $$ buffer.append(line).append(NEW_LINE) [FD]
Line_10 $$ String line --> Line_14 $$ buffer.append(line).append(NEW_LINE) [FD]
Line_12 $$ while ((line = in.readLine()) != null) --> Line_15 $$ if ((lineCount % 20) == 0) [CD]
Line_15 $$ if ((lineCount % 20) == 0) --> Line_16 $$ System.out.print(".") [CD]
Line_15 $$ if ((lineCount % 20) == 0) --> Line_17 $$ System.out.flush() [CD]
Line_15 $$ if ((lineCount % 20) == 0) --> Line_18 $$ if ((lineCount % 500) == 0) [CD]
Line_18 $$ if ((lineCount % 500) == 0) --> Line_19 $$ System.out.println("   " + lineCount) [CD]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()), 1024) --> Line_23 $$ in.close() [FD]
Line_24 $$ File tempDirectory = new File(System.getProperty("java.io.tmpdir", "tmp")) --> Line_25 $$ if (!tempDirectory.exists()) [FD]
Line_25 $$ if (!tempDirectory.exists()) --> Line_26 $$ if (!tempDirectory.mkdirs()) [CD]
Line_24 $$ File tempDirectory = new File(System.getProperty("java.io.tmpdir", "tmp")) --> Line_26 $$ if (!tempDirectory.mkdirs()) [FD]
Line_24 $$ File tempDirectory = new File(System.getProperty("java.io.tmpdir", "tmp")) --> Line_27 $$ throw new IOException("Cannot create temp directory: " + tempDirectory.getAbsolutePath()) [FD]
Line_24 $$ File tempDirectory = new File(System.getProperty("java.io.tmpdir", "tmp")) --> Line_30 $$ System.out.println("Using temp directory: " + tempDirectory.getAbsolutePath()) [FD]
Line_24 $$ File tempDirectory = new File(System.getProperty("java.io.tmpdir", "tmp")) --> Line_31 $$ File tempFile = File.createTempFile("psimi.v25.", ".obo", tempDirectory) [FD]
Line_31 $$ File tempFile = File.createTempFile("psimi.v25.", ".obo", tempDirectory) --> Line_32 $$ tempFile.deleteOnExit() [FD]
Line_31 $$ File tempFile = File.createTempFile("psimi.v25.", ".obo", tempDirectory) --> Line_33 $$ tempFile.deleteOnExit() [FD]
Line_31 $$ File tempFile = File.createTempFile("psimi.v25.", ".obo", tempDirectory) --> Line_34 $$ System.out.println("The OBO file is temporary store as: " + tempFile.getAbsolutePath()) [FD]
Line_35 $$ BufferedWriter out = new BufferedWriter(new FileWriter(tempFile), 1024) --> Line_36 $$ out.write(buffer.toString()) [FD]
Line_6 $$ StringBuffer buffer = new StringBuffer(1024 * 8) --> Line_36 $$ out.write(buffer.toString()) [FD]
Line_35 $$ BufferedWriter out = new BufferedWriter(new FileWriter(tempFile), 1024) --> Line_37 $$ out.flush() [FD]
Line_35 $$ BufferedWriter out = new BufferedWriter(new FileWriter(tempFile), 1024) --> Line_38 $$ out.close() [FD]
Line_31 $$ File tempFile = File.createTempFile("psimi.v25.", ".obo", tempDirectory) --> Line_39 $$ return parseOboFile(tempFile) [FD]
