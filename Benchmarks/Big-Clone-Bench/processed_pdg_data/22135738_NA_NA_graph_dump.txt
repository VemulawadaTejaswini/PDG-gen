Line_2 $$ protected void sort(double[] a) throws Exception --> Line_3 $$ for (int i = a.length - 1; i >= 0; i--) [CD]
Line_3 $$ for (int i = a.length - 1; i >= 0; i--) --> Line_4 $$ boolean swapped = false [CD]
Line_3 $$ for (int i = a.length - 1; i >= 0; i--) --> Line_5 $$ for (int j = 0; j < i; j++) [CD]
Line_3 $$ for (int i = a.length - 1; i >= 0; i--) --> Line_5 $$ for (int j = 0; j < i; j++) [FD]
Line_5 $$ for (int j = 0; j < i; j++) --> Line_6 $$ if (a[j] > a[j + 1]) [CD]
Line_6 $$ if (a[j] > a[j + 1]) --> Line_7 $$ double d = a[j] [CD]
Line_6 $$ if (a[j] > a[j + 1]) --> Line_8 $$ a[j] = a[j + 1] [CD]
Line_6 $$ if (a[j] > a[j + 1]) --> Line_9 $$ a[j + 1] = d [CD]
Line_7 $$ double d = a[j] --> Line_9 $$ a[j + 1] = d [FD]
Line_6 $$ if (a[j] > a[j + 1]) --> Line_10 $$ swapped = true [CD]
Line_4 $$ boolean swapped = false --> Line_10 $$ swapped = true [FD]
Line_3 $$ for (int i = a.length - 1; i >= 0; i--) --> Line_13 $$ if (!swapped) [CD]
Line_10 $$ swapped = true --> Line_13 $$ if (!swapped) [FD]
Line_4 $$ boolean swapped = false --> Line_13 $$ if (!swapped) [FD]
