Line_2 $$ public static void main(String[] args) throws Exception --> Line_3 $$ SocketConnector socketConnector = new SocketConnector() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_4 $$ socketConnector.setPort(6080) [CD]
Line_3 $$ SocketConnector socketConnector = new SocketConnector() --> Line_4 $$ socketConnector.setPort(6080) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_6 $$ sslSocketConnector.setPort(6443) [CD]
Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() --> Line_6 $$ sslSocketConnector.setPort(6443) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_7 $$ String serverKeystore = MockHttpListenerWithAuthentication.class.getClassLoader().getResource("cert/serverkeystore.jks").getPath() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_8 $$ sslSocketConnector.setKeystore(serverKeystore) [CD]
Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() --> Line_8 $$ sslSocketConnector.setKeystore(serverKeystore) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_9 $$ sslSocketConnector.setKeyPassword("serverpass") [CD]
Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() --> Line_9 $$ sslSocketConnector.setKeyPassword("serverpass") [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_10 $$ String serverTruststore = MockHttpListenerWithAuthentication.class.getClassLoader().getResource("cert/servertruststore.jks").getPath() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_11 $$ sslSocketConnector.setTruststore(serverTruststore) [CD]
Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() --> Line_11 $$ sslSocketConnector.setTruststore(serverTruststore) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_12 $$ sslSocketConnector.setTrustPassword("serverpass") [CD]
Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() --> Line_12 $$ sslSocketConnector.setTrustPassword("serverpass") [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_13 $$ server.addConnector(socketConnector) [CD]
Line_3 $$ SocketConnector socketConnector = new SocketConnector() --> Line_13 $$ server.addConnector(socketConnector) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_14 $$ server.addConnector(sslSocketConnector) [CD]
Line_5 $$ SslSocketConnector sslSocketConnector = new SslSocketConnector() --> Line_14 $$ server.addConnector(sslSocketConnector) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_15 $$ SecurityHandler securityHandler = createBasicAuthenticationSecurityHandler() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_16 $$ HandlerList handlerList = new HandlerList() [CD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_17 $$ handlerList.addHandler(securityHandler) [CD]
Line_16 $$ HandlerList handlerList = new HandlerList() --> Line_17 $$ handlerList.addHandler(securityHandler) [FD]
Line_15 $$ SecurityHandler securityHandler = createBasicAuthenticationSecurityHandler() --> Line_17 $$ handlerList.addHandler(securityHandler) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_18 $$ handlerList.addHandler(new AbstractHandler() [CD]
Line_16 $$ HandlerList handlerList = new HandlerList() --> Line_18 $$ handlerList.addHandler(new AbstractHandler() [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_20 $$ System.out.println("uri: " + httpServletRequest.getRequestURI()) [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_20 $$ System.out.println("uri: " + httpServletRequest.getRequestURI()) [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_21 $$ System.out.println("queryString: " + httpServletRequest.getQueryString()) [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_21 $$ System.out.println("queryString: " + httpServletRequest.getQueryString()) [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_22 $$ System.out.println("method: " + httpServletRequest.getMethod()) [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_22 $$ System.out.println("method: " + httpServletRequest.getMethod()) [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_23 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_24 $$ IOUtils.copy(httpServletRequest.getInputStream(), baos) [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_24 $$ IOUtils.copy(httpServletRequest.getInputStream(), baos) [FD]
Line_23 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_24 $$ IOUtils.copy(httpServletRequest.getInputStream(), baos) [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_25 $$ System.out.println("body: " + baos.toString()) [CD]
Line_23 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream() --> Line_25 $$ System.out.println("body: " + baos.toString()) [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_26 $$ PrintWriter writer = httpServletResponse.getWriter() [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_26 $$ PrintWriter writer = httpServletResponse.getWriter() [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_27 $$ writer.append("testsvar") [CD]
Line_26 $$ PrintWriter writer = httpServletResponse.getWriter() --> Line_27 $$ writer.append("testsvar") [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_28 $$ Random r = new Random() [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_29 $$ for (int j = 0; j < 10; j++) [CD]
Line_29 $$ for (int j = 0; j < 10; j++) --> Line_30 $$ int value = r.nextInt(Integer.MAX_VALUE) [CD]
Line_28 $$ Random r = new Random() --> Line_30 $$ int value = r.nextInt(Integer.MAX_VALUE) [FD]
Line_29 $$ for (int j = 0; j < 10; j++) --> Line_31 $$ writer.append(value + "") [CD]
Line_26 $$ PrintWriter writer = httpServletResponse.getWriter() --> Line_31 $$ writer.append(value + "") [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_33 $$ System.out.println() [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_34 $$ writer.close() [CD]
Line_26 $$ PrintWriter writer = httpServletResponse.getWriter() --> Line_34 $$ writer.close() [FD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_35 $$ httpServletResponse.setStatus(HttpServletResponse.SC_OK) [CD]
Line_18 $$ handlerList.addHandler(new AbstractHandler() --> Line_35 $$ httpServletResponse.setStatus(HttpServletResponse.SC_OK) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_38 $$ server.addHandler(handlerList) [CD]
Line_16 $$ HandlerList handlerList = new HandlerList() --> Line_38 $$ server.addHandler(handlerList) [FD]
Line_2 $$ public static void main(String[] args) throws Exception --> Line_39 $$ server.start() [CD]
