Line_2 $$ private static String getServiceResponse(final String requestName, final Template template, final Map variables) --> Line_3 $$ OutputStreamWriter outputWriter = null [CD]
Line_2 $$ private static String getServiceResponse(final String requestName, final Template template, final Map variables) --> Line_7 $$ template.merge(context, writer) [FD]
Line_6 $$ final VelocityContext context = new VelocityContext(variables) --> Line_7 $$ template.merge(context, writer) [FD]
Line_5 $$ final StringWriter writer = new StringWriter() --> Line_7 $$ template.merge(context, writer) [FD]
Line_5 $$ final StringWriter writer = new StringWriter() --> Line_8 $$ final String request = writer.toString() [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_10 $$ urlConnection.setUseCaches(false) [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_11 $$ urlConnection.setDoOutput(true) [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_12 $$ urlConnection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2b4) Gecko/20091124 Firefox/3.6b4") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_13 $$ urlConnection.setRequestProperty("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_14 $$ urlConnection.setRequestProperty("Accept-Language", "en-us,en;q=0.5") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_15 $$ urlConnection.setRequestProperty("Accept-Charset", "ISO-8859-1,utf-8;q=0.7,*;q=0.7") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_16 $$ urlConnection.setRequestProperty("Accept-Encoding", "gzip,deflate") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_17 $$ urlConnection.setRequestProperty("Keep-Alive", "115") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_18 $$ urlConnection.setRequestProperty("Connection", "keep-alive") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_19 $$ urlConnection.setRequestProperty("Content-Type", "text/xml; charset=utf-8") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_20 $$ urlConnection.setRequestProperty("Content-Length", "" + request.length()) [FD]
Line_8 $$ final String request = writer.toString() --> Line_20 $$ urlConnection.setRequestProperty("Content-Length", "" + request.length()) [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_21 $$ urlConnection.setRequestProperty("SOAPAction", requestName) [FD]
Line_2 $$ private static String getServiceResponse(final String requestName, final Template template, final Map variables) --> Line_21 $$ urlConnection.setRequestProperty("SOAPAction", requestName) [FD]
Line_3 $$ OutputStreamWriter outputWriter = null --> Line_22 $$ outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), "UTF-8") [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_22 $$ outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), "UTF-8") [FD]
Line_3 $$ OutputStreamWriter outputWriter = null --> Line_23 $$ outputWriter.write(request) [FD]
Line_22 $$ outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), "UTF-8") --> Line_23 $$ outputWriter.write(request) [FD]
Line_8 $$ final String request = writer.toString() --> Line_23 $$ outputWriter.write(request) [FD]
Line_3 $$ OutputStreamWriter outputWriter = null --> Line_24 $$ outputWriter.flush() [FD]
Line_22 $$ outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), "UTF-8") --> Line_24 $$ outputWriter.flush() [FD]
Line_9 $$ final URLConnection urlConnection = new URL(SERVICE_URL).openConnection() --> Line_25 $$ final InputStream result = urlConnection.getInputStream() [FD]
Line_25 $$ final InputStream result = urlConnection.getInputStream() --> Line_26 $$ return IOUtils.toString(result) [FD]
Line_3 $$ OutputStreamWriter outputWriter = null --> Line_30 $$ if (outputWriter != null) [FD]
Line_22 $$ outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), "UTF-8") --> Line_30 $$ if (outputWriter != null) [FD]
Line_3 $$ OutputStreamWriter outputWriter = null --> Line_32 $$ outputWriter.close() [FD]
Line_22 $$ outputWriter = new OutputStreamWriter(urlConnection.getOutputStream(), "UTF-8") --> Line_32 $$ outputWriter.close() [FD]
