Line_2 $$ public BufferedImageAndBytes load(T thing) --> Line_3 $$ String iurl = resolver.getUrl(thing) [CD]
Line_2 $$ public BufferedImageAndBytes load(T thing) --> Line_3 $$ String iurl = resolver.getUrl(thing) [FD]
Line_2 $$ public BufferedImageAndBytes load(T thing) --> Line_4 $$ URL url [CD]
Line_2 $$ public BufferedImageAndBytes load(T thing) --> Line_5 $$ for (int k = 0; k < nTries; k++) [CD]
Line_5 $$ for (int k = 0; k < nTries; k++) --> Line_6 $$ if (k > 0) [CD]
Line_5 $$ for (int k = 0; k < nTries; k++) --> Line_6 $$ if (k > 0) [FD]
Line_6 $$ if (k > 0) --> Line_7 $$ logger.debug("retry #" + k) [CD]
Line_4 $$ URL url --> Line_10 $$ url = new URL(iurl) [FD]
Line_10 $$ url = new URL(iurl) --> Line_11 $$ URLConnection connection = url.openConnection() [FD]
Line_4 $$ URL url --> Line_11 $$ URLConnection connection = url.openConnection() [FD]
Line_12 $$ if (userAgent != null) --> Line_13 $$ connection.setRequestProperty("User-Agent", userAgent) [CD]
Line_11 $$ URLConnection connection = url.openConnection() --> Line_13 $$ connection.setRequestProperty("User-Agent", userAgent) [FD]
Line_11 $$ URLConnection connection = url.openConnection() --> Line_15 $$ InputStream is = new BufferedInputStream(connection.getInputStream()) [FD]
Line_17 $$ int b --> Line_18 $$ while ((b = is.read()) != -1) [FD]
Line_15 $$ InputStream is = new BufferedInputStream(connection.getInputStream()) --> Line_18 $$ while ((b = is.read()) != -1) [FD]
Line_18 $$ while ((b = is.read()) != -1) --> Line_19 $$ baos.write(b) [CD]
Line_18 $$ while ((b = is.read()) != -1) --> Line_19 $$ baos.write(b) [FD]
Line_16 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(40000) --> Line_19 $$ baos.write(b) [FD]
Line_17 $$ int b --> Line_19 $$ baos.write(b) [FD]
Line_15 $$ InputStream is = new BufferedInputStream(connection.getInputStream()) --> Line_21 $$ is.close() [FD]
Line_16 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream(40000) --> Line_22 $$ byte[] bytes = baos.toByteArray() [FD]
Line_2 $$ public BufferedImageAndBytes load(T thing) --> Line_32 $$ return null [CD]
