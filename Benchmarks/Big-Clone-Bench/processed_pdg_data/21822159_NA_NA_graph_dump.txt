Line_2 $$ private void loadMtlFile(URL url) throws IOException --> Line_3 $$ InputStream is = url.openStream() [CD]
Line_2 $$ private void loadMtlFile(URL url) throws IOException --> Line_3 $$ InputStream is = url.openStream() [FD]
Line_2 $$ private void loadMtlFile(URL url) throws IOException --> Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is)) [CD]
Line_2 $$ private void loadMtlFile(URL url) throws IOException --> Line_5 $$ int linecounter = 0 [CD]
Line_2 $$ private void loadMtlFile(URL url) throws IOException --> Line_6 $$ String[] params = null [CD]
Line_8 $$ String line --> Line_10 $$ while (((line = br.readLine()) != null)) [FD]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is)) --> Line_10 $$ while (((line = br.readLine()) != null)) [FD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_11 $$ linecounter++ [CD]
Line_5 $$ int linecounter = 0 --> Line_11 $$ linecounter++ [FD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_12 $$ line = line.trim() [CD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_12 $$ line = line.trim() [FD]
Line_8 $$ String line --> Line_12 $$ line = line.trim() [FD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_13 $$ if ((line.length() == 0) || (line.startsWith("#"))) [CD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_13 $$ if ((line.length() == 0) || (line.startsWith("#"))) [FD]
Line_12 $$ line = line.trim() --> Line_13 $$ if ((line.length() == 0) || (line.startsWith("#"))) [FD]
Line_8 $$ String line --> Line_13 $$ if ((line.length() == 0) || (line.startsWith("#"))) [FD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_14 $$ params = line.split("\\s+") [CD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_14 $$ params = line.split("\\s+") [FD]
Line_6 $$ String[] params = null --> Line_14 $$ params = line.split("\\s+") [FD]
Line_12 $$ line = line.trim() --> Line_14 $$ params = line.split("\\s+") [FD]
Line_8 $$ String line --> Line_14 $$ params = line.split("\\s+") [FD]
Line_10 $$ while (((line = br.readLine()) != null)) --> Line_15 $$ if (params[0].equals("newmtl")) [CD]
Line_15 $$ if (params[0].equals("newmtl")) --> Line_16 $$ mtl = new Material() [CD]
Line_9 $$ Material mtl = null --> Line_16 $$ mtl = new Material() [FD]
Line_15 $$ if (params[0].equals("newmtl")) --> Line_17 $$ mtl.name = params[1] [CD]
Line_15 $$ if (params[0].equals("newmtl")) --> Line_18 $$ materials.put(mtl.name, mtl) [CD]
Line_16 $$ mtl = new Material() --> Line_18 $$ materials.put(mtl.name, mtl) [FD]
Line_9 $$ Material mtl = null --> Line_18 $$ materials.put(mtl.name, mtl) [FD]
Line_15 $$ if (params[0].equals("newmtl")) --> Line_19 $$ if (params[0].equals("map_Kd")) [CD]
Line_19 $$ if (params[0].equals("map_Kd")) --> Line_20 $$ mtl.map_Kd = params[1] [CD]
Line_19 $$ if (params[0].equals("map_Kd")) --> Line_21 $$ if (params[0].equals("Ka")) [CD]
Line_21 $$ if (params[0].equals("Ka")) --> Line_22 $$ Arrays.fill(mtl.Ka, 0.0f) [CD]
Line_21 $$ if (params[0].equals("Ka")) --> Line_23 $$ for (int i = 1; i < params.length; i++) [CD]
Line_23 $$ for (int i = 1; i < params.length; i++) --> Line_24 $$ mtl.Ka[i - 1] = Float.valueOf(params[i]).floatValue() [CD]
Line_21 $$ if (params[0].equals("Ka")) --> Line_26 $$ if (params[0].equals("Kd")) [CD]
Line_26 $$ if (params[0].equals("Kd")) --> Line_27 $$ Arrays.fill(mtl.Kd, 0.0f) [CD]
Line_26 $$ if (params[0].equals("Kd")) --> Line_28 $$ for (int i = 1; i < params.length; i++) [CD]
Line_23 $$ for (int i = 1; i < params.length; i++) --> Line_28 $$ for (int i = 1; i < params.length; i++) [FD]
Line_28 $$ for (int i = 1; i < params.length; i++) --> Line_29 $$ mtl.Kd[i - 1] = Float.valueOf(params[i]).floatValue() [CD]
Line_26 $$ if (params[0].equals("Kd")) --> Line_31 $$ if (params[0].equals("Ks")) [CD]
Line_31 $$ if (params[0].equals("Ks")) --> Line_32 $$ Arrays.fill(mtl.Ks, 0.0f) [CD]
Line_31 $$ if (params[0].equals("Ks")) --> Line_33 $$ for (int i = 1; i < params.length; i++) [CD]
Line_28 $$ for (int i = 1; i < params.length; i++) --> Line_33 $$ for (int i = 1; i < params.length; i++) [FD]
Line_23 $$ for (int i = 1; i < params.length; i++) --> Line_33 $$ for (int i = 1; i < params.length; i++) [FD]
Line_33 $$ for (int i = 1; i < params.length; i++) --> Line_34 $$ mtl.Ks[i - 1] = Float.valueOf(params[i]).floatValue() [CD]
Line_31 $$ if (params[0].equals("Ks")) --> Line_36 $$ if (params[0].equals("d")) [CD]
Line_36 $$ if (params[0].equals("d")) --> Line_37 $$ mtl.d = Float.valueOf(params[1]).floatValue() [CD]
Line_36 $$ if (params[0].equals("d")) --> Line_38 $$ if (params[0].equals("Ns")) [CD]
Line_38 $$ if (params[0].equals("Ns")) --> Line_39 $$ mtl.Ns = Float.valueOf(params[1]).floatValue() [CD]
Line_38 $$ if (params[0].equals("Ns")) --> Line_40 $$ if (params[0].equals("illum")) [CD]
Line_40 $$ if (params[0].equals("illum")) --> Line_41 $$ mtl.illum = Integer.valueOf(params[1]).intValue() [CD]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is)) --> Line_45 $$ System.out.println("Failed to read file: " + br.toString()) [FD]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is)) --> Line_47 $$ System.out.println("Malformed MTL (on line " + linecounter + "): " + br.toString() + "\r \r" + e.getMessage()) [FD]
