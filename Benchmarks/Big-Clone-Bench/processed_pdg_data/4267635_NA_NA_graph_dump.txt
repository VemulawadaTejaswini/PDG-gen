Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_3 $$ if (src == null || dst == null || src.equals(dst)) [CD]
Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_3 $$ if (src == null || dst == null || src.equals(dst)) [FD]
Line_3 $$ if (src == null || dst == null || src.equals(dst)) --> Line_4 $$ return false [CD]
Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_6 $$ boolean result = false [CD]
Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_7 $$ if (src.exists()) [CD]
Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_7 $$ if (src.exists()) [FD]
Line_7 $$ if (src.exists()) --> Line_8 $$ if (dst.exists() && !dst.canWrite()) [CD]
Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_8 $$ if (dst.exists() && !dst.canWrite()) [FD]
Line_8 $$ if (dst.exists() && !dst.canWrite()) --> Line_9 $$ return false [CD]
Line_7 $$ if (src.exists()) --> Line_11 $$ final FileInputStream srcStream = new FileInputStream(src) [CD]
Line_7 $$ if (src.exists()) --> Line_12 $$ final FileOutputStream dstStream = new FileOutputStream(dst) [CD]
Line_7 $$ if (src.exists()) --> Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() [CD]
Line_11 $$ final FileInputStream srcStream = new FileInputStream(src) --> Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() [FD]
Line_7 $$ if (src.exists()) --> Line_14 $$ final FileChannel dstChannel = dstStream.getChannel() [CD]
Line_12 $$ final FileOutputStream dstStream = new FileOutputStream(dst) --> Line_14 $$ final FileChannel dstChannel = dstStream.getChannel() [FD]
Line_7 $$ if (src.exists()) --> Line_15 $$ FileLock dstLock = null [CD]
Line_7 $$ if (src.exists()) --> Line_16 $$ FileLock srcLock = null [CD]
Line_16 $$ FileLock srcLock = null --> Line_18 $$ srcLock = srcChannel.tryLock(0, Long.MAX_VALUE, true) [FD]
Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() --> Line_18 $$ srcLock = srcChannel.tryLock(0, Long.MAX_VALUE, true) [FD]
Line_15 $$ FileLock dstLock = null --> Line_19 $$ dstLock = dstChannel.tryLock() [FD]
Line_14 $$ final FileChannel dstChannel = dstStream.getChannel() --> Line_19 $$ dstLock = dstChannel.tryLock() [FD]
Line_20 $$ if (srcLock != null && dstLock != null) --> Line_21 $$ int maxCount = 64 * 1024 * 1024 - 32 * 1024 [CD]
Line_20 $$ if (srcLock != null && dstLock != null) --> Line_22 $$ long size = srcChannel.size() [CD]
Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() --> Line_22 $$ long size = srcChannel.size() [FD]
Line_20 $$ if (srcLock != null && dstLock != null) --> Line_23 $$ long position = 0 [CD]
Line_20 $$ if (srcLock != null && dstLock != null) --> Line_24 $$ while (position < size) [CD]
Line_23 $$ long position = 0 --> Line_24 $$ while (position < size) [FD]
Line_22 $$ long size = srcChannel.size() --> Line_24 $$ while (position < size) [FD]
Line_24 $$ while (position < size) --> Line_25 $$ position += srcChannel.transferTo(position, maxCount, dstChannel) [CD]
Line_23 $$ long position = 0 --> Line_25 $$ position += srcChannel.transferTo(position, maxCount, dstChannel) [FD]
Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() --> Line_25 $$ position += srcChannel.transferTo(position, maxCount, dstChannel) [FD]
Line_21 $$ int maxCount = 64 * 1024 * 1024 - 32 * 1024 --> Line_25 $$ position += srcChannel.transferTo(position, maxCount, dstChannel) [FD]
Line_14 $$ final FileChannel dstChannel = dstStream.getChannel() --> Line_25 $$ position += srcChannel.transferTo(position, maxCount, dstChannel) [FD]
Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() --> Line_31 $$ if (srcChannel != null) [FD]
Line_16 $$ FileLock srcLock = null --> Line_33 $$ if (srcLock != null) [FD]
Line_18 $$ srcLock = srcChannel.tryLock(0, Long.MAX_VALUE, true) --> Line_33 $$ if (srcLock != null) [FD]
Line_33 $$ if (srcLock != null) --> Line_34 $$ srcLock.release() [CD]
Line_16 $$ FileLock srcLock = null --> Line_34 $$ srcLock.release() [FD]
Line_18 $$ srcLock = srcChannel.tryLock(0, Long.MAX_VALUE, true) --> Line_34 $$ srcLock.release() [FD]
Line_13 $$ final FileChannel srcChannel = srcStream.getChannel() --> Line_36 $$ srcChannel.close() [FD]
Line_11 $$ final FileInputStream srcStream = new FileInputStream(src) --> Line_37 $$ srcStream.close() [FD]
Line_14 $$ final FileChannel dstChannel = dstStream.getChannel() --> Line_42 $$ if (dstChannel != null) [FD]
Line_15 $$ FileLock dstLock = null --> Line_44 $$ if (dstLock != null) [FD]
Line_19 $$ dstLock = dstChannel.tryLock() --> Line_44 $$ if (dstLock != null) [FD]
Line_44 $$ if (dstLock != null) --> Line_45 $$ dstLock.release() [CD]
Line_15 $$ FileLock dstLock = null --> Line_45 $$ dstLock.release() [FD]
Line_19 $$ dstLock = dstChannel.tryLock() --> Line_45 $$ dstLock.release() [FD]
Line_14 $$ final FileChannel dstChannel = dstStream.getChannel() --> Line_47 $$ dstChannel.close() [FD]
Line_12 $$ final FileOutputStream dstStream = new FileOutputStream(dst) --> Line_48 $$ dstStream.close() [FD]
Line_6 $$ boolean result = false --> Line_49 $$ result = true [FD]
Line_2 $$ public static boolean copyFile(final File src, final File dst) throws FileNotFoundException --> Line_56 $$ return result [CD]
Line_25 $$ position += srcChannel.transferTo(position, maxCount, dstChannel) --> Line_24 $$ while (position < size) [FD]
