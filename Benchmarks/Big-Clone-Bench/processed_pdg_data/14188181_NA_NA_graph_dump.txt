Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_3 $$ URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(from) [CD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_3 $$ URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(from) [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_4 $$ File f = new File(monitorCallShellScriptUrl.getFile()) [CD]
Line_3 $$ URL monitorCallShellScriptUrl = Thread.currentThread().getContextClassLoader().getResource(from) --> Line_4 $$ File f = new File(monitorCallShellScriptUrl.getFile()) [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_5 $$ String directoryPath = f.getAbsolutePath() [CD]
Line_4 $$ File f = new File(monitorCallShellScriptUrl.getFile()) --> Line_5 $$ String directoryPath = f.getAbsolutePath() [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_6 $$ String fileName = from [CD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_7 $$ InputStream in = null [CD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) [CD]
Line_5 $$ String directoryPath = f.getAbsolutePath() --> Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) [FD]
Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) --> Line_9 $$ URL urlJar = new URL(directoryPath.substring(directoryPath.indexOf("file:"), directoryPath.indexOf('!'))) [CD]
Line_5 $$ String directoryPath = f.getAbsolutePath() --> Line_9 $$ URL urlJar = new URL(directoryPath.substring(directoryPath.indexOf("file:"), directoryPath.indexOf('!'))) [FD]
Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) --> Line_10 $$ JarFile jf = new JarFile(urlJar.getFile()) [CD]
Line_9 $$ URL urlJar = new URL(directoryPath.substring(directoryPath.indexOf("file:"), directoryPath.indexOf('!'))) --> Line_10 $$ JarFile jf = new JarFile(urlJar.getFile()) [FD]
Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) --> Line_11 $$ JarEntry je = jf.getJarEntry(from) [CD]
Line_10 $$ JarFile jf = new JarFile(urlJar.getFile()) --> Line_11 $$ JarEntry je = jf.getJarEntry(from) [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_11 $$ JarEntry je = jf.getJarEntry(from) [FD]
Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) --> Line_12 $$ fileName = je.getName() [CD]
Line_6 $$ String fileName = from --> Line_12 $$ fileName = je.getName() [FD]
Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) --> Line_13 $$ in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) [CD]
Line_7 $$ InputStream in = null --> Line_13 $$ in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) [FD]
Line_6 $$ String fileName = from --> Line_13 $$ in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) [FD]
Line_12 $$ fileName = je.getName() --> Line_13 $$ in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) [FD]
Line_8 $$ if (directoryPath.indexOf(".jar!") > -1) --> Line_15 $$ in = new FileInputStream(f) [CD]
Line_7 $$ InputStream in = null --> Line_15 $$ in = new FileInputStream(f) [FD]
Line_13 $$ in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) --> Line_15 $$ in = new FileInputStream(f) [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_17 $$ File outScriptFile = new File(to) [CD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_18 $$ FileOutputStream fos = new FileOutputStream(outScriptFile) [CD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_19 $$ int nextChar [CD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_20 $$ while ((nextChar = in.read()) != -1) fos.write(nextChar) [CD]
Line_19 $$ int nextChar --> Line_20 $$ while ((nextChar = in.read()) != -1) fos.write(nextChar) [FD]
Line_7 $$ InputStream in = null --> Line_20 $$ while ((nextChar = in.read()) != -1) fos.write(nextChar) [FD]
Line_13 $$ in = Thread.currentThread().getContextClassLoader().getResourceAsStream(fileName) --> Line_20 $$ while ((nextChar = in.read()) != -1) fos.write(nextChar) [FD]
Line_15 $$ in = new FileInputStream(f) --> Line_20 $$ while ((nextChar = in.read()) != -1) fos.write(nextChar) [FD]
Line_18 $$ FileOutputStream fos = new FileOutputStream(outScriptFile) --> Line_20 $$ while ((nextChar = in.read()) != -1) fos.write(nextChar) [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_21 $$ fos.flush() [CD]
Line_18 $$ FileOutputStream fos = new FileOutputStream(outScriptFile) --> Line_21 $$ fos.flush() [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_22 $$ fos.close() [CD]
Line_18 $$ FileOutputStream fos = new FileOutputStream(outScriptFile) --> Line_22 $$ fos.close() [FD]
Line_24 $$ LinuxCommandExecutor cmdExecutor = new LinuxCommandExecutor() --> Line_25 $$ cmdExecutor.setWorkingDirectory(workingDirectory) [FD]
Line_2 $$ protected void copyFile(String from, String to, String workingDirectory) throws Exception --> Line_25 $$ cmdExecutor.setWorkingDirectory(workingDirectory) [FD]
Line_24 $$ LinuxCommandExecutor cmdExecutor = new LinuxCommandExecutor() --> Line_26 $$ cmdExecutor.runCommand("chmod 777 " + to) [FD]
