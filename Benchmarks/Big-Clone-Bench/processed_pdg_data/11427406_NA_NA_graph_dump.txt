Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_3 $$ URL url = new URL(authenticationUrl) [CD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() [CD]
Line_3 $$ URL url = new URL(authenticationUrl) --> Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_5 $$ urlConnection.setRequestMethod("POST") [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_5 $$ urlConnection.setRequestMethod("POST") [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_6 $$ urlConnection.setDoInput(true) [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_6 $$ urlConnection.setDoInput(true) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_7 $$ urlConnection.setDoOutput(true) [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_7 $$ urlConnection.setDoOutput(true) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_8 $$ urlConnection.setUseCaches(false) [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_8 $$ urlConnection.setUseCaches(false) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_9 $$ urlConnection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_9 $$ urlConnection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_10 $$ StringBuffer content = new StringBuffer() [CD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_11 $$ content.append("Email=").append(URLEncoder.encode(accountEmail, "UTF-8")) [CD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_11 $$ content.append("Email=").append(URLEncoder.encode(accountEmail, "UTF-8")) [FD]
Line_10 $$ StringBuffer content = new StringBuffer() --> Line_11 $$ content.append("Email=").append(URLEncoder.encode(accountEmail, "UTF-8")) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_12 $$ content.append("&Passwd=").append(URLEncoder.encode(accountPassword, "UTF-8")) [CD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_12 $$ content.append("&Passwd=").append(URLEncoder.encode(accountPassword, "UTF-8")) [FD]
Line_10 $$ StringBuffer content = new StringBuffer() --> Line_12 $$ content.append("&Passwd=").append(URLEncoder.encode(accountPassword, "UTF-8")) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_13 $$ content.append("&source=").append(URLEncoder.encode("Google Base data API for OFBiz", "UTF-8")) [CD]
Line_10 $$ StringBuffer content = new StringBuffer() --> Line_13 $$ content.append("&source=").append(URLEncoder.encode("Google Base data API for OFBiz", "UTF-8")) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_14 $$ content.append("&service=").append(URLEncoder.encode("gbase", "UTF-8")) [CD]
Line_10 $$ StringBuffer content = new StringBuffer() --> Line_14 $$ content.append("&service=").append(URLEncoder.encode("gbase", "UTF-8")) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_15 $$ OutputStream outputStream = urlConnection.getOutputStream() [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_15 $$ OutputStream outputStream = urlConnection.getOutputStream() [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_16 $$ outputStream.write(content.toString().getBytes("UTF-8")) [CD]
Line_15 $$ OutputStream outputStream = urlConnection.getOutputStream() --> Line_16 $$ outputStream.write(content.toString().getBytes("UTF-8")) [FD]
Line_10 $$ StringBuffer content = new StringBuffer() --> Line_16 $$ outputStream.write(content.toString().getBytes("UTF-8")) [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_17 $$ outputStream.close() [CD]
Line_15 $$ OutputStream outputStream = urlConnection.getOutputStream() --> Line_17 $$ outputStream.close() [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_18 $$ int responseCode = urlConnection.getResponseCode() [CD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_18 $$ int responseCode = urlConnection.getResponseCode() [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_19 $$ InputStream inputStream [CD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_20 $$ if (responseCode == HttpURLConnection.HTTP_OK) [CD]
Line_18 $$ int responseCode = urlConnection.getResponseCode() --> Line_20 $$ if (responseCode == HttpURLConnection.HTTP_OK) [FD]
Line_20 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_21 $$ inputStream = urlConnection.getInputStream() [CD]
Line_19 $$ InputStream inputStream --> Line_21 $$ inputStream = urlConnection.getInputStream() [FD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_21 $$ inputStream = urlConnection.getInputStream() [FD]
Line_20 $$ if (responseCode == HttpURLConnection.HTTP_OK) --> Line_23 $$ inputStream = urlConnection.getErrorStream() [CD]
Line_19 $$ InputStream inputStream --> Line_23 $$ inputStream = urlConnection.getErrorStream() [FD]
Line_21 $$ inputStream = urlConnection.getInputStream() --> Line_23 $$ inputStream = urlConnection.getErrorStream() [FD]
Line_4 $$ HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection() --> Line_23 $$ inputStream = urlConnection.getErrorStream() [FD]
Line_2 $$ private static String makeLoginRequest(String authenticationUrl, String accountEmail, String accountPassword) throws IOException --> Line_25 $$ return toString(inputStream) [CD]
Line_19 $$ InputStream inputStream --> Line_25 $$ return toString(inputStream) [FD]
Line_21 $$ inputStream = urlConnection.getInputStream() --> Line_25 $$ return toString(inputStream) [FD]
Line_23 $$ inputStream = urlConnection.getErrorStream() --> Line_25 $$ return toString(inputStream) [FD]
