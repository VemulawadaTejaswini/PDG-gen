Line_2 $$ public String generateMappackMD5(File mapPackFile) throws IOException, NoSuchAlgorithmException --> Line_3 $$ ZipFile zip = new ZipFile(mapPackFile) [CD]
Line_3 $$ ZipFile zip = new ZipFile(mapPackFile) --> Line_5 $$ Enumeration<? extends ZipEntry> entries = zip.entries() [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_9 $$ ZipEntry entry = entries.nextElement() [CD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_10 $$ if (entry.isDirectory()) [CD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_11 $$ String name = entry.getName() [CD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_12 $$ if (name.toUpperCase().startsWith("META-INF")) [CD]
Line_11 $$ String name = entry.getName() --> Line_12 $$ if (name.toUpperCase().startsWith("META-INF")) [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_13 $$ md5.reset() [CD]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5") --> Line_13 $$ md5.reset() [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_14 $$ InputStream in = zip.getInputStream(entry) [CD]
Line_3 $$ ZipFile zip = new ZipFile(mapPackFile) --> Line_14 $$ InputStream in = zip.getInputStream(entry) [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_15 $$ byte[] data = Utilities.getInputBytes(in) [CD]
Line_14 $$ InputStream in = zip.getInputStream(entry) --> Line_15 $$ byte[] data = Utilities.getInputBytes(in) [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_16 $$ in.close() [CD]
Line_14 $$ InputStream in = zip.getInputStream(entry) --> Line_16 $$ in.close() [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_17 $$ byte[] digest = md5.digest(data) [CD]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance("MD5") --> Line_17 $$ byte[] digest = md5.digest(data) [FD]
Line_15 $$ byte[] data = Utilities.getInputBytes(in) --> Line_17 $$ byte[] digest = md5.digest(data) [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_18 $$ log.trace("Hashsum " + Hex.encodeHexString(digest) + " includes \"" + name + "\"") [CD]
Line_17 $$ byte[] digest = md5.digest(data) --> Line_18 $$ log.trace("Hashsum " + Hex.encodeHexString(digest) + " includes \"" + name + "\"") [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_19 $$ md5Total.update(digest) [CD]
Line_6 $$ MessageDigest md5Total = MessageDigest.getInstance("MD5") --> Line_19 $$ md5Total.update(digest) [FD]
Line_17 $$ byte[] digest = md5.digest(data) --> Line_19 $$ md5Total.update(digest) [FD]
Line_8 $$ while (entries.hasMoreElements()) --> Line_20 $$ md5Total.update(name.getBytes()) [CD]
Line_6 $$ MessageDigest md5Total = MessageDigest.getInstance("MD5") --> Line_20 $$ md5Total.update(name.getBytes()) [FD]
Line_11 $$ String name = entry.getName() --> Line_20 $$ md5Total.update(name.getBytes()) [FD]
Line_6 $$ MessageDigest md5Total = MessageDigest.getInstance("MD5") --> Line_22 $$ String md5sum = Hex.encodeHexString(md5Total.digest()) [FD]
Line_2 $$ public String generateMappackMD5(File mapPackFile) throws IOException, NoSuchAlgorithmException --> Line_23 $$ log.trace("md5sum of " + mapPackFile.getName() + ": " + md5sum) [FD]
Line_3 $$ ZipFile zip = new ZipFile(mapPackFile) --> Line_26 $$ zip.close() [FD]
