Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_3 $$ if (clazz == null) [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_3 $$ if (clazz == null) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_6 $$ ClassLoader classLoader = loader [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_7 $$ if (classLoader == null) [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_8 $$ classLoader = clazz.getClassLoader() [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_10 $$ String interfaceName = clazz.getName() [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_10 $$ String interfaceName = clazz.getName() [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_11 $$ ArrayList tmp = new ArrayList() [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_12 $$ ArrayList toRemove = new ArrayList() [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_13 $$ String className = System.getProperty(interfaceName) [CD]
Line_10 $$ String interfaceName = clazz.getName() --> Line_13 $$ String className = System.getProperty(interfaceName) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_14 $$ if (className != null && className.trim().length() > 0) [CD]
Line_11 $$ ArrayList tmp = new ArrayList() --> Line_15 $$ tmp.add(className.trim()) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_17 $$ Enumeration en = null [CD]
Line_17 $$ Enumeration en = null --> Line_19 $$ en = classLoader.getResources("META-INF/services/" + clazz.getName()) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_19 $$ en = classLoader.getResources("META-INF/services/" + clazz.getName()) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_23 $$ while (en != null && en.hasMoreElements()) [CD]
Line_17 $$ Enumeration en = null --> Line_23 $$ while (en != null && en.hasMoreElements()) [FD]
Line_23 $$ while (en != null && en.hasMoreElements()) --> Line_24 $$ URL url = (URL) en.nextElement() [CD]
Line_17 $$ Enumeration en = null --> Line_24 $$ URL url = (URL) en.nextElement() [FD]
Line_23 $$ while (en != null && en.hasMoreElements()) --> Line_25 $$ InputStream is = null [CD]
Line_25 $$ InputStream is = null --> Line_27 $$ is = url.openStream() [FD]
Line_24 $$ URL url = (URL) en.nextElement() --> Line_27 $$ is = url.openStream() [FD]
Line_29 $$ String line --> Line_30 $$ do [FD]
Line_30 $$ do --> Line_31 $$ line = reader.readLine() [CD]
Line_29 $$ String line --> Line_31 $$ line = reader.readLine() [FD]
Line_28 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(is, "UTF-8")) --> Line_31 $$ line = reader.readLine() [FD]
Line_30 $$ do --> Line_32 $$ boolean remove = false [CD]
Line_30 $$ do --> Line_33 $$ if (line != null) [CD]
Line_31 $$ line = reader.readLine() --> Line_33 $$ if (line != null) [FD]
Line_29 $$ String line --> Line_33 $$ if (line != null) [FD]
Line_33 $$ if (line != null) --> Line_34 $$ if (line.startsWith("#-")) [CD]
Line_31 $$ line = reader.readLine() --> Line_34 $$ if (line.startsWith("#-")) [FD]
Line_29 $$ String line --> Line_34 $$ if (line.startsWith("#-")) [FD]
Line_34 $$ if (line.startsWith("#-")) --> Line_35 $$ remove = true [CD]
Line_32 $$ boolean remove = false --> Line_35 $$ remove = true [FD]
Line_34 $$ if (line.startsWith("#-")) --> Line_36 $$ line = line.substring(2) [CD]
Line_31 $$ line = reader.readLine() --> Line_36 $$ line = line.substring(2) [FD]
Line_29 $$ String line --> Line_36 $$ line = line.substring(2) [FD]
Line_33 $$ if (line != null) --> Line_38 $$ int pos = line.indexOf('#') [CD]
Line_31 $$ line = reader.readLine() --> Line_38 $$ int pos = line.indexOf('#') [FD]
Line_36 $$ line = line.substring(2) --> Line_38 $$ int pos = line.indexOf('#') [FD]
Line_29 $$ String line --> Line_38 $$ int pos = line.indexOf('#') [FD]
Line_33 $$ if (line != null) --> Line_39 $$ if (pos >= 0) [CD]
Line_38 $$ int pos = line.indexOf('#') --> Line_39 $$ if (pos >= 0) [FD]
Line_39 $$ if (pos >= 0) --> Line_40 $$ line = line.substring(0, pos) [CD]
Line_31 $$ line = reader.readLine() --> Line_40 $$ line = line.substring(0, pos) [FD]
Line_36 $$ line = line.substring(2) --> Line_40 $$ line = line.substring(0, pos) [FD]
Line_29 $$ String line --> Line_40 $$ line = line.substring(0, pos) [FD]
Line_38 $$ int pos = line.indexOf('#') --> Line_40 $$ line = line.substring(0, pos) [FD]
Line_33 $$ if (line != null) --> Line_42 $$ line = line.trim() [CD]
Line_31 $$ line = reader.readLine() --> Line_42 $$ line = line.trim() [FD]
Line_36 $$ line = line.substring(2) --> Line_42 $$ line = line.trim() [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_42 $$ line = line.trim() [FD]
Line_29 $$ String line --> Line_42 $$ line = line.trim() [FD]
Line_33 $$ if (line != null) --> Line_43 $$ if (line.length() > 0) [CD]
Line_31 $$ line = reader.readLine() --> Line_43 $$ if (line.length() > 0) [FD]
Line_36 $$ line = line.substring(2) --> Line_43 $$ if (line.length() > 0) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_43 $$ if (line.length() > 0) [FD]
Line_42 $$ line = line.trim() --> Line_43 $$ if (line.length() > 0) [FD]
Line_29 $$ String line --> Line_43 $$ if (line.length() > 0) [FD]
Line_43 $$ if (line.length() > 0) --> Line_44 $$ if (remove) [CD]
Line_44 $$ if (remove) --> Line_45 $$ toRemove.add(line) [CD]
Line_12 $$ ArrayList toRemove = new ArrayList() --> Line_45 $$ toRemove.add(line) [FD]
Line_31 $$ line = reader.readLine() --> Line_45 $$ toRemove.add(line) [FD]
Line_36 $$ line = line.substring(2) --> Line_45 $$ toRemove.add(line) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_45 $$ toRemove.add(line) [FD]
Line_42 $$ line = line.trim() --> Line_45 $$ toRemove.add(line) [FD]
Line_29 $$ String line --> Line_45 $$ toRemove.add(line) [FD]
Line_44 $$ if (remove) --> Line_47 $$ tmp.add(line) [CD]
Line_11 $$ ArrayList tmp = new ArrayList() --> Line_47 $$ tmp.add(line) [FD]
Line_31 $$ line = reader.readLine() --> Line_47 $$ tmp.add(line) [FD]
Line_36 $$ line = line.substring(2) --> Line_47 $$ tmp.add(line) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_47 $$ tmp.add(line) [FD]
Line_42 $$ line = line.trim() --> Line_47 $$ tmp.add(line) [FD]
Line_29 $$ String line --> Line_47 $$ tmp.add(line) [FD]
Line_25 $$ InputStream is = null --> Line_55 $$ if (is != null) [FD]
Line_27 $$ is = url.openStream() --> Line_55 $$ if (is != null) [FD]
Line_25 $$ InputStream is = null --> Line_57 $$ is.close() [FD]
Line_27 $$ is = url.openStream() --> Line_57 $$ is.close() [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_64 $$ if (defaultImplementations != null) [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_64 $$ if (defaultImplementations != null) [FD]
Line_64 $$ if (defaultImplementations != null) --> Line_65 $$ for (int i = 0; i < defaultImplementations.length; i++) [CD]
Line_65 $$ for (int i = 0; i < defaultImplementations.length; i++) --> Line_66 $$ tmp.add(defaultImplementations[i].trim()) [CD]
Line_11 $$ ArrayList tmp = new ArrayList() --> Line_66 $$ tmp.add(defaultImplementations[i].trim()) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_69 $$ if (!clazz.isInterface()) [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_69 $$ if (!clazz.isInterface()) [FD]
Line_69 $$ if (!clazz.isInterface()) --> Line_70 $$ int m = clazz.getModifiers() [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_70 $$ int m = clazz.getModifiers() [FD]
Line_69 $$ if (!clazz.isInterface()) --> Line_71 $$ if (!Modifier.isAbstract(m) && Modifier.isPublic(m) && !Modifier.isStatic(m)) [CD]
Line_70 $$ int m = clazz.getModifiers() --> Line_71 $$ if (!Modifier.isAbstract(m) && Modifier.isPublic(m) && !Modifier.isStatic(m)) [FD]
Line_71 $$ if (!Modifier.isAbstract(m) && Modifier.isPublic(m) && !Modifier.isStatic(m)) --> Line_72 $$ tmp.add(interfaceName) [CD]
Line_11 $$ ArrayList tmp = new ArrayList() --> Line_72 $$ tmp.add(interfaceName) [FD]
Line_10 $$ String interfaceName = clazz.getName() --> Line_72 $$ tmp.add(interfaceName) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_75 $$ tmp.removeAll(toRemove) [CD]
Line_11 $$ ArrayList tmp = new ArrayList() --> Line_75 $$ tmp.removeAll(toRemove) [FD]
Line_12 $$ ArrayList toRemove = new ArrayList() --> Line_75 $$ tmp.removeAll(toRemove) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_76 $$ ArrayList res = new ArrayList() [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_77 $$ for (Iterator it = tmp.iterator(); it.hasNext(); ) [CD]
Line_11 $$ ArrayList tmp = new ArrayList() --> Line_77 $$ for (Iterator it = tmp.iterator(); it.hasNext(); ) [FD]
Line_77 $$ for (Iterator it = tmp.iterator(); it.hasNext(); ) --> Line_78 $$ className = (String) it.next() [CD]
Line_77 $$ for (Iterator it = tmp.iterator(); it.hasNext(); ) --> Line_78 $$ className = (String) it.next() [FD]
Line_81 $$ if (c != null) --> Line_82 $$ if (clazz.isAssignableFrom(c)) [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_82 $$ if (clazz.isAssignableFrom(c)) [FD]
Line_82 $$ if (clazz.isAssignableFrom(c)) --> Line_83 $$ if (returnInstances) [CD]
Line_83 $$ if (returnInstances) --> Line_84 $$ Object o = null [CD]
Line_84 $$ Object o = null --> Line_86 $$ o = c.newInstance() [FD]
Line_83 $$ if (returnInstances) --> Line_90 $$ if (o != null) [CD]
Line_84 $$ Object o = null --> Line_90 $$ if (o != null) [FD]
Line_86 $$ o = c.newInstance() --> Line_90 $$ if (o != null) [FD]
Line_90 $$ if (o != null) --> Line_91 $$ res.add(o) [CD]
Line_76 $$ ArrayList res = new ArrayList() --> Line_91 $$ res.add(o) [FD]
Line_84 $$ Object o = null --> Line_91 $$ res.add(o) [FD]
Line_86 $$ o = c.newInstance() --> Line_91 $$ res.add(o) [FD]
Line_90 $$ if (o != null) --> Line_92 $$ if (onlyFirst) [CD]
Line_92 $$ if (onlyFirst) --> Line_93 $$ return res [CD]
Line_83 $$ if (returnInstances) --> Line_97 $$ res.add(c) [CD]
Line_76 $$ ArrayList res = new ArrayList() --> Line_97 $$ res.add(c) [FD]
Line_83 $$ if (returnInstances) --> Line_98 $$ if (onlyFirst) [CD]
Line_98 $$ if (onlyFirst) --> Line_99 $$ return res [CD]
Line_82 $$ if (clazz.isAssignableFrom(c)) --> Line_103 $$ logger.warning("MetaInfLookup: Class '" + className + "' is not a subclass of class : " + interfaceName) [CD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_110 $$ if (res.size() == 0) [CD]
Line_76 $$ ArrayList res = new ArrayList() --> Line_110 $$ if (res.size() == 0) [FD]
Line_2 $$ private static List lookupForImplementations(final Class clazz, final ClassLoader loader, final String[] defaultImplementations, final boolean onlyFirst, final boolean returnInstances) throws ClassNotFoundException --> Line_113 $$ return res [CD]
Line_31 $$ line = reader.readLine() --> Line_30 $$ do [FD]
Line_36 $$ line = line.substring(2) --> Line_30 $$ do [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_30 $$ do [FD]
Line_42 $$ line = line.trim() --> Line_30 $$ do [FD]
Line_36 $$ line = line.substring(2) --> Line_33 $$ if (line != null) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_33 $$ if (line != null) [FD]
Line_42 $$ line = line.trim() --> Line_33 $$ if (line != null) [FD]
Line_36 $$ line = line.substring(2) --> Line_34 $$ if (line.startsWith("#-")) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_34 $$ if (line.startsWith("#-")) [FD]
Line_42 $$ line = line.trim() --> Line_34 $$ if (line.startsWith("#-")) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_36 $$ line = line.substring(2) [FD]
Line_42 $$ line = line.trim() --> Line_36 $$ line = line.substring(2) [FD]
Line_40 $$ line = line.substring(0, pos) --> Line_38 $$ int pos = line.indexOf('#') [FD]
Line_42 $$ line = line.trim() --> Line_38 $$ int pos = line.indexOf('#') [FD]
Line_42 $$ line = line.trim() --> Line_40 $$ line = line.substring(0, pos) [FD]
