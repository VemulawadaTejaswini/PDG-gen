Line_2 $$ public void run() throws Exception --> Line_3 $$ Properties buildprops = new Properties() [CD]
Line_5 $$ ClassLoader cl = this.getClass().getClassLoader() --> Line_6 $$ URL url = cl.getResource("build.properties") [FD]
Line_6 $$ URL url = cl.getResource("build.properties") --> Line_7 $$ InputStream is = url.openStream() [FD]
Line_3 $$ Properties buildprops = new Properties() --> Line_9 $$ buildprops.load(is) [FD]
Line_7 $$ InputStream is = url.openStream() --> Line_9 $$ buildprops.load(is) [FD]
Line_2 $$ public void run() throws Exception --> Line_13 $$ System.out.println("Report Server v" + buildprops.getProperty("version", "unknown") + "-" + buildprops.getProperty("build", "unknown")) [CD]
Line_3 $$ Properties buildprops = new Properties() --> Line_13 $$ System.out.println("Report Server v" + buildprops.getProperty("version", "unknown") + "-" + buildprops.getProperty("build", "unknown")) [FD]
Line_2 $$ public void run() throws Exception --> Line_14 $$ validate() [CD]
Line_2 $$ public void run() throws Exception --> Line_15 $$ if (log.isInfoEnabled()) [CD]
Line_15 $$ if (log.isInfoEnabled()) --> Line_16 $$ log.info("Starting Report Server v" + buildprops.getProperty("version", "unknown") + "-" + buildprops.getProperty("build", "unknown")) [CD]
Line_3 $$ Properties buildprops = new Properties() --> Line_16 $$ log.info("Starting Report Server v" + buildprops.getProperty("version", "unknown") + "-" + buildprops.getProperty("build", "unknown")) [FD]
Line_2 $$ public void run() throws Exception --> Line_18 $$ MainConfig config = MainConfig.newInstance() [CD]
Line_2 $$ public void run() throws Exception --> Line_19 $$ basedir = config.getBaseDirectory() [CD]
Line_18 $$ MainConfig config = MainConfig.newInstance() --> Line_19 $$ basedir = config.getBaseDirectory() [FD]
Line_2 $$ public void run() throws Exception --> Line_20 $$ if (log.isInfoEnabled()) [CD]
Line_20 $$ if (log.isInfoEnabled()) --> Line_21 $$ log.info("basedir = " + basedir) [CD]
Line_2 $$ public void run() throws Exception --> Line_23 $$ SchedulerFactory schedFact = new StdSchedulerFactory() [CD]
Line_2 $$ public void run() throws Exception --> Line_24 $$ sched = schedFact.getScheduler() [CD]
Line_23 $$ SchedulerFactory schedFact = new StdSchedulerFactory() --> Line_24 $$ sched = schedFact.getScheduler() [FD]
Line_2 $$ public void run() throws Exception --> Line_25 $$ NodeList reports = config.getReports() [CD]
Line_18 $$ MainConfig config = MainConfig.newInstance() --> Line_25 $$ NodeList reports = config.getReports() [FD]
Line_2 $$ public void run() throws Exception --> Line_26 $$ for (int x = 0; x < reports.getLength(); x++) [CD]
Line_25 $$ NodeList reports = config.getReports() --> Line_26 $$ for (int x = 0; x < reports.getLength(); x++) [FD]
Line_28 $$ if (log.isInfoEnabled()) --> Line_29 $$ log.info("Adding report at index " + x) [CD]
Line_25 $$ NodeList reports = config.getReports() --> Line_31 $$ Node report = reports.item(x) [FD]
Line_26 $$ for (int x = 0; x < reports.getLength(); x++) --> Line_31 $$ Node report = reports.item(x) [FD]
Line_31 $$ Node report = reports.item(x) --> Line_32 $$ runReport(report) [FD]
Line_34 $$ if (log.isErrorEnabled()) --> Line_35 $$ log.error("Can't add a report at report index " + x, ex) [CD]
Line_2 $$ public void run() throws Exception --> Line_39 $$ addStatsJob() [CD]
Line_2 $$ public void run() throws Exception --> Line_40 $$ sched.start() [CD]
Line_2 $$ public void run() throws Exception --> Line_41 $$ WebServer webserver = new WebServer(8080) [CD]
Line_2 $$ public void run() throws Exception --> Line_42 $$ webserver.setParanoid(false) [CD]
Line_41 $$ WebServer webserver = new WebServer(8080) --> Line_42 $$ webserver.setParanoid(false) [FD]
Line_2 $$ public void run() throws Exception --> Line_43 $$ webserver.start() [CD]
Line_41 $$ WebServer webserver = new WebServer(8080) --> Line_43 $$ webserver.start() [FD]
