Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_3 $$ log.debug("Copy from [CD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_3 $$ log.debug("Copy from [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_4 $$ FileInputStream fi = new FileInputStream(source) [CD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_5 $$ FileChannel fic = fi.getChannel() [CD]
Line_4 $$ FileInputStream fi = new FileInputStream(source) --> Line_5 $$ FileChannel fic = fi.getChannel() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_6 $$ MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length()) [CD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_6 $$ MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length()) [FD]
Line_5 $$ FileChannel fic = fi.getChannel() --> Line_6 $$ MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length()) [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_7 $$ fic.close() [CD]
Line_5 $$ FileChannel fic = fi.getChannel() --> Line_7 $$ fic.close() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_8 $$ fi.close() [CD]
Line_4 $$ FileInputStream fi = new FileInputStream(source) --> Line_8 $$ fi.close() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_9 $$ fi = null [CD]
Line_4 $$ FileInputStream fi = new FileInputStream(source) --> Line_9 $$ fi = null [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_10 $$ if (!dest.exists()) [CD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_10 $$ if (!dest.exists()) [FD]
Line_10 $$ if (!dest.exists()) --> Line_11 $$ String destPath = dest.getPath() [CD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_11 $$ String destPath = dest.getPath() [FD]
Line_10 $$ if (!dest.exists()) --> Line_12 $$ log.debug("Destination path: [CD]
Line_11 $$ String destPath = dest.getPath() --> Line_12 $$ log.debug("Destination path: [FD]
Line_10 $$ if (!dest.exists()) --> Line_13 $$ String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar)) [CD]
Line_11 $$ String destPath = dest.getPath() --> Line_13 $$ String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar)) [FD]
Line_10 $$ if (!dest.exists()) --> Line_14 $$ log.debug("Destination dir: [CD]
Line_13 $$ String destDir = destPath.substring(0, destPath.lastIndexOf(File.separatorChar)) --> Line_14 $$ log.debug("Destination dir: [FD]
Line_10 $$ if (!dest.exists()) --> Line_15 $$ File dir = new File(destDir) [CD]
Line_10 $$ if (!dest.exists()) --> Line_16 $$ if (!dir.exists()) [CD]
Line_15 $$ File dir = new File(destDir) --> Line_16 $$ if (!dir.exists()) [FD]
Line_16 $$ if (!dir.exists()) --> Line_17 $$ if (dir.mkdirs()) [CD]
Line_15 $$ File dir = new File(destDir) --> Line_17 $$ if (dir.mkdirs()) [FD]
Line_17 $$ if (dir.mkdirs()) --> Line_18 $$ log.debug("Directory created") [CD]
Line_17 $$ if (dir.mkdirs()) --> Line_20 $$ log.warn("Directory not created") [CD]
Line_10 $$ if (!dest.exists()) --> Line_23 $$ dir = null [CD]
Line_15 $$ File dir = new File(destDir) --> Line_23 $$ dir = null [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_25 $$ FileOutputStream fo = new FileOutputStream(dest) [CD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_26 $$ FileChannel foc = fo.getChannel() [CD]
Line_25 $$ FileOutputStream fo = new FileOutputStream(dest) --> Line_26 $$ FileChannel foc = fo.getChannel() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_27 $$ foc.write(mbuf) [CD]
Line_26 $$ FileChannel foc = fo.getChannel() --> Line_27 $$ foc.write(mbuf) [FD]
Line_6 $$ MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length()) --> Line_27 $$ foc.write(mbuf) [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_28 $$ foc.close() [CD]
Line_26 $$ FileChannel foc = fo.getChannel() --> Line_28 $$ foc.close() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_29 $$ fo.close() [CD]
Line_25 $$ FileOutputStream fo = new FileOutputStream(dest) --> Line_29 $$ fo.close() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_30 $$ fo = null [CD]
Line_25 $$ FileOutputStream fo = new FileOutputStream(dest) --> Line_30 $$ fo = null [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_31 $$ mbuf.clear() [CD]
Line_6 $$ MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length()) --> Line_31 $$ mbuf.clear() [FD]
Line_2 $$ public static void copyFile(File source, File dest) throws IOException --> Line_32 $$ mbuf = null [CD]
Line_6 $$ MappedByteBuffer mbuf = fic.map(FileChannel.MapMode.READ_ONLY, 0, source.length()) --> Line_32 $$ mbuf = null [FD]
