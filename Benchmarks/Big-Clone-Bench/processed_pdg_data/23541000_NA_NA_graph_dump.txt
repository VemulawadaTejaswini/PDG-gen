Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") [CD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_4 $$ byte[] seed = new byte[12] [CD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_5 $$ byte[] prevPass = new sun.misc.BASE64Decoder().decodeBuffer(prevPassStr) [CD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_5 $$ byte[] prevPass = new sun.misc.BASE64Decoder().decodeBuffer(prevPassStr) [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_6 $$ System.arraycopy(prevPass, 0, seed, 0, 12) [CD]
Line_5 $$ byte[] prevPass = new sun.misc.BASE64Decoder().decodeBuffer(prevPassStr) --> Line_6 $$ System.arraycopy(prevPass, 0, seed, 0, 12) [FD]
Line_4 $$ byte[] seed = new byte[12] --> Line_6 $$ System.arraycopy(prevPass, 0, seed, 0, 12) [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_7 $$ md.update(seed) [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_7 $$ md.update(seed) [FD]
Line_4 $$ byte[] seed = new byte[12] --> Line_7 $$ md.update(seed) [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_8 $$ md.update(newPassword.getBytes("UTF8")) [CD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_8 $$ md.update(newPassword.getBytes("UTF8")) [FD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_8 $$ md.update(newPassword.getBytes("UTF8")) [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_9 $$ byte[] digestNewPassword = md.digest() [CD]
Line_3 $$ MessageDigest md = MessageDigest.getInstance("MD5") --> Line_9 $$ byte[] digestNewPassword = md.digest() [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_10 $$ byte[] choppedPrevPassword = new byte[prevPass.length - 12] [CD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_11 $$ System.arraycopy(prevPass, 12, choppedPrevPassword, 0, prevPass.length - 12) [CD]
Line_5 $$ byte[] prevPass = new sun.misc.BASE64Decoder().decodeBuffer(prevPassStr) --> Line_11 $$ System.arraycopy(prevPass, 12, choppedPrevPassword, 0, prevPass.length - 12) [FD]
Line_10 $$ byte[] choppedPrevPassword = new byte[prevPass.length - 12] --> Line_11 $$ System.arraycopy(prevPass, 12, choppedPrevPassword, 0, prevPass.length - 12) [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_12 $$ boolean isMatching = Arrays.equals(digestNewPassword, choppedPrevPassword) [CD]
Line_9 $$ byte[] digestNewPassword = md.digest() --> Line_12 $$ boolean isMatching = Arrays.equals(digestNewPassword, choppedPrevPassword) [FD]
Line_10 $$ byte[] choppedPrevPassword = new byte[prevPass.length - 12] --> Line_12 $$ boolean isMatching = Arrays.equals(digestNewPassword, choppedPrevPassword) [FD]
Line_2 $$ public static boolean matchPassword(String prevPassStr, String newPassword) throws NoSuchAlgorithmException, java.io.IOException, java.io.UnsupportedEncodingException --> Line_13 $$ return isMatching [CD]
