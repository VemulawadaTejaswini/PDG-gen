Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_3 $$ StringBuffer urlString = new StringBuffer(serviceUrl) [CD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_4 $$ String query = RestClient.buildQueryString(parameters) [CD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_4 $$ String query = RestClient.buildQueryString(parameters) [FD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_5 $$ HttpURLConnection conn [CD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) [CD]
Line_3 $$ StringBuffer urlString = new StringBuffer(serviceUrl) --> Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) [FD]
Line_4 $$ String query = RestClient.buildQueryString(parameters) --> Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_7 $$ URL url = new URL(urlString.toString()) [CD]
Line_3 $$ StringBuffer urlString = new StringBuffer(serviceUrl) --> Line_7 $$ URL url = new URL(urlString.toString()) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_8 $$ conn = (HttpURLConnection) url.openConnection() [CD]
Line_5 $$ HttpURLConnection conn --> Line_8 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_7 $$ URL url = new URL(urlString.toString()) --> Line_8 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_9 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [CD]
Line_5 $$ HttpURLConnection conn --> Line_9 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_9 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_10 $$ conn.setRequestMethod("POST") [CD]
Line_5 $$ HttpURLConnection conn --> Line_10 $$ conn.setRequestMethod("POST") [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_10 $$ conn.setRequestMethod("POST") [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_11 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [CD]
Line_5 $$ HttpURLConnection conn --> Line_11 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_11 $$ conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_12 $$ conn.setDoOutput(true) [CD]
Line_5 $$ HttpURLConnection conn --> Line_12 $$ conn.setDoOutput(true) [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_12 $$ conn.setDoOutput(true) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_13 $$ conn.getOutputStream().write(query.getBytes()) [CD]
Line_5 $$ HttpURLConnection conn --> Line_13 $$ conn.getOutputStream().write(query.getBytes()) [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_13 $$ conn.getOutputStream().write(query.getBytes()) [FD]
Line_4 $$ String query = RestClient.buildQueryString(parameters) --> Line_13 $$ conn.getOutputStream().write(query.getBytes()) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_15 $$ if (query.length() > 0) [CD]
Line_4 $$ String query = RestClient.buildQueryString(parameters) --> Line_15 $$ if (query.length() > 0) [FD]
Line_15 $$ if (query.length() > 0) --> Line_16 $$ urlString.append("?").append(query) [CD]
Line_4 $$ String query = RestClient.buildQueryString(parameters) --> Line_16 $$ urlString.append("?").append(query) [FD]
Line_3 $$ StringBuffer urlString = new StringBuffer(serviceUrl) --> Line_16 $$ urlString.append("?").append(query) [FD]
Line_3 $$ StringBuffer urlString = new StringBuffer(serviceUrl) --> Line_18 $$ URL url = new URL(urlString.toString()) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_19 $$ conn = (HttpURLConnection) url.openConnection() [CD]
Line_5 $$ HttpURLConnection conn --> Line_19 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_19 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_7 $$ URL url = new URL(urlString.toString()) --> Line_19 $$ conn = (HttpURLConnection) url.openConnection() [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_20 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [CD]
Line_5 $$ HttpURLConnection conn --> Line_20 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_20 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [FD]
Line_19 $$ conn = (HttpURLConnection) url.openConnection() --> Line_20 $$ conn.setRequestProperty("User-Agent", USER_AGENT_STRING) [FD]
Line_6 $$ if ((urlString.length() + query.length() + 1) > MAX_URI_LENGTH_FOR_GET) --> Line_21 $$ conn.setRequestMethod("GET") [CD]
Line_5 $$ HttpURLConnection conn --> Line_21 $$ conn.setRequestMethod("GET") [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_21 $$ conn.setRequestMethod("GET") [FD]
Line_19 $$ conn = (HttpURLConnection) url.openConnection() --> Line_21 $$ conn.setRequestMethod("GET") [FD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_23 $$ int responseCode = conn.getResponseCode() [CD]
Line_5 $$ HttpURLConnection conn --> Line_23 $$ int responseCode = conn.getResponseCode() [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_23 $$ int responseCode = conn.getResponseCode() [FD]
Line_19 $$ conn = (HttpURLConnection) url.openConnection() --> Line_23 $$ int responseCode = conn.getResponseCode() [FD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) [CD]
Line_23 $$ int responseCode = conn.getResponseCode() --> Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) [FD]
Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) --> Line_25 $$ ByteArrayOutputStream errorBuffer = new ByteArrayOutputStream() [CD]
Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) --> Line_26 $$ int read [CD]
Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) --> Line_27 $$ byte[] readBuffer = new byte[ERROR_READ_BUFFER_SIZE] [CD]
Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) --> Line_28 $$ InputStream errorStream = conn.getErrorStream() [CD]
Line_5 $$ HttpURLConnection conn --> Line_28 $$ InputStream errorStream = conn.getErrorStream() [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_28 $$ InputStream errorStream = conn.getErrorStream() [FD]
Line_19 $$ conn = (HttpURLConnection) url.openConnection() --> Line_28 $$ InputStream errorStream = conn.getErrorStream() [FD]
Line_24 $$ if (HttpURLConnection.HTTP_OK != responseCode) --> Line_29 $$ while (-1 != (read = errorStream.read(readBuffer))) [CD]
Line_26 $$ int read --> Line_29 $$ while (-1 != (read = errorStream.read(readBuffer))) [FD]
Line_28 $$ InputStream errorStream = conn.getErrorStream() --> Line_29 $$ while (-1 != (read = errorStream.read(readBuffer))) [FD]
Line_27 $$ byte[] readBuffer = new byte[ERROR_READ_BUFFER_SIZE] --> Line_29 $$ while (-1 != (read = errorStream.read(readBuffer))) [FD]
Line_29 $$ while (-1 != (read = errorStream.read(readBuffer))) --> Line_30 $$ errorBuffer.write(readBuffer, 0, read) [CD]
Line_29 $$ while (-1 != (read = errorStream.read(readBuffer))) --> Line_30 $$ errorBuffer.write(readBuffer, 0, read) [FD]
Line_25 $$ ByteArrayOutputStream errorBuffer = new ByteArrayOutputStream() --> Line_30 $$ errorBuffer.write(readBuffer, 0, read) [FD]
Line_27 $$ byte[] readBuffer = new byte[ERROR_READ_BUFFER_SIZE] --> Line_30 $$ errorBuffer.write(readBuffer, 0, read) [FD]
Line_26 $$ int read --> Line_30 $$ errorBuffer.write(readBuffer, 0, read) [FD]
Line_5 $$ HttpURLConnection conn --> Line_32 $$ throw new RestException("Request failed, HTTP " + responseCode + ": " + conn.getResponseMessage(), errorBuffer.toByteArray()) [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_32 $$ throw new RestException("Request failed, HTTP " + responseCode + ": " + conn.getResponseMessage(), errorBuffer.toByteArray()) [FD]
Line_19 $$ conn = (HttpURLConnection) url.openConnection() --> Line_32 $$ throw new RestException("Request failed, HTTP " + responseCode + ": " + conn.getResponseMessage(), errorBuffer.toByteArray()) [FD]
Line_25 $$ ByteArrayOutputStream errorBuffer = new ByteArrayOutputStream() --> Line_32 $$ throw new RestException("Request failed, HTTP " + responseCode + ": " + conn.getResponseMessage(), errorBuffer.toByteArray()) [FD]
Line_2 $$ public static InputStream call(String serviceUrl, Map parameters) throws IOException, RestException --> Line_34 $$ return conn.getInputStream() [CD]
Line_5 $$ HttpURLConnection conn --> Line_34 $$ return conn.getInputStream() [FD]
Line_8 $$ conn = (HttpURLConnection) url.openConnection() --> Line_34 $$ return conn.getInputStream() [FD]
Line_19 $$ conn = (HttpURLConnection) url.openConnection() --> Line_34 $$ return conn.getInputStream() [FD]
