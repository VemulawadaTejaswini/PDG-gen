Line_2 $$ public void doFilter(final ServletRequest arg0, final ServletResponse arg1, final FilterChain arg2) throws IOException, ServletException --> Line_3 $$ if (!this.init) [CD]
Line_3 $$ if (!this.init) --> Line_4 $$ final HttpServletResponse response = Dynamic._.Cast(arg1) [CD]
Line_2 $$ public void doFilter(final ServletRequest arg0, final ServletResponse arg1, final FilterChain arg2) throws IOException, ServletException --> Line_4 $$ final HttpServletResponse response = Dynamic._.Cast(arg1) [FD]
Line_3 $$ if (!this.init) --> Line_5 $$ response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE, "Mainfilter not initialized.") [CD]
Line_4 $$ final HttpServletResponse response = Dynamic._.Cast(arg1) --> Line_5 $$ response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE, "Mainfilter not initialized.") [FD]
Line_3 $$ if (!this.init) --> Line_6 $$ return [CD]
Line_2 $$ public void doFilter(final ServletRequest arg0, final ServletResponse arg1, final FilterChain arg2) throws IOException, ServletException --> Line_8 $$ if (this.mainFilter != null) [CD]
Line_11 $$ URLConnection uc = url.openConnection() --> Line_12 $$ if (uc.getLastModified() != lastLoadLog4j) [FD]
Line_12 $$ if (uc.getLastModified() != lastLoadLog4j) --> Line_13 $$ lastLoadLog4j = uc.getLastModified() [CD]
Line_11 $$ URLConnection uc = url.openConnection() --> Line_13 $$ lastLoadLog4j = uc.getLastModified() [FD]
Line_11 $$ URLConnection uc = url.openConnection() --> Line_15 $$ uc.getInputStream().close() [FD]
Line_12 $$ if (uc.getLastModified() != lastLoadLog4j) --> Line_18 $$ PropertyConfigurator.configure(url) [CD]
Line_11 $$ URLConnection uc = url.openConnection() --> Line_21 $$ uc.getInputStream().close() [FD]
Line_8 $$ if (this.mainFilter != null) --> Line_27 $$ this.mainFilter.doFilter(arg0, arg1) [CD]
Line_2 $$ public void doFilter(final ServletRequest arg0, final ServletResponse arg1, final FilterChain arg2) throws IOException, ServletException --> Line_27 $$ this.mainFilter.doFilter(arg0, arg1) [FD]
Line_8 $$ if (this.mainFilter != null) --> Line_29 $$ final HttpServletResponse response = Dynamic._.Cast(arg1) [CD]
Line_2 $$ public void doFilter(final ServletRequest arg0, final ServletResponse arg1, final FilterChain arg2) throws IOException, ServletException --> Line_29 $$ final HttpServletResponse response = Dynamic._.Cast(arg1) [FD]
Line_8 $$ if (this.mainFilter != null) --> Line_30 $$ response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE, "Mainfilter bad setup.") [CD]
Line_4 $$ final HttpServletResponse response = Dynamic._.Cast(arg1) --> Line_30 $$ response.sendError(HttpServletResponse.SC_SERVICE_UNAVAILABLE, "Mainfilter bad setup.") [FD]
