Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_3 $$ URL url = null [CD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_4 $$ File tempUnit = null [CD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_5 $$ BufferedOutputStream bos = null [CD]
Line_3 $$ URL url = null --> Line_7 $$ url = new URL(urlStr) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_9 $$ logger.error(String.format("The url [%s] is illegal.", urlStr), e1) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_10 $$ throw new UnitTransportException(String.format("The url [%s] is illegal.", urlStr), e1) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_12 $$ URLConnection con = null [CD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_13 $$ BufferedInputStream in = null [CD]
Line_12 $$ URLConnection con = null --> Line_15 $$ con = url.openConnection() [FD]
Line_3 $$ URL url = null --> Line_15 $$ con = url.openConnection() [FD]
Line_7 $$ url = new URL(urlStr) --> Line_15 $$ con = url.openConnection() [FD]
Line_13 $$ BufferedInputStream in = null --> Line_16 $$ in = new BufferedInputStream(con.getInputStream()) [FD]
Line_12 $$ URLConnection con = null --> Line_16 $$ in = new BufferedInputStream(con.getInputStream()) [FD]
Line_15 $$ con = url.openConnection() --> Line_16 $$ in = new BufferedInputStream(con.getInputStream()) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_18 $$ logger.error(String.format("Can't open url [%s].", urlStr)) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_19 $$ throw new UnitTransportException(String.format("Can't open url [%s].", urlStr), e) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_21 $$ logger.error(String.format("Unknown error. Maybe miss the username and password in url [%s].", urlStr), e) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_22 $$ throw new UnitTransportException(String.format("Unknown error. Maybe miss the username and password in url [%s].", urlStr), e) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_24 $$ String unitName = urlStr.substring(urlStr.lastIndexOf('/') + 1) [CD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_24 $$ String unitName = urlStr.substring(urlStr.lastIndexOf('/') + 1) [FD]
Line_24 $$ String unitName = urlStr.substring(urlStr.lastIndexOf('/') + 1) --> Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) [FD]
Line_4 $$ File tempUnit = null --> Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) [FD]
Line_4 $$ File tempUnit = null --> Line_28 $$ logger.error(String.format("Can't get temp file [%s].", tempUnit)) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_28 $$ logger.error(String.format("Can't get temp file [%s].", tempUnit)) [FD]
Line_4 $$ File tempUnit = null --> Line_29 $$ throw new UnitTransportException(String.format("Can't get temp file [%s].", tempUnit), e) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_29 $$ throw new UnitTransportException(String.format("Can't get temp file [%s].", tempUnit), e) [FD]
Line_5 $$ BufferedOutputStream bos = null --> Line_32 $$ bos = new BufferedOutputStream(new FileOutputStream(tempUnit)) [FD]
Line_4 $$ File tempUnit = null --> Line_33 $$ logger.info(String.format("Use [%s] for ftp unit [%s].", tempUnit, urlStr)) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_33 $$ logger.info(String.format("Use [%s] for ftp unit [%s].", tempUnit, urlStr)) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_33 $$ logger.info(String.format("Use [%s] for ftp unit [%s].", tempUnit, urlStr)) [FD]
Line_4 $$ File tempUnit = null --> Line_35 $$ logger.error(String.format("File [%s] don't exist.", tempUnit)) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_35 $$ logger.error(String.format("File [%s] don't exist.", tempUnit)) [FD]
Line_4 $$ File tempUnit = null --> Line_36 $$ throw new UnitTransportException(String.format("File [%s] don't exist.", tempUnit), e) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_36 $$ throw new UnitTransportException(String.format("File [%s] don't exist.", tempUnit), e) [FD]
Line_13 $$ BufferedInputStream in = null --> Line_39 $$ IOUtils.copy(in, bos) [FD]
Line_16 $$ in = new BufferedInputStream(con.getInputStream()) --> Line_39 $$ IOUtils.copy(in, bos) [FD]
Line_5 $$ BufferedOutputStream bos = null --> Line_39 $$ IOUtils.copy(in, bos) [FD]
Line_32 $$ bos = new BufferedOutputStream(new FileOutputStream(tempUnit)) --> Line_39 $$ IOUtils.copy(in, bos) [FD]
Line_5 $$ BufferedOutputStream bos = null --> Line_40 $$ bos.flush() [FD]
Line_32 $$ bos = new BufferedOutputStream(new FileOutputStream(tempUnit)) --> Line_40 $$ bos.flush() [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_42 $$ logger.error(String.format("Error when download [%s] to [%s].", urlStr, tempUnit), e) [FD]
Line_4 $$ File tempUnit = null --> Line_42 $$ logger.error(String.format("Error when download [%s] to [%s].", urlStr, tempUnit), e) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_42 $$ logger.error(String.format("Error when download [%s] to [%s].", urlStr, tempUnit), e) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_43 $$ throw new UnitTransportException(String.format("Error when download [%s] to [%s].", urlStr, tempUnit), e) [FD]
Line_4 $$ File tempUnit = null --> Line_43 $$ throw new UnitTransportException(String.format("Error when download [%s] to [%s].", urlStr, tempUnit), e) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_43 $$ throw new UnitTransportException(String.format("Error when download [%s] to [%s].", urlStr, tempUnit), e) [FD]
Line_5 $$ BufferedOutputStream bos = null --> Line_45 $$ IOUtils.closeQuietly(bos) [FD]
Line_32 $$ bos = new BufferedOutputStream(new FileOutputStream(tempUnit)) --> Line_45 $$ IOUtils.closeQuietly(bos) [FD]
Line_13 $$ BufferedInputStream in = null --> Line_46 $$ IOUtils.closeQuietly(in) [FD]
Line_16 $$ in = new BufferedInputStream(con.getInputStream()) --> Line_46 $$ IOUtils.closeQuietly(in) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_48 $$ logger.info(String.format("Download unit to [%s].", tempUnit.getAbsolutePath())) [CD]
Line_4 $$ File tempUnit = null --> Line_48 $$ logger.info(String.format("Download unit to [%s].", tempUnit.getAbsolutePath())) [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_48 $$ logger.info(String.format("Download unit to [%s].", tempUnit.getAbsolutePath())) [FD]
Line_2 $$ public String tranportRemoteUnitToLocalTempFile(String urlStr) throws UnitTransportException --> Line_49 $$ return tempUnit.getAbsolutePath() [CD]
Line_4 $$ File tempUnit = null --> Line_49 $$ return tempUnit.getAbsolutePath() [FD]
Line_26 $$ tempUnit = new File(CommonUtil.getTempDir(), unitName) --> Line_49 $$ return tempUnit.getAbsolutePath() [FD]
