Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_3 $$ String filename = this.baseDirectory + service + ".json" [CD]
Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_4 $$ Scanner s = new Scanner(new File(filename)) [CD]
Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_5 $$ PrintWriter fw = new PrintWriter(new File(filename + ".new")) [CD]
Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_6 $$ while (s.hasNextLine()) [CD]
Line_4 $$ Scanner s = new Scanner(new File(filename)) --> Line_6 $$ while (s.hasNextLine()) [FD]
Line_6 $$ while (s.hasNextLine()) --> Line_7 $$ fw.println(s.nextLine().replaceAll("NODEKEY", this.key)) [CD]
Line_5 $$ PrintWriter fw = new PrintWriter(new File(filename + ".new")) --> Line_7 $$ fw.println(s.nextLine().replaceAll("NODEKEY", this.key)) [FD]
Line_4 $$ Scanner s = new Scanner(new File(filename)) --> Line_7 $$ fw.println(s.nextLine().replaceAll("NODEKEY", this.key)) [FD]
Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_9 $$ s.close() [CD]
Line_4 $$ Scanner s = new Scanner(new File(filename)) --> Line_9 $$ s.close() [FD]
Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_10 $$ fw.close() [CD]
Line_5 $$ PrintWriter fw = new PrintWriter(new File(filename + ".new")) --> Line_10 $$ fw.close() [FD]
Line_2 $$ private void setNodekeyInJsonResponse(String service) throws Exception --> Line_11 $$ (new File(filename + ".new")).renameTo(new File(filename)) [CD]
