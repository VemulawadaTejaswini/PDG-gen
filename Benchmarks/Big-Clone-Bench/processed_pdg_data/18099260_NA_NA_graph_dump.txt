Line_2 $$ public String[][] getProjectTreeData() --> Line_3 $$ String[][] treeData = null [CD]
Line_2 $$ public String[][] getProjectTreeData() --> Line_4 $$ String filename = dms_home + FS + "temp" + FS + username + "projects.xml" [CD]
Line_2 $$ public String[][] getProjectTreeData() --> Line_5 $$ String urlString = dms_url + "/servlet/com.ufnasoft.dms.server.ServerGetProjects" [CD]
Line_7 $$ String urldata = urlString + "?username=" + URLEncoder.encode(username, "UTF-8") + "&key=" + URLEncoder.encode(key, "UTF-8") + "&filename=" + URLEncoder.encode(username, "UTF-8") + "projects.xml" --> Line_8 $$ System.out.println(urldata) [FD]
Line_9 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance() --> Line_10 $$ factory.setValidating(false) [FD]
Line_9 $$ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance() --> Line_11 $$ DocumentBuilder parser = factory.newDocumentBuilder() [FD]
Line_12 $$ URL u = new URL(urldata) --> Line_13 $$ DataInputStream is = new DataInputStream(u.openStream()) [FD]
Line_13 $$ DataInputStream is = new DataInputStream(u.openStream()) --> Line_15 $$ int iBufSize = is.available() [FD]
Line_17 $$ int iNumRead --> Line_18 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead) [FD]
Line_13 $$ DataInputStream is = new DataInputStream(u.openStream()) --> Line_18 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead) [FD]
Line_15 $$ int iBufSize = is.available() --> Line_18 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead) [FD]
Line_14 $$ FileOutputStream os = new FileOutputStream(filename) --> Line_18 $$ while ((iNumRead = is.read(inBuf, 0, iBufSize)) > 0) os.write(inBuf, 0, iNumRead) [FD]
Line_14 $$ FileOutputStream os = new FileOutputStream(filename) --> Line_19 $$ os.close() [FD]
Line_13 $$ DataInputStream is = new DataInputStream(u.openStream()) --> Line_20 $$ is.close() [FD]
Line_11 $$ DocumentBuilder parser = factory.newDocumentBuilder() --> Line_23 $$ Document document = parser.parse(inputstream) [FD]
Line_22 $$ InputStream inputstream = new FileInputStream(f) --> Line_23 $$ Document document = parser.parse(inputstream) [FD]
Line_23 $$ Document document = parser.parse(inputstream) --> Line_24 $$ NodeList nodelist = document.getElementsByTagName("j") [FD]
Line_24 $$ NodeList nodelist = document.getElementsByTagName("j") --> Line_25 $$ int num = nodelist.getLength() [FD]
Line_3 $$ String[][] treeData = null --> Line_26 $$ treeData = new String[num][5] [FD]
Line_25 $$ int num = nodelist.getLength() --> Line_27 $$ for (int i = 0; i < num; i++) [FD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_28 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "i")) [CD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_28 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "i")) [FD]
Line_24 $$ NodeList nodelist = document.getElementsByTagName("j") --> Line_28 $$ treeData[i][0] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "i")) [FD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_29 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pi")) [CD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_29 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pi")) [FD]
Line_24 $$ NodeList nodelist = document.getElementsByTagName("j") --> Line_29 $$ treeData[i][1] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "pi")) [FD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_30 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p")) [CD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_30 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p")) [FD]
Line_24 $$ NodeList nodelist = document.getElementsByTagName("j") --> Line_30 $$ treeData[i][2] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "p")) [FD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_31 $$ treeData[i][3] = "" [CD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_32 $$ treeData[i][4] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "f")) [CD]
Line_27 $$ for (int i = 0; i < num; i++) --> Line_32 $$ treeData[i][4] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "f")) [FD]
Line_24 $$ NodeList nodelist = document.getElementsByTagName("j") --> Line_32 $$ treeData[i][4] = new String(DOMUtil.getSimpleElementText((Element) nodelist.item(i), "f")) [FD]
Line_2 $$ public String[][] getProjectTreeData() --> Line_42 $$ return treeData [CD]
