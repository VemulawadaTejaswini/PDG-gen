Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_4 $$ JivesScene.setActiveScene(null) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_5 $$ boolean allowScripting = JiveScriptEngine.allowScripting [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_6 $$ JiveScriptEngine.allowScripting = true [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_7 $$ JiveScriptEngine.FILENAME = null [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_8 $$ URL url = new URL(path) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_9 $$ InputStream fis = url.openStream() [CD]
Line_8 $$ URL url = new URL(path) --> Line_9 $$ InputStream fis = url.openStream() [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_10 $$ if (fis == null) [CD]
Line_9 $$ InputStream fis = url.openStream() --> Line_10 $$ if (fis == null) [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(fis)) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_15 $$ String line [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_16 $$ while ((line = br.readLine()) != null) [CD]
Line_15 $$ String line --> Line_16 $$ while ((line = br.readLine()) != null) [FD]
Line_13 $$ BufferedReader br = new BufferedReader(new InputStreamReader(fis)) --> Line_16 $$ while ((line = br.readLine()) != null) [FD]
Line_16 $$ while ((line = br.readLine()) != null) --> Line_17 $$ script = script.concat(line) + Log.LINE_SEPARATOR [FD]
Line_15 $$ String line --> Line_17 $$ script = script.concat(line) + Log.LINE_SEPARATOR [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_19 $$ eval(script) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_20 $$ if (JiveScriptEngine.FILENAME == null) [CD]
Line_20 $$ if (JiveScriptEngine.FILENAME == null) --> Line_21 $$ String filename = path.substring(path.lastIndexOf(File.separatorChar) + 1) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_21 $$ String filename = path.substring(path.lastIndexOf(File.separatorChar) + 1) [FD]
Line_20 $$ if (JiveScriptEngine.FILENAME == null) --> Line_22 $$ JiveScriptEngine.FILENAME = filename [CD]
Line_21 $$ String filename = path.substring(path.lastIndexOf(File.separatorChar) + 1) --> Line_22 $$ JiveScriptEngine.FILENAME = filename [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_24 $$ JiveScriptEngine.MD5 = DigestUtils.md5Hex(script.toString().getBytes()) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_25 $$ NetworkImplementorIntf networkImplementor = Jives.getNetwork() [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_26 $$ Object[] config = (Object[]) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_ALL) [CD]
Line_25 $$ NetworkImplementorIntf networkImplementor = Jives.getNetwork() --> Line_26 $$ Object[] config = (Object[]) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_ALL) [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_27 $$ boolean internet = (Boolean) config[NetworkImplementorIntf.CONNECTIONSTATE_INTERNET] [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_28 $$ if (internet) [CD]
Line_28 $$ if (internet) --> Line_29 $$ echo("Starting network on the internet") [CD]
Line_28 $$ if (internet) --> Line_31 $$ boolean ipv6 = (Boolean) config[NetworkImplementorIntf.CONNECTIONSTATE_IPV6] [CD]
Line_28 $$ if (internet) --> Line_32 $$ String connection = (String) config[NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV4] + ":" + (Integer) config[NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV4_PORT] [CD]
Line_28 $$ if (internet) --> Line_33 $$ if (ipv6) [CD]
Line_33 $$ if (ipv6) --> Line_34 $$ connection = (String) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV6) + ":" + (Integer) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV6_PORT) [CD]
Line_32 $$ String connection = (String) config[NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV4] + ":" + (Integer) config[NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV4_PORT] --> Line_34 $$ connection = (String) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV6) + ":" + (Integer) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV6_PORT) [FD]
Line_25 $$ NetworkImplementorIntf networkImplementor = Jives.getNetwork() --> Line_34 $$ connection = (String) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV6) + ":" + (Integer) networkImplementor.getConnectionState(NetworkImplementorIntf.CONNECTIONSTATE_RENDEZVOUS_IPV6_PORT) [FD]
Line_28 $$ if (internet) --> Line_36 $$ echo("Starting network on " + connection) [CD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_38 $$ networkImplementor.startNetwork(JiveScriptEngine.FILENAME, JiveScriptEngine.MD5) [CD]
Line_25 $$ NetworkImplementorIntf networkImplementor = Jives.getNetwork() --> Line_38 $$ networkImplementor.startNetwork(JiveScriptEngine.FILENAME, JiveScriptEngine.MD5) [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_39 $$ fis.close() [CD]
Line_9 $$ InputStream fis = url.openStream() --> Line_39 $$ fis.close() [FD]
Line_2 $$ public void load(String path) throws JiveScriptException, IOException --> Line_40 $$ if (JiveScriptEngine.allowScripting && !allowScripting) [CD]
Line_5 $$ boolean allowScripting = JiveScriptEngine.allowScripting --> Line_40 $$ if (JiveScriptEngine.allowScripting && !allowScripting) [FD]
Line_40 $$ if (JiveScriptEngine.allowScripting && !allowScripting) --> Line_41 $$ JiveScriptEngine.allowScripting = allowScripting [CD]
Line_5 $$ boolean allowScripting = JiveScriptEngine.allowScripting --> Line_41 $$ JiveScriptEngine.allowScripting = allowScripting [FD]
