Line_2 $$ private String computeHash(String str) --> Line_3 $$ StringBuffer hexBuffer = new StringBuffer() [CD]
Line_2 $$ private String computeHash(String str) --> Line_4 $$ byte[] bytes [CD]
Line_2 $$ private String computeHash(String str) --> Line_5 $$ int i [CD]
Line_7 $$ MessageDigest hashAlgorithm = MessageDigest.getInstance(hashAlgorithmName) --> Line_8 $$ hashAlgorithm.reset() [FD]
Line_7 $$ MessageDigest hashAlgorithm = MessageDigest.getInstance(hashAlgorithmName) --> Line_9 $$ hashAlgorithm.update(str.getBytes()) [FD]
Line_2 $$ private String computeHash(String str) --> Line_9 $$ hashAlgorithm.update(str.getBytes()) [FD]
Line_4 $$ byte[] bytes --> Line_10 $$ bytes = hashAlgorithm.digest() [FD]
Line_7 $$ MessageDigest hashAlgorithm = MessageDigest.getInstance(hashAlgorithmName) --> Line_10 $$ bytes = hashAlgorithm.digest() [FD]
Line_2 $$ private String computeHash(String str) --> Line_14 $$ for (i = 0; i < bytes.length; i++) hexBuffer.append(((bytes[i] >= 0 && bytes[i] <= 15) ? "0" : "") + Integer.toHexString(bytes[i] & 0xFF)) [CD]
Line_5 $$ int i --> Line_14 $$ for (i = 0; i < bytes.length; i++) hexBuffer.append(((bytes[i] >= 0 && bytes[i] <= 15) ? "0" : "") + Integer.toHexString(bytes[i] & 0xFF)) [FD]
Line_3 $$ StringBuffer hexBuffer = new StringBuffer() --> Line_14 $$ for (i = 0; i < bytes.length; i++) hexBuffer.append(((bytes[i] >= 0 && bytes[i] <= 15) ? "0" : "") + Integer.toHexString(bytes[i] & 0xFF)) [FD]
Line_2 $$ private String computeHash(String str) --> Line_15 $$ return hexBuffer.toString() [CD]
Line_3 $$ StringBuffer hexBuffer = new StringBuffer() --> Line_15 $$ return hexBuffer.toString() [FD]
