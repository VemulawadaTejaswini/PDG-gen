Line_2 $$ private void getDownloadLink() throws Exception --> Line_4 $$ NULogger.getLogger().info("Now Getting Download link...") [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_5 $$ HttpClient client = new DefaultHttpClient() [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_6 $$ HttpGet h = new HttpGet(uploadresponse) [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_7 $$ h.setHeader("Referer", postURL) [CD]
Line_6 $$ HttpGet h = new HttpGet(uploadresponse) --> Line_7 $$ h.setHeader("Referer", postURL) [FD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_8 $$ if (zShareAccount.loginsuccessful) [CD]
Line_8 $$ if (zShareAccount.loginsuccessful) --> Line_9 $$ h.setHeader("Cookie", zShareAccount.getSidcookie() + ";" + zShareAccount.getMysessioncookie()) [CD]
Line_6 $$ HttpGet h = new HttpGet(uploadresponse) --> Line_9 $$ h.setHeader("Cookie", zShareAccount.getSidcookie() + ";" + zShareAccount.getMysessioncookie()) [FD]
Line_8 $$ if (zShareAccount.loginsuccessful) --> Line_11 $$ h.setHeader("Cookie", sidcookie + ";" + mysessioncookie) [CD]
Line_6 $$ HttpGet h = new HttpGet(uploadresponse) --> Line_11 $$ h.setHeader("Cookie", sidcookie + ";" + mysessioncookie) [FD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_13 $$ HttpResponse res = client.execute(h) [CD]
Line_5 $$ HttpClient client = new DefaultHttpClient() --> Line_13 $$ HttpResponse res = client.execute(h) [FD]
Line_6 $$ HttpGet h = new HttpGet(uploadresponse) --> Line_13 $$ HttpResponse res = client.execute(h) [FD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_14 $$ HttpEntity entity = res.getEntity() [CD]
Line_13 $$ HttpResponse res = client.execute(h) --> Line_14 $$ HttpEntity entity = res.getEntity() [FD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_15 $$ linkpage = EntityUtils.toString(entity) [CD]
Line_14 $$ HttpEntity entity = res.getEntity() --> Line_15 $$ linkpage = EntityUtils.toString(entity) [FD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_16 $$ linkpage = linkpage.replaceAll("\n", "") [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_17 $$ downloadlink = CommonUploaderTasks.parseResponse(linkpage, "value=\"", "\"") [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_18 $$ deletelink = CommonUploaderTasks.parseResponse(linkpage, "delete.html?", "\"") [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_22 $$ NULogger.getLogger().log(Level.INFO, "Download link : [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_23 $$ NULogger.getLogger().log(Level.INFO, "Delete Link : [CD]
Line_2 $$ private void getDownloadLink() throws Exception --> Line_24 $$ uploadFinished() [CD]
