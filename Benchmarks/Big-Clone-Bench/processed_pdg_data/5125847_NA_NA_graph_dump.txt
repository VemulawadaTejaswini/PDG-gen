Line_2 $$ public static Node combineCss(URL base, List<Node> linkCss, List<File> newFiles) throws IOException --> Line_3 $$ File dir = File.createTempFile("css", "" + System.currentTimeMillis()) [CD]
Line_2 $$ public static Node combineCss(URL base, List<Node> linkCss, List<File> newFiles) throws IOException --> Line_4 $$ StringBuilder name = new StringBuilder() [CD]
Line_3 $$ File dir = File.createTempFile("css", "" + System.currentTimeMillis()) --> Line_6 $$ if (dir.delete() && dir.mkdirs()) [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_7 $$ File minDir = new File(dir, "min") [CD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_8 $$ minDir.mkdir() [CD]
Line_7 $$ File minDir = new File(dir, "min") --> Line_8 $$ minDir.mkdir() [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_9 $$ File combineFile = new File(minDir, "style.css") [CD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_10 $$ Writer writer = new FileWriter(combineFile) [CD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_11 $$ boolean first = true [CD]
Line_2 $$ public static Node combineCss(URL base, List<Node> linkCss, List<File> newFiles) throws IOException --> Line_14 $$ URL url = new URL(buildUrl(base, path)) [FD]
Line_13 $$ String path = ((Element) link).getAttribute("href") --> Line_14 $$ URL url = new URL(buildUrl(base, path)) [FD]
Line_14 $$ URL url = new URL(buildUrl(base, path)) --> Line_15 $$ InputStream inputStream = url.openStream() [FD]
Line_14 $$ URL url = new URL(buildUrl(base, path)) --> Line_16 $$ File cssFile = new File(dir, fileName(url)) [FD]
Line_15 $$ InputStream inputStream = url.openStream() --> Line_18 $$ IOUtils.copy(inputStream, outputStream) [FD]
Line_17 $$ FileOutputStream outputStream = new FileOutputStream(cssFile) --> Line_18 $$ IOUtils.copy(inputStream, outputStream) [FD]
Line_17 $$ FileOutputStream outputStream = new FileOutputStream(cssFile) --> Line_19 $$ outputStream.close() [FD]
Line_15 $$ InputStream inputStream = url.openStream() --> Line_20 $$ inputStream.close() [FD]
Line_11 $$ boolean first = true --> Line_21 $$ if (!first) [FD]
Line_21 $$ if (!first) --> Line_22 $$ writer.write('\n') [CD]
Line_10 $$ Writer writer = new FileWriter(combineFile) --> Line_22 $$ writer.write('\n') [FD]
Line_21 $$ if (!first) --> Line_24 $$ first = false [CD]
Line_11 $$ boolean first = true --> Line_24 $$ first = false [FD]
Line_27 $$ if (Configuration.cssMinification()) --> Line_28 $$ CssCompressor cssCompressor = new CssCompressor(reader) [CD]
Line_27 $$ if (Configuration.cssMinification()) --> Line_29 $$ cssCompressor.compress(writer, 0) [CD]
Line_28 $$ CssCompressor cssCompressor = new CssCompressor(reader) --> Line_29 $$ cssCompressor.compress(writer, 0) [FD]
Line_10 $$ Writer writer = new FileWriter(combineFile) --> Line_29 $$ cssCompressor.compress(writer, 0) [FD]
Line_27 $$ if (Configuration.cssMinification()) --> Line_31 $$ IOUtils.copy(reader, writer) [CD]
Line_26 $$ Reader reader = new FileReader(cssFile) --> Line_31 $$ IOUtils.copy(reader, writer) [FD]
Line_10 $$ Writer writer = new FileWriter(combineFile) --> Line_31 $$ IOUtils.copy(reader, writer) [FD]
Line_26 $$ Reader reader = new FileReader(cssFile) --> Line_33 $$ reader.close() [FD]
Line_16 $$ File cssFile = new File(dir, fileName(url)) --> Line_34 $$ String fileName = cssFile.getName() [FD]
Line_34 $$ String fileName = cssFile.getName() --> Line_35 $$ int pos = fileName.lastIndexOf('.') [FD]
Line_35 $$ int pos = fileName.lastIndexOf('.') --> Line_36 $$ if (pos >= 0) [FD]
Line_36 $$ if (pos >= 0) --> Line_37 $$ fileName = fileName.substring(0, pos) [CD]
Line_34 $$ String fileName = cssFile.getName() --> Line_37 $$ fileName = fileName.substring(0, pos) [FD]
Line_35 $$ int pos = fileName.lastIndexOf('.') --> Line_37 $$ fileName = fileName.substring(0, pos) [FD]
Line_4 $$ StringBuilder name = new StringBuilder() --> Line_39 $$ name.append(fileName).append(",") [FD]
Line_34 $$ String fileName = cssFile.getName() --> Line_39 $$ name.append(fileName).append(",") [FD]
Line_37 $$ fileName = fileName.substring(0, pos) --> Line_39 $$ name.append(fileName).append(",") [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_41 $$ writer.close() [CD]
Line_10 $$ Writer writer = new FileWriter(combineFile) --> Line_41 $$ writer.close() [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_43 $$ name.append(hashCode(IOUtils.toString(reader))).append(".css") [CD]
Line_4 $$ StringBuilder name = new StringBuilder() --> Line_43 $$ name.append(hashCode(IOUtils.toString(reader))).append(".css") [FD]
Line_26 $$ Reader reader = new FileReader(cssFile) --> Line_43 $$ name.append(hashCode(IOUtils.toString(reader))).append(".css") [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_44 $$ reader.close() [CD]
Line_26 $$ Reader reader = new FileReader(cssFile) --> Line_44 $$ reader.close() [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) [CD]
Line_4 $$ StringBuilder name = new StringBuilder() --> Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) [FD]
Line_6 $$ if (dir.delete() && dir.mkdirs()) --> Line_46 $$ if (!targetFile.exists()) [CD]
Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) --> Line_46 $$ if (!targetFile.exists()) [FD]
Line_46 $$ if (!targetFile.exists()) --> Line_47 $$ targetFile.getParentFile().mkdirs() [CD]
Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) --> Line_47 $$ targetFile.getParentFile().mkdirs() [FD]
Line_46 $$ if (!targetFile.exists()) --> Line_48 $$ FileUtils.copyFile(combineFile, targetFile) [CD]
Line_9 $$ File combineFile = new File(minDir, "style.css") --> Line_48 $$ FileUtils.copyFile(combineFile, targetFile) [FD]
Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) --> Line_48 $$ FileUtils.copyFile(combineFile, targetFile) [FD]
Line_46 $$ if (!targetFile.exists()) --> Line_49 $$ newFiles.add(targetFile) [CD]
Line_2 $$ public static Node combineCss(URL base, List<Node> linkCss, List<File> newFiles) throws IOException --> Line_49 $$ newFiles.add(targetFile) [FD]
Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) --> Line_49 $$ newFiles.add(targetFile) [FD]
Line_46 $$ if (!targetFile.exists()) --> Line_50 $$ logger.info("Combined several css files into the single " + targetFile + " [size=" + targetFile.length() + "].") [CD]
Line_45 $$ File targetFile = new File(Configuration.getCssLocalDir(), name.toString()) --> Line_50 $$ logger.info("Combined several css files into the single " + targetFile + " [size=" + targetFile.length() + "].") [FD]
Line_3 $$ File dir = File.createTempFile("css", "" + System.currentTimeMillis()) --> Line_54 $$ FileUtils.deleteQuietly(dir) [FD]
Line_2 $$ public static Node combineCss(URL base, List<Node> linkCss, List<File> newFiles) throws IOException --> Line_56 $$ if (name.length() != 0) [CD]
Line_4 $$ StringBuilder name = new StringBuilder() --> Line_56 $$ if (name.length() != 0) [FD]
Line_56 $$ if (name.length() != 0) --> Line_57 $$ Element element = (Element) linkCss.get(0) [CD]
Line_2 $$ public static Node combineCss(URL base, List<Node> linkCss, List<File> newFiles) throws IOException --> Line_57 $$ Element element = (Element) linkCss.get(0) [FD]
Line_56 $$ if (name.length() != 0) --> Line_58 $$ element.setAttribute("href", Configuration.getCssUrlPrefix() + name.toString()) [CD]
Line_57 $$ Element element = (Element) linkCss.get(0) --> Line_58 $$ element.setAttribute("href", Configuration.getCssUrlPrefix() + name.toString()) [FD]
Line_4 $$ StringBuilder name = new StringBuilder() --> Line_58 $$ element.setAttribute("href", Configuration.getCssUrlPrefix() + name.toString()) [FD]
Line_56 $$ if (name.length() != 0) --> Line_59 $$ return element [CD]
Line_56 $$ if (name.length() != 0) --> Line_61 $$ return null [CD]
