Line_2 $$ public static void unzip(String zipFileName, String folder, boolean isCreate) throws IOException --> Line_3 $$ File file = new File(zipFileName) [CD]
Line_2 $$ public static void unzip(String zipFileName, String folder, boolean isCreate) throws IOException --> Line_4 $$ File folderfile = null [CD]
Line_2 $$ public static void unzip(String zipFileName, String folder, boolean isCreate) throws IOException --> Line_5 $$ if (file.exists() && file.isFile()) [CD]
Line_3 $$ File file = new File(zipFileName) --> Line_5 $$ if (file.exists() && file.isFile()) [FD]
Line_5 $$ if (file.exists() && file.isFile()) --> Line_6 $$ String mfolder = folder == null ? file.getParent() : folder [CD]
Line_3 $$ File file = new File(zipFileName) --> Line_6 $$ String mfolder = folder == null ? file.getParent() : folder [FD]
Line_5 $$ if (file.exists() && file.isFile()) --> Line_7 $$ String fn = file.getName() [CD]
Line_3 $$ File file = new File(zipFileName) --> Line_7 $$ String fn = file.getName() [FD]
Line_5 $$ if (file.exists() && file.isFile()) --> Line_8 $$ fn = fn.substring(0, fn.lastIndexOf(".")) [CD]
Line_7 $$ String fn = file.getName() --> Line_8 $$ fn = fn.substring(0, fn.lastIndexOf(".")) [FD]
Line_5 $$ if (file.exists() && file.isFile()) --> Line_9 $$ mfolder = isCreate ? (mfolder + File.separator + fn) : mfolder [CD]
Line_6 $$ String mfolder = folder == null ? file.getParent() : folder --> Line_9 $$ mfolder = isCreate ? (mfolder + File.separator + fn) : mfolder [FD]
Line_5 $$ if (file.exists() && file.isFile()) --> Line_10 $$ folderfile = new File(mfolder) [CD]
Line_4 $$ File folderfile = null --> Line_10 $$ folderfile = new File(mfolder) [FD]
Line_5 $$ if (file.exists() && file.isFile()) --> Line_11 $$ if (!folderfile.exists()) [CD]
Line_4 $$ File folderfile = null --> Line_11 $$ if (!folderfile.exists()) [FD]
Line_10 $$ folderfile = new File(mfolder) --> Line_11 $$ if (!folderfile.exists()) [FD]
Line_11 $$ if (!folderfile.exists()) --> Line_12 $$ folderfile.mkdirs() [CD]
Line_4 $$ File folderfile = null --> Line_12 $$ folderfile.mkdirs() [FD]
Line_10 $$ folderfile = new File(mfolder) --> Line_12 $$ folderfile.mkdirs() [FD]
Line_2 $$ public static void unzip(String zipFileName, String folder, boolean isCreate) throws IOException --> Line_17 $$ ZipFile zipFile = new ZipFile(file) [CD]
Line_17 $$ ZipFile zipFile = new ZipFile(file) --> Line_19 $$ Enumeration<ZipArchiveEntry> en = zipFile.getEntries() [FD]
Line_21 $$ while (en.hasMoreElements()) --> Line_22 $$ ze = en.nextElement() [CD]
Line_21 $$ while (en.hasMoreElements()) --> Line_23 $$ if (ze.isDirectory()) [CD]
Line_22 $$ ze = en.nextElement() --> Line_23 $$ if (ze.isDirectory()) [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_24 $$ String dirName = ze.getName() [CD]
Line_22 $$ ze = en.nextElement() --> Line_24 $$ String dirName = ze.getName() [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_25 $$ dirName = dirName.substring(0, dirName.length() - 1) [CD]
Line_24 $$ String dirName = ze.getName() --> Line_25 $$ dirName = dirName.substring(0, dirName.length() - 1) [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) [CD]
Line_4 $$ File folderfile = null --> Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) [FD]
Line_10 $$ folderfile = new File(mfolder) --> Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_27 $$ f.mkdirs() [CD]
Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) --> Line_27 $$ f.mkdirs() [FD]
Line_4 $$ File folderfile = null --> Line_29 $$ File f = new File(folderfile.getPath() + File.separator + ze.getName()) [FD]
Line_10 $$ folderfile = new File(mfolder) --> Line_29 $$ File f = new File(folderfile.getPath() + File.separator + ze.getName()) [FD]
Line_22 $$ ze = en.nextElement() --> Line_29 $$ File f = new File(folderfile.getPath() + File.separator + ze.getName()) [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_30 $$ if (!f.getParentFile().exists()) [CD]
Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) --> Line_30 $$ if (!f.getParentFile().exists()) [FD]
Line_30 $$ if (!f.getParentFile().exists()) --> Line_31 $$ f.getParentFile().mkdirs() [CD]
Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) --> Line_31 $$ f.getParentFile().mkdirs() [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_33 $$ f.createNewFile() [CD]
Line_26 $$ File f = new File(folderfile.getPath() + File.separator + dirName) --> Line_33 $$ f.createNewFile() [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_34 $$ InputStream in = zipFile.getInputStream(ze) [CD]
Line_17 $$ ZipFile zipFile = new ZipFile(file) --> Line_34 $$ InputStream in = zipFile.getInputStream(ze) [FD]
Line_22 $$ ze = en.nextElement() --> Line_34 $$ InputStream in = zipFile.getInputStream(ze) [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_35 $$ OutputStream out = new FileOutputStream(f) [CD]
Line_23 $$ if (ze.isDirectory()) --> Line_36 $$ IOUtils.copy(in, out) [CD]
Line_34 $$ InputStream in = zipFile.getInputStream(ze) --> Line_36 $$ IOUtils.copy(in, out) [FD]
Line_35 $$ OutputStream out = new FileOutputStream(f) --> Line_36 $$ IOUtils.copy(in, out) [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_37 $$ out.close() [CD]
Line_35 $$ OutputStream out = new FileOutputStream(f) --> Line_37 $$ out.close() [FD]
Line_23 $$ if (ze.isDirectory()) --> Line_38 $$ in.close() [CD]
Line_34 $$ InputStream in = zipFile.getInputStream(ze) --> Line_38 $$ in.close() [FD]
Line_17 $$ ZipFile zipFile = new ZipFile(file) --> Line_42 $$ zipFile.close() [FD]
