Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_3 $$ if ((baseName == null) || (locale == null) || (format == null) || (loader == null)) [CD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_6 $$ ResourceBundle bundle = null [CD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_7 $$ if (format.equals(XML)) [CD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_7 $$ if (format.equals(XML)) [FD]
Line_7 $$ if (format.equals(XML)) --> Line_8 $$ String bundleName = toBundleName(baseName, locale) [CD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_8 $$ String bundleName = toBundleName(baseName, locale) [FD]
Line_7 $$ if (format.equals(XML)) --> Line_9 $$ String resourceName = toResourceName(bundleName, format) [CD]
Line_8 $$ String bundleName = toBundleName(baseName, locale) --> Line_9 $$ String resourceName = toResourceName(bundleName, format) [FD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_9 $$ String resourceName = toResourceName(bundleName, format) [FD]
Line_7 $$ if (format.equals(XML)) --> Line_10 $$ URL url = loader.getResource(resourceName) [CD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_10 $$ URL url = loader.getResource(resourceName) [FD]
Line_9 $$ String resourceName = toResourceName(bundleName, format) --> Line_10 $$ URL url = loader.getResource(resourceName) [FD]
Line_7 $$ if (format.equals(XML)) --> Line_11 $$ if (url != null) [CD]
Line_10 $$ URL url = loader.getResource(resourceName) --> Line_11 $$ if (url != null) [FD]
Line_11 $$ if (url != null) --> Line_12 $$ URLConnection connection = url.openConnection() [CD]
Line_10 $$ URL url = loader.getResource(resourceName) --> Line_12 $$ URLConnection connection = url.openConnection() [FD]
Line_11 $$ if (url != null) --> Line_13 $$ if (connection != null) [CD]
Line_12 $$ URLConnection connection = url.openConnection() --> Line_13 $$ if (connection != null) [FD]
Line_13 $$ if (connection != null) --> Line_14 $$ if (reload) [CD]
Line_14 $$ if (reload) --> Line_15 $$ connection.setUseCaches(false) [CD]
Line_12 $$ URLConnection connection = url.openConnection() --> Line_15 $$ connection.setUseCaches(false) [FD]
Line_13 $$ if (connection != null) --> Line_17 $$ InputStream stream = connection.getInputStream() [CD]
Line_12 $$ URLConnection connection = url.openConnection() --> Line_17 $$ InputStream stream = connection.getInputStream() [FD]
Line_13 $$ if (connection != null) --> Line_18 $$ if (stream != null) [CD]
Line_17 $$ InputStream stream = connection.getInputStream() --> Line_18 $$ if (stream != null) [FD]
Line_18 $$ if (stream != null) --> Line_19 $$ BufferedInputStream bis = new BufferedInputStream(stream) [CD]
Line_18 $$ if (stream != null) --> Line_20 $$ bundle = new XMLResourceBundle(bis) [CD]
Line_6 $$ ResourceBundle bundle = null --> Line_20 $$ bundle = new XMLResourceBundle(bis) [FD]
Line_18 $$ if (stream != null) --> Line_21 $$ bis.close() [CD]
Line_19 $$ BufferedInputStream bis = new BufferedInputStream(stream) --> Line_21 $$ bis.close() [FD]
Line_2 $$ public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException --> Line_26 $$ return bundle [CD]
