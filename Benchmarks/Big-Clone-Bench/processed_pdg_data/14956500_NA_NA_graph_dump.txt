Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_3 $$ resp.setContentType("application/json") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_3 $$ resp.setContentType("application/json") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_4 $$ resp.setCharacterEncoding("utf-8") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_4 $$ resp.setCharacterEncoding("utf-8") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_5 $$ EntityManager em = EMF.get().createEntityManager() [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_6 $$ String url = req.getRequestURL().toString() [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_6 $$ String url = req.getRequestURL().toString() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_7 $$ String key = req.getParameter("key") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_7 $$ String key = req.getParameter("key") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_8 $$ String format = req.getParameter("format") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_8 $$ String format = req.getParameter("format") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_9 $$ if (key == null || !key.equals(Keys.APPREGKEY)) [CD]
Line_7 $$ String key = req.getParameter("key") --> Line_9 $$ if (key == null || !key.equals(Keys.APPREGKEY)) [FD]
Line_9 $$ if (key == null || !key.equals(Keys.APPREGKEY)) --> Line_10 $$ resp.setStatus(HttpServletResponse.SC_UNAUTHORIZED) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_10 $$ resp.setStatus(HttpServletResponse.SC_UNAUTHORIZED) [FD]
Line_9 $$ if (key == null || !key.equals(Keys.APPREGKEY)) --> Line_11 $$ resp.getWriter().print(Error.notAuthorised("").toJSON(em)) [CD]
Line_8 $$ String format = req.getParameter("format") --> Line_11 $$ resp.getWriter().print(Error.notAuthorised("").toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_11 $$ resp.getWriter().print(Error.notAuthorised("").toJSON(em)) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_11 $$ resp.getWriter().print(Error.notAuthorised("").toJSON(em)) [FD]
Line_9 $$ if (key == null || !key.equals(Keys.APPREGKEY)) --> Line_12 $$ em.close() [CD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_12 $$ em.close() [FD]
Line_9 $$ if (key == null || !key.equals(Keys.APPREGKEY)) --> Line_13 $$ return [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_15 $$ String appname = req.getParameter("name") [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_15 $$ String appname = req.getParameter("name") [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_16 $$ if (appname == null || appname.equals("")) [CD]
Line_15 $$ String appname = req.getParameter("name") --> Line_16 $$ if (appname == null || appname.equals("")) [FD]
Line_16 $$ if (appname == null || appname.equals("")) --> Line_17 $$ resp.setStatus(HttpServletResponse.SC_BAD_REQUEST) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_17 $$ resp.setStatus(HttpServletResponse.SC_BAD_REQUEST) [FD]
Line_16 $$ if (appname == null || appname.equals("")) --> Line_18 $$ resp.getWriter().print(Error.noAppId(null).toJSON(em)) [CD]
Line_8 $$ String format = req.getParameter("format") --> Line_18 $$ resp.getWriter().print(Error.noAppId(null).toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_18 $$ resp.getWriter().print(Error.noAppId(null).toJSON(em)) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_18 $$ resp.getWriter().print(Error.noAppId(null).toJSON(em)) [FD]
Line_16 $$ if (appname == null || appname.equals("")) --> Line_19 $$ em.close() [CD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_19 $$ em.close() [FD]
Line_16 $$ if (appname == null || appname.equals("")) --> Line_20 $$ return [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_22 $$ StringBuffer appkey = new StringBuffer() [CD]
Line_24 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5") --> Line_25 $$ algorithm.reset() [FD]
Line_24 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5") --> Line_27 $$ algorithm.update(api.getBytes()) [FD]
Line_26 $$ String api = System.nanoTime() + "" + System.identityHashCode(this) + "" + appname --> Line_27 $$ algorithm.update(api.getBytes()) [FD]
Line_24 $$ MessageDigest algorithm = MessageDigest.getInstance("MD5") --> Line_28 $$ byte[] digest = algorithm.digest() [FD]
Line_29 $$ for (int i = 0; i < digest.length; i++) --> Line_30 $$ appkey.append(Integer.toHexString(0xFF & digest[i])) [CD]
Line_22 $$ StringBuffer appkey = new StringBuffer() --> Line_30 $$ appkey.append(Integer.toHexString(0xFF & digest[i])) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_33 $$ resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR) [FD]
Line_8 $$ String format = req.getParameter("format") --> Line_34 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_34 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_34 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_36 $$ em.close() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_39 $$ ClientApp app = new ClientApp() [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_40 $$ app.setName(appname) [CD]
Line_39 $$ ClientApp app = new ClientApp() --> Line_40 $$ app.setName(appname) [FD]
Line_15 $$ String appname = req.getParameter("name") --> Line_40 $$ app.setName(appname) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_41 $$ app.setKey(appkey.toString()) [CD]
Line_39 $$ ClientApp app = new ClientApp() --> Line_41 $$ app.setKey(appkey.toString()) [FD]
Line_22 $$ StringBuffer appkey = new StringBuffer() --> Line_41 $$ app.setKey(appkey.toString()) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_42 $$ app.setNumreceipts(0L) [CD]
Line_39 $$ ClientApp app = new ClientApp() --> Line_42 $$ app.setNumreceipts(0L) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_43 $$ EntityTransaction tx = em.getTransaction() [CD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_43 $$ EntityTransaction tx = em.getTransaction() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_44 $$ tx.begin() [CD]
Line_43 $$ EntityTransaction tx = em.getTransaction() --> Line_44 $$ tx.begin() [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_46 $$ em.persist(app) [FD]
Line_39 $$ ClientApp app = new ClientApp() --> Line_46 $$ em.persist(app) [FD]
Line_43 $$ EntityTransaction tx = em.getTransaction() --> Line_47 $$ tx.commit() [FD]
Line_39 $$ ClientApp app = new ClientApp() --> Line_49 $$ log.severe("Error persisting application " + app.getName() + ": " + t.getMessage()) [FD]
Line_43 $$ EntityTransaction tx = em.getTransaction() --> Line_50 $$ tx.rollback() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_51 $$ resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR) [FD]
Line_8 $$ String format = req.getParameter("format") --> Line_52 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_52 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_52 $$ resp.getWriter().print(Error.unknownError().toJSON(em)) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_53 $$ em.close() [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_56 $$ resp.setStatus(HttpServletResponse.SC_CREATED) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_56 $$ resp.setStatus(HttpServletResponse.SC_CREATED) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_57 $$ if (format != null && format.equals("xml")) [CD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_57 $$ if (format != null && format.equals("xml")) [FD]
Line_8 $$ String format = req.getParameter("format") --> Line_57 $$ if (format != null && format.equals("xml")) [FD]
Line_39 $$ ClientApp app = new ClientApp() --> Line_57 $$ if (format != null && format.equals("xml")) [FD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_57 $$ if (format != null && format.equals("xml")) [FD]
Line_2 $$ public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException --> Line_58 $$ em.close() [CD]
Line_5 $$ EntityManager em = EMF.get().createEntityManager() --> Line_58 $$ em.close() [FD]
