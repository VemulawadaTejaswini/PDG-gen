Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() [CD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_4 $$ postCon.setRequestMethod(method) [CD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_4 $$ postCon.setRequestMethod(method) [FD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_4 $$ postCon.setRequestMethod(method) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_5 $$ postCon.setDoOutput(true) [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_5 $$ postCon.setDoOutput(true) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_6 $$ postCon.setDoInput(true) [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_6 $$ postCon.setDoInput(true) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_7 $$ if (cookie != null) [CD]
Line_7 $$ if (cookie != null) --> Line_8 $$ postCon.setRequestProperty("Cookie", cookie) [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_8 $$ postCon.setRequestProperty("Cookie", cookie) [FD]
Line_7 $$ if (cookie != null) --> Line_9 $$ if (contentType != null) [CD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_9 $$ if (contentType != null) [FD]
Line_9 $$ if (contentType != null) --> Line_10 $$ postCon.setRequestProperty("Content-type", contentType) [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_10 $$ postCon.setRequestProperty("Content-type", contentType) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_10 $$ postCon.setRequestProperty("Content-type", contentType) [FD]
Line_7 $$ if (cookie != null) --> Line_12 $$ postCon.setRequestProperty("Content-Length", body == null ? "0" : Integer.toString(body.length())) [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_12 $$ postCon.setRequestProperty("Content-Length", body == null ? "0" : Integer.toString(body.length())) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_12 $$ postCon.setRequestProperty("Content-Length", body == null ? "0" : Integer.toString(body.length())) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_14 $$ if (body != null) [CD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_14 $$ if (body != null) [FD]
Line_14 $$ if (body != null) --> Line_15 $$ OutputStream os = postCon.getOutputStream() [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_15 $$ OutputStream os = postCon.getOutputStream() [FD]
Line_14 $$ if (body != null) --> Line_16 $$ OutputStreamWriter out = new OutputStreamWriter(os) [CD]
Line_14 $$ if (body != null) --> Line_17 $$ out.write(body) [CD]
Line_16 $$ OutputStreamWriter out = new OutputStreamWriter(os) --> Line_17 $$ out.write(body) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_17 $$ out.write(body) [FD]
Line_14 $$ if (body != null) --> Line_18 $$ out.close() [CD]
Line_16 $$ OutputStreamWriter out = new OutputStreamWriter(os) --> Line_18 $$ out.close() [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_20 $$ InputStream is = null [CD]
Line_20 $$ InputStream is = null --> Line_22 $$ is = postCon.getInputStream() [FD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_22 $$ is = postCon.getInputStream() [FD]
Line_20 $$ InputStream is = null --> Line_24 $$ is = postCon.getErrorStream() [FD]
Line_22 $$ is = postCon.getInputStream() --> Line_24 $$ is = postCon.getErrorStream() [FD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_24 $$ is = postCon.getErrorStream() [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_26 $$ int resCode = postCon.getResponseCode() [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_26 $$ int resCode = postCon.getResponseCode() [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_27 $$ if (resCode == 201 || resCode == 202) [CD]
Line_27 $$ if (resCode == 201 || resCode == 202) --> Line_28 $$ String loc = postCon.getHeaderField("Location") [CD]
Line_3 $$ HttpURLConnection postCon = (HttpURLConnection) new URL(getUrl(urlStr)).openConnection() --> Line_28 $$ String loc = postCon.getHeaderField("Location") [FD]
Line_27 $$ if (resCode == 201 || resCode == 202) --> Line_29 $$ System.out.println("loc:" + loc) [CD]
Line_27 $$ if (resCode == 201 || resCode == 202) --> Line_30 $$ return loc [CD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_32 $$ StringBuffer sb = StreamUtil.readStream(is) [CD]
Line_20 $$ InputStream is = null --> Line_32 $$ StringBuffer sb = StreamUtil.readStream(is) [FD]
Line_22 $$ is = postCon.getInputStream() --> Line_32 $$ StringBuffer sb = StreamUtil.readStream(is) [FD]
Line_24 $$ is = postCon.getErrorStream() --> Line_32 $$ StringBuffer sb = StreamUtil.readStream(is) [FD]
Line_2 $$ private String send(String method, String contentType, String urlStr, String body) throws MalformedURLException, IOException --> Line_33 $$ return sb.toString() [CD]
Line_32 $$ StringBuffer sb = StreamUtil.readStream(is) --> Line_33 $$ return sb.toString() [FD]
