Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException, NotFoundException --> Line_8 $$ DefinableEntity owningEntity = fa.getOwner().getEntity() [CD]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException, NotFoundException --> Line_9 $$ InputStream in = getFileModule().readFile(owningEntity.getParentBinder(), owningEntity, fa) [CD]
Line_8 $$ DefinableEntity owningEntity = fa.getOwner().getEntity() --> Line_9 $$ InputStream in = getFileModule().readFile(owningEntity.getParentBinder(), owningEntity, fa) [FD]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException, NotFoundException --> Line_11 $$ if (range != null) [FD]
Line_11 $$ if (range != null) --> Line_12 $$ logger.debug("sendContent: ranged content: " + toString(fa)) [CD]
Line_11 $$ if (range != null) --> Line_13 $$ PartialGetHelper.writeRange(in, range, out) [CD]
Line_9 $$ InputStream in = getFileModule().readFile(owningEntity.getParentBinder(), owningEntity, fa) --> Line_13 $$ PartialGetHelper.writeRange(in, range, out) [FD]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException, NotFoundException --> Line_13 $$ PartialGetHelper.writeRange(in, range, out) [FD]
Line_11 $$ if (range != null) --> Line_15 $$ logger.debug("sendContent: send whole file " + toString(fa)) [CD]
Line_11 $$ if (range != null) --> Line_16 $$ IOUtils.copy(in, out) [CD]
Line_9 $$ InputStream in = getFileModule().readFile(owningEntity.getParentBinder(), owningEntity, fa) --> Line_16 $$ IOUtils.copy(in, out) [FD]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException, NotFoundException --> Line_16 $$ IOUtils.copy(in, out) [FD]
Line_2 $$ public void sendContent(OutputStream out, Range range, Map<String, String> params, String contentType) throws IOException, NotAuthorizedException, BadRequestException, NotFoundException --> Line_18 $$ out.flush() [FD]
Line_9 $$ InputStream in = getFileModule().readFile(owningEntity.getParentBinder(), owningEntity, fa) --> Line_24 $$ IOUtils.closeQuietly(in) [FD]
