Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_3 $$ if (Configuration.getConfiguration().isVerifyingNames()) [CD]
Line_3 $$ if (Configuration.getConfiguration().isVerifyingNames()) --> Line_4 $$ long salt = HeartbeatManager.getHeartbeatManager().getSalt() [CD]
Line_3 $$ if (Configuration.getConfiguration().isVerifyingNames()) --> Line_5 $$ String hash = new StringBuilder().append(String.valueOf(salt)).append(username).toString() [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_5 $$ String hash = new StringBuilder().append(String.valueOf(salt)).append(username).toString() [FD]
Line_4 $$ long salt = HeartbeatManager.getHeartbeatManager().getSalt() --> Line_5 $$ String hash = new StringBuilder().append(String.valueOf(salt)).append(username).toString() [FD]
Line_3 $$ if (Configuration.getConfiguration().isVerifyingNames()) --> Line_6 $$ MessageDigest digest [CD]
Line_6 $$ MessageDigest digest --> Line_8 $$ digest = MessageDigest.getInstance("MD5") [FD]
Line_3 $$ if (Configuration.getConfiguration().isVerifyingNames()) --> Line_12 $$ digest.update(hash.getBytes()) [CD]
Line_6 $$ MessageDigest digest --> Line_12 $$ digest.update(hash.getBytes()) [FD]
Line_8 $$ digest = MessageDigest.getInstance("MD5") --> Line_12 $$ digest.update(hash.getBytes()) [FD]
Line_5 $$ String hash = new StringBuilder().append(String.valueOf(salt)).append(username).toString() --> Line_12 $$ digest.update(hash.getBytes()) [FD]
Line_3 $$ if (Configuration.getConfiguration().isVerifyingNames()) --> Line_13 $$ if (!verificationKey.equals(new BigInteger(1, digest.digest()).toString(16))) [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_13 $$ if (!verificationKey.equals(new BigInteger(1, digest.digest()).toString(16))) [FD]
Line_6 $$ MessageDigest digest --> Line_13 $$ if (!verificationKey.equals(new BigInteger(1, digest.digest()).toString(16))) [FD]
Line_8 $$ digest = MessageDigest.getInstance("MD5") --> Line_13 $$ if (!verificationKey.equals(new BigInteger(1, digest.digest()).toString(16))) [FD]
Line_13 $$ if (!verificationKey.equals(new BigInteger(1, digest.digest()).toString(16))) --> Line_14 $$ session.getActionSender().sendLoginFailure("Illegal name.") [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_14 $$ session.getActionSender().sendLoginFailure("Illegal name.") [FD]
Line_13 $$ if (!verificationKey.equals(new BigInteger(1, digest.digest()).toString(16))) --> Line_15 $$ return [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_18 $$ char[] nameChars = username.toCharArray() [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_18 $$ char[] nameChars = username.toCharArray() [FD]
Line_20 $$ if (nameChar < ' ' || nameChar > '\177') --> Line_21 $$ session.getActionSender().sendLoginFailure("Invalid name!") [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_21 $$ session.getActionSender().sendLoginFailure("Invalid name!") [FD]
Line_20 $$ if (nameChar < ' ' || nameChar > '\177') --> Line_22 $$ return [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_26 $$ if (p.getName().equalsIgnoreCase(username)) [FD]
Line_25 $$ for (Player p : playerList.getPlayers()) --> Line_26 $$ if (p.getName().equalsIgnoreCase(username)) [FD]
Line_26 $$ if (p.getName().equalsIgnoreCase(username)) --> Line_27 $$ p.getSession().getActionSender().sendLoginFailure("Logged in from another computer.") [CD]
Line_25 $$ for (Player p : playerList.getPlayers()) --> Line_27 $$ p.getSession().getActionSender().sendLoginFailure("Logged in from another computer.") [FD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_31 $$ final Player player = new Player(session, username) [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_32 $$ if (!playerList.add(player)) [CD]
Line_31 $$ final Player player = new Player(session, username) --> Line_32 $$ if (!playerList.add(player)) [FD]
Line_32 $$ if (!playerList.add(player)) --> Line_33 $$ player.getSession().getActionSender().sendLoginFailure("Too many players online!") [CD]
Line_31 $$ final Player player = new Player(session, username) --> Line_33 $$ player.getSession().getActionSender().sendLoginFailure("Too many players online!") [FD]
Line_32 $$ if (!playerList.add(player)) --> Line_34 $$ return [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_36 $$ session.setPlayer(player) [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_36 $$ session.setPlayer(player) [FD]
Line_31 $$ final Player player = new Player(session, username) --> Line_36 $$ session.setPlayer(player) [FD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_37 $$ final Configuration c = Configuration.getConfiguration() [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_38 $$ session.getActionSender().sendLoginResponse(Constants.PROTOCOL_VERSION, c.getName(), c.getMessage(), false) [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_38 $$ session.getActionSender().sendLoginResponse(Constants.PROTOCOL_VERSION, c.getName(), c.getMessage(), false) [FD]
Line_37 $$ final Configuration c = Configuration.getConfiguration() --> Line_38 $$ session.getActionSender().sendLoginResponse(Constants.PROTOCOL_VERSION, c.getName(), c.getMessage(), false) [FD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_39 $$ LevelGzipper.getLevelGzipper().gzipLevel(session) [CD]
Line_2 $$ public void register(MinecraftSession session, String username, String verificationKey) --> Line_39 $$ LevelGzipper.getLevelGzipper().gzipLevel(session) [FD]
