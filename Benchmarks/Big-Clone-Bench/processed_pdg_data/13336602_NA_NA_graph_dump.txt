Line_4 $$ URL url --> Line_8 $$ url = new URL("http://www.amazon.com/exec/obidos/ASIN/" + disc_id) [FD]
Line_5 $$ URLConnection urlConn --> Line_9 $$ urlConn = url.openConnection() [FD]
Line_4 $$ URL url --> Line_9 $$ urlConn = url.openConnection() [FD]
Line_8 $$ url = new URL("http://www.amazon.com/exec/obidos/ASIN/" + disc_id) --> Line_9 $$ urlConn = url.openConnection() [FD]
Line_5 $$ URLConnection urlConn --> Line_10 $$ urlConn.setDoInput(true) [FD]
Line_9 $$ urlConn = url.openConnection() --> Line_10 $$ urlConn.setDoInput(true) [FD]
Line_5 $$ URLConnection urlConn --> Line_11 $$ urlConn.setDoOutput(true) [FD]
Line_9 $$ urlConn = url.openConnection() --> Line_11 $$ urlConn.setDoOutput(true) [FD]
Line_5 $$ URLConnection urlConn --> Line_12 $$ urlConn.setUseCaches(false) [FD]
Line_9 $$ urlConn = url.openConnection() --> Line_12 $$ urlConn.setUseCaches(false) [FD]
Line_5 $$ URLConnection urlConn --> Line_13 $$ urlConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_9 $$ urlConn = url.openConnection() --> Line_13 $$ urlConn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded") [FD]
Line_7 $$ BufferedReader input --> Line_14 $$ input = new BufferedReader(new InputStreamReader(urlConn.getInputStream())) [FD]
Line_5 $$ URLConnection urlConn --> Line_14 $$ input = new BufferedReader(new InputStreamReader(urlConn.getInputStream())) [FD]
Line_9 $$ urlConn = url.openConnection() --> Line_14 $$ input = new BufferedReader(new InputStreamReader(urlConn.getInputStream())) [FD]
Line_15 $$ String str --> Line_18 $$ while (null != ((str = input.readLine()))) [FD]
Line_7 $$ BufferedReader input --> Line_18 $$ while (null != ((str = input.readLine()))) [FD]
Line_14 $$ input = new BufferedReader(new InputStreamReader(urlConn.getInputStream())) --> Line_18 $$ while (null != ((str = input.readLine()))) [FD]
Line_18 $$ while (null != ((str = input.readLine()))) --> Line_19 $$ String keyword = title.toUpperCase() [CD]
Line_2 $$ private final boolean verifyMatch(String disc_id, String title) --> Line_19 $$ String keyword = title.toUpperCase() [FD]
Line_18 $$ while (null != ((str = input.readLine()))) --> Line_20 $$ int idStart = str.toUpperCase().indexOf((keyword)) [CD]
Line_18 $$ while (null != ((str = input.readLine()))) --> Line_20 $$ int idStart = str.toUpperCase().indexOf((keyword)) [FD]
Line_15 $$ String str --> Line_20 $$ int idStart = str.toUpperCase().indexOf((keyword)) [FD]
Line_18 $$ while (null != ((str = input.readLine()))) --> Line_21 $$ if (idStart > 0) [CD]
Line_20 $$ int idStart = str.toUpperCase().indexOf((keyword)) --> Line_21 $$ if (idStart > 0) [FD]
Line_21 $$ if (idStart > 0) --> Line_22 $$ if (str.toUpperCase().endsWith(title.toUpperCase())) [CD]
Line_18 $$ while (null != ((str = input.readLine()))) --> Line_22 $$ if (str.toUpperCase().endsWith(title.toUpperCase())) [FD]
Line_15 $$ String str --> Line_22 $$ if (str.toUpperCase().endsWith(title.toUpperCase())) [FD]
Line_2 $$ private final boolean verifyMatch(String disc_id, String title) --> Line_22 $$ if (str.toUpperCase().endsWith(title.toUpperCase())) [FD]
Line_22 $$ if (str.toUpperCase().endsWith(title.toUpperCase())) --> Line_23 $$ goodMatch = true [CD]
Line_16 $$ boolean goodMatch = false --> Line_23 $$ goodMatch = true [FD]
Line_22 $$ if (str.toUpperCase().endsWith(title.toUpperCase())) --> Line_25 $$ match = true [CD]
Line_17 $$ boolean match = false --> Line_25 $$ match = true [FD]
Line_7 $$ BufferedReader input --> Line_29 $$ input.close() [FD]
Line_14 $$ input = new BufferedReader(new InputStreamReader(urlConn.getInputStream())) --> Line_29 $$ input.close() [FD]
Line_25 $$ match = true --> Line_30 $$ if (goodMatch) [FD]
Line_17 $$ boolean match = false --> Line_30 $$ if (goodMatch) [FD]
Line_30 $$ if (goodMatch) --> Line_31 $$ status.append("Exact Match. ") [CD]
Line_30 $$ if (goodMatch) --> Line_32 $$ return true [CD]
Line_30 $$ if (goodMatch) --> Line_33 $$ if (match) [CD]
Line_33 $$ if (match) --> Line_34 $$ status.append("Inexact Match. ") [CD]
Line_33 $$ if (match) --> Line_35 $$ return true [CD]
Line_2 $$ private final boolean verifyMatch(String disc_id, String title) --> Line_40 $$ return true [CD]
