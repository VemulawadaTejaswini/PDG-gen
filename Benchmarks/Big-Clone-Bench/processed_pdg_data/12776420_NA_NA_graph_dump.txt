Line_2 $$ public Bitmap getImage() throws IOException --> Line_3 $$ int recordBegin = 78 + 8 * mCount [CD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_4 $$ Bitmap result = null [CD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_5 $$ FileChannel channel = new FileInputStream(mFile).getChannel() [CD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_6 $$ channel.position(mRecodeOffset[mPage]) [CD]
Line_5 $$ FileChannel channel = new FileInputStream(mFile).getChannel() --> Line_6 $$ channel.position(mRecodeOffset[mPage]) [FD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_7 $$ ByteBuffer bodyBuffer [CD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_8 $$ if (mPage + 1 < mCount) [CD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_9 $$ int length = mRecodeOffset[mPage + 1] - mRecodeOffset[mPage] [CD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_10 $$ bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length) [CD]
Line_7 $$ ByteBuffer bodyBuffer --> Line_10 $$ bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length) [FD]
Line_5 $$ FileChannel channel = new FileInputStream(mFile).getChannel() --> Line_10 $$ bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length) [FD]
Line_9 $$ int length = mRecodeOffset[mPage + 1] - mRecodeOffset[mPage] --> Line_10 $$ bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length) [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_11 $$ byte[] tmpCache = new byte[bodyBuffer.capacity()] [CD]
Line_7 $$ ByteBuffer bodyBuffer --> Line_11 $$ byte[] tmpCache = new byte[bodyBuffer.capacity()] [FD]
Line_10 $$ bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length) --> Line_11 $$ byte[] tmpCache = new byte[bodyBuffer.capacity()] [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_12 $$ bodyBuffer.get(tmpCache) [CD]
Line_7 $$ ByteBuffer bodyBuffer --> Line_12 $$ bodyBuffer.get(tmpCache) [FD]
Line_10 $$ bodyBuffer = channel.map(MapMode.READ_ONLY, mRecodeOffset[mPage], length) --> Line_12 $$ bodyBuffer.get(tmpCache) [FD]
Line_11 $$ byte[] tmpCache = new byte[bodyBuffer.capacity()] --> Line_12 $$ bodyBuffer.get(tmpCache) [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_13 $$ FileOutputStream o = new FileOutputStream("/sdcard/test.bmp") [CD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_14 $$ o.write(tmpCache) [CD]
Line_13 $$ FileOutputStream o = new FileOutputStream("/sdcard/test.bmp") --> Line_14 $$ o.write(tmpCache) [FD]
Line_11 $$ byte[] tmpCache = new byte[bodyBuffer.capacity()] --> Line_14 $$ o.write(tmpCache) [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_15 $$ o.flush() [CD]
Line_13 $$ FileOutputStream o = new FileOutputStream("/sdcard/test.bmp") --> Line_15 $$ o.flush() [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_16 $$ o.getFD().sync() [CD]
Line_13 $$ FileOutputStream o = new FileOutputStream("/sdcard/test.bmp") --> Line_16 $$ o.getFD().sync() [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_17 $$ o.close() [CD]
Line_13 $$ FileOutputStream o = new FileOutputStream("/sdcard/test.bmp") --> Line_17 $$ o.close() [FD]
Line_8 $$ if (mPage + 1 < mCount) --> Line_18 $$ result = BitmapFactory.decodeByteArray(tmpCache, 0, length) [CD]
Line_4 $$ Bitmap result = null --> Line_18 $$ result = BitmapFactory.decodeByteArray(tmpCache, 0, length) [FD]
Line_11 $$ byte[] tmpCache = new byte[bodyBuffer.capacity()] --> Line_18 $$ result = BitmapFactory.decodeByteArray(tmpCache, 0, length) [FD]
Line_9 $$ int length = mRecodeOffset[mPage + 1] - mRecodeOffset[mPage] --> Line_18 $$ result = BitmapFactory.decodeByteArray(tmpCache, 0, length) [FD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_21 $$ channel.close() [CD]
Line_5 $$ FileChannel channel = new FileInputStream(mFile).getChannel() --> Line_21 $$ channel.close() [FD]
Line_2 $$ public Bitmap getImage() throws IOException --> Line_22 $$ return result [CD]
