Line_2 $$ public void invoke() throws IOException --> Line_3 $$ String[] command = new String[files.length + options.length + 2] [CD]
Line_2 $$ public void invoke() throws IOException --> Line_5 $$ System.arraycopy(options, 0, command, 1, options.length) [CD]
Line_3 $$ String[] command = new String[files.length + options.length + 2] --> Line_5 $$ System.arraycopy(options, 0, command, 1, options.length) [FD]
Line_2 $$ public void invoke() throws IOException --> Line_7 $$ for (int i = 0; i < files.length; i++) [CD]
Line_7 $$ for (int i = 0; i < files.length; i++) --> Line_8 $$ File file = files[i] [CD]
Line_7 $$ for (int i = 0; i < files.length; i++) --> Line_9 $$ command[2 + options.length + i] = file.getAbsolutePath() [CD]
Line_8 $$ File file = files[i] --> Line_9 $$ command[2 + options.length + i] = file.getAbsolutePath() [FD]
Line_2 $$ public void invoke() throws IOException --> Line_11 $$ Process p = Runtime.getRuntime().exec(command) [CD]
Line_3 $$ String[] command = new String[files.length + options.length + 2] --> Line_11 $$ Process p = Runtime.getRuntime().exec(command) [FD]
Line_11 $$ Process p = Runtime.getRuntime().exec(command) --> Line_13 $$ p.waitFor() [FD]
Line_2 $$ public void invoke() throws IOException --> Line_17 $$ if (p.exitValue() != 0) [CD]
Line_11 $$ Process p = Runtime.getRuntime().exec(command) --> Line_17 $$ if (p.exitValue() != 0) [FD]
Line_17 $$ if (p.exitValue() != 0) --> Line_18 $$ StringWriter writer = new StringWriter() [CD]
Line_17 $$ if (p.exitValue() != 0) --> Line_19 $$ IOUtils.copy(p.getErrorStream(), writer) [CD]
Line_18 $$ StringWriter writer = new StringWriter() --> Line_19 $$ IOUtils.copy(p.getErrorStream(), writer) [FD]
Line_11 $$ Process p = Runtime.getRuntime().exec(command) --> Line_19 $$ IOUtils.copy(p.getErrorStream(), writer) [FD]
Line_18 $$ StringWriter writer = new StringWriter() --> Line_20 $$ throw new IOException("Unable to chmod files: " + writer.toString()) [FD]
