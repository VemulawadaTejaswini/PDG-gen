Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_16 $$ filenamezip = "recordatorio" + i + ".zip" [CD]
Line_7 $$ String filenamezip = "" --> Line_16 $$ filenamezip = "recordatorio" + i + ".zip" [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_17 $$ filenametxt = "recordatorio" + i + ".txt" [CD]
Line_6 $$ String filenametxt = "" --> Line_17 $$ filenametxt = "recordatorio" + i + ".txt" [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_18 $$ BufferedOutputStream dest = null [CD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_19 $$ BufferedInputStream is = null [CD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_20 $$ ZipEntry entry [CD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_21 $$ ZipFile zipfile = new ZipFile(filenamezip) [CD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_22 $$ Enumeration e = zipfile.entries() [CD]
Line_21 $$ ZipFile zipfile = new ZipFile(filenamezip) --> Line_22 $$ Enumeration e = zipfile.entries() [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_23 $$ while (e.hasMoreElements()) [CD]
Line_22 $$ Enumeration e = zipfile.entries() --> Line_23 $$ while (e.hasMoreElements()) [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_24 $$ entry = (ZipEntry) e.nextElement() [CD]
Line_22 $$ Enumeration e = zipfile.entries() --> Line_24 $$ entry = (ZipEntry) e.nextElement() [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_25 $$ is = new BufferedInputStream(zipfile.getInputStream(entry)) [CD]
Line_19 $$ BufferedInputStream is = null --> Line_25 $$ is = new BufferedInputStream(zipfile.getInputStream(entry)) [FD]
Line_21 $$ ZipFile zipfile = new ZipFile(filenamezip) --> Line_25 $$ is = new BufferedInputStream(zipfile.getInputStream(entry)) [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_26 $$ int count [CD]
Line_23 $$ while (e.hasMoreElements()) --> Line_27 $$ byte data[] = new byte[buffer] [CD]
Line_23 $$ while (e.hasMoreElements()) --> Line_28 $$ FileOutputStream fos = new FileOutputStream(entry.getName()) [CD]
Line_23 $$ while (e.hasMoreElements()) --> Line_29 $$ dest = new BufferedOutputStream(fos, buffer) [CD]
Line_18 $$ BufferedOutputStream dest = null --> Line_29 $$ dest = new BufferedOutputStream(fos, buffer) [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_30 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count) [CD]
Line_26 $$ int count --> Line_30 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count) [FD]
Line_25 $$ is = new BufferedInputStream(zipfile.getInputStream(entry)) --> Line_30 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count) [FD]
Line_19 $$ BufferedInputStream is = null --> Line_30 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count) [FD]
Line_29 $$ dest = new BufferedOutputStream(fos, buffer) --> Line_30 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count) [FD]
Line_18 $$ BufferedOutputStream dest = null --> Line_30 $$ while ((count = is.read(data, 0, buffer)) != -1) dest.write(data, 0, count) [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_31 $$ dest.flush() [CD]
Line_29 $$ dest = new BufferedOutputStream(fos, buffer) --> Line_31 $$ dest.flush() [FD]
Line_18 $$ BufferedOutputStream dest = null --> Line_31 $$ dest.flush() [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_32 $$ dest.close() [CD]
Line_29 $$ dest = new BufferedOutputStream(fos, buffer) --> Line_32 $$ dest.close() [FD]
Line_18 $$ BufferedOutputStream dest = null --> Line_32 $$ dest.close() [FD]
Line_23 $$ while (e.hasMoreElements()) --> Line_33 $$ is.close() [CD]
Line_25 $$ is = new BufferedInputStream(zipfile.getInputStream(entry)) --> Line_33 $$ is.close() [FD]
Line_19 $$ BufferedInputStream is = null --> Line_33 $$ is.close() [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_36 $$ dia = Integer.parseInt(input.readLine()) [CD]
Line_12 $$ int dia = 0 --> Line_36 $$ dia = Integer.parseInt(input.readLine()) [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_37 $$ mes = Integer.parseInt(input.readLine()) [CD]
Line_13 $$ int mes = 0 --> Line_37 $$ mes = Integer.parseInt(input.readLine()) [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_38 $$ ano = Integer.parseInt(input.readLine()) [CD]
Line_14 $$ int ano = 0 --> Line_38 $$ ano = Integer.parseInt(input.readLine()) [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) [CD]
Line_36 $$ dia = Integer.parseInt(input.readLine()) --> Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) [FD]
Line_12 $$ int dia = 0 --> Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_40 $$ existe = true [CD]
Line_5 $$ boolean existe = false --> Line_40 $$ existe = true [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_41 $$ hora = input.readLine() [CD]
Line_8 $$ String hora = "" --> Line_41 $$ hora = input.readLine() [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_42 $$ lugar = input.readLine() [CD]
Line_9 $$ String lugar = "" --> Line_42 $$ lugar = input.readLine() [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_43 $$ while ((linea = input.readLine()) != null) actividad += linea + "\n" [CD]
Line_11 $$ String linea = "" --> Line_43 $$ while ((linea = input.readLine()) != null) actividad += linea + "\n" [FD]
Line_10 $$ String actividad = "" --> Line_43 $$ while ((linea = input.readLine()) != null) actividad += linea + "\n" [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [CD]
Line_41 $$ hora = input.readLine() --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_8 $$ String hora = "" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_42 $$ lugar = input.readLine() --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_9 $$ String lugar = "" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_43 $$ while ((linea = input.readLine()) != null) actividad += linea + "\n" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_10 $$ String actividad = "" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_45 $$ hora = "" [CD]
Line_41 $$ hora = input.readLine() --> Line_45 $$ hora = "" [FD]
Line_8 $$ String hora = "" --> Line_45 $$ hora = "" [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_46 $$ lugar = "" [CD]
Line_42 $$ lugar = input.readLine() --> Line_46 $$ lugar = "" [FD]
Line_9 $$ String lugar = "" --> Line_46 $$ lugar = "" [FD]
Line_39 $$ if (dia == Integer.parseInt(identificarDato(datoSeleccionado))) --> Line_47 $$ actividad = "" [CD]
Line_43 $$ while ((linea = input.readLine()) != null) actividad += linea + "\n" --> Line_47 $$ actividad = "" [FD]
Line_10 $$ String actividad = "" --> Line_47 $$ actividad = "" [FD]
Line_15 $$ for (int i = 1; i < cantidadArchivos; i++) --> Line_49 $$ input.close() [CD]
Line_40 $$ existe = true --> Line_51 $$ JOptionPane.showMessageDialog(null, "No existe un recordatorio guardado\n" + "para el " + identificarDato(datoSeleccionado) + " de " + meses[mesTemporal].toLowerCase() + " del a�o " + anoTemporal, "No existe", JOptionPane.INFORMATION_MESSAGE) [FD]
Line_5 $$ boolean existe = false --> Line_51 $$ JOptionPane.showMessageDialog(null, "No existe un recordatorio guardado\n" + "para el " + identificarDato(datoSeleccionado) + " de " + meses[mesTemporal].toLowerCase() + " del a�o " + anoTemporal, "No existe", JOptionPane.INFORMATION_MESSAGE) [FD]
Line_22 $$ Enumeration e = zipfile.entries() --> Line_54 $$ JOptionPane.showMessageDialog(null, "Error en: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE) [FD]
Line_45 $$ hora = "" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_46 $$ lugar = "" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
Line_47 $$ actividad = "" --> Line_44 $$ verRecordatorioInterfaz(hora, lugar, actividad) [FD]
