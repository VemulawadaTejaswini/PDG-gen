Line_2 $$ public void covertFile(File file) throws IOException --> Line_3 $$ if (!file.isFile()) [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_3 $$ if (!file.isFile()) [FD]
Line_3 $$ if (!file.isFile()) --> Line_4 $$ return [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_6 $$ Reader reader = null [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_7 $$ OutputStream os = null [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_8 $$ File newfile = null [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_9 $$ String filename = file.getName() [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_9 $$ String filename = file.getName() [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_10 $$ boolean succeed = false [CD]
Line_8 $$ File newfile = null --> Line_12 $$ newfile = new File(file.getParentFile(), filename + ".bak") [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_12 $$ newfile = new File(file.getParentFile(), filename + ".bak") [FD]
Line_6 $$ Reader reader = null --> Line_13 $$ reader = new InputStreamReader(new FileInputStream(file), fromEncoding) [FD]
Line_7 $$ OutputStream os = null --> Line_14 $$ os = new FileOutputStream(newfile) [FD]
Line_6 $$ Reader reader = null --> Line_15 $$ IOUtils.copy(reader, os, toEncoding) [FD]
Line_13 $$ reader = new InputStreamReader(new FileInputStream(file), fromEncoding) --> Line_15 $$ IOUtils.copy(reader, os, toEncoding) [FD]
Line_7 $$ OutputStream os = null --> Line_15 $$ IOUtils.copy(reader, os, toEncoding) [FD]
Line_14 $$ os = new FileOutputStream(newfile) --> Line_15 $$ IOUtils.copy(reader, os, toEncoding) [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_18 $$ throw new IOException("Encoding error for file [" + file.getAbsolutePath() + "]") [FD]
Line_6 $$ Reader reader = null --> Line_20 $$ if (reader != null) [FD]
Line_13 $$ reader = new InputStreamReader(new FileInputStream(file), fromEncoding) --> Line_20 $$ if (reader != null) [FD]
Line_6 $$ Reader reader = null --> Line_22 $$ reader.close() [FD]
Line_13 $$ reader = new InputStreamReader(new FileInputStream(file), fromEncoding) --> Line_22 $$ reader.close() [FD]
Line_7 $$ OutputStream os = null --> Line_27 $$ if (os != null) [FD]
Line_14 $$ os = new FileOutputStream(newfile) --> Line_27 $$ if (os != null) [FD]
Line_7 $$ OutputStream os = null --> Line_29 $$ os.close() [FD]
Line_14 $$ os = new FileOutputStream(newfile) --> Line_29 $$ os.close() [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_36 $$ file.delete() [FD]
Line_10 $$ boolean succeed = false --> Line_37 $$ succeed = newfile.renameTo(file) [FD]
Line_8 $$ File newfile = null --> Line_37 $$ succeed = newfile.renameTo(file) [FD]
Line_12 $$ newfile = new File(file.getParentFile(), filename + ".bak") --> Line_37 $$ succeed = newfile.renameTo(file) [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_37 $$ succeed = newfile.renameTo(file) [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_39 $$ throw new IOException("Clear bak error for file [" + file.getAbsolutePath() + "]") [FD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_41 $$ if (succeed) [CD]
Line_41 $$ if (succeed) --> Line_42 $$ System.out.println("Changed encoding for file [" + file.getAbsolutePath() + "]") [CD]
Line_2 $$ public void covertFile(File file) throws IOException --> Line_42 $$ System.out.println("Changed encoding for file [" + file.getAbsolutePath() + "]") [FD]
