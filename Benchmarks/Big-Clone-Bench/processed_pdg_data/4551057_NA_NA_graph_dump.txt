Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_3 $$ PreparedStatement ps = null [CD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_4 $$ String sql_ = null [CD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_5 $$ PriceListItemType debugItem = null [CD]
Line_7 $$ if (log.isDebugEnabled()) --> Line_8 $$ log.debug("dbDyn - " + dbDyn) [CD]
Line_7 $$ if (log.isDebugEnabled()) --> Line_9 $$ log.debug("dbDyn.conn - " + dbDyn.getConnection()) [CD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_9 $$ log.debug("dbDyn.conn - " + dbDyn.getConnection()) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_11 $$ dbDyn.getConnection().setAutoCommit(false) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" [CD]
Line_4 $$ String sql_ = null --> Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_14 $$ ps = dbDyn.prepareStatement(sql_) [CD]
Line_3 $$ PreparedStatement ps = null --> Line_14 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_14 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_4 $$ String sql_ = null --> Line_14 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" --> Line_14 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_15 $$ RsetTools.setLong(ps, 1, id_site) [CD]
Line_3 $$ PreparedStatement ps = null --> Line_15 $$ RsetTools.setLong(ps, 1, id_site) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_15 $$ RsetTools.setLong(ps, 1, id_site) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_15 $$ RsetTools.setLong(ps, 1, id_site) [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_16 $$ ps.executeUpdate() [CD]
Line_3 $$ PreparedStatement ps = null --> Line_16 $$ ps.executeUpdate() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_16 $$ ps.executeUpdate() [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_17 $$ ps.close() [CD]
Line_3 $$ PreparedStatement ps = null --> Line_17 $$ ps.close() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_17 $$ ps.close() [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_18 $$ ps = null [CD]
Line_3 $$ PreparedStatement ps = null --> Line_18 $$ ps = null [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_18 $$ ps = null [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_20 $$ String sqlCheck = "" [CD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_21 $$ boolean isFound = false [CD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_22 $$ WmPriceShopListListType shops = GetWmPriceShopListWithIdSiteList.getInstance(dbDyn, id_site).item [CD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_22 $$ WmPriceShopListListType shops = GetWmPriceShopListWithIdSiteList.getInstance(dbDyn, id_site).item [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_23 $$ boolean isFirst = true [CD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) [CD]
Line_22 $$ WmPriceShopListListType shops = GetWmPriceShopListWithIdSiteList.getInstance(dbDyn, id_site).item --> Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) [FD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_25 $$ WmPriceShopListItemType shop = shops.getWmPriceShopList(i) [CD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_25 $$ WmPriceShopListItemType shop = shops.getWmPriceShopList(i) [FD]
Line_22 $$ WmPriceShopListListType shops = GetWmPriceShopListWithIdSiteList.getInstance(dbDyn, id_site).item --> Line_25 $$ WmPriceShopListItemType shop = shops.getWmPriceShopList(i) [FD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_26 $$ isFound = true [CD]
Line_21 $$ boolean isFound = false --> Line_26 $$ isFound = true [FD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_27 $$ isFirst = false [CD]
Line_23 $$ boolean isFirst = true --> Line_27 $$ isFirst = false [FD]
Line_20 $$ String sqlCheck = "" --> Line_27 $$ isFirst = false [FD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_28 $$ sqlCheck += ("'" + shop.getCodeShop() + "'") [CD]
Line_27 $$ isFirst = false --> Line_28 $$ sqlCheck += ("'" + shop.getCodeShop() + "'") [FD]
Line_20 $$ String sqlCheck = "" --> Line_28 $$ sqlCheck += ("'" + shop.getCodeShop() + "'") [FD]
Line_25 $$ WmPriceShopListItemType shop = shops.getWmPriceShopList(i) --> Line_28 $$ sqlCheck += ("'" + shop.getCodeShop() + "'") [FD]
Line_12 $$ if (dbDyn.getFamaly() != DatabaseManager.MYSQL_FAMALY) --> Line_30 $$ if (isFound) [CD]
Line_30 $$ if (isFound) --> Line_31 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in ( " + sqlCheck + " )" [CD]
Line_4 $$ String sql_ = null --> Line_31 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in ( " + sqlCheck + " )" [FD]
Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" --> Line_31 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in ( " + sqlCheck + " )" [FD]
Line_30 $$ if (isFound) --> Line_32 $$ if (log.isDebugEnabled()) [CD]
Line_30 $$ if (isFound) --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [CD]
Line_3 $$ PreparedStatement ps = null --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_18 $$ ps = null --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_4 $$ String sql_ = null --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_31 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in ( " + sqlCheck + " )" --> Line_33 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_30 $$ if (isFound) --> Line_34 $$ ps.executeUpdate() [CD]
Line_3 $$ PreparedStatement ps = null --> Line_34 $$ ps.executeUpdate() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_34 $$ ps.executeUpdate() [FD]
Line_18 $$ ps = null --> Line_34 $$ ps.executeUpdate() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_34 $$ ps.executeUpdate() [FD]
Line_30 $$ if (isFound) --> Line_35 $$ ps.close() [CD]
Line_3 $$ PreparedStatement ps = null --> Line_35 $$ ps.close() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_35 $$ ps.close() [FD]
Line_18 $$ ps = null --> Line_35 $$ ps.close() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_35 $$ ps.close() [FD]
Line_30 $$ if (isFound) --> Line_36 $$ ps = null [CD]
Line_3 $$ PreparedStatement ps = null --> Line_36 $$ ps = null [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_36 $$ ps = null [FD]
Line_18 $$ ps = null --> Line_36 $$ ps = null [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_36 $$ ps = null [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_40 $$ if (prices == null) [FD]
Line_4 $$ String sql_ = null --> Line_43 $$ sql_ = "insert into WM_PRICE_IMPORT_TABLE " + "(is_group, id, id_main, name, price, currency, is_to_load, shop_code, ID_UPLOAD_PRICE) " + "values (?,?,?,?,?,?,?,?,?)" [FD]
Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" --> Line_43 $$ sql_ = "insert into WM_PRICE_IMPORT_TABLE " + "(is_group, id, id_main, name, price, currency, is_to_load, shop_code, ID_UPLOAD_PRICE) " + "values (?,?,?,?,?,?,?,?,?)" [FD]
Line_31 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in ( " + sqlCheck + " )" --> Line_43 $$ sql_ = "insert into WM_PRICE_IMPORT_TABLE " + "(is_group, id, id_main, name, price, currency, is_to_load, shop_code, ID_UPLOAD_PRICE) " + "values (?,?,?,?,?,?,?,?,?)" [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_45 $$ for (int j = 0; j < prices.getPriceListCount(); j++) [FD]
Line_45 $$ for (int j = 0; j < prices.getPriceListCount(); j++) --> Line_46 $$ PriceListType price = prices.getPriceList(j) [CD]
Line_45 $$ for (int j = 0; j < prices.getPriceListCount(); j++) --> Line_46 $$ PriceListType price = prices.getPriceList(j) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_46 $$ PriceListType price = prices.getPriceList(j) [FD]
Line_45 $$ for (int j = 0; j < prices.getPriceListCount(); j++) --> Line_47 $$ if (log.isDebugEnabled()) [CD]
Line_47 $$ if (log.isDebugEnabled()) --> Line_48 $$ log.debug("shopCode " + price.getShopCode()) [CD]
Line_46 $$ PriceListType price = prices.getPriceList(j) --> Line_48 $$ log.debug("shopCode " + price.getShopCode()) [FD]
Line_47 $$ if (log.isDebugEnabled()) --> Line_49 $$ log.debug("Size vector: " + price.getItemCount()) [CD]
Line_46 $$ PriceListType price = prices.getPriceList(j) --> Line_49 $$ log.debug("Size vector: " + price.getItemCount()) [FD]
Line_45 $$ for (int j = 0; j < prices.getPriceListCount(); j++) --> Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) [CD]
Line_46 $$ PriceListType price = prices.getPriceList(j) --> Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) [FD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) [FD]
Line_42 $$ int count = 0 --> Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [CD]
Line_3 $$ PreparedStatement ps = null --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_18 $$ ps = null --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_36 $$ ps = null --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_4 $$ String sql_ = null --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_13 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in " + "( select shop_code from WM_PRICE_SHOP_LIST where ID_SITE=? )" --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_31 $$ sql_ = "delete from WM_PRICE_IMPORT_TABLE where shop_code in ( " + sqlCheck + " )" --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_43 $$ sql_ = "insert into WM_PRICE_IMPORT_TABLE " + "(is_group, id, id_main, name, price, currency, is_to_load, shop_code, ID_UPLOAD_PRICE) " + "values (?,?,?,?,?,?,?,?,?)" --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_53 $$ PriceListItemType item = price.getItem(i) [CD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_53 $$ PriceListItemType item = price.getItem(i) [FD]
Line_46 $$ PriceListType price = prices.getPriceList(j) --> Line_53 $$ PriceListItemType item = price.getItem(i) [FD]
Line_24 $$ for (int i = 0; i < shops.getWmPriceShopListCount(); i++) --> Line_53 $$ PriceListItemType item = price.getItem(i) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_54 $$ debugItem = item [CD]
Line_5 $$ PriceListItemType debugItem = null --> Line_54 $$ debugItem = item [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_54 $$ debugItem = item [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_18 $$ ps = null --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_36 $$ ps = null --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_18 $$ ps = null --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_36 $$ ps = null --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_18 $$ ps = null --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_36 $$ ps = null --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_58 $$ ps.setString(4, item.getNameItem()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_18 $$ ps = null --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_36 $$ ps = null --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_18 $$ ps = null --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_36 $$ ps = null --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_60 $$ ps.setString(6, item.getCurr()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_18 $$ ps = null --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_36 $$ ps = null --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_18 $$ ps = null --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_36 $$ ps = null --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_53 $$ PriceListItemType item = price.getItem(i) --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_18 $$ ps = null --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_36 $$ ps = null --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_46 $$ PriceListType price = prices.getPriceList(j) --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_18 $$ ps = null --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_36 $$ ps = null --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_44 $$ Long id_upload_session = null --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_51 $$ for (int i = 0; (i < price.getItemCount()) && (count < 5000); i++, count++) --> Line_64 $$ if (dbDyn.getIsBatchUpdate()) [CD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_64 $$ if (dbDyn.getIsBatchUpdate()) [FD]
Line_64 $$ if (dbDyn.getIsBatchUpdate()) --> Line_65 $$ ps.addBatch() [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_65 $$ ps.addBatch() [FD]
Line_3 $$ PreparedStatement ps = null --> Line_65 $$ ps.addBatch() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_65 $$ ps.addBatch() [FD]
Line_18 $$ ps = null --> Line_65 $$ ps.addBatch() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_65 $$ ps.addBatch() [FD]
Line_36 $$ ps = null --> Line_65 $$ ps.addBatch() [FD]
Line_64 $$ if (dbDyn.getIsBatchUpdate()) --> Line_66 $$ if (++batchLoop >= 200) [CD]
Line_41 $$ int batchLoop = 0 --> Line_66 $$ if (++batchLoop >= 200) [FD]
Line_66 $$ if (++batchLoop >= 200) --> Line_67 $$ int[] updateCounts = ps.executeBatch() [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_3 $$ PreparedStatement ps = null --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_18 $$ ps = null --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_36 $$ ps = null --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_66 $$ if (++batchLoop >= 200) --> Line_68 $$ ps.close() [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_68 $$ ps.close() [FD]
Line_3 $$ PreparedStatement ps = null --> Line_68 $$ ps.close() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_68 $$ ps.close() [FD]
Line_18 $$ ps = null --> Line_68 $$ ps.close() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_68 $$ ps.close() [FD]
Line_36 $$ ps = null --> Line_68 $$ ps.close() [FD]
Line_66 $$ if (++batchLoop >= 200) --> Line_69 $$ ps = null [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_69 $$ ps = null [FD]
Line_3 $$ PreparedStatement ps = null --> Line_69 $$ ps = null [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_69 $$ ps = null [FD]
Line_18 $$ ps = null --> Line_69 $$ ps = null [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_69 $$ ps = null [FD]
Line_36 $$ ps = null --> Line_69 $$ ps = null [FD]
Line_66 $$ if (++batchLoop >= 200) --> Line_70 $$ batchLoop = 0 [CD]
Line_41 $$ int batchLoop = 0 --> Line_70 $$ batchLoop = 0 [FD]
Line_64 $$ if (dbDyn.getIsBatchUpdate()) --> Line_72 $$ ps.executeUpdate() [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_72 $$ ps.executeUpdate() [FD]
Line_69 $$ ps = null --> Line_72 $$ ps.executeUpdate() [FD]
Line_3 $$ PreparedStatement ps = null --> Line_72 $$ ps.executeUpdate() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_72 $$ ps.executeUpdate() [FD]
Line_18 $$ ps = null --> Line_72 $$ ps.executeUpdate() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_72 $$ ps.executeUpdate() [FD]
Line_36 $$ ps = null --> Line_72 $$ ps.executeUpdate() [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_75 $$ if (dbDyn.getIsBatchUpdate()) [FD]
Line_75 $$ if (dbDyn.getIsBatchUpdate()) --> Line_76 $$ if (ps != null) [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_76 $$ if (ps != null) [FD]
Line_69 $$ ps = null --> Line_76 $$ if (ps != null) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_76 $$ if (ps != null) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_76 $$ if (ps != null) [FD]
Line_18 $$ ps = null --> Line_76 $$ if (ps != null) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_76 $$ if (ps != null) [FD]
Line_36 $$ ps = null --> Line_76 $$ if (ps != null) [FD]
Line_76 $$ if (ps != null) --> Line_77 $$ int[] updateCounts = ps.executeBatch() [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_69 $$ ps = null --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_3 $$ PreparedStatement ps = null --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_18 $$ ps = null --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_36 $$ ps = null --> Line_77 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_76 $$ if (ps != null) --> Line_78 $$ ps.close() [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_78 $$ ps.close() [FD]
Line_69 $$ ps = null --> Line_78 $$ ps.close() [FD]
Line_3 $$ PreparedStatement ps = null --> Line_78 $$ ps.close() [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_78 $$ ps.close() [FD]
Line_18 $$ ps = null --> Line_78 $$ ps.close() [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_78 $$ ps.close() [FD]
Line_36 $$ ps = null --> Line_78 $$ ps.close() [FD]
Line_76 $$ if (ps != null) --> Line_79 $$ ps = null [CD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_79 $$ ps = null [FD]
Line_69 $$ ps = null --> Line_79 $$ ps = null [FD]
Line_3 $$ PreparedStatement ps = null --> Line_79 $$ ps = null [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_79 $$ ps = null [FD]
Line_18 $$ ps = null --> Line_79 $$ ps = null [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_79 $$ ps = null [FD]
Line_36 $$ ps = null --> Line_79 $$ ps = null [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_82 $$ ImportPriceProcess.process(dbDyn, id_site) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_83 $$ dbDyn.commit() [FD]
Line_54 $$ debugItem = item --> Line_85 $$ if (debugItem != null) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_85 $$ if (debugItem != null) [FD]
Line_85 $$ if (debugItem != null) --> Line_86 $$ log.error("debugItem.getIsGroup() " + (Boolean.TRUE.equals(debugItem.getIsGroup()) ? 1 : 0)) [CD]
Line_54 $$ debugItem = item --> Line_86 $$ log.error("debugItem.getIsGroup() " + (Boolean.TRUE.equals(debugItem.getIsGroup()) ? 1 : 0)) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_86 $$ log.error("debugItem.getIsGroup() " + (Boolean.TRUE.equals(debugItem.getIsGroup()) ? 1 : 0)) [FD]
Line_85 $$ if (debugItem != null) --> Line_87 $$ log.error("debugItem.getItemID() " + debugItem.getItemID()) [CD]
Line_54 $$ debugItem = item --> Line_87 $$ log.error("debugItem.getItemID() " + debugItem.getItemID()) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_87 $$ log.error("debugItem.getItemID() " + debugItem.getItemID()) [FD]
Line_85 $$ if (debugItem != null) --> Line_88 $$ log.error("debugItem.getParentID() " + debugItem.getParentID()) [CD]
Line_54 $$ debugItem = item --> Line_88 $$ log.error("debugItem.getParentID() " + debugItem.getParentID()) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_88 $$ log.error("debugItem.getParentID() " + debugItem.getParentID()) [FD]
Line_85 $$ if (debugItem != null) --> Line_89 $$ log.error("debugItem.getNameItem() " + debugItem.getNameItem()) [CD]
Line_54 $$ debugItem = item --> Line_89 $$ log.error("debugItem.getNameItem() " + debugItem.getNameItem()) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_89 $$ log.error("debugItem.getNameItem() " + debugItem.getNameItem()) [FD]
Line_85 $$ if (debugItem != null) --> Line_90 $$ log.error("debugItem.getPrice() " + debugItem.getPrice()) [CD]
Line_54 $$ debugItem = item --> Line_90 $$ log.error("debugItem.getPrice() " + debugItem.getPrice()) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_90 $$ log.error("debugItem.getPrice() " + debugItem.getPrice()) [FD]
Line_85 $$ if (debugItem != null) --> Line_91 $$ log.error("debugItem.getCurr() " + debugItem.getCurr()) [CD]
Line_54 $$ debugItem = item --> Line_91 $$ log.error("debugItem.getCurr() " + debugItem.getCurr()) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_91 $$ log.error("debugItem.getCurr() " + debugItem.getCurr()) [FD]
Line_85 $$ if (debugItem != null) --> Line_92 $$ log.error("debugItem.getIsLoad().toString() " + debugItem.getIsLoad().toString()) [CD]
Line_54 $$ debugItem = item --> Line_92 $$ log.error("debugItem.getIsLoad().toString() " + debugItem.getIsLoad().toString()) [FD]
Line_5 $$ PriceListItemType debugItem = null --> Line_92 $$ log.error("debugItem.getIsLoad().toString() " + debugItem.getIsLoad().toString()) [FD]
Line_85 $$ if (debugItem != null) --> Line_93 $$ log.error("debugItem is null") [CD]
Line_95 $$ final String es = "error process import price-list" --> Line_96 $$ log.error(es, e) [FD]
Line_2 $$ public static void process(PricesType prices, Long id_site, DatabaseAdapter dbDyn) throws PriceException --> Line_98 $$ dbDyn.rollback() [FD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_69 $$ ps = null --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_3 $$ PreparedStatement ps = null --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_18 $$ ps = null --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_36 $$ ps = null --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_79 $$ ps = null --> Line_103 $$ DatabaseManager.close(ps) [FD]
Line_52 $$ ps = dbDyn.prepareStatement(sql_) --> Line_104 $$ ps = null [FD]
Line_69 $$ ps = null --> Line_104 $$ ps = null [FD]
Line_3 $$ PreparedStatement ps = null --> Line_104 $$ ps = null [FD]
Line_14 $$ ps = dbDyn.prepareStatement(sql_) --> Line_104 $$ ps = null [FD]
Line_18 $$ ps = null --> Line_104 $$ ps = null [FD]
Line_33 $$ ps = dbDyn.prepareStatement(sql_) --> Line_104 $$ ps = null [FD]
Line_36 $$ ps = null --> Line_104 $$ ps = null [FD]
Line_79 $$ ps = null --> Line_104 $$ ps = null [FD]
Line_69 $$ ps = null --> Line_52 $$ ps = dbDyn.prepareStatement(sql_) [FD]
Line_69 $$ ps = null --> Line_55 $$ ps.setInt(1, Boolean.TRUE.equals(item.getIsGroup()) ? 1 : 0) [FD]
Line_69 $$ ps = null --> Line_56 $$ RsetTools.setLong(ps, 2, item.getItemID()) [FD]
Line_69 $$ ps = null --> Line_57 $$ RsetTools.setLong(ps, 3, item.getParentID()) [FD]
Line_69 $$ ps = null --> Line_58 $$ ps.setString(4, item.getNameItem()) [FD]
Line_69 $$ ps = null --> Line_59 $$ RsetTools.setDouble(ps, 5, item.getPrice()) [FD]
Line_69 $$ ps = null --> Line_60 $$ ps.setString(6, item.getCurr()) [FD]
Line_69 $$ ps = null --> Line_61 $$ ps.setString(7, item.getIsLoad().toString()) [FD]
Line_69 $$ ps = null --> Line_62 $$ ps.setString(8, price.getShopCode().toUpperCase()) [FD]
Line_69 $$ ps = null --> Line_63 $$ RsetTools.setLong(ps, 9, id_upload_session) [FD]
Line_69 $$ ps = null --> Line_65 $$ ps.addBatch() [FD]
Line_70 $$ batchLoop = 0 --> Line_66 $$ if (++batchLoop >= 200) [FD]
Line_69 $$ ps = null --> Line_67 $$ int[] updateCounts = ps.executeBatch() [FD]
Line_69 $$ ps = null --> Line_68 $$ ps.close() [FD]
