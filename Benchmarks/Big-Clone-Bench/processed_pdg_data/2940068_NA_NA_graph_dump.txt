Line_2 $$ public void run() --> Line_3 $$ checkupdates.BetaST.setText("") [CD]
Line_2 $$ public void run() --> Line_4 $$ checkupdates.stableST.setText("") [CD]
Line_2 $$ public void run() --> Line_5 $$ String[] s = new String[7] [CD]
Line_2 $$ public void run() --> Line_6 $$ int i = 0 [CD]
Line_8 $$ URL url = new URL("http://memorize-words.sourceforge.net/latest.txt") --> Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) [FD]
Line_11 $$ String str --> Line_12 $$ while (((str = in.readLine()) != null) && (i < 7)) [FD]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_12 $$ while (((str = in.readLine()) != null) && (i < 7)) [FD]
Line_12 $$ while (((str = in.readLine()) != null) && (i < 7)) --> Line_13 $$ s[i] = str [CD]
Line_12 $$ while (((str = in.readLine()) != null) && (i < 7)) --> Line_13 $$ s[i] = str [FD]
Line_11 $$ String str --> Line_13 $$ s[i] = str [FD]
Line_12 $$ while (((str = in.readLine()) != null) && (i < 7)) --> Line_14 $$ i++ [CD]
Line_6 $$ int i = 0 --> Line_14 $$ i++ [FD]
Line_9 $$ BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream())) --> Line_16 $$ in.close() [FD]
Line_2 $$ public void run() --> Line_20 $$ if (i < 5) [CD]
Line_6 $$ int i = 0 --> Line_20 $$ if (i < 5) [FD]
Line_20 $$ if (i < 5) --> Line_21 $$ checkupdates.CheckBT.setEnabled(true) [CD]
Line_20 $$ if (i < 5) --> Line_22 $$ return [CD]
Line_2 $$ public void run() --> Line_30 $$ //S[0]=latest Beta version [CD]
Line_2 $$ public void run() --> Line_31 $$ if ((MF.CurVersion < Integer.parseInt(s[0])) && (checkupdates.BetaCHK.isSelected())) [CD]
Line_31 $$ if ((MF.CurVersion < Integer.parseInt(s[0])) && (checkupdates.BetaCHK.isSelected())) --> Line_33 $$ checkupdates.BetaST.setText("<HTML>A newer BETA version (<b>" + s[4] + "</b>) is available at<BR> <a href=''>" + s[2] + "</a></HTML>") [CD]
Line_31 $$ if ((MF.CurVersion < Integer.parseInt(s[0])) && (checkupdates.BetaCHK.isSelected())) --> Line_34 $$ updated = true [CD]
Line_30 $$ //S[0]=latest Beta version --> Line_34 $$ updated = true [FD]
Line_31 $$ if ((MF.CurVersion < Integer.parseInt(s[0])) && (checkupdates.BetaCHK.isSelected())) --> Line_35 $$ checkupdates.hasBeta = true [CD]
Line_31 $$ if ((MF.CurVersion < Integer.parseInt(s[0])) && (checkupdates.BetaCHK.isSelected())) --> Line_36 $$ checkupdates.BetaURL = s[2] [CD]
Line_31 $$ if ((MF.CurVersion < Integer.parseInt(s[0])) && (checkupdates.BetaCHK.isSelected())) --> Line_38 $$ checkupdates.BetaST.setText("") [CD]
Line_2 $$ public void run() --> Line_39 $$ if ((MF.CurVersion < Integer.parseInt(s[1])) && (checkupdates.StableCHK.isSelected())) [CD]
Line_39 $$ if ((MF.CurVersion < Integer.parseInt(s[1])) && (checkupdates.StableCHK.isSelected())) --> Line_41 $$ checkupdates.stableST.setText("<HTML>A newer STABLE version (<b>" + s[5] + "</b>) is available at<BR> <a href=''>" + s[3] + "</a></HTML>") [CD]
Line_39 $$ if ((MF.CurVersion < Integer.parseInt(s[1])) && (checkupdates.StableCHK.isSelected())) --> Line_42 $$ updated = true [CD]
Line_30 $$ //S[0]=latest Beta version --> Line_42 $$ updated = true [FD]
Line_34 $$ updated = true --> Line_42 $$ updated = true [FD]
Line_39 $$ if ((MF.CurVersion < Integer.parseInt(s[1])) && (checkupdates.StableCHK.isSelected())) --> Line_43 $$ checkupdates.hasStable = true [CD]
Line_39 $$ if ((MF.CurVersion < Integer.parseInt(s[1])) && (checkupdates.StableCHK.isSelected())) --> Line_44 $$ checkupdates.StableURL = s[3] [CD]
Line_39 $$ if ((MF.CurVersion < Integer.parseInt(s[1])) && (checkupdates.StableCHK.isSelected())) --> Line_47 $$ checkupdates.stableST.setText("") [CD]
Line_2 $$ public void run() --> Line_48 $$ if (updated) [CD]
Line_48 $$ if (updated) --> Line_49 $$ checkupdates.setVisible(true) [CD]
Line_2 $$ public void run() --> Line_50 $$ checkupdates.CheckBT.setEnabled(true) [CD]
