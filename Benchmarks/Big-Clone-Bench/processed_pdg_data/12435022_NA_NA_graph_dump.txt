Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_3 $$ FileOutputStream outStream = new FileOutputStream(outFile) [CD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) [CD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_5 $$ intlWrite(out, HTML_STRICT_DOCTYPE + "<html><head><title>$ [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_5 $$ intlWrite(out, HTML_STRICT_DOCTYPE + "<html><head><title>$ [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_6 $$ out.write(LOCDiff.getCssText()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_6 $$ out.write(LOCDiff.getCssText()) [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_7 $$ writeCustomStyleInfo(out) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_7 $$ writeCustomStyleInfo(out) [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_8 $$ out.write("</style></head>\n" + "<body>\n" + "<div>\n") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_8 $$ out.write("</style></head>\n" + "<body>\n" + "<div>\n") [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_9 $$ if (addedTable.length() > 0) [CD]
Line_9 $$ if (addedTable.length() > 0) --> Line_10 $$ out.write("<table border>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_10 $$ out.write("<table border>") [FD]
Line_9 $$ if (addedTable.length() > 0) --> Line_11 $$ intlWrite(out, getAddedTableHeader()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_11 $$ intlWrite(out, getAddedTableHeader()) [FD]
Line_9 $$ if (addedTable.length() > 0) --> Line_12 $$ out.write(addedTable.toString()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_12 $$ out.write(addedTable.toString()) [FD]
Line_9 $$ if (addedTable.length() > 0) --> Line_13 $$ out.write("</table><br><br>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_13 $$ out.write("</table><br><br>") [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_15 $$ if (modifiedTable.length() > 0) [CD]
Line_15 $$ if (modifiedTable.length() > 0) --> Line_16 $$ out.write("<table border>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_16 $$ out.write("<table border>") [FD]
Line_15 $$ if (modifiedTable.length() > 0) --> Line_17 $$ intlWrite(out, getModifiedTableHeader()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_17 $$ intlWrite(out, getModifiedTableHeader()) [FD]
Line_15 $$ if (modifiedTable.length() > 0) --> Line_18 $$ out.write(modifiedTable.toString()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_18 $$ out.write(modifiedTable.toString()) [FD]
Line_15 $$ if (modifiedTable.length() > 0) --> Line_19 $$ out.write("</table><br><br>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_19 $$ out.write("</table><br><br>") [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_21 $$ if (deletedTable.length() > 0) [CD]
Line_21 $$ if (deletedTable.length() > 0) --> Line_22 $$ out.write("<table border>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_22 $$ out.write("<table border>") [FD]
Line_21 $$ if (deletedTable.length() > 0) --> Line_23 $$ intlWrite(out, getDeletedTableHeader()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_23 $$ intlWrite(out, getDeletedTableHeader()) [FD]
Line_21 $$ if (deletedTable.length() > 0) --> Line_24 $$ out.write(deletedTable.toString()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_24 $$ out.write(deletedTable.toString()) [FD]
Line_21 $$ if (deletedTable.length() > 0) --> Line_25 $$ out.write("</table><br><br>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_25 $$ out.write("</table><br><br>") [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_27 $$ if (unchangedTable.length() > 0) [CD]
Line_27 $$ if (unchangedTable.length() > 0) --> Line_28 $$ out.write("<table border>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_28 $$ out.write("<table border>") [FD]
Line_27 $$ if (unchangedTable.length() > 0) --> Line_29 $$ intlWrite(out, getUnchangedTableHeader()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_29 $$ intlWrite(out, getUnchangedTableHeader()) [FD]
Line_27 $$ if (unchangedTable.length() > 0) --> Line_30 $$ out.write(unchangedTable.toString()) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_30 $$ out.write(unchangedTable.toString()) [FD]
Line_27 $$ if (unchangedTable.length() > 0) --> Line_31 $$ out.write("</table><br><br>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_31 $$ out.write("</table><br><br>") [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_33 $$ writeSummaryTable(out) [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_33 $$ writeSummaryTable(out) [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_34 $$ out.write("</div>") [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_34 $$ out.write("</div>") [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_35 $$ redlinesOut.close() [CD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_36 $$ out.flush() [CD]
Line_4 $$ BufferedWriter out = new BufferedWriter(new OutputStreamWriter(outStream, outputCharset)) --> Line_36 $$ out.flush() [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_37 $$ InputStream redlines = new FileInputStream(redlinesTempFile) [CD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_38 $$ byte[] buffer = new byte[4096] [CD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_39 $$ int bytesRead [CD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_40 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead) [CD]
Line_39 $$ int bytesRead --> Line_40 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead) [FD]
Line_37 $$ InputStream redlines = new FileInputStream(redlinesTempFile) --> Line_40 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead) [FD]
Line_38 $$ byte[] buffer = new byte[4096] --> Line_40 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead) [FD]
Line_3 $$ FileOutputStream outStream = new FileOutputStream(outFile) --> Line_40 $$ while ((bytesRead = redlines.read(buffer)) != -1) outStream.write(buffer, 0, bytesRead) [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_41 $$ outStream.write("</BODY></HTML>".getBytes()) [CD]
Line_3 $$ FileOutputStream outStream = new FileOutputStream(outFile) --> Line_41 $$ outStream.write("</BODY></HTML>".getBytes()) [FD]
Line_2 $$ protected void generateDiffResults(File outFile) throws IOException --> Line_42 $$ outStream.close() [CD]
Line_3 $$ FileOutputStream outStream = new FileOutputStream(outFile) --> Line_42 $$ outStream.close() [FD]
