Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_3 $$ boolean resultat = false [CD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_4 $$ long PourcentEnCours = 0 [CD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_5 $$ FileInputStream fis = null [CD]
Line_5 $$ FileInputStream fis = null --> Line_7 $$ fis = new FileInputStream(sRC2) [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_16 $$ FileOutputStream fos = null [CD]
Line_16 $$ FileOutputStream fos = null --> Line_18 $$ fos = new FileOutputStream(dEST2) [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_27 $$ java.nio.channels.FileChannel channelSrc = fis.getChannel() [CD]
Line_5 $$ FileInputStream fis = null --> Line_27 $$ java.nio.channels.FileChannel channelSrc = fis.getChannel() [FD]
Line_7 $$ fis = new FileInputStream(sRC2) --> Line_27 $$ java.nio.channels.FileChannel channelSrc = fis.getChannel() [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_28 $$ java.nio.channels.FileChannel channelDest = fos.getChannel() [CD]
Line_16 $$ FileOutputStream fos = null --> Line_28 $$ java.nio.channels.FileChannel channelDest = fos.getChannel() [FD]
Line_18 $$ fos = new FileOutputStream(dEST2) --> Line_28 $$ java.nio.channels.FileChannel channelDest = fos.getChannel() [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_29 $$ progressEnCours.setValue(0) [CD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_29 $$ progressEnCours.setValue(0) [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_30 $$ progressEnCours.setString(sRC2 + " : 0 %") [CD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_30 $$ progressEnCours.setString(sRC2 + " : 0 %") [FD]
Line_27 $$ java.nio.channels.FileChannel channelSrc = fis.getChannel() --> Line_32 $$ long tailleCopie = channelSrc.transferTo(0, channelSrc.size(), channelDest) [FD]
Line_28 $$ java.nio.channels.FileChannel channelDest = fos.getChannel() --> Line_32 $$ long tailleCopie = channelSrc.transferTo(0, channelSrc.size(), channelDest) [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_41 $$ progressEnCours.setValue(100) [CD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_41 $$ progressEnCours.setValue(100) [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_42 $$ progressEnCours.setString(sRC2 + " : 100 %") [CD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_42 $$ progressEnCours.setString(sRC2 + " : 100 %") [FD]
Line_27 $$ java.nio.channels.FileChannel channelSrc = fis.getChannel() --> Line_44 $$ if (channelSrc.size() == channelDest.size()) [FD]
Line_28 $$ java.nio.channels.FileChannel channelDest = fos.getChannel() --> Line_44 $$ if (channelSrc.size() == channelDest.size()) [FD]
Line_44 $$ if (channelSrc.size() == channelDest.size()) --> Line_45 $$ resultat = true [CD]
Line_3 $$ boolean resultat = false --> Line_45 $$ resultat = true [FD]
Line_44 $$ if (channelSrc.size() == channelDest.size()) --> Line_47 $$ resultat = false [CD]
Line_3 $$ boolean resultat = false --> Line_47 $$ resultat = false [FD]
Line_45 $$ resultat = true --> Line_47 $$ resultat = false [FD]
Line_5 $$ FileInputStream fis = null --> Line_58 $$ fis.close() [FD]
Line_7 $$ fis = new FileInputStream(sRC2) --> Line_58 $$ fis.close() [FD]
Line_16 $$ FileOutputStream fos = null --> Line_68 $$ fos.close() [FD]
Line_18 $$ fos = new FileOutputStream(dEST2) --> Line_68 $$ fos.close() [FD]
Line_2 $$ private boolean copyAvecProgressNIO(File sRC2, File dEST2, JProgressBar progressEnCours) --> Line_77 $$ return (resultat) [CD]
