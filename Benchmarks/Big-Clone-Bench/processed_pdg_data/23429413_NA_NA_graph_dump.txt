Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_3 $$ byte[] byteHash = null [CD]
Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_4 $$ MessageDigest md = null [CD]
Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_5 $$ StringBuilder md4result = new StringBuilder() [CD]
Line_4 $$ MessageDigest md = null --> Line_7 $$ md = MessageDigest.getInstance("MD4", new BouncyCastleProvider()) [FD]
Line_4 $$ MessageDigest md = null --> Line_8 $$ md.reset() [FD]
Line_7 $$ md = MessageDigest.getInstance("MD4", new BouncyCastleProvider()) --> Line_8 $$ md.reset() [FD]
Line_4 $$ MessageDigest md = null --> Line_9 $$ md.update(input.getBytes("UnicodeLittleUnmarked")) [FD]
Line_7 $$ md = MessageDigest.getInstance("MD4", new BouncyCastleProvider()) --> Line_9 $$ md.update(input.getBytes("UnicodeLittleUnmarked")) [FD]
Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_9 $$ md.update(input.getBytes("UnicodeLittleUnmarked")) [FD]
Line_3 $$ byte[] byteHash = null --> Line_10 $$ byteHash = md.digest() [FD]
Line_4 $$ MessageDigest md = null --> Line_10 $$ byteHash = md.digest() [FD]
Line_7 $$ md = MessageDigest.getInstance("MD4", new BouncyCastleProvider()) --> Line_10 $$ byteHash = md.digest() [FD]
Line_11 $$ for (int i = 0; i < byteHash.length; i++) --> Line_12 $$ md4result.append(Integer.toHexString(0xFF & byteHash[i])) [CD]
Line_5 $$ StringBuilder md4result = new StringBuilder() --> Line_12 $$ md4result.append(Integer.toHexString(0xFF & byteHash[i])) [FD]
Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_15 $$ loggerCol.logException(CLASSDEBUG, "de.searchworkorange.lib.misc.hash.MD4Hash", Level.FATAL, ex) [FD]
Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_17 $$ loggerCol.logException(CLASSDEBUG, "de.searchworkorange.lib.misc.hash.MD4Hash", Level.FATAL, ex) [FD]
Line_2 $$ public static String plainToMD(LoggerCollection loggerCol, String input) --> Line_19 $$ return (md4result.toString()) [CD]
Line_5 $$ StringBuilder md4result = new StringBuilder() --> Line_19 $$ return (md4result.toString()) [FD]
