Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() [CD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_5 $$ Policy p = java.security.Policy.getPolicy() [CD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_6 $$ if (p != null) [CD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_6 $$ if (p != null) [FD]
Line_6 $$ if (p != null) --> Line_7 $$ return p.getPermissions(new CodeSource(null, null)) [CD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_7 $$ return p.getPermissions(new CodeSource(null, null)) [FD]
Line_6 $$ if (p != null) --> Line_9 $$ return null [CD]
Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_13 $$ if (perms == null) [CD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_13 $$ if (perms == null) [FD]
Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_14 $$ perms.add(new RuntimePermission("createClassLoader")) [CD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_14 $$ perms.add(new RuntimePermission("createClassLoader")) [FD]
Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_18 $$ urlConnection = codebase.openConnection() [FD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_19 $$ p = urlConnection.getPermission() [FD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_21 $$ p = null [FD]
Line_19 $$ p = urlConnection.getPermission() --> Line_21 $$ p = null [FD]
Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_23 $$ if (p != null) [CD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_23 $$ if (p != null) [FD]
Line_19 $$ p = urlConnection.getPermission() --> Line_23 $$ if (p != null) [FD]
Line_21 $$ p = null --> Line_23 $$ if (p != null) [FD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_23 $$ if (p != null) [FD]
Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_24 $$ if (p instanceof FilePermission) [CD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_24 $$ if (p instanceof FilePermission) [FD]
Line_19 $$ p = urlConnection.getPermission() --> Line_24 $$ if (p instanceof FilePermission) [FD]
Line_21 $$ p = null --> Line_24 $$ if (p instanceof FilePermission) [FD]
Line_24 $$ if (p instanceof FilePermission) --> Line_25 $$ String path = p.getName() [CD]
Line_5 $$ Policy p = java.security.Policy.getPolicy() --> Line_25 $$ String path = p.getName() [FD]
Line_19 $$ p = urlConnection.getPermission() --> Line_25 $$ String path = p.getName() [FD]
Line_21 $$ p = null --> Line_25 $$ String path = p.getName() [FD]
Line_24 $$ if (p instanceof FilePermission) --> Line_26 $$ int endIndex = path.lastIndexOf(File.separatorChar) [CD]
Line_24 $$ if (p instanceof FilePermission) --> Line_27 $$ if (endIndex != -1) [CD]
Line_27 $$ if (endIndex != -1) --> Line_28 $$ path = path.substring(0, endIndex + 1) [CD]
Line_27 $$ if (endIndex != -1) --> Line_29 $$ if (path.endsWith(File.separator)) [CD]
Line_27 $$ if (endIndex != -1) --> Line_32 $$ perms.add(new FilePermission(path, "read")) [CD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_32 $$ perms.add(new FilePermission(path, "read")) [FD]
Line_24 $$ if (p instanceof FilePermission) --> Line_36 $$ if (urlConnection instanceof JarURLConnection) [CD]
Line_36 $$ if (urlConnection instanceof JarURLConnection) --> Line_37 $$ locUrl = ((JarURLConnection) urlConnection).getJarFileURL() [CD]
Line_24 $$ if (p instanceof FilePermission) --> Line_39 $$ String host = locUrl.getHost() [CD]
Line_24 $$ if (p instanceof FilePermission) --> Line_40 $$ perms.add(new SocketPermission(host, "connect, accept")) [CD]
Line_3 $$ PermissionCollection perms = (PermissionCollection) AccessController.doPrivileged(new PrivilegedAction() --> Line_40 $$ perms.add(new SocketPermission(host, "connect, accept")) [FD]
Line_2 $$ private AccessControlContext getAccessControlContext(final URL codebase) --> Line_44 $$ return acc [CD]
