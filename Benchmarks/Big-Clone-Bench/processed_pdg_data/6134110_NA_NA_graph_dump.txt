Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_3 $$ if (doAuth(request, response)) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_3 $$ if (doAuth(request, response)) [FD]
Line_3 $$ if (doAuth(request, response)) --> Line_4 $$ Connection conn = null [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_6 $$ int UID = icsm.getIntChatSession(request).getUID() [FD]
Line_4 $$ Connection conn = null --> Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) [FD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) [FD]
Line_4 $$ Connection conn = null --> Line_8 $$ if (conn == null) [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_8 $$ if (conn == null) [FD]
Line_4 $$ Connection conn = null --> Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") [FD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_10 $$ if (rs.next()) [FD]
Line_10 $$ if (rs.next()) --> Line_11 $$ int fileTypeID = rs.getInt("id") [CD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_11 $$ int fileTypeID = rs.getInt("id") [FD]
Line_10 $$ if (rs.next()) --> Line_12 $$ String recipients = request.getHeader(IntChatConstants.HEADER_FILERECIPIENTS) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_12 $$ String recipients = request.getHeader(IntChatConstants.HEADER_FILERECIPIENTS) [FD]
Line_10 $$ if (rs.next()) --> Line_13 $$ rs.getStatement().close() [CD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_13 $$ rs.getStatement().close() [FD]
Line_10 $$ if (rs.next()) --> Line_14 $$ rs = null [CD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_14 $$ rs = null [FD]
Line_10 $$ if (rs.next()) --> Line_15 $$ if (recipients != null) [CD]
Line_12 $$ String recipients = request.getHeader(IntChatConstants.HEADER_FILERECIPIENTS) --> Line_15 $$ if (recipients != null) [FD]
Line_15 $$ if (recipients != null) --> Line_16 $$ HashMap<String, String> hm = Tools.parseMultiparamLine(request.getHeader("Content-Disposition")) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_16 $$ HashMap<String, String> hm = Tools.parseMultiparamLine(request.getHeader("Content-Disposition")) [FD]
Line_15 $$ if (recipients != null) --> Line_17 $$ String fileName = URLDecoder.decode(hm.get("filename"), IntChatServerDefaults.ENCODING) [CD]
Line_16 $$ HashMap<String, String> hm = Tools.parseMultiparamLine(request.getHeader("Content-Disposition")) --> Line_17 $$ String fileName = URLDecoder.decode(hm.get("filename"), IntChatServerDefaults.ENCODING) [FD]
Line_15 $$ if (recipients != null) --> Line_18 $$ long fileLength = (request.getHeader("Content-Length") != null ? Long.parseLong(request.getHeader("Content-Length")) : -1) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_18 $$ long fileLength = (request.getHeader("Content-Length") != null ? Long.parseLong(request.getHeader("Content-Length")) : -1) [FD]
Line_15 $$ if (recipients != null) --> Line_19 $$ fileLength = (request.getHeader(IntChatConstants.HEADER_FILELENGTH) != null ? Long.parseLong(request.getHeader(IntChatConstants.HEADER_FILELENGTH)) : fileLength) [CD]
Line_18 $$ long fileLength = (request.getHeader("Content-Length") != null ? Long.parseLong(request.getHeader("Content-Length")) : -1) --> Line_19 $$ fileLength = (request.getHeader(IntChatConstants.HEADER_FILELENGTH) != null ? Long.parseLong(request.getHeader(IntChatConstants.HEADER_FILELENGTH)) : fileLength) [FD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_19 $$ fileLength = (request.getHeader(IntChatConstants.HEADER_FILELENGTH) != null ? Long.parseLong(request.getHeader(IntChatConstants.HEADER_FILELENGTH)) : fileLength) [FD]
Line_15 $$ if (recipients != null) --> Line_20 $$ long maxFileSize = RuntimeParameters.getIntValue(ParameterNames.MAX_FILE_SIZE) * 1048576 [CD]
Line_15 $$ if (recipients != null) --> Line_21 $$ if (maxFileSize > 0 && fileLength > maxFileSize) [CD]
Line_21 $$ if (maxFileSize > 0 && fileLength > maxFileSize) --> Line_22 $$ request.getInputStream().close() [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_22 $$ request.getInputStream().close() [FD]
Line_21 $$ if (maxFileSize > 0 && fileLength > maxFileSize) --> Line_23 $$ response.sendError(HttpServletResponse.SC_REQUEST_ENTITY_TOO_LARGE) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_23 $$ response.sendError(HttpServletResponse.SC_REQUEST_ENTITY_TOO_LARGE) [FD]
Line_21 $$ if (maxFileSize > 0 && fileLength > maxFileSize) --> Line_24 $$ return [CD]
Line_15 $$ if (recipients != null) --> Line_26 $$ long now = System.currentTimeMillis() [CD]
Line_15 $$ if (recipients != null) --> Line_27 $$ long nextid = ic_messages_id_seq.nextval() [CD]
Line_15 $$ if (recipients != null) --> Line_28 $$ IntChatServletInputStream in = new IntChatServletInputStream(request) [CD]
Line_15 $$ if (recipients != null) --> Line_29 $$ IntChatMessage icm = null [CD]
Line_15 $$ if (recipients != null) --> Line_30 $$ conn.setAutoCommit(false) [CD]
Line_4 $$ Connection conn = null --> Line_30 $$ conn.setAutoCommit(false) [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_30 $$ conn.setAutoCommit(false) [FD]
Line_4 $$ Connection conn = null --> Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_33 $$ ps.setLong(1, nextid) [FD]
Line_27 $$ long nextid = ic_messages_id_seq.nextval() --> Line_33 $$ ps.setLong(1, nextid) [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_34 $$ ps.setInt(2, fileTypeID) [FD]
Line_11 $$ int fileTypeID = rs.getInt("id") --> Line_34 $$ ps.setInt(2, fileTypeID) [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_35 $$ ps.setString(3, fileName) [FD]
Line_17 $$ String fileName = URLDecoder.decode(hm.get("filename"), IntChatServerDefaults.ENCODING) --> Line_35 $$ ps.setString(3, fileName) [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_36 $$ ps.setString(4, Long.toString(fileLength)) [FD]
Line_18 $$ long fileLength = (request.getHeader("Content-Length") != null ? Long.parseLong(request.getHeader("Content-Length")) : -1) --> Line_36 $$ ps.setString(4, Long.toString(fileLength)) [FD]
Line_19 $$ fileLength = (request.getHeader(IntChatConstants.HEADER_FILELENGTH) != null ? Long.parseLong(request.getHeader(IntChatConstants.HEADER_FILELENGTH)) : fileLength) --> Line_36 $$ ps.setString(4, Long.toString(fileLength)) [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_37 $$ ps.setLong(5, now) [FD]
Line_26 $$ long now = System.currentTimeMillis() --> Line_37 $$ ps.setLong(5, now) [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_38 $$ ps.setInt(6, UID) [FD]
Line_6 $$ int UID = icsm.getIntChatSession(request).getUID() --> Line_38 $$ ps.setInt(6, UID) [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_39 $$ ps.executeUpdate() [FD]
Line_32 $$ PreparedStatement ps = conn.prepareStatement("INSERT INTO ic_messages (id, tid, mhead, mbody, mdate, sid) VALUES (?, ?, ?, ?, ?, ?)") --> Line_40 $$ ps.close() [FD]
Line_4 $$ Connection conn = null --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_28 $$ IntChatServletInputStream in = new IntChatServletInputStream(request) --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_18 $$ long fileLength = (request.getHeader("Content-Length") != null ? Long.parseLong(request.getHeader("Content-Length")) : -1) --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_19 $$ fileLength = (request.getHeader(IntChatConstants.HEADER_FILELENGTH) != null ? Long.parseLong(request.getHeader(IntChatConstants.HEADER_FILELENGTH)) : fileLength) --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_27 $$ long nextid = ic_messages_id_seq.nextval() --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_20 $$ long maxFileSize = RuntimeParameters.getIntValue(ParameterNames.MAX_FILE_SIZE) * 1048576 --> Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) [FD]
Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) --> Line_42 $$ conn.rollback() [CD]
Line_4 $$ Connection conn = null --> Line_42 $$ conn.rollback() [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_42 $$ conn.rollback() [FD]
Line_41 $$ if (!insertBLOB(conn, in, fileLength, nextid, maxFileSize)) --> Line_43 $$ return [CD]
Line_29 $$ IntChatMessage icm = null --> Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) [FD]
Line_12 $$ String recipients = request.getHeader(IntChatConstants.HEADER_FILERECIPIENTS) --> Line_46 $$ String[] id = recipients.split(",") [FD]
Line_48 $$ for (int i = 0; i < id.length; i++) --> Line_49 $$ id1 = Integer.parseInt(id[i].trim()) [CD]
Line_47 $$ int id1 --> Line_49 $$ id1 = Integer.parseInt(id[i].trim()) [FD]
Line_48 $$ for (int i = 0; i < id.length; i++) --> Line_50 $$ IntChatDatabaseOperations.executeUpdate(conn, "INSERT INTO ic_recipients (mid, rid) VALUES ('" + nextid + "', '" + id1 + "')") [CD]
Line_4 $$ Connection conn = null --> Line_50 $$ IntChatDatabaseOperations.executeUpdate(conn, "INSERT INTO ic_recipients (mid, rid) VALUES ('" + nextid + "', '" + id1 + "')") [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_50 $$ IntChatDatabaseOperations.executeUpdate(conn, "INSERT INTO ic_recipients (mid, rid) VALUES ('" + nextid + "', '" + id1 + "')") [FD]
Line_48 $$ for (int i = 0; i < id.length; i++) --> Line_51 $$ icm.addTo(id1) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_51 $$ icm.addTo(id1) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_51 $$ icm.addTo(id1) [FD]
Line_49 $$ id1 = Integer.parseInt(id[i].trim()) --> Line_51 $$ icm.addTo(id1) [FD]
Line_47 $$ int id1 --> Line_51 $$ icm.addTo(id1) [FD]
Line_4 $$ Connection conn = null --> Line_53 $$ conn.commit() [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_53 $$ conn.commit() [FD]
Line_4 $$ Connection conn = null --> Line_55 $$ conn.rollback() [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_55 $$ conn.rollback() [FD]
Line_4 $$ Connection conn = null --> Line_58 $$ conn.setAutoCommit(true) [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_58 $$ conn.setAutoCommit(true) [FD]
Line_15 $$ if (recipients != null) --> Line_60 $$ if (icm != null) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_60 $$ if (icm != null) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_60 $$ if (icm != null) [FD]
Line_60 $$ if (icm != null) --> Line_61 $$ icm.setID(nextid) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_61 $$ icm.setID(nextid) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_61 $$ icm.setID(nextid) [FD]
Line_27 $$ long nextid = ic_messages_id_seq.nextval() --> Line_61 $$ icm.setID(nextid) [FD]
Line_60 $$ if (icm != null) --> Line_62 $$ icm.setDate(new Timestamp(now - TimeZone.getDefault().getOffset(now))) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_62 $$ icm.setDate(new Timestamp(now - TimeZone.getDefault().getOffset(now))) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_62 $$ icm.setDate(new Timestamp(now - TimeZone.getDefault().getOffset(now))) [FD]
Line_26 $$ long now = System.currentTimeMillis() --> Line_62 $$ icm.setDate(new Timestamp(now - TimeZone.getDefault().getOffset(now))) [FD]
Line_60 $$ if (icm != null) --> Line_63 $$ icm.setFrom(UID) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_63 $$ icm.setFrom(UID) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_63 $$ icm.setFrom(UID) [FD]
Line_6 $$ int UID = icsm.getIntChatSession(request).getUID() --> Line_63 $$ icm.setFrom(UID) [FD]
Line_60 $$ if (icm != null) --> Line_64 $$ icm.setHeadText(fileName) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_64 $$ icm.setHeadText(fileName) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_64 $$ icm.setHeadText(fileName) [FD]
Line_17 $$ String fileName = URLDecoder.decode(hm.get("filename"), IntChatServerDefaults.ENCODING) --> Line_64 $$ icm.setHeadText(fileName) [FD]
Line_60 $$ if (icm != null) --> Line_65 $$ icm.setBodyText(Long.toString(fileLength)) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_65 $$ icm.setBodyText(Long.toString(fileLength)) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_65 $$ icm.setBodyText(Long.toString(fileLength)) [FD]
Line_18 $$ long fileLength = (request.getHeader("Content-Length") != null ? Long.parseLong(request.getHeader("Content-Length")) : -1) --> Line_65 $$ icm.setBodyText(Long.toString(fileLength)) [FD]
Line_19 $$ fileLength = (request.getHeader(IntChatConstants.HEADER_FILELENGTH) != null ? Long.parseLong(request.getHeader(IntChatConstants.HEADER_FILELENGTH)) : fileLength) --> Line_65 $$ icm.setBodyText(Long.toString(fileLength)) [FD]
Line_60 $$ if (icm != null) --> Line_66 $$ icsm.onClientSentMessage(icm) [CD]
Line_29 $$ IntChatMessage icm = null --> Line_66 $$ icsm.onClientSentMessage(icm) [FD]
Line_45 $$ icm = new IntChatMessage(false, fileTypeID, null, null) --> Line_66 $$ icsm.onClientSentMessage(icm) [FD]
Line_15 $$ if (recipients != null) --> Line_68 $$ response.setStatus(HttpServletResponse.SC_OK) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_68 $$ response.setStatus(HttpServletResponse.SC_OK) [FD]
Line_15 $$ if (recipients != null) --> Line_70 $$ response.setStatus(HttpServletResponse.SC_BAD_REQUEST) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_70 $$ response.setStatus(HttpServletResponse.SC_BAD_REQUEST) [FD]
Line_10 $$ if (rs.next()) --> Line_73 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND) [CD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_73 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND) [FD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_75 $$ if (rs != null) [FD]
Line_14 $$ rs = null --> Line_75 $$ if (rs != null) [FD]
Line_75 $$ if (rs != null) --> Line_76 $$ rs.getStatement().close() [CD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_76 $$ rs.getStatement().close() [FD]
Line_14 $$ rs = null --> Line_76 $$ rs.getStatement().close() [FD]
Line_75 $$ if (rs != null) --> Line_77 $$ rs = null [CD]
Line_9 $$ ResultSet rs = IntChatDatabaseOperations.executeQuery(conn, "SELECT id FROM ic_messagetypes WHERE templatename='" + IntChatConstants.MessageTemplates.IC_FILES + "' LIMIT 1") --> Line_77 $$ rs = null [FD]
Line_14 $$ rs = null --> Line_77 $$ rs = null [FD]
Line_2 $$ protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException --> Line_82 $$ Tools.makeErrorResponse(request, response, HttpServletResponse.SC_INTERNAL_SERVER_ERROR, e) [FD]
Line_4 $$ Connection conn = null --> Line_85 $$ icsm.getHeavyDatabaseConnectionPool().releaseConnection(conn) [FD]
Line_7 $$ conn = getJDBCConnection(icsm.getHeavyDatabaseConnectionPool(), request, response, HttpServletResponse.SC_SERVICE_UNAVAILABLE) --> Line_85 $$ icsm.getHeavyDatabaseConnectionPool().releaseConnection(conn) [FD]
