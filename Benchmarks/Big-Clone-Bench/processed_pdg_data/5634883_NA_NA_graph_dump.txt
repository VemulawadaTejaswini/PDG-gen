Line_4 $$ URL url = new URL(URL_STR + "?req=list") --> Line_5 $$ URLConnection connection = url.openConnection(getProxy()) [FD]
Line_5 $$ URLConnection connection = url.openConnection(getProxy()) --> Line_6 $$ connection.setRequestProperty("User-Agent", USER_AGENT) [FD]
Line_5 $$ URLConnection connection = url.openConnection(getProxy()) --> Line_7 $$ BufferedReader bufferedRdr = new BufferedReader(new InputStreamReader(connection.getInputStream())) [FD]
Line_8 $$ String line = null --> Line_18 $$ while ((line = bufferedRdr.readLine()) != null) [FD]
Line_7 $$ BufferedReader bufferedRdr = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_18 $$ while ((line = bufferedRdr.readLine()) != null) [FD]
Line_18 $$ while ((line = bufferedRdr.readLine()) != null) --> Line_19 $$ if (line.length() > 2) [CD]
Line_18 $$ while ((line = bufferedRdr.readLine()) != null) --> Line_19 $$ if (line.length() > 2) [FD]
Line_8 $$ String line = null --> Line_19 $$ if (line.length() > 2) [FD]
Line_14 $$ String[] subparts --> Line_21 $$ subparts = line.split(" ", 3) [FD]
Line_18 $$ while ((line = bufferedRdr.readLine()) != null) --> Line_21 $$ subparts = line.split(" ", 3) [FD]
Line_8 $$ String line = null --> Line_21 $$ subparts = line.split(" ", 3) [FD]
Line_22 $$ if (subparts.length != 3) --> Line_23 $$ Util.debug(28, "Not enough subentry in online toplist file: ." + KeyboardHero.APP_NAME + ".tls!") [CD]
Line_16 $$ int tlscore --> Line_26 $$ tlscore = Integer.parseInt(subparts[1]) [FD]
Line_17 $$ float tlfactor --> Line_27 $$ tlfactor = Float.parseFloat(subparts[0]) [FD]
Line_12 $$ ArrayList<Integer> scores = new ArrayList<Integer>() --> Line_28 $$ scores.add(tlscore) [FD]
Line_26 $$ tlscore = Integer.parseInt(subparts[1]) --> Line_28 $$ scores.add(tlscore) [FD]
Line_16 $$ int tlscore --> Line_28 $$ scores.add(tlscore) [FD]
Line_13 $$ ArrayList<Float> factors = new ArrayList<Float>() --> Line_29 $$ factors.add(tlfactor) [FD]
Line_27 $$ tlfactor = Float.parseFloat(subparts[0]) --> Line_29 $$ factors.add(tlfactor) [FD]
Line_17 $$ float tlfactor --> Line_29 $$ factors.add(tlfactor) [FD]
Line_15 $$ String[] ssubparts --> Line_30 $$ ssubparts = hexdecode(subparts[2]).split("Â¦", 2) [FD]
Line_31 $$ if (ssubparts.length != 2) --> Line_32 $$ Util.debug(26, "Not enough subsubentry in online toplist file: ." + KeyboardHero.APP_NAME + ".tls!") [CD]
Line_11 $$ ArrayList<String> songs = new ArrayList<String>() --> Line_35 $$ songs.add(ssubparts[0]) [FD]
Line_10 $$ ArrayList<String> names = new ArrayList<String>() --> Line_36 $$ names.add(ssubparts[1]) [FD]
Line_9 $$ int foundCount = 0 --> Line_37 $$ foundCount++ [FD]
Line_7 $$ BufferedReader bufferedRdr = new BufferedReader(new InputStreamReader(connection.getInputStream())) --> Line_45 $$ bufferedRdr.close() [FD]
Line_9 $$ int foundCount = 0 --> Line_46 $$ ((DialogToplist) KeyboardHero.getDialogs().get("toplist")).setContent(names.toArray(new String[0]), scores.toArray(new Integer[0]), songs.toArray(new String[0]), factors.toArray(new Float[0]), foundCount, -1) [FD]
Line_10 $$ ArrayList<String> names = new ArrayList<String>() --> Line_46 $$ ((DialogToplist) KeyboardHero.getDialogs().get("toplist")).setContent(names.toArray(new String[0]), scores.toArray(new Integer[0]), songs.toArray(new String[0]), factors.toArray(new Float[0]), foundCount, -1) [FD]
Line_12 $$ ArrayList<Integer> scores = new ArrayList<Integer>() --> Line_46 $$ ((DialogToplist) KeyboardHero.getDialogs().get("toplist")).setContent(names.toArray(new String[0]), scores.toArray(new Integer[0]), songs.toArray(new String[0]), factors.toArray(new Float[0]), foundCount, -1) [FD]
Line_11 $$ ArrayList<String> songs = new ArrayList<String>() --> Line_46 $$ ((DialogToplist) KeyboardHero.getDialogs().get("toplist")).setContent(names.toArray(new String[0]), scores.toArray(new Integer[0]), songs.toArray(new String[0]), factors.toArray(new Float[0]), foundCount, -1) [FD]
Line_13 $$ ArrayList<Float> factors = new ArrayList<Float>() --> Line_46 $$ ((DialogToplist) KeyboardHero.getDialogs().get("toplist")).setContent(names.toArray(new String[0]), scores.toArray(new Integer[0]), songs.toArray(new String[0]), factors.toArray(new Float[0]), foundCount, -1) [FD]
