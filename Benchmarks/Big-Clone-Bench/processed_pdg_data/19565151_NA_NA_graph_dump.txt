Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_4 $$ System.out.println("generateNativeInstallExe = /" + instTemplate) [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_5 $$ System.out.println("reader length=" + reader.available()) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_5 $$ System.out.println("reader length=" + reader.available()) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_7 $$ String installClassVarStr = "000000000000" [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] [CD]
Line_7 $$ String installClassVarStr = "000000000000" --> Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_9 $$ NumberFormat nf = NumberFormat.getInstance(Locale.US) [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_10 $$ nf.setGroupingUsed(false) [CD]
Line_9 $$ NumberFormat nf = NumberFormat.getInstance(Locale.US) --> Line_10 $$ nf.setGroupingUsed(false) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_11 $$ nf.setMinimumIntegerDigits(installClassVarStr.length()) [CD]
Line_9 $$ NumberFormat nf = NumberFormat.getInstance(Locale.US) --> Line_11 $$ nf.setMinimumIntegerDigits(installClassVarStr.length()) [FD]
Line_7 $$ String installClassVarStr = "000000000000" --> Line_11 $$ nf.setMinimumIntegerDigits(installClassVarStr.length()) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_12 $$ int installClassStopPos = 0 [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_13 $$ long installClassOffset = reader.available() [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_13 $$ long installClassOffset = reader.available() [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_14 $$ int position = 0 [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_15 $$ System.out.println(VAGlobals.i18n("VAArchiver_GenerateInstallExe")) [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_16 $$ reader.read(buf, 0, buf.length) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_16 $$ reader.read(buf, 0, buf.length) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_16 $$ reader.read(buf, 0, buf.length) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_17 $$ position = 1 [CD]
Line_14 $$ int position = 0 --> Line_17 $$ position = 1 [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_18 $$ for (int n = 0; n < 3; n++) [CD]
Line_18 $$ for (int n = 0; n < 3; n++) --> Line_19 $$ while ((!new String(buf).equals("clname_here_")) && (!new String(buf).equals("clstart_here")) && (!new String(buf).equals("clstop_here_"))) [CD]
Line_19 $$ while ((!new String(buf).equals("clname_here_")) && (!new String(buf).equals("clstart_here")) && (!new String(buf).equals("clstop_here_"))) --> Line_20 $$ content.write(buf[0]) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_20 $$ content.write(buf[0]) [FD]
Line_19 $$ while ((!new String(buf).equals("clname_here_")) && (!new String(buf).equals("clstart_here")) && (!new String(buf).equals("clstop_here_"))) --> Line_21 $$ int nextb = reader.read() [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_21 $$ int nextb = reader.read() [FD]
Line_19 $$ while ((!new String(buf).equals("clname_here_")) && (!new String(buf).equals("clstart_here")) && (!new String(buf).equals("clstop_here_"))) --> Line_22 $$ position++ [CD]
Line_14 $$ int position = 0 --> Line_22 $$ position++ [FD]
Line_17 $$ position = 1 --> Line_22 $$ position++ [FD]
Line_19 $$ while ((!new String(buf).equals("clname_here_")) && (!new String(buf).equals("clstart_here")) && (!new String(buf).equals("clstop_here_"))) --> Line_23 $$ shiftArray(buf) [CD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_23 $$ shiftArray(buf) [FD]
Line_19 $$ while ((!new String(buf).equals("clname_here_")) && (!new String(buf).equals("clstart_here")) && (!new String(buf).equals("clstop_here_"))) --> Line_24 $$ buf[buf.length - 1] = (byte) nextb [CD]
Line_18 $$ for (int n = 0; n < 3; n++) --> Line_26 $$ if (new String(buf).equals("clname_here_")) [CD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_27 $$ System.err.println("  clname_here_ found at " + (position - 1)) [CD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_29 $$ clnameBuffer.append(instClassName_) [CD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_30 $$ for (int i = clnameBuffer.length() - 1; i < 64; i++) [CD]
Line_30 $$ for (int i = clnameBuffer.length() - 1; i < 64; i++) --> Line_31 $$ clnameBuffer.append('.') [CD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_33 $$ byte[] clnameBytes = clnameBuffer.toString().getBytes() [CD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_34 $$ for (int i = 0; i < 64; i++) [CD]
Line_30 $$ for (int i = clnameBuffer.length() - 1; i < 64; i++) --> Line_34 $$ for (int i = 0; i < 64; i++) [FD]
Line_34 $$ for (int i = 0; i < 64; i++) --> Line_35 $$ content.write(clnameBytes[i]) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_35 $$ content.write(clnameBytes[i]) [FD]
Line_34 $$ for (int i = 0; i < 64; i++) --> Line_36 $$ position++ [CD]
Line_14 $$ int position = 0 --> Line_36 $$ position++ [FD]
Line_17 $$ position = 1 --> Line_36 $$ position++ [FD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_38 $$ reader.skip(64 - buf.length) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_38 $$ reader.skip(64 - buf.length) [FD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_39 $$ reader.read(buf, 0, buf.length) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_39 $$ reader.read(buf, 0, buf.length) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_39 $$ reader.read(buf, 0, buf.length) [FD]
Line_26 $$ if (new String(buf).equals("clname_here_")) --> Line_40 $$ if (new String(buf).equals("clstart_here")) [CD]
Line_40 $$ if (new String(buf).equals("clstart_here")) --> Line_41 $$ System.err.println("  clstart_here found at " + (position - 1)) [CD]
Line_40 $$ if (new String(buf).equals("clstart_here")) --> Line_42 $$ buf = nf.format(installClassOffset).getBytes() [CD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_42 $$ buf = nf.format(installClassOffset).getBytes() [FD]
Line_9 $$ NumberFormat nf = NumberFormat.getInstance(Locale.US) --> Line_42 $$ buf = nf.format(installClassOffset).getBytes() [FD]
Line_13 $$ long installClassOffset = reader.available() --> Line_42 $$ buf = nf.format(installClassOffset).getBytes() [FD]
Line_40 $$ if (new String(buf).equals("clstart_here")) --> Line_43 $$ for (int i = 0; i < buf.length; i++) [CD]
Line_34 $$ for (int i = 0; i < 64; i++) --> Line_43 $$ for (int i = 0; i < buf.length; i++) [FD]
Line_30 $$ for (int i = clnameBuffer.length() - 1; i < 64; i++) --> Line_43 $$ for (int i = 0; i < buf.length; i++) [FD]
Line_43 $$ for (int i = 0; i < buf.length; i++) --> Line_44 $$ content.write(buf[i]) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_44 $$ content.write(buf[i]) [FD]
Line_43 $$ for (int i = 0; i < buf.length; i++) --> Line_45 $$ position++ [CD]
Line_14 $$ int position = 0 --> Line_45 $$ position++ [FD]
Line_17 $$ position = 1 --> Line_45 $$ position++ [FD]
Line_40 $$ if (new String(buf).equals("clstart_here")) --> Line_47 $$ reader.read(buf, 0, buf.length) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_47 $$ reader.read(buf, 0, buf.length) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_47 $$ reader.read(buf, 0, buf.length) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_47 $$ reader.read(buf, 0, buf.length) [FD]
Line_40 $$ if (new String(buf).equals("clstart_here")) --> Line_48 $$ if (new String(buf).equals("clstop_here_")) [CD]
Line_48 $$ if (new String(buf).equals("clstop_here_")) --> Line_49 $$ System.err.println("  clstop_here_ found at " + (position - 1)) [CD]
Line_48 $$ if (new String(buf).equals("clstop_here_")) --> Line_50 $$ installClassStopPos = position - 1 [CD]
Line_12 $$ int installClassStopPos = 0 --> Line_50 $$ installClassStopPos = position - 1 [FD]
Line_14 $$ int position = 0 --> Line_50 $$ installClassStopPos = position - 1 [FD]
Line_17 $$ position = 1 --> Line_50 $$ installClassStopPos = position - 1 [FD]
Line_48 $$ if (new String(buf).equals("clstop_here_")) --> Line_51 $$ content.write(buf) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_51 $$ content.write(buf) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_51 $$ content.write(buf) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_51 $$ content.write(buf) [FD]
Line_48 $$ if (new String(buf).equals("clstop_here_")) --> Line_52 $$ position += 12 [CD]
Line_14 $$ int position = 0 --> Line_52 $$ position += 12 [FD]
Line_17 $$ position = 1 --> Line_52 $$ position += 12 [FD]
Line_48 $$ if (new String(buf).equals("clstop_here_")) --> Line_53 $$ reader.read(buf, 0, buf.length) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_53 $$ reader.read(buf, 0, buf.length) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_53 $$ reader.read(buf, 0, buf.length) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_53 $$ reader.read(buf, 0, buf.length) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_56 $$ content.write(buf) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_56 $$ content.write(buf) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_56 $$ content.write(buf) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_56 $$ content.write(buf) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_57 $$ buf = new byte[2048] [CD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_57 $$ buf = new byte[2048] [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_57 $$ buf = new byte[2048] [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_58 $$ int read = reader.read(buf) [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_58 $$ int read = reader.read(buf) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_58 $$ int read = reader.read(buf) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_58 $$ int read = reader.read(buf) [FD]
Line_57 $$ buf = new byte[2048] --> Line_58 $$ int read = reader.read(buf) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_59 $$ while (read > 0) [CD]
Line_58 $$ int read = reader.read(buf) --> Line_59 $$ while (read > 0) [FD]
Line_59 $$ while (read > 0) --> Line_60 $$ content.write(buf, 0, read) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_60 $$ content.write(buf, 0, read) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_60 $$ content.write(buf, 0, read) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_60 $$ content.write(buf, 0, read) [FD]
Line_57 $$ buf = new byte[2048] --> Line_60 $$ content.write(buf, 0, read) [FD]
Line_58 $$ int read = reader.read(buf) --> Line_60 $$ content.write(buf, 0, read) [FD]
Line_59 $$ while (read > 0) --> Line_61 $$ read = reader.read(buf) [CD]
Line_58 $$ int read = reader.read(buf) --> Line_61 $$ read = reader.read(buf) [FD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_61 $$ read = reader.read(buf) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_61 $$ read = reader.read(buf) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_61 $$ read = reader.read(buf) [FD]
Line_57 $$ buf = new byte[2048] --> Line_61 $$ read = reader.read(buf) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_63 $$ reader.close() [CD]
Line_3 $$ InputStream reader = getClass().getResourceAsStream("/" + instTemplate) --> Line_63 $$ reader.close() [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_64 $$ FileInputStream classStream = new FileInputStream(instClassFile) [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_65 $$ read = classStream.read(buf) [CD]
Line_61 $$ read = reader.read(buf) --> Line_65 $$ read = classStream.read(buf) [FD]
Line_58 $$ int read = reader.read(buf) --> Line_65 $$ read = classStream.read(buf) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_65 $$ read = classStream.read(buf) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_65 $$ read = classStream.read(buf) [FD]
Line_57 $$ buf = new byte[2048] --> Line_65 $$ read = classStream.read(buf) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_66 $$ while (read > 0) [CD]
Line_61 $$ read = reader.read(buf) --> Line_66 $$ while (read > 0) [FD]
Line_58 $$ int read = reader.read(buf) --> Line_66 $$ while (read > 0) [FD]
Line_66 $$ while (read > 0) --> Line_67 $$ content.write(buf, 0, read) [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_67 $$ content.write(buf, 0, read) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_67 $$ content.write(buf, 0, read) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_67 $$ content.write(buf, 0, read) [FD]
Line_57 $$ buf = new byte[2048] --> Line_67 $$ content.write(buf, 0, read) [FD]
Line_61 $$ read = reader.read(buf) --> Line_67 $$ content.write(buf, 0, read) [FD]
Line_58 $$ int read = reader.read(buf) --> Line_67 $$ content.write(buf, 0, read) [FD]
Line_66 $$ while (read > 0) --> Line_68 $$ read = classStream.read(buf) [CD]
Line_61 $$ read = reader.read(buf) --> Line_68 $$ read = classStream.read(buf) [FD]
Line_58 $$ int read = reader.read(buf) --> Line_68 $$ read = classStream.read(buf) [FD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_68 $$ read = classStream.read(buf) [FD]
Line_8 $$ byte[] buf = new byte[installClassVarStr.length()] --> Line_68 $$ read = classStream.read(buf) [FD]
Line_57 $$ buf = new byte[2048] --> Line_68 $$ read = classStream.read(buf) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_70 $$ classStream.close() [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_71 $$ content.close() [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_71 $$ content.close() [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_72 $$ byte[] contentBytes = content.toByteArray() [CD]
Line_6 $$ ByteArrayOutputStream content = new ByteArrayOutputStream() --> Line_72 $$ byte[] contentBytes = content.toByteArray() [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_73 $$ installClassVarStr = nf.format(contentBytes.length) [CD]
Line_7 $$ String installClassVarStr = "000000000000" --> Line_73 $$ installClassVarStr = nf.format(contentBytes.length) [FD]
Line_9 $$ NumberFormat nf = NumberFormat.getInstance(Locale.US) --> Line_73 $$ installClassVarStr = nf.format(contentBytes.length) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_74 $$ byte[] installClassVarBytes = installClassVarStr.getBytes() [CD]
Line_7 $$ String installClassVarStr = "000000000000" --> Line_74 $$ byte[] installClassVarBytes = installClassVarStr.getBytes() [FD]
Line_73 $$ installClassVarStr = nf.format(contentBytes.length) --> Line_74 $$ byte[] installClassVarBytes = installClassVarStr.getBytes() [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_75 $$ for (int i = 0; i < installClassVarBytes.length; i++) [CD]
Line_43 $$ for (int i = 0; i < buf.length; i++) --> Line_75 $$ for (int i = 0; i < installClassVarBytes.length; i++) [FD]
Line_34 $$ for (int i = 0; i < 64; i++) --> Line_75 $$ for (int i = 0; i < installClassVarBytes.length; i++) [FD]
Line_30 $$ for (int i = clnameBuffer.length() - 1; i < 64; i++) --> Line_75 $$ for (int i = 0; i < installClassVarBytes.length; i++) [FD]
Line_75 $$ for (int i = 0; i < installClassVarBytes.length; i++) --> Line_76 $$ contentBytes[installClassStopPos + i] = installClassVarBytes[i] [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_78 $$ FileOutputStream out = new FileOutputStream(nativeInstallFile) [CD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_79 $$ out.write(contentBytes) [CD]
Line_78 $$ FileOutputStream out = new FileOutputStream(nativeInstallFile) --> Line_79 $$ out.write(contentBytes) [FD]
Line_72 $$ byte[] contentBytes = content.toByteArray() --> Line_79 $$ out.write(contentBytes) [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_80 $$ out.close() [CD]
Line_78 $$ FileOutputStream out = new FileOutputStream(nativeInstallFile) --> Line_80 $$ out.close() [FD]
Line_2 $$ private long generateNativeInstallExe(File nativeInstallFile, String instTemplate, File instClassFile) throws IOException --> Line_81 $$ return installClassOffset [CD]
Line_42 $$ buf = nf.format(installClassOffset).getBytes() --> Line_39 $$ reader.read(buf, 0, buf.length) [FD]
Line_52 $$ position += 12 --> Line_50 $$ installClassStopPos = position - 1 [FD]
Line_61 $$ read = reader.read(buf) --> Line_59 $$ while (read > 0) [FD]
Line_61 $$ read = reader.read(buf) --> Line_60 $$ content.write(buf, 0, read) [FD]
