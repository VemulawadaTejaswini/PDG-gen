Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_3 $$ String path = null [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_4 $$ URL ontURL = new URL(url) [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_5 $$ InputStream ins = ontURL.openStream() [CD]
Line_4 $$ URL ontURL = new URL(url) --> Line_5 $$ InputStream ins = ontURL.openStream() [FD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_6 $$ InputStreamReader bufRead [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_7 $$ OutputStreamWriter bufWrite [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_8 $$ int offset = 0, read = 0 [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_9 $$ initModelHash() [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_10 $$ if (System.getProperty("user.dir") != null) [CD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_11 $$ String delimiter [CD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_12 $$ path = System.getProperty("user.dir") [CD]
Line_3 $$ String path = null --> Line_12 $$ path = System.getProperty("user.dir") [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_13 $$ if (path.contains("/")) [CD]
Line_3 $$ String path = null --> Line_13 $$ if (path.contains("/")) [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_13 $$ if (path.contains("/")) [FD]
Line_13 $$ if (path.contains("/")) --> Line_14 $$ delimiter = "/" [CD]
Line_11 $$ String delimiter --> Line_14 $$ delimiter = "/" [FD]
Line_13 $$ if (path.contains("/")) --> Line_16 $$ delimiter = "\\" [CD]
Line_11 $$ String delimiter --> Line_16 $$ delimiter = "\\" [FD]
Line_14 $$ delimiter = "/" --> Line_16 $$ delimiter = "\\" [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_18 $$ char c = path.charAt(path.length() - 1) [CD]
Line_3 $$ String path = null --> Line_18 $$ char c = path.charAt(path.length() - 1) [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_18 $$ char c = path.charAt(path.length() - 1) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_19 $$ if (c == '/' || c == '\\') [CD]
Line_19 $$ if (c == '/' || c == '\\') --> Line_20 $$ path = path.substring(0, path.length() - 2) [CD]
Line_3 $$ String path = null --> Line_20 $$ path = path.substring(0, path.length() - 2) [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_20 $$ path = path.substring(0, path.length() - 2) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [CD]
Line_3 $$ String path = null --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [FD]
Line_20 $$ path = path.substring(0, path.length() - 2) --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [FD]
Line_11 $$ String delimiter --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [FD]
Line_14 $$ delimiter = "/" --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [FD]
Line_16 $$ delimiter = "\\" --> Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") [CD]
Line_3 $$ String path = null --> Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") [FD]
Line_20 $$ path = path.substring(0, path.length() - 2) --> Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") [FD]
Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) --> Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_24 $$ (new File(path)).mkdir() [CD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_25 $$ path = path.concat(delimiter) [CD]
Line_3 $$ String path = null --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_20 $$ path = path.substring(0, path.length() - 2) --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_11 $$ String delimiter --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_14 $$ delimiter = "/" --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_16 $$ delimiter = "\\" --> Line_25 $$ path = path.concat(delimiter) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_26 $$ path = createFullPath(url, path) [CD]
Line_3 $$ String path = null --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_12 $$ path = System.getProperty("user.dir") --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_20 $$ path = path.substring(0, path.length() - 2) --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_22 $$ path = path.substring(0, path.lastIndexOf(delimiter) + 1) --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_23 $$ path = path.concat("ontologies" + delimiter + "downloaded") --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_25 $$ path = path.concat(delimiter) --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_26 $$ path = createFullPath(url, path) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_27 $$ bufWrite = new OutputStreamWriter(new FileOutputStream(path)) [CD]
Line_7 $$ OutputStreamWriter bufWrite --> Line_27 $$ bufWrite = new OutputStreamWriter(new FileOutputStream(path)) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_28 $$ bufRead = new InputStreamReader(ins) [CD]
Line_6 $$ InputStreamReader bufRead --> Line_28 $$ bufRead = new InputStreamReader(ins) [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_29 $$ read = bufRead.read() [CD]
Line_8 $$ int offset = 0, read = 0 --> Line_29 $$ read = bufRead.read() [FD]
Line_6 $$ InputStreamReader bufRead --> Line_29 $$ read = bufRead.read() [FD]
Line_28 $$ bufRead = new InputStreamReader(ins) --> Line_29 $$ read = bufRead.read() [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_30 $$ while (read != -1) [CD]
Line_8 $$ int offset = 0, read = 0 --> Line_30 $$ while (read != -1) [FD]
Line_29 $$ read = bufRead.read() --> Line_30 $$ while (read != -1) [FD]
Line_30 $$ while (read != -1) --> Line_31 $$ bufWrite.write(read) [CD]
Line_7 $$ OutputStreamWriter bufWrite --> Line_31 $$ bufWrite.write(read) [FD]
Line_27 $$ bufWrite = new OutputStreamWriter(new FileOutputStream(path)) --> Line_31 $$ bufWrite.write(read) [FD]
Line_8 $$ int offset = 0, read = 0 --> Line_31 $$ bufWrite.write(read) [FD]
Line_29 $$ read = bufRead.read() --> Line_31 $$ bufWrite.write(read) [FD]
Line_30 $$ while (read != -1) --> Line_32 $$ offset += read [CD]
Line_8 $$ int offset = 0, read = 0 --> Line_32 $$ offset += read [FD]
Line_29 $$ read = bufRead.read() --> Line_32 $$ offset += read [FD]
Line_30 $$ while (read != -1) --> Line_33 $$ read = bufRead.read() [CD]
Line_8 $$ int offset = 0, read = 0 --> Line_33 $$ read = bufRead.read() [FD]
Line_29 $$ read = bufRead.read() --> Line_33 $$ read = bufRead.read() [FD]
Line_6 $$ InputStreamReader bufRead --> Line_33 $$ read = bufRead.read() [FD]
Line_28 $$ bufRead = new InputStreamReader(ins) --> Line_33 $$ read = bufRead.read() [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_35 $$ bufRead.close() [CD]
Line_6 $$ InputStreamReader bufRead --> Line_35 $$ bufRead.close() [FD]
Line_28 $$ bufRead = new InputStreamReader(ins) --> Line_35 $$ bufRead.close() [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_36 $$ bufWrite.close() [CD]
Line_7 $$ OutputStreamWriter bufWrite --> Line_36 $$ bufWrite.close() [FD]
Line_27 $$ bufWrite = new OutputStreamWriter(new FileOutputStream(path)) --> Line_36 $$ bufWrite.close() [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_37 $$ ins.close() [CD]
Line_5 $$ InputStream ins = ontURL.openStream() --> Line_37 $$ ins.close() [FD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_38 $$ FileInputStream fs = new FileInputStream(path) [CD]
Line_10 $$ if (System.getProperty("user.dir") != null) --> Line_39 $$ retModel.read(fs, "") [CD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_39 $$ retModel.read(fs, "") [FD]
Line_38 $$ FileInputStream fs = new FileInputStream(path) --> Line_39 $$ retModel.read(fs, "") [FD]
Line_2 $$ protected static String getURLandWriteToDisk(String url, Model retModel) throws MalformedURLException, IOException --> Line_41 $$ return path [CD]
Line_33 $$ read = bufRead.read() --> Line_30 $$ while (read != -1) [FD]
Line_33 $$ read = bufRead.read() --> Line_31 $$ bufWrite.write(read) [FD]
Line_33 $$ read = bufRead.read() --> Line_32 $$ offset += read [FD]
