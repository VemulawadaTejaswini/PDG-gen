Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_3 $$ throw new IOException("FileCopy: " + "no such source file: " + fromFile.getName()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_3 $$ throw new IOException("FileCopy: " + "no such source file: " + fromFile.getName()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_4 $$ throw new IOException("FileCopy: " + "can't copy directory: " + fromFile.getName()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_4 $$ throw new IOException("FileCopy: " + "can't copy directory: " + fromFile.getName()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_5 $$ throw new IOException("FileCopy: " + "source file is unreadable: " + fromFile.getName()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_5 $$ throw new IOException("FileCopy: " + "source file is unreadable: " + fromFile.getName()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_6 $$ toFile = new File(toFile, fromFile.getName()) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_6 $$ toFile = new File(toFile, fromFile.getName()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_7 $$ String parent = toFile.getParent() [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_7 $$ String parent = toFile.getParent() [FD]
Line_6 $$ toFile = new File(toFile, fromFile.getName()) --> Line_7 $$ String parent = toFile.getParent() [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_8 $$ parent = System.getProperty("user.dir") [CD]
Line_7 $$ String parent = toFile.getParent() --> Line_8 $$ parent = System.getProperty("user.dir") [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_9 $$ File dir = new File(parent) [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_10 $$ if (!dir.exists()) [CD]
Line_9 $$ File dir = new File(parent) --> Line_10 $$ if (!dir.exists()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_11 $$ if (dir.isFile()) [CD]
Line_9 $$ File dir = new File(parent) --> Line_11 $$ if (dir.isFile()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_12 $$ if (!dir.canWrite()) [CD]
Line_9 $$ File dir = new File(parent) --> Line_12 $$ if (!dir.canWrite()) [FD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_13 $$ FileInputStream from = null [CD]
Line_2 $$ public static void copy(File fromFile, File toFile) throws IOException --> Line_14 $$ FileOutputStream to = null [CD]
Line_13 $$ FileInputStream from = null --> Line_16 $$ from = new FileInputStream(fromFile) [FD]
Line_14 $$ FileOutputStream to = null --> Line_17 $$ to = new FileOutputStream(toFile) [FD]
Line_19 $$ int bytesRead --> Line_20 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_13 $$ FileInputStream from = null --> Line_20 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_16 $$ from = new FileInputStream(fromFile) --> Line_20 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_18 $$ byte[] buffer = new byte[4096] --> Line_20 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_14 $$ FileOutputStream to = null --> Line_20 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_17 $$ to = new FileOutputStream(toFile) --> Line_20 $$ while ((bytesRead = from.read(buffer)) != -1) to.write(buffer, 0, bytesRead) [FD]
Line_13 $$ FileInputStream from = null --> Line_22 $$ if (from != null) [FD]
Line_16 $$ from = new FileInputStream(fromFile) --> Line_22 $$ if (from != null) [FD]
Line_13 $$ FileInputStream from = null --> Line_23 $$ from.close() [FD]
Line_16 $$ from = new FileInputStream(fromFile) --> Line_23 $$ from.close() [FD]
Line_14 $$ FileOutputStream to = null --> Line_27 $$ if (to != null) [FD]
Line_17 $$ to = new FileOutputStream(toFile) --> Line_27 $$ if (to != null) [FD]
Line_14 $$ FileOutputStream to = null --> Line_28 $$ to.close() [FD]
Line_17 $$ to = new FileOutputStream(toFile) --> Line_28 $$ to.close() [FD]
