Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_3 $$ ConnectionFactoryImpl factory = new ConnectionFactoryImpl() [CD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_4 $$ Receiver receiver = null [CD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_5 $$ ProviderConnection connection = factory.createConnection(from, to) [CD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_5 $$ ProviderConnection connection = factory.createConnection(from, to) [FD]
Line_3 $$ ConnectionFactoryImpl factory = new ConnectionFactoryImpl() --> Line_5 $$ ProviderConnection connection = factory.createConnection(from, to) [FD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_6 $$ Connection conn = DBUtil.getConnection() [CD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_7 $$ PreparedStatement pstmt = null [CD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_8 $$ ResultSet rs = null [CD]
Line_2 $$ private void recvMessage(String from, String to) throws Exception --> Line_9 $$ String sql = "" [CD]
Line_4 $$ Receiver receiver = null --> Line_11 $$ receiver = Receiver.createReceiver(connection) [FD]
Line_5 $$ ProviderConnection connection = factory.createConnection(from, to) --> Line_11 $$ receiver = Receiver.createReceiver(connection) [FD]
Line_4 $$ Receiver receiver = null --> Line_12 $$ receiver.open() [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_12 $$ receiver.open() [FD]
Line_4 $$ Receiver receiver = null --> Line_13 $$ EXTSSPMessage message = (EXTSSPMessage) receiver.receiveEX() [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_13 $$ EXTSSPMessage message = (EXTSSPMessage) receiver.receiveEX() [FD]
Line_13 $$ EXTSSPMessage message = (EXTSSPMessage) receiver.receiveEX() --> Line_14 $$ if (message == null) [FD]
Line_14 $$ if (message == null) --> Line_15 $$ System.out.println("no message") [CD]
Line_14 $$ if (message == null) --> Line_17 $$ conn.setAutoCommit(false) [CD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_17 $$ conn.setAutoCommit(false) [FD]
Line_14 $$ if (message == null) --> Line_18 $$ EXTSSPHeader header = message.getEXHeader() [CD]
Line_13 $$ EXTSSPMessage message = (EXTSSPMessage) receiver.receiveEX() --> Line_18 $$ EXTSSPHeader header = message.getEXHeader() [FD]
Line_14 $$ if (message == null) --> Line_19 $$ UUIDHexGenerator u = new UUIDHexGenerator() [CD]
Line_14 $$ if (message == null) --> Line_20 $$ String id = u.generate().toString() [CD]
Line_19 $$ UUIDHexGenerator u = new UUIDHexGenerator() --> Line_20 $$ String id = u.generate().toString() [FD]
Line_14 $$ if (message == null) --> Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) [CD]
Line_7 $$ PreparedStatement pstmt = null --> Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) [FD]
Line_18 $$ EXTSSPHeader header = message.getEXHeader() --> Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) [FD]
Line_20 $$ String id = u.generate().toString() --> Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) [FD]
Line_14 $$ if (message == null) --> Line_22 $$ pstmt.executeUpdate() [CD]
Line_7 $$ PreparedStatement pstmt = null --> Line_22 $$ pstmt.executeUpdate() [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_22 $$ pstmt.executeUpdate() [FD]
Line_14 $$ if (message == null) --> Line_23 $$ String xml = "" [CD]
Line_14 $$ if (message == null) --> Line_24 $$ TSSPBody body = message.getBody() [CD]
Line_13 $$ EXTSSPMessage message = (EXTSSPMessage) receiver.receiveEX() --> Line_24 $$ TSSPBody body = message.getBody() [FD]
Line_14 $$ if (message == null) --> Line_25 $$ xml = body.getDomAsString() [CD]
Line_23 $$ String xml = "" --> Line_25 $$ xml = body.getDomAsString() [FD]
Line_24 $$ TSSPBody body = message.getBody() --> Line_25 $$ xml = body.getDomAsString() [FD]
Line_14 $$ if (message == null) --> Line_26 $$ xml = xml.replaceAll("ns1:", "") [CD]
Line_23 $$ String xml = "" --> Line_26 $$ xml = xml.replaceAll("ns1:", "") [FD]
Line_25 $$ xml = body.getDomAsString() --> Line_26 $$ xml = xml.replaceAll("ns1:", "") [FD]
Line_14 $$ if (message == null) --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [CD]
Line_7 $$ PreparedStatement pstmt = null --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_8 $$ ResultSet rs = null --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_23 $$ String xml = "" --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_25 $$ xml = body.getDomAsString() --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_26 $$ xml = xml.replaceAll("ns1:", "") --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_20 $$ String id = u.generate().toString() --> Line_27 $$ saveClobMessage(pstmt, conn, rs, xml, id) [FD]
Line_14 $$ if (message == null) --> Line_28 $$ String notify_id = "" [CD]
Line_14 $$ if (message == null) --> Line_29 $$ Iterator iter = message.getAttachments() [CD]
Line_13 $$ EXTSSPMessage message = (EXTSSPMessage) receiver.receiveEX() --> Line_29 $$ Iterator iter = message.getAttachments() [FD]
Line_14 $$ if (message == null) --> Line_30 $$ while (iter.hasNext()) [CD]
Line_29 $$ Iterator iter = message.getAttachments() --> Line_30 $$ while (iter.hasNext()) [FD]
Line_30 $$ while (iter.hasNext()) --> Line_31 $$ AttachmentPart a = (AttachmentPart) iter.next() [CD]
Line_29 $$ Iterator iter = message.getAttachments() --> Line_31 $$ AttachmentPart a = (AttachmentPart) iter.next() [FD]
Line_30 $$ while (iter.hasNext()) --> Line_32 $$ String contentId = a.getContentId() [CD]
Line_31 $$ AttachmentPart a = (AttachmentPart) iter.next() --> Line_32 $$ String contentId = a.getContentId() [FD]
Line_30 $$ while (iter.hasNext()) --> Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) [CD]
Line_32 $$ String contentId = a.getContentId() --> Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_34 $$ DataHandler dh = a.getDataHandler() [CD]
Line_31 $$ AttachmentPart a = (AttachmentPart) iter.next() --> Line_34 $$ DataHandler dh = a.getDataHandler() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_35 $$ InputStream is = dh.getInputStream() [CD]
Line_34 $$ DataHandler dh = a.getDataHandler() --> Line_35 $$ InputStream is = dh.getInputStream() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_36 $$ byte[] temp = FileCopyUtils.copyToByteArray(is) [CD]
Line_35 $$ InputStream is = dh.getInputStream() --> Line_36 $$ byte[] temp = FileCopyUtils.copyToByteArray(is) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_37 $$ String content = new String(temp) [CD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_38 $$ RecvDto recv = (RecvDto) XStreamConvert.xmlToBean(content) [CD]
Line_37 $$ String content = new String(temp) --> Line_38 $$ RecvDto recv = (RecvDto) XStreamConvert.xmlToBean(content) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_39 $$ if (recv == null) [CD]
Line_38 $$ RecvDto recv = (RecvDto) XStreamConvert.xmlToBean(content) --> Line_39 $$ if (recv == null) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_40 $$ if (notify_id.equals("")) [CD]
Line_28 $$ String notify_id = "" --> Line_40 $$ if (notify_id.equals("")) [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_41 $$ notify_id = u.generate().toString() [CD]
Line_28 $$ String notify_id = "" --> Line_41 $$ notify_id = u.generate().toString() [FD]
Line_19 $$ UUIDHexGenerator u = new UUIDHexGenerator() --> Line_41 $$ notify_id = u.generate().toString() [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_42 $$ header.setType(Constant.MESSAGETYPE_NOTIFY) [CD]
Line_18 $$ EXTSSPHeader header = message.getEXHeader() --> Line_42 $$ header.setType(Constant.MESSAGETYPE_NOTIFY) [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [CD]
Line_7 $$ PreparedStatement pstmt = null --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [FD]
Line_18 $$ EXTSSPHeader header = message.getEXHeader() --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [FD]
Line_41 $$ notify_id = u.generate().toString() --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [FD]
Line_28 $$ String notify_id = "" --> Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_44 $$ pstmt.executeUpdate() [CD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_44 $$ pstmt.executeUpdate() [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_44 $$ pstmt.executeUpdate() [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_44 $$ pstmt.executeUpdate() [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_45 $$ String notify_content = header.getNotifyContent() [CD]
Line_18 $$ EXTSSPHeader header = message.getEXHeader() --> Line_45 $$ String notify_content = header.getNotifyContent() [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_46 $$ notify_content = "接收到新的esb消息，但未定义通知消息内容!" [CD]
Line_45 $$ String notify_content = header.getNotifyContent() --> Line_46 $$ notify_content = "接收到新的esb消息，但未定义通知消息内容!" [FD]
Line_40 $$ if (notify_id.equals("")) --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [CD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_8 $$ ResultSet rs = null --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_45 $$ String notify_content = header.getNotifyContent() --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_46 $$ notify_content = "接收到新的esb消息，但未定义通知消息内容!" --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_41 $$ notify_id = u.generate().toString() --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_28 $$ String notify_id = "" --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [CD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_38 $$ RecvDto recv = (RecvDto) XStreamConvert.xmlToBean(content) --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_41 $$ notify_id = u.generate().toString() --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_28 $$ String notify_id = "" --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_51 $$ DataHandler dh = a.getDataHandler() [CD]
Line_31 $$ AttachmentPart a = (AttachmentPart) iter.next() --> Line_51 $$ DataHandler dh = a.getDataHandler() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_52 $$ InputStream is = dh.getInputStream() [CD]
Line_34 $$ DataHandler dh = a.getDataHandler() --> Line_52 $$ InputStream is = dh.getInputStream() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_53 $$ String attid = u.generate().toString() [CD]
Line_19 $$ UUIDHexGenerator u = new UUIDHexGenerator() --> Line_53 $$ String attid = u.generate().toString() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_54 $$ sql = "insert into message_recv_attachment(ATTACHMENTID," + "VERSION,MRECVID,BUSS_ID,ATTACHMENT) values('" + attid + "',0,'" + id + "','" + contentId + "',empty_blob())" [CD]
Line_9 $$ String sql = "" --> Line_54 $$ sql = "insert into message_recv_attachment(ATTACHMENTID," + "VERSION,MRECVID,BUSS_ID,ATTACHMENT) values('" + attid + "',0,'" + id + "','" + contentId + "',empty_blob())" [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_55 $$ pstmt = conn.prepareStatement(sql) [CD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_54 $$ sql = "insert into message_recv_attachment(ATTACHMENTID," + "VERSION,MRECVID,BUSS_ID,ATTACHMENT) values('" + attid + "',0,'" + id + "','" + contentId + "',empty_blob())" --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_9 $$ String sql = "" --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_56 $$ pstmt.executeUpdate() [CD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_56 $$ pstmt.executeUpdate() [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_56 $$ pstmt.executeUpdate() [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_56 $$ pstmt.executeUpdate() [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_56 $$ pstmt.executeUpdate() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_57 $$ sql = "select attachment from message_recv_attachment" + " where attachmentid = '" + attid + "' for update" [CD]
Line_54 $$ sql = "insert into message_recv_attachment(ATTACHMENTID," + "VERSION,MRECVID,BUSS_ID,ATTACHMENT) values('" + attid + "',0,'" + id + "','" + contentId + "',empty_blob())" --> Line_57 $$ sql = "select attachment from message_recv_attachment" + " where attachmentid = '" + attid + "' for update" [FD]
Line_9 $$ String sql = "" --> Line_57 $$ sql = "select attachment from message_recv_attachment" + " where attachmentid = '" + attid + "' for update" [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_58 $$ pstmt = conn.prepareStatement(sql) [CD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_54 $$ sql = "insert into message_recv_attachment(ATTACHMENTID," + "VERSION,MRECVID,BUSS_ID,ATTACHMENT) values('" + attid + "',0,'" + id + "','" + contentId + "',empty_blob())" --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_57 $$ sql = "select attachment from message_recv_attachment" + " where attachmentid = '" + attid + "' for update" --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_9 $$ String sql = "" --> Line_58 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_59 $$ rs = pstmt.executeQuery() [CD]
Line_8 $$ ResultSet rs = null --> Line_59 $$ rs = pstmt.executeQuery() [FD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_59 $$ rs = pstmt.executeQuery() [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_59 $$ rs = pstmt.executeQuery() [FD]
Line_58 $$ pstmt = conn.prepareStatement(sql) --> Line_59 $$ rs = pstmt.executeQuery() [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_59 $$ rs = pstmt.executeQuery() [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_59 $$ rs = pstmt.executeQuery() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_60 $$ rs.next() [CD]
Line_59 $$ rs = pstmt.executeQuery() --> Line_60 $$ rs.next() [FD]
Line_8 $$ ResultSet rs = null --> Line_60 $$ rs.next() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_61 $$ Blob blob = rs.getBlob(1) [CD]
Line_59 $$ rs = pstmt.executeQuery() --> Line_61 $$ Blob blob = rs.getBlob(1) [FD]
Line_8 $$ ResultSet rs = null --> Line_61 $$ Blob blob = rs.getBlob(1) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_62 $$ OutputStream blobOutputStream = ((oracle.sql.BLOB) blob).getBinaryOutputStream() [CD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_63 $$ FileCopyUtils.copy(is, blobOutputStream) [CD]
Line_35 $$ InputStream is = dh.getInputStream() --> Line_63 $$ FileCopyUtils.copy(is, blobOutputStream) [FD]
Line_62 $$ OutputStream blobOutputStream = ((oracle.sql.BLOB) blob).getBinaryOutputStream() --> Line_63 $$ FileCopyUtils.copy(is, blobOutputStream) [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_64 $$ is.close() [CD]
Line_35 $$ InputStream is = dh.getInputStream() --> Line_64 $$ is.close() [FD]
Line_33 $$ if (contentId.startsWith(Constant.PREFIX_PERSON)) --> Line_65 $$ blobOutputStream.close() [CD]
Line_62 $$ OutputStream blobOutputStream = ((oracle.sql.BLOB) blob).getBinaryOutputStream() --> Line_65 $$ blobOutputStream.close() [FD]
Line_14 $$ if (message == null) --> Line_68 $$ conn.commit() [CD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_68 $$ conn.commit() [FD]
Line_14 $$ if (message == null) --> Line_69 $$ conn.setAutoCommit(true) [CD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_69 $$ conn.setAutoCommit(true) [FD]
Line_4 $$ Receiver receiver = null --> Line_71 $$ receiver.commit() [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_71 $$ receiver.commit() [FD]
Line_4 $$ Receiver receiver = null --> Line_76 $$ if (receiver != null) [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_76 $$ if (receiver != null) [FD]
Line_76 $$ if (receiver != null) --> Line_77 $$ receiver.rollback() [CD]
Line_4 $$ Receiver receiver = null --> Line_77 $$ receiver.rollback() [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_77 $$ receiver.rollback() [FD]
Line_59 $$ rs = pstmt.executeQuery() --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_8 $$ ResultSet rs = null --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_43 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, notify_id)) --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_58 $$ pstmt = conn.prepareStatement(sql) --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_7 $$ PreparedStatement pstmt = null --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_21 $$ pstmt = conn.prepareStatement(drawOutRecvSql(header, id)) --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_6 $$ Connection conn = DBUtil.getConnection() --> Line_83 $$ DBUtil.close(rs, pstmt, conn) [FD]
Line_4 $$ Receiver receiver = null --> Line_84 $$ if (receiver != null) [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_84 $$ if (receiver != null) [FD]
Line_4 $$ Receiver receiver = null --> Line_86 $$ receiver.close() [FD]
Line_11 $$ receiver = Receiver.createReceiver(connection) --> Line_86 $$ receiver.close() [FD]
Line_5 $$ ProviderConnection connection = factory.createConnection(from, to) --> Line_91 $$ if (connection != null) [FD]
Line_5 $$ ProviderConnection connection = factory.createConnection(from, to) --> Line_93 $$ connection.close() [FD]
Line_41 $$ notify_id = u.generate().toString() --> Line_40 $$ if (notify_id.equals("")) [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_44 $$ pstmt.executeUpdate() [FD]
Line_58 $$ pstmt = conn.prepareStatement(sql) --> Line_44 $$ pstmt.executeUpdate() [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_58 $$ pstmt = conn.prepareStatement(sql) --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_59 $$ rs = pstmt.executeQuery() --> Line_47 $$ saveClobMessage(pstmt, conn, rs, notify_content, notify_id) [FD]
Line_55 $$ pstmt = conn.prepareStatement(sql) --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_58 $$ pstmt = conn.prepareStatement(sql) --> Line_49 $$ savePersonInfo(pstmt, conn, recv, notify_id) [FD]
Line_57 $$ sql = "select attachment from message_recv_attachment" + " where attachmentid = '" + attid + "' for update" --> Line_55 $$ pstmt = conn.prepareStatement(sql) [FD]
Line_58 $$ pstmt = conn.prepareStatement(sql) --> Line_56 $$ pstmt.executeUpdate() [FD]
