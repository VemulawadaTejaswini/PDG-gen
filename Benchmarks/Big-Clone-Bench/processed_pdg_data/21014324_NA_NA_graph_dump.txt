Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_3 $$ Uri.Builder builder = new Uri.Builder() [CD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_4 $$ builder.scheme("http") [CD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_4 $$ builder.scheme("http") [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_5 $$ builder.authority("www.goodreads.com") [CD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_5 $$ builder.authority("www.goodreads.com") [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_6 $$ builder.path("book/show") [CD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_6 $$ builder.path("book/show") [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_7 $$ builder.appendQueryParameter("key", _ConsumerKey) [CD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_7 $$ builder.appendQueryParameter("key", _ConsumerKey) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_8 $$ builder.appendQueryParameter("page", Integer.toString(page)) [CD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_8 $$ builder.appendQueryParameter("page", Integer.toString(page)) [FD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_8 $$ builder.appendQueryParameter("page", Integer.toString(page)) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_9 $$ builder.appendQueryParameter("rating", Integer.toString(rating)) [CD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_9 $$ builder.appendQueryParameter("rating", Integer.toString(rating)) [FD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_9 $$ builder.appendQueryParameter("rating", Integer.toString(rating)) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_10 $$ builder.appendQueryParameter("id", bookId) [CD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_10 $$ builder.appendQueryParameter("id", bookId) [FD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_10 $$ builder.appendQueryParameter("id", bookId) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_11 $$ HttpClient httpClient = new DefaultHttpClient() [CD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_12 $$ HttpGet getRequest = new HttpGet(builder.build().toString()) [CD]
Line_3 $$ Uri.Builder builder = new Uri.Builder() --> Line_12 $$ HttpGet getRequest = new HttpGet(builder.build().toString()) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_13 $$ if (get_IsAuthenticated()) [CD]
Line_13 $$ if (get_IsAuthenticated()) --> Line_14 $$ _Consumer.sign(getRequest) [CD]
Line_12 $$ HttpGet getRequest = new HttpGet(builder.build().toString()) --> Line_14 $$ _Consumer.sign(getRequest) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_16 $$ HttpResponse response = httpClient.execute(getRequest) [CD]
Line_11 $$ HttpClient httpClient = new DefaultHttpClient() --> Line_16 $$ HttpResponse response = httpClient.execute(getRequest) [FD]
Line_12 $$ HttpGet getRequest = new HttpGet(builder.build().toString()) --> Line_16 $$ HttpResponse response = httpClient.execute(getRequest) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_17 $$ Response responseData = ResponseParser.parse(response.getEntity().getContent()) [CD]
Line_16 $$ HttpResponse response = httpClient.execute(getRequest) --> Line_17 $$ Response responseData = ResponseParser.parse(response.getEntity().getContent()) [FD]
Line_2 $$ public static Book GetReviewsForBook(String bookId, int page, int rating) throws Exception --> Line_18 $$ return responseData.get_Book() [CD]
Line_17 $$ Response responseData = ResponseParser.parse(response.getEntity().getContent()) --> Line_18 $$ return responseData.get_Book() [FD]
