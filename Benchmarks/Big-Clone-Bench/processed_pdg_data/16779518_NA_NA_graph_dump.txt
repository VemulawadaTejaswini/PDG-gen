Line_2 $$ public void run() --> Line_3 $$ Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND) [CD]
Line_2 $$ public void run() --> Line_4 $$ final String url = service.streamUrl.toString() [CD]
Line_2 $$ public void run() --> Line_5 $$ InputStream stream = null [CD]
Line_7 $$ final URLConnection con = new URL(url).openConnection() --> Line_8 $$ con.setRequestProperty("Icy-MetaData", "1") [FD]
Line_7 $$ final URLConnection con = new URL(url).openConnection() --> Line_9 $$ con.setRequestProperty("Connection", "close") [FD]
Line_7 $$ final URLConnection con = new URL(url).openConnection() --> Line_10 $$ con.setRequestProperty("Accept", null) [FD]
Line_7 $$ final URLConnection con = new URL(url).openConnection() --> Line_11 $$ con.connect() [FD]
Line_5 $$ InputStream stream = null --> Line_12 $$ stream = con.getInputStream() [FD]
Line_7 $$ final URLConnection con = new URL(url).openConnection() --> Line_12 $$ stream = con.getInputStream() [FD]
Line_7 $$ final URLConnection con = new URL(url).openConnection() --> Line_14 $$ final Map<String, List<String>> headers = con.getHeaderFields() [FD]
Line_14 $$ final Map<String, List<String>> headers = con.getHeaderFields() --> Line_15 $$ if (headers.containsKey("icy-metaint")) [FD]
Line_15 $$ if (headers.containsKey("icy-metaint")) --> Line_16 $$ metaDataOffset = Integer.parseInt(headers.get("icy-metaint").get(0)) [CD]
Line_13 $$ int metaDataOffset = -1 --> Line_16 $$ metaDataOffset = Integer.parseInt(headers.get("icy-metaint").get(0)) [FD]
Line_14 $$ final Map<String, List<String>> headers = con.getHeaderFields() --> Line_16 $$ metaDataOffset = Integer.parseInt(headers.get("icy-metaint").get(0)) [FD]
Line_15 $$ if (headers.containsKey("icy-metaint")) --> Line_18 $$ final StringBuilder strHeaders = new StringBuilder() [CD]
Line_15 $$ if (headers.containsKey("icy-metaint")) --> Line_19 $$ char c [CD]
Line_15 $$ if (headers.containsKey("icy-metaint")) --> Line_20 $$ while ((c = (char) stream.read()) != -1) [CD]
Line_19 $$ char c --> Line_20 $$ while ((c = (char) stream.read()) != -1) [FD]
Line_5 $$ InputStream stream = null --> Line_20 $$ while ((c = (char) stream.read()) != -1) [FD]
Line_12 $$ stream = con.getInputStream() --> Line_20 $$ while ((c = (char) stream.read()) != -1) [FD]
Line_20 $$ while ((c = (char) stream.read()) != -1) --> Line_21 $$ strHeaders.append(c) [CD]
Line_20 $$ while ((c = (char) stream.read()) != -1) --> Line_21 $$ strHeaders.append(c) [FD]
Line_18 $$ final StringBuilder strHeaders = new StringBuilder() --> Line_21 $$ strHeaders.append(c) [FD]
Line_19 $$ char c --> Line_21 $$ strHeaders.append(c) [FD]
Line_20 $$ while ((c = (char) stream.read()) != -1) --> Line_22 $$ final int c5 = 5, c4 = 4 [CD]
Line_20 $$ while ((c = (char) stream.read()) != -1) --> Line_23 $$ if (strHeaders.length() > c5 && "\r\n\r\n".equals(strHeaders.substring((strHeaders.length() - c4), strHeaders.length()))) [CD]
Line_18 $$ final StringBuilder strHeaders = new StringBuilder() --> Line_23 $$ if (strHeaders.length() > c5 && "\r\n\r\n".equals(strHeaders.substring((strHeaders.length() - c4), strHeaders.length()))) [FD]
Line_15 $$ if (headers.containsKey("icy-metaint")) --> Line_27 $$ final Matcher m = PATTERN.matcher(strHeaders.toString()) [CD]
Line_18 $$ final StringBuilder strHeaders = new StringBuilder() --> Line_27 $$ final Matcher m = PATTERN.matcher(strHeaders.toString()) [FD]
Line_15 $$ if (headers.containsKey("icy-metaint")) --> Line_28 $$ if (m.find()) [CD]
Line_27 $$ final Matcher m = PATTERN.matcher(strHeaders.toString()) --> Line_28 $$ if (m.find()) [FD]
Line_28 $$ if (m.find()) --> Line_29 $$ metaDataOffset = Integer.parseInt(m.group(2)) [CD]
Line_13 $$ int metaDataOffset = -1 --> Line_29 $$ metaDataOffset = Integer.parseInt(m.group(2)) [FD]
Line_16 $$ metaDataOffset = Integer.parseInt(headers.get("icy-metaint").get(0)) --> Line_29 $$ metaDataOffset = Integer.parseInt(m.group(2)) [FD]
Line_27 $$ final Matcher m = PATTERN.matcher(strHeaders.toString()) --> Line_29 $$ metaDataOffset = Integer.parseInt(m.group(2)) [FD]
Line_13 $$ int metaDataOffset = -1 --> Line_32 $$ if (metaDataOffset == -1) [FD]
Line_16 $$ metaDataOffset = Integer.parseInt(headers.get("icy-metaint").get(0)) --> Line_32 $$ if (metaDataOffset == -1) [FD]
Line_29 $$ metaDataOffset = Integer.parseInt(m.group(2)) --> Line_32 $$ if (metaDataOffset == -1) [FD]
Line_40 $$ while (true) --> Line_41 $$ if (Thread.interrupted()) [CD]
Line_40 $$ while (true) --> Line_44 $$ while (leftToSkip > 0) [CD]
Line_39 $$ int leftToSkip = metaDataOffset --> Line_44 $$ while (leftToSkip > 0) [FD]
Line_44 $$ while (leftToSkip > 0) --> Line_45 $$ final long actual = stream.skip(leftToSkip) [CD]
Line_5 $$ InputStream stream = null --> Line_45 $$ final long actual = stream.skip(leftToSkip) [FD]
Line_12 $$ stream = con.getInputStream() --> Line_45 $$ final long actual = stream.skip(leftToSkip) [FD]
Line_39 $$ int leftToSkip = metaDataOffset --> Line_45 $$ final long actual = stream.skip(leftToSkip) [FD]
Line_44 $$ while (leftToSkip > 0) --> Line_46 $$ leftToSkip -= actual [CD]
Line_39 $$ int leftToSkip = metaDataOffset --> Line_46 $$ leftToSkip -= actual [FD]
Line_45 $$ final long actual = stream.skip(leftToSkip) --> Line_46 $$ leftToSkip -= actual [FD]
Line_40 $$ while (true) --> Line_50 $$ metaData.delete(0, metaData.length()) [CD]
Line_38 $$ final StringBuilder metaData = new StringBuilder(initialMetaLength) --> Line_50 $$ metaData.delete(0, metaData.length()) [FD]
Line_40 $$ while (true) --> Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) [CD]
Line_5 $$ InputStream stream = null --> Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) [FD]
Line_12 $$ stream = con.getInputStream() --> Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) [FD]
Line_36 $$ final byte[] buffer = new byte[bufSize] --> Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) [FD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_53 $$ if (Thread.interrupted()) [CD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_56 $$ if (lastReadCount == 0) [CD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_59 $$ if (count == 0) [CD]
Line_59 $$ if (count == 0) --> Line_60 $$ final int paragraph = 16 [CD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_63 $$ final int startIndex = count == 0 ? 1 : 0 [CD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_64 $$ int length = count == 0 ? lastReadCount - 1 : lastReadCount [CD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_66 $$ if (count > metaDataLength) [CD]
Line_66 $$ if (count > metaDataLength) --> Line_67 $$ length -= count - metaDataLength [CD]
Line_64 $$ int length = count == 0 ? lastReadCount - 1 : lastReadCount --> Line_67 $$ length -= count - metaDataLength [FD]
Line_66 $$ if (count > metaDataLength) --> Line_68 $$ if (count == lastReadCount) [CD]
Line_68 $$ if (count == lastReadCount) --> Line_69 $$ length++ [CD]
Line_64 $$ int length = count == 0 ? lastReadCount - 1 : lastReadCount --> Line_69 $$ length++ [FD]
Line_67 $$ length -= count - metaDataLength --> Line_69 $$ length++ [FD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_72 $$ if (length > 0) [CD]
Line_64 $$ int length = count == 0 ? lastReadCount - 1 : lastReadCount --> Line_72 $$ if (length > 0) [FD]
Line_67 $$ length -= count - metaDataLength --> Line_72 $$ if (length > 0) [FD]
Line_72 $$ if (length > 0) --> Line_73 $$ metaData.append(new String(buffer, startIndex, length, "UTF-8")) [CD]
Line_38 $$ final StringBuilder metaData = new StringBuilder(initialMetaLength) --> Line_73 $$ metaData.append(new String(buffer, startIndex, length, "UTF-8")) [FD]
Line_52 $$ while ((lastReadCount = stream.read(buffer)) != -1) --> Line_75 $$ if (count > metaDataLength) [CD]
Line_40 $$ while (true) --> Line_79 $$ if (lastReadCount == -1) [CD]
Line_40 $$ while (true) --> Line_82 $$ leftToSkip = metaDataOffset - (count - metaDataLength - 1) [CD]
Line_46 $$ leftToSkip -= actual --> Line_82 $$ leftToSkip = metaDataOffset - (count - metaDataLength - 1) [FD]
Line_39 $$ int leftToSkip = metaDataOffset --> Line_82 $$ leftToSkip = metaDataOffset - (count - metaDataLength - 1) [FD]
Line_13 $$ int metaDataOffset = -1 --> Line_82 $$ leftToSkip = metaDataOffset - (count - metaDataLength - 1) [FD]
Line_16 $$ metaDataOffset = Integer.parseInt(headers.get("icy-metaint").get(0)) --> Line_82 $$ leftToSkip = metaDataOffset - (count - metaDataLength - 1) [FD]
Line_29 $$ metaDataOffset = Integer.parseInt(m.group(2)) --> Line_82 $$ leftToSkip = metaDataOffset - (count - metaDataLength - 1) [FD]
Line_40 $$ while (true) --> Line_83 $$ if (metaData.length() > 0) [CD]
Line_38 $$ final StringBuilder metaData = new StringBuilder(initialMetaLength) --> Line_83 $$ if (metaData.length() > 0) [FD]
Line_83 $$ if (metaData.length() > 0) --> Line_84 $$ service.updateAudioInfo(metaData.toString()) [CD]
Line_38 $$ final StringBuilder metaData = new StringBuilder(initialMetaLength) --> Line_84 $$ service.updateAudioInfo(metaData.toString()) [FD]
Line_90 $$ if (DEBUG) --> Line_91 $$ Log.i(TAG, e.getMessage()) [CD]
Line_5 $$ InputStream stream = null --> Line_94 $$ if (stream != null) [FD]
Line_12 $$ stream = con.getInputStream() --> Line_94 $$ if (stream != null) [FD]
Line_5 $$ InputStream stream = null --> Line_96 $$ stream.close() [FD]
Line_12 $$ stream = con.getInputStream() --> Line_96 $$ stream.close() [FD]
Line_46 $$ leftToSkip -= actual --> Line_44 $$ while (leftToSkip > 0) [FD]
Line_46 $$ leftToSkip -= actual --> Line_45 $$ final long actual = stream.skip(leftToSkip) [FD]
