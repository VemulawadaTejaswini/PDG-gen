Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_3 $$ String context = request.getContextPath() [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_3 $$ String context = request.getContextPath() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_4 $$ String resource = request.getRequestURI().replace(context, "") [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_4 $$ String resource = request.getRequestURI().replace(context, "") [FD]
Line_3 $$ String context = request.getContextPath() --> Line_4 $$ String resource = request.getRequestURI().replace(context, "") [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_5 $$ resource = resource.replaceAll(RESOURCES_PATH + "/", "") [CD]
Line_4 $$ String resource = request.getRequestURI().replace(context, "") --> Line_5 $$ resource = resource.replaceAll(RESOURCES_PATH + "/", "") [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_6 $$ if ((StringUtils.isEmpty(resource)) || (resource.endsWith("/"))) [CD]
Line_4 $$ String resource = request.getRequestURI().replace(context, "") --> Line_6 $$ if ((StringUtils.isEmpty(resource)) || (resource.endsWith("/"))) [FD]
Line_5 $$ resource = resource.replaceAll(RESOURCES_PATH + "/", "") --> Line_6 $$ if ((StringUtils.isEmpty(resource)) || (resource.endsWith("/"))) [FD]
Line_6 $$ if ((StringUtils.isEmpty(resource)) || (resource.endsWith("/"))) --> Line_7 $$ response.setStatus(HttpServletResponse.SC_BAD_REQUEST) [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_7 $$ response.setStatus(HttpServletResponse.SC_BAD_REQUEST) [FD]
Line_6 $$ if ((StringUtils.isEmpty(resource)) || (resource.endsWith("/"))) --> Line_8 $$ return [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_10 $$ this.getLogger().info("Getting resource: " + resource) [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_11 $$ URL url = ClassLoaderUtils.getResource(resource) [CD]
Line_4 $$ String resource = request.getRequestURI().replace(context, "") --> Line_11 $$ URL url = ClassLoaderUtils.getResource(resource) [FD]
Line_5 $$ resource = resource.replaceAll(RESOURCES_PATH + "/", "") --> Line_11 $$ URL url = ClassLoaderUtils.getResource(resource) [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_12 $$ if (url == null) [CD]
Line_11 $$ URL url = ClassLoaderUtils.getResource(resource) --> Line_12 $$ if (url == null) [FD]
Line_12 $$ if (url == null) --> Line_13 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND) [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_13 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND) [FD]
Line_12 $$ if (url == null) --> Line_14 $$ return [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_16 $$ InputStream input = url.openStream() [CD]
Line_11 $$ URL url = ClassLoaderUtils.getResource(resource) --> Line_16 $$ InputStream input = url.openStream() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_17 $$ OutputStream output = response.getOutputStream() [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_17 $$ OutputStream output = response.getOutputStream() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_18 $$ URLConnection connection = url.openConnection() [CD]
Line_11 $$ URL url = ClassLoaderUtils.getResource(resource) --> Line_18 $$ URLConnection connection = url.openConnection() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_19 $$ String contentEncoding = connection.getContentEncoding() [CD]
Line_18 $$ URLConnection connection = url.openConnection() --> Line_19 $$ String contentEncoding = connection.getContentEncoding() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_20 $$ int contentLength = connection.getContentLength() [CD]
Line_18 $$ URLConnection connection = url.openConnection() --> Line_20 $$ int contentLength = connection.getContentLength() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_21 $$ String contentType = connection.getContentType() [CD]
Line_18 $$ URLConnection connection = url.openConnection() --> Line_21 $$ String contentType = connection.getContentType() [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_22 $$ if (contentEncoding != null) [CD]
Line_19 $$ String contentEncoding = connection.getContentEncoding() --> Line_22 $$ if (contentEncoding != null) [FD]
Line_22 $$ if (contentEncoding != null) --> Line_23 $$ response.setCharacterEncoding(contentEncoding) [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_23 $$ response.setCharacterEncoding(contentEncoding) [FD]
Line_19 $$ String contentEncoding = connection.getContentEncoding() --> Line_23 $$ response.setCharacterEncoding(contentEncoding) [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_25 $$ response.setContentLength(contentLength) [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_25 $$ response.setContentLength(contentLength) [FD]
Line_20 $$ int contentLength = connection.getContentLength() --> Line_25 $$ response.setContentLength(contentLength) [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_26 $$ response.setContentType(contentType) [CD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_26 $$ response.setContentType(contentType) [FD]
Line_21 $$ String contentType = connection.getContentType() --> Line_26 $$ response.setContentType(contentType) [FD]
Line_2 $$ public void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException --> Line_27 $$ IOUtils.copy(input, output, true) [CD]
Line_16 $$ InputStream input = url.openStream() --> Line_27 $$ IOUtils.copy(input, output, true) [FD]
Line_17 $$ OutputStream output = response.getOutputStream() --> Line_27 $$ IOUtils.copy(input, output, true) [FD]
