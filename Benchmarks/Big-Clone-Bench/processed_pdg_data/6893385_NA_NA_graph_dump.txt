Line_2 $$ public void end() --> Line_3 $$ m_zipFormatter.end() [CD]
Line_2 $$ public void end() --> Line_4 $$ IOUtils.closeQuietly(m_outputStream) [CD]
Line_2 $$ public void end() --> Line_5 $$ final FTPClient ftp = new FTPClient() [CD]
Line_2 $$ public void end() --> Line_6 $$ FileInputStream fis = null [CD]
Line_8 $$ if (m_url.getPort() == -1 || m_url.getPort() == 0 || m_url.getPort() == m_url.getDefaultPort()) --> Line_9 $$ ftp.connect(m_url.getHost()) [CD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_9 $$ ftp.connect(m_url.getHost()) [FD]
Line_8 $$ if (m_url.getPort() == -1 || m_url.getPort() == 0 || m_url.getPort() == m_url.getDefaultPort()) --> Line_11 $$ ftp.connect(m_url.getHost(), m_url.getPort()) [CD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_11 $$ ftp.connect(m_url.getHost(), m_url.getPort()) [FD]
Line_13 $$ if (m_url.getUserInfo() != null && m_url.getUserInfo().length() > 0) --> Line_14 $$ final String[] userInfo = m_url.getUserInfo().split(":", 2) [CD]
Line_13 $$ if (m_url.getUserInfo() != null && m_url.getUserInfo().length() > 0) --> Line_15 $$ ftp.login(userInfo[0], userInfo[1]) [CD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_15 $$ ftp.login(userInfo[0], userInfo[1]) [FD]
Line_13 $$ if (m_url.getUserInfo() != null && m_url.getUserInfo().length() > 0) --> Line_17 $$ ftp.login("anonymous", "opennmsftp@") [CD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_17 $$ ftp.login("anonymous", "opennmsftp@") [FD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_19 $$ int reply = ftp.getReplyCode() [FD]
Line_19 $$ int reply = ftp.getReplyCode() --> Line_20 $$ if (!FTPReply.isPositiveCompletion(reply)) [FD]
Line_20 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_21 $$ ftp.disconnect() [CD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_21 $$ ftp.disconnect() [FD]
Line_20 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_22 $$ LogUtils.errorf(this, "FTP server refused connection.") [CD]
Line_20 $$ if (!FTPReply.isPositiveCompletion(reply)) --> Line_23 $$ return [CD]
Line_25 $$ String path = m_url.getPath() --> Line_26 $$ if (path.endsWith("/")) [FD]
Line_26 $$ if (path.endsWith("/")) --> Line_27 $$ LogUtils.errorf(this, "Your FTP URL must specify a filename.") [CD]
Line_26 $$ if (path.endsWith("/")) --> Line_28 $$ return [CD]
Line_25 $$ String path = m_url.getPath() --> Line_31 $$ path = f.getParent() [FD]
Line_30 $$ File f = new File(path) --> Line_31 $$ path = f.getParent() [FD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_32 $$ if (!ftp.changeWorkingDirectory(path)) [FD]
Line_25 $$ String path = m_url.getPath() --> Line_32 $$ if (!ftp.changeWorkingDirectory(path)) [FD]
Line_31 $$ path = f.getParent() --> Line_32 $$ if (!ftp.changeWorkingDirectory(path)) [FD]
Line_32 $$ if (!ftp.changeWorkingDirectory(path)) --> Line_33 $$ LogUtils.infof(this, "unable to change working directory to %s", path) [CD]
Line_25 $$ String path = m_url.getPath() --> Line_33 $$ LogUtils.infof(this, "unable to change working directory to %s", path) [FD]
Line_31 $$ path = f.getParent() --> Line_33 $$ LogUtils.infof(this, "unable to change working directory to %s", path) [FD]
Line_32 $$ if (!ftp.changeWorkingDirectory(path)) --> Line_34 $$ return [CD]
Line_25 $$ String path = m_url.getPath() --> Line_36 $$ LogUtils.infof(this, "uploading %s to %s", f.getName(), path) [FD]
Line_31 $$ path = f.getParent() --> Line_36 $$ LogUtils.infof(this, "uploading %s to %s", f.getName(), path) [FD]
Line_30 $$ File f = new File(path) --> Line_36 $$ LogUtils.infof(this, "uploading %s to %s", f.getName(), path) [FD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_37 $$ ftp.setFileType(FTP.BINARY_FILE_TYPE) [FD]
Line_6 $$ FileInputStream fis = null --> Line_38 $$ fis = new FileInputStream(m_zipFile) [FD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_39 $$ if (!ftp.storeFile(f.getName(), fis)) [FD]
Line_6 $$ FileInputStream fis = null --> Line_39 $$ if (!ftp.storeFile(f.getName(), fis)) [FD]
Line_38 $$ fis = new FileInputStream(m_zipFile) --> Line_39 $$ if (!ftp.storeFile(f.getName(), fis)) [FD]
Line_30 $$ File f = new File(path) --> Line_39 $$ if (!ftp.storeFile(f.getName(), fis)) [FD]
Line_39 $$ if (!ftp.storeFile(f.getName(), fis)) --> Line_40 $$ LogUtils.infof(this, "unable to store file") [CD]
Line_39 $$ if (!ftp.storeFile(f.getName(), fis)) --> Line_41 $$ return [CD]
Line_6 $$ FileInputStream fis = null --> Line_47 $$ IOUtils.closeQuietly(fis) [FD]
Line_38 $$ fis = new FileInputStream(m_zipFile) --> Line_47 $$ IOUtils.closeQuietly(fis) [FD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_48 $$ if (ftp.isConnected()) [FD]
Line_5 $$ final FTPClient ftp = new FTPClient() --> Line_50 $$ ftp.disconnect() [FD]
