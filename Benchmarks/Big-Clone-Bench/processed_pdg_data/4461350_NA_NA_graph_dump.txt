Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_3 $$ StringBuffer sql = new StringBuffer() [CD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_4 $$ sql.append("INSERT INTO ") [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_4 $$ sql.append("INSERT INTO ") [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_5 $$ sql.append(tableName + "(") [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_5 $$ sql.append(tableName + "(") [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_6 $$ for (int i = 0; i < colNames.size(); i++) [CD]
Line_6 $$ for (int i = 0; i < colNames.size(); i++) --> Line_7 $$ sql.append("" + colNames.get(i) + ",") [CD]
Line_6 $$ for (int i = 0; i < colNames.size(); i++) --> Line_7 $$ sql.append("" + colNames.get(i) + ",") [FD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_7 $$ sql.append("" + colNames.get(i) + ",") [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_9 $$ sql.setLength(sql.length() - 1) [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_9 $$ sql.setLength(sql.length() - 1) [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_10 $$ sql.append(") VALUES( ") [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_10 $$ sql.append(") VALUES( ") [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_11 $$ for (int i = 0; i < colNames.size(); i++) [CD]
Line_6 $$ for (int i = 0; i < colNames.size(); i++) --> Line_11 $$ for (int i = 0; i < colNames.size(); i++) [FD]
Line_11 $$ for (int i = 0; i < colNames.size(); i++) --> Line_12 $$ sql.append("?,") [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_12 $$ sql.append("?,") [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_14 $$ sql.setLength(sql.length() - 1) [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_14 $$ sql.setLength(sql.length() - 1) [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_15 $$ sql.append(")") [CD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_15 $$ sql.append(")") [FD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_16 $$ Connection conn = null [CD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_17 $$ int lineNumber = 0 [CD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_18 $$ int colNumber = 0 [CD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_19 $$ String line[] = null [CD]
Line_16 $$ Connection conn = null --> Line_21 $$ conn = DBExplorer.getConnection(false) [FD]
Line_16 $$ Connection conn = null --> Line_22 $$ conn.setAutoCommit(false) [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_22 $$ conn.setAutoCommit(false) [FD]
Line_16 $$ Connection conn = null --> Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) [FD]
Line_3 $$ StringBuffer sql = new StringBuffer() --> Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) [FD]
Line_17 $$ int lineNumber = 0 --> Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) [FD]
Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) --> Line_25 $$ if (hasHeader && lineNumber == 0) [CD]
Line_2 $$ private boolean doCSVImport(String tableName, final boolean hasHeader) --> Line_25 $$ if (hasHeader && lineNumber == 0) [FD]
Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) --> Line_26 $$ dlg.UpdateProgressBar(lineNumber) [CD]
Line_17 $$ int lineNumber = 0 --> Line_26 $$ dlg.UpdateProgressBar(lineNumber) [FD]
Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) --> Line_27 $$ if (cancel) [CD]
Line_17 $$ int lineNumber = 0 --> Line_30 $$ line = (String[]) csvData.get(lineNumber) [FD]
Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) --> Line_31 $$ pstmt.clearParameters() [CD]
Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) --> Line_31 $$ pstmt.clearParameters() [FD]
Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) --> Line_32 $$ for (colNumber = 0; colNumber < colTypes.size(); colNumber++) [CD]
Line_18 $$ int colNumber = 0 --> Line_32 $$ for (colNumber = 0; colNumber < colTypes.size(); colNumber++) [FD]
Line_32 $$ for (colNumber = 0; colNumber < colTypes.size(); colNumber++) --> Line_33 $$ if (line[colNumber].equals("") && colNullAllowed.get(colNumber).toString().equals("true")) [CD]
Line_32 $$ for (colNumber = 0; colNumber < colTypes.size(); colNumber++) --> Line_33 $$ if (line[colNumber].equals("") && colNullAllowed.get(colNumber).toString().equals("true")) [FD]
Line_18 $$ int colNumber = 0 --> Line_33 $$ if (line[colNumber].equals("") && colNullAllowed.get(colNumber).toString().equals("true")) [FD]
Line_33 $$ if (line[colNumber].equals("") && colNullAllowed.get(colNumber).toString().equals("true")) --> Line_34 $$ pstmt.setNull(colNumber + 1, Integer.parseInt(colTypeInt.get(colNumber).toString())) [CD]
Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) --> Line_34 $$ pstmt.setNull(colNumber + 1, Integer.parseInt(colTypeInt.get(colNumber).toString())) [FD]
Line_32 $$ for (colNumber = 0; colNumber < colTypes.size(); colNumber++) --> Line_34 $$ pstmt.setNull(colNumber + 1, Integer.parseInt(colTypeInt.get(colNumber).toString())) [FD]
Line_18 $$ int colNumber = 0 --> Line_34 $$ pstmt.setNull(colNumber + 1, Integer.parseInt(colTypeInt.get(colNumber).toString())) [FD]
Line_33 $$ if (line[colNumber].equals("") && colNullAllowed.get(colNumber).toString().equals("true")) --> Line_36 $$ pstmt.setObject(colNumber + 1, line[colNumber], Integer.parseInt(colTypeInt.get(colNumber).toString())) [CD]
Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) --> Line_36 $$ pstmt.setObject(colNumber + 1, line[colNumber], Integer.parseInt(colTypeInt.get(colNumber).toString())) [FD]
Line_32 $$ for (colNumber = 0; colNumber < colTypes.size(); colNumber++) --> Line_36 $$ pstmt.setObject(colNumber + 1, line[colNumber], Integer.parseInt(colTypeInt.get(colNumber).toString())) [FD]
Line_18 $$ int colNumber = 0 --> Line_36 $$ pstmt.setObject(colNumber + 1, line[colNumber], Integer.parseInt(colTypeInt.get(colNumber).toString())) [FD]
Line_24 $$ for (; lineNumber < csvData.size(); lineNumber++) --> Line_39 $$ pstmt.executeUpdate() [CD]
Line_23 $$ PreparedStatement pstmt = conn.prepareStatement(sql.toString()) --> Line_39 $$ pstmt.executeUpdate() [FD]
Line_16 $$ Connection conn = null --> Line_41 $$ conn.rollback() [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_41 $$ conn.rollback() [FD]
Line_16 $$ Connection conn = null --> Line_42 $$ conn.setAutoCommit(true) [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_42 $$ conn.setAutoCommit(true) [FD]
Line_16 $$ Connection conn = null --> Line_43 $$ conn.close() [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_43 $$ conn.close() [FD]
Line_16 $$ Connection conn = null --> Line_44 $$ conn = null [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_44 $$ conn = null [FD]
Line_45 $$ dialog.getDisplay().asyncExec(new Runnable() --> Line_47 $$ if (!cancel) [CD]
Line_47 $$ if (!cancel) --> Line_48 $$ dlg.showMessage(title, "Imported " + maxsize + " rows successfully.") [CD]
Line_47 $$ if (!cancel) --> Line_49 $$ statusLabel.setText("Import complete.") [CD]
Line_47 $$ if (!cancel) --> Line_51 $$ dlg.UpdateProgressBar(0) [CD]
Line_47 $$ if (!cancel) --> Line_52 $$ statusLabel.setText("Import aborted.") [CD]
Line_16 $$ Connection conn = null --> Line_58 $$ if (conn != null) [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_58 $$ if (conn != null) [FD]
Line_44 $$ conn = null --> Line_58 $$ if (conn != null) [FD]
Line_16 $$ Connection conn = null --> Line_59 $$ conn.rollback() [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_59 $$ conn.rollback() [FD]
Line_44 $$ conn = null --> Line_59 $$ conn.rollback() [FD]
Line_63 $$ dialog.getDisplay().asyncExec(new Runnable() --> Line_65 $$ statusLabel.setText("Import failed") [CD]
Line_63 $$ dialog.getDisplay().asyncExec(new Runnable() --> Line_66 $$ dlg.showError(title, e.getMessage()) [CD]
Line_63 $$ dialog.getDisplay().asyncExec(new Runnable() --> Line_67 $$ dlg.UpdateProgressBar(0) [CD]
Line_16 $$ Connection conn = null --> Line_72 $$ if (conn != null) [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_72 $$ if (conn != null) [FD]
Line_44 $$ conn = null --> Line_72 $$ if (conn != null) [FD]
Line_16 $$ Connection conn = null --> Line_73 $$ conn.close() [FD]
Line_21 $$ conn = DBExplorer.getConnection(false) --> Line_73 $$ conn.close() [FD]
Line_44 $$ conn = null --> Line_73 $$ conn.close() [FD]
