Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_3 $$ if (!(arg instanceof String[])) [CD]
Line_3 $$ if (!(arg instanceof String[])) --> Line_4 $$ bsp.abort(new RuntimeException("String[] as arguments expected")) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_4 $$ bsp.abort(new RuntimeException("String[] as arguments expected")) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_6 $$ String[] args = (String[]) arg [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_7 $$ long t1 = 0L, t2 [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_9 $$ System.out.println(InetAddress.getLocalHost().getCanonicalHostName()) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_11 $$ System.out.println("exception: " + e) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_13 $$ Formula formula = null [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_14 $$ if (bsp == null || bsp.getProcessId() == 0) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_14 $$ if (bsp == null || bsp.getProcessId() == 0) [FD]
Line_17 $$ String input --> Line_18 $$ input = "sat/uuf175-03.cnf" [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_19 $$ System.out.println("using formula definition: " + input) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_20 $$ if (bsp != null) [FD]
Line_20 $$ if (bsp != null) --> Line_21 $$ bsp.printStdOut("trying to read formula from class file server of the job owner's peer") [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_21 $$ bsp.printStdOut("trying to read formula from class file server of the job owner's peer") [FD]
Line_20 $$ if (bsp != null) --> Line_22 $$ src = bsp.getResourceAsStream(input) [CD]
Line_16 $$ InputStream src --> Line_22 $$ src = bsp.getResourceAsStream(input) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_22 $$ src = bsp.getResourceAsStream(input) [FD]
Line_17 $$ String input --> Line_22 $$ src = bsp.getResourceAsStream(input) [FD]
Line_18 $$ input = "sat/uuf175-03.cnf" --> Line_22 $$ src = bsp.getResourceAsStream(input) [FD]
Line_20 $$ if (bsp != null) --> Line_24 $$ System.out.println("trying to read formula from http://www.upb.de/fachbereich/AG/agmadh/WWW/bono/" + input) [CD]
Line_20 $$ if (bsp != null) --> Line_25 $$ URL url = new URL("http", "www.upb.de", -1, "/fachbereich/AG/agmadh/WWW/bono/" + input, null) [CD]
Line_20 $$ if (bsp != null) --> Line_26 $$ src = url.openStream() [CD]
Line_16 $$ InputStream src --> Line_26 $$ src = url.openStream() [FD]
Line_22 $$ src = bsp.getResourceAsStream(input) --> Line_26 $$ src = url.openStream() [FD]
Line_25 $$ URL url = new URL("http", "www.upb.de", -1, "/fachbereich/AG/agmadh/WWW/bono/" + input, null) --> Line_26 $$ src = url.openStream() [FD]
Line_13 $$ Formula formula = null --> Line_28 $$ formula = new Formula(src, bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_30 $$ if (bsp != null) [FD]
Line_30 $$ if (bsp != null) --> Line_31 $$ bsp.printStdOut("cannot load formula: " + e) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_31 $$ bsp.printStdOut("cannot load formula: " + e) [FD]
Line_30 $$ if (bsp != null) --> Line_32 $$ bsp.abort(e) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_32 $$ bsp.abort(e) [FD]
Line_30 $$ if (bsp != null) --> Line_34 $$ System.out.println("cannot load formula: " + e) [CD]
Line_30 $$ if (bsp != null) --> Line_35 $$ System.exit(1) [CD]
Line_14 $$ if (bsp == null || bsp.getProcessId() == 0) --> Line_38 $$ formula.print(bsp) [CD]
Line_13 $$ Formula formula = null --> Line_38 $$ formula.print(bsp) [FD]
Line_28 $$ formula = new Formula(src, bsp) --> Line_38 $$ formula.print(bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_38 $$ formula.print(bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_40 $$ if (bsp != null) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_40 $$ if (bsp != null) [FD]
Line_40 $$ if (bsp != null) --> Line_41 $$ bsp.sync() [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_41 $$ bsp.sync() [FD]
Line_40 $$ if (bsp != null) --> Line_42 $$ if (bsp.getProcessId() == 0) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_42 $$ if (bsp.getProcessId() == 0) [FD]
Line_7 $$ long t1 = 0L, t2 --> Line_42 $$ if (bsp.getProcessId() == 0) [FD]
Line_40 $$ if (bsp != null) --> Line_43 $$ Formula.parallelSolve(formula, bsp) [CD]
Line_13 $$ Formula formula = null --> Line_43 $$ Formula.parallelSolve(formula, bsp) [FD]
Line_28 $$ formula = new Formula(src, bsp) --> Line_43 $$ Formula.parallelSolve(formula, bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_43 $$ Formula.parallelSolve(formula, bsp) [FD]
Line_40 $$ if (bsp != null) --> Line_44 $$ bsp.sync() [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_44 $$ bsp.sync() [FD]
Line_40 $$ if (bsp != null) --> Line_45 $$ if (bsp.getProcessId() == 0) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_45 $$ if (bsp.getProcessId() == 0) [FD]
Line_45 $$ if (bsp.getProcessId() == 0) --> Line_46 $$ t2 = bsp.getTime() [CD]
Line_7 $$ long t1 = 0L, t2 --> Line_46 $$ t2 = bsp.getTime() [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_46 $$ t2 = bsp.getTime() [FD]
Line_45 $$ if (bsp.getProcessId() == 0) --> Line_47 $$ bsp.printStdOut("consumed time: " + ((t2 - t1) / 1000) + "s") [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_47 $$ bsp.printStdOut("consumed time: " + ((t2 - t1) / 1000) + "s") [FD]
Line_40 $$ if (bsp != null) --> Line_49 $$ formula.solve(bsp) [CD]
Line_13 $$ Formula formula = null --> Line_49 $$ formula.solve(bsp) [FD]
Line_28 $$ formula = new Formula(src, bsp) --> Line_49 $$ formula.solve(bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_49 $$ formula.solve(bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_50 $$ if (bsp == null || bsp.getProcessId() == 0) [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_50 $$ if (bsp == null || bsp.getProcessId() == 0) [FD]
Line_50 $$ if (bsp == null || bsp.getProcessId() == 0) --> Line_51 $$ if (formula.isSatisfiable()) [CD]
Line_13 $$ Formula formula = null --> Line_51 $$ if (formula.isSatisfiable()) [FD]
Line_28 $$ formula = new Formula(src, bsp) --> Line_51 $$ if (formula.isSatisfiable()) [FD]
Line_51 $$ if (formula.isSatisfiable()) --> Line_52 $$ System.out.println("satisfiable") [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_52 $$ System.out.println("satisfiable") [FD]
Line_51 $$ if (formula.isSatisfiable()) --> Line_54 $$ System.out.println("not satisfiable") [CD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_54 $$ System.out.println("not satisfiable") [FD]
Line_50 $$ if (bsp == null || bsp.getProcessId() == 0) --> Line_56 $$ formula.printVariables(bsp) [CD]
Line_13 $$ Formula formula = null --> Line_56 $$ formula.printVariables(bsp) [FD]
Line_28 $$ formula = new Formula(src, bsp) --> Line_56 $$ formula.printVariables(bsp) [FD]
Line_2 $$ public void bspMain(BSP bsp, Serializable arg) throws AbortedException --> Line_56 $$ formula.printVariables(bsp) [FD]
