Line_2 $$ public void load() throws IOException --> Line_3 $$ File file = new File(filename) [CD]
Line_2 $$ public void load() throws IOException --> Line_4 $$ URL url = file.toURI().toURL() [CD]
Line_3 $$ File file = new File(filename) --> Line_4 $$ URL url = file.toURI().toURL() [FD]
Line_2 $$ public void load() throws IOException --> Line_5 $$ Properties temp = new Properties() [CD]
Line_2 $$ public void load() throws IOException --> Line_6 $$ temp.load(url.openStream()) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_6 $$ temp.load(url.openStream()) [FD]
Line_4 $$ URL url = file.toURI().toURL() --> Line_6 $$ temp.load(url.openStream()) [FD]
Line_2 $$ public void load() throws IOException --> Line_7 $$ if (temp.getProperty("Width") != null) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_7 $$ if (temp.getProperty("Width") != null) [FD]
Line_5 $$ Properties temp = new Properties() --> Line_8 $$ width = Integer.valueOf(temp.getProperty("Width")) [FD]
Line_2 $$ public void load() throws IOException --> Line_12 $$ if (temp.getProperty("Height") != null) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_12 $$ if (temp.getProperty("Height") != null) [FD]
Line_5 $$ Properties temp = new Properties() --> Line_13 $$ height = Integer.valueOf(temp.getProperty("Height")) [FD]
Line_2 $$ public void load() throws IOException --> Line_17 $$ if (temp.getProperty("CircleRadius") != null) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_17 $$ if (temp.getProperty("CircleRadius") != null) [FD]
Line_5 $$ Properties temp = new Properties() --> Line_18 $$ circleradius = Double.valueOf(temp.getProperty("CircleRadius")) [FD]
Line_2 $$ public void load() throws IOException --> Line_22 $$ ArrayList<Ellipse> calibrationcircleslist = new ArrayList<Ellipse>() [CD]
Line_2 $$ public void load() throws IOException --> Line_23 $$ int i = 0 [CD]
Line_2 $$ public void load() throws IOException --> Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) [FD]
Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) --> Line_25 $$ Point2d circlecenter = new Point2d(0, 0) [CD]
Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) --> Line_26 $$ circlecenter.x = Double.valueOf(temp.getProperty("Circle" + i + "CenterX")) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_26 $$ circlecenter.x = Double.valueOf(temp.getProperty("Circle" + i + "CenterX")) [FD]
Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) --> Line_27 $$ circlecenter.y = Double.valueOf(temp.getProperty("Circle" + i + "CenterY")) [CD]
Line_5 $$ Properties temp = new Properties() --> Line_27 $$ circlecenter.y = Double.valueOf(temp.getProperty("Circle" + i + "CenterY")) [FD]
Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) --> Line_28 $$ Ellipse element = new Ellipse(circlecenter, circleradius, circleradius, 0) [CD]
Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) --> Line_29 $$ calibrationcircleslist.add(element) [CD]
Line_22 $$ ArrayList<Ellipse> calibrationcircleslist = new ArrayList<Ellipse>() --> Line_29 $$ calibrationcircleslist.add(element) [FD]
Line_28 $$ Ellipse element = new Ellipse(circlecenter, circleradius, circleradius, 0) --> Line_29 $$ calibrationcircleslist.add(element) [FD]
Line_24 $$ while ((temp.getProperty("Circle" + i + "CenterX") != null) && (temp.getProperty("Circle" + i + "CenterY") != null)) --> Line_30 $$ i++ [CD]
Line_23 $$ int i = 0 --> Line_30 $$ i++ [FD]
Line_2 $$ public void load() throws IOException --> Line_33 $$ calibrationcircles = calibrationcircleslist.toArray(calibrationcircles) [CD]
Line_22 $$ ArrayList<Ellipse> calibrationcircleslist = new ArrayList<Ellipse>() --> Line_33 $$ calibrationcircles = calibrationcircleslist.toArray(calibrationcircles) [FD]
