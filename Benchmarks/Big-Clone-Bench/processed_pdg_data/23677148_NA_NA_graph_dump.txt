Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password") [CD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_4 $$ connection.setAutoCommit(false) [CD]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password") --> Line_4 $$ connection.setAutoCommit(false) [FD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_5 $$ Statement st = connection.createStatement() [CD]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password") --> Line_5 $$ Statement st = connection.createStatement() [FD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_6 $$ String sql = "UPDATE myTable SET myField = '" + myField + "' WHERE myOtherField1 = '" + condition1 + "' AND myOtherField2 = '" + condition2 + "'" [CD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_7 $$ int numChanged = st.executeUpdate(sql) [CD]
Line_5 $$ Statement st = connection.createStatement() --> Line_7 $$ int numChanged = st.executeUpdate(sql) [FD]
Line_6 $$ String sql = "UPDATE myTable SET myField = '" + myField + "' WHERE myOtherField1 = '" + condition1 + "' AND myOtherField2 = '" + condition2 + "'" --> Line_7 $$ int numChanged = st.executeUpdate(sql) [FD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_9 $$ // If more than 10 entries change, panic and rollback [CD]
Line_7 $$ int numChanged = st.executeUpdate(sql) --> Line_9 $$ // If more than 10 entries change, panic and rollback [FD]
Line_9 $$ // If more than 10 entries change, panic and rollback --> Line_10 $$ connection.rollback() [CD]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password") --> Line_10 $$ connection.rollback() [FD]
Line_9 $$ // If more than 10 entries change, panic and rollback --> Line_12 $$ connection.commit() [CD]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password") --> Line_12 $$ connection.commit() [FD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_14 $$ st.close() [CD]
Line_5 $$ Statement st = connection.createStatement() --> Line_14 $$ st.close() [FD]
Line_2 $$ public static void Sample2(String myField, String condition1, String condition2) throws SQLException --> Line_15 $$ connection.close() [CD]
Line_3 $$ Connection connection = DriverManager.getConnection("jdbc:postgresql://localhost/test", "user", "password") --> Line_15 $$ connection.close() [FD]
