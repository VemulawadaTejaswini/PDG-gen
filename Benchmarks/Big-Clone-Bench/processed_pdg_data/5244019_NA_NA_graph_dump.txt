Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_3 $$ URLConnection conn = null [CD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_4 $$ InputStream in = null [CD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_5 $$ URL url = new URL("http://www.napiprojekt.pl/users_check.php?nick=" + user + "&pswd=" + pass) [CD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_6 $$ conn = url.openConnection(Global.getProxy()) [CD]
Line_3 $$ URLConnection conn = null --> Line_6 $$ conn = url.openConnection(Global.getProxy()) [FD]
Line_5 $$ URL url = new URL("http://www.napiprojekt.pl/users_check.php?nick=" + user + "&pswd=" + pass) --> Line_6 $$ conn = url.openConnection(Global.getProxy()) [FD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_7 $$ in = Timeouts.getInputStream(conn) [CD]
Line_4 $$ InputStream in = null --> Line_7 $$ in = Timeouts.getInputStream(conn) [FD]
Line_3 $$ URLConnection conn = null --> Line_7 $$ in = Timeouts.getInputStream(conn) [FD]
Line_6 $$ conn = url.openConnection(Global.getProxy()) --> Line_7 $$ in = Timeouts.getInputStream(conn) [FD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_8 $$ byte[] buffer = new byte[1024] [CD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_9 $$ in.read(buffer, 0, 1024) [CD]
Line_4 $$ InputStream in = null --> Line_9 $$ in.read(buffer, 0, 1024) [FD]
Line_7 $$ in = Timeouts.getInputStream(conn) --> Line_9 $$ in.read(buffer, 0, 1024) [FD]
Line_8 $$ byte[] buffer = new byte[1024] --> Line_9 $$ in.read(buffer, 0, 1024) [FD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_10 $$ if (in != null) [CD]
Line_4 $$ InputStream in = null --> Line_10 $$ if (in != null) [FD]
Line_7 $$ in = Timeouts.getInputStream(conn) --> Line_10 $$ if (in != null) [FD]
Line_10 $$ if (in != null) --> Line_11 $$ in.close() [CD]
Line_4 $$ InputStream in = null --> Line_11 $$ in.close() [FD]
Line_7 $$ in = Timeouts.getInputStream(conn) --> Line_11 $$ in.close() [FD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_13 $$ String response = new String(buffer) [CD]
Line_2 $$ public static boolean napiUserCheck(String user, String pass) throws TimeoutException, InterruptedException, IOException --> Line_14 $$ if (response.indexOf("ok") == 0) [CD]
Line_13 $$ String response = new String(buffer) --> Line_14 $$ if (response.indexOf("ok") == 0) [FD]
Line_14 $$ if (response.indexOf("ok") == 0) --> Line_15 $$ return true [CD]
Line_14 $$ if (response.indexOf("ok") == 0) --> Line_17 $$ return false [CD]
