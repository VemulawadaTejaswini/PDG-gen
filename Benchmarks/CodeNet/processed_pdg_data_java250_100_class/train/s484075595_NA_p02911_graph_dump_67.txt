Line_2 $$ public static void main(String[] args) -->Line_6 $$ int Q = Integer.parseInt(sc.next())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < Q; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int countAnswer = Q - K[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_10 $$ int ans = Integer.parseInt(sc.next())[ CD ]
Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) -->Line_18 $$ System.out.println("Yes")[ CD ]
Line_8 $$ Map<Integer, Integer> scoreMap = new HashMap()-->Line_12 $$ scoreMap.put(ans, score + 1)[ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_12 $$ scoreMap.put(ans, score + 1)[ CD ]
Line_14 $$ for (int i = 1; i <= N; i++) -->Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int K = Integer.parseInt(sc.next())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ Map<Integer, Integer> scoreMap = new HashMap()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int Q = Integer.parseInt(sc.next())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int K = Integer.parseInt(sc.next())[ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_11 $$ int score = scoreMap.getOrDefault(ans, 0)[ CD ]
Line_10 $$ int ans = Integer.parseInt(sc.next())-->Line_11 $$ int score = scoreMap.getOrDefault(ans, 0)[ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) [ FD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_14 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_8 $$ Map<Integer, Integer> scoreMap = new HashMap()-->Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) [ FD ]
Line_7 $$ int countAnswer = Q - K-->Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) [ FD ]
Line_6 $$ int Q = Integer.parseInt(sc.next())-->Line_9 $$ for (int i = 0; i < Q; i++) [ FD ]
Line_8 $$ Map<Integer, Integer> scoreMap = new HashMap()-->Line_11 $$ int score = scoreMap.getOrDefault(ans, 0)[ FD ]
Line_14 $$ for (int i = 1; i <= N; i++) -->Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ int ans = Integer.parseInt(sc.next())[ FD ]
Line_10 $$ int ans = Integer.parseInt(sc.next())-->Line_12 $$ scoreMap.put(ans, score + 1)[ FD ]
Line_15 $$ if (scoreMap.getOrDefault(i, -countAnswer) <= countAnswer) -->Line_16 $$ System.out.println("No")[ CD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_14 $$ for (int i = 1; i <= N; i++) [ FD ]
