Line_10 $$ double wholeMin = (hour * 60) + min-->Line_18 $$ rHour = shortAngleByOneMin * wholeMin[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double min = Double.parseDouble(m)[ CD ]
Line_11 $$ double shortNeedle = Double.parseDouble(iShortNeedle)-->Line_30 $$ aLength = longNeedle + shortNeedle[ FD ]
Line_25 $$ if (diffAngle != 0 || diffAngle != 180) -->Line_27 $$ if (diffAngle == 0) [ CD ]
Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))-->Line_30 $$ aLength = longNeedle + shortNeedle[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String iShortNeedle = sc.next()[ FD ]
Line_11 $$ double shortNeedle = Double.parseDouble(iShortNeedle)-->Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ String m = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double shortNeedle = Double.parseDouble(iShortNeedle)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ double aLength = 0[ CD ]
Line_24 $$ double aLength = 0-->Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))[ FD ]
Line_28 $$ aLength = longNeedle - shortNeedle-->Line_30 $$ aLength = longNeedle + shortNeedle[ FD ]
Line_6 $$ String h = sc.next()-->Line_8 $$ double hour = Double.parseDouble(h)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ double shortAngleByOneMin = (360.0 / 12.0) / 60.0[ CD ]
Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))-->Line_28 $$ aLength = longNeedle - shortNeedle[ FD ]
Line_20 $$ if (min != 0) -->Line_21 $$ rMin = longAngleByOneMin * min[ CD ]
Line_29 $$ if (diffAngle == 180) -->Line_30 $$ aLength = longNeedle + shortNeedle[ CD ]
Line_12 $$ double longNeedle = Double.parseDouble(iLongNeedle)-->Line_28 $$ aLength = longNeedle - shortNeedle[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ if (wholeMin != 0) [ CD ]
Line_24 $$ double aLength = 0-->Line_30 $$ aLength = longNeedle + shortNeedle[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_25 $$ if (diffAngle != 0 || diffAngle != 180) [ CD ]
Line_5 $$ String iLongNeedle = sc.next()-->Line_12 $$ double longNeedle = Double.parseDouble(iLongNeedle)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ double longNeedle = Double.parseDouble(iLongNeedle)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ double diffAngle = Math.abs(rHour - rMin)[ CD ]
Line_12 $$ double longNeedle = Double.parseDouble(iLongNeedle)-->Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))[ FD ]
Line_7 $$ String m = sc.next()-->Line_9 $$ double min = Double.parseDouble(m)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ String m = sc.next()[ CD ]
Line_9 $$ double min = Double.parseDouble(m)-->Line_21 $$ rMin = longAngleByOneMin * min[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ double rHour = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_32 $$ System.out.println(aLength)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String iShortNeedle = sc.next()[ CD ]
Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))-->Line_32 $$ System.out.println(aLength)[ FD ]
Line_27 $$ if (diffAngle == 0) -->Line_29 $$ if (diffAngle == 180) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String h = sc.next()[ FD ]
Line_17 $$ if (wholeMin != 0) -->Line_18 $$ rHour = shortAngleByOneMin * wholeMin[ CD ]
Line_25 $$ if (diffAngle != 0 || diffAngle != 180) -->Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))[ CD ]
Line_9 $$ double min = Double.parseDouble(m)-->Line_20 $$ if (min != 0) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String iLongNeedle = sc.next()[ FD ]
Line_24 $$ double aLength = 0-->Line_32 $$ System.out.println(aLength)[ FD ]
Line_23 $$ double diffAngle = Math.abs(rHour - rMin)-->Line_26 $$ aLength = Math.sqrt(Math.pow(shortNeedle, 2) + Math.pow(longNeedle, 2) - 2 * shortNeedle * longNeedle * Math.cos(Math.toRadians(diffAngle)))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double wholeMin = (hour * 60) + min[ CD ]
Line_13 $$ double shortAngleByOneMin = (360.0 / 12.0) / 60.0-->Line_18 $$ rHour = shortAngleByOneMin * wholeMin[ FD ]
Line_16 $$ double rMin = 0-->Line_21 $$ rMin = longAngleByOneMin * min[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double hour = Double.parseDouble(h)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ if (min != 0) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String iLongNeedle = sc.next()[ CD ]
Line_15 $$ double rHour = 0-->Line_18 $$ rHour = shortAngleByOneMin * wholeMin[ FD ]
Line_24 $$ double aLength = 0-->Line_28 $$ aLength = longNeedle - shortNeedle[ FD ]
Line_12 $$ double longNeedle = Double.parseDouble(iLongNeedle)-->Line_30 $$ aLength = longNeedle + shortNeedle[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String h = sc.next()[ CD ]
Line_4 $$ String iShortNeedle = sc.next()-->Line_11 $$ double shortNeedle = Double.parseDouble(iShortNeedle)[ FD ]
Line_23 $$ double diffAngle = Math.abs(rHour - rMin)-->Line_27 $$ if (diffAngle == 0) [ FD ]
Line_28 $$ aLength = longNeedle - shortNeedle-->Line_32 $$ System.out.println(aLength)[ FD ]
Line_30 $$ aLength = longNeedle + shortNeedle-->Line_32 $$ System.out.println(aLength)[ FD ]
Line_14 $$ double longAngleByOneMin = 360.0 / 60.0-->Line_21 $$ rMin = longAngleByOneMin * min[ FD ]
Line_27 $$ if (diffAngle == 0) -->Line_28 $$ aLength = longNeedle - shortNeedle[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ double rMin = 0[ CD ]
Line_11 $$ double shortNeedle = Double.parseDouble(iShortNeedle)-->Line_28 $$ aLength = longNeedle - shortNeedle[ FD ]
Line_23 $$ double diffAngle = Math.abs(rHour - rMin)-->Line_29 $$ if (diffAngle == 180) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ double longAngleByOneMin = 360.0 / 60.0[ CD ]
Line_10 $$ double wholeMin = (hour * 60) + min-->Line_17 $$ if (wholeMin != 0) [ FD ]
