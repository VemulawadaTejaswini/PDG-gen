Line_8 $$ for (int i = 0; i <= n; i++) -->Line_9 $$ box.put(i, false)[ FD ]
Line_20 $$ for (int i = x; i > 0; i--) -->Line_21 $$ if ((boolean) box.get(i) == true)[ CD ]
Line_5 $$ int m = sc.nextInt()-->Line_11 $$ for (int i = 0; i < m; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int m = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ HashMap<Integer, Boolean> box = new HashMap()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ for (int i = x; i <= n; i++) [ CD ]
Line_20 $$ for (int i = x; i > 0; i--) -->Line_21 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_15 $$ int costRight = 0-->Line_23 $$ System.out.println(Math.min(costLeft, costRight))[ FD ]
Line_16 $$ for (int i = x; i <= n; i++) -->Line_17 $$ if ((boolean) box.get(i) == true)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int x = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_12 $$ int tmpShop = sc.nextInt()[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ HashMap<Integer, Boolean> box = new HashMap()-->Line_13 $$ box.put(tmpShop, true)[ FD ]
Line_11 $$ for (int i = 0; i < m; i++) -->Line_17 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_16 $$ for (int i = x; i <= n; i++) -->Line_21 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_8 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = x; i <= n; i++) [ FD ]
Line_7 $$ HashMap<Integer, Boolean> box = new HashMap()-->Line_21 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int m = sc.nextInt()[ FD ]
Line_11 $$ for (int i = 0; i < m; i++) -->Line_13 $$ box.put(tmpShop, true)[ CD ]
Line_16 $$ for (int i = x; i <= n; i++) -->Line_17 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_15 $$ int costRight = 0-->Line_17 $$ costRight++[ FD ]
Line_7 $$ HashMap<Integer, Boolean> box = new HashMap()-->Line_17 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ for (int i = x; i > 0; i--) [ CD ]
Line_11 $$ for (int i = 0; i < m; i++) -->Line_21 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_16 $$ for (int i = x; i <= n; i++) [ FD ]
Line_8 $$ for (int i = 0; i <= n; i++) -->Line_9 $$ box.put(i, false)[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int x = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i <= n; i++) -->Line_20 $$ for (int i = x; i > 0; i--) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(Math.min(costLeft, costRight))[ CD ]
Line_16 $$ for (int i = x; i <= n; i++) -->Line_20 $$ for (int i = x; i > 0; i--) [ FD ]
Line_12 $$ int tmpShop = sc.nextInt()-->Line_13 $$ box.put(tmpShop, true)[ FD ]
Line_8 $$ for (int i = 0; i <= n; i++) -->Line_16 $$ for (int i = x; i <= n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < m; i++) -->Line_20 $$ for (int i = x; i > 0; i--) [ FD ]
Line_7 $$ HashMap<Integer, Boolean> box = new HashMap()-->Line_9 $$ box.put(i, false)[ FD ]
Line_8 $$ for (int i = 0; i <= n; i++) -->Line_17 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < m; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ int costRight = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ int costLeft = 0[ CD ]
Line_8 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ if ((boolean) box.get(i) == true)[ FD ]
Line_19 $$ int costLeft = 0-->Line_21 $$ costLeft++[ FD ]
Line_8 $$ for (int i = 0; i <= n; i++) -->Line_11 $$ for (int i = 0; i < m; i++) [ FD ]
Line_11 $$ for (int i = 0; i < m; i++) -->Line_12 $$ int tmpShop = sc.nextInt()[ CD ]
Line_19 $$ int costLeft = 0-->Line_23 $$ System.out.println(Math.min(costLeft, costRight))[ FD ]
