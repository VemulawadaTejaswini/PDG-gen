Line_20 $$ if (argA > 180 && argA <= 270) -->Line_21 $$ ax = -a * Math.cos(Math.toRadians(270 - argA))[ CD ]
Line_12 $$ double bx = 0-->Line_34 $$ bx = -b * Math.cos(Math.toRadians(270 - argB))[ FD ]
Line_4 $$ int a = sc.nextInt()-->Line_15 $$ ax = a * Math.cos(Math.toRadians(90 - argA))[ FD ]
Line_19 $$ ay = -a * Math.sin(Math.toRadians(argA - 90))-->Line_25 $$ ay = a * Math.sin(Math.toRadians(argA - 270))[ FD ]
Line_5 $$ int b = sc.nextInt()-->Line_37 $$ bx = -b * Math.cos(Math.toRadians(argB - 270))[ FD ]
Line_31 $$ bx = b * Math.cos(Math.toRadians(argB - 90))-->Line_34 $$ bx = -b * Math.cos(Math.toRadians(270 - argB))[ FD ]
Line_23 $$ if (argA > 270 && argA <= 360) -->Line_24 $$ ax = -a * Math.cos(Math.toRadians(argA - 270))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_40 $$ double result = (double) Math.sqrt(Math.pow(bx - ax, 2) + Math.pow(by - ay, 2))[ CD ]
Line_13 $$ double by = 0-->Line_29 $$ by = b * Math.sin(Math.toRadians(90 - argB))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int m = sc.nextInt()[ FD ]
Line_14 $$ if (argA >= 0 && argA <= 90) -->Line_17 $$ if (argA > 90 && argA <= 180) [ CD ]
Line_33 $$ if (argB > 180 && argB <= 270) -->Line_35 $$ by = -b * Math.sin(Math.toRadians(270 - argB))[ CD ]
Line_10 $$ double ax = 0-->Line_21 $$ ax = -a * Math.cos(Math.toRadians(270 - argA))[ FD ]
Line_35 $$ by = -b * Math.sin(Math.toRadians(270 - argB))-->Line_38 $$ by = b * Math.sin(Math.toRadians(argB - 270))[ FD ]
Line_20 $$ if (argA > 180 && argA <= 270) -->Line_23 $$ if (argA > 270 && argA <= 360) [ CD ]
Line_16 $$ ay = a * Math.sin(Math.toRadians(90 - argA))-->Line_22 $$ ay = -a * Math.sin(Math.toRadians(270 - argA))[ FD ]
Line_29 $$ by = b * Math.sin(Math.toRadians(90 - argB))-->Line_32 $$ by = -b * Math.sin(Math.toRadians(argB - 90))[ FD ]
Line_14 $$ if (argA >= 0 && argA <= 90) -->Line_16 $$ ay = a * Math.sin(Math.toRadians(90 - argA))[ CD ]
Line_19 $$ ay = -a * Math.sin(Math.toRadians(argA - 90))-->Line_22 $$ ay = -a * Math.sin(Math.toRadians(270 - argA))[ FD ]
Line_23 $$ if (argA > 270 && argA <= 360) -->Line_25 $$ ay = a * Math.sin(Math.toRadians(argA - 270))[ CD ]
Line_5 $$ int b = sc.nextInt()-->Line_35 $$ by = -b * Math.sin(Math.toRadians(270 - argB))[ FD ]
Line_28 $$ bx = b * Math.cos(Math.toRadians(90 - argB))-->Line_31 $$ bx = b * Math.cos(Math.toRadians(argB - 90))[ FD ]
Line_10 $$ double ax = 0-->Line_18 $$ ax = a * Math.cos(Math.toRadians(argA - 90))[ FD ]
Line_17 $$ if (argA > 90 && argA <= 180) -->Line_18 $$ ax = a * Math.cos(Math.toRadians(argA - 90))[ CD ]
Line_5 $$ int b = sc.nextInt()-->Line_28 $$ bx = b * Math.cos(Math.toRadians(90 - argB))[ FD ]
Line_10 $$ double ax = 0-->Line_24 $$ ax = -a * Math.cos(Math.toRadians(argA - 270))[ FD ]
Line_17 $$ if (argA > 90 && argA <= 180) -->Line_19 $$ ay = -a * Math.sin(Math.toRadians(argA - 90))[ CD ]
Line_14 $$ if (argA >= 0 && argA <= 90) -->Line_15 $$ ax = a * Math.cos(Math.toRadians(90 - argA))[ CD ]
Line_28 $$ bx = b * Math.cos(Math.toRadians(90 - argB))-->Line_37 $$ bx = -b * Math.cos(Math.toRadians(argB - 270))[ FD ]
Line_12 $$ double bx = 0-->Line_28 $$ bx = b * Math.cos(Math.toRadians(90 - argB))[ FD ]
Line_27 $$ if (argB >= 0 && argB <= 90) -->Line_30 $$ if (argB > 90 && argB <= 180) [ CD ]
Line_40 $$ double result = (double) Math.sqrt(Math.pow(bx - ax, 2) + Math.pow(by - ay, 2))-->Line_41 $$ System.out.println(result)[ FD ]
Line_22 $$ ay = -a * Math.sin(Math.toRadians(270 - argA))-->Line_25 $$ ay = a * Math.sin(Math.toRadians(argA - 270))[ FD ]
Line_5 $$ int b = sc.nextInt()-->Line_32 $$ by = -b * Math.sin(Math.toRadians(argB - 90))[ FD ]
Line_13 $$ double by = 0-->Line_35 $$ by = -b * Math.sin(Math.toRadians(270 - argB))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ double by = 0[ CD ]
Line_5 $$ int b = sc.nextInt()-->Line_38 $$ by = b * Math.sin(Math.toRadians(argB - 270))[ FD ]
Line_33 $$ if (argB > 180 && argB <= 270) -->Line_34 $$ bx = -b * Math.cos(Math.toRadians(270 - argB))[ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_18 $$ ax = a * Math.cos(Math.toRadians(argA - 90))[ FD ]
Line_16 $$ ay = a * Math.sin(Math.toRadians(90 - argA))-->Line_25 $$ ay = a * Math.sin(Math.toRadians(argA - 270))[ FD ]
Line_36 $$ if (argB > 270 && argB <= 360) -->Line_38 $$ by = b * Math.sin(Math.toRadians(argB - 270))[ CD ]
Line_29 $$ by = b * Math.sin(Math.toRadians(90 - argB))-->Line_38 $$ by = b * Math.sin(Math.toRadians(argB - 270))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_15 $$ ax = a * Math.cos(Math.toRadians(90 - argA))-->Line_21 $$ ax = -a * Math.cos(Math.toRadians(270 - argA))[ FD ]
Line_27 $$ if (argB >= 0 && argB <= 90) -->Line_29 $$ by = b * Math.sin(Math.toRadians(90 - argB))[ CD ]
Line_18 $$ ax = a * Math.cos(Math.toRadians(argA - 90))-->Line_21 $$ ax = -a * Math.cos(Math.toRadians(270 - argA))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int a = sc.nextInt()[ FD ]
Line_4 $$ int a = sc.nextInt()-->Line_24 $$ ax = -a * Math.cos(Math.toRadians(argA - 270))[ FD ]
Line_34 $$ bx = -b * Math.cos(Math.toRadians(270 - argB))-->Line_37 $$ bx = -b * Math.cos(Math.toRadians(argB - 270))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double ax = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int m = sc.nextInt()[ CD ]
Line_29 $$ by = b * Math.sin(Math.toRadians(90 - argB))-->Line_35 $$ by = -b * Math.sin(Math.toRadians(270 - argB))[ FD ]
Line_11 $$ double ay = 0-->Line_16 $$ ay = a * Math.sin(Math.toRadians(90 - argA))[ FD ]
Line_4 $$ int a = sc.nextInt()-->Line_21 $$ ax = -a * Math.cos(Math.toRadians(270 - argA))[ FD ]
Line_12 $$ double bx = 0-->Line_37 $$ bx = -b * Math.cos(Math.toRadians(argB - 270))[ FD ]
Line_11 $$ double ay = 0-->Line_19 $$ ay = -a * Math.sin(Math.toRadians(argA - 90))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double argB = 6 * m[ CD ]
Line_11 $$ double ay = 0-->Line_25 $$ ay = a * Math.sin(Math.toRadians(argA - 270))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double ay = 0[ CD ]
Line_5 $$ int b = sc.nextInt()-->Line_31 $$ bx = b * Math.cos(Math.toRadians(argB - 90))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int b = sc.nextInt()[ FD ]
Line_13 $$ double by = 0-->Line_38 $$ by = b * Math.sin(Math.toRadians(argB - 270))[ FD ]
Line_4 $$ int a = sc.nextInt()-->Line_25 $$ ay = a * Math.sin(Math.toRadians(argA - 270))[ FD ]
Line_5 $$ int b = sc.nextInt()-->Line_34 $$ bx = -b * Math.cos(Math.toRadians(270 - argB))[ FD ]
Line_16 $$ ay = a * Math.sin(Math.toRadians(90 - argA))-->Line_19 $$ ay = -a * Math.sin(Math.toRadians(argA - 90))[ FD ]
Line_36 $$ if (argB > 270 && argB <= 360) -->Line_37 $$ bx = -b * Math.cos(Math.toRadians(argB - 270))[ CD ]
Line_27 $$ if (argB >= 0 && argB <= 90) -->Line_28 $$ bx = b * Math.cos(Math.toRadians(90 - argB))[ CD ]
Line_13 $$ double by = 0-->Line_32 $$ by = -b * Math.sin(Math.toRadians(argB - 90))[ FD ]
Line_12 $$ double bx = 0-->Line_31 $$ bx = b * Math.cos(Math.toRadians(argB - 90))[ FD ]
Line_18 $$ ax = a * Math.cos(Math.toRadians(argA - 90))-->Line_24 $$ ax = -a * Math.cos(Math.toRadians(argA - 270))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double argA = (double) (60 * h + m) / 2[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ if (argA >= 0 && argA <= 90) [ CD ]
Line_30 $$ if (argB > 90 && argB <= 180) -->Line_32 $$ by = -b * Math.sin(Math.toRadians(argB - 90))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_27 $$ if (argB >= 0 && argB <= 90) [ CD ]
Line_17 $$ if (argA > 90 && argA <= 180) -->Line_20 $$ if (argA > 180 && argA <= 270) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ double bx = 0[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_19 $$ ay = -a * Math.sin(Math.toRadians(argA - 90))[ FD ]
Line_32 $$ by = -b * Math.sin(Math.toRadians(argB - 90))-->Line_38 $$ by = b * Math.sin(Math.toRadians(argB - 270))[ FD ]
Line_15 $$ ax = a * Math.cos(Math.toRadians(90 - argA))-->Line_18 $$ ax = a * Math.cos(Math.toRadians(argA - 90))[ FD ]
Line_21 $$ ax = -a * Math.cos(Math.toRadians(270 - argA))-->Line_24 $$ ax = -a * Math.cos(Math.toRadians(argA - 270))[ FD ]
Line_15 $$ ax = a * Math.cos(Math.toRadians(90 - argA))-->Line_24 $$ ax = -a * Math.cos(Math.toRadians(argA - 270))[ FD ]
Line_10 $$ double ax = 0-->Line_15 $$ ax = a * Math.cos(Math.toRadians(90 - argA))[ FD ]
Line_5 $$ int b = sc.nextInt()-->Line_29 $$ by = b * Math.sin(Math.toRadians(90 - argB))[ FD ]
Line_28 $$ bx = b * Math.cos(Math.toRadians(90 - argB))-->Line_34 $$ bx = -b * Math.cos(Math.toRadians(270 - argB))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int b = sc.nextInt()[ CD ]
Line_30 $$ if (argB > 90 && argB <= 180) -->Line_31 $$ bx = b * Math.cos(Math.toRadians(argB - 90))[ CD ]
Line_20 $$ if (argA > 180 && argA <= 270) -->Line_22 $$ ay = -a * Math.sin(Math.toRadians(270 - argA))[ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_16 $$ ay = a * Math.sin(Math.toRadians(90 - argA))[ FD ]
Line_4 $$ int a = sc.nextInt()-->Line_22 $$ ay = -a * Math.sin(Math.toRadians(270 - argA))[ FD ]
Line_30 $$ if (argB > 90 && argB <= 180) -->Line_33 $$ if (argB > 180 && argB <= 270) [ CD ]
Line_33 $$ if (argB > 180 && argB <= 270) -->Line_36 $$ if (argB > 270 && argB <= 360) [ CD ]
Line_11 $$ double ay = 0-->Line_22 $$ ay = -a * Math.sin(Math.toRadians(270 - argA))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int h = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int h = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_41 $$ System.out.println(result)[ CD ]
Line_31 $$ bx = b * Math.cos(Math.toRadians(argB - 90))-->Line_37 $$ bx = -b * Math.cos(Math.toRadians(argB - 270))[ FD ]
Line_32 $$ by = -b * Math.sin(Math.toRadians(argB - 90))-->Line_35 $$ by = -b * Math.sin(Math.toRadians(270 - argB))[ FD ]
