Line_15 $$ if (min > input) -->Line_16 $$ min = input[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ long sum = 0[ CD ]
Line_7 $$ int N = Integer.parseInt(br.readLine())-->Line_10 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ int N = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ long min = Integer.MAX_VALUE[ CD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_12 $$ if (max < input) [ CD ]
Line_9 $$ long input = 0-->Line_12 $$ if (max < input) [ FD ]
Line_11 $$ input = Long.parseLong(inputArray[i])-->Line_12 $$ if (max < input) [ FD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_11 $$ input = Long.parseLong(inputArray[i])[ CD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ String[] inputArray = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ long input = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ System.out.println(min + " " + max + " " + sum)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_15 $$ if (min > input) [ CD ]
Line_11 $$ input = Long.parseLong(inputArray[i])-->Line_15 $$ if (min > input) [ FD ]
Line_9 $$ long input = 0-->Line_13 $$ max = input[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int N = Integer.parseInt(br.readLine())[ CD ]
Line_11 $$ input = Long.parseLong(inputArray[i])-->Line_18 $$ sum += input[ FD ]
Line_5 $$ long sum = 0-->Line_18 $$ sum += input[ FD ]
Line_3 $$ long max = Integer.MIN_VALUE-->Line_13 $$ max = input[ FD ]
Line_3 $$ long max = Integer.MIN_VALUE-->Line_12 $$ if (max < input) [ FD ]
Line_16 $$ min = input-->Line_15 $$ if (min > input) [ FD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_18 $$ sum += input[ CD ]
Line_9 $$ long input = 0-->Line_11 $$ input = Long.parseLong(inputArray[i])[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ long max = Integer.MIN_VALUE[ CD ]
Line_4 $$ long min = Integer.MAX_VALUE-->Line_16 $$ min = input[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ String[] inputArray = br.readLine().split(" ")[ CD ]
Line_4 $$ long min = Integer.MAX_VALUE-->Line_15 $$ if (min > input) [ FD ]
Line_13 $$ max = input-->Line_12 $$ if (max < input) [ FD ]
Line_11 $$ input = Long.parseLong(inputArray[i])-->Line_13 $$ max = input[ FD ]
Line_9 $$ long input = 0-->Line_16 $$ min = input[ FD ]
Line_12 $$ if (max < input) -->Line_13 $$ max = input[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < N; i++) [ CD ]
Line_9 $$ long input = 0-->Line_15 $$ if (min > input) [ FD ]
Line_11 $$ input = Long.parseLong(inputArray[i])-->Line_16 $$ min = input[ FD ]
Line_9 $$ long input = 0-->Line_18 $$ sum += input[ FD ]
