Line_8 $$ for (int i = 0; i < y; i++) -->Line_23 $$ if (map.get(i))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_7 $$ HashSet<Integer> set = new HashSet()-->Line_9 $$ set.add(Integer.parseInt(sc.next()))[ FD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_23 $$ if (map.get(i))[ FD ]
Line_7 $$ HashSet<Integer> set = new HashSet()-->Line_13 $$ if (set.contains(i)) [ FD ]
Line_19 $$ int first_half = 0-->Line_23 $$ first_half++[ FD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_25 $$ if (map.get(i))[ FD ]
Line_22 $$ if (i <= z) -->Line_25 $$ if (map.get(i))[ CD ]
Line_21 $$ for (int i = 0; i < x; i++) -->Line_23 $$ if (map.get(i))[ FD ]
Line_4 $$ int x = Integer.parseInt(sc.next()) + 1-->Line_12 $$ for (int i = 0; i < x; i++) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ set.add(Integer.parseInt(sc.next()))[ FD ]
Line_11 $$ HashMap<Integer, Boolean> map = new HashMap()-->Line_23 $$ if (map.get(i))[ FD ]
Line_20 $$ int last_half = 0-->Line_28 $$ System.out.println(Math.min(first_half, last_half))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int y = Integer.parseInt(sc.next())[ CD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_13 $$ if (set.contains(i)) [ FD ]
Line_21 $$ for (int i = 0; i < x; i++) -->Line_25 $$ if (map.get(i))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int y = Integer.parseInt(sc.next())[ FD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_22 $$ if (i <= z) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ for (int i = 0; i < y; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int z = Integer.parseInt(sc.next())[ CD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_14 $$ map.put(i, true)[ FD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_16 $$ map.put(i, false)[ FD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_9 $$ set.add(Integer.parseInt(sc.next()))[ CD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_21 $$ for (int i = 0; i < x; i++) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_13 $$ if (set.contains(i)) -->Line_14 $$ map.put(i, true)[ CD ]
Line_6 $$ int z = Integer.parseInt(sc.next())-->Line_22 $$ if (i <= z) [ FD ]
Line_11 $$ HashMap<Integer, Boolean> map = new HashMap()-->Line_25 $$ if (map.get(i))[ FD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_13 $$ if (set.contains(i)) [ FD ]
Line_11 $$ HashMap<Integer, Boolean> map = new HashMap()-->Line_14 $$ map.put(i, true)[ FD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_22 $$ if (i <= z) [ FD ]
Line_5 $$ int y = Integer.parseInt(sc.next())-->Line_8 $$ for (int i = 0; i < y; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ int last_half = 0[ CD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_12 $$ for (int i = 0; i < x; i++) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int x = Integer.parseInt(sc.next()) + 1[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_21 $$ for (int i = 0; i < x; i++) [ CD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_14 $$ map.put(i, true)[ FD ]
Line_4 $$ int x = Integer.parseInt(sc.next()) + 1-->Line_21 $$ for (int i = 0; i < x; i++) [ FD ]
Line_22 $$ if (i <= z) -->Line_23 $$ if (map.get(i))[ CD ]
Line_20 $$ int last_half = 0-->Line_25 $$ last_half++[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_28 $$ System.out.println(Math.min(first_half, last_half))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_19 $$ int first_half = 0[ CD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_16 $$ map.put(i, false)[ FD ]
Line_13 $$ if (set.contains(i)) -->Line_16 $$ map.put(i, false)[ CD ]
Line_21 $$ for (int i = 0; i < x; i++) -->Line_22 $$ if (i <= z) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int x = Integer.parseInt(sc.next()) + 1[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ HashSet<Integer> set = new HashSet()[ CD ]
Line_19 $$ int first_half = 0-->Line_28 $$ System.out.println(Math.min(first_half, last_half))[ FD ]
Line_21 $$ for (int i = 0; i < x; i++) -->Line_22 $$ if (i <= z) [ CD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_21 $$ for (int i = 0; i < x; i++) [ FD ]
Line_11 $$ HashMap<Integer, Boolean> map = new HashMap()-->Line_16 $$ map.put(i, false)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ for (int i = 0; i < x; i++) [ CD ]
Line_8 $$ for (int i = 0; i < y; i++) -->Line_25 $$ if (map.get(i))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ HashMap<Integer, Boolean> map = new HashMap()[ CD ]
Line_12 $$ for (int i = 0; i < x; i++) -->Line_13 $$ if (set.contains(i)) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int z = Integer.parseInt(sc.next())[ FD ]
