Line_12 $$ for (int i = 0; i < turn; i++) -->Line_19 $$ line.setLength(0)[ CD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_17 $$ pointA += result == 0 ? 1 : result < 0 ? 0 : 3[ CD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_20 $$ wordA.setLength(0)[ FD ]
Line_7 $$ Collator collator = Collator.getInstance()-->Line_16 $$ result = collator.compare(wordA.toString(), wordB.toString())[ FD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_16 $$ result = collator.compare(wordA.toString(), wordB.toString())[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_13 $$ line.append(br.readLine())[ FD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_15 $$ wordB.append(line.substring(line.indexOf(" ") + 1, line.length()))[ CD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_16 $$ result = collator.compare(wordA.toString(), wordB.toString())[ FD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_21 $$ wordB.setLength(0)[ FD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_14 $$ wordA.append(line.substring(0, line.indexOf(" ")))[ FD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_13 $$ line.append(br.readLine())[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_8 $$ int turn = Integer.parseInt(br.readLine())[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_10 $$ int pointB = 0-->Line_18 $$ pointB += result == 0 ? 1 : result < 0 ? 3 : 0[ FD ]
Line_11 $$ int result = 0-->Line_16 $$ result = collator.compare(wordA.toString(), wordB.toString())[ FD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_16 $$ result = collator.compare(wordA.toString(), wordB.toString())[ FD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_15 $$ wordB.append(line.substring(line.indexOf(" ") + 1, line.length()))[ FD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_21 $$ wordB.setLength(0)[ CD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_20 $$ wordA.setLength(0)[ CD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_15 $$ wordB.append(line.substring(line.indexOf(" ") + 1, line.length()))[ FD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_14 $$ wordA.append(line.substring(0, line.indexOf(" ")))[ CD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_14 $$ wordA.append(line.substring(0, line.indexOf(" ")))[ FD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_19 $$ line.setLength(0)[ FD ]
Line_8 $$ int turn = Integer.parseInt(br.readLine())-->Line_12 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_12 $$ for (int i = 0; i < turn; i++) -->Line_18 $$ pointB += result == 0 ? 1 : result < 0 ? 3 : 0[ CD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_13 $$ line.append(br.readLine())[ FD ]
Line_9 $$ int pointA = 0-->Line_17 $$ pointA += result == 0 ? 1 : result < 0 ? 0 : 3[ FD ]
