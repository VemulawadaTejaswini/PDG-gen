Line_19 $$ sum = sum + L.get(i)-->Line_22 $$ if (sum > max) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_14 $$ max = v-->Line_22 $$ if (sum > max) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_8 $$ L.add(num)[ CD ]
Line_14 $$ max = v-->Line_13 $$ if (v > max) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ for (int i = 0; i < L.size(); i++) [ CD ]
Line_17 $$ int sum = 0-->Line_22 $$ if (sum > max) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_17 $$ int sum = 0-->Line_19 $$ sum = sum + L.get(i)[ FD ]
Line_17 $$ int sum = 0-->Line_21 $$ sum = sum - max[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ List<Integer> L = new ArrayList<Integer>()[ CD ]
Line_19 $$ sum = sum + L.get(i)-->Line_21 $$ sum = sum - max[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < L.size(); i++) -->Line_12 $$ int v = L.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_19 $$ sum = sum + L.get(i)[ FD ]
Line_10 $$ int max = L.get(0)-->Line_22 $$ if (sum > max) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_13 $$ if (v > max) -->Line_14 $$ max = v[ CD ]
Line_12 $$ int v = L.get(i)-->Line_14 $$ max = v[ FD ]
Line_22 $$ if (sum > max) -->Line_25 $$ System.out.println("No")[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int num = sc.nextInt()[ FD ]
Line_12 $$ int v = L.get(i)-->Line_13 $$ if (v > max) [ FD ]
Line_5 $$ List<Integer> L = new ArrayList<Integer>()-->Line_8 $$ L.add(num)[ FD ]
Line_10 $$ int max = L.get(0)-->Line_14 $$ max = v[ FD ]
Line_10 $$ int max = L.get(0)-->Line_13 $$ if (v > max) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_12 $$ int v = L.get(i)[ FD ]
Line_5 $$ List<Integer> L = new ArrayList<Integer>()-->Line_10 $$ int max = L.get(0)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 1; i < L.size(); i++) [ CD ]
Line_5 $$ List<Integer> L = new ArrayList<Integer>()-->Line_12 $$ int v = L.get(i)[ FD ]
Line_10 $$ int max = L.get(0)-->Line_21 $$ sum = sum - max[ FD ]
Line_11 $$ for (int i = 1; i < L.size(); i++) -->Line_12 $$ int v = L.get(i)[ CD ]
Line_18 $$ for (int i = 0; i < L.size(); i++) -->Line_19 $$ sum = sum + L.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_18 $$ for (int i = 0; i < L.size(); i++) [ FD ]
Line_11 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ if (v > max) [ CD ]
Line_7 $$ int num = sc.nextInt()-->Line_8 $$ L.add(num)[ FD ]
Line_11 $$ for (int i = 1; i < L.size(); i++) -->Line_19 $$ sum = sum + L.get(i)[ FD ]
Line_11 $$ for (int i = 1; i < L.size(); i++) -->Line_18 $$ for (int i = 0; i < L.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ int num = sc.nextInt()[ CD ]
Line_5 $$ List<Integer> L = new ArrayList<Integer>()-->Line_18 $$ for (int i = 0; i < L.size(); i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ sum = sum - max[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ int sum = 0[ CD ]
Line_22 $$ if (sum > max) -->Line_23 $$ System.out.println("Yes")[ CD ]
Line_14 $$ max = v-->Line_21 $$ sum = sum - max[ FD ]
Line_21 $$ sum = sum - max-->Line_22 $$ if (sum > max) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_5 $$ List<Integer> L = new ArrayList<Integer>()-->Line_19 $$ sum = sum + L.get(i)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ if (sum > max) [ CD ]
Line_18 $$ for (int i = 0; i < L.size(); i++) -->Line_19 $$ sum = sum + L.get(i)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int max = L.get(0)[ CD ]
Line_5 $$ List<Integer> L = new ArrayList<Integer>()-->Line_11 $$ for (int i = 1; i < L.size(); i++) [ FD ]
