Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ if (!map.containsKey(s[i])) -->Line_14 $$ ans++[ CD ]
Line_13 $$ if (!map.containsKey(s[i])) -->Line_15 $$ map.put(s[i], 1)[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ s[i] = sc.next()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = 1; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ System.out.println(ans)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int ans = 1[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 1; i < n; i++) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ HashMap<String, Integer> map = new HashMap<String, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ s[i] = sc.next()[ FD ]
Line_9 $$ HashMap<String, Integer> map = new HashMap<String, Integer>()-->Line_10 $$ map.put(s[0], 1)[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_12 $$ for (int i = 1; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String[] s = new String[n][ CD ]
Line_11 $$ int ans = 1-->Line_18 $$ System.out.println(ans)[ FD ]
Line_12 $$ for (int i = 1; i < n; i++) -->Line_13 $$ if (!map.containsKey(s[i])) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ map.put(s[0], 1)[ CD ]
Line_9 $$ HashMap<String, Integer> map = new HashMap<String, Integer>()-->Line_15 $$ map.put(s[i], 1)[ FD ]
Line_9 $$ HashMap<String, Integer> map = new HashMap<String, Integer>()-->Line_13 $$ if (!map.containsKey(s[i])) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ int ans = 1-->Line_14 $$ ans++[ FD ]
