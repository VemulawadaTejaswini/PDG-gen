Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ int n, m[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_11 $$ int[] ans = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ m = Integer.parseInt(str[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_18 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ String[] str[ CD ]
Line_7 $$ n = Integer.parseInt(str[0])-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_3 $$ int n, m-->Line_14 $$ for (int j = 0; j < m; j++) [ FD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_23 $$ ans[i] += arr[i][j] * vec[j][ CD ]
Line_3 $$ int n, m-->Line_8 $$ m = Integer.parseInt(str[1])[ FD ]
Line_14 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_14 $$ for (int j = 0; j < m; j++) -->Line_15 $$ arr[i][j] = Integer.parseInt(str2[j])[ CD ]
Line_8 $$ m = Integer.parseInt(str[1])-->Line_14 $$ for (int j = 0; j < m; j++) [ FD ]
Line_18 $$ for (int i = 0; i < m; i++) -->Line_19 $$ vec[i] = Integer.parseInt(br.readLine())[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ n = Integer.parseInt(str[0])[ CD ]
Line_7 $$ n = Integer.parseInt(str[0])-->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_19 $$ vec[i] = Integer.parseInt(br.readLine())[ FD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ str = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_10 $$ int[] vec = new int[m][ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ String[] str2 = br.readLine().split(" ")[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_18 $$ for (int i = 0; i < m; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_18 $$ for (int i = 0; i < m; i++) [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_22 $$ for (int j = 0; j < m; j++) [ CD ]
Line_4 $$ String[] str-->Line_6 $$ str = br.readLine().split(" ")[ FD ]
Line_3 $$ int n, m-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int j = 0; j < m; j++) [ CD ]
Line_26 $$ for (int num : ans) -->Line_27 $$ System.out.println(num)[ FD ]
Line_3 $$ int n, m-->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_9 $$ int[][] arr = new int[n][m][ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ str = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_21 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ m = Integer.parseInt(str[1])-->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ int n, m-->Line_18 $$ for (int i = 0; i < m; i++) [ FD ]
Line_8 $$ m = Integer.parseInt(str[1])-->Line_18 $$ for (int i = 0; i < m; i++) [ FD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ String[] str2 = br.readLine().split(" ")[ FD ]
Line_3 $$ int n, m-->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_3 $$ int n, m-->Line_7 $$ n = Integer.parseInt(str[0])[ FD ]
