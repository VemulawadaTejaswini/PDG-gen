Line_17 $$ deck = sc.nextLine()-->Line_6 $$ if (deck.equals("-")) [ FD ]
Line_4 $$ while (true) -->Line_9 $$ int m = sc.nextInt()[ CD ]
Line_14 $$ deck = part1.concat(part2)-->Line_16 $$ System.out.println(deck)[ FD ]
Line_5 $$ String deck = sc.nextLine()-->Line_12 $$ String part1 = deck.substring(h)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ while (true) [ CD ]
Line_11 $$ int h = sc.nextInt()-->Line_13 $$ String part2 = deck.substring(0, h)[ FD ]
Line_10 $$ for (int i = 0; i < m; i++) -->Line_12 $$ String part1 = deck.substring(h)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_5 $$ String deck = sc.nextLine()-->Line_17 $$ deck = sc.nextLine()[ FD ]
Line_4 $$ while (true) -->Line_5 $$ String deck = sc.nextLine()[ CD ]
Line_4 $$ while (true) -->Line_10 $$ for (int i = 0; i < m; i++) [ CD ]
Line_10 $$ for (int i = 0; i < m; i++) -->Line_14 $$ deck = part1.concat(part2)[ CD ]
Line_14 $$ deck = part1.concat(part2)-->Line_12 $$ String part1 = deck.substring(h)[ FD ]
Line_5 $$ String deck = sc.nextLine()-->Line_6 $$ if (deck.equals("-")) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 0; i < m; i++) -->Line_13 $$ String part2 = deck.substring(0, h)[ CD ]
Line_4 $$ while (true) -->Line_17 $$ deck = sc.nextLine()[ CD ]
Line_13 $$ String part2 = deck.substring(0, h)-->Line_14 $$ deck = part1.concat(part2)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_17 $$ deck = sc.nextLine()[ FD ]
Line_11 $$ int h = sc.nextInt()-->Line_12 $$ String part1 = deck.substring(h)[ FD ]
Line_17 $$ deck = sc.nextLine()-->Line_16 $$ System.out.println(deck)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ int m = sc.nextInt()[ FD ]
Line_9 $$ int m = sc.nextInt()-->Line_10 $$ for (int i = 0; i < m; i++) [ FD ]
Line_5 $$ String deck = sc.nextLine()-->Line_14 $$ deck = part1.concat(part2)[ FD ]
Line_14 $$ deck = part1.concat(part2)-->Line_13 $$ String part2 = deck.substring(0, h)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_19 $$ sc.close()[ FD ]
Line_10 $$ for (int i = 0; i < m; i++) -->Line_11 $$ int h = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ sc.close()[ CD ]
Line_12 $$ String part1 = deck.substring(h)-->Line_14 $$ deck = part1.concat(part2)[ FD ]
Line_14 $$ deck = part1.concat(part2)-->Line_17 $$ deck = sc.nextLine()[ FD ]
Line_4 $$ while (true) -->Line_16 $$ System.out.println(deck)[ CD ]
Line_5 $$ String deck = sc.nextLine()-->Line_16 $$ System.out.println(deck)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String deck = sc.nextLine()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ if (deck.equals("-")) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ int h = sc.nextInt()[ FD ]
Line_5 $$ String deck = sc.nextLine()-->Line_13 $$ String part2 = deck.substring(0, h)[ FD ]
