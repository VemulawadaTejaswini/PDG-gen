Line_17 $$ maxCount = count-->Line_22 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_13 $$ if (h[i] >= h[i + 1]) -->Line_14 $$ count++[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ h[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_19 $$ count = 0-->Line_22 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ sc.close()[ FD ]
Line_22 $$ maxCount = Math.max(maxCount, count)-->Line_23 $$ System.out.println(maxCount)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_16 $$ if (count > maxCount) -->Line_17 $$ maxCount = count[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ sc.close()[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ int count = 0-->Line_19 $$ count = 0[ FD ]
Line_11 $$ int maxCount = -1-->Line_17 $$ maxCount = count[ FD ]
Line_17 $$ maxCount = count-->Line_16 $$ if (count > maxCount) [ FD ]
Line_19 $$ count = 0-->Line_14 $$ count++[ FD ]
Line_13 $$ if (h[i] >= h[i + 1]) -->Line_16 $$ if (count > maxCount) [ CD ]
Line_10 $$ int count = 0-->Line_16 $$ if (count > maxCount) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_13 $$ if (h[i] >= h[i + 1]) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_11 $$ int maxCount = -1-->Line_16 $$ if (count > maxCount) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int count = 0[ CD ]
Line_19 $$ count = 0-->Line_16 $$ if (count > maxCount) [ FD ]
Line_17 $$ maxCount = count-->Line_23 $$ System.out.println(maxCount)[ FD ]
Line_19 $$ count = 0-->Line_17 $$ maxCount = count[ FD ]
Line_10 $$ int count = 0-->Line_14 $$ count++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(maxCount)[ CD ]
Line_13 $$ if (h[i] >= h[i + 1]) -->Line_19 $$ count = 0[ CD ]
Line_10 $$ int count = 0-->Line_17 $$ maxCount = count[ FD ]
Line_11 $$ int maxCount = -1-->Line_22 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_10 $$ int count = 0-->Line_22 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ maxCount = Math.max(maxCount, count)[ CD ]
Line_11 $$ int maxCount = -1-->Line_23 $$ System.out.println(maxCount)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = Integer.parseInt(sc.next())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int maxCount = -1[ CD ]
