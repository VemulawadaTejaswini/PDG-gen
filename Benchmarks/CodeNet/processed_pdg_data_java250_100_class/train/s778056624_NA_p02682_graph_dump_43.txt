Line_8 $$ int maxSum = 0-->Line_12 $$ maxSum += A[ FD ]
Line_10 $$ if (availK - A >= 0) -->Line_12 $$ maxSum += A[ CD ]
Line_12 $$ maxSum += A-->Line_29 $$ maxSum -= availK[ FD ]
Line_9 $$ int availK = K-->Line_30 $$ availK = 0[ FD ]
Line_22 $$ availK = 0-->Line_28 $$ if (availK > 0) [ FD ]
Line_9 $$ int availK = K-->Line_16 $$ availK = 0[ FD ]
Line_22 $$ availK = 0-->Line_25 $$ availK -= C[ FD ]
Line_25 $$ availK -= C-->Line_29 $$ maxSum -= availK[ FD ]
Line_8 $$ int maxSum = 0-->Line_32 $$ System.out.println(maxSum)[ FD ]
Line_11 $$ availK -= A-->Line_21 $$ if (availK > 0) [ FD ]
Line_22 $$ availK = 0-->Line_29 $$ maxSum -= availK[ FD ]
Line_25 $$ availK -= C-->Line_28 $$ if (availK > 0) [ FD ]
Line_15 $$ maxSum += availK-->Line_29 $$ maxSum -= availK[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int C = sc.nextInt()[ FD ]
Line_11 $$ availK -= A-->Line_14 $$ if (availK > 0) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int B = sc.nextInt()[ FD ]
Line_4 $$ int A = sc.nextInt()-->Line_11 $$ availK -= A[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ if (availK - C >= 0) [ CD ]
Line_16 $$ availK = 0-->Line_25 $$ availK -= C[ FD ]
Line_10 $$ if (availK - A >= 0) -->Line_14 $$ if (availK > 0) [ CD ]
Line_16 $$ availK = 0-->Line_21 $$ if (availK > 0) [ FD ]
Line_11 $$ availK -= A-->Line_29 $$ maxSum -= availK[ FD ]
Line_15 $$ maxSum += availK-->Line_32 $$ System.out.println(maxSum)[ FD ]
Line_11 $$ availK -= A-->Line_19 $$ availK -= B[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_32 $$ System.out.println(maxSum)[ CD ]
Line_9 $$ int availK = K-->Line_15 $$ maxSum += availK[ FD ]
Line_9 $$ int availK = K-->Line_19 $$ availK -= B[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int C = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int availK = K[ CD ]
Line_9 $$ int availK = K-->Line_14 $$ if (availK > 0) [ FD ]
Line_12 $$ maxSum += A-->Line_15 $$ maxSum += availK[ FD ]
Line_10 $$ if (availK - A >= 0) -->Line_11 $$ availK -= A[ CD ]
Line_25 $$ availK -= C-->Line_30 $$ availK = 0[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int K = sc.nextInt()[ FD ]
Line_26 $$ maxSum -= C-->Line_29 $$ maxSum -= availK[ FD ]
Line_24 $$ if (availK - C >= 0) -->Line_25 $$ availK -= C[ CD ]
Line_12 $$ maxSum += A-->Line_26 $$ maxSum -= C[ FD ]
Line_6 $$ int C = sc.nextInt()-->Line_26 $$ maxSum -= C[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ if (availK - B >= 0) [ CD ]
Line_24 $$ if (availK - C >= 0) -->Line_26 $$ maxSum -= C[ CD ]
Line_24 $$ if (availK - C >= 0) -->Line_28 $$ if (availK > 0) [ CD ]
Line_8 $$ int maxSum = 0-->Line_29 $$ maxSum -= availK[ FD ]
Line_16 $$ availK = 0-->Line_29 $$ maxSum -= availK[ FD ]
Line_19 $$ availK -= B-->Line_29 $$ maxSum -= availK[ FD ]
Line_11 $$ availK -= A-->Line_22 $$ availK = 0[ FD ]
Line_18 $$ if (availK - B >= 0) -->Line_19 $$ availK -= B[ CD ]
Line_4 $$ int A = sc.nextInt()-->Line_12 $$ maxSum += A[ FD ]
Line_28 $$ if (availK > 0) -->Line_30 $$ availK = 0[ CD ]
Line_5 $$ int B = sc.nextInt()-->Line_19 $$ availK -= B[ FD ]
Line_8 $$ int maxSum = 0-->Line_26 $$ maxSum -= C[ FD ]
Line_8 $$ int maxSum = 0-->Line_15 $$ maxSum += availK[ FD ]
Line_16 $$ availK = 0-->Line_28 $$ if (availK > 0) [ FD ]
Line_12 $$ maxSum += A-->Line_32 $$ System.out.println(maxSum)[ FD ]
Line_26 $$ maxSum -= C-->Line_32 $$ System.out.println(maxSum)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int A = sc.nextInt()[ FD ]
Line_19 $$ availK -= B-->Line_21 $$ if (availK > 0) [ FD ]
Line_18 $$ if (availK - B >= 0) -->Line_21 $$ if (availK > 0) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int A = sc.nextInt()[ CD ]
Line_15 $$ maxSum += availK-->Line_26 $$ maxSum -= C[ FD ]
Line_11 $$ availK -= A-->Line_15 $$ maxSum += availK[ FD ]
Line_6 $$ int C = sc.nextInt()-->Line_25 $$ availK -= C[ FD ]
Line_28 $$ if (availK > 0) -->Line_29 $$ maxSum -= availK[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int K = sc.nextInt()[ CD ]
Line_16 $$ availK = 0-->Line_22 $$ availK = 0[ FD ]
Line_14 $$ if (availK > 0) -->Line_15 $$ maxSum += availK[ CD ]
Line_19 $$ availK -= B-->Line_25 $$ availK -= C[ FD ]
Line_9 $$ int availK = K-->Line_22 $$ availK = 0[ FD ]
Line_22 $$ availK = 0-->Line_30 $$ availK = 0[ FD ]
Line_14 $$ if (availK > 0) -->Line_16 $$ availK = 0[ CD ]
Line_29 $$ maxSum -= availK-->Line_32 $$ System.out.println(maxSum)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int maxSum = 0[ CD ]
Line_9 $$ int availK = K-->Line_29 $$ maxSum -= availK[ FD ]
Line_11 $$ availK -= A-->Line_30 $$ availK = 0[ FD ]
Line_19 $$ availK -= B-->Line_22 $$ availK = 0[ FD ]
Line_11 $$ availK -= A-->Line_16 $$ availK = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ if (availK - A >= 0) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_19 $$ availK -= B-->Line_28 $$ if (availK > 0) [ FD ]
Line_9 $$ int availK = K-->Line_11 $$ availK -= A[ FD ]
Line_21 $$ if (availK > 0) -->Line_22 $$ availK = 0[ CD ]
Line_11 $$ availK -= A-->Line_28 $$ if (availK > 0) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_19 $$ availK -= B-->Line_30 $$ availK = 0[ FD ]
Line_16 $$ availK = 0-->Line_30 $$ availK = 0[ FD ]
Line_9 $$ int availK = K-->Line_28 $$ if (availK > 0) [ FD ]
Line_16 $$ availK = 0-->Line_19 $$ availK -= B[ FD ]
Line_9 $$ int availK = K-->Line_25 $$ availK -= C[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int B = sc.nextInt()[ CD ]
Line_11 $$ availK -= A-->Line_25 $$ availK -= C[ FD ]
Line_9 $$ int availK = K-->Line_21 $$ if (availK > 0) [ FD ]
