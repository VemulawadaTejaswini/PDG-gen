Line_2 $$ public static void main(String args[]) -->Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)[ CD ]
Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)-->Line_16 $$ System.out.println(answer.toString())[ FD ]
Line_7 $$ BigDecimal NBC = new BigDecimal(N)-->Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))[ FD ]
Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)-->Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))[ FD ]
Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))-->Line_16 $$ System.out.println(answer.toString())[ FD ]
Line_8 $$ BigDecimal ABC = new BigDecimal(A)-->Line_11 $$ if (ABC.compareTo(NBC.remainder(ABC.add(BBC))) >= 0) [ FD ]
Line_8 $$ BigDecimal ABC = new BigDecimal(A)-->Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)[ FD ]
Line_8 $$ BigDecimal ABC = new BigDecimal(A)-->Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))[ FD ]
Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))-->Line_14 $$ answer = answer.add(ABC)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ BigDecimal NBC = new BigDecimal(N)[ CD ]
Line_14 $$ answer = answer.add(ABC)-->Line_16 $$ System.out.println(answer.toString())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ String A = sc.next()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_17 $$ sc.close()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ BigDecimal ABC = new BigDecimal(A)[ CD ]
Line_9 $$ BigDecimal BBC = new BigDecimal(B)-->Line_11 $$ if (ABC.compareTo(NBC.remainder(ABC.add(BBC))) >= 0) [ FD ]
Line_9 $$ BigDecimal BBC = new BigDecimal(B)-->Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ String N = sc.next()[ CD ]
Line_7 $$ BigDecimal NBC = new BigDecimal(N)-->Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)[ FD ]
Line_11 $$ if (ABC.compareTo(NBC.remainder(ABC.add(BBC))) >= 0) -->Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_9 $$ BigDecimal BBC = new BigDecimal(B)[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String A = sc.next()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String B = sc.next()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_17 $$ sc.close()[ FD ]
Line_7 $$ BigDecimal NBC = new BigDecimal(N)-->Line_11 $$ if (ABC.compareTo(NBC.remainder(ABC.add(BBC))) >= 0) [ FD ]
Line_10 $$ BigDecimal answer = NBC.divide(ABC.add(BBC), 0, RoundingMode.DOWN).multiply(ABC)-->Line_14 $$ answer = answer.add(ABC)[ FD ]
Line_11 $$ if (ABC.compareTo(NBC.remainder(ABC.add(BBC))) >= 0) -->Line_14 $$ answer = answer.add(ABC)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_16 $$ System.out.println(answer.toString())[ CD ]
Line_8 $$ BigDecimal ABC = new BigDecimal(A)-->Line_14 $$ answer = answer.add(ABC)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ String B = sc.next()[ CD ]
Line_9 $$ BigDecimal BBC = new BigDecimal(B)-->Line_12 $$ answer = answer.add(NBC.remainder(ABC.add(BBC)))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String N = sc.next()[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ if (ABC.compareTo(NBC.remainder(ABC.add(BBC))) >= 0) [ CD ]
