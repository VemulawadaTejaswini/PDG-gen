Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_15 $$ cards = sb.toString()[ FD ]
Line_11 $$ int h = Integer.parseInt(br.readLine())-->Line_13 $$ sb.append(cards.substring(h, cards.length()))[ FD ]
Line_1 $$ class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ sb.append(cards.substring(0, h))[ CD ]
Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_17 $$ System.out.println(cards)[ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ int shuffle = Integer.parseInt(br.readLine())[ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ int h = Integer.parseInt(br.readLine())[ FD ]
Line_7 $$ String cards = ""-->Line_14 $$ sb.append(cards.substring(0, h))[ FD ]
Line_9 $$ int shuffle = Integer.parseInt(br.readLine())-->Line_10 $$ for (int i = 0; i < shuffle; i++) [ FD ]
Line_7 $$ String cards = ""-->Line_8 $$ while ((cards = br.readLine()).equals("-") == false) [ FD ]
Line_11 $$ int h = Integer.parseInt(br.readLine())-->Line_14 $$ sb.append(cards.substring(0, h))[ FD ]
Line_15 $$ cards = sb.toString()-->Line_14 $$ sb.append(cards.substring(0, h))[ FD ]
Line_7 $$ String cards = ""-->Line_15 $$ cards = sb.toString()[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ cards = sb.toString()[ FD ]
Line_7 $$ String cards = ""-->Line_13 $$ sb.append(cards.substring(h, cards.length()))[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(cards.substring(h, cards.length()))[ FD ]
Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_13 $$ sb.append(cards.substring(h, cards.length()))[ FD ]
Line_12 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ sb.append(cards.substring(0, h))[ FD ]
Line_7 $$ String cards = ""-->Line_17 $$ System.out.println(cards)[ FD ]
Line_6 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ while ((cards = br.readLine()).equals("-") == false) [ FD ]
Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_17 $$ System.out.println(cards)[ CD ]
Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_14 $$ sb.append(cards.substring(0, h))[ FD ]
Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_9 $$ int shuffle = Integer.parseInt(br.readLine())[ CD ]
Line_15 $$ cards = sb.toString()-->Line_13 $$ sb.append(cards.substring(h, cards.length()))[ FD ]
Line_8 $$ while ((cards = br.readLine()).equals("-") == false) -->Line_10 $$ for (int i = 0; i < shuffle; i++) [ CD ]
Line_10 $$ for (int i = 0; i < shuffle; i++) -->Line_13 $$ sb.append(cards.substring(h, cards.length()))[ CD ]
Line_15 $$ cards = sb.toString()-->Line_17 $$ System.out.println(cards)[ FD ]
Line_10 $$ for (int i = 0; i < shuffle; i++) -->Line_11 $$ int h = Integer.parseInt(br.readLine())[ CD ]
Line_10 $$ for (int i = 0; i < shuffle; i++) -->Line_12 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_10 $$ for (int i = 0; i < shuffle; i++) -->Line_15 $$ cards = sb.toString()[ CD ]
