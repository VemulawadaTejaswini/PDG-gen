Line_8 $$ double sum = 0-->Line_14 $$ if (4 * M * arr[N - i] < sum) [ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] str = br.readLine().split(" ")[ FD ]
Line_19 $$ if (flag)-->Line_20 $$ System.out.println("No")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ StringTokenizer st = new StringTokenizer(br.readLine(), " ")[ FD ]
Line_6 $$ int M = Integer.parseInt(str[1])-->Line_13 $$ for (int i = 1; i <= M; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String[] str = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ StringTokenizer st = new StringTokenizer(br.readLine(), " ")[ CD ]
Line_8 $$ double sum = 0-->Line_10 $$ sum += (arr[i] = Integer.parseInt(st.nextToken()))[ FD ]
Line_10 $$ sum += (arr[i] = Integer.parseInt(st.nextToken()))-->Line_14 $$ if (4 * M * arr[N - i] < sum) [ FD ]
Line_12 $$ boolean flag = true-->Line_15 $$ flag = false[ FD ]
Line_10 $$ for (int i = 0; i < N; i++) sum += (arr[i] = Integer.parseInt(st.nextToken()))-->Line_13 $$ for (int i = 1; i <= M; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= M; i++) -->Line_14 $$ if (4 * M * arr[N - i] < sum) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_5 $$ int N = Integer.parseInt(str[0])-->Line_10 $$ for (int i = 0; i < N; i++) sum += (arr[i] = Integer.parseInt(st.nextToken()))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ Arrays.sort(arr)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ boolean flag = true[ CD ]
Line_7 $$ int[] arr = new int[N]-->Line_11 $$ Arrays.sort(arr)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int N = Integer.parseInt(str[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int M = Integer.parseInt(str[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ double sum = 0[ CD ]
Line_14 $$ if (4 * M * arr[N - i] < sum) -->Line_15 $$ flag = false[ CD ]
Line_9 $$ StringTokenizer st = new StringTokenizer(br.readLine(), " ")-->Line_10 $$ sum += (arr[i] = Integer.parseInt(st.nextToken()))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ for (int i = 1; i <= M; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int[] arr = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < N; i++) sum += (arr[i] = Integer.parseInt(st.nextToken()))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_19 $$ if (flag)[ CD ]
