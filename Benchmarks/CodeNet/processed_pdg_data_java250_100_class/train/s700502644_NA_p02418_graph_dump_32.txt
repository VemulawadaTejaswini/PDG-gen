Line_8 $$ int tmp-->Line_12 $$ if (tmp == ring.length) [ FD ]
Line_13 $$ tmp = 0-->Line_12 $$ if (tmp == ring.length) [ FD ]
Line_10 $$ tmp = i-->Line_12 $$ if (tmp == ring.length) [ FD ]
Line_10 $$ tmp = i-->Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) [ FD ]
Line_9 $$ for (int i = 0; i < ring.length; i++) -->Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_13 $$ tmp = 0-->Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) [ FD ]
Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ char[] ring = input.readLine().toCharArray()[ FD ]
Line_17 $$ if (j == pattern.length - 1) -->Line_18 $$ flag = true[ CD ]
Line_10 $$ tmp = i-->Line_13 $$ tmp = 0[ FD ]
Line_8 $$ int tmp-->Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) [ FD ]
Line_9 $$ for (int i = 0; i < ring.length; i++) -->Line_21 $$ if (flag) [ CD ]
Line_9 $$ for (int i = 0; i < ring.length; i++) -->Line_10 $$ tmp = i[ CD ]
Line_7 $$ boolean flag = false-->Line_18 $$ flag = true[ FD ]
Line_8 $$ int tmp-->Line_13 $$ tmp = 0[ FD ]
Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) -->Line_12 $$ if (tmp == ring.length) [ CD ]
Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ char[] pattern = input.readLine().toCharArray()[ FD ]
Line_8 $$ int tmp-->Line_10 $$ tmp = i[ FD ]
Line_9 $$ for (int i = 0; i < ring.length; i++) -->Line_10 $$ tmp = i[ FD ]
Line_15 $$ if (ring[tmp] != pattern[j]) -->Line_17 $$ if (j == pattern.length - 1) [ CD ]
Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) -->Line_15 $$ if (ring[tmp] != pattern[j]) [ CD ]
Line_12 $$ if (tmp == ring.length) -->Line_13 $$ tmp = 0[ CD ]
Line_11 $$ for (int j = 0; j < pattern.length; tmp++, j++) -->Line_17 $$ if (j == pattern.length - 1) [ FD ]
