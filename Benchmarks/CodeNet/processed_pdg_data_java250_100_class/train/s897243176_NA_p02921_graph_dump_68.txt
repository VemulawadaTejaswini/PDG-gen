Line_10 $$ if (splitS[i].equals(splitT[i])) -->Line_11 $$ match++[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int match = 0[ CD ]
Line_5 $$ String T = sc.next()-->Line_7 $$ String[] splitT = T.split("", 0)[ FD ]
Line_8 $$ int match = 0-->Line_11 $$ match++[ FD ]
Line_8 $$ int match = 0-->Line_14 $$ System.out.println(match)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String S = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ String[] splitS = S.split("", 0)[ CD ]
Line_4 $$ String S = sc.next()-->Line_6 $$ String[] splitS = S.split("", 0)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ String[] splitT = T.split("", 0)[ CD ]
Line_9 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ if (splitS[i].equals(splitT[i])) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ for (int i = 0; i < splitS.length; i++) [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String T = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ System.out.println(match)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String T = sc.next()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String S = sc.next()[ CD ]
