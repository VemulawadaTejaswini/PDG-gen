Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ CD ]
Line_12 $$ for (int qw = 0; qw < K; qw++) -->Line_15 $$ int[] arr = new int[d][ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_10 $$ for (int i = 1; i <= N; i++) set.add(i)[ CD ]
Line_9 $$ HashSet<Integer> set = new HashSet<Integer>()-->Line_11 $$ set.add(i)[ FD ]
Line_9 $$ HashSet<Integer> set = new HashSet<Integer>()-->Line_20 $$ if (set.contains(x))[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_23 $$ System.out.println(set.size())[ CD ]
Line_9 $$ HashSet<Integer> set = new HashSet<Integer>()-->Line_21 $$ set.remove(x)[ FD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_8 $$ int K = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int N = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 1; i <= N; i++) set.add(i)[ FD ]
Line_17 $$ for (int i = 0; i < d; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_18 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_9 $$ HashSet<Integer> set = new HashSet<Integer>()[ CD ]
Line_10 $$ for (int i = 1; i <= N; i++) set.add(i)-->Line_11 $$ set.add(i)[ FD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_14 $$ int d = Integer.parseInt(infile.readLine())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_18 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_12 $$ for (int qw = 0; qw < K; qw++) -->Line_14 $$ int d = Integer.parseInt(infile.readLine())[ CD ]
Line_20 $$ if (set.contains(x))-->Line_21 $$ set.remove(x)[ CD ]
Line_14 $$ int d = Integer.parseInt(infile.readLine())-->Line_17 $$ for (int i = 0; i < d; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_16 $$ st = new StringTokenizer(infile.readLine())-->Line_18 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) set.add(i)-->Line_17 $$ for (int i = 0; i < d; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_16 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_9 $$ HashSet<Integer> set = new HashSet<Integer>()-->Line_23 $$ System.out.println(set.size())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_12 $$ for (int qw = 0; qw < K; qw++) [ CD ]
Line_10 $$ for (int i = 1; i <= N; i++) set.add(i)-->Line_11 $$ set.add(i)[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_16 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_12 $$ for (int qw = 0; qw < K; qw++) -->Line_16 $$ st = new StringTokenizer(infile.readLine())[ CD ]
Line_12 $$ for (int qw = 0; qw < K; qw++) -->Line_17 $$ for (int i = 0; i < d; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_8 $$ int K = Integer.parseInt(st.nextToken())[ FD ]
Line_8 $$ int K = Integer.parseInt(st.nextToken())-->Line_12 $$ for (int qw = 0; qw < K; qw++) [ FD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ FD ]
