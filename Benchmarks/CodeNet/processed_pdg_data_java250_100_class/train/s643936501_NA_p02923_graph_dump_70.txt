Line_6 $$ int moves = 0-->Line_15 $$ moves = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int moves = 0[ CD ]
Line_3 $$ Scanner s = new Scanner(System.in)-->Line_9 $$ long in = s.nextLong()[ FD ]
Line_15 $$ moves = 0-->Line_11 $$ moves++[ FD ]
Line_9 $$ long in = s.nextLong()-->Line_17 $$ prev = in[ FD ]
Line_10 $$ if (in <= prev)-->Line_13 $$ if (moves > maxMoves)[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_17 $$ prev = in[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = s.nextInt()[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ int maxMoves = 0-->Line_13 $$ if (moves > maxMoves)[ FD ]
Line_14 $$ maxMoves = moves-->Line_19 $$ System.out.println(Math.max(moves, maxMoves))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner s = new Scanner(System.in)[ CD ]
Line_6 $$ int moves = 0-->Line_14 $$ maxMoves = moves[ FD ]
Line_5 $$ long prev = 0-->Line_17 $$ prev = in[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ if (in <= prev)[ CD ]
Line_15 $$ moves = 0-->Line_14 $$ maxMoves = moves[ FD ]
Line_10 $$ if (in <= prev)-->Line_15 $$ moves = 0[ CD ]
Line_5 $$ long prev = 0-->Line_10 $$ if (in <= prev)[ FD ]
Line_3 $$ Scanner s = new Scanner(System.in)-->Line_4 $$ int n = s.nextInt()[ FD ]
Line_6 $$ int moves = 0-->Line_19 $$ System.out.println(Math.max(moves, maxMoves))[ FD ]
Line_17 $$ prev = in-->Line_10 $$ if (in <= prev)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int maxMoves = 0[ CD ]
Line_10 $$ if (in <= prev)-->Line_11 $$ moves++[ CD ]
Line_13 $$ if (moves > maxMoves)-->Line_14 $$ maxMoves = moves[ CD ]
Line_9 $$ long in = s.nextLong()-->Line_10 $$ if (in <= prev)[ FD ]
Line_14 $$ maxMoves = moves-->Line_13 $$ if (moves > maxMoves)[ FD ]
Line_6 $$ int moves = 0-->Line_11 $$ moves++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long prev = 0[ CD ]
Line_7 $$ int maxMoves = 0-->Line_19 $$ System.out.println(Math.max(moves, maxMoves))[ FD ]
Line_6 $$ int moves = 0-->Line_13 $$ if (moves > maxMoves)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_4 $$ int n = s.nextInt()-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ int maxMoves = 0-->Line_14 $$ maxMoves = moves[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ long in = s.nextLong()[ CD ]
Line_15 $$ moves = 0-->Line_19 $$ System.out.println(Math.max(moves, maxMoves))[ FD ]
Line_15 $$ moves = 0-->Line_13 $$ if (moves > maxMoves)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ System.out.println(Math.max(moves, maxMoves))[ CD ]
