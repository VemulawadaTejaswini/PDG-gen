Line_4 $$ while (true) -->Line_5 $$ String[] lines = br.readLine().split(" ")[ CD ]
Line_4 $$ while (true) -->Line_8 $$ if (n == 0 && x == 0) [ CD ]
Line_13 $$ for (int i = Math.max(1, x - n - (n - 1)); i <= Math.min(n - 2, x / 3); i++) -->Line_14 $$ for (int j = Math.max(i + 1, x - n - i); j <= Math.min(n - 1, (x - i) / 2); j++) [ CD ]
Line_4 $$ while (true) -->Line_13 $$ for (int i = Math.max(1, x - n - (n - 1)); i <= Math.min(n - 2, x / 3); i++) [ CD ]
Line_4 $$ while (true) -->Line_7 $$ int x = Integer.parseInt(lines[1])[ CD ]
Line_14 $$ for (int j = Math.max(i + 1, x - n - i); j <= Math.min(n - 1, (x - i) / 2); j++) -->Line_16 $$ if (k <= n && k > j) [ CD ]
Line_4 $$ while (true) -->Line_21 $$ System.out.println(count)[ CD ]
Line_11 $$ int count = 0-->Line_21 $$ System.out.println(count)[ FD ]
Line_4 $$ while (true) -->Line_12 $$ int m = 0[ CD ]
Line_4 $$ while (true) -->Line_6 $$ int n = Integer.parseInt(lines[0])[ CD ]
Line_14 $$ for (int j = Math.max(i + 1, x - n - i); j <= Math.min(n - 1, (x - i) / 2); j++) -->Line_15 $$ int k = x - i - j[ CD ]
Line_16 $$ if (k <= n && k > j) -->Line_17 $$ count++[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ while (true) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] lines = br.readLine().split(" ")[ FD ]
Line_11 $$ int count = 0-->Line_17 $$ count++[ FD ]
Line_4 $$ while (true) -->Line_11 $$ int count = 0[ CD ]
