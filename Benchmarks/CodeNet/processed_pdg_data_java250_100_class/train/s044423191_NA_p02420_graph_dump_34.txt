Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) -->Line_29 $$ card.delete(0, card.length())[ CD ]
Line_8 $$ String h = scan.nextLine()-->Line_14 $$ card.append(card.substring(0, Integer.parseInt(h)))[ FD ]
Line_3 $$ StringBuilder card = new StringBuilder()-->Line_29 $$ card.delete(0, card.length())[ FD ]
Line_3 $$ StringBuilder card = new StringBuilder()-->Line_14 $$ card.append(card.substring(0, Integer.parseInt(h)))[ FD ]
Line_7 $$ int shuffle = Integer.parseInt(scan.nextLine())-->Line_13 $$ while (i < shuffle) [ FD ]
Line_12 $$ while (true) -->Line_13 $$ while (i < shuffle) [ CD ]
Line_9 $$ int i = 0-->Line_22 $$ i++[ FD ]
Line_13 $$ while (i < shuffle) -->Line_15 $$ card.delete(0, Integer.parseInt(h))[ CD ]
Line_20 $$ h = scan.nextLine()-->Line_16 $$ if (h.equals("-") || i == (shuffle - 1)) [ FD ]
Line_11 $$ String hoge = ""-->Line_24 $$ hoge = scan.nextLine()[ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ card.append(scan.nextLine())[ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ String h = scan.nextLine()[ FD ]
Line_24 $$ hoge = scan.nextLine()-->Line_30 $$ card.append(hoge)[ FD ]
Line_24 $$ hoge = scan.nextLine()-->Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) [ FD ]
Line_13 $$ while (i < shuffle) -->Line_14 $$ card.append(card.substring(0, Integer.parseInt(h)))[ CD ]
Line_12 $$ while (true) -->Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) [ CD ]
Line_8 $$ String h = scan.nextLine()-->Line_20 $$ h = scan.nextLine()[ FD ]
Line_7 $$ int shuffle = Integer.parseInt(scan.nextLine())-->Line_31 $$ shuffle = Integer.parseInt(scan.nextLine())[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ int i = 0-->Line_28 $$ i = 0[ FD ]
Line_20 $$ h = scan.nextLine()-->Line_32 $$ h = scan.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_3 $$ StringBuilder card = new StringBuilder()-->Line_15 $$ card.delete(0, Integer.parseInt(h))[ FD ]
Line_12 $$ while (true) -->Line_24 $$ hoge = scan.nextLine()[ CD ]
Line_11 $$ String hoge = ""-->Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) [ FD ]
Line_8 $$ String h = scan.nextLine()-->Line_16 $$ if (h.equals("-") || i == (shuffle - 1)) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ while (true) [ CD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ int shuffle = Integer.parseInt(scan.nextLine())[ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_20 $$ h = scan.nextLine()[ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_32 $$ h = scan.nextLine()[ FD ]
Line_4 $$ StringBuilder answer = new StringBuilder()-->Line_35 $$ System.out.print(answer.toString())[ FD ]
Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) -->Line_28 $$ i = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_35 $$ System.out.print(answer.toString())[ CD ]
Line_3 $$ StringBuilder card = new StringBuilder()-->Line_30 $$ card.append(hoge)[ FD ]
Line_8 $$ String h = scan.nextLine()-->Line_15 $$ card.delete(0, Integer.parseInt(h))[ FD ]
Line_16 $$ if (h.equals("-") || i == (shuffle - 1)) -->Line_17 $$ answer.append(card.toString() + "\n")[ CD ]
Line_9 $$ int i = 0-->Line_13 $$ while (i < shuffle) [ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_31 $$ shuffle = Integer.parseInt(scan.nextLine())[ FD ]
Line_13 $$ while (i < shuffle) -->Line_16 $$ if (h.equals("-") || i == (shuffle - 1)) [ CD ]
Line_16 $$ if (h.equals("-") || i == (shuffle - 1)) -->Line_20 $$ h = scan.nextLine()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ StringBuilder answer = new StringBuilder()[ CD ]
Line_11 $$ String hoge = ""-->Line_30 $$ card.append(hoge)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int i = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ StringBuilder card = new StringBuilder()[ CD ]
Line_13 $$ while (i < shuffle) -->Line_22 $$ i++[ CD ]
Line_8 $$ String h = scan.nextLine()-->Line_32 $$ h = scan.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ card.append(scan.nextLine())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int shuffle = Integer.parseInt(scan.nextLine())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int w = 0[ CD ]
Line_4 $$ StringBuilder answer = new StringBuilder()-->Line_17 $$ answer.append(card.toString() + "\n")[ FD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_24 $$ hoge = scan.nextLine()[ FD ]
Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) -->Line_30 $$ card.append(hoge)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ String h = scan.nextLine()[ CD ]
Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) -->Line_32 $$ h = scan.nextLine()[ CD ]
Line_3 $$ StringBuilder card = new StringBuilder()-->Line_6 $$ card.append(scan.nextLine())[ FD ]
Line_20 $$ h = scan.nextLine()-->Line_15 $$ card.delete(0, Integer.parseInt(h))[ FD ]
Line_25 $$ if (i == (shuffle - 1) && hoge.equals("-")) -->Line_31 $$ shuffle = Integer.parseInt(scan.nextLine())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ String hoge = ""[ CD ]
Line_3 $$ StringBuilder card = new StringBuilder()-->Line_17 $$ answer.append(card.toString() + "\n")[ FD ]
Line_20 $$ h = scan.nextLine()-->Line_14 $$ card.append(card.substring(0, Integer.parseInt(h)))[ FD ]
