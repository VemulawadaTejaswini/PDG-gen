Line_4 $$ StringTokenizer str = new StringTokenizer(bfr.readLine())-->Line_6 $$ str = new StringTokenizer(bfr.readLine())[ FD ]
Line_5 $$ int N = Integer.parseInt(str.nextToken())-->Line_12 $$ if (S.substring(0, (N / 2)).equals(S.substring(N / 2, N))) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringTokenizer str = new StringTokenizer(bfr.readLine())[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader bfr = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ str = new StringTokenizer(bfr.readLine())[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ StringTokenizer str = new StringTokenizer(bfr.readLine())-->Line_5 $$ int N = Integer.parseInt(str.nextToken())[ FD ]
Line_12 $$ if (S.substring(0, (N / 2)).equals(S.substring(N / 2, N))) -->Line_13 $$ System.out.println("Yes")[ CD ]
Line_8 $$ if (N % 2 == 1) -->Line_9 $$ System.out.println("No")[ CD ]
Line_4 $$ StringTokenizer str = new StringTokenizer(bfr.readLine())-->Line_7 $$ String S = str.nextToken()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ if (N % 2 == 1) [ CD ]
Line_12 $$ if (S.substring(0, (N / 2)).equals(S.substring(N / 2, N))) -->Line_16 $$ System.out.println("No")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ String S = str.nextToken()[ CD ]
Line_8 $$ if (N % 2 == 1) -->Line_12 $$ if (S.substring(0, (N / 2)).equals(S.substring(N / 2, N))) [ CD ]
Line_3 $$ BufferedReader bfr = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ str = new StringTokenizer(bfr.readLine())[ FD ]
Line_3 $$ BufferedReader bfr = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ StringTokenizer str = new StringTokenizer(bfr.readLine())[ FD ]
Line_7 $$ String S = str.nextToken()-->Line_12 $$ if (S.substring(0, (N / 2)).equals(S.substring(N / 2, N))) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int N = Integer.parseInt(str.nextToken())[ CD ]
Line_6 $$ str = new StringTokenizer(bfr.readLine())-->Line_7 $$ String S = str.nextToken()[ FD ]
