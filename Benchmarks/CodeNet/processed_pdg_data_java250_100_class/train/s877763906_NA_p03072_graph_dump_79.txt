Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int count = 1[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())[ CD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_11 $$ if (value >= max)[ CD ]
Line_7 $$ int max = Integer.parseInt(tokenizer.nextToken())-->Line_13 $$ max = Math.max(max, value)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ System.out.println(count)[ CD ]
Line_13 $$ max = Math.max(max, value)-->Line_11 $$ if (value >= max)[ FD ]
Line_4 $$ int n = Integer.parseInt(input.readLine())-->Line_9 $$ for (int i = 1; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int max = Integer.parseInt(tokenizer.nextToken())[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int value[ CD ]
Line_8 $$ int value-->Line_10 $$ value = Integer.parseInt(tokenizer.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_6 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())-->Line_7 $$ int max = Integer.parseInt(tokenizer.nextToken())[ FD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ int count = 1-->Line_12 $$ count++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ for (int i = 1; i < n; i++) [ CD ]
Line_10 $$ value = Integer.parseInt(tokenizer.nextToken())-->Line_11 $$ if (value >= max)[ FD ]
Line_8 $$ int value-->Line_13 $$ max = Math.max(max, value)[ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_13 $$ max = Math.max(max, value)[ CD ]
Line_7 $$ int max = Integer.parseInt(tokenizer.nextToken())-->Line_11 $$ if (value >= max)[ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_10 $$ value = Integer.parseInt(tokenizer.nextToken())[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(input.readLine())[ FD ]
Line_5 $$ int count = 1-->Line_15 $$ System.out.println(count)[ FD ]
Line_6 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())-->Line_10 $$ value = Integer.parseInt(tokenizer.nextToken())[ FD ]
Line_11 $$ if (value >= max)-->Line_12 $$ count++[ CD ]
Line_8 $$ int value-->Line_11 $$ if (value >= max)[ FD ]
Line_10 $$ value = Integer.parseInt(tokenizer.nextToken())-->Line_13 $$ max = Math.max(max, value)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int n = Integer.parseInt(input.readLine())[ CD ]
