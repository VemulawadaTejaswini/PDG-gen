Line_13 $$ alf = tmp + tmpSub-->Line_11 $$ String tmpSub = alf.substring(0, subNum)[ FD ]
Line_10 $$ int subNum = sc.nextInt()-->Line_11 $$ String tmpSub = alf.substring(0, subNum)[ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_11 $$ String tmpSub = alf.substring(0, subNum)[ CD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_13 $$ alf = tmp + tmpSub[ CD ]
Line_11 $$ String tmpSub = alf.substring(0, subNum)-->Line_13 $$ alf = tmp + tmpSub[ FD ]
Line_12 $$ String tmp = alf.substring(subNum)-->Line_13 $$ alf = tmp + tmpSub[ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_10 $$ int subNum = sc.nextInt()[ CD ]
Line_4 $$ while (sc.hasNext()) -->Line_9 $$ for (int i = 0; i < m; i++) [ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_4 $$ while (sc.hasNext()) -->Line_6 $$ if (alf.equals("-"))[ CD ]
Line_13 $$ alf = tmp + tmpSub-->Line_12 $$ String tmp = alf.substring(subNum)[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_5 $$ String alf = sc.next()[ CD ]
Line_5 $$ String alf = sc.next()-->Line_12 $$ String tmp = alf.substring(subNum)[ FD ]
Line_5 $$ String alf = sc.next()-->Line_11 $$ String tmpSub = alf.substring(0, subNum)[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_15 $$ System.out.println(alf)[ CD ]
Line_5 $$ String alf = sc.next()-->Line_13 $$ alf = tmp + tmpSub[ FD ]
Line_13 $$ alf = tmp + tmpSub-->Line_15 $$ System.out.println(alf)[ FD ]
Line_10 $$ int subNum = sc.nextInt()-->Line_12 $$ String tmp = alf.substring(subNum)[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_8 $$ int m = sc.nextInt()[ CD ]
Line_5 $$ String alf = sc.next()-->Line_15 $$ System.out.println(alf)[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_4 $$ while (sc.hasNext()) [ CD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_12 $$ String tmp = alf.substring(subNum)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ static Scanner sc = new Scanner(System.in);[ CD ]
Line_5 $$ String alf = sc.next()-->Line_6 $$ if (alf.equals("-"))[ FD ]
Line_8 $$ int m = sc.nextInt()-->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
