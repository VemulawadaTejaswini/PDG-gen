Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ tyo = (M * 6)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ System.out.println(C)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int H = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ double C = 0[ CD ]
Line_12 $$ double kaku = 0-->Line_13 $$ kaku = (tan - tyo)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ C = Math.sqrt(((A * A) + (B * B)) - ((2 * A * B) * C))[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int A = sc.nextInt()[ FD ]
Line_8 $$ double tan = 0-->Line_9 $$ tan = (H * 30) + (M * 0.5)[ FD ]
Line_14 $$ double radi = Math.toRadians(kaku)-->Line_16 $$ C = Math.cos(radi)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int H = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int M = sc.nextInt()[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_16 $$ C = Math.cos(radi)-->Line_18 $$ System.out.println(C)[ FD ]
Line_15 $$ double C = 0-->Line_17 $$ C = Math.sqrt(((A * A) + (B * B)) - ((2 * A * B) * C))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int B = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int A = sc.nextInt()[ CD ]
Line_10 $$ double tyo = 0-->Line_11 $$ tyo = (M * 6)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ double tan = 0[ CD ]
Line_13 $$ kaku = (tan - tyo)-->Line_14 $$ double radi = Math.toRadians(kaku)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ C = Math.cos(radi)[ CD ]
Line_16 $$ C = Math.cos(radi)-->Line_17 $$ C = Math.sqrt(((A * A) + (B * B)) - ((2 * A * B) * C))[ FD ]
Line_15 $$ double C = 0-->Line_16 $$ C = Math.cos(radi)[ FD ]
Line_15 $$ double C = 0-->Line_18 $$ System.out.println(C)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ double kaku = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int M = sc.nextInt()[ CD ]
Line_17 $$ C = Math.sqrt(((A * A) + (B * B)) - ((2 * A * B) * C))-->Line_18 $$ System.out.println(C)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ tan = (H * 30) + (M * 0.5)[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int B = sc.nextInt()[ FD ]
Line_12 $$ double kaku = 0-->Line_14 $$ double radi = Math.toRadians(kaku)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ double radi = Math.toRadians(kaku)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ double tyo = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ kaku = (tan - tyo)[ CD ]
