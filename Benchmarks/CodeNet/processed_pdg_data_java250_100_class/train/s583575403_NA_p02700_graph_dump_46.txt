Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String[] w = s.split("\\s+")[ CD ]
Line_11 $$ bitTimesA += (healthA % attackB) == 0 ? 0 : 1-->Line_17 $$ if (bitTimesA < bitTimesB) [ FD ]
Line_12 $$ int bitTimesB = healthB / attackA-->Line_17 $$ if (bitTimesA < bitTimesB) [ FD ]
Line_17 $$ if (bitTimesA < bitTimesB) -->Line_18 $$ System.out.println("No")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ int bitTimesB = healthB / attackA[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ bitTimesB += (healthB % attackA) == 0 ? 0 : 1[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int healthA = Integer.parseInt(w[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ int bitTimesA = healthA / attackB[ CD ]
Line_3 $$ BufferedReader bw = new BufferedReader(new InputStreamReader(System.in))-->Line_20 $$ bw.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ if (bitTimesA >= bitTimesB) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ bitTimesA += (healthA % attackB) == 0 ? 0 : 1[ CD ]
Line_10 $$ int bitTimesA = healthA / attackB-->Line_14 $$ if (bitTimesA >= bitTimesB) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int attackA = Integer.parseInt(w[1])[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_10 $$ int bitTimesA = healthA / attackB-->Line_17 $$ if (bitTimesA < bitTimesB) [ FD ]
Line_4 $$ String s = bw.readLine()-->Line_5 $$ String[] w = s.split("\\s+")[ FD ]
Line_13 $$ bitTimesB += (healthB % attackA) == 0 ? 0 : 1-->Line_17 $$ if (bitTimesA < bitTimesB) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String s = bw.readLine()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader bw = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ BufferedReader bw = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String s = bw.readLine()[ FD ]
Line_11 $$ bitTimesA += (healthA % attackB) == 0 ? 0 : 1-->Line_14 $$ if (bitTimesA >= bitTimesB) [ FD ]
Line_10 $$ int bitTimesA = healthA / attackB-->Line_11 $$ bitTimesA += (healthA % attackB) == 0 ? 0 : 1[ FD ]
Line_12 $$ int bitTimesB = healthB / attackA-->Line_13 $$ bitTimesB += (healthB % attackA) == 0 ? 0 : 1[ FD ]
Line_13 $$ bitTimesB += (healthB % attackA) == 0 ? 0 : 1-->Line_14 $$ if (bitTimesA >= bitTimesB) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int healthB = Integer.parseInt(w[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ int attackB = Integer.parseInt(w[3])[ CD ]
Line_12 $$ int bitTimesB = healthB / attackA-->Line_14 $$ if (bitTimesA >= bitTimesB) [ FD ]
Line_14 $$ if (bitTimesA >= bitTimesB) -->Line_15 $$ System.out.println("Yes")[ CD ]
Line_14 $$ if (bitTimesA >= bitTimesB) -->Line_17 $$ if (bitTimesA < bitTimesB) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ bw.close()[ CD ]
