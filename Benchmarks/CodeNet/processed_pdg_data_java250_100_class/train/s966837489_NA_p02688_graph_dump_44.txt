Line_2 $$ public static void main(String[] args) -->Line_15 $$ for (int i = 0; i < hasSunuke.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(result)[ CD ]
Line_9 $$ for (int j = 0; j < di; j++) -->Line_11 $$ hasSunuke[a - 1] = true[ CD ]
Line_9 $$ for (int j = 0; j < di; j++) -->Line_10 $$ int a = sc.nextInt()[ CD ]
Line_16 $$ if (!hasSunuke[i]) -->Line_17 $$ result++[ CD ]
Line_15 $$ for (int i = 0; i < hasSunuke.length; i++) -->Line_16 $$ if (!hasSunuke[i]) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ int a = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 1; i <= K; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ int result = 0[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ int di = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int K = sc.nextInt()[ FD ]
Line_14 $$ int result = 0-->Line_17 $$ result++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ boolean[] hasSunuke = new boolean[N][ CD ]
Line_7 $$ for (int i = 1; i <= K; i++) -->Line_8 $$ int di = sc.nextInt()[ CD ]
Line_7 $$ for (int i = 1; i <= K; i++) -->Line_9 $$ for (int j = 0; j < di; j++) [ CD ]
Line_7 $$ for (int i = 1; i <= K; i++) -->Line_15 $$ for (int i = 0; i < hasSunuke.length; i++) [ FD ]
Line_14 $$ int result = 0-->Line_20 $$ System.out.println(result)[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_8 $$ int di = sc.nextInt()-->Line_9 $$ for (int j = 0; j < di; j++) [ FD ]
Line_5 $$ int K = sc.nextInt()-->Line_7 $$ for (int i = 1; i <= K; i++) [ FD ]
