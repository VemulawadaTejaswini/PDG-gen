Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ long n = Long.parseLong(data[0])[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] data = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ long b = Long.parseLong(data[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ long a = Long.parseLong(data[1])[ CD ]
Line_7 $$ long a = Long.parseLong(data[1])-->Line_10 $$ answer += Math.min(a, n % (a + b))[ FD ]
Line_9 $$ long answer = n / (a + b) * a-->Line_10 $$ answer += Math.min(a, n % (a + b))[ FD ]
Line_9 $$ long answer = n / (a + b) * a-->Line_11 $$ System.out.println(answer)[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ br.close()[ FD ]
Line_10 $$ answer += Math.min(a, n % (a + b))-->Line_11 $$ System.out.println(answer)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ answer += Math.min(a, n % (a + b))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ br.close()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String[] data = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ long answer = n / (a + b) * a[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ System.out.println(answer)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
