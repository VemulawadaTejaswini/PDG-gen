Line_12 $$ if (K > 0 && K < A) -->Line_14 $$ K = 0[ CD ]
Line_14 $$ K = 0-->Line_26 $$ K = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long B = sc.nextLong()[ CD ]
Line_25 $$ max += (K * -1)-->Line_28 $$ System.out.println(max)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ if (K > 0 && K >= B) [ CD ]
Line_13 $$ max += (K * 1)-->Line_22 $$ max += (C * -1)[ FD ]
Line_11 $$ K -= A-->Line_26 $$ K = 0[ FD ]
Line_22 $$ max += (C * -1)-->Line_25 $$ max += (K * -1)[ FD ]
Line_11 $$ K -= A-->Line_23 $$ K -= C[ FD ]
Line_8 $$ long max = 0-->Line_13 $$ max += (K * 1)[ FD ]
Line_18 $$ if (K > 0 && K < B) -->Line_19 $$ K = 0[ CD ]
Line_7 $$ long K = sc.nextLong()-->Line_14 $$ K = 0[ FD ]
Line_10 $$ max += (A * 1)-->Line_25 $$ max += (K * -1)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ long B = sc.nextLong()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ long A = sc.nextLong()[ FD ]
Line_19 $$ K = 0-->Line_26 $$ K = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_16 $$ if (K > 0 && K >= B) -->Line_18 $$ if (K > 0 && K < B) [ CD ]
Line_13 $$ max += (K * 1)-->Line_28 $$ System.out.println(max)[ FD ]
Line_22 $$ max += (C * -1)-->Line_28 $$ System.out.println(max)[ FD ]
Line_21 $$ if (K > 0 && K >= C) -->Line_23 $$ K -= C[ CD ]
Line_10 $$ max += (A * 1)-->Line_22 $$ max += (C * -1)[ FD ]
Line_17 $$ K -= B-->Line_19 $$ K = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ long A = sc.nextLong()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ long max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ long K = sc.nextLong()[ CD ]
Line_6 $$ long C = sc.nextLong()-->Line_23 $$ K -= C[ FD ]
Line_10 $$ max += (A * 1)-->Line_13 $$ max += (K * 1)[ FD ]
Line_7 $$ long K = sc.nextLong()-->Line_23 $$ K -= C[ FD ]
Line_9 $$ if (K > 0 && K >= A) -->Line_12 $$ if (K > 0 && K < A) [ CD ]
Line_9 $$ if (K > 0 && K >= A) -->Line_10 $$ max += (A * 1)[ CD ]
Line_9 $$ if (K > 0 && K >= A) -->Line_11 $$ K -= A[ CD ]
Line_14 $$ K = 0-->Line_19 $$ K = 0[ FD ]
Line_19 $$ K = 0-->Line_23 $$ K -= C[ FD ]
Line_11 $$ K -= A-->Line_17 $$ K -= B[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ if (K > 0 && K >= C) [ CD ]
Line_13 $$ max += (K * 1)-->Line_25 $$ max += (K * -1)[ FD ]
Line_5 $$ long B = sc.nextLong()-->Line_17 $$ K -= B[ FD ]
Line_12 $$ if (K > 0 && K < A) -->Line_13 $$ max += (K * 1)[ CD ]
Line_7 $$ long K = sc.nextLong()-->Line_19 $$ K = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_28 $$ System.out.println(max)[ CD ]
Line_24 $$ if (K > 0 && K < C) -->Line_25 $$ max += (K * -1)[ CD ]
Line_4 $$ long A = sc.nextLong()-->Line_11 $$ K -= A[ FD ]
Line_8 $$ long max = 0-->Line_28 $$ System.out.println(max)[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ long C = sc.nextLong()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ long K = sc.nextLong()[ FD ]
Line_21 $$ if (K > 0 && K >= C) -->Line_24 $$ if (K > 0 && K < C) [ CD ]
Line_8 $$ long max = 0-->Line_25 $$ max += (K * -1)[ FD ]
Line_7 $$ long K = sc.nextLong()-->Line_17 $$ K -= B[ FD ]
Line_24 $$ if (K > 0 && K < C) -->Line_26 $$ K = 0[ CD ]
Line_8 $$ long max = 0-->Line_10 $$ max += (A * 1)[ FD ]
Line_7 $$ long K = sc.nextLong()-->Line_11 $$ K -= A[ FD ]
Line_16 $$ if (K > 0 && K >= B) -->Line_17 $$ K -= B[ CD ]
Line_14 $$ K = 0-->Line_23 $$ K -= C[ FD ]
Line_17 $$ K -= B-->Line_26 $$ K = 0[ FD ]
Line_10 $$ max += (A * 1)-->Line_28 $$ System.out.println(max)[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_11 $$ K -= A-->Line_19 $$ K = 0[ FD ]
Line_21 $$ if (K > 0 && K >= C) -->Line_22 $$ max += (C * -1)[ CD ]
Line_17 $$ K -= B-->Line_23 $$ K -= C[ FD ]
Line_7 $$ long K = sc.nextLong()-->Line_26 $$ K = 0[ FD ]
Line_23 $$ K -= C-->Line_26 $$ K = 0[ FD ]
Line_14 $$ K = 0-->Line_17 $$ K -= B[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ if (K > 0 && K >= A) [ CD ]
Line_11 $$ K -= A-->Line_14 $$ K = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ long C = sc.nextLong()[ CD ]
Line_8 $$ long max = 0-->Line_22 $$ max += (C * -1)[ FD ]
