Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_9 $$ br.readLine()[ FD ]
Line_15 $$ int ans = N - haveCookie.size()-->Line_16 $$ System.out.println(ans)[ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_9 $$ br.readLine()[ CD ]
Line_4 $$ List<String> firstRow = Arrays.asList(br.readLine().split(" "))-->Line_5 $$ int N = Integer.parseInt(firstRow.get(0))[ FD ]
Line_11 $$ for (String tmp : tmpList) -->Line_12 $$ haveCookie.add(tmp)[ FD ]
Line_6 $$ int K = Integer.parseInt(firstRow.get(1))-->Line_8 $$ for (int i = 0; i < K; i++) [ FD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_10 $$ List<String> tmpList = Arrays.asList(br.readLine().split(" "))[ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_10 $$ List<String> tmpList = Arrays.asList(br.readLine().split(" "))[ CD ]
Line_7 $$ Set<String> haveCookie = new HashSet()-->Line_12 $$ haveCookie.add(tmp)[ FD ]
Line_7 $$ Set<String> haveCookie = new HashSet()-->Line_15 $$ int ans = N - haveCookie.size()[ FD ]
Line_4 $$ List<String> firstRow = Arrays.asList(br.readLine().split(" "))-->Line_6 $$ int K = Integer.parseInt(firstRow.get(1))[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(final String[] args) throws Exception [ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_4 $$ List<String> firstRow = Arrays.asList(br.readLine().split(" "))[ FD ]
