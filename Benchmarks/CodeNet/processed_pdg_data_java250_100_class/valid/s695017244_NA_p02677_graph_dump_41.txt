Line_8 $$ double cosC = 0-->Line_11 $$ cosC = h - s[ FD ]
Line_11 $$ cosC = h - s-->Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double H = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ double A = sc.nextDouble()[ CD ]
Line_10 $$ double s = M * 6-->Line_11 $$ cosC = s - h[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double H = sc.nextDouble()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double s = M * 6[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ double B = sc.nextDouble()[ FD ]
Line_8 $$ double cosC = 0-->Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))[ FD ]
Line_10 $$ double s = M * 6-->Line_11 $$ cosC = h - s[ FD ]
Line_10 $$ double s = M * 6-->Line_11 $$ if (h < s) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ double A = sc.nextDouble()[ FD ]
Line_8 $$ double cosC = 0-->Line_11 $$ cosC = s - h[ FD ]
Line_11 $$ cosC = s - h-->Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))[ FD ]
Line_5 $$ double B = sc.nextDouble()-->Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double h = (H * 30) + (M * 0.5)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ System.out.println(C)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ double M = sc.nextDouble()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double B = sc.nextDouble()[ CD ]
Line_9 $$ double h = (H * 30) + (M * 0.5)-->Line_11 $$ cosC = h - s[ FD ]
Line_10 $$ double s = M * 6-->Line_11 $$ if (h > s) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double cosC = 0[ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ double M = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ if (h > s) [ CD ]
Line_9 $$ double h = (H * 30) + (M * 0.5)-->Line_11 $$ if (h > s) [ FD ]
Line_9 $$ double h = (H * 30) + (M * 0.5)-->Line_11 $$ if (h < s) [ FD ]
Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))-->Line_13 $$ System.out.println(C)[ FD ]
Line_9 $$ double h = (H * 30) + (M * 0.5)-->Line_11 $$ cosC = s - h[ FD ]
Line_4 $$ double A = sc.nextDouble()-->Line_12 $$ double C = Math.sqrt(Math.pow(A, 2) + Math.pow(B, 2) - 2 * A * B * Math.cos(Math.toRadians(cosC)))[ FD ]
