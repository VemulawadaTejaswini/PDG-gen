Line_11 $$ int max = 0-->Line_24 $$ max = move[ FD ]
Line_18 $$ move = 0-->Line_23 $$ if (max < move) [ FD ]
Line_13 $$ for (int i = 0; i < N - 1; i++) -->Line_21 $$ move++[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] H = new int[N][ CD ]
Line_18 $$ move = 0-->Line_24 $$ max = move[ FD ]
Line_14 $$ if (H[i] < H[i + 1]) -->Line_15 $$ if (max < move) [ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_8 $$ H[i] = Integer.parseInt(sc.next())[ CD ]
Line_12 $$ int move = 0-->Line_23 $$ if (max < move) [ FD ]
Line_14 $$ if (H[i] < H[i + 1]) -->Line_18 $$ move = 0[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_27 $$ out.flush()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < N; i++) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_18 $$ move = 0-->Line_15 $$ if (max < move) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_13 $$ for (int i = 0; i < N - 1; i++) -->Line_14 $$ if (H[i] < H[i + 1]) [ CD ]
Line_11 $$ int max = 0-->Line_16 $$ max = move[ FD ]
Line_15 $$ if (max < move) -->Line_16 $$ max = move[ CD ]
Line_23 $$ if (max < move) -->Line_24 $$ max = move[ CD ]
Line_12 $$ int move = 0-->Line_16 $$ max = move[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_16 $$ max = move-->Line_26 $$ out.printf("%d\n", max)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_27 $$ out.flush()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ H[i] = Integer.parseInt(sc.next())[ FD ]
Line_12 $$ int move = 0-->Line_15 $$ if (max < move) [ FD ]
Line_16 $$ max = move-->Line_23 $$ if (max < move) [ FD ]
Line_5 $$ int N = Integer.parseInt(sc.next())-->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ int move = 0-->Line_18 $$ move = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_26 $$ out.printf("%d\n", max)[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_26 $$ out.printf("%d\n", max)[ FD ]
Line_11 $$ int max = 0-->Line_26 $$ out.printf("%d\n", max)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int move = 0[ CD ]
Line_24 $$ max = move-->Line_26 $$ out.printf("%d\n", max)[ FD ]
Line_18 $$ move = 0-->Line_16 $$ max = move[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ sc.close()[ CD ]
Line_11 $$ int max = 0-->Line_15 $$ if (max < move) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ if (max < move) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int max = 0[ CD ]
Line_16 $$ max = move-->Line_24 $$ max = move[ FD ]
Line_12 $$ int move = 0-->Line_21 $$ move++[ FD ]
Line_18 $$ move = 0-->Line_21 $$ move++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ PrintWriter out = new PrintWriter(System.out)[ CD ]
Line_11 $$ int max = 0-->Line_23 $$ if (max < move) [ FD ]
Line_16 $$ max = move-->Line_15 $$ if (max < move) [ FD ]
Line_12 $$ int move = 0-->Line_24 $$ max = move[ FD ]
