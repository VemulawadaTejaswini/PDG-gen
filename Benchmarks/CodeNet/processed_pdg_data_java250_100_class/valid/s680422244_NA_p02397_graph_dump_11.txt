Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int[] numbers = new int[2][ CD ]
Line_8 $$ while (true) -->Line_10 $$ array = inputStr.split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_25 $$ sb.delete(sb.length() - 1, sb.length())[ CD ]
Line_8 $$ while (true) -->Line_11 $$ numbers[0] = Integer.parseInt(array[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_6 $$ String inputStr-->Line_9 $$ inputStr = br.readLine()[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.delete(sb.length() - 1, sb.length())[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(Integer.toString(numbers[1])).append(" ").append(Integer.toString(numbers[0])).append("\n")[ FD ]
Line_17 $$ if (numbers[0] < numbers[1]) -->Line_21 $$ sb.append(Integer.toString(numbers[1])).append(" ").append(Integer.toString(numbers[0])).append("\n")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String inputStr[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_26 $$ System.out.println(sb)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ while (true) [ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ sb.append(Integer.toString(numbers[0])).append(" ").append(Integer.toString(numbers[1])).append("\n")[ FD ]
Line_9 $$ inputStr = br.readLine()-->Line_10 $$ array = inputStr.split(" ")[ FD ]
Line_13 $$ if (numbers[0] == 0 && numbers[1] == 0) -->Line_17 $$ if (numbers[0] < numbers[1]) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String[] array = new String[2][ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ inputStr = br.readLine()[ FD ]
Line_8 $$ while (true) -->Line_9 $$ inputStr = br.readLine()[ CD ]
Line_17 $$ if (numbers[0] < numbers[1]) -->Line_18 $$ sb.append(Integer.toString(numbers[0])).append(" ").append(Integer.toString(numbers[1])).append("\n")[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ System.out.println(sb)[ FD ]
Line_8 $$ while (true) -->Line_13 $$ if (numbers[0] == 0 && numbers[1] == 0) [ CD ]
Line_8 $$ while (true) -->Line_12 $$ numbers[1] = Integer.parseInt(array[1])[ CD ]
Line_6 $$ String inputStr-->Line_10 $$ array = inputStr.split(" ")[ FD ]
Line_4 $$ String[] array = new String[2]-->Line_10 $$ array = inputStr.split(" ")[ FD ]
