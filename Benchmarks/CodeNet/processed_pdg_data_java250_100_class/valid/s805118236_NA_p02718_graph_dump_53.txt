Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_23 $$ System.out.println(sb)[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_8 $$ int sum = 0, count = 0-->Line_16 $$ count++[ FD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ int N = Integer.parseInt(st.nextToken())-->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_5 $$ int N = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ CD ]
Line_19 $$ if (count >= M)-->Line_20 $$ sb.append("Yes\n")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_19 $$ if (count >= M)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ st = new StringTokenizer(br.readLine())[ CD ]
Line_6 $$ int M = Integer.parseInt(st.nextToken())-->Line_19 $$ if (count >= M)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_18 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append("Yes\n")[ FD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_12 $$ sum += arr[i][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int sum = 0, count = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ for (int i = 0; i < N; i++) [ CD ]
Line_10 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_9 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_19 $$ if (count >= M)-->Line_22 $$ sb.append("No\n")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int[] arr = new int[N][ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_6 $$ int M = Integer.parseInt(st.nextToken())[ FD ]
Line_8 $$ int sum = 0, count = 0-->Line_12 $$ sum += arr[i][ FD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ System.out.println(sb)[ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_15 $$ if (arr[i] >= sum / (4.0 * M))[ CD ]
Line_8 $$ int sum = 0, count = 0-->Line_19 $$ if (count >= M)[ FD ]
Line_15 $$ if (arr[i] >= sum / (4.0 * M))-->Line_16 $$ count++[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int M = Integer.parseInt(st.nextToken())[ CD ]
Line_9 $$ st = new StringTokenizer(br.readLine())-->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_5 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_18 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append("No\n")[ FD ]
