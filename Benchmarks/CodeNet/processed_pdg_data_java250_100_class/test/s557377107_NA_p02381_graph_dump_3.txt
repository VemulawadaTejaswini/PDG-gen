Line_8 $$ while (true) -->Line_9 $$ myu = 0[ CD ]
Line_4 $$ int n, i-->Line_11 $$ n = sc.nextInt()[ FD ]
Line_10 $$ bunsan = 0-->Line_24 $$ sigma.add(Math.abs(Math.sqrt(bunsan)))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ n = sc.nextInt()[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_16 $$ s[i] = sc.nextInt()[ FD ]
Line_6 $$ double myu, bunsan-->Line_10 $$ bunsan = 0[ FD ]
Line_17 $$ myu += s[i]-->Line_19 $$ myu /= n[ FD ]
Line_6 $$ double myu, bunsan-->Line_21 $$ bunsan += Math.pow((s[i] - myu), 2)[ FD ]
Line_15 $$ for (i = 0; i < n; i++) -->Line_20 $$ for (i = 0; i < n; i++) [ FD ]
Line_21 $$ bunsan += Math.pow((s[i] - myu), 2)-->Line_23 $$ bunsan /= n[ FD ]
Line_6 $$ double myu, bunsan-->Line_19 $$ myu /= n[ FD ]
Line_8 $$ while (true) -->Line_10 $$ bunsan = 0[ CD ]
Line_11 $$ n = sc.nextInt()-->Line_12 $$ if (n == 0) [ FD ]
Line_21 $$ bunsan += Math.pow((s[i] - myu), 2)-->Line_24 $$ sigma.add(Math.abs(Math.sqrt(bunsan)))[ FD ]
Line_8 $$ while (true) -->Line_12 $$ if (n == 0) [ CD ]
Line_4 $$ int n, i-->Line_12 $$ if (n == 0) [ FD ]
Line_8 $$ while (true) -->Line_20 $$ for (i = 0; i < n; i++) [ CD ]
Line_11 $$ n = sc.nextInt()-->Line_23 $$ bunsan /= n[ FD ]
Line_8 $$ while (true) -->Line_24 $$ sigma.add(Math.abs(Math.sqrt(bunsan)))[ CD ]
Line_26 $$ for (double d : sigma) -->Line_27 $$ System.out.println(d)[ FD ]
Line_7 $$ ArrayList<Double> sigma = new ArrayList<Double>()-->Line_24 $$ sigma.add(Math.abs(Math.sqrt(bunsan)))[ FD ]
Line_4 $$ int n, i-->Line_19 $$ myu /= n[ FD ]
Line_8 $$ while (true) -->Line_11 $$ n = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ ArrayList<Double> sigma = new ArrayList<Double>()[ CD ]
Line_11 $$ n = sc.nextInt()-->Line_19 $$ myu /= n[ FD ]
Line_10 $$ bunsan = 0-->Line_21 $$ bunsan += Math.pow((s[i] - myu), 2)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ while (true) [ CD ]
Line_8 $$ while (true) -->Line_15 $$ for (i = 0; i < n; i++) [ CD ]
Line_23 $$ bunsan /= n-->Line_24 $$ sigma.add(Math.abs(Math.sqrt(bunsan)))[ FD ]
Line_6 $$ double myu, bunsan-->Line_9 $$ myu = 0[ FD ]
Line_15 $$ for (i = 0; i < n; i++) -->Line_16 $$ s[i] = sc.nextInt()[ CD ]
Line_15 $$ for (i = 0; i < n; i++) -->Line_17 $$ myu += s[i][ CD ]
Line_9 $$ myu = 0-->Line_17 $$ myu += s[i][ FD ]
Line_8 $$ while (true) -->Line_19 $$ myu /= n[ CD ]
Line_10 $$ bunsan = 0-->Line_23 $$ bunsan /= n[ FD ]
Line_4 $$ int n, i-->Line_15 $$ for (i = 0; i < n; i++) [ FD ]
Line_8 $$ while (true) -->Line_23 $$ bunsan /= n[ CD ]
Line_6 $$ double myu, bunsan-->Line_17 $$ myu += s[i][ FD ]
Line_11 $$ n = sc.nextInt()-->Line_15 $$ for (i = 0; i < n; i++) [ FD ]
Line_4 $$ int n, i-->Line_23 $$ bunsan /= n[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ int s[] = new int[1000][ CD ]
Line_20 $$ for (i = 0; i < n; i++) -->Line_21 $$ bunsan += Math.pow((s[i] - myu), 2)[ CD ]
Line_4 $$ int n, i-->Line_20 $$ for (i = 0; i < n; i++) [ FD ]
Line_6 $$ double myu, bunsan-->Line_24 $$ sigma.add(Math.abs(Math.sqrt(bunsan)))[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_6 $$ double myu, bunsan-->Line_23 $$ bunsan /= n[ FD ]
Line_9 $$ myu = 0-->Line_19 $$ myu /= n[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ int n, i[ CD ]
Line_11 $$ n = sc.nextInt()-->Line_20 $$ for (i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ double myu, bunsan[ CD ]
