Line_9 $$ if (s[i].equals("0")) -->Line_11 $$ if (s[i].equals("1")) [ CD ]
Line_7 $$ Deque<String> deque = new ArrayDeque()-->Line_12 $$ deque.addLast("1")[ FD ]
Line_21 $$ result += value-->Line_23 $$ System.out.println(result)[ FD ]
Line_11 $$ if (s[i].equals("1")) -->Line_12 $$ deque.addLast("1")[ CD ]
Line_11 $$ if (s[i].equals("1")) -->Line_14 $$ if (0 < deque.size()) [ CD ]
Line_8 $$ for (int i = 0; i < s.length; i++) -->Line_9 $$ if (s[i].equals("0")) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String S = sc.next()[ CD ]
Line_19 $$ String result = ""-->Line_23 $$ System.out.println(result)[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ Deque<String> deque = new ArrayDeque()-->Line_15 $$ deque.pollLast()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ String result = ""[ CD ]
Line_4 $$ String S = sc.next()-->Line_6 $$ String[] s = S.split("")[ FD ]
Line_19 $$ String result = ""-->Line_21 $$ result += value[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String[] s = S.split("")[ CD ]
Line_20 $$ for (String value : deque) -->Line_21 $$ result += value[ FD ]
Line_7 $$ Deque<String> deque = new ArrayDeque()-->Line_10 $$ deque.addLast("0")[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(result)[ CD ]
Line_9 $$ if (s[i].equals("0")) -->Line_10 $$ deque.addLast("0")[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String S = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Deque<String> deque = new ArrayDeque()[ CD ]
Line_7 $$ Deque<String> deque = new ArrayDeque()-->Line_14 $$ if (0 < deque.size()) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < s.length; i++) [ CD ]
Line_14 $$ if (0 < deque.size()) -->Line_15 $$ deque.pollLast()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ sc.close()[ CD ]
