Line_7 $$ int hpoint = 0-->Line_27 $$ hpoint += 3[ FD ]
Line_32 $$ if (taro.length() == hanako.length()) -->Line_35 $$ hpoint += 1[ CD ]
Line_22 $$ tpoint += 3-->Line_40 $$ tpoint += 3[ FD ]
Line_8 $$ int kurikaesi = 0-->Line_15 $$ kurikaesi = taro.length()[ FD ]
Line_25 $$ if (taro.charAt(j) < hanako.charAt(j)) -->Line_27 $$ hpoint += 3[ CD ]
Line_39 $$ if (taro.length() > hanako.length())-->Line_40 $$ tpoint += 3[ CD ]
Line_8 $$ int kurikaesi = 0-->Line_18 $$ for (int j = 0; j < kurikaesi; j++) [ FD ]
Line_18 $$ for (int j = 0; j < kurikaesi; j++) -->Line_25 $$ if (taro.charAt(j) < hanako.charAt(j)) [ FD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_5 $$ int kaisu = Integer.parseInt(br.readLine())[ FD ]
Line_13 $$ String hanako = card[1]-->Line_39 $$ if (taro.length() > hanako.length())[ FD ]
Line_18 $$ for (int j = 0; j < kurikaesi; j++) -->Line_30 $$ if (j == kurikaesi - 1) [ FD ]
Line_15 $$ kurikaesi = taro.length()-->Line_17 $$ kurikaesi = hanako.length()[ FD ]
Line_30 $$ if (j == kurikaesi - 1) -->Line_32 $$ if (taro.length() == hanako.length()) [ CD ]
Line_27 $$ hpoint += 3-->Line_38 $$ hpoint += 3[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int kurikaesi = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int tpoint = 0[ CD ]
Line_20 $$ if (taro.charAt(j) > hanako.charAt(j)) -->Line_25 $$ if (taro.charAt(j) < hanako.charAt(j)) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int kaisu = Integer.parseInt(br.readLine())[ CD ]
Line_15 $$ kurikaesi = taro.length()-->Line_18 $$ for (int j = 0; j < kurikaesi; j++) [ FD ]
Line_7 $$ int hpoint = 0-->Line_38 $$ hpoint += 3[ FD ]
Line_9 $$ for (int i = 0; i < kaisu; i++) -->Line_18 $$ for (int j = 0; j < kurikaesi; j++) [ CD ]
Line_32 $$ if (taro.length() == hanako.length()) -->Line_37 $$ if (taro.length() < hanako.length())[ CD ]
Line_12 $$ String taro = card[0]-->Line_16 $$ if (taro.length() > hanako.length())[ FD ]
Line_13 $$ String hanako = card[1]-->Line_37 $$ if (taro.length() < hanako.length())[ FD ]
Line_7 $$ int hpoint = 0-->Line_35 $$ hpoint += 1[ FD ]
Line_9 $$ for (int i = 0; i < kaisu; i++) -->Line_14 $$ if (taro.length() <= hanako.length())[ CD ]
Line_12 $$ String taro = card[0]-->Line_14 $$ if (taro.length() <= hanako.length())[ FD ]
Line_13 $$ String hanako = card[1]-->Line_17 $$ kurikaesi = hanako.length()[ FD ]
Line_17 $$ kurikaesi = hanako.length()-->Line_18 $$ for (int j = 0; j < kurikaesi; j++) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_34 $$ tpoint += 1-->Line_40 $$ tpoint += 3[ FD ]
Line_5 $$ int kaisu = Integer.parseInt(br.readLine())-->Line_9 $$ for (int i = 0; i < kaisu; i++) [ FD ]
Line_12 $$ String taro = card[0]-->Line_20 $$ if (taro.charAt(j) > hanako.charAt(j)) [ FD ]
Line_9 $$ for (int i = 0; i < kaisu; i++) -->Line_11 $$ String[] card = br.readLine().split(" ")[ CD ]
Line_12 $$ String taro = card[0]-->Line_39 $$ if (taro.length() > hanako.length())[ FD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_11 $$ String[] card = br.readLine().split(" ")[ FD ]
Line_12 $$ String taro = card[0]-->Line_15 $$ kurikaesi = taro.length()[ FD ]
Line_13 $$ String hanako = card[1]-->Line_14 $$ if (taro.length() <= hanako.length())[ FD ]
Line_16 $$ if (taro.length() > hanako.length())-->Line_17 $$ kurikaesi = hanako.length()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int hpoint = 0[ CD ]
Line_9 $$ for (int i = 0; i < kaisu; i++) -->Line_12 $$ String taro = card[0][ CD ]
Line_14 $$ if (taro.length() <= hanako.length())-->Line_15 $$ kurikaesi = taro.length()[ CD ]
Line_8 $$ int kurikaesi = 0-->Line_17 $$ kurikaesi = hanako.length()[ FD ]
Line_13 $$ String hanako = card[1]-->Line_20 $$ if (taro.charAt(j) > hanako.charAt(j)) [ FD ]
Line_13 $$ String hanako = card[1]-->Line_25 $$ if (taro.charAt(j) < hanako.charAt(j)) [ FD ]
Line_27 $$ hpoint += 3-->Line_35 $$ hpoint += 1[ FD ]
Line_9 $$ for (int i = 0; i < kaisu; i++) -->Line_13 $$ String hanako = card[1][ CD ]
Line_37 $$ if (taro.length() < hanako.length())-->Line_39 $$ if (taro.length() > hanako.length())[ CD ]
Line_37 $$ if (taro.length() < hanako.length())-->Line_38 $$ hpoint += 3[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ InputStreamReader isr = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_44 $$ System.out.println(tpoint + " " + hpoint)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ for (int i = 0; i < kaisu; i++) [ CD ]
Line_6 $$ int tpoint = 0-->Line_22 $$ tpoint += 3[ FD ]
Line_18 $$ for (int j = 0; j < kurikaesi; j++) -->Line_20 $$ if (taro.charAt(j) > hanako.charAt(j)) [ CD ]
Line_12 $$ String taro = card[0]-->Line_25 $$ if (taro.charAt(j) < hanako.charAt(j)) [ FD ]
Line_6 $$ int tpoint = 0-->Line_40 $$ tpoint += 3[ FD ]
Line_14 $$ if (taro.length() <= hanako.length())-->Line_16 $$ if (taro.length() > hanako.length())[ CD ]
Line_12 $$ String taro = card[0]-->Line_32 $$ if (taro.length() == hanako.length()) [ FD ]
Line_6 $$ int tpoint = 0-->Line_34 $$ tpoint += 1[ FD ]
Line_13 $$ String hanako = card[1]-->Line_16 $$ if (taro.length() > hanako.length())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_32 $$ if (taro.length() == hanako.length()) -->Line_34 $$ tpoint += 1[ CD ]
Line_12 $$ String taro = card[0]-->Line_37 $$ if (taro.length() < hanako.length())[ FD ]
Line_18 $$ for (int j = 0; j < kurikaesi; j++) -->Line_20 $$ if (taro.charAt(j) > hanako.charAt(j)) [ FD ]
Line_20 $$ if (taro.charAt(j) > hanako.charAt(j)) -->Line_22 $$ tpoint += 3[ CD ]
Line_35 $$ hpoint += 1-->Line_38 $$ hpoint += 3[ FD ]
Line_18 $$ for (int j = 0; j < kurikaesi; j++) -->Line_30 $$ if (j == kurikaesi - 1) [ CD ]
Line_13 $$ String hanako = card[1]-->Line_32 $$ if (taro.length() == hanako.length()) [ FD ]
Line_22 $$ tpoint += 3-->Line_34 $$ tpoint += 1[ FD ]
