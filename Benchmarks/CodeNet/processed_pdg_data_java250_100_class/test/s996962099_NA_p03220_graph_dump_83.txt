Line_8 $$ double min = 10000000-->Line_14 $$ min = Math.abs(A - h)[ FD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_5 $$ double T = sc.nextDouble()[ FD ]
Line_12 $$ if (min > Math.abs(A - h)) -->Line_13 $$ town = i[ CD ]
Line_8 $$ double min = 10000000-->Line_12 $$ if (min > Math.abs(A - h)) [ FD ]
Line_7 $$ int town = 1-->Line_17 $$ System.out.println(town)[ FD ]
Line_10 $$ double h = sc.nextDouble()-->Line_11 $$ h = T - h * 0.006[ FD ]
Line_14 $$ min = Math.abs(A - h)-->Line_12 $$ if (min > Math.abs(A - h)) [ FD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_10 $$ double h = sc.nextDouble()[ FD ]
Line_9 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ double h = sc.nextDouble()[ CD ]
Line_7 $$ int town = 1-->Line_13 $$ town = i[ FD ]
Line_9 $$ for (int i = 1; i <= N; i++) -->Line_13 $$ town = i[ FD ]
Line_5 $$ double T = sc.nextDouble()-->Line_11 $$ h = T - h * 0.006[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_13 $$ town = i-->Line_17 $$ System.out.println(town)[ FD ]
Line_9 $$ for (int i = 1; i <= N; i++) -->Line_12 $$ if (min > Math.abs(A - h)) [ CD ]
Line_12 $$ if (min > Math.abs(A - h)) -->Line_14 $$ min = Math.abs(A - h)[ CD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_6 $$ double A = sc.nextDouble()[ FD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 1; i <= N; i++) -->Line_11 $$ h = T - h * 0.006[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_9 $$ for (int i = 1; i <= N; i++) [ FD ]
