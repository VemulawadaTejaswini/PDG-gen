Line_15 $$ int min = (int) 1e9-->Line_28 $$ min = Math.min(min, cost)[ FD ]
Line_4 $$ int N = in.nextInt()-->Line_18 $$ for (int x = X; x <= N; x++) [ FD ]
Line_5 $$ int M = in.nextInt()-->Line_8 $$ for (int i = 0; i < M; i++) [ FD ]
Line_18 $$ for (int x = X; x <= N; x++) -->Line_25 $$ for (int x = X; x >= 0; x--) [ FD ]
Line_17 $$ int cost = 0-->Line_28 $$ min = Math.min(min, cost)[ FD ]
Line_3 $$ try (Scanner in = new Scanner(System.in)) -->Line_6 $$ int X = in.nextInt()[ FD ]
Line_17 $$ int cost = 0-->Line_21 $$ min = Math.min(min, cost)[ FD ]
Line_19 $$ cost += costs[x]-->Line_26 $$ cost += costs[x][ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_12 $$ for (int i = 0; i < M; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_9 $$ A[i] = in.nextInt()[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ int cost = 0-->Line_26 $$ cost += costs[x][ FD ]
Line_28 $$ min = Math.min(min, cost)-->Line_30 $$ System.out.println(min)[ FD ]
Line_15 $$ int min = (int) 1e9-->Line_30 $$ System.out.println(min)[ FD ]
Line_12 $$ for (int i = 0; i < M; i++) -->Line_13 $$ costs[A[i]]++[ CD ]
Line_21 $$ min = Math.min(min, cost)-->Line_30 $$ System.out.println(min)[ FD ]
Line_17 $$ int cost = 0-->Line_19 $$ cost += costs[x][ FD ]
Line_19 $$ cost += costs[x]-->Line_21 $$ min = Math.min(min, cost)[ FD ]
Line_5 $$ int M = in.nextInt()-->Line_12 $$ for (int i = 0; i < M; i++) [ FD ]
Line_25 $$ for (int x = X; x >= 0; x--) -->Line_26 $$ cost += costs[x][ CD ]
Line_3 $$ try (Scanner in = new Scanner(System.in)) -->Line_5 $$ int M = in.nextInt()[ FD ]
Line_18 $$ for (int x = X; x <= N; x++) -->Line_19 $$ cost += costs[x][ CD ]
Line_26 $$ cost += costs[x]-->Line_28 $$ min = Math.min(min, cost)[ FD ]
Line_15 $$ int min = (int) 1e9-->Line_21 $$ min = Math.min(min, cost)[ FD ]
Line_19 $$ cost += costs[x]-->Line_28 $$ min = Math.min(min, cost)[ FD ]
Line_3 $$ try (Scanner in = new Scanner(System.in)) -->Line_9 $$ A[i] = in.nextInt()[ FD ]
Line_21 $$ min = Math.min(min, cost)-->Line_28 $$ min = Math.min(min, cost)[ FD ]
Line_3 $$ try (Scanner in = new Scanner(System.in)) -->Line_4 $$ int N = in.nextInt()[ FD ]
