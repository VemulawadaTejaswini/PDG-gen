Line_15 $$ max = cost-->Line_19 $$ if (max == Integer.MAX_VALUE) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ str = in.readLine()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_8 $$ int max = Integer.MAX_VALUE-->Line_15 $$ max = cost[ FD ]
Line_19 $$ if (max == Integer.MAX_VALUE) -->Line_20 $$ System.out.println("TLE")[ CD ]
Line_5 $$ String str = in.readLine()-->Line_7 $$ Integer t = Integer.valueOf(str.split(" ")[1])[ FD ]
Line_11 $$ Integer cost = Integer.valueOf(str.split(" ")[0])-->Line_14 $$ if (cost < max) [ FD ]
Line_15 $$ max = cost-->Line_23 $$ System.out.println(max)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if (time <= t) [ CD ]
Line_8 $$ int max = Integer.MAX_VALUE-->Line_23 $$ System.out.println(max)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ Integer cost = Integer.valueOf(str.split(" ")[0])[ CD ]
Line_13 $$ if (time <= t) -->Line_14 $$ if (cost < max) [ CD ]
Line_5 $$ String str = in.readLine()-->Line_11 $$ Integer cost = Integer.valueOf(str.split(" ")[0])[ FD ]
Line_8 $$ int max = Integer.MAX_VALUE-->Line_14 $$ if (cost < max) [ FD ]
Line_5 $$ String str = in.readLine()-->Line_10 $$ str = in.readLine()[ FD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String str = in.readLine()[ FD ]
Line_6 $$ Integer n = Integer.valueOf(str.split(" ")[0])-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ int max = Integer.MAX_VALUE-->Line_19 $$ if (max == Integer.MAX_VALUE) [ FD ]
Line_7 $$ Integer t = Integer.valueOf(str.split(" ")[1])-->Line_13 $$ if (time <= t) [ FD ]
Line_15 $$ max = cost-->Line_14 $$ if (cost < max) [ FD ]
Line_10 $$ str = in.readLine()-->Line_11 $$ Integer cost = Integer.valueOf(str.split(" ")[0])[ FD ]
Line_10 $$ str = in.readLine()-->Line_12 $$ Integer time = Integer.valueOf(str.split(" ")[1])[ FD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ str = in.readLine()[ FD ]
Line_12 $$ Integer time = Integer.valueOf(str.split(" ")[1])-->Line_13 $$ if (time <= t) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_12 $$ Integer time = Integer.valueOf(str.split(" ")[1])[ CD ]
Line_5 $$ String str = in.readLine()-->Line_12 $$ Integer time = Integer.valueOf(str.split(" ")[1])[ FD ]
Line_14 $$ if (cost < max) -->Line_15 $$ max = cost[ CD ]
Line_11 $$ Integer cost = Integer.valueOf(str.split(" ")[0])-->Line_15 $$ max = cost[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_5 $$ String str = in.readLine()-->Line_6 $$ Integer n = Integer.valueOf(str.split(" ")[0])[ FD ]
Line_19 $$ if (max == Integer.MAX_VALUE) -->Line_23 $$ System.out.println(max)[ CD ]
