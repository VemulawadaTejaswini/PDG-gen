Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()-->Line_17 $$ count = mapA.get(ai)[ FD ]
Line_15 $$ ai = sc.nextLong()-->Line_21 $$ mapA.put(ai, 1L)[ FD ]
Line_14 $$ for (index = 0; index < q; index++) -->Line_25 $$ for (index = 1; index <= n; index++) [ FD ]
Line_15 $$ ai = sc.nextLong()-->Line_18 $$ mapA.put(ai, count + 1)[ FD ]
Line_6 $$ Scanner sc = new Scanner(System.in)-->Line_24 $$ sc.close()[ FD ]
Line_26 $$ if (mapA.containsKey(index)) -->Line_27 $$ count = mapA.get(index)[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_7 $$ int len, rem[ CD ]
Line_27 $$ count = mapA.get(index)-->Line_30 $$ count = 0[ FD ]
Line_5 $$ public static void main(String[] args) -->Line_13 $$ q = sc.nextInt()[ CD ]
Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()-->Line_21 $$ mapA.put(ai, 1L)[ FD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_12 $$ k = sc.nextLong()[ FD ]
Line_26 $$ if (mapA.containsKey(index)) -->Line_30 $$ count = 0[ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_25 $$ for (index = 1; index <= n; index++) [ FD ]
Line_16 $$ if (mapA.containsKey(ai)) -->Line_21 $$ mapA.put(ai, 1L)[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_6 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_15 $$ ai = sc.nextLong()[ FD ]
Line_25 $$ for (index = 1; index <= n; index++) -->Line_32 $$ if (count + k - q > 0) [ CD ]
Line_32 $$ if (count + k - q > 0) -->Line_33 $$ System.out.println("Yes")[ CD ]
Line_32 $$ if (count + k - q > 0) -->Line_36 $$ System.out.println("No")[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_24 $$ sc.close()[ CD ]
Line_17 $$ count = mapA.get(ai)-->Line_27 $$ count = mapA.get(index)[ FD ]
Line_6 $$ Scanner sc = new Scanner(System.in)-->Line_12 $$ k = sc.nextLong()[ FD ]
Line_2 $$ public class Main -->Line_5 $$ public static void main(String[] args) [ CD ]
Line_5 $$ public static void main(String[] args) -->Line_12 $$ k = sc.nextLong()[ CD ]
Line_16 $$ if (mapA.containsKey(ai)) -->Line_18 $$ mapA.put(ai, count + 1)[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()[ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_27 $$ count = mapA.get(index)[ FD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_14 $$ for (index = 0; index < q; index++) [ FD ]
Line_16 $$ if (mapA.containsKey(ai)) -->Line_17 $$ count = mapA.get(ai)[ CD ]
Line_25 $$ for (index = 1; index <= n; index++) -->Line_26 $$ if (mapA.containsKey(index)) [ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_26 $$ if (mapA.containsKey(index)) [ FD ]
Line_25 $$ for (index = 1; index <= n; index++) -->Line_27 $$ count = mapA.get(index)[ FD ]
Line_6 $$ Scanner sc = new Scanner(System.in)-->Line_13 $$ q = sc.nextInt()[ FD ]
Line_6 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ n = sc.nextInt()[ FD ]
Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()-->Line_27 $$ count = mapA.get(index)[ FD ]
Line_17 $$ count = mapA.get(ai)-->Line_30 $$ count = 0[ FD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_13 $$ q = sc.nextInt()[ FD ]
Line_5 $$ public static void main(String[] args) -->Line_11 $$ n = sc.nextInt()[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_9 $$ String s, t, answer[ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_30 $$ count = 0[ FD ]
Line_15 $$ ai = sc.nextLong()-->Line_16 $$ if (mapA.containsKey(ai)) [ FD ]
Line_5 $$ public static void main(String[] args) -->Line_25 $$ for (index = 1; index <= n; index++) [ CD ]
Line_14 $$ for (index = 0; index < q; index++) -->Line_26 $$ if (mapA.containsKey(index)) [ FD ]
Line_14 $$ for (index = 0; index < q; index++) -->Line_27 $$ count = mapA.get(index)[ FD ]
Line_25 $$ for (index = 1; index <= n; index++) -->Line_26 $$ if (mapA.containsKey(index)) [ FD ]
Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()-->Line_16 $$ if (mapA.containsKey(ai)) [ FD ]
Line_14 $$ for (index = 0; index < q; index++) -->Line_16 $$ if (mapA.containsKey(ai)) [ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_21 $$ mapA.put(ai, 1L)[ FD ]
Line_11 $$ n = sc.nextInt()-->Line_25 $$ for (index = 1; index <= n; index++) [ FD ]
Line_6 $$ Scanner sc = new Scanner(System.in)-->Line_15 $$ ai = sc.nextLong()[ FD ]
Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()-->Line_18 $$ mapA.put(ai, count + 1)[ FD ]
Line_10 $$ Map<Long, Long> mapA = new HashMap<Long, Long>()-->Line_26 $$ if (mapA.containsKey(index)) [ FD ]
Line_5 $$ public static void main(String[] args) -->Line_8 $$ long n, k, q, index, ai, count[ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_16 $$ if (mapA.containsKey(ai)) [ FD ]
Line_15 $$ ai = sc.nextLong()-->Line_17 $$ count = mapA.get(ai)[ FD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_17 $$ count = mapA.get(ai)[ FD ]
Line_13 $$ q = sc.nextInt()-->Line_14 $$ for (index = 0; index < q; index++) [ FD ]
Line_14 $$ for (index = 0; index < q; index++) -->Line_15 $$ ai = sc.nextLong()[ CD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_18 $$ mapA.put(ai, count + 1)[ FD ]
Line_8 $$ long n, k, q, index, ai, count-->Line_11 $$ n = sc.nextInt()[ FD ]
