package jp.aojproj.bfs;

import java.util.ArrayDeque;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		// ??\???
		Scanner s = new Scanner(System.in);
		int h = s.nextInt(), w = s.nextInt(), n = s.nextInt();
		// ???????????¨?????????
		char[][] maze = new char[h][];
		for (int i = 0; i < h; i++) {
			maze[i] = s.next().toCharArray();
		}
		int ans = 0;
		// ??????????????°
		final int INF = 1000000;
		// ?§????4?????????????????????
		final int[] dx = { 0, 1, 0, -1 };
		final int[] dy = { 1, 0, -1, 0 };
		// ??´???????????§?¨?
		int gx, gy;

		// ???????????¢?????¨?????????
		int[][] d = new int[h][w];
		Pair pair = null;

		// ?????¢????????????
		gx = 2;
		gy = 2;
		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				// ?????????????????\????????????
				if (maze[i][j] == 'S') {
					pair = new Pair(i, j);
					// ????????????????????¢???0???????????????
					d[i][j] = 0;
				}
//				if (maze[i][j]) {
//					gx = i;
//					gy = j;
//				}
				d[i][j] = INF;
			}
		}
	

		Queue<Pair> queue = new ArrayDeque<Pair>();
		queue.add(pair);
		
		while (!queue.isEmpty()) {
			Pair p = queue.poll();
			//??´???????????£????????????
			if (p.i == gx && p.j == gy) {
				System.out.println("break");
				break;
			}
			// ?§??????????
			for (int k = 0; k < 4; k++) {

				int nx = p.i + dx[k];
				int ny = p.j + dy[k];
				// ?§??????§?????????????????§??????
				if (0 <= nx && nx < w && 0 <= ny && ny < h && maze[nx][ny] != 'X' && d[nx][ny] == INF) {
					queue.add(new Pair(nx, ny));
					d[nx][ny] = d[p.i][p.j] + 1;
				}
			}

		}
		System.out.println(d[gx][gy]);
	}
}

class Pair {
	int i, j;

	public Pair(int i, int j) {
		this.i = i;
		this.j = j;
	}

}