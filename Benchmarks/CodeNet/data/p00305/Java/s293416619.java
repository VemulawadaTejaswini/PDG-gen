import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;

public class Main {
	private static int n; // ?????????????????°
	private static int[][] pixels; // ?????????????????????
	private static int maxSum = Integer.MIN_VALUE; // ????¨????????????????
	private static int width = 1; // ???????¨????
	private static int height = 1; // ????????????

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(new InputStreamReader(System.in));

		// ???????????????????????±???????????????
		n = sc.nextInt();
		pixels = new int[n][n];
		for (int y = 0; y < n; y++) {
			for (int x = 0; x < n; x++) {
				pixels[y][x] = sc.nextInt();
			}
		}

		// ??¨????????????????????????????????????
		for (int y = 0; y < n; y++) {
			for (int x = 0; x < n; x++) {
				calculate(); // ????¨????????¨??????????
				width++;
			}
			width = 1; // ?¨??????????????????????
			height++;
		}

		// ?????????????????????
		System.out.println(maxSum);
	}

	/**
	 * ?±??????????????¨????????????¨??????????????§?????¨????????´??????????¨????????¨??????????
	 */
	private static void calculate() {
		int startY = 0;
		while ((startY + height) <= n) {
			int startX = 0;
			while ((startX + width) <= n) {
				int tmpSum = 0;
				tmpSum = calculateTmpSum(tmpSum, startX, startY); // ????¨????????¨??????????
				isMaxSum(tmpSum); // ????¨????????????§???????????????????????????
				startX++;
			}
			startY++;
		}
	}

	/**
	 * ?????????????????????????¨????????¨??????????
	 *
	 * @param tmpSum
	 *            ????¨????
	 * @param startX
	 *            x????§????
	 * @param startY
	 *            y????§????
	 * @return
	 */
	private static int calculateTmpSum(int tmpSum, int startX, int startY) {
		for (int y = 0; y < height; y++) {
			for (int x = 0; x < width; x++) {
				if ((y == 0) || (y == height - 1)) { // ???????????????????????????????¨??????°?????¨????¶???????
					tmpSum += pixels[startY + y][startX + x];
				} else { // ??°????????´????????????????????¨??????????????°????¶????
					tmpSum += pixels[startY + y][startX + x];
					tmpSum += pixels[startY + y][startX + width - 1];
					x = width;
				}
			}
		}
		return tmpSum;
	}

	/**
	 * ?¨?????????????????????????????????????????????????
	 *
	 * @param tmpSum
	 */
	private static void isMaxSum(int tmpSum) {
		if (tmpSum > maxSum) {
			maxSum = tmpSum;
		}
	}
}