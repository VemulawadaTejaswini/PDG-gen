

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import Sendame.Sendame.Pose;

/**
 * AOJ Sendame</br>
 *
 * @author ?????????????????§???
 */
public class Main{
	public enum Pose {
		tameru, mamoru, kougekida;
	}// ?????????Pose????????????

	/*
	 * ????????°???????????¨?????????????????????
	 */
	public static void main(String[] args) throws NumberFormatException, IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		// 1?????????????????¬?????????????????????????????°
		int game_set = Integer.parseInt(br.readLine());
		// ?????¬?????????????????????????????????
		Player isono = new Player("Isono-kun");
		Player nakajima = new Player("Nakajima-kun");

		// ???????????\??????????????¬??????????????????????????????????´???????
		for (int cnt = 0; cnt < game_set; cnt++)
			isono.gesture.add(Pose.valueOf(br.readLine()));
		for (int cnt = 0; cnt < game_set; cnt++)
			nakajima.gesture.add(Pose.valueOf(br.readLine()));
		// ????????????????????????????????????
		for (int turn = 0; turn < game_set; turn++) {
			// ???????????\????????????2???????????????
			for (int i = 0; i < 2; i++) {
				Player p1 = i == 0 ? isono : nakajima;
				Player p2 = i == 0 ? nakajima : isono;

				// ?????????????????????p1???????????????????????????????????????

				// p2????????????0??§???????????¢
				if (p2.gesture.get(turn) == Pose.kougekida && p2.getForce() == 0) {
					// p1????????????0??§???????????¢??§??????
					if (!(p1.gesture.get(turn) == Pose.kougekida && p1.getForce() == 0)) {
						System.out.println(p1.PlayerName);
						return;
					}
				}

				// p1????????????1??\?????§???????????¢
				if (p1.gesture.get(turn) == Pose.kougekida && p1.getForce() > 0) {
					if (p1.getForce() >= 5 || p2.gesture.get(turn) != Pose.mamoru) {
						System.out.println(p1.PlayerName);
						return;
					}
				}
			}

			// ???????????¢?????¨??£?????´??????????????????0?????????
			if (isono.gesture.get(turn) == Pose.kougekida)
				isono.force = 0;
			if (nakajima.gesture.get(turn) == Pose.kougekida)
				nakajima.force = 0;
			// ?????????
			if (isono.gesture.get(turn) == Pose.tameru)
				isono.force++;
			if (nakajima.gesture.get(turn) == Pose.tameru)
				nakajima.force++;
		}
		System.out.println("Hikiwake-kun");
	}// ?????????????????????????????????

//	private static boolean win_Or_draw(int game_set, ArrayList<Pose> isono_gesture, ArrayList<Pose> nakajima_gesture) {
//
//		for (int cnt = 0; cnt < game_set; cnt++) {
//			// ??????????????\?????????????????????
//			if (!isono.getHP() || !nakajima.getHP())
//				break;
//			// ?????¬???????????????????????§??????????????????
//			switch (isono_gesture.get(cnt)) {
//			case ACCUMULATE:
//				switch (nakajima_gesture.get(cnt)) {
//				case ACCUMULATE:
//					// ???????????¶????????§????????????????????????
//					if (isono.getForce() < isono.getMax_force())
//						isono.setForce(isono.getForce() + 1);
//					if (nakajima.getForce() < nakajima.getMax_force())
//						nakajima.setForce(nakajima.getForce() + 1);
//					break;
//				case DEFENCE:
//					// ?????¶???????????´??????
//					if (isono.getForce() < isono.getMax_force())
//						isono.setForce(isono.getForce() + 1);
//					break;
//				case ATTACK:
//					// ?£???????????????????
//					if (isono.getForce() < isono.getMax_force())
//						isono.setForce(isono.getForce() + 1);
//
//					if (nakajima.getForce() == 0)
//						// ????????????
//						nakajima.setHP(false);
//					else
//						// ?????¶????????????
//						isono.setHP(false);
//					// ????????????????????????
//					nakajima.setForce(0);
//					break;
//				}
//				break;
//			case DEFENCE:
//				switch (nakajima_gesture.get(cnt)) {
//				case ACCUMULATE:
//					// ?£???????????????´??????
//					if (nakajima.getForce() < nakajima.getMax_force())
//						nakajima.setForce(nakajima.getForce() + 1);
//					break;
//				case DEFENCE:
//					// ????????¨????????´????????§?????????????¶????
//					break;
//				case ATTACK:
//					// ?????¶????????????
//					if (nakajima.getForce() == nakajima.getMax_force())
//						isono.setHP(false);
//					// ????????????
//					else if (nakajima.getForce() == 0)
//						nakajima.setHP(false);
//					// ????????????????????????
//					nakajima.setForce(0);
//					break;
//				}
//				break;
//			case ATTACK:
//				switch (nakajima_gesture.get(cnt)) {
//				case ACCUMULATE:
//					if (isono.getForce() == 0)
//						// ????????????
//						isono.setHP(false);
//					else
//						// ?£????????????????
//						nakajima.setHP(false);
//					// ????????????????????????
//					isono.setForce(0);
//					// ?????¶???????????????
//					if (nakajima.getForce() < nakajima.getMax_force()) {
//						nakajima.setForce(nakajima.getForce() + 1);
//					}
//					break;
//				case DEFENCE:
//					if (isono.getForce() == isono.getMax_force())
//						// ?£????????????????
//						nakajima.setHP(false);
//					else if (isono.getForce() == 0)
//						// ????????????
//						isono.setHP(false);
//					// ????????\????????????
//					isono.setForce(0);
//					break;
//				case ATTACK:
//					if (isono.getForce() > nakajima.getForce())
//						// ?£????????????????
//						nakajima.setHP(false);
//					else if (isono.getForce() < nakajima.getForce())
//						// ?????¶????????????
//						isono.setHP(false);
//					// ????????\????????????
//					nakajima.setForce(0);
//					isono.setForce(0);
//					break;
//				}
//				break;
//			}// ???????????????????????????
//		} // for?????????????????????
//
//		// ?????????????????????
//		if (isono.getHP() && nakajima.getHP())
//			return false;
//
//		// ??????????????????????????????????????°???
//		if (!isono.getHP())
//			whoIsWinner = false;
//		return true;
//	}// win_Or_draw????????????????????????
}// ??????????????????????????????

/**
 * ?????¬??????????????¶???
 *
 * @author ?????????????????§???
 */
class Player {
	/**
	 * ?????????
	 */
	public int force = 0;
	/**
	 * ?????¬??????????????????
	 */
	public String PlayerName;
	/**
	 * ??????????????¶???
	 */
	public final static int MAX_FORCE = 5;

	public List<Pose> gesture = new ArrayList<Pose>();

	public List<Pose> getGesture() {
		return gesture;
	}

	public void setGesture(List<Pose> gesture) {
		this.gesture = gesture;
	}

	public String getPlayerName() {
		return PlayerName;
	}

	public void setPlayerName(String playerName) {
		PlayerName = playerName;
	}

	public int getMax_force() {
		return MAX_FORCE;
	}

	public int getForce() {
		return force;
	}

	public void setForce(int force) {
		this.force = force;
	}

	// ?????¬??????????????¶???????????????
	Player(String name) {
		this.PlayerName = name;
	}
}// Player?????????????????????