import java.util.Scanner;

/**
 * 
 * @author DemonSong
 * 
 *         0033.Ball
 * 
 *         ???????????????????????????????????????????????¨??????????????????1 ?????? 10 ?????§???????????????????????????10 ?????????????????¨????????£??¨ A ???????????¨??????????????? B
 *         ???????????? C ???????????\??????????????? D ????????? E ??????????????????????????¢??§???????????§?????? D ?????????????????¨??§??? B ??¨??? C
 *         ?????????????????\??????????±????????????¨?????§????????????
 * 
 *         ?????£??¨ A ???????????¨????????????????????????????????????????????????????????? B ????????? C?????\?????????????????????????????¨????????? B ??¨??? C
 *         ??????????????????????????¨?????????????°?????????????????????§?????????????????????????????´?????? YES???????????????????????´?????? NO
 *         ??¨????????????????????°?????????????????????????????????????????????????????¨????????§?????????????????\?????????????????¨?????§?????????????????¨??????????????????????¶?????????????????????\???????????¨?????§??????????????¨?????????
 *         B, C ??¨?????? 10 ???????????????????????\????????????????£??????????????????¨????????????
 * 
 *         Input ?????°?????????????????????????????????????????????????????????????????????????????° N ?????????????????????????????\?????????N
 *         ???????????????????????????????????????????????????????????????????????? 10 ??????????????????????????????????????????????????§?????????????????????
 * 
 *         Output ????????????????????????????????????YES ????????? NO ????????????????????????????????????
 * 
 *         Sample Input 2 3 1 4 2 5 6 7 8 9 10 10 9 8 7 6 5 4 3 2 1 Output for
 *         the Sample Input YES NO
 *
 */
public class Main{
	
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();
		for (int i = 0; i < n; i++){
			for(int j = 1; j <= 10; j++){
				ball[j] = in.nextInt();
			}
			System.out.println(solve(ball));
		}
		in.close();
	}
	
	static int kase;
	static int[] ball = new int[15];
	static int[] l = new int[15];
	static int[] r = new int[15];
	private static String solve(int[] ball){
		kase = 0;
		dfs(1, 1, 1);
		return kase == 1 ? "YES" : "NO";
	}
	
	private static void dfs(int i, int j, int k){
		if (i > 10){
			kase = 1;
			return;
		}
		if (kase == 1) return;
		if (ball[i] > l[j-1]){
			l[j] = ball[i];
			dfs(i+1, j+1, k);
		}
		if (ball[i] > r[k-1]){
			r[k] = ball[i];
			dfs(i+1, j, k+1);
		}
	}
	
//	private static String solve(int[] ball){
//	int[] dp = new int[ball.length];
//	
//	int max = 0;
//	for (int i = 0; i < ball.length; i++){
//		dp[i] = 1;
//		for (int j = 0; j < i; j++){
//			if (ball[i] <= ball[j]){
//				dp[i] = Math.max(dp[i], dp[j]+1);
//			}
//			max = Math.max(max, dp[i]);
//		}
//	}
//	return max <= 2 ? "YES":"NO";
//}
}