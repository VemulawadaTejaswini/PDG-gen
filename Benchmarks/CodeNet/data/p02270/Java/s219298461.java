import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

	public static void main(String[] args) throws Exception {
		// TODO ?????????????????????????????????????????????
		BufferedReader br =
				new BufferedReader( new InputStreamReader(System.in) );

		String[] data = br.readLine().split(" ");
		int n = Integer.parseInt(data[0]);
		int k = Integer.parseInt(data[1]);

		int[] w = new int[n];
		int max = 0; // max of w[i]
		int sum = 0; // sum of all w[i]
		for (int i=0; i < n; i++) {
			w[i] = Integer.parseInt( br.readLine() );
			sum += w[i];
			if (max < w[i]) {
				max = w[i];
			}
		}
//		int p = max;
//		while (true) {
//			if (canload(p, k, w))
//				break;
//			else
//				p++;
//		}
//		System.out.println(p);
		/**
		 * ???????????§????????????????°????p: max <= p <= sum
		 * binarysearch??§p????±???????
		 */
		// pi = {max, max+1, max+2, ... , sum,}
		// sum = max + sum - max
		int[] pi = new int[sum-max+1]; // pi.length = sum-max+1
		for (int i=0; i < pi.length; i++) {
			pi[i] = max + i;
		}

		int l = 0; // left
		int r = pi.length - 1; // right

		while (l != r) {
			int mid = (l + r) / 2;
			if ( canload(pi[mid], k , w) ) {
				r = mid;
			} else {
				l = mid+1;
			}
		}
		System.out.println(pi[l]);
	}

	/*
	 * max???????????????????????????k??°??§???????????????w??????????????????????????????
	 */
	static boolean canload(int max, int k, int[] w) {
		int count = 1; // ?????????????????°??°???k????¶????????????±???
		int p = 0; // ?????????????????????????????????????????????max????¶???????????????????????¬????????????????
		int n = w.length;
		int i = 0;

		while (true) {
			p += w[i];
			if (p > max) {
				count++;
				if (count > k) {
					return false;
				}
				p = 0;
			} else {
				i++;
				if (i == n) {
					return true;
				}
			}
		}

	}

}