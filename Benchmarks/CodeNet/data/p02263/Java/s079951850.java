package Stack;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;

class SampleStack {
	// ??\?????????????????????
	static final int NUM_MAX = 1000000000;
	static final int NUM_MIN = -1000000000;
	static final String NUM_ERR_MSG = "???????????°?????????????¶????????????????";

	// ??????????????°???????????????
	static final int OCNT_MIN = 1;
	static final int OCNT_MAX = 99;
	static final String OCNT_ERR_MSG = "?????????????????°?????????????¶????????????????";

	// ????????°???????????????
	static final int NCNT_MIN = 2;
	static final int NCNT_MAX = 100;
	static final String NCNT_ERR_MSG = "????????????????¶????????????????";

	// ????¨???\????????????????????????
	static final String ERR_MSG = "??????????????????????????????";

	public static void main(String[] args) throws IOException {
		// ??\?????¨????????°
		InputStreamReader isr = new InputStreamReader(System.in);
		BufferedReader br = new BufferedReader(isr);

		// ?????????????????¨????????°
		Stack<Integer> que = new Stack<Integer>();
		int a = 0;
		int b = 0;
		int ocnt = 0;
		int ncnt = 0;

		try {
			System.out.println("???????????????????¨??????§?¨????????????\?????????????????????");
			String[] stringArray = br.readLine().split("\\s");
			for (int i = 0; i < stringArray.length; i++) {
				if (ocnt <= OCNT_MAX) {
					// +??????????????????
					if (stringArray[i].equals("+")) {
						a = que.pop();
						b = que.pop();
						que.add(b + a);
						ocnt++;
						continue;
					}
					// -??????????????????
					if (stringArray[i].equals("-")) {
						a = que.pop();
						b = que.pop();
						que.add(b - a);
						ocnt++;
						continue;
					}
					// *??????????????????
					if (stringArray[i].equals("*")) {
						a = que.pop();
						b = que.pop();
						que.add(b * a);
						ocnt++;
						continue;
					}
				} else {
					System.out.println(OCNT_ERR_MSG);
					break;
				}

				// ??????????????????????????????
				if (ncnt <= NCNT_MAX) {
					int tmp = Integer.parseInt(stringArray[i]);
					if (tmp >= NUM_MIN && tmp <= NUM_MAX) {
						que.push(Integer.parseInt(stringArray[i]));
						ncnt++;
					} else {
						System.out.println(NUM_ERR_MSG);
						break;
					}
				} else {
					System.out.println(NCNT_ERR_MSG);
					break;
				}
			}

			// ???????????§???????????????????¨???????????????¨??????
			if (ocnt < OCNT_MIN) {
				System.out.println(OCNT_ERR_MSG);
			} else if (ncnt < NCNT_MIN) {
				System.out.println(NCNT_ERR_MSG);
			} else {
				System.out.print("?¨??????????:");
				System.out.println(que.pop());
			}

		} catch (NumberFormatException e) {
			System.out.println(ERR_MSG);
		}

	}

}