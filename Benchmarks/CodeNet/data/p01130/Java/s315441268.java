import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

import static java.lang.Integer.parseInt;

/**
 * Water Pipe Construction (Warshall-Floyd)
 */
public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String line;

		while ((line = br.readLine()) != null && !line.isEmpty()) {
			StringTokenizer st = new StringTokenizer(line);
			int n = parseInt(st.nextToken());  // ??????????????¨???????????°?????° n (3 <= n <= 100)
			int m = parseInt(st.nextToken());  // ?????°????????¶???????????° m (2 <= m <= 1000)
			int s = parseInt(st.nextToken());  // ?°´?????¨???????????°????????? s
			int g1 = parseInt(st.nextToken()); // ?°??°´??????????????°??¨?????? 2 ?????????????????°????????? g1???g2
			int g2 = parseInt(st.nextToken()); // ????????????????????????

			if ((n | m | s | g1 | g2) == 0) break;

			s--;
			g1--;
			g2--;

			int[][] cost = new int[n][n];
			for (int i = 0; i < n; i++) {
				Arrays.fill(cost[i], 1 << 20);
				cost[i][i] = 0;
			}

			for (int i = 0; i < m; i++) {
				st = new StringTokenizer(br.readLine());
				int b1 = parseInt(st.nextToken()); // ??????????§????????????°?????????
				int b2 = parseInt(st.nextToken()); // ???????????????????????°?????????
				int c = parseInt(st.nextToken());  // ?????° b1 ???????????° b2 ?????????????°??°´??????????¨?????????????????????????????????? (1 <= c <= 1000)
				b1--;
				b2--;
				cost[b1][b2] = c;
			}

			// solve
			for (int k = 0; k < n; k++) {
				for (int i = 0; i < n; i++) {
					for (int j = 0; j < n; j++) {
						cost[i][j] = Math.min(cost[i][j], cost[i][k] + cost[k][j]);
					}
				}
			}

			int min = cost[s][g1] + cost[s][g2];
			for (int i = 0; i < n; i++) {
				min = Math.min(min, cost[s][i] + cost[i][g1] + cost[i][g2]);
			}

			System.out.println(min);

		} // end while
	} // end main
}