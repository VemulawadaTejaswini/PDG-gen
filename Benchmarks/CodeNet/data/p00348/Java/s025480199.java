import java.io.*;
import java.util.List;
import java.util.stream.Collectors;

/**
 * Sort (http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0353)
 * 
 * @author ikaruga
 */
class Main {
	public static void main(String[] args) {
		long systemTime = System.currentTimeMillis();
		System.out.println("- start -");
		
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(
					System.in));
			// 2??????????????°???????????§??????
			List<String> lines = br.lines().collect(Collectors.toList());
			int arraySize = Integer.parseInt(lines.get(0));
			String[] array = lines.get(1).split("\\s");

			int[] numberArray = new int[arraySize];

			// Integer?????????????????????
//			int[] numberArray = Stream.of(array).mapToInt(Integer::parseInt).toArray();
			for (int i = 0; i < arraySize; i++) {
				numberArray[i] = Integer.parseInt(array[i]);
			}

			// ??????????????°?????????
			int resultCnt = countSortTimes(numberArray);

			// ??????
			System.out.println(resultCnt);

		} catch (ArrayIndexOutOfBoundsException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
		System.out.println("- end - " + String.valueOf(System.currentTimeMillis() - systemTime) + "ms");
	}

	/**
	 * ??????????????°?????°??????
	 * 
	 * @param numberArray
	 * @return sort count
	 */
	// private static int countSortTimes(List<Integer> numberList) {
	// boolean isSorted;
	// int cnt = 0;
	//
	// // ??????????????????
	// do {
	// isSorted = false;
	// for (int i = 1; i < numberList.size(); i++) { // ????´?0??????(??????)???????????????????????????
	// if (numberList.get(i) < numberList.get(i - 1)) {
	// numberList.add(numberList.get(i - 1)); // ??????????§????
	// numberList.remove(numberList.get(i - 1)); // ?§??????????????????????
	// isSorted = true;
	// cnt++;
	// break;
	// }
	// }
	// } while (isSorted);
	//
	// return cnt;
	// }
	private static int countSortTimes(int[] numberArray) {
		boolean isSorted;
		int size = numberArray.length;
		int cnt = 0;

		// ??????????????????
		do {
			isSorted = false;
			for (int i = 1; i < size; i++) { // ????´?0??????(??????)???????????????????????????
				if (numberArray[i] < numberArray[i - 1]) {
					int tmp = numberArray[i - 1];
					System.arraycopy(numberArray, i, numberArray, i - 1, size - i);
					numberArray[size - 1] = tmp; // ??????????§????
					isSorted = true;
					cnt++;
					break;
				}
			}
		} while (isSorted);

		return cnt;
	}
}