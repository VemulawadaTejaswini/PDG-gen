import java.io.*;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Sort (http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0353)
 * 
 * @author ikaruga
 */
class Main {
	public static void main(String[] args) {
		
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(
					System.in));
			// 2??????????????°???????????§??????
			List<String> lines = br.lines().collect(Collectors.toList());
			String[] array = lines.get(1).split("\\s");

			// ??????????????°?????????
			int resultCnt = countSortTimes2(Stream.of(array).mapToInt(Integer::parseInt).toArray());

			// ??????
			System.out.println(resultCnt);

		} catch (ArrayIndexOutOfBoundsException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * ??????????????°?????°??????
	 * 
	 * @param numberArray
	 * @return sort count
	 */
	private static int countSortTimes2(int[] numberArray) {
		boolean isSorted;
		int size = numberArray.length;
		int cnt = 0;

		// ??????????????????
		do {
			isSorted = false;
			for (int i = 1; i < size; i++) { // ??????????´????????????????????????????
				if (i == 0) continue; 
				if (numberArray[i] < numberArray[i - 1]) {
					int target = numberArray[i];
					int targetFinalIndex = i - 1;
					// target????????????????????????????????????
					for (int j = targetFinalIndex - 1; j >= 0; j--) {
						if (numberArray[j] < target) {
							targetFinalIndex = j + 1;
							break;
						} else {
							targetFinalIndex = j;
						}
					}
					int def = i - targetFinalIndex;
					int[] tmp = new int[def];
					System.arraycopy(numberArray, targetFinalIndex, tmp, 0, def); // ?????????????????????
					System.arraycopy(numberArray, i, numberArray, targetFinalIndex, size - i); // ????´?????????????
					int s = size - def;
					for (int j = 0; j < def; j++) {
						numberArray[s + j] = tmp[def-1-j];
					}
					isSorted = true;
					cnt += def;
					i = targetFinalIndex;
				}
			}
		} while (isSorted);

		return cnt;
	}
	
}