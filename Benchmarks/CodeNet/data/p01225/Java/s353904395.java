

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class Main {

	/**
	 * ?????????3???*2(frontnumber???rearColor)*3?????????==18 ????????\????????????
	 */
	private static final int TRIPLECARDSET = 18;

	/**
	 * ?????¶??????????????????????????????????????????????????????
	 */
	private static final String ZERO = "0";

	/**
	 * for??????????????????????¨???????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSZERO = 0;

	/**
	 * for??????????????????????¨???????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSONE = 1;

	/**
	 * for??????????????????????¨???????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSTWO = 2;

	/**
	 * for??????????????????????¨???????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSTHREE = 3;

	/**
	 * ??????????????§BufferedReader?????????
	 *
	 * @throws IOException
	 *             try-catch??????throws IOException?????£?¨??????????
	 */

	public static void main(String[] args) throws IOException {

		// ?????????????????????
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		// ?????????????´???´???
		ArrayList<Integer> answer = new ArrayList<Integer>();

		// ????????????????´???´???
		ArrayList<TestCard> cardArr = new ArrayList<TestCard>();

		// private????£?????????\?????????????????????????????§????????????
		TestCard tc = new TestCard();

		// 1??????????????????set?????°??????????????°
		int set = Integer.parseInt(br.readLine());

		/**
		 * ?????°?????????????????????????????????
		 *
		 * @param tmpNum
		 *            ??????????????°???????????? ??????1 2 3 3 4 5 7 7 7
		 * @param transColor
		 *            ???????????????????????? ??????R R R R R R G G G
		 * @param transNum[]
		 *            String??????tmpNum??????<??°????????±/>????????£?????????????´?
		 * @param transColor[]
		 *            String??????tmpNum??????<????????±/>????????£?????????????´?
		 *
		 */
		// for????????? set????????°?????????
		for (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {
			// ??????????????\???????????????
			String tmpNum = br.readLine();
			// ??????????????\???????????????
			String tmpColor = br.readLine();

			// ?????°???????§£ ??°??????????´?
			String[] transNum = tmpNum.split(" ");
			// ?????°???????§£ ??????????´?
			String[] transColor = tmpColor.split(" ");

			// ???????????????????????????????????£??????????????°??????
			tc.setOnecardset(transNum.length + transColor.length);

			// ????´??????????????????????????????????????????????
			cardArr.add(new TestCard(Integer.parseInt(transNum[cnt]), transColor[cnt]));

			// ???????????¶??????????????°??? ????????????????????°0
			// result????????????????????????????´???´???
			int result = playtheGame(cardArr);
			// ?????????????´?
			answer.add(result);
		}
	}// main????????????

	/**
	 * ???????????¶???????????????
	 *
	 * @return result ??????????????????????????????
	 * @param count
	 *            ????????¨"0"????????\?????????????????£?????¨????????°?????°??????
	 */
	public static int playtheGame(ArrayList<TestCard> cardArr) {

		// ?????????0???????????????
		int result = ADDRESSPLUSZERO;
		// ???????????????0???????????????
		int count = ADDRESSPLUSZERO;

		/**
		 * @Warnning
		 */
		// ???????????????????????´???
		Collections.sort(cardArr, new Comparator<TestCard>() {
			@Override
			public int compare(TestCard numA, TestCard numB) {
				return numA.getFrontnumber() - numB.getFrontnumber();
			}
		});

		// 3??£?¶????????????????????????°?¶????
		// serialNumCard(cardArr);

		// ??????????????????3???????????°?¶????
		sameNumCard(cardArr);

		/**
		 * @Warnning ???????????????????????´??????
		 *
		 *           1) .indexOf() ?????????????????????????????§????????£?????????????????????3?????\????????????????????¶????????????????????¨??§
		 */
		for (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {

			if (cardArr.get(cnt).equals(ZERO)) {
				// ?????\???????????????????????°?????°??????
				count++;
				// ?????¶??????????????°???????????????
				if (count >= TRIPLECARDSET) {
					result = ADDRESSPLUSONE;
				}
			}
		}

		// ????????????????????????????????????
		return result;
	}// playtheGame????????????????????????

	/**
	 * 3??£?¶??????°??????????????°?¶????
	 *
	 * @param card2
	 *            ?????¶??????????????°"0"????????\??????????????????
	 */
	public static void sameNumCard(ArrayList<TestCard> cardArr) {

		// private????£?????????\?????????????????????????????§????????????
		TestCard tc = new TestCard();
		/**
		 * for??????????????¬???
		 *
		 * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]
		 *
		 * @param cnt1
		 *            ???????????????????????? "0";
		 * @param cnt2
		 *            ???????????????????????? "cnt1 + 1";
		 * @param cnt3
		 *            ???????????????????????? "cnt2 + 1";
		 *
		 */

		// for???????????????????????????????????????????????¨???????????????????????°????????????
		for (int cnt1 = ADDRESSPLUSZERO; cnt1 < -ADDRESSPLUSTWO; cnt1++) {
			// ????????????????????¨???????????????????????°????????????
			for (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {
				for (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {
					// (1)????????°???????????????????????????
					if (cardArr.get(cnt1).equals(cardArr.get(cnt3))
							&& cardArr.get(cnt3).equals(cardArr.get(cnt3 + ADDRESSPLUSTWO))) {
						// (2)?????????????????????????????????
						if (cardArr.get(cnt2).equals(cardArr.get(cnt3 + ADDRESSPLUSONE))
								&& cardArr.get(cnt3 + ADDRESSPLUSONE).equals(cardArr.get(cnt3 + ADDRESSPLUSTHREE))) {
							// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????"0"????????\
							cardArr.set(cnt1, (new TestCard(ZERO)));
							cardArr.set(cnt2, (new TestCard(ZERO)));
							cardArr.set(cnt3, (new TestCard(ZERO)));
							cardArr.set(cnt3 + ADDRESSPLUSONE, (new TestCard(ZERO)));
							cardArr.set(cnt3 + ADDRESSPLUSTWO, (new TestCard(ZERO)));
							cardArr.set(cnt3 + ADDRESSPLUSTHREE, (new TestCard(ZERO)));
						}
					}
				}
			}
		}
	}// sameNumCard????????????????????????

	/**
	 * ????????°????????????????????°?¶????
	 *
	 * @param card
	 *            ?????¶??????????????°"0"????????\??????????????????
	 */
//	public static void serialNumCard(ArrayList<TestCard> cardArr) {
//		// private????£?????????\?????????????????????????????§????????????
//		TestCard tc = new TestCard();
//		/**
//		 * for??????????????¬???
//		 *
//		 * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]
//		 *
//		 * @param cnt1
//		 *            ???????????????????????? "0";
//		 * @param cnt2
//		 *            ???????????????????????? "cnt1 + 1";
//		 * @param cnt3
//		 *            ???????????????????????? "cnt2 + 1";
//		 *
//		 * @param tempNum
//		 *            String????????????????????°??????int???????????£???????????????????????¨????????°
//		 *
//		 */
//
//		// for????????????????????????????????????????????¨???????????????????????°????????????
//		for (int cnt1 = ADDRESSPLUSZERO; cnt1 < tc.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {
//			for (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < tc.getOnecardset() - ADDRESSPLUSONE; cnt2++) {
//				for (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < tc.getOnecardset(); cnt3++) {
//
//					// (1)3??£?¶??????°????????????
//					if (cardArr.get(cnt1) == (cardArr.get(cnt3) - ADDRESSPLUSONE)
//							&& cardArr.get(cnt1) == (cardArr.get(cnt3 + ADDRESSPLUSTWO) - ADDRESSPLUSTWO)) {
//						// (2)?????????????????????????????????
//						if (cardArr.get(cnt2).equals(cardArr.get(cnt3 + ADDRESSPLUSONE))
//								&& cardArr.get(cnt3 + ADDRESSPLUSONE).equals(cardArr.get(cnt3 + ADDRESSPLUSTHREE))) {
//							// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????"0"????????\
//							cardArr.set(cnt1, (new TestCard(ZERO)));
//							cardArr.set(cnt2, (new TestCard(ZERO)));
//							cardArr.set(cnt3, (new TestCard(ZERO)));
//							cardArr.set(cnt3 + ADDRESSPLUSONE, (new TestCard(ZERO)));
//							cardArr.set(cnt3 + ADDRESSPLUSTWO, (new TestCard(ZERO)));
//							cardArr.set(cnt3 + ADDRESSPLUSTHREE, (new TestCard(ZERO)));
//						}
//					}
//				}
//			}
//		}
//	}// serialNumCard ????????????????????????

}// RummyTest????????????

class TestCard {
	/**
	 * int ??????????????°???
	 */
	private static int onecardset;

	/**
	 * int ????????????????????????????????\????????????????????¢????£???¢??? 2???????¬?????????????????????¨??????
	 */
	private static final int CARDPAGE = 2;

	/**
	 * int ??????????????°?????????~????????§?????°???????????°??¶????????????
	 */
	private static int frontnumber;

	/**
	 * String ???????????????????¨??????????????????????
	 */
	private static String rearColor;

	public static int getOnecardset() {
		return onecardset;
	}

	public static int getFrontnumber() {
		return frontnumber;
	}

	public static void setFrontnumber(int frontnumber) {
		TestCard.frontnumber = frontnumber;
	}

	public static String getRearColor() {
		return rearColor;
	}

	public static void setRearColor(String rearColor) {
		TestCard.rearColor = rearColor;
	}

	public static void setOnecardset(int onecardset) {
		TestCard.onecardset = onecardset;
	}

	public TestCard() {
		// TODO ?????????????????????????????????????????????????????????
	}

	public TestCard(String tmp) {
		// TODO ?????????????????????????????????????????????????????????
		rearColor = tmp;
	}

	/**
	 *
	 * @param transNum
	 *            ???????????????????????????????????°???
	 * @param transColor
	 *            ????????????????????????????????????
	 */
	public TestCard(int transNum, String transColor) {
		// ?????¬???int?????????????????????int???????????????
		frontnumber = transNum;
		// ?????¬???String?????????????????????String???????????????
		rearColor = transColor;
	}
}// Card?????????????????????