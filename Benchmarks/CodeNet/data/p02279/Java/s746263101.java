import java.util.Scanner;

public class Main {

	private static int[] depths;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		sc.useDelimiter(System.getProperty("line.separator"));
		int n = sc.nextInt();
		//??±????????????????¨????
		depths = new int[n];

		Tree[] trees = new Tree[n];
		for (int i = 0; i < n; i++) {
			trees[i] = new Tree(-1, -1, -1);
		}

		for (int i = 0; i < n; i++) {
			String tmp = sc.next();
			int[] a = toIntAry(tmp);
			int k = a[1];	//?¬???°??????
			int id = a[0];	//id??????
			int left = 0;
			int parent = 0;
			//?¬???°?????°????????°?????????
			for (int j = 2; j < k+2; j++) {
				if(j==2){
					//???????????´?????´????????????????´?????¨????
					trees[id].left = a[j];
					left = a[j];
					parent = a[0];
				}else{
					//??????????´??????????????´?????¨????
					trees[left].right = a[j];
				}

				//??????????´?????????´??°
				left = a[j];
				//??????????´???????????´?????¨????
				trees[left].parent = parent;

			}
		}

		//??¨?????????????????????
		int rootNo = 0;
		for (int i = 0; i < n; i++) {
			if(trees[i].parent==-1)rootNo = i;
		}

		//???tree????´??????±????????????
		setDepth(trees, rootNo,0);

		//??¨???
		disp(trees,n);

	}


	private static void disp(Tree[] trees, int n) {
		for (int i = 0; i < n; i++) {
			String disp="";
			disp += "node "+i+": ";
			disp += "parent = "+trees[i].parent+", ";
			disp += "depth = "+depths[i] +", ";

			//root/internalnode/leaf??????
			if(trees[i].parent==-1){
				disp += "root, ";
			}else if(trees[i].left==-1){
				disp += "leaf, ";
			}else{
				disp += "internal node, ";
			}

			//??????????´??????¨???
			int current = trees[i].left;
			disp += "[";
			while(current!=-1){
				disp += current;
				current = trees[current].right;
				if(current!=-1)disp += ", ";
			}
			disp += "]";

			System.out.println(disp);

		}
	}


	private static void setDepth(Tree[] trees,int no, int i) {
		depths[no] = i;	//???????????????????´??????±????????????
		//???????????????????????´????????????????´???????????????±????????????
		if(trees[no].right!=-1)setDepth(trees, trees[no].right,i);
		//????????????????´????????????´????????????????´???????????????±????????????
		if(trees[no].left!=-1)setDepth(trees,trees[no].left,i+1);
	}


	private static int[] toIntAry(String str) {
        String[] tmp = str.split(" ");
        int n = Integer.parseInt(tmp[1]);
        int[] A = new int[n+2];
        for (int i = 0; i < n+2; i++) {
			A[i] = Integer.parseInt(tmp[i]);
		}
        return A;
	}

	private static class Tree{
		public int parent;	//???????´???????
		public int left;	//Left?????????????´???????????????£??¨????????´???????´?
		public int right;	//right?????????????´?????????????????????´???????´?
		public Tree(int i, int j, int k) {
			this.parent = i;
			this.left = j;
			this.right = k;
		}
	}


}