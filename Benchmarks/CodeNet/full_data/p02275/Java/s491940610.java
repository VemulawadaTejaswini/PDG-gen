import java.util.Scanner;

public class Main {

	private static int count = 0;


	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		sc.useDelimiter(System.getProperty("line.separator"));
		int n = sc.nextInt();
		String AS = sc.next();
		//?¨??????????
		int[] A = toIntAry(AS, n);
		//????????¨?????????????????????
		int[] B = new int[n+1];

		//??????????????§????????????
		int k = getMax(A);

		CountingSort(A,B, k,n);

		for (int i = 0; i < n; i++) {
			if(i==n-1){
				System.out.println(B[i]);
			}else{
				System.out.print(B[i]+" ");
			}

		}



	}


	/**
	 *
	 * @param a ?¨??????¨??????????????????????±????????????\??£?????????
	 * @param b ????????¨?????????????????????
	 * @param k ??????a?????????????´?????????§???
	 * @param n ??????A???B???????´???°
	 */
	private static void CountingSort(int[] a, int[] b, int k,int n) {
		//?¨???°???????????????
		final int CMAX=10000;
		int[] c = new int[CMAX+1];

		//??????c????????????
		for (int i = 0; i <= CMAX; i++) {
			c[i] = 0;
		}

		//??????C???i???????????°????¨????
		//ex. A[] = 1,3,3,4,0
		//    C[] = 1,0,1,2,1
		for (int i = 0; i < n; i++) {
			c[a[i]]++;

		}
		//??????C???i??\??????????????°????¨????
		//ex. A[] = 1,3,3,4,0
		//    C[] = 1,1,2,4,5
		for (int i = 1; i <= CMAX; i++) {
			c[i] = c[i] + c[i-1];
		}

		//??????C???????????????B????¨????
		for(int i=n-1; i>=0; i--){
			//?¨??????¨??????a???????´?i??????????????????????????°?????????????¨???°??????c????????????
			//ex. A[] = 1,3,3,4,0?????????c[0]=1
			int pos = c[a[i]];
			//pos?????????a????¨????
			b[pos-1] = a[i];
			//?????????????´????????¨???°??????c?????????????°?
			c[a[i]]--;
		}


	}


	private static int getMax(int[] a) {
		int max = 0;

		for (int i = 0; i < a.length; i++) {
			if(max <= a[i]){
				max = a[i];
			}
		}
		return max;
	}


	private static int[] toIntAry(String str, int n) {
        String[] tmp = str.split(" ");
        int[] A = new int[n+1];
        for (int i = 0; i < n; i++) {
			A[i] = Integer.parseInt(tmp[i]);
		}
        return A;
	}


}