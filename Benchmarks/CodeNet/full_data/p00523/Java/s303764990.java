import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Scanner;
import java.util.TreeMap;

public class Main {
	private static int baumNum;
	private static int[] baum;
	private static int firstBaumStart;
	private static int secondBaumStart;
	private static int thirdBaumStart;
	private static int firstBaumSize;
	private static int secondBaumSize;
	private static int thirdBaumSize;

	private static int minBaumNo;
	private static final int FIRST = 1;
	private static final int SECOND = 2;
	private static final int THIRD = 3;

	private static int minBaumSize = Integer.MIN_VALUE;

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(new InputStreamReader(System.in));

		baumNum = sc.nextInt();
		baum = new int[baumNum];
		for (int i = 0; i < baumNum; i++) {
			baum[i] = sc.nextInt();
		}

		// ???????????????????°????????????????????????????????????§???????±??????????
		// ???????????????????°????????????????????????????????????§????????§??????????????????
		// ??????????????????????????§?¶??????????
		// ?????????????????????????????????????°????????????£?????¨????????¨??????
		int tmp = baumNum / 3;
		firstBaumStart = 0;
		secondBaumStart = firstBaumStart + tmp;
		thirdBaumStart = secondBaumStart + tmp;

		while (true) {
			getBaumSize(); // ???????????????????????????????????????????????????
			getMinBaumNo(); // ???????°??????????????????????????????????????????????
			tryRaiseBaumSize(); // ???????°?????????????????????????????????????????????§??????????????????
		}
	}

	private static void tryRaiseBaumSize() {
		switch (minBaumNo) {
		case FIRST:
			firstBaumSize = getBaumSize(firstBaumStart, secondBaumStart + 1);
			secondBaumSize = getBaumSize(secondBaumStart + 1, thirdBaumStart);
			if ((firstBaumSize < minBaumSize) && (secondBaumStart < minBaumSize)) {
				endGame();
			} else {
				
			}
			secondBaumStart++;
			break;
		case SECOND:
			firstBaumSize = getBaumSize(firstBaumStart, secondBaumStart - 1);
			secondBaumSize = getBaumSize(secondBaumStart - 1, thirdBaumStart);
			if ((firstBaumSize < minBaumSize)
					|| (secondBaumStart < minBaumSize)) {

			} else {
				secondBaumStart--;
			}
			secondBaumSize = getBaumSize(secondBaumStart, thirdBaumStart + 1);
			thirdBaumSize = getBaumSize(thirdBaumStart + 1, baumNum);
			if ((secondBaumSize < minBaumSize)
					|| (thirdBaumSize < minBaumSize)) {
				endGame();
			}
			thirdBaumStart++;
			break;
		case THIRD:
			secondBaumSize = getBaumSize(secondBaumStart, thirdBaumStart - 1);
			thirdBaumSize = getBaumSize(thirdBaumStart - 1, baumNum);
			if ((secondBaumSize < minBaumSize)
					|| (thirdBaumSize < minBaumSize)) {
				endGame();
			}
			break;
		}
	}

	private static void endGame() {
		System.out.println(minBaumSize);
		System.exit(0);
	}

	private static void getBaumSize() {
		firstBaumSize = getBaumSize(firstBaumStart, secondBaumStart);
		secondBaumSize = getBaumSize(secondBaumStart, thirdBaumStart);
		thirdBaumSize = getBaumSize(thirdBaumStart, baumNum);
	}

	private static int getBaumSize(int start, int end) {
		int tmpSum = 0;
		for (int i = start; i < end; i++) {
			tmpSum += baum[i];
		}
		return tmpSum;
	}

	private static void getMinBaumNo() {
		int tmpMax = Integer.MAX_VALUE;
		if (firstBaumSize < tmpMax) {
			tmpMax = firstBaumSize;
			minBaumNo = FIRST;
		}
		if (secondBaumSize < tmpMax) {
			tmpMax = secondBaumSize;
			minBaumNo = SECOND;
		}
		if (thirdBaumSize < tmpMax) {
			tmpMax = thirdBaumSize;
			minBaumNo = THIRD;
		}
		minBaumSize = tmpMax;
	}

	private static void printCurrentBaum() {
		System.out.println(String.format("????????????????????????????????????%d", firstBaumSize));
		System.out.println(String.format("????????????????????????????????????%d", secondBaumSize));
		System.out.println(String.format("????????????????????????????????????%d", thirdBaumSize));
		System.out.println(String.format("???????°???????????????????????????????%d???????????§?????????%d", minBaumNo, minBaumSize));
	}
}