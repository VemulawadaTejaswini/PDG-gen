import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main {

    public static void main(String args[]) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] firstRow = br.readLine().split("\\s");

        // ????´???°
        int elementNum = Integer.parseInt(firstRow[0]);
        // ???????????????
        int quantum = Integer.parseInt(firstRow[1]);

        // ????????\?????????????????????????????????????????????FIFO
        // ?????????stack,dequeue??§?????£????????§?????????queue??§???????????????????????£???????????????????????????
        Queue<Process> que = new LinkedList<Process>();
        for (int i = 0; i < elementNum; i++) {
            String[] stringArray = br.readLine().split("\\s");
            // ???p1 150?????????????????¢?????§stringArray????????????????????????
            // p1?????????????????????,150?????????????????????????????????????????????????????¨??????????????????
            // ????????£??¨??????????????????????????????????????????
            Process process = new Process(stringArray[0],
                    Integer.parseInt(stringArray[1]));
            que.offer(process);
        }

        // ??????????¨???????
        int resultTime = 0;
        while (que.size() > 0) {
            Process process = que.poll();
            // ????¨???????????????¨????????????
            resultTime += quantum;
            // ???????????????????????????
            if ((process.processTime = process.processTime - quantum) > 0) {
                // ??????????????????????????????????????????????????????????????´??????
                // ???????°?????????????????????¨??????????????????
                que.offer(process);
                continue; // else??????????????§
            }
            // processTime???(-20)??????????????£???????????°????????????????????????
            // ??????????¨??????????????????????
            resultTime += process.processTime;
            // ?????????????????????????????????????????´???????????????????????¨??????????????§???????????£?????????
            // ??¨???????????????????????????
            System.out.println(process.name + " " + resultTime);
        }

    }

    /**
     * Process???????????????
     */
    private final static class Process {
        // ??????????????????public????????????
        public String name = null;
        public int processTime = 0;

        public Process(String name, int processTime) {
            this.name = name;
            this.processTime = processTime;
        }
    }
}