
import java.util.HashMap;
import java.util.Scanner;

/**
 * ??????????????¢????????§???????????????</br>
 *
 * ????????????????????????????????¨???????????????????????????????????¨?????????</br>
 * ??¨????????????????????????????????¨?????§?????????????????????????????????????????°????????????????????¨??§?????????
 *
 * @author ?????????????????§???
 * @version 1.8_45
 */
public class Main{
	/*
	 * ????????°???????????¨?????????????????????
	 */
	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		while (true) {

			// ??????????????????????????°
			int gems = sc.nextInt();
			// ???????????¶?????\??????????????????????????°??????????????????
			if (gems == 0)
				break;

			// ???????????¶???????????????????§????????????????
			boolean[][] map = new boolean[21][21];

			for (int gem_cnt = 0; gem_cnt < gems; gem_cnt++) {
				// ???????????????
				map[sc.nextInt()][sc.nextInt()] = true;
			}
			// ??????????????°
			int order = sc.nextInt();
			// ????????????
			OrderAndRun(sc, order, map);

			// ???????????????
			outputAnswer(map);
		} // while?????????????????????

		// ????????????????????????
		sc.close();
	}// ?????????????????????????????????

	/**
	 * ??????????????????????????§?????????
	 *
	 * @param map
	 *            ????????????????????£?????´???
	 */
	private static void outputAnswer(boolean[][] map) {
		boolean ans = true;
		// ???????????????
		for (int rowIndex = 0; rowIndex < map.length; rowIndex++) {
			for (int colIndex = 0; colIndex < map.length; colIndex++) {
				// ?????????????????????????????°"No"?????????
				if (map[rowIndex][colIndex])
					ans = false;
			}
		}
		// ???????????????
		System.out.println(ans ? "Yes" : "No");
	}// outputAnswer????????????????????????

	/**
	 * ??????????????£??????????????????????????????
	 *
	 * @param sc
	 *            ????´??????????????????????
	 * @param comand
	 *            ??????????????°
	 * @param map
	 *            ?????????????????????????????´???
	 */
	private static void OrderAndRun(Scanner sc, int comand, boolean[][] map) {

		// ??????????????????????????£?¨?(?????????????????????????????????????????£?¨?)
		RemoteControl rc = new RemoteControl();
		// ?????????????????????
		int move[] = new int[] { rc.getLanding()[0], rc.getLanding()[1] };

		for (int cnt = 0; cnt < comand; cnt++) {
			// ?§??????????,?????¢
			char dir = sc.next().charAt(0);
			int distance = sc.nextInt();

			// ?????¢????????£????§???????????????????
			for (int run = 0; run < distance; run++) {
				move[0] += rc.getOrderList().get(dir)[0];
				move[1] += rc.getOrderList().get(dir)[1];

				if (map[move[0]][move[1]] == true) {
					// ?????????????????°???????????¢??????
					map[move[0]][move[1]] = false;
				}
			}
		}

	}// OrderAndRun????????????????????????

}// ??????????????????????????????

/**
 *
 * ?????????????????????????´???????????????§??´???
 *
 * @author ?????????????????§???
 *
 */
enum Direction {

	NORTH('N'), EAST('E'), SOUTH('S'), WEST('W');

	// ??????????????????????????????????????????????????°
	private final char dir;

	// ????????????????????????????????????????????????
	Direction(char direction) {
		this.dir = direction;
	}

	// ???????°???¨
	public char getDir() {
		return dir;
	}
}// Direction?????????????????????

/**
 * ????????????</br>
 * ?????????</br>
 * ???????????¨?§??????????
 *
 * @author ?????????????????§???
 *
 */
class RemoteControl {

	/**
	 * ???????????¶??????????????????????????°
	 */
	private int[] landing = { 10, 10 };

	// ???????°???¨
	public int[] getLanding() {
		return landing;
	}

	/**
	 *	??????????????????????????£????§????
	 */
	private HashMap<Character, int[]> orderList = new HashMap<Character, int[]>() {
		{
			put(Direction.NORTH.getDir(), new int[] { 0, 1 });
			put(Direction.SOUTH.getDir(), new int[] { 0, -1 });
			put(Direction.EAST.getDir(), new int[] { 1, 0 });
			put(Direction.WEST.getDir(), new int[] { -1, 0 });
		}
	};

	// ???????°???¨
	public HashMap<Character, int[]> getOrderList() {
		return orderList;
	}

}// RemoteControl?????????????????????