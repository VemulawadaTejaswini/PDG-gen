import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

    private int[][] cells;

    public Main() {
        // 10??10 ?????????????????¨???
        this.cells = new int[10][10];
    }

    public static void main(String[] args) throws Exception {
        // ??\??????????????¨???????????????

        Main droppingInk = new Main();

        // ??\????????????????????????
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        while (true) {
            String inks = null;
            try {
                inks = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            if (inks == null || inks.equals("")) {
                break;
            }

            // ?????°???????????????????´???????
            // for (String inks : args) {

            // 1?????????????????????????????±
            String[] ink = inks.split(",");
            // ????????????x??§?¨?
            int ink_X = Integer.parseInt(ink[0]);
            // ????????????y??§?¨?
            int ink_Y = Integer.parseInt(ink[1]);
            // ??????????????§??????
            int ink_size = Integer.parseInt(ink[2]);

            // ???????????´???????????????????????????????????????
            droppingInk.carcDroppingInk(ink_X, ink_Y, ink_size);

            droppingInk.check();

        }

        // ?????????????????????
        droppingInk.print();

    }

    void check() {
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                System.out.print(this.cells[i][j]);
            }
            System.out.println();
        }
        System.out.println();
    }

    /**
     * ???????´??????????????????´????????????
     *
     * @param ink_X
     *            ??????????????´????????????x??????
     * @param ink_Y
     *            ??????????????´????????????y??????
     * @param size
     *            ??????????????§??????
     */
    private void carcDroppingInk(int ink_X, int ink_Y, int size) {
        switch (size) {
        case 3:
            isRangeAdd(ink_X - 2, ink_Y);
            isRangeAdd(ink_X, ink_Y - 2);
            isRangeAdd(ink_X + 2, ink_Y);
            isRangeAdd(ink_X, ink_Y + 2);
            break;
        case 2:
            isRangeAdd(ink_X - 1, ink_Y - 1);
            isRangeAdd(ink_X - 1, ink_Y + 1);
            isRangeAdd(ink_X + 1, ink_Y - 1);
            isRangeAdd(ink_X + 1, ink_Y + 1);
            break;
        case 1:
            isRangeAdd(ink_X, ink_Y);
            isRangeAdd(ink_X - 1, ink_Y);
            isRangeAdd(ink_X, ink_Y - 1);
            isRangeAdd(ink_X + 1, ink_Y);
            isRangeAdd(ink_X, ink_Y + 1);
            break;
        }
    }

    /**
     * ??????????????´????????????????´??????????????????????????????? ??????????????´?????????????´??????????????????????
     *
     * @param cells_X
     *            X??§?¨?
     * @param cells_Y
     *            Y??§?¨?
     */
    private void isRangeAdd(int cells_X, int cells_Y) {
        if ((0 <= cells_X && cells_X < 10) && (0 <= cells_Y && cells_Y < 10)) {
            // ??????????????´????????????????´??????????????????´???????????????????????????
            this.cells[cells_X][cells_Y] += 1;
        }
        // ??????????????´????????????????´??????????????????´??????????????????
    }

    /**
     * ??????????????????????????¨???????????????????????°???????????????????????????????????????????????????
     */
    private void print() {
        int countZero = 0;
        int maxInk = 0;

        for (int[] cells_x : this.cells) {
            for (int cell_xy : cells_x) {
                // ??????????????????????????¨???????????????????????°????¨????
                if (cell_xy == 0) {
                    countZero++;
                }
                // ??????????????????????????????????¨????
                if (maxInk < cell_xy) {
                    maxInk = cell_xy;
                }
            }
        }

        // ??????
        System.out.println(countZero);
        System.out.println(maxInk);

    }
}