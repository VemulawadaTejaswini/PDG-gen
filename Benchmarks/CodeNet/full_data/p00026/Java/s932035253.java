import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

/**
 * 026?????? 30??????OK???3/20
 * @author kentaro.maeda
 *
 */
public class Main {	

	// ??§?¨?
	private static class Point{
		public final int x;
		public final int y;
		public Point(int x, int y) {
			this.x=x;
			this.y=y;
		}
	}
	// ??§?¨?????????????????????£????????£
	private static Point p(int x, int y){
		return new Point(x, y);
	}
	
	// ???????????\??????????????????????????????
	private static final Map<Integer, List<Point>> INC = new HashMap<>();
	static{
		List<Point> small = Arrays.asList(p(0,0),p(-1, 0), p(1, 0), p(0, -1), p(0 ,1));//?°????????????????????????????
		List<Point> middle = new ArrayList<>(small); // ??\???????????????????????????????????¨???????????????
		middle.addAll(Arrays.asList(p(-1,-1), p(-1, 1), p(1, -1), p(1,1))); //????????????
		List<Point> big = new ArrayList<>(middle);
		big.addAll(Arrays.asList(p(2,0), p(-2,0), p(0,2), p(0,-2))); //??§?????????
		
		INC.put(1, small); 
		INC.put(2, middle); 
		INC.put(3, big);
	};
	
	public static void main(String[] args) throws Exception{
		
		int[][] paper = new int[10][10];
		
		Scanner scan = new Scanner(System.in);
		
		while(true) {
			
			String line = scan.nextLine();
			if (line == null || line.trim().length() == 0) {
				break;
			}
			String[] in = line.split(",");
			paint(paper, Integer.parseInt(in[0]), Integer.parseInt(in[1]), Integer.parseInt(in[2]));
		}
		scan.close();
		
		// ????¨????????§?
		int whiteCells = 0; //?????????????????°
		int max = 0; // ???????????????
		
		for (int[] row : paper) {
			for(int cell : row) {
				//?±????????????????????¨?
				if (cell == 0) {
					whiteCells++;
				}
				// ?????§????????´??°
				if (max < cell) {
					max = cell;
				}
			}
		}
		System.out.println(whiteCells);
		System.out.println(max);
	}
	// ?????????????´????????????????
	private static void paint(int[][] paper, int x, int y, int size) {
		int xLen = paper[0].length;
		int yLen = paper.length;
		// INC????????????????????¨??????????????????????????????????????????????????????????????§????§????????????????????????????????????°OK???
		for (Point p : INC.get(size)) {
			if (inPaper(p.x + x, xLen) && inPaper(p.y + y, yLen)){
				paper[p.x + x][p.y + y]++;
			}
		}
		
	}
	// ?´???????????????????
	private static boolean inPaper(int n, int len) {
		return 0 <= n && n < len;
	}
}