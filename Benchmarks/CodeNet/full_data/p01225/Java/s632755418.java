

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

/**
 * <pre>
 *	AOJ Rummy?????????????????????????????????????????????????????°
 * </pre>
 *
 * @author ??????
 * @category AOJRummy
 * @version 1.8_45
 * @since 1.8_45
 */
public class Main{

	/**
	 * ????????°???????????¨?????????????????????
	 */
	public static void main(String[] args) throws NumberFormatException, IOException {

		// ??????????????????
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		// ???????????????????????°
		int card_huda = 9;

		// 1??????????????????set?????°??????????????°
		int set = Integer.parseInt(br.readLine());

		// for????????? set????????°?????????
		for (int cnt1 = 0; cnt1 < set; cnt1++) {

			/**
			 * ???????????????????????????
			 *
			 * @param cardArr
			 *            ????????????????´???´???
			 */
			ArrayList<UTRummyCard> cardArr = new ArrayList<UTRummyCard>();

			/**
			 * ??\??????????§£?????°????????????????´?
			 *
			 * @param transNum
			 *            ??°???????????±???????´???´???
			 * @param transColor
			 *            ???????????±???????´???´???
			 */
			// ??????????????°??????????????????
			String[] transNum = br.readLine().split(" ");
			// ??????????????????????????????
			String[] transColor = br.readLine().split(" ");

			// ?????????????????°?????????
			for (int cnt2 = 0; cnt2 < card_huda; cnt2++) {
				// ????????????????????¨??¶??????
				boolean tool = false;
				// ????´??????????????????????????????????????????????
				// ?????????????¨?????????????????????\
				cardArr.add(new UTRummyCard(Integer.parseInt(transNum[cnt2]), transColor[cnt2], tool));
			}

			/**
			 * ????????? : ???????????¶??????????????°??? ????????????????????°0
			 *
			 * ????????????????¨??????????????????????
			 */
			utRummyGame(cardArr);
		}
	}// ?????????????????????????????????

	/**
	 * ????????????????????´??? ??????????¨? 3)???????????????
	 *
	 * @return result ??????????????????????????????
	 */
	private static void utRummyGame(ArrayList<UTRummyCard> cardArr) {

		// ?????????????????\?????°??????????????????????????????R, G, B????????°????????????
		card_NumAndColor_Sort(cardArr);

		// ?????£?¶????????????°????????????????¨?
		victoryCondition_Inspection(cardArr);

		// ???????????????
		outputAnswer(cardArr);

	}// utRummy????????????????????????

	private static void outputAnswer(ArrayList<UTRummyCard> cardArr) {
		// ???????????????????????????????¢????
		int toolchk_wasUsed = 0;
		for (int cnt = 0; cnt < cardArr.size(); cnt++) {
			if (cardArr.get(cnt).isUse() == false) {
				toolchk_wasUsed++;
			}
		}
		/**
		 * ????????????????????§???????????????????????¶???????????????????????¨????¨?
		 *
		 **** ?????????????????§???????¨?????????????
		 *
		 * int answer;
		 *
		 * System.out.println(answer = (toolcnt == 0)? 1:0);
		 */
		if (toolchk_wasUsed == 0) {
			// ??????????????¨??¶?????????????????£?????????????????¶????????????
			int victoryAnswer = 1;
			System.out.println(victoryAnswer);
		} else {
			// ????????????????????????????????¨?????¶??????????????????
			int defeatAnswer = 0;
			System.out.println(defeatAnswer);
		}
	}// outputAnswer????????????????????????

	/**
	 * ???????????¶?????????????´???¨???????????????????±?????????????????????¨
	 *
	 * @param cardArr
	 *            ????¨?????±????????????????
	 */
	private static void victoryCondition_Inspection(ArrayList<UTRummyCard> cardArr) {

		 // ????????????????????????3?????????????????¢??????
		for (int cnt1 = 0; cnt1 < cardArr.size() - 2; cnt1++) {
			for (int cnt2 = cnt1 + 1; cnt2 < cardArr.size() - 1; cnt2++) {
				for (int cnt3 = cnt2 + 1; cnt3 < cardArr.size(); cnt3++) {

					// (1)????¨????????????????
					if (cardArr.get(cnt1).isUse() == false && cardArr.get(cnt2).isUse() == false
							&& cardArr.get(cnt3).isUse() == false) {
						// (2)???????????§?????????
						if (cardArr.get(cnt1).getRearColor().equals(cardArr.get(cnt2).getRearColor())
								&& cardArr.get(cnt2).getRearColor().equals(cardArr.get(cnt3).getRearColor())) {
							// (3)?????£?¶??????°????????????????????°???3?????§?????????
							if (cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber() - 1
									&& cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt3).getFrontnumber() - 2
									|| cardArr.get(cnt1).getFrontnumber() == cardArr.get(cnt2).getFrontnumber()
											&& cardArr.get(cnt2).getFrontnumber() == cardArr.get(cnt3)
													.getFrontnumber()) {

								// ????????????????????????????¨????????????????
								for (int tool_btn = 0; tool_btn < cardArr.size(); tool_btn++) {
									if (cardArr.get(tool_btn) == cardArr.get(cnt1)
											|| cardArr.get(tool_btn) == cardArr.get(cnt2)
											|| cardArr.get(tool_btn) == cardArr.get(cnt3)) {
										// ????????§?¨??????????????????¶???????????´
										cardArr.get(tool_btn).setUse(true);
									}
								}
							}
						}
					}
				}
			}
		}
	}// cardInspection????????????????????????

	/**
	 * ??????????????°?????\????????\??´??????
	 *
	 * ??????R, G, B????????°????????????
	 *
	 * @param cardArr
	 *            ??´???????±????????????????
	 */
	private static void card_NumAndColor_Sort(ArrayList<UTRummyCard> cardArr) {

		for (int cnt1 = 0; cnt1 < cardArr.size() - 1; cnt1++) {
			for (int cnt2 = 0; cnt2 < cardArr.size() - 1 - cnt1; cnt2++) {
				if (cardArr.get(cnt2).getFrontnumber() > cardArr.get(cnt2 + 1).getFrontnumber() || cardArr.get(cnt2)
						.getRearColor().charAt(0) < cardArr.get(cnt2 + 1).getRearColor().charAt(0)) {
					// ???????????????????????°
					UTRummyCard tmp_card = cardArr.get(cnt2);
					cardArr.set(cnt2, cardArr.get(cnt2 + 1));
					cardArr.set(cnt2 + 1, tmp_card);
				}
			}
		}
	}// cardNum_Color_Sort????????????????????????

}// Rummy4?????????????????????

/**
 * ?????????????????? ????????????????????????????????????????????????????????????
 *
 * @author ?????????????????§???
 */
class UTRummyCard {

	/**
	 * int ??????????????°??????
	 */
	private int frontnumber = 0;

	/**
	 * String ??????????????????
	 */
	private String rearColor = "";

	/**
	 * boolean ????????????????¨?????????????
	 */
	private boolean isUse = false;

	/**
	 * ??????????????°???????????????????????????
	 *
	 * @return int?????????
	 */
	public int getFrontnumber() {
		return frontnumber;
	}

	/**
	 * ????????????????????§int????????\????????????????????????????????????
	 *
	 * @param frontnumber
	 *            int?????????
	 */
	public void setFrontnumber(int frontnumber) {
		this.frontnumber = frontnumber;
	}

	/**
	 * ???????????????????????????????????????
	 *
	 * @return String?????????
	 */
	public String getRearColor() {
		return rearColor;
	}

	/**
	 * ?????????????????????String????????\????????????????????????????????????
	 *
	 * @param rearColor
	 *            String?????????
	 */
	public void setRearColor(String rearColor) {
		this.rearColor = rearColor;
	}

	/**
	 * boolean???????£????????????????????????????
	 *
	 * @return boolean?????????
	 */
	public boolean isUse() {
		return isUse;
	}

	/**
	 * boolean???????????????????????????
	 *
	 * @param isUse
	 *            boolean?????????
	 */
	public void setUse(boolean isUse) {
		this.isUse = isUse;
	}

	/**
	 * ????????????????????????
	 *
	 * ????????????????????????????????????????????????????????°??¨??????int, String, boolean???
	 *
	 * @param num
	 *            ???????????????????????????????????°???
	 * @param color
	 *            ????????????????????????????????????
	 * @param isUse
	 *            ????¨??????¨?????§??????????£????
	 */
	public UTRummyCard(int num, String color, boolean tool) {
		frontnumber = num;
		rearColor = color;
		isUse = tool;
	}
}// UTRummyCard?????????????????????