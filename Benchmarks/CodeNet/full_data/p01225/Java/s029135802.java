

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

/**
 * ??????????????¬???
 *
 * <pre>
 *	AOJ Rummy?????????????????????????????????????????????
 * </pre>
 *
 * @author ?????????????????§???
 * @category AOJRummy
 * @version 1.8_45
 * @since 1.8_45
 *
 */
public class Main{

	/**
	 * ????????°????????????3????????????????????°?????¶???
	 */
	private static final int TRIPLECARDSET = 9;

	/**
	 * ?????¶??????????????????????????????????????????????????????
	 */
	private static final String ZERO = "0";

	/**
	 * ??????for??????????????????????¨?????????????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSZERO = 0;

	/**
	 * ??????for??????????????????????¨?????????????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSONE = 1;

	/**
	 * ??????for??????????????????????¨?????????????????????????????????????????????????????????°
	 */
	private static final int ADDRESSPLUSTWO = 2;

	/**
	 * ??????for??????????????????????¨?????????????????????????????????????????????????????????°
	 */
	//private static final int ADDRESSPLUSTHREE = 3;

	/**
	 * ??????????????§BufferedReader?????????
	 *
	 * @throws IOException
	 *             try-catch???????????????throws IOException?????£?¨??????????
	 */
	public static void main(String[] args) throws IOException {

		// ?????????????????????
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		// ?????????????´???´???
		ArrayList<Integer> answer = new ArrayList<Integer>();

		// 1??????????????????set?????°??????????????°
		int set = Integer.parseInt(br.readLine());


		// for????????? set????????°?????????
		for (int cnt = ADDRESSPLUSZERO; cnt < set; cnt++) {

			// ????????????????´???´???
			ArrayList<TestCard> cardArr = new ArrayList<>();

			// ??????????????°??????????????¨????????????
			String tmpNum = br.readLine();
			// ??????????????????????????¨????????????
			String tmpColor = br.readLine();

			// ?????°???????§£ ??°??????????´?
			String[] transNum = tmpNum.split(" ");
			// ?????°???????§£ ??????????´?
			String[] transColor = tmpColor.split(" ");

			//???????????????????????£???
			 if (transNum.length > transColor.length) {

				/**
				 * ???????????????????????????????????£????????????????????????????????§?????????
				 */
				TestCard.setOnecardset(transNum.length);

				/**
				 * @param cntcardnumber
				 *            ??????????????°????????°????????°??????
				 */
				for (int cntcardnumber = ADDRESSPLUSZERO; cntcardnumber < TestCard.getOnecardset(); cntcardnumber++) {

					/**
					 * ?????¶?????????????????????
					 * ????????°?????????????????????????????´???
					 * ???????????????????????°??????????????´???????????????
					 *
					 * ?????????????????¨?????¨?????????????????\???
					 * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????
					 *
					 */
					// ??°???, ?????????????????????
					if (cntcardnumber > transNum.length) {
						// ???????????????????????¨?????¨??????????????????????????\
						cardArr.add(new TestCard(Integer.parseInt(transNum[cntcardnumber]), ZERO));
					} else {
						// ????´??????????????????????????????????????????????
						cardArr.add(new TestCard(Integer.parseInt(transNum[cntcardnumber]), transColor[cntcardnumber]));
					}
				}
				// ???????????????????????£???
			} else {

				/**
				 * ???????????????????????????????????£????????????????????????????????§?????????
				 */
				TestCard.setOnecardset(transColor.length);

				/**
				 * @param cntcardcolor
				 *            ????????????????????°????????°??????
				 */
				for (int cntcardcolor = ADDRESSPLUSZERO; cntcardcolor < TestCard.getOnecardset(); cntcardcolor++) {

					/**
					 * ?????¶??????????????????????????????????????°??????????????´??????????????????????????????
					 * 			?????????????????????????????°?????????????????°?£???°????????§?????????????´??????????????????????
					 *
					 * ???????????????????????¨?????¨?????????????????\???
					 * ??????????¨???¨?????§.equals()???.contains()????????¨???????????????????????´????????????????????????
					 *
					 */
					// ??°???, ?????????????????????
					if (cntcardcolor > transColor.length) {
						// ??°???????????????????????¨?????¨????????°?????????????????\
						cardArr.add(new TestCard(ADDRESSPLUSZERO, transColor[cntcardcolor]));
					} else {
						// ????´??????????????????????????????????????????????
						cardArr.add(new TestCard(Integer.parseInt(transNum[cntcardcolor]), transColor[cntcardcolor]));
					}
				}
			}
			/**
			 * ???????????¶??????????????°??? ????????????????????°0
			 */
			// result????????????????????????????´???´???
			int result = playtheGame(cardArr);
			// ?????????????´?
			answer.add(result);

			// ??¢??¬????????????????????????????????§??????????????§?????????????\?
			cardArr.removeAll(cardArr);
		}

		// for????????? ??????????????????????????????
		for (int cnt = ADDRESSPLUSZERO; cnt < answer.size(); cnt++) {
			// ???????????????
			System.out.println(answer.get(cnt));
		}
	}// ?????????????????????????????????

	/**
	 * ???????????¶???????????????
	 *
	 * @return result ??????????????????????????????
	 * @param count
	 *            ????????¨??????"0"?????°???0????????\?????????????????£?????¨????????°?????°??????
	 */
	public static int playtheGame(ArrayList<TestCard> cardArr) {

		// ?????????0???????????????
		int result = ADDRESSPLUSZERO;
		// ???????????????0???????????????
		int count = ADDRESSPLUSZERO;

		/**
		 * @Warnning sort();
		 */
		// ???????????????????????´???
		Collections.sort(cardArr, new Comparator<TestCard>() {
			@Override
			public int compare(TestCard numA, TestCard numB) {
				return numA.getFrontnumber() - numB.getFrontnumber();
			}
		});

		// 3??£?¶????????????????????????°?¶????
		serialNumCard(cardArr);

		// ??????????????????3???????????°?¶????
		sameNumCard(cardArr);

		/**
		 * @Warnning ???????????????????????´??????
		 *
		 *	???????????????????????\????????????????????¶????????????????????¨??§
		 */
		for (int cnt = ADDRESSPLUSZERO; cnt < cardArr.size(); cnt++) {

			/**
			 * ?????¶????????????????????????????????§???????????????ZERO????????\?????????????????????????????£?????????
			 */
			if (((String)cardArr.get(cnt).getRearColor()).contains(ZERO)) {

				// ?????\?????????????????????????????°?????°??????
				count++;

				// ?????¶??????????????°???????????????
				if (count == TRIPLECARDSET) {//?????§??????????????????
					result = ADDRESSPLUSONE;
				}
			}
		}
		// ????????????????????????????????????
		return result;
	}// playtheGame????????????????????????

	/**
	 * 3??£?¶??????°??????????????°?¶????
	 *
	 * @param card2
	 *            ?????¶??????????????°"0"????????\??????????????????
	 */
	public static void sameNumCard(ArrayList<TestCard> cardArr) {

		/**
		 * for??????????????¬???
		 *
		 * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [7] [7] [7]
		 *
		 * @param cnt1
		 *            ???????????????????????? "0";
		 * @param cnt2
		 *            ???????????????????????? "cnt1 + 1";
		 * @param cnt3
		 *            ???????????????????????? "cnt2 + 1";
		 *
		 */
		// for???????????????????????????????????????????????¨???????????????????????????????????????????????????
		for (int cnt1 = ADDRESSPLUSZERO; cnt1 < TestCard.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {
			// ????????????????????¨???????????????????????????????????????????????????
			for (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < TestCard.getOnecardset() - ADDRESSPLUSONE; cnt2++) {
				// ????????????????????¨???????????????????????????????????????????????????
				for (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < TestCard.getOnecardset(); cnt3++) {

					// (1)????????°???????????????????????????
					if (((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt2).getFrontnumber()))&&
							((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt3).getFrontnumber()))) {

						// (2)?????????????????????????????????
						if (((String)cardArr.get(cnt1).getRearColor()).equals(((String)cardArr.get(cnt2).getRearColor()))
								&& ((String)cardArr.get(cnt2).getRearColor()).equals(((String)cardArr.get(cnt3).getRearColor()))) {

							// (3)???????????§?????????????????????????????£??????????????§??????????????°
							if (!((String)cardArr.get(cnt1).getRearColor()).equals(ZERO)
									&& !((String)cardArr.get(cnt2).getRearColor()).equals(ZERO)
									&& !((String)cardArr.get(cnt3).getRearColor()).equals(ZERO)) {

								// ??¨???????????¶??????????????°??????????????????????????????"0"????????\
								cardArr.set(cnt1, (new TestCard(ZERO)));
								cardArr.set(cnt2, (new TestCard(ZERO)));
								cardArr.set(cnt3, (new TestCard(ZERO)));
							}
						}
					}
				}
			}
		}
	}// sameNumCard????????????????????????

	/**
	 * ????????°????????????????????°?¶????
	 *
	 * @param card
	 *            ?????¶??????????????°"0"????????\??????????????????
	 */
	public static void serialNumCard(ArrayList<TestCard> cardArr) {

		/**
		 * for??????????????¬???
		 *
		 * ???????????????????±????????????¶ ??????1 2 3 3 4 5 7 7 7 ??? [1] [2] [3]
		 *
		 * @param cnt1
		 *            ???????????????????????? "0";
		 * @param cnt2
		 *            ???????????????????????? "cnt1 + 1";
		 * @param cnt3
		 *            ???????????????????????? "cnt2 + 1";
		 *
		 */
		// for???????????????????????????????????????????????¨???????????????????????????????????????????????????
		for (int cnt1 = ADDRESSPLUSZERO; cnt1 < TestCard.getOnecardset() - ADDRESSPLUSTWO; cnt1++) {
			// ????????????????????¨???????????????????????????????????????????????????
			for (int cnt2 = cnt1 + ADDRESSPLUSONE; cnt2 < TestCard.getOnecardset() - ADDRESSPLUSONE; cnt2++) {
				// ????????????????????¨???????????????????????????????????????????????????
				for (int cnt3 = cnt2 + ADDRESSPLUSONE; cnt3 < TestCard.getOnecardset(); cnt3++) {

					// (1)3??£?¶??????°????????????
					if (((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt2).getFrontnumber() - 1))&&
							((Integer)cardArr.get(cnt1).getFrontnumber()).equals(((Integer)cardArr.get(cnt3).getFrontnumber() - 2))) {

						// (2)?????????????????????????????????
						if (((String)cardArr.get(cnt1).getRearColor()).equals(((String)cardArr.get(cnt2).getRearColor()))
								&& ((String)cardArr.get(cnt2).getRearColor()).equals(((String)cardArr.get(cnt3).getRearColor()))) {

							// (3)???????????§?????????????????????????????£??????????????§??????????????°
							if (!((String)cardArr.get(cnt1).getRearColor()).equals(ZERO)
									&& !((String)cardArr.get(cnt2).getRearColor()).equals(ZERO)
									&& !((String)cardArr.get(cnt3).getRearColor()).equals(ZERO)) {

								// ??¨???????????¶??????????????°????????§?¨?????¶?????????????????????????????????????"0"????????\
								cardArr.set(cnt1, (new TestCard(ZERO)));
								cardArr.set(cnt2, (new TestCard(ZERO)));
								cardArr.set(cnt3, (new TestCard(ZERO)));
							}
						}
					}
				}
			}
		}
	}// serialNumCard ????????????????????????

}// RummyTest????????????


/**
 * ?????????Card
 *
 * <pre>
 * ????????????????????????????????£????????¨???????????????????????????
 * ??????????????????????????§???
 *
 * 1. ?????????????????°??????????¨????????????¶?????????
 * 2. ????????§????±???¨??§???????????§????????????
 * 3. javadoc???????????????????????¨
 * 4. ??\???????????????????????????????????????????????????
 * </pre>
 *
 * @author ?????????????????§???
 *
 */
class TestCard {
	/**
	 * int ??????????????°??????????????\????????±????????\??????
	 */
	private static int onecardset;

	/**
	 * int ????????????????????????????????°????????¢????£???¢???
	 * 2???????¬?????????????????????¨??????
	 */
	//private static final int CARDPAGE = 2;

	/**
	 * int ??????????????°?????????~????????§?????°????????\??????????????°??¶??????????????????????????\????????±????????\??????
	 */
	private static int frontnumber;

	/**
	 * String ?????????????????????????¨????????????????????????????????????\????????±????????\??????
	 */
	private static String rearColor;

	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @param onecardset ????????????????????°???????´?
	 */
	public static void setOnecardset(int onecardset) {
		TestCard.onecardset = onecardset;
	}

	/**
	 * private????£?????????\????????????????????????????????????
	 *
	 * @return???????´??????????????????????
	 */
	public static int getOnecardset() {
		return onecardset;
	}

	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @param frontnumber int?????§?????\?????¨????????¬???????????????????????°??????????´?
	 */
	public static void setFrontnumber(int frontnumber) {
		TestCard.frontnumber = frontnumber;
	}

	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @param frontcolorTC int?????§?????\?????¨????????¬???????????????????????°??????????´?
	 */
	public static void setFrontnumber(TestCard frontcolorTC) {
		frontnumber = frontcolorTC.frontnumber;
	}

	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @return???int?????§?????\?????¨?????????????????°??????????????????
	 */
	public int getFrontnumber() {
		return frontnumber;
	}

	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @param rearColorTC String?????§?????\?????¨?????????????????????????????????
	 */
	public static void setRearColor(TestCard rearColorTC) {
		TestCard.rearColor = rearColorTC.rearColor;
	}
	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @param rearColor String?????§?????\?????¨?????????????????????????????????
	 */
	public static void setRearColor(String rearColor) {
		TestCard.rearColor = rearColor;
	}

	/**
	 *private????£?????????\????????????????????????????????????
	 *
	 * @return String?????§?????\?????¨?????????????????????????????????
	 */
	public static String getRearColor() {
		return rearColor;
	}

	public TestCard() {
		// TODO ?????????????????????????????????????????????????????????
	}

	/**
	 * ????????°?????????????????????????????´???,???????????¨?????¨
	 * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????
	 *
	 * @param ZERO ????????° ZERO
	 */
	public TestCard(String ZERO) {
		rearColor = ZERO;
	}

	/**
	 * ???????????????????????°??????????????´???, ???????????¨?????¨
	 * ???) ?????????????????¶??????????????°??¢???????????±????¶??????¨??????
	 *
	 * @param tmp???????????° ADDRESSPLUSSZERO???????????¶????????????int???????????±???
	 */
	public TestCard(TestCard tmp) {
		frontnumber = tmp.frontnumber;
	}

	/**
	 * ????????????????????????????????????????????????????????°??¨??????int,String??????
	 *
	 * @param transNum
	 *            ???????????????????????????????????°???
	 * @param transColor
	 *            ????????????????????????????????????
	 */
	public TestCard(int transNum, String transColor) {
		// ?????¬???int?????????????????????int???????????????
		frontnumber = transNum;
		// ?????¬???String?????????????????????String???????????????
		rearColor = transColor;
	}
}// ??????????????????????????????