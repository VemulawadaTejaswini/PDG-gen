import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    /** ??????????????° */
    public static int TEAM_AMOUNT;
    /** ??¬???????????° */
    public static long RECORD_AMOUNT;
    /** ???????????????????????? */
    public static long CONTEST_TIME;

    public static void main(String[] args) throws IOException {

        // ??\???????????????
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        // ???????????°?????¬???????????°??????????????????????????????????´?
        setPremise(br.readLine().split(" "));

        // ?????????????????????????????¨?????°???????´???????????????????????????????N??? 0:?????° 1:????????????
        long[] Scores = new long[TEAM_AMOUNT];
        // ????????????????????????
        long[] onAirTimes = new long[TEAM_AMOUNT];
        // ?????¨????????§?????°??¨????????????????´????????????? 0:????????? 1:?????°
        long[] maxScoreTeam = new long[2];

        // ?????¨????????????????´????????????°
        long now = 0;

        // ???????????°??¨
        // if ("stop".equals(strs)) {
        // break;
        // }
        for (int i = 0; i < RECORD_AMOUNT; i++) {
            long[] record = convertToLongs(br.readLine().split(" "));

            if (now < record[1]) {
                // ???????????????????????????????????????????????????
                onAirTimes[(int) maxScoreTeam[0]] = record[1] - now;
                // ???????????´??°??????
                now = record[1];
            }

            // ?????????????????????????????°????????????
            Scores[(int) record[0]] += record[2];
            // ?????§???????????´????????´????????°????????\????????????
            setMaxScore(Scores, (int) record[0], record[2], maxScoreTeam);

        }

        // ?????¨?????????~????????????????????§?????????????????§??????????????????????????????
        onAirTimes[(int) maxScoreTeam[0]] += CONTEST_TIME - now;

        // ??????????????????
        long maxShowTime = 0;
        // ????????????????????????-1???
        int winner = -1;

        for (int i = 0; i < onAirTimes.length; i++) {
            if (onAirTimes[i] > maxShowTime) {
                maxShowTime = onAirTimes[i];
                winner = i + 1;
            }
        }

        System.out.println(winner);
    }

    public static void setPremise(String[] strs) {

        TEAM_AMOUNT = Integer.parseInt(strs[0]);
        RECORD_AMOUNT = Long.parseLong(strs[1]);
        CONTEST_TIME = Long.parseLong(strs[2]);
    }

    public static long[] convertToLongs(String[] strs) {
        long[] record = new long[3];
        // ?????????ID
        record[0] = Long.parseLong(strs[0]) - 1;
        // ????????????
        record[1] = Long.parseLong(strs[1]);
        // ???????????°
        record[2] = Long.parseLong(strs[2]);

        return record;
    }

    /**
     * ?????? ???????????????????????????????????????????????????????????°???????´???????
     * 
     * @param teams
     * @param pointGetter
     * @param point
     * @param maxScoreTeam
     */
    private static void setMaxScore(long[] scores, int pointGetter, long point, long[] maxScoreTeam) {

        // ???????????´???

        // ????????????????????????????????????????????§????????´???
        if (maxScoreTeam[1] < scores[pointGetter]) {
            setMaxScoreTeam(scores, pointGetter, maxScoreTeam);

            return;
        } else if (maxScoreTeam[1] == scores[pointGetter] && maxScoreTeam[0] > pointGetter) {
            // ??????????????????????????¨?????§?????°???????????´???
            // ????????????????????\??????????????§?????????????????¨????????????????????????????????????
            setMaxScoreTeam(scores, pointGetter, maxScoreTeam);
            return;
        } else if (maxScoreTeam[0] == pointGetter && point < 0) {

            // ???????????????????????????????????´?????????????????????????±??????????????????????
            long max = 0;
            int index = -1;
            for (int i = 0; i < scores.length; i++) {
                if (max < scores[i]) {
                    max = scores[i];
                    index = i;
                }
            }
            // ?????????????????????
            maxScoreTeam[0] = index;
            // ????????????
            maxScoreTeam[1] = max;
        }
    }

    /**
     * ?????? ????????§????????¢????????????????¨??????????
     * 
     * @param scores
     * @param pointGetter
     * @param maxScoreTeam
     */
    private static void setMaxScoreTeam(long[] scores, int pointGetter, long[] maxScoreTeam) {
        maxScoreTeam[0] = pointGetter;
        maxScoreTeam[1] = scores[pointGetter];
    }
}