import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.util.ArrayList;

public class Main {
	public static void main(String[] a) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		ArrayList<String> al = new ArrayList<String>();
		String str;

		// 1???????????\?????????????????????????????????
		while ((str = br.readLine()) != null) {
			if (str.length() == 0) {
				break;
			}
			al.add(str);
		}

		BigDecimal[][] ans = new BigDecimal[al.size()][2];

		// ??£???????¨????
		int len = al.size();
		for (int i = 0; i < len; i++) {
			String[] buf = al.get(i).split(" ");

			// ???????????????1??????????????????????????°??????????????????
			double ax = Double.parseDouble(buf[0]);
			double by = Double.parseDouble(buf[1]);
			double c = Double.parseDouble(buf[2]);
			double dx = Double.parseDouble(buf[3]);
			double ey = Double.parseDouble(buf[4]);
			double f = Double.parseDouble(buf[5]);

			// y????±?????????????
			double ansY = yOperation(ax, by, c, dx, ey, f);

			// x????±?????????????
			double ansX = xOperation(ax, by, c, ansY);

			// ?°???°?????\????¬¬??????????????¨?????\???????????????????´?
			BigDecimal bdx = new BigDecimal(ansX);
			bdx = bdx.setScale(3, BigDecimal.ROUND_HALF_UP);
			BigDecimal bdy = new BigDecimal(ansY);
			bdy = bdy.setScale(3, BigDecimal.ROUND_HALF_UP);
			
			ans[i][0] = bdx;
			ans[i][1] = bdy;

		}

		// ??????
		for (int i = 0; i < ans.length; i++) {
			System.out.printf("%4.3f" + " " + "%4.3f" + "\n", ans[i][0],
					ans[i][1]);
		}
	}

	//y????¨????
	private static double yOperation(double ax, double by, double c,
			double dx, double ey, double f) {
		double ansY;
		try {
			ansY = (f + -(dx * c / ax)) / ((dx * -by / ax) + ey);
		} catch (ArithmeticException ae) {
			ansY = 0;
		}
		return ansY;
	}

	//x????¨????
	private static double xOperation(double ax, double by, double c,
			double y) {
		double ansX;
		try {
			ansX = (c + -(by * y)) / ax;
		} catch (ArithmeticException ae) {
			ansX = 0;
		}
		return ansX;
	}

}