import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//      ????????????????????????????????¢?????°??????????????????dice???????????????????????£??\
        String str1 = br.readLine();
        Dice dice1 = new Dice(str1);
//      ????????????????????????????????¢?????°??????????????????dice???????????????????????£??\
        String str2 = br.readLine();
        Dice dice2 = new Dice(str2);

        int i;
        boolean judge = false;

//      ???????????????????????????getNum(0)??¨????????°?????????????????????????????????????????????i?????????????¢????
        for(i = 0; i < str1.length(); i++){
            if(dice1.getNum(0).equals(dice2.getNum(i))){
                break;
            }
        }
//      ??????????????????????????¨??????????????????????????§??¢??????
        switch(i){

        case 0:
            break;

        case 1:
            dice2.moveN();
            break;

        case 2:
            dice2.moveW();
            break;

        case 3:
            dice2.moveE();
            break;

        case 4:
            dice2.moveS();
            break;

        case 5:
            dice2.moveN();
            dice2.moveN();
            break;
        }
//      ???????????????????????????getNum(1)??¨????????°?????????????????????????????????????????????i?????????????¢????
        for(i = 1; i < str1.length() - 1; i++){
            if(dice1.getNum(1).equals(dice2.getNum(i))){
                break;
            }
        }
        switch(i){
        case 1:
            if(dice1.getNum(2).equals(dice2.getNum(2)) &&
                dice1.getNum(3).equals(dice2.getNum(3)) &&
                dice1.getNum(4).equals(dice2.getNum(4)) &&
                dice1.getNum(5).equals(dice2.getNum(5))){

                judge = true;
            }
            break;
        case 2:
            if(dice1.getNum(2).equals(dice2.getNum(4)) &&
                dice1.getNum(3).equals(dice2.getNum(1)) &&
                dice1.getNum(4).equals(dice2.getNum(3)) &&
                dice1.getNum(5).equals(dice2.getNum(5))){

                judge = true;
            }
            break;
        case 3:
            if(dice1.getNum(2).equals(dice2.getNum(1)) &&
                dice1.getNum(3).equals(dice2.getNum(4)) &&
                dice1.getNum(4).equals(dice2.getNum(2)) &&
                dice1.getNum(5).equals(dice2.getNum(5))){

                judge = true;
            }
            break;
        case 4:
            if(dice1.getNum(2).equals(dice2.getNum(3)) &&
                dice1.getNum(3).equals(dice2.getNum(2)) &&
                dice1.getNum(4).equals(dice2.getNum(1)) &&
                dice1.getNum(5).equals(dice2.getNum(5))){

                judge = true;
            }
            break;
        }

        if(judge){
            System.out.println("Yes");
        }else{
            System.out.println("No");
        }
    }
}

class Dice{
    private String[] str;
    private String tmp;

    Dice(String str){
        this.str = new String[6];
        this.str = str.split(" ");
    }
    public String getNum(int n){
        return this.str[n];

    }
    public void moveE(){
        tmp = this.str[0];
        this.str[0] = this.str[3];
        this.str[3] = this.str[5];
        this.str[5] = this.str[2];
        this.str[2] = tmp;
    }
    public void moveN(){
        tmp = this.str[0];
        this.str[0] = this.str[1];
        this.str[1] = this.str[5];
        this.str[5] = this.str[4];
        this.str[4] = tmp;
    }
    public void moveS(){
        tmp = this.str[0];
        this.str[0] = this.str[4];
        this.str[4] = this.str[5];
        this.str[5] = this.str[1];
        this.str[1] = tmp;
    }
    public void moveW(){
        tmp = this.str[0];
        this.str[0] = this.str[2];
        this.str[2] = this.str[5];
        this.str[5] = this.str[3];
        this.str[3] = tmp;
    }
}