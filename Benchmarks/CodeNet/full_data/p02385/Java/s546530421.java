import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {
  /*1-11-c ??????????????????????????????*/

  public static void main(String[] args) throws IOException {

    //dice????????????????????????????????????
    dice dice = new dice();

    //????????¨ ??¢??¨??°???????????´????????????+1
    int judge = 0;

    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    //1????????????????????¢?????°?????\???(num[1]???????????????1)
    String num[] = br.readLine().split("[\\s]+");
    for (int i = 0; i < num.length; i++) {
      dice.diceNum[i + 1] = Integer.parseInt(num[i]);
    }

    //2????????????????????¢?????°?????\???(num[1]???????????????1)
    num = br.readLine().split("[\\s]+");
    for (int i = 0; i < num.length; i++) {
      dice.diceNum2[i + 1] = Integer.parseInt(num[i]);
    }

  //?????????????????????????????????????????????
    int diceCopy[] = Arrays.copyOf(dice.diceNum, 7);
    Arrays.sort(diceCopy);

    int diceCopy2[] = Arrays.copyOf(dice.diceNum2, 7);
    Arrays.sort(diceCopy2);

    //??????1(????????????????????°????????????)
    for(int i=1;i<=6;i++){
      //??°???????????£??????No??§??????
      if(diceCopy[i] != diceCopy2[i]){
        System.out.println("No");
        return;
      }
    }

    //??????????????¨
    int onaji[] = new int[6];
    int cnt = 1;

    //1???????????????????????°???????????????????????°???????????????
    for(int i=1;i<=6-1;i++){
      //?¬??????°?????¨????????????onaji?????????????´????+1
      if(diceCopy[i] == diceCopy2[i+1]){
        onaji[cnt] ++;
      }else{
        //?????£??????onaji???????????????????????????+1
        cnt ++;
      }
    }
    //?????????
    Arrays.sort(onaji);
    //onaji??°???????????§??????cnt??¨????????????(112222???cnt=4)
    cnt = onaji[onaji.length-1] + 1;

    //??????2(??????1????????????????????°??????4?????\???????????????????????°???????????¨????????????)
    if(cnt >= 4){
      System.out.println("Yes");
      return;
    }

    //N???????????¢??????
    for (int j = 0; j < 3; j++) {
      //?????????2?????¢1??¨?????????1?????????????????¢???????????°?????????
      if (dice.diceNum2[1] == dice.diceNum[1]) {
        judge = 1;
        break;
      }
      dice.oderN();
    }

    //W???????????¢??????
    for (int j = 0; j < 3; j++) {
      //?????????2?????¢1??¨?????????1?????????????????¢???????????°?????????
      if (dice.diceNum2[1] == dice.diceNum[1]) {
        break;
      }
      dice.oderW();
    }
    //??£??¢?????°????¢????

    //?°´??????????????????
    for (int j = 0; j < 3; j++) {
      //?????????2?????¢2??¨?????????1?????¢2???????????°?????????
      if (dice.diceNum2[2] == dice.diceNum[2]) {
        break;
      }
      dice.oderRoll();
    }
    //?????¢?????°????¢????

    //??¢?????§?????????????????°???????????????
    for (int k = 1; k <= 6; k++) {
      if (dice.diceNum[k] == dice.diceNum2[k]) {
        judge += 1;
      }
    }

    //??????3(??????12?????????????????????????????¢?????????????????§???)
    if (judge >= 6) {
      System.out.println("Yes");
    } else {
      System.out.println("No");
    }
  }

}

class dice {
  //??????????????¢?????????0???6,0???????????????
  int diceNum[] = new int[7];
  //2???????????????????????¢?????????0???6,0???????????????
  int diceNum2[] = new int[7];
  //????????¨?????°
  int stoc;

  //N???????????¢??????
  public void oderN() {
    //1?????¢?????°????????????
    stoc = diceNum[1];
    //1????????£?????¢???2?????????
    diceNum[1] = diceNum[2];
    //2????????£?????¢???6?????????
    diceNum[2] = diceNum[6];
    //6????????£?????¢???5?????????
    diceNum[6] = diceNum[5];
    //5????????£?????¢???1?????????
    diceNum[5] = stoc;

  }

  //W???????????¢??????
  public void oderW() {

    stoc = diceNum[1];
    diceNum[1] = diceNum[3];
    diceNum[3] = diceNum[6];
    diceNum[6] = diceNum[4];
    diceNum[4] = stoc;

  }

  //?°´???????¨?????????§90?°?????¢
  public void oderRoll() {
    stoc = diceNum[2];
    diceNum[2] = diceNum[3];
    diceNum[3] = diceNum[5];
    diceNum[5] = diceNum[4];
    diceNum[4] = stoc;

  }

}