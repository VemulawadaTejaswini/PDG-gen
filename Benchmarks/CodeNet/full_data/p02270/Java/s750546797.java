import java.io.BufferedReader;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

public class Main {
	public static boolean possible(List<Integer> w, int n, int k, int P) {
		int current = 0;
		k--; // ???????????£???????????????????????°
		for (int c : w) {
			if (current + c > P) {
				if (k > 0) {
					k--;
					if (c <= P)
						current = c;
					else 
						return false; 
				} else {
					return false;
				}
			} else {
				current += c;
			}
		}
		return true;
	}
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		// BufferedReader br = new BufferedReader(new FileReader("in1.txt"));
		// BufferedReader br = new BufferedReader(new FileReader("in2.txt"));
		String[] line = br.readLine().split(" ");
		int n = Integer.parseInt(line[0]);
		int k = Integer.parseInt(line[1]);
		List<Integer> w = new ArrayList<Integer>();
		for (int i = 0; i < n; i++)
			w.add(Integer.parseInt(br.readLine()));
		
		// O(kn^2)?????¢?????´??????????????????????????????...????????????(?????¶)
		// ????????????????????????O(kn)?????????????§£?????????????????????????????????...
		// List<List<Integer>> P = new ArrayList<List<Integer>>();
		// List<Integer> P0 = new ArrayList<Integer>();
		// P0.add(w.get(0));
		// for (int j = 1; j < n; j++)
		// 	P0.add(P0.get(j - 1) + w.get(j));
		// P.add(P0);
		// for (int i = 1; i < k; i++) {
		// 	List<Integer> Pk = new ArrayList<Integer>();
		// 	for (int j = 0; j < n; j++) {
		// 		int min = P.get(i - 1).get(j);
		// 		int sum = 0;
		// 		for (int l = 0; l < j; l++) {  // j??????????????????????????????l+1???????????????
		// 			sum += w.get(j - l);
		// 			if (min < sum)
		// 				break;
		// 			min = Math.max(P.get(i - 1).get(j - l - 1), sum);
		// 		}
		// 		Pk.add(min);
		// 	}
		// 	P.add(Pk);
		// }
		// System.out.println(P.get(k - 1).get(n - 1));
		
		// ??????P????????????????????????????????????????????????????????????????????¨???????°????
		// ???????????¨??????2?????¢?´¢??§?????£?????????O(nlnP)??§???????????????
		// System.out.println(possible(w, n, k, 6));
		// l????????????u???????????????
		int u = 1000000000, l = 1;
		int sum = 0;
		for (int c : w)
			sum += c;
		u = sum; l = sum / w.size();
		while (u - l > 1) {
			int mid = (u + l) / 2 - 1;
			if (possible(w, n, k, mid))
				u = mid + 1;
			else
				l = mid + 1;
		}
		System.out.println(l);
	}
}