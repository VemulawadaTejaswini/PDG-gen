import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Objects;

class Main {
	/**
	 * ??\?????????????????? / ????????????????????????
	 */
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		String answer = getScore(br);

		System.out.println(answer);
	}

	/**
	 * ??¨??????????????¢???????????????????????????
	 */
	private static String getScore(BufferedReader br) {
		String line;
		String score = "";
		int outCnt = 0;
		int setEning;
		int thisEning = 0;
		// ????????°?????????????????????
		// ?????????????????????4?¶?????????°
		int step = 0;

		try {
			// ????????????????????°??°???????????????
			setEning = Integer.parseInt(br.readLine());

			while (!isEndLine(line = br.readLine())) {
				if (line.equals("HIT")) {
					step += 1;
				} else if (line.equals("HOMERUN")) {
					step += 4;
				} else {
					outCnt++;
				}

				if (outCnt == 3) {
					if (setEning == thisEning) {//?????????????????°?????§??????
						// ??????????????????????????????????????§??\???????????????
						score = createLastScoreLine(step, score);
					} else {
						score = createScoreLine(step, score);
					}
					// ??¢????????????????????¨step?????????,???????????°?????????
					outCnt = 0;
					step = 0;
					thisEning++;
				}
			}
			return score;
		} catch (IOException e) {
			e.printStackTrace();
			return null;
		}
	}

	/**
	 * ???????????¶???????????????
	 */
	private static boolean isEndLine(String line) {
		return Objects.isNull(line);
	}

	private static String createScoreLine(int step, String score) {
			// step-??????0????????§????????´??????????????¢???step-3???
			// ?????????????????´??????0???
			if (step - 3 > 0) {
				score += (step - 3) + "\n";
			} else {
				score += 0 + "\n";
			}
		
		return score;
	}

	private static String createLastScoreLine(int step, String score) {
		// step-??????0????????§????????´??????????????¢???step-3???
		// ?????????????????´??????0???
		if (step - 3 > 0) {
			score += (step - 3);
		} else {
			score += 0;
		}
		return score;
	}
}