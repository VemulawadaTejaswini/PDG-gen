import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

public class Main {
	private static class Box {
		private int size;
		private int cost;
		private double costPer;
		private boolean isEmpty = true;

		public Box(int boxSize, int boxCost) {
			this.size = boxSize;
			this.cost = boxCost;
			costPer = boxCost / boxSize;
		}
	}

	private static int[] okashi;
	private static Box[] box;

	// ??±?????°????????????????????????????????????????????????
	private static int okashiNum;
	// ?£????????¨?
	private static int benefitSum = 0;

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(new InputStreamReader(System.in));

		int m = sc.nextInt();
		int n = sc.nextInt();
		// ???????????????????????????
		setOkashi(m, sc);
		// ??±??????????????????
		setBox(n, sc);
		// ???????????????
		run();
	}

	/**
	 * ??????
	 */
	private static void run() {
		while (true) {
			int boxNum = setBoxNum();
			int benefit = getBenefit(boxNum);
			isPositive(benefit);
			isEmptyBox();
		}
	}

	/**
	 * ??±??????????????£??????????????????????????§????????????
	 */
	private static void isEmptyBox() {
		for (int i = 0; i < box.length; i++) {
			if (box[i].isEmpty)
				return;
		}
		printResult(); // ??¨????????±??????????????£????????????????????????
	}

	/**
	 * ??????????????????????????????????????????
	 *
	 * @param benefit
	 *            ??????
	 */
	private static void isPositive(int benefit) {
		if (benefit > 0) {
			benefitSum += benefit;
		} else {
			printResult(); // ???????????????????????????????????????
		}
	}

	/**
	 * ?????????????????????
	 */
	private static void printResult() {
		System.out.println(benefitSum);
		System.exit(0);
	}

	/**
	 * ??±??????????????????????????¨????????????????±???????
	 *
	 * @param boxNum
	 *            ??±?????????
	 * @return
	 */
	private static int getBenefit(int num) {
		if (okashiNum == -1)
			printResult(); // ??????????????????????????????????????£??????????????????

		int sales = 0;
		for (int i = 0; i < box[num].size; i++) {
			sales += okashi[okashiNum];
			if (okashiNum == 0) { // ????????????????????????????????£??????????????????
				okashiNum--;
				break;
			}
			okashiNum--;
		}
		sales -= box[num].cost;
		return sales;
	}

	/**
	 * ?????£??¨????????????????????±????±???????
	 *
	 * @return ?????£??¨????????????????????±?????????
	 */
	private static int setBoxNum() {
		double tmpCostPer = Integer.MAX_VALUE;
		int tmpNum = -1;
		for (int i = 0; i < box.length; i++) {
			if (box[i].isEmpty && (box[i].costPer < tmpCostPer)) {
				tmpCostPer = box[i].costPer;
				tmpNum = i;
			}
		}
		box[tmpNum].isEmpty = false; // ?????£??¨????????????????????±????????¶?????§?????????????????????
		return tmpNum;
	}

	/**
	 * ???????????????????????????
	 *
	 * @param sc
	 *            ?¨??????\???
	 */
	private static void setOkashi(int m, Scanner sc) {
		okashi = new int[m];
		for (int i = 0; i < m; i++) {
			okashi[i] = sc.nextInt();
		}
		okashiNum = m - 1;
		Arrays.sort(okashi);
	}

	/**
	 * ??±??????????????????
	 *
	 * @param sc
	 *            ?¨??????\???
	 */
	private static void setBox(int n, Scanner sc) {
		box = new Box[n];
		for (int i = 0; i < n; i++) {
			box[i] = new Box(sc.nextInt(), sc.nextInt());
		}
	}
}