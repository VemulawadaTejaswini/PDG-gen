
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

const double EPS = 1e-8;

int main(){
	int H, W;
	string f[600];
	while(cin >> H >> W){
		for(int i=H-1;i>=0;i--) cin >> f[i];

		vector< pair<double, int> > vd;
		// ????????°??????????????????????????????.
		// ??????(j/i)?????§??????????????¨??????????????°????¢????????????£?????????
		for(int i=1;i<=H;i++){
			for(int j=0;j<=W;j++){
				int cnt = 0;
				for(int k=0;k<4;k++){
					int ni = i-k%2, nj = j-k/2;
					if(0<=ni&&ni<H&&0<=nj&&nj<W&&f[ni][nj]=='#') cnt++;
				}
				if(cnt%2 == 1){
					if(0<=i-1&&i-1<H&&0<=j&&j<W&&f[i-1][j]==(cnt==1?'#':'.'))
						vd.push_back(make_pair((double)j/i,  1));
					if(0<=i&&i<H&&0<=j-1&&j-1<W&&f[i][j-1]==(cnt==1?'#':'.'))
						vd.push_back(make_pair((double)j/i, -1));
				}
			}
		}
		sort(vd.begin(), vd.end());

		int res = 1, cur = 1;
		// ???????????§?????????????????????????????°????¢????????????????
		for(int i=0;i<vd.size(); ){
			int idx = i;
			while(idx < vd.size() && abs(vd[i].first-vd[idx].first) < EPS)
				cur += vd[idx++].second;
			i = idx;
			res = max(cur, res);
		}
		cout << res << endl;
	}
}