import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		// ??°?????????????????¨?????????????????????????????????????????????????´????????????????????????????????????????
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		int n = scanner.nextInt();
		int count = 0;
		int[] list = new int[n];
		for (int i = 0; i < n; i++) {
			list[i] = scanner.nextInt();
		}
		int[] sortedList = (int[]) list.clone();
		// ???????????????????´???°???????????????????????????????????????????????????????????????????????????
		mergeSort(sortedList, 0, n);
		// ??????????????????????????¨?????????????´????????´??????????????????????
		for (int i = 0; i < n; i++) {
			map.put(sortedList[i], i);
		}
		boolean flag = true;
		int time = 1;
		// ????????¨
		do{
			int temp3 = -1;
			int index2 = 0;
		for (int i = 0; i < n; i++) {
			if (i != map.get(list[i]) && temp3 < list[i]) {
					//??????????????§?????£??°???????´???????????????????????´????????????????
					temp3 = map.get(list[i]);
					index2 = i;
				}
			}
		int temp = list[index2];
		int ind = map.get(list[index2]);
		int temp2 = list[ind];
		list[index2] = temp2;
		list[ind] = temp;
		count = count + temp + temp2;
		//System.out.println(temp + "??¨" + temp2 +"?????????" + time+ "??????");
		//time++;
		flag = true;
		for(int i = 0; i < n; i++){
			if(i != map.get(list[i])){
				flag = false;
			}
		}
		}while(flag != true);
		System.out.println(count);
	}
	
	static void merge(int[] numList, int left, int mid, int right) {
		int n1 = mid - left;
		int n2 = right - mid;
		int[] L = new int[n1 + 1];
		int[] R = new int[n2 + 1];

		for (int i = 0; i < n1; i++) {
			L[i] = numList[left + i];
		}

		for (int i = 0; i < n2; i++) {
			R[i] = numList[mid + i];
		}

		L[n1] = Integer.MAX_VALUE;
		R[n2] = Integer.MAX_VALUE;
		int i = 0;
		int j = 0;
		// L??¨R??????????????????????°????????????????numList???????´??????????
		// ?°?????????????????????????????????????????¬??????????????????????????????????????´????????????????????????°?????????+1?????????
		for (int k = left; k < right; k++) {
			if (L[i] <= R[j]) {
				numList[k] = L[i];
				i = i + 1;
			} else {
				numList[k] = R[j];
				j = j + 1;
			}
		}
	}

	// ????¨????merge???????????????????±??????????????°?????´???????(left)??¨?????§????´???????(right)?????????-1??????????????§??°????????????
	static void mergeSort(int[] numList, int left, int right) {
		if ((left + 1) < right) {
			int mid = (left + right) / 2;

			mergeSort(numList, left, mid);
			// System.out.println("???");
			mergeSort(numList, mid, right);
			// System.out.println("???");
			merge(numList, left, mid, right);
		}
	}
}