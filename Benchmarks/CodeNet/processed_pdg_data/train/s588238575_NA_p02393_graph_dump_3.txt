Line_7 $$ if (input_one > input_two) -->Line_10 $$ input_two = kari[ CD ]
Line_7 $$ if (input_one > input_two) -->Line_9 $$ input_one = input_two[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ System.out.println(input_one + " " + input_two + " " + input_three)[ CD ]
Line_10 $$ input_two = kari-->Line_19 $$ input_one = input_two[ FD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_9 $$ input_one = input_two[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int input_one = scanner.nextInt()[ CD ]
Line_8 $$ int kari = input_one-->Line_20 $$ input_two = kari[ FD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_7 $$ if (input_one > input_two) [ FD ]
Line_10 $$ input_two = kari-->Line_17 $$ if (input_one > input_two) [ FD ]
Line_12 $$ if (input_two > input_three) -->Line_13 $$ int karxi = input_two[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ if (input_one > input_two) [ CD ]
Line_12 $$ if (input_two > input_three) -->Line_14 $$ input_two = input_three[ CD ]
Line_9 $$ input_one = input_two-->Line_19 $$ input_one = input_two[ FD ]
Line_14 $$ input_two = input_three-->Line_20 $$ input_two = kari[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_14 $$ input_two = input_three[ FD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_12 $$ if (input_two > input_three) [ FD ]
Line_6 $$ int input_three = scanner.nextInt()-->Line_12 $$ if (input_two > input_three) [ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ int input_three = scanner.nextInt()[ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int input_one = scanner.nextInt()[ FD ]
Line_13 $$ int karxi = input_two-->Line_15 $$ input_three = karxi[ FD ]
Line_10 $$ input_two = kari-->Line_20 $$ input_two = kari[ FD ]
Line_4 $$ int input_one = scanner.nextInt()-->Line_9 $$ input_one = input_two[ FD ]
Line_12 $$ if (input_two > input_three) -->Line_15 $$ input_three = karxi[ CD ]
Line_14 $$ input_two = input_three-->Line_17 $$ if (input_one > input_two) [ FD ]
Line_4 $$ int input_one = scanner.nextInt()-->Line_19 $$ input_one = input_two[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int input_two = scanner.nextInt()[ CD ]
Line_6 $$ int input_three = scanner.nextInt()-->Line_14 $$ input_two = input_three[ FD ]
Line_4 $$ int input_one = scanner.nextInt()-->Line_7 $$ if (input_one > input_two) [ FD ]
Line_17 $$ if (input_one > input_two) -->Line_19 $$ input_one = input_two[ CD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_17 $$ if (input_one > input_two) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int input_three = scanner.nextInt()[ CD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_19 $$ input_one = input_two[ FD ]
Line_10 $$ input_two = kari-->Line_12 $$ if (input_two > input_three) [ FD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_20 $$ input_two = kari[ FD ]
Line_8 $$ int kari = input_one-->Line_10 $$ input_two = kari[ FD ]
Line_7 $$ if (input_one > input_two) -->Line_8 $$ int kari = input_one[ CD ]
Line_6 $$ int input_three = scanner.nextInt()-->Line_15 $$ input_three = karxi[ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_5 $$ int input_two = scanner.nextInt()[ FD ]
Line_4 $$ int input_one = scanner.nextInt()-->Line_17 $$ if (input_one > input_two) [ FD ]
Line_17 $$ if (input_one > input_two) -->Line_20 $$ input_two = kari[ CD ]
Line_14 $$ input_two = input_three-->Line_19 $$ input_one = input_two[ FD ]
Line_10 $$ input_two = kari-->Line_14 $$ input_two = input_three[ FD ]
Line_5 $$ int input_two = scanner.nextInt()-->Line_10 $$ input_two = kari[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ if (input_one > input_two) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ if (input_two > input_three) [ CD ]
Line_9 $$ input_one = input_two-->Line_17 $$ if (input_one > input_two) [ FD ]
