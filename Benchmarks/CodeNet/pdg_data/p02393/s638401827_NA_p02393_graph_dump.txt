Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ InputStreamReader is = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedReader br = new BufferedReader(is)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String chithanh = br.readLine()[ CD ]
Line_5 $$ String chithanh = br.readLine()-->Line_5 $$ String chithanh = br.readLine()[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(is)-->Line_5 $$ String chithanh = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String[] chi = chithanh.split(" ")[ CD ]
Line_6 $$ String[] chi = chithanh.split(" ")-->Line_6 $$ String[] chi = chithanh.split(" ")[ CD ]
Line_5 $$ String chithanh = br.readLine()-->Line_6 $$ String[] chi = chithanh.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int chinm[] = new int[chi.length][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int tmp[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ CD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ CD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ FD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_10 $$ chinm[i] = Integer.parseInt(chi[i])[ CD ]
Line_10 $$ chinm[i] = Integer.parseInt(chi[i])-->Line_10 $$ chinm[i] = Integer.parseInt(chi[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ CD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ CD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ FD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ CD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ CD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ CD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ CD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ FD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_13 $$ if (chinm[k] > chinm[k + 1]) [ CD ]
Line_13 $$ if (chinm[k] > chinm[k + 1]) -->Line_14 $$ tmp = chinm[k][ CD ]
Line_14 $$ tmp = chinm[k]-->Line_14 $$ tmp = chinm[k][ FD ]
Line_8 $$ int tmp-->Line_14 $$ tmp = chinm[k][ FD ]
Line_13 $$ if (chinm[k] > chinm[k + 1]) -->Line_15 $$ chinm[k] = chinm[k + 1][ CD ]
Line_13 $$ if (chinm[k] > chinm[k + 1]) -->Line_16 $$ chinm[k + 1] = tmp[ CD ]
Line_14 $$ tmp = chinm[k]-->Line_16 $$ chinm[k + 1] = tmp[ FD ]
Line_8 $$ int tmp-->Line_16 $$ chinm[k + 1] = tmp[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ CD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ CD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ FD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_21 $$ System.out.print(chinm[l])[ CD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_22 $$ if (l != chinm.length - 1)[ CD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_22 $$ if (l != chinm.length - 1)[ FD ]
Line_22 $$ if (l != chinm.length - 1)-->Line_23 $$ System.out.print(" ")[ CD ]
Line_22 $$ if (l != chinm.length - 1)-->Line_25 $$ System.out.print("\n")[ CD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ FD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ FD ]
Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])-->Line_9 $$ for (int i = 0; i < chi.length; i++) chinm[i] = Integer.parseInt(chi[i])[ FD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ FD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ FD ]
Line_11 $$ for (int j = chinm.length; j > 1; j--) -->Line_11 $$ for (int j = chinm.length; j > 1; j--) [ FD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ FD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ FD ]
Line_12 $$ for (int k = 0; k < j - 1; k++) -->Line_12 $$ for (int k = 0; k < j - 1; k++) [ FD ]
Line_14 $$ tmp = chinm[k]-->Line_16 $$ chinm[k + 1] = tmp[ FD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ FD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ FD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_20 $$ for (int l = 0; l < chinm.length; l++) [ FD ]
Line_20 $$ for (int l = 0; l < chinm.length; l++) -->Line_22 $$ if (l != chinm.length - 1)[ FD ]
