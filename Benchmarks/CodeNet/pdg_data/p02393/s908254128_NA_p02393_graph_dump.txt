Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int[] a = new int[4][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ a[0] = scan.nextInt()[ CD ]
Line_5 $$ a[0] = scan.nextInt()-->Line_5 $$ a[0] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ a[0] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ a[1] = scan.nextInt()[ CD ]
Line_6 $$ a[1] = scan.nextInt()-->Line_6 $$ a[1] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ a[1] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ a[2] = scan.nextInt()[ CD ]
Line_7 $$ a[2] = scan.nextInt()-->Line_7 $$ a[2] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ a[2] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int i, j[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (i = 1; i <= 2; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ int i, j-->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ CD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_8 $$ int i, j-->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ CD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_8 $$ int i, j-->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_10 $$ a[3] = a[i][ CD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ CD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ CD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ CD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
Line_8 $$ int i, j-->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
Line_8 $$ int i, j-->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ CD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
Line_8 $$ int i, j-->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_12 $$ a[j + 1] = a[j][ CD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_14 $$ if (j != i - 1) [ CD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_14 $$ if (j != i - 1) [ FD ]
Line_8 $$ int i, j-->Line_14 $$ if (j != i - 1) [ FD ]
Line_14 $$ if (j != i - 1) -->Line_15 $$ a[j + 1] = a[3][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ System.out.print(a[0] + " ")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ System.out.print(a[1] + " ")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(a[2])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_21 $$ scan.close()[ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_9 $$ for (i = 1; i <= 2; i++) -->Line_9 $$ for (i = 1; i <= 2; i++) [ FD ]
Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) -->Line_11 $$ for (j = i - 1; j >= 0 && a[j] > a[3]; j--) [ FD ]
