Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_5 $$ String s = reader.readLine()-->Line_5 $$ String s = reader.readLine()[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String s = reader.readLine()[ FD ]
Line_7 $$ String a = st.nextToken()-->Line_7 $$ String a = st.nextToken()[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(s, " ")-->Line_7 $$ String a = st.nextToken()[ FD ]
Line_8 $$ String b = st.nextToken()-->Line_8 $$ String b = st.nextToken()[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(s, " ")-->Line_8 $$ String b = st.nextToken()[ FD ]
Line_9 $$ String c = st.nextToken()-->Line_9 $$ String c = st.nextToken()[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(s, " ")-->Line_9 $$ String c = st.nextToken()[ FD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_10 $$ int an = Integer.parseInt(a)[ CD ]
Line_7 $$ String a = st.nextToken()-->Line_10 $$ int an = Integer.parseInt(a)[ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_11 $$ int bn = Integer.parseInt(b)[ CD ]
Line_8 $$ String b = st.nextToken()-->Line_11 $$ int bn = Integer.parseInt(b)[ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_12 $$ int cn = Integer.parseInt(c)[ CD ]
Line_9 $$ String c = st.nextToken()-->Line_12 $$ int cn = Integer.parseInt(c)[ FD ]
Line_14 $$ if (an > bn && an > cn) -->Line_15 $$ max = an[ CD ]
Line_13 $$ int min, mid, max-->Line_15 $$ max = an[ FD ]
Line_15 $$ max = an-->Line_15 $$ max = an[ FD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_15 $$ max = an[ FD ]
Line_14 $$ if (an > bn && an > cn) -->Line_16 $$ if (bn > cn) [ CD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_16 $$ if (bn > cn) [ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_16 $$ if (bn > cn) [ FD ]
Line_16 $$ if (bn > cn) -->Line_17 $$ mid = bn[ CD ]
Line_13 $$ int min, mid, max-->Line_17 $$ mid = bn[ FD ]
Line_17 $$ mid = bn-->Line_17 $$ mid = bn[ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_17 $$ mid = bn[ FD ]
Line_16 $$ if (bn > cn) -->Line_17 $$ min = cn[ CD ]
Line_13 $$ int min, mid, max-->Line_17 $$ min = cn[ FD ]
Line_17 $$ min = cn-->Line_17 $$ min = cn[ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_17 $$ min = cn[ FD ]
Line_16 $$ if (bn > cn) -->Line_19 $$ mid = cn[ CD ]
Line_13 $$ int min, mid, max-->Line_19 $$ mid = cn[ FD ]
Line_17 $$ mid = bn-->Line_19 $$ mid = cn[ FD ]
Line_19 $$ mid = cn-->Line_19 $$ mid = cn[ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_19 $$ mid = cn[ FD ]
Line_16 $$ if (bn > cn) -->Line_19 $$ min = bn[ CD ]
Line_13 $$ int min, mid, max-->Line_19 $$ min = bn[ FD ]
Line_17 $$ min = cn-->Line_19 $$ min = bn[ FD ]
Line_19 $$ min = bn-->Line_19 $$ min = bn[ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_19 $$ min = bn[ FD ]
Line_14 $$ if (an > bn && an > cn) -->Line_21 $$ if (bn > cn) [ CD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_21 $$ if (bn > cn) [ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_21 $$ if (bn > cn) [ FD ]
Line_21 $$ if (bn > cn) -->Line_22 $$ max = bn[ CD ]
Line_13 $$ int min, mid, max-->Line_22 $$ max = bn[ FD ]
Line_15 $$ max = an-->Line_22 $$ max = bn[ FD ]
Line_22 $$ max = bn-->Line_22 $$ max = bn[ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_22 $$ max = bn[ FD ]
Line_21 $$ if (bn > cn) -->Line_23 $$ if (an > cn) [ CD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_23 $$ if (an > cn) [ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_23 $$ if (an > cn) [ FD ]
Line_23 $$ if (an > cn) -->Line_24 $$ mid = an[ CD ]
Line_13 $$ int min, mid, max-->Line_24 $$ mid = an[ FD ]
Line_17 $$ mid = bn-->Line_24 $$ mid = an[ FD ]
Line_19 $$ mid = cn-->Line_24 $$ mid = an[ FD ]
Line_24 $$ mid = an-->Line_24 $$ mid = an[ FD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_24 $$ mid = an[ FD ]
Line_23 $$ if (an > cn) -->Line_24 $$ min = cn[ CD ]
Line_13 $$ int min, mid, max-->Line_24 $$ min = cn[ FD ]
Line_17 $$ min = cn-->Line_24 $$ min = cn[ FD ]
Line_19 $$ min = bn-->Line_24 $$ min = cn[ FD ]
Line_24 $$ min = cn-->Line_24 $$ min = cn[ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_24 $$ min = cn[ FD ]
Line_23 $$ if (an > cn) -->Line_26 $$ mid = cn[ CD ]
Line_13 $$ int min, mid, max-->Line_26 $$ mid = cn[ FD ]
Line_17 $$ mid = bn-->Line_26 $$ mid = cn[ FD ]
Line_19 $$ mid = cn-->Line_26 $$ mid = cn[ FD ]
Line_24 $$ mid = an-->Line_26 $$ mid = cn[ FD ]
Line_26 $$ mid = cn-->Line_26 $$ mid = cn[ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_26 $$ mid = cn[ FD ]
Line_23 $$ if (an > cn) -->Line_26 $$ min = an[ CD ]
Line_13 $$ int min, mid, max-->Line_26 $$ min = an[ FD ]
Line_17 $$ min = cn-->Line_26 $$ min = an[ FD ]
Line_19 $$ min = bn-->Line_26 $$ min = an[ FD ]
Line_24 $$ min = cn-->Line_26 $$ min = an[ FD ]
Line_26 $$ min = an-->Line_26 $$ min = an[ FD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_26 $$ min = an[ FD ]
Line_21 $$ if (bn > cn) -->Line_29 $$ max = cn[ CD ]
Line_13 $$ int min, mid, max-->Line_29 $$ max = cn[ FD ]
Line_15 $$ max = an-->Line_29 $$ max = cn[ FD ]
Line_22 $$ max = bn-->Line_29 $$ max = cn[ FD ]
Line_29 $$ max = cn-->Line_29 $$ max = cn[ FD ]
Line_12 $$ int cn = Integer.parseInt(c)-->Line_29 $$ max = cn[ FD ]
Line_21 $$ if (bn > cn) -->Line_30 $$ if (an > bn) [ CD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_30 $$ if (an > bn) [ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_30 $$ if (an > bn) [ FD ]
Line_30 $$ if (an > bn) -->Line_31 $$ mid = an[ CD ]
Line_13 $$ int min, mid, max-->Line_31 $$ mid = an[ FD ]
Line_17 $$ mid = bn-->Line_31 $$ mid = an[ FD ]
Line_19 $$ mid = cn-->Line_31 $$ mid = an[ FD ]
Line_24 $$ mid = an-->Line_31 $$ mid = an[ FD ]
Line_26 $$ mid = cn-->Line_31 $$ mid = an[ FD ]
Line_31 $$ mid = an-->Line_31 $$ mid = an[ FD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_31 $$ mid = an[ FD ]
Line_30 $$ if (an > bn) -->Line_31 $$ min = bn[ CD ]
Line_13 $$ int min, mid, max-->Line_31 $$ min = bn[ FD ]
Line_17 $$ min = cn-->Line_31 $$ min = bn[ FD ]
Line_19 $$ min = bn-->Line_31 $$ min = bn[ FD ]
Line_24 $$ min = cn-->Line_31 $$ min = bn[ FD ]
Line_26 $$ min = an-->Line_31 $$ min = bn[ FD ]
Line_31 $$ min = bn-->Line_31 $$ min = bn[ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_31 $$ min = bn[ FD ]
Line_30 $$ if (an > bn) -->Line_33 $$ mid = bn[ CD ]
Line_13 $$ int min, mid, max-->Line_33 $$ mid = bn[ FD ]
Line_17 $$ mid = bn-->Line_33 $$ mid = bn[ FD ]
Line_19 $$ mid = cn-->Line_33 $$ mid = bn[ FD ]
Line_24 $$ mid = an-->Line_33 $$ mid = bn[ FD ]
Line_26 $$ mid = cn-->Line_33 $$ mid = bn[ FD ]
Line_31 $$ mid = an-->Line_33 $$ mid = bn[ FD ]
Line_33 $$ mid = bn-->Line_33 $$ mid = bn[ FD ]
Line_11 $$ int bn = Integer.parseInt(b)-->Line_33 $$ mid = bn[ FD ]
Line_30 $$ if (an > bn) -->Line_33 $$ min = an[ CD ]
Line_13 $$ int min, mid, max-->Line_33 $$ min = an[ FD ]
Line_17 $$ min = cn-->Line_33 $$ min = an[ FD ]
Line_19 $$ min = bn-->Line_33 $$ min = an[ FD ]
Line_24 $$ min = cn-->Line_33 $$ min = an[ FD ]
Line_26 $$ min = an-->Line_33 $$ min = an[ FD ]
Line_31 $$ min = bn-->Line_33 $$ min = an[ FD ]
Line_33 $$ min = an-->Line_33 $$ min = an[ FD ]
Line_10 $$ int an = Integer.parseInt(a)-->Line_33 $$ min = an[ FD ]
