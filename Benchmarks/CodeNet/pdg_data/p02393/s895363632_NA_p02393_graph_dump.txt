Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int[] integar = new int[3][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ CD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ CD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ FD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_6 $$ integar[i] = scan.nextInt()[ CD ]
Line_6 $$ integar[i] = scan.nextInt()-->Line_6 $$ integar[i] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ integar[i] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ CD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ CD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ FD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ CD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ CD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ FD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ CD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ CD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ FD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_10 $$ if (integar[k] < integar[k - 1]) [ CD ]
Line_10 $$ if (integar[k] < integar[k - 1]) -->Line_11 $$ int temp = integar[k][ CD ]
Line_10 $$ if (integar[k] < integar[k - 1]) -->Line_12 $$ integar[k] = integar[k - 1][ CD ]
Line_10 $$ if (integar[k] < integar[k - 1]) -->Line_13 $$ integar[k - 1] = temp[ CD ]
Line_11 $$ int temp = integar[k]-->Line_13 $$ integar[k - 1] = temp[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(integar[0] + " " + integar[1] + " " + integar[2])[ CD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ FD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ FD ]
Line_5 $$ for (int i = 0; i < integar.length; i++) -->Line_5 $$ for (int i = 0; i < integar.length; i++) [ FD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ FD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ FD ]
Line_8 $$ for (int j = 0; j < integar.length; j++) -->Line_8 $$ for (int j = 0; j < integar.length; j++) [ FD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ FD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ FD ]
Line_9 $$ for (int k = integar.length - 1; k > j; k--) -->Line_9 $$ for (int k = integar.length - 1; k > j; k--) [ FD ]
Line_11 $$ int temp = integar[k]-->Line_13 $$ integar[k - 1] = temp[ FD ]
