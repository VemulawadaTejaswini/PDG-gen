Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int data[] = new int[3][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_6 $$ data[i] = sc.nextInt()[ CD ]
Line_6 $$ data[i] = sc.nextInt()-->Line_6 $$ data[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ data[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ CD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ CD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ CD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ CD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ FD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_10 $$ if (data[i] > data[j]) [ CD ]
Line_10 $$ if (data[i] > data[j]) -->Line_11 $$ int x = data[i][ CD ]
Line_10 $$ if (data[i] > data[j]) -->Line_12 $$ data[i] = data[j][ CD ]
Line_10 $$ if (data[i] > data[j]) -->Line_13 $$ data[j] = x[ CD ]
Line_11 $$ int x = data[i]-->Line_13 $$ data[j] = x[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(data[0] + " " + data[1] + " " + data[2])[ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < data.length; i++) -->Line_8 $$ for (int i = 0; i < data.length; i++) [ FD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ FD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ FD ]
Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) -->Line_9 $$ for (int j = i + 1; j < data.length; j++) if (data[i] > data[j]) [ FD ]
Line_11 $$ int x = data[i]-->Line_13 $$ data[j] = x[ FD ]
