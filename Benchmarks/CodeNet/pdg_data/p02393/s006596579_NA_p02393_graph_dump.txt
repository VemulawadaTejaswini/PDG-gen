Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())[ CD ]
Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())-->Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String print = nums.stream().sorted().map( x -> String.valueOf(x)).collect(Collectors.joining(" "))[ CD ]
Line_5 $$ String print = nums.stream().sorted().map( x -> String.valueOf(x)).collect(Collectors.joining(" "))-->Line_5 $$ String print = nums.stream().sorted().map( x -> String.valueOf(x)).collect(Collectors.joining(" "))[ CD ]
Line_4 $$ List<Integer> nums = Arrays.asList(sc.nextInt(), sc.nextInt(), sc.nextInt())-->Line_5 $$ String print = nums.stream().sorted().map( x -> String.valueOf(x)).collect(Collectors.joining(" "))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ System.out.println(print)[ CD ]
Line_5 $$ String print = nums.stream().sorted().map( x -> String.valueOf(x)).collect(Collectors.joining(" "))-->Line_6 $$ System.out.println(print)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ sc.close()[ FD ]
