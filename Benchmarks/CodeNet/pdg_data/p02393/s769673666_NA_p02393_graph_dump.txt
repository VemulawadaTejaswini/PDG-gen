Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ String s[ CD ]
Line_3 $$ String s-->Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))[ FD ]
Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))-->Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))[ FD ]
Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))-->Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))[ CD ]
Line_4 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_11 $$ System.out.println(s)[ CD ]
Line_3 $$ String s-->Line_11 $$ System.out.println(s)[ FD ]
Line_5 $$ s = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::<>parseInt).sorted().mapToObj(String::<>valueOf).collect(Collectors.joining(" "))-->Line_11 $$ System.out.println(s)[ FD ]
