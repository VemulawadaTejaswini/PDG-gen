Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_3 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_6 $$ String str = br.readLine()[ CD ]
Line_6 $$ String str = br.readLine()-->Line_6 $$ String str = br.readLine()[ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String str = br.readLine()[ FD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_7 $$ String[] str1Ary = str.split(" ")[ CD ]
Line_7 $$ String[] str1Ary = str.split(" ")-->Line_7 $$ String[] str1Ary = str.split(" ")[ CD ]
Line_6 $$ String str = br.readLine()-->Line_7 $$ String[] str1Ary = str.split(" ")[ FD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_8 $$ int[] ary = new int[str1Ary.length][ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_3 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_10 $$ ary[i] = Integer.parseInt(str1Ary[i])[ CD ]
Line_10 $$ ary[i] = Integer.parseInt(str1Ary[i])-->Line_10 $$ ary[i] = Integer.parseInt(str1Ary[i])[ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_12 $$ Arrays.sort(ary)[ CD ]
Line_8 $$ int[] ary = new int[str1Ary.length]-->Line_12 $$ Arrays.sort(ary)[ FD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_3 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_14 $$ System.out.print(ary[i])[ CD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_15 $$ if (i < ary.length - 1) [ CD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_15 $$ if (i < ary.length - 1) [ FD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_15 $$ if (i < ary.length - 1) [ FD ]
Line_15 $$ if (i < ary.length - 1) -->Line_16 $$ System.out.print(" ")[ CD ]
Line_3 $$ public static void main(String[] args) throws java.lang.Exception -->Line_19 $$ System.out.println()[ CD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < str1Ary.length; i++) -->Line_9 $$ for (int i = 0; i < str1Ary.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_13 $$ for (int i = 0; i < ary.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < ary.length; i++) -->Line_15 $$ if (i < ary.length - 1) [ FD ]
