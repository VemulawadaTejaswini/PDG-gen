Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String... args) throws Exception [ CD ]
Line_2 $$ public static void main(String... args) throws Exception -->Line_3 $$ BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String... args) throws Exception -->Line_4 $$ List<Integer> list = stdin.lines().flatMap( v -> Arrays.asList(v.split(" ")).stream()).mapToInt(Integer::<>parseInt).boxed().collect(Collectors.toList())[ CD ]
Line_4 $$ List<Integer> list = stdin.lines().flatMap( v -> Arrays.asList(v.split(" ")).stream()).mapToInt(Integer::<>parseInt).boxed().collect(Collectors.toList())-->Line_4 $$ List<Integer> list = stdin.lines().flatMap( v -> Arrays.asList(v.split(" ")).stream()).mapToInt(Integer::<>parseInt).boxed().collect(Collectors.toList())[ CD ]
Line_3 $$ BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ List<Integer> list = stdin.lines().flatMap( v -> Arrays.asList(v.split(" ")).stream()).mapToInt(Integer::<>parseInt).boxed().collect(Collectors.toList())[ FD ]
Line_2 $$ public static void main(String... args) throws Exception -->Line_10 $$ int area = list.stream().mapToInt(Integer::<>intValue).reduce(1, ( a,  b) -> a * b)[ CD ]
Line_10 $$ int area = list.stream().mapToInt(Integer::<>intValue).reduce(1, ( a,  b) -> a * b)-->Line_10 $$ int area = list.stream().mapToInt(Integer::<>intValue).reduce(1, ( a,  b) -> a * b)[ CD ]
Line_4 $$ List<Integer> list = stdin.lines().flatMap( v -> Arrays.asList(v.split(" ")).stream()).mapToInt(Integer::<>parseInt).boxed().collect(Collectors.toList())-->Line_10 $$ int area = list.stream().mapToInt(Integer::<>intValue).reduce(1, ( a,  b) -> a * b)[ FD ]
Line_2 $$ public static void main(String... args) throws Exception -->Line_13 $$ int perimeter = list.stream().mapToInt(Integer::<>intValue).sum() * 2[ CD ]
Line_4 $$ List<Integer> list = stdin.lines().flatMap( v -> Arrays.asList(v.split(" ")).stream()).mapToInt(Integer::<>parseInt).boxed().collect(Collectors.toList())-->Line_13 $$ int perimeter = list.stream().mapToInt(Integer::<>intValue).sum() * 2[ FD ]
Line_2 $$ public static void main(String... args) throws Exception -->Line_16 $$ out.printf("%d %d\n", area, perimeter)[ CD ]
Line_10 $$ int area = list.stream().mapToInt(Integer::<>intValue).reduce(1, ( a,  b) -> a * b)-->Line_16 $$ out.printf("%d %d\n", area, perimeter)[ FD ]
Line_13 $$ int perimeter = list.stream().mapToInt(Integer::<>intValue).sum() * 2-->Line_16 $$ out.printf("%d %d\n", area, perimeter)[ FD ]
