Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int S = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int S = Integer.parseInt(sc.next())-->Line_4 $$ int S = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int S = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] S_each = new int[4][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ CD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ CD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_7 $$ S_each[i] = S % 10[ CD ]
Line_4 $$ int S = Integer.parseInt(sc.next())-->Line_7 $$ S_each[i] = S % 10[ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_8 $$ if (i != 4) [ CD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_8 $$ if (i != 4) [ FD ]
Line_8 $$ if (i != 4) -->Line_9 $$ S = (S - S_each[i]) / 10[ CD ]
Line_9 $$ S = (S - S_each[i]) / 10-->Line_9 $$ S = (S - S_each[i]) / 10[ FD ]
Line_4 $$ int S = Integer.parseInt(sc.next())-->Line_9 $$ S = (S - S_each[i]) / 10[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ boolean check = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ CD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ CD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_14 $$ if (S_each[i] == S_each[i + 1]) [ CD ]
Line_14 $$ if (S_each[i] == S_each[i + 1]) -->Line_15 $$ check = true[ CD ]
Line_15 $$ check = true-->Line_15 $$ check = true[ FD ]
Line_12 $$ boolean check = false-->Line_15 $$ check = true[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ if (check) [ CD ]
Line_19 $$ if (check) -->Line_20 $$ System.out.print("Bad")[ CD ]
Line_19 $$ if (check) -->Line_22 $$ System.out.print("Good")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_24 $$ sc.close()[ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_6 $$ for (int i = 0; i < S_each.length; i++) [ FD ]
Line_9 $$ S = (S - S_each[i]) / 10-->Line_7 $$ S_each[i] = S % 10[ FD ]
Line_6 $$ for (int i = 0; i < S_each.length; i++) -->Line_8 $$ if (i != 4) [ FD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) -->Line_13 $$ for (int i = 0; i < S_each.length - 1; i++) [ FD ]
