Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ static int mod = 1_000_000_007;[ CD ]
Line_1 $$ class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_4 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_5 $$ long cnt = 0[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_6 $$ String N = sc.next()[ CD ]
Line_6 $$ String N = sc.next()-->Line_6 $$ String N = sc.next()[ CD ]
Line_4 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String N = sc.next()[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ CD ]
Line_6 $$ String N = sc.next()-->Line_7 $$ for (int i = 1; i < N.length(); i++) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ CD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ CD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ CD ]
Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) -->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ CD ]
Line_6 $$ String N = sc.next()-->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ FD ]
Line_6 $$ String N = sc.next()-->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ FD ]
Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) -->Line_9 $$ cnt = 1[ CD ]
Line_9 $$ cnt = 1-->Line_9 $$ cnt = 1[ FD ]
Line_5 $$ long cnt = 0-->Line_9 $$ cnt = 1[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_12 $$ if (cnt == 1) [ CD ]
Line_9 $$ cnt = 1-->Line_12 $$ if (cnt == 1) [ FD ]
Line_5 $$ long cnt = 0-->Line_12 $$ if (cnt == 1) [ FD ]
Line_12 $$ if (cnt == 1) -->Line_13 $$ System.out.println("Bad")[ CD ]
Line_12 $$ if (cnt == 1) -->Line_15 $$ System.out.println("Good")[ CD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_7 $$ for (int i = 1; i < N.length(); i++) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ FD ]
Line_7 $$ for (int i = 1; i < N.length(); i++) -->Line_8 $$ if (N.substring(i - 1, i).equals(N.substring(i, i + 1))) [ FD ]
