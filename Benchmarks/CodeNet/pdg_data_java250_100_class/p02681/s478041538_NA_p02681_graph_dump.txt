Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String a = br.readLine()[ CD ]
Line_4 $$ String a = br.readLine()-->Line_4 $$ String a = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String a = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String b = br.readLine()[ CD ]
Line_5 $$ String b = br.readLine()-->Line_5 $$ String b = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String b = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int l = Math.min(a.length(), b.length())[ CD ]
Line_6 $$ int l = Math.min(a.length(), b.length())-->Line_6 $$ int l = Math.min(a.length(), b.length())[ CD ]
Line_4 $$ String a = br.readLine()-->Line_6 $$ int l = Math.min(a.length(), b.length())[ FD ]
Line_5 $$ String b = br.readLine()-->Line_6 $$ int l = Math.min(a.length(), b.length())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ System.out.println(a.substring(0, l).equals(b.subSequence(0, l)) ? "Yes" : "No")[ CD ]
Line_4 $$ String a = br.readLine()-->Line_7 $$ System.out.println(a.substring(0, l).equals(b.subSequence(0, l)) ? "Yes" : "No")[ FD ]
Line_6 $$ int l = Math.min(a.length(), b.length())-->Line_7 $$ System.out.println(a.substring(0, l).equals(b.subSequence(0, l)) ? "Yes" : "No")[ FD ]
Line_5 $$ String b = br.readLine()-->Line_7 $$ System.out.println(a.substring(0, l).equals(b.subSequence(0, l)) ? "Yes" : "No")[ FD ]
Line_6 $$ int l = Math.min(a.length(), b.length())-->Line_7 $$ System.out.println(a.substring(0, l).equals(b.subSequence(0, l)) ? "Yes" : "No")[ FD ]
