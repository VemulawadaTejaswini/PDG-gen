Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ static String s, t;[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) throws Exception [ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_5 $$ PrintWriter out = new PrintWriter(System.out)[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_6 $$ s = br.readLine()[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ s = br.readLine()[ FD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_7 $$ t = br.readLine()[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ t = br.readLine()[ FD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_8 $$ br.close()[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ br.close()[ FD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_9 $$ boolean flag = true[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_10 $$ int n = s.length()[ CD ]
Line_10 $$ int n = s.length()-->Line_10 $$ int n = s.length()[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_11 $$ int m = t.length()[ CD ]
Line_11 $$ int m = t.length()-->Line_11 $$ int m = t.length()[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_12 $$ flag = s.equals(t.substring(0, n))[ CD ]
Line_9 $$ boolean flag = true-->Line_12 $$ flag = s.equals(t.substring(0, n))[ FD ]
Line_12 $$ flag = s.equals(t.substring(0, n))-->Line_12 $$ flag = s.equals(t.substring(0, n))[ FD ]
Line_12 $$ flag = s.equals(t.substring(0, n))-->Line_12 $$ flag = s.equals(t.substring(0, n))[ CD ]
Line_10 $$ int n = s.length()-->Line_12 $$ flag = s.equals(t.substring(0, n))[ FD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_13 $$ out.println(flag ? "Yes" : "No")[ CD ]
Line_5 $$ PrintWriter out = new PrintWriter(System.out)-->Line_13 $$ out.println(flag ? "Yes" : "No")[ FD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_14 $$ out.flush()[ CD ]
Line_5 $$ PrintWriter out = new PrintWriter(System.out)-->Line_14 $$ out.flush()[ FD ]
