Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ PrintWriter pw = new PrintWriter(System.out)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String S = br.readLine()[ CD ]
Line_5 $$ String S = br.readLine()-->Line_5 $$ String S = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_5 $$ String S = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String T = br.readLine()[ CD ]
Line_6 $$ String T = br.readLine()-->Line_6 $$ String T = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_6 $$ String T = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())[ CD ]
Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())-->Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())[ CD ]
Line_6 $$ String T = br.readLine()-->Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())[ FD ]
Line_6 $$ String T = br.readLine()-->Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())[ FD ]
Line_6 $$ String T = br.readLine()-->Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ if (T.equals(S.concat(tmp))) [ CD ]
Line_6 $$ String T = br.readLine()-->Line_8 $$ if (T.equals(S.concat(tmp))) [ FD ]
Line_8 $$ if (T.equals(S.concat(tmp))) -->Line_8 $$ if (T.equals(S.concat(tmp))) [ CD ]
Line_6 $$ String T = br.readLine()-->Line_8 $$ if (T.equals(S.concat(tmp))) [ FD ]
Line_5 $$ String S = br.readLine()-->Line_8 $$ if (T.equals(S.concat(tmp))) [ FD ]
Line_7 $$ String tmp = T.substring(T.length() - 1, T.length())-->Line_8 $$ if (T.equals(S.concat(tmp))) [ FD ]
Line_8 $$ if (T.equals(S.concat(tmp))) -->Line_9 $$ pw.println("Yes")[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_9 $$ pw.println("Yes")[ FD ]
Line_8 $$ if (T.equals(S.concat(tmp))) -->Line_11 $$ pw.println("No")[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_11 $$ pw.println("No")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ br.close()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_13 $$ br.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ pw.close()[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_14 $$ pw.close()[ FD ]
