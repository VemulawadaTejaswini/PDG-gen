Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int a = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int b = sc.nextInt()[ CD ]
Line_5 $$ int b = sc.nextInt()-->Line_5 $$ int b = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int b = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int best = a[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int[] arr = new int[] [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ CD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ CD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ FD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ best = Math.max(best, arr[i])[ CD ]
Line_9 $$ best = Math.max(best, arr[i])-->Line_9 $$ best = Math.max(best, arr[i])[ FD ]
Line_7 $$ int best = a-->Line_9 $$ best = Math.max(best, arr[i])[ FD ]
Line_9 $$ best = Math.max(best, arr[i])-->Line_9 $$ best = Math.max(best, arr[i])[ CD ]
Line_9 $$ best = Math.max(best, arr[i])-->Line_9 $$ best = Math.max(best, arr[i])[ FD ]
Line_7 $$ int best = a-->Line_9 $$ best = Math.max(best, arr[i])[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ System.out.println(best)[ CD ]
Line_9 $$ best = Math.max(best, arr[i])-->Line_10 $$ System.out.println(best)[ FD ]
Line_7 $$ int best = a-->Line_10 $$ System.out.println(best)[ FD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ FD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ FD ]
Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])-->Line_9 $$ for (int i = 0; i < arr.length; i++) best = Math.max(best, arr[i])[ FD ]
Line_9 $$ best = Math.max(best, arr[i])-->Line_9 $$ best = Math.max(best, arr[i])[ FD ]
