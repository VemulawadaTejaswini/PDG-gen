Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = scan.nextInt()[ CD ]
Line_4 $$ int a = scan.nextInt()-->Line_4 $$ int a = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int a = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int b = scan.nextInt()[ CD ]
Line_5 $$ int b = scan.nextInt()-->Line_5 $$ int b = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ int b = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ scan.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ List<Integer> list = new ArrayList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ list.add(a + b)[ CD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_8 $$ list.add(a + b)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ list.add(a - b)[ CD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_9 $$ list.add(a - b)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ list.add(a * b)[ CD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_10 $$ list.add(a * b)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int max = list.parallelStream().max(Comparator.naturalOrder()).get()[ CD ]
Line_11 $$ int max = list.parallelStream().max(Comparator.naturalOrder()).get()-->Line_11 $$ int max = list.parallelStream().max(Comparator.naturalOrder()).get()[ CD ]
Line_7 $$ List<Integer> list = new ArrayList()-->Line_11 $$ int max = list.parallelStream().max(Comparator.naturalOrder()).get()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ System.out.println(max)[ CD ]
Line_11 $$ int max = list.parallelStream().max(Comparator.naturalOrder()).get()-->Line_12 $$ System.out.println(max)[ FD ]
