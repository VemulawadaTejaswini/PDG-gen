Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringTokenizer st = new StringTokenizer(in.readLine())[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ StringTokenizer st = new StringTokenizer(in.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())-->Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(in.readLine())-->Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())-->Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(in.readLine())-->Line_5 $$ int i1 = Integer.parseInt(st.nextToken()), i2 = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int p = i1 + i2, m = i1 * i2, s = i1 - i2[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ System.out.println(Math.max(Math.max(p, m), s))[ CD ]
Line_6 $$ int p = i1 + i2, m = i1 * i2, s = i1 - i2-->Line_7 $$ System.out.println(Math.max(Math.max(p, m), s))[ FD ]
Line_6 $$ int p = i1 + i2, m = i1 * i2, s = i1 - i2-->Line_7 $$ System.out.println(Math.max(Math.max(p, m), s))[ FD ]
Line_6 $$ int p = i1 + i2, m = i1 * i2, s = i1 - i2-->Line_7 $$ System.out.println(Math.max(Math.max(p, m), s))[ FD ]
