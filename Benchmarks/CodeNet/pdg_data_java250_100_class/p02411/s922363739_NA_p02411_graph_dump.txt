Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_5 $$ int[] points = new int[3][ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_6 $$ for (; ; ) [ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_2 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_6 $$ for (; ; ) -->Line_8 $$ String[] pointsStr = input.readLine().split(" ")[ CD ]
Line_8 $$ String[] pointsStr = input.readLine().split(" ")-->Line_8 $$ String[] pointsStr = input.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ String[] pointsStr = input.readLine().split(" ")[ FD ]
Line_6 $$ for (; ; ) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ CD ]
Line_6 $$ for (; ; ) -->Line_6 $$ for (; ; ) [ CD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ CD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ CD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ FD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_11 $$ points[insert] = Integer.parseInt(pointsStr[insert])[ CD ]
Line_11 $$ points[insert] = Integer.parseInt(pointsStr[insert])-->Line_11 $$ points[insert] = Integer.parseInt(pointsStr[insert])[ CD ]
Line_6 $$ for (; ; ) -->Line_13 $$ if ((points[0] == -1) && (points[1] == -1) && (points[2] == -1)) [ CD ]
Line_13 $$ if ((points[0] == -1) && (points[1] == -1) && (points[2] == -1)) -->Line_17 $$ if ((points[0] == -1) || (points[1] == -1)) [ CD ]
Line_17 $$ if ((points[0] == -1) || (points[1] == -1)) -->Line_19 $$ System.out.println("F")[ CD ]
Line_17 $$ if ((points[0] == -1) || (points[1] == -1)) -->Line_21 $$ if (points[0] + points[1] >= 80) [ CD ]
Line_21 $$ if (points[0] + points[1] >= 80) -->Line_23 $$ System.out.println("A")[ CD ]
Line_21 $$ if (points[0] + points[1] >= 80) -->Line_25 $$ if ((65 <= points[0] + points[1]) && (points[0] + points[1] < 80)) [ CD ]
Line_25 $$ if ((65 <= points[0] + points[1]) && (points[0] + points[1] < 80)) -->Line_27 $$ System.out.println("B")[ CD ]
Line_25 $$ if ((65 <= points[0] + points[1]) && (points[0] + points[1] < 80)) -->Line_29 $$ if (((50 <= points[0] + points[1]) && (points[0] + points[1] < 65) || ((30 <= points[0] + points[1]) && (points[0] + points[1] < 50) && (points[2] >= 50)))) [ CD ]
Line_29 $$ if (((50 <= points[0] + points[1]) && (points[0] + points[1] < 65) || ((30 <= points[0] + points[1]) && (points[0] + points[1] < 50) && (points[2] >= 50)))) -->Line_31 $$ System.out.println("C")[ CD ]
Line_29 $$ if (((50 <= points[0] + points[1]) && (points[0] + points[1] < 65) || ((30 <= points[0] + points[1]) && (points[0] + points[1] < 50) && (points[2] >= 50)))) -->Line_33 $$ if (((30 <= points[0] + points[1]) && (points[0] + points[1] < 50)) && (points[2] < 50)) [ CD ]
Line_33 $$ if (((30 <= points[0] + points[1]) && (points[0] + points[1] < 50)) && (points[2] < 50)) -->Line_35 $$ System.out.println("D")[ CD ]
Line_33 $$ if (((30 <= points[0] + points[1]) && (points[0] + points[1] < 50)) && (points[2] < 50)) -->Line_39 $$ System.out.println("F")[ CD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ FD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ FD ]
Line_9 $$ for (int insert = 0; insert < points.length; insert++) -->Line_9 $$ for (int insert = 0; insert < points.length; insert++) [ FD ]
