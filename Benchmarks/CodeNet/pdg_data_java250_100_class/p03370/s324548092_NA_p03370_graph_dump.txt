Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ final Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ final int n = sc.nextInt()[ CD ]
Line_4 $$ final int n = sc.nextInt()-->Line_4 $$ final int n = sc.nextInt()[ CD ]
Line_3 $$ final Scanner sc = new Scanner(System.in)-->Line_4 $$ final int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ final int x = sc.nextInt()[ CD ]
Line_5 $$ final int x = sc.nextInt()-->Line_5 $$ final int x = sc.nextInt()[ CD ]
Line_3 $$ final Scanner sc = new Scanner(System.in)-->Line_5 $$ final int x = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ final int[] m = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ final int n = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ m[i] = sc.nextInt()[ CD ]
Line_8 $$ m[i] = sc.nextInt()-->Line_8 $$ m[i] = sc.nextInt()[ CD ]
Line_3 $$ final Scanner sc = new Scanner(System.in)-->Line_8 $$ m[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ final int used = IntStream.of(m).sum()[ CD ]
Line_10 $$ final int used = IntStream.of(m).sum()-->Line_10 $$ final int used = IntStream.of(m).sum()[ CD ]
Line_6 $$ final int[] m = new int[n]-->Line_10 $$ final int used = IntStream.of(m).sum()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ final int min = IntStream.of(m).min().getAsInt()[ CD ]
Line_11 $$ final int min = IntStream.of(m).min().getAsInt()-->Line_11 $$ final int min = IntStream.of(m).min().getAsInt()[ CD ]
Line_6 $$ final int[] m = new int[n]-->Line_11 $$ final int min = IntStream.of(m).min().getAsInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ final int ans = m.length + (x - used) / min[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ System.out.println(ans)[ CD ]
Line_12 $$ final int ans = m.length + (x - used) / min-->Line_13 $$ System.out.println(ans)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
