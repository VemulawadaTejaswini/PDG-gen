Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()-->Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()[ FD ]
Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()-->Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] m = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ CD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ CD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_7 $$ m[i] = sc.nextInt()[ CD ]
Line_7 $$ m[i] = sc.nextInt()-->Line_7 $$ m[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ m[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int min = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_9 $$ for (int i = 0; i < m.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_9 $$ for (int i = 0; i < m.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_10 $$ x -= m[i][ CD ]
Line_10 $$ x -= m[i]-->Line_10 $$ x -= m[i][ FD ]
Line_4 $$ int n = sc.nextInt(), x = sc.nextInt()-->Line_10 $$ x -= m[i][ FD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_11 $$ min = Math.min(m[i], min)[ CD ]
Line_11 $$ min = Math.min(m[i], min)-->Line_11 $$ min = Math.min(m[i], min)[ FD ]
Line_8 $$ int min = Integer.MAX_VALUE-->Line_11 $$ min = Math.min(m[i], min)[ FD ]
Line_11 $$ min = Math.min(m[i], min)-->Line_11 $$ min = Math.min(m[i], min)[ CD ]
Line_11 $$ min = Math.min(m[i], min)-->Line_11 $$ min = Math.min(m[i], min)[ FD ]
Line_8 $$ int min = Integer.MAX_VALUE-->Line_11 $$ min = Math.min(m[i], min)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ System.out.println(x / min + n)[ CD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < m.length; i++) m[i] = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m.length; i++) -->Line_9 $$ for (int i = 0; i < m.length; i++) [ FD ]
Line_11 $$ min = Math.min(m[i], min)-->Line_11 $$ min = Math.min(m[i], min)[ FD ]
