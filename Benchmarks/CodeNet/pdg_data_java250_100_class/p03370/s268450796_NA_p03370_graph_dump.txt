Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int x = sc.nextInt()[ CD ]
Line_5 $$ int x = sc.nextInt()-->Line_5 $$ int x = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int x = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int m[] = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int total = n[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int remain = x[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ m[i] = sc.nextInt()[ CD ]
Line_10 $$ m[i] = sc.nextInt()-->Line_10 $$ m[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ m[i] = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ remain -= m[i][ CD ]
Line_11 $$ remain -= m[i]-->Line_11 $$ remain -= m[i][ FD ]
Line_8 $$ int remain = x-->Line_11 $$ remain -= m[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int greatest = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ if (remain > 0) [ CD ]
Line_11 $$ remain -= m[i]-->Line_14 $$ if (remain > 0) [ FD ]
Line_8 $$ int remain = x-->Line_14 $$ if (remain > 0) [ FD ]
Line_14 $$ if (remain > 0) -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_14 $$ if (remain > 0) -->Line_14 $$ if (remain > 0) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_16 $$ if ((remain - remain % m[i]) / m[i] > greatest) [ CD ]
Line_13 $$ int greatest = 0-->Line_16 $$ if ((remain - remain % m[i]) / m[i] > greatest) [ FD ]
Line_16 $$ if ((remain - remain % m[i]) / m[i] > greatest) -->Line_17 $$ greatest = (remain - remain % m[i]) / m[i][ CD ]
Line_17 $$ greatest = (remain - remain % m[i]) / m[i]-->Line_17 $$ greatest = (remain - remain % m[i]) / m[i][ FD ]
Line_13 $$ int greatest = 0-->Line_17 $$ greatest = (remain - remain % m[i]) / m[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ total += greatest[ CD ]
Line_7 $$ int total = n-->Line_21 $$ total += greatest[ FD ]
Line_21 $$ total += greatest-->Line_21 $$ total += greatest[ FD ]
Line_17 $$ greatest = (remain - remain % m[i]) / m[i]-->Line_21 $$ total += greatest[ FD ]
Line_13 $$ int greatest = 0-->Line_21 $$ total += greatest[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ System.out.println(total)[ CD ]
Line_7 $$ int total = n-->Line_22 $$ System.out.println(total)[ FD ]
Line_21 $$ total += greatest-->Line_22 $$ System.out.println(total)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ greatest = (remain - remain % m[i]) / m[i]-->Line_16 $$ if ((remain - remain % m[i]) / m[i] > greatest) [ FD ]
