Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int N = Integer.parseInt(reader.readLine())[ CD ]
Line_5 $$ int N = Integer.parseInt(reader.readLine())-->Line_5 $$ int N = Integer.parseInt(reader.readLine())[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int N = Integer.parseInt(reader.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ String S = reader.readLine()[ CD ]
Line_6 $$ String S = reader.readLine()-->Line_6 $$ String S = reader.readLine()[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String S = reader.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ System.out.println(N % 2 == 0 ? S.substring(0, N / 2).equals(S.substring(N / 2)) ? "Yes" : "No" : "No")[ CD ]
Line_6 $$ String S = reader.readLine()-->Line_7 $$ System.out.println(N % 2 == 0 ? S.substring(0, N / 2).equals(S.substring(N / 2)) ? "Yes" : "No" : "No")[ FD ]
Line_6 $$ String S = reader.readLine()-->Line_7 $$ System.out.println(N % 2 == 0 ? S.substring(0, N / 2).equals(S.substring(N / 2)) ? "Yes" : "No" : "No")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ return[ CD ]
