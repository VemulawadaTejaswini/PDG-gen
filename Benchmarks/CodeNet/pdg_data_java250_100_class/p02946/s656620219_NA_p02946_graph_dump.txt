Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int k = sc.nextInt()[ CD ]
Line_4 $$ int k = sc.nextInt()-->Line_4 $$ int k = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int k = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int x = sc.nextInt()[ CD ]
Line_5 $$ int x = sc.nextInt()-->Line_5 $$ int x = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int x = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ CD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ CD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ FD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_8 $$ sb.append(x - k + 1 + i).append(' ')[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append(x - k + 1 + i).append(' ')[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ System.out.println(sb)[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ System.out.println(sb)[ FD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ FD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ FD ]
Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) -->Line_7 $$ for (int i = 0; i < k * 2 - 1; i++) [ FD ]
