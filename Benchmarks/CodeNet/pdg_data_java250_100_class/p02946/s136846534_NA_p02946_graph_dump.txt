Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ private static Scanner scan = new Scanner(System.in);[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_4 $$ String[] firstLine = scan.nextLine().split(" ")[ CD ]
Line_4 $$ String[] firstLine = scan.nextLine().split(" ")-->Line_4 $$ String[] firstLine = scan.nextLine().split(" ")[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_5 $$ int k = Integer.valueOf(firstLine[0])[ CD ]
Line_5 $$ int k = Integer.valueOf(firstLine[0])-->Line_5 $$ int k = Integer.valueOf(firstLine[0])[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_6 $$ int x = Integer.valueOf(firstLine[1])[ CD ]
Line_6 $$ int x = Integer.valueOf(firstLine[1])-->Line_6 $$ int x = Integer.valueOf(firstLine[1])[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_7 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_8 $$ int index = x - k[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ CD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ CD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ FD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_10 $$ sb.append((index += 1) + " ")[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append((index += 1) + " ")[ FD ]
Line_10 $$ sb.append((index += 1) + " ")-->Line_10 $$ sb.append((index += 1) + " ")[ FD ]
Line_8 $$ int index = x - k-->Line_10 $$ sb.append((index += 1) + " ")[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_12 $$ if (!sb.toString().isEmpty()) [ CD ]
Line_12 $$ if (!sb.toString().isEmpty()) -->Line_12 $$ if (!sb.toString().isEmpty()) [ CD ]
Line_12 $$ if (!sb.toString().isEmpty()) -->Line_12 $$ if (!sb.toString().isEmpty()) [ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ if (!sb.toString().isEmpty()) [ FD ]
Line_12 $$ if (!sb.toString().isEmpty()) -->Line_13 $$ sb.deleteCharAt(sb.length() - 1)[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.deleteCharAt(sb.length() - 1)[ FD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.deleteCharAt(sb.length() - 1)[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_15 $$ System.out.println(sb.toString())[ CD ]
Line_7 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ System.out.println(sb.toString())[ FD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ FD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ FD ]
Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) -->Line_9 $$ for (int i = k * 2 - 1; i > 0; i--) [ FD ]
