Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String[] arr = reader.readLine().split(" ")[ CD ]
Line_5 $$ String[] arr = reader.readLine().split(" ")-->Line_5 $$ String[] arr = reader.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] arr = reader.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int K, X[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ K = Integer.parseInt(arr[0])[ CD ]
Line_6 $$ int K, X-->Line_7 $$ K = Integer.parseInt(arr[0])[ FD ]
Line_7 $$ K = Integer.parseInt(arr[0])-->Line_7 $$ K = Integer.parseInt(arr[0])[ FD ]
Line_7 $$ K = Integer.parseInt(arr[0])-->Line_7 $$ K = Integer.parseInt(arr[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ X = Integer.parseInt(arr[1])[ CD ]
Line_6 $$ int K, X-->Line_8 $$ X = Integer.parseInt(arr[1])[ FD ]
Line_8 $$ X = Integer.parseInt(arr[1])-->Line_8 $$ X = Integer.parseInt(arr[1])[ FD ]
Line_8 $$ X = Integer.parseInt(arr[1])-->Line_8 $$ X = Integer.parseInt(arr[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ StringJoiner sj = new StringJoiner(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ CD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ CD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ FD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_11 $$ sj.add(String.valueOf(i))[ CD ]
Line_9 $$ StringJoiner sj = new StringJoiner(" ")-->Line_11 $$ sj.add(String.valueOf(i))[ FD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_11 $$ sj.add(String.valueOf(i))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ System.out.println(sj.toString())[ CD ]
Line_9 $$ StringJoiner sj = new StringJoiner(" ")-->Line_12 $$ System.out.println(sj.toString())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ return[ CD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ FD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ FD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))[ FD ]
Line_10 $$ for (int i = X - K + 1; i < X + K; i++) sj.add(String.valueOf(i))-->Line_11 $$ sj.add(String.valueOf(i))[ FD ]
