Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scn = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int k = scn.nextInt()[ CD ]
Line_4 $$ int k = scn.nextInt()-->Line_4 $$ int k = scn.nextInt()[ CD ]
Line_3 $$ Scanner scn = new Scanner(System.in)-->Line_4 $$ int k = scn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int x = scn.nextInt()[ CD ]
Line_5 $$ int x = scn.nextInt()-->Line_5 $$ int x = scn.nextInt()[ CD ]
Line_3 $$ Scanner scn = new Scanner(System.in)-->Line_5 $$ int x = scn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int answer = x - k[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ scn.close()[ CD ]
Line_3 $$ Scanner scn = new Scanner(System.in)-->Line_7 $$ scn.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ CD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ CD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ FD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_9 $$ System.out.println(++answer)[ CD ]
Line_6 $$ int answer = x - k-->Line_9 $$ System.out.println(++answer)[ FD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ FD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ FD ]
Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) -->Line_8 $$ for (int i = 0; i < 2 * (k - 1) + 1; i++) [ FD ]
