Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ boolean ansFlag = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int max = Integer.parseInt(sc.next()) - 1[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int max = Integer.parseInt(sc.next()) - 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 1; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_7 $$ for (int i = 1; i < n; i++) [ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_7 $$ for (int i = 1; i < n; i++) [ CD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_7 $$ for (int i = 1; i < n; i++) [ CD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_7 $$ for (int i = 1; i < n; i++) [ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_8 $$ int tmp = Integer.parseInt(sc.next())[ CD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_8 $$ int tmp = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ int tmp = Integer.parseInt(sc.next())[ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_9 $$ if (tmp > max) [ CD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_9 $$ if (tmp > max) [ FD ]
Line_6 $$ int max = Integer.parseInt(sc.next()) - 1-->Line_9 $$ if (tmp > max) [ FD ]
Line_9 $$ if (tmp > max) -->Line_10 $$ tmp -= 1[ CD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_10 $$ tmp -= 1[ FD ]
Line_10 $$ tmp -= 1-->Line_10 $$ tmp -= 1[ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_12 $$ if (tmp < max) [ CD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_12 $$ if (tmp < max) [ FD ]
Line_10 $$ tmp -= 1-->Line_12 $$ if (tmp < max) [ FD ]
Line_6 $$ int max = Integer.parseInt(sc.next()) - 1-->Line_12 $$ if (tmp < max) [ FD ]
Line_12 $$ if (tmp < max) -->Line_13 $$ ansFlag = false[ CD ]
Line_13 $$ ansFlag = false-->Line_13 $$ ansFlag = false[ FD ]
Line_5 $$ boolean ansFlag = true-->Line_13 $$ ansFlag = false[ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_16 $$ max = Math.max(max, tmp)[ CD ]
Line_16 $$ max = Math.max(max, tmp)-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_6 $$ int max = Integer.parseInt(sc.next()) - 1-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_16 $$ max = Math.max(max, tmp)-->Line_16 $$ max = Math.max(max, tmp)[ CD ]
Line_16 $$ max = Math.max(max, tmp)-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_6 $$ int max = Integer.parseInt(sc.next()) - 1-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_10 $$ tmp -= 1-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ if (ansFlag) [ CD ]
Line_18 $$ if (ansFlag) -->Line_19 $$ System.out.println("Yes")[ CD ]
Line_18 $$ if (ansFlag) -->Line_21 $$ System.out.println("No")[ CD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_7 $$ for (int i = 1; i < n; i++) [ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_7 $$ for (int i = 1; i < n; i++) [ FD ]
Line_7 $$ for (int i = 1; i < n; i++) -->Line_7 $$ for (int i = 1; i < n; i++) [ FD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_9 $$ if (tmp > max) [ FD ]
Line_10 $$ tmp -= 1-->Line_9 $$ if (tmp > max) [ FD ]
Line_16 $$ max = Math.max(max, tmp)-->Line_9 $$ if (tmp > max) [ FD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_12 $$ if (tmp < max) [ FD ]
Line_10 $$ tmp -= 1-->Line_12 $$ if (tmp < max) [ FD ]
Line_16 $$ max = Math.max(max, tmp)-->Line_12 $$ if (tmp < max) [ FD ]
Line_16 $$ max = Math.max(max, tmp)-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_8 $$ int tmp = Integer.parseInt(sc.next())-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
Line_10 $$ tmp -= 1-->Line_16 $$ max = Math.max(max, tmp)[ FD ]
