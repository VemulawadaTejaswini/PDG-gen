Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner stdIn = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = stdIn.nextInt()[ CD ]
Line_4 $$ int n = stdIn.nextInt()-->Line_4 $$ int n = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_4 $$ int n = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = stdIn.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = stdIn.nextInt()[ CD ]
Line_7 $$ h[i] = stdIn.nextInt()-->Line_7 $$ h[i] = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_7 $$ h[i] = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ if (n == 1) [ CD ]
Line_4 $$ int n = stdIn.nextInt()-->Line_9 $$ if (n == 1) [ FD ]
Line_9 $$ if (n == 1) -->Line_10 $$ System.out.println("Yes")[ CD ]
Line_9 $$ if (n == 1) -->Line_11 $$ System.exit(0)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_15 $$ if (max == h[i]) [ CD ]
Line_13 $$ int max = 0-->Line_15 $$ if (max == h[i]) [ FD ]
Line_15 $$ if (max == h[i]) -->Line_16 $$ if (h[i] > h[i + 1]) [ CD ]
Line_16 $$ if (h[i] > h[i + 1]) -->Line_17 $$ System.out.println("No")[ CD ]
Line_16 $$ if (h[i] > h[i + 1]) -->Line_18 $$ System.exit(0)[ CD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_21 $$ if (h[i] - 1 > h[i + 1]) [ CD ]
Line_21 $$ if (h[i] - 1 > h[i + 1]) -->Line_22 $$ System.out.println("No")[ CD ]
Line_21 $$ if (h[i] - 1 > h[i + 1]) -->Line_23 $$ System.exit(0)[ CD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_25 $$ h[i]--[ CD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_26 $$ max = Math.max(h[i], max)[ CD ]
Line_26 $$ max = Math.max(h[i], max)-->Line_26 $$ max = Math.max(h[i], max)[ FD ]
Line_13 $$ int max = 0-->Line_26 $$ max = Math.max(h[i], max)[ FD ]
Line_26 $$ max = Math.max(h[i], max)-->Line_26 $$ max = Math.max(h[i], max)[ CD ]
Line_26 $$ max = Math.max(h[i], max)-->Line_26 $$ max = Math.max(h[i], max)[ FD ]
Line_13 $$ int max = 0-->Line_26 $$ max = Math.max(h[i], max)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_28 $$ System.out.println("Yes")[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_26 $$ max = Math.max(h[i], max)-->Line_15 $$ if (max == h[i]) [ FD ]
Line_26 $$ max = Math.max(h[i], max)-->Line_26 $$ max = Math.max(h[i], max)[ FD ]
