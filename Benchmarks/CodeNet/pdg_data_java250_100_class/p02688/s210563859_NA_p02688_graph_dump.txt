Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String[] tmp = scanner.nextLine().split(" ")[ CD ]
Line_4 $$ String[] tmp = scanner.nextLine().split(" ")-->Line_4 $$ String[] tmp = scanner.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ String[] tmp = scanner.nextLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long n = Long.parseLong(tmp[0])[ CD ]
Line_5 $$ long n = Long.parseLong(tmp[0])-->Line_5 $$ long n = Long.parseLong(tmp[0])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ long k = Long.parseLong(tmp[1])[ CD ]
Line_6 $$ long k = Long.parseLong(tmp[1])-->Line_6 $$ long k = Long.parseLong(tmp[1])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Set<Integer> map = new HashSet()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int num = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < k; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ long k = Long.parseLong(tmp[1])-->Line_9 $$ for (int i = 0; i < k; i++) [ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ CD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ CD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_10 $$ int now = Integer.parseInt(scanner.nextLine())[ CD ]
Line_10 $$ int now = Integer.parseInt(scanner.nextLine())-->Line_10 $$ int now = Integer.parseInt(scanner.nextLine())[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_10 $$ int now = Integer.parseInt(scanner.nextLine())[ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_11 $$ String[] temp = scanner.nextLine().split(" ")[ CD ]
Line_11 $$ String[] temp = scanner.nextLine().split(" ")-->Line_11 $$ String[] temp = scanner.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_11 $$ String[] temp = scanner.nextLine().split(" ")[ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_12 $$ for (int j = 0; j < now; j++) [ CD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ CD ]
Line_10 $$ int now = Integer.parseInt(scanner.nextLine())-->Line_12 $$ for (int j = 0; j < now; j++) [ FD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_12 $$ for (int j = 0; j < now; j++) [ CD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_12 $$ for (int j = 0; j < now; j++) [ CD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_12 $$ for (int j = 0; j < now; j++) [ FD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_13 $$ num = Integer.parseInt(temp[j])[ CD ]
Line_13 $$ num = Integer.parseInt(temp[j])-->Line_13 $$ num = Integer.parseInt(temp[j])[ FD ]
Line_8 $$ int num = 0-->Line_13 $$ num = Integer.parseInt(temp[j])[ FD ]
Line_13 $$ num = Integer.parseInt(temp[j])-->Line_13 $$ num = Integer.parseInt(temp[j])[ CD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_14 $$ if (!map.contains(num))[ CD ]
Line_14 $$ if (!map.contains(num))-->Line_14 $$ if (!map.contains(num))[ CD ]
Line_14 $$ if (!map.contains(num))-->Line_14 $$ if (!map.contains(num))[ CD ]
Line_7 $$ Set<Integer> map = new HashSet()-->Line_14 $$ if (!map.contains(num))[ FD ]
Line_13 $$ num = Integer.parseInt(temp[j])-->Line_14 $$ if (!map.contains(num))[ FD ]
Line_8 $$ int num = 0-->Line_14 $$ if (!map.contains(num))[ FD ]
Line_14 $$ if (!map.contains(num))-->Line_14 $$ map.add(num)[ CD ]
Line_7 $$ Set<Integer> map = new HashSet()-->Line_14 $$ map.add(num)[ FD ]
Line_13 $$ num = Integer.parseInt(temp[j])-->Line_14 $$ map.add(num)[ FD ]
Line_8 $$ int num = 0-->Line_14 $$ map.add(num)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(n - map.size())[ CD ]
Line_7 $$ Set<Integer> map = new HashSet()-->Line_17 $$ System.out.println(n - map.size())[ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ FD ]
Line_9 $$ for (int i = 0; i < k; i++) -->Line_9 $$ for (int i = 0; i < k; i++) [ FD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_12 $$ for (int j = 0; j < now; j++) [ FD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_12 $$ for (int j = 0; j < now; j++) [ FD ]
Line_12 $$ for (int j = 0; j < now; j++) -->Line_12 $$ for (int j = 0; j < now; j++) [ FD ]
Line_13 $$ num = Integer.parseInt(temp[j])-->Line_14 $$ if (!map.contains(num))[ FD ]
Line_13 $$ num = Integer.parseInt(temp[j])-->Line_14 $$ map.add(num)[ FD ]
