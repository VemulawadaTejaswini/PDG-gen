Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_4 $$ String[] input = br.readLine().split(" ")-->Line_4 $$ String[] input = br.readLine().split(" ")[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_4 $$ String[] input = br.readLine().split(" ")[ FD ]
Line_5 $$ int N = Integer.parseInt(input[0])-->Line_5 $$ int N = Integer.parseInt(input[0])[ CD ]
Line_6 $$ int K = Integer.parseInt(input[1])-->Line_6 $$ int K = Integer.parseInt(input[1])[ CD ]
Line_6 $$ int K = Integer.parseInt(input[1])-->Line_9 $$ for (int i = 0; i < K; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ CD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ CD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_10 $$ d = Integer.parseInt(br.readLine())[ CD ]
Line_10 $$ d = Integer.parseInt(br.readLine())-->Line_10 $$ d = Integer.parseInt(br.readLine())[ FD ]
Line_8 $$ int d = 0-->Line_10 $$ d = Integer.parseInt(br.readLine())[ FD ]
Line_10 $$ d = Integer.parseInt(br.readLine())-->Line_10 $$ d = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_10 $$ d = Integer.parseInt(br.readLine())[ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_11 $$ String[] tmp = br.readLine().split(" ")[ CD ]
Line_11 $$ String[] tmp = br.readLine().split(" ")-->Line_11 $$ String[] tmp = br.readLine().split(" ")[ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_11 $$ String[] tmp = br.readLine().split(" ")[ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_12 $$ for (int j = 0; j < d; j++) [ CD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ CD ]
Line_10 $$ d = Integer.parseInt(br.readLine())-->Line_12 $$ for (int j = 0; j < d; j++) [ FD ]
Line_8 $$ int d = 0-->Line_12 $$ for (int j = 0; j < d; j++) [ FD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_12 $$ for (int j = 0; j < d; j++) [ CD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_12 $$ for (int j = 0; j < d; j++) [ CD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_12 $$ for (int j = 0; j < d; j++) [ FD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_13 $$ result[Integer.parseInt(tmp[j]) - 1] += 1[ CD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_19 $$ if (min > result[i]) [ CD ]
Line_16 $$ int min = 0-->Line_19 $$ if (min > result[i]) [ FD ]
Line_19 $$ if (min > result[i]) -->Line_20 $$ min = result[i][ CD ]
Line_20 $$ min = result[i]-->Line_20 $$ min = result[i][ FD ]
Line_16 $$ int min = 0-->Line_20 $$ min = result[i][ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_24 $$ if (min == result[i]) [ CD ]
Line_20 $$ min = result[i]-->Line_24 $$ if (min == result[i]) [ FD ]
Line_16 $$ int min = 0-->Line_24 $$ if (min == result[i]) [ FD ]
Line_24 $$ if (min == result[i]) -->Line_25 $$ count++[ CD ]
Line_17 $$ int count = 0-->Line_25 $$ count++[ FD ]
Line_17 $$ int count = 0-->Line_28 $$ System.out.println(count)[ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ FD ]
Line_9 $$ for (int i = 0; i < K; i++) -->Line_9 $$ for (int i = 0; i < K; i++) [ FD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_12 $$ for (int j = 0; j < d; j++) [ FD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_12 $$ for (int j = 0; j < d; j++) [ FD ]
Line_12 $$ for (int j = 0; j < d; j++) -->Line_12 $$ for (int j = 0; j < d; j++) [ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_18 $$ for (int i = 0; i < result.length; i++) -->Line_18 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_20 $$ min = result[i]-->Line_19 $$ if (min > result[i]) [ FD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < result.length; i++) -->Line_23 $$ for (int i = 0; i < result.length; i++) [ FD ]
