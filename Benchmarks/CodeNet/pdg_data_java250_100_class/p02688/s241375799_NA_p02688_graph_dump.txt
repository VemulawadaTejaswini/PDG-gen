Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ PrintWriter pw = new PrintWriter(System.out)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ int N = Integer.parseInt(st.nextToken())-->Line_6 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_6 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int K = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int K = Integer.parseInt(st.nextToken())-->Line_7 $$ int K = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_7 $$ int K = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ Set<Integer> notTargetSet = new HashSet()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int result = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < K; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_7 $$ int K = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < K; i++) [ FD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_10 $$ for (int i = 0; i < K; i++) [ CD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_10 $$ for (int i = 0; i < K; i++) [ CD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_10 $$ for (int i = 0; i < K; i++) [ FD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_11 $$ String d = br.readLine()[ CD ]
Line_11 $$ String d = br.readLine()-->Line_11 $$ String d = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_11 $$ String d = br.readLine()[ FD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_12 $$ String[] d_array = br.readLine().split(" ")[ CD ]
Line_12 $$ String[] d_array = br.readLine().split(" ")-->Line_12 $$ String[] d_array = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_12 $$ String[] d_array = br.readLine().split(" ")[ FD ]
Line_8 $$ Set<Integer> notTargetSet = new HashSet()-->Line_14 $$ notTargetSet.add(Integer.parseInt(str))[ FD ]
Line_13 $$ for (String str : d_array) -->Line_14 $$ notTargetSet.add(Integer.parseInt(str))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_17 $$ for (int j = 1; j <= N; j++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ int N = Integer.parseInt(st.nextToken())-->Line_17 $$ for (int j = 1; j <= N; j++) [ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_17 $$ for (int j = 1; j <= N; j++) [ CD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_17 $$ for (int j = 1; j <= N; j++) [ CD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_17 $$ for (int j = 1; j <= N; j++) [ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_18 $$ if (!notTargetSet.contains(j))[ CD ]
Line_18 $$ if (!notTargetSet.contains(j))-->Line_18 $$ if (!notTargetSet.contains(j))[ CD ]
Line_18 $$ if (!notTargetSet.contains(j))-->Line_18 $$ if (!notTargetSet.contains(j))[ CD ]
Line_8 $$ Set<Integer> notTargetSet = new HashSet()-->Line_18 $$ if (!notTargetSet.contains(j))[ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_18 $$ if (!notTargetSet.contains(j))[ FD ]
Line_18 $$ if (!notTargetSet.contains(j))-->Line_18 $$ result++[ CD ]
Line_9 $$ int result = 0-->Line_18 $$ result++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ pw.print(result)[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_20 $$ pw.print(result)[ FD ]
Line_9 $$ int result = 0-->Line_20 $$ pw.print(result)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_21 $$ br.close()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_21 $$ br.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_22 $$ pw.close()[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_22 $$ pw.close()[ FD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_10 $$ for (int i = 0; i < K; i++) [ FD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_10 $$ for (int i = 0; i < K; i++) [ FD ]
Line_10 $$ for (int i = 0; i < K; i++) -->Line_10 $$ for (int i = 0; i < K; i++) [ FD ]
Line_13 $$ for (String str : d_array) -->Line_14 $$ notTargetSet.add(Integer.parseInt(str))[ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_17 $$ for (int j = 1; j <= N; j++) [ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_17 $$ for (int j = 1; j <= N; j++) [ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_17 $$ for (int j = 1; j <= N; j++) [ FD ]
Line_17 $$ for (int j = 1; j <= N; j++) -->Line_18 $$ if (!notTargetSet.contains(j))[ FD ]
