Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ static Scanner sc = new Scanner(System.in);[ CD ]
Line_1 $$ class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_5 $$ int K = sc.nextInt()-->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_6 $$ int[] d = new int[K][ CD ]
Line_3 $$ public static void main(String[] args) -->Line_7 $$ int[] h = new int[N][ CD ]
Line_3 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < K; i++) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int K = sc.nextInt()-->Line_8 $$ for (int i = 0; i < K; i++) [ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ CD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ CD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_9 $$ d[i] = sc.nextInt()[ CD ]
Line_9 $$ d[i] = sc.nextInt()-->Line_9 $$ d[i] = sc.nextInt()[ CD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_10 $$ int[] A = new int[d[i]][ CD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ CD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ CD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ CD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ CD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ FD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_12 $$ A[j] = sc.nextInt()[ CD ]
Line_12 $$ A[j] = sc.nextInt()-->Line_12 $$ A[j] = sc.nextInt()[ CD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_13 $$ h[A[j] - 1]++[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_16 $$ int count = 0[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_17 $$ for (int i = 0; i < N; i++) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ CD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ CD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_18 $$ if (h[i] == 0) [ CD ]
Line_18 $$ if (h[i] == 0) -->Line_19 $$ count++[ CD ]
Line_16 $$ int count = 0-->Line_19 $$ count++[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_22 $$ System.out.println(count)[ CD ]
Line_16 $$ int count = 0-->Line_22 $$ System.out.println(count)[ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ FD ]
Line_8 $$ for (int i = 0; i < K; i++) -->Line_8 $$ for (int i = 0; i < K; i++) [ FD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ FD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ FD ]
Line_11 $$ for (int j = 0; j < d[i]; j++) -->Line_11 $$ for (int j = 0; j < d[i]; j++) [ FD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
Line_17 $$ for (int i = 0; i < N; i++) -->Line_17 $$ for (int i = 0; i < N; i++) [ FD ]
