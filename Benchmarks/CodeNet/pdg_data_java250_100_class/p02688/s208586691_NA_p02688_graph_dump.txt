Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ String newLine[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ int ppl, snackKind, havingSnackTotal, treated[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ boolean hasSnack[][ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ ppl = scan.nextInt()[ CD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_7 $$ ppl = scan.nextInt()[ FD ]
Line_7 $$ ppl = scan.nextInt()-->Line_7 $$ ppl = scan.nextInt()[ FD ]
Line_7 $$ ppl = scan.nextInt()-->Line_7 $$ ppl = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ ppl = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ snackKind = scan.nextInt()[ CD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_8 $$ snackKind = scan.nextInt()[ FD ]
Line_8 $$ snackKind = scan.nextInt()-->Line_8 $$ snackKind = scan.nextInt()[ FD ]
Line_8 $$ snackKind = scan.nextInt()-->Line_8 $$ snackKind = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ snackKind = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_9 $$ newLine = scan.nextLine()[ CD ]
Line_4 $$ String newLine-->Line_9 $$ newLine = scan.nextLine()[ FD ]
Line_9 $$ newLine = scan.nextLine()-->Line_9 $$ newLine = scan.nextLine()[ FD ]
Line_9 $$ newLine = scan.nextLine()-->Line_9 $$ newLine = scan.nextLine()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_9 $$ newLine = scan.nextLine()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_12 $$ hasSnack[i] = false[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_14 $$ for (int k = 0; k < snackKind; k++) [ FD ]
Line_8 $$ snackKind = scan.nextInt()-->Line_14 $$ for (int k = 0; k < snackKind; k++) [ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ CD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ CD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_15 $$ havingSnackTotal = scan.nextInt()[ CD ]
Line_15 $$ havingSnackTotal = scan.nextInt()-->Line_15 $$ havingSnackTotal = scan.nextInt()[ FD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_15 $$ havingSnackTotal = scan.nextInt()[ FD ]
Line_15 $$ havingSnackTotal = scan.nextInt()-->Line_15 $$ havingSnackTotal = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_15 $$ havingSnackTotal = scan.nextInt()[ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_16 $$ newLine = scan.nextLine()[ CD ]
Line_16 $$ newLine = scan.nextLine()-->Line_16 $$ newLine = scan.nextLine()[ FD ]
Line_4 $$ String newLine-->Line_16 $$ newLine = scan.nextLine()[ FD ]
Line_9 $$ newLine = scan.nextLine()-->Line_16 $$ newLine = scan.nextLine()[ FD ]
Line_16 $$ newLine = scan.nextLine()-->Line_16 $$ newLine = scan.nextLine()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_16 $$ newLine = scan.nextLine()[ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ CD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ CD ]
Line_15 $$ havingSnackTotal = scan.nextInt()-->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ FD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ FD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ CD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ CD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ FD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_18 $$ hasSnack[scan.nextInt() - 1] = true[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_18 $$ hasSnack[scan.nextInt() - 1] = true[ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_20 $$ newLine = scan.nextLine()[ CD ]
Line_16 $$ newLine = scan.nextLine()-->Line_20 $$ newLine = scan.nextLine()[ FD ]
Line_20 $$ newLine = scan.nextLine()-->Line_20 $$ newLine = scan.nextLine()[ FD ]
Line_4 $$ String newLine-->Line_20 $$ newLine = scan.nextLine()[ FD ]
Line_9 $$ newLine = scan.nextLine()-->Line_20 $$ newLine = scan.nextLine()[ FD ]
Line_20 $$ newLine = scan.nextLine()-->Line_20 $$ newLine = scan.nextLine()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_20 $$ newLine = scan.nextLine()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_22 $$ treated = 0[ CD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_22 $$ treated = 0[ FD ]
Line_22 $$ treated = 0-->Line_22 $$ treated = 0[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_24 $$ if (!hasSnack[i]) [ CD ]
Line_24 $$ if (!hasSnack[i]) -->Line_24 $$ if (!hasSnack[i]) [ CD ]
Line_24 $$ if (!hasSnack[i]) -->Line_25 $$ treated++[ CD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_25 $$ treated++[ FD ]
Line_22 $$ treated = 0-->Line_25 $$ treated++[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_28 $$ System.out.println(treated)[ CD ]
Line_5 $$ int ppl, snackKind, havingSnackTotal, treated-->Line_28 $$ System.out.println(treated)[ FD ]
Line_22 $$ treated = 0-->Line_28 $$ System.out.println(treated)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_29 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_29 $$ scan.close()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_30 $$ return[ CD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_11 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ FD ]
Line_14 $$ for (int k = 0; k < snackKind; k++) -->Line_14 $$ for (int k = 0; k < snackKind; k++) [ FD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ FD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ FD ]
Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) -->Line_17 $$ for (int p = 0; p < havingSnackTotal; p++) [ FD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
Line_23 $$ for (int i = 0; i < hasSnack.length; i++) -->Line_23 $$ for (int i = 0; i < hasSnack.length; i++) [ FD ]
