Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) throws IOException [ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1)[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String s = r.readLine()[ CD ]
Line_6 $$ String s = r.readLine()-->Line_6 $$ String s = r.readLine()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1)-->Line_6 $$ String s = r.readLine()[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_7 $$ String[] sl = s.split(" ")[ CD ]
Line_7 $$ String[] sl = s.split(" ")-->Line_7 $$ String[] sl = s.split(" ")[ CD ]
Line_6 $$ String s = r.readLine()-->Line_7 $$ String[] sl = s.split(" ")[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int n = Integer.parseInt(sl[0])[ CD ]
Line_8 $$ int n = Integer.parseInt(sl[0])-->Line_8 $$ int n = Integer.parseInt(sl[0])[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_9 $$ s = r.readLine()[ CD ]
Line_6 $$ String s = r.readLine()-->Line_9 $$ s = r.readLine()[ FD ]
Line_9 $$ s = r.readLine()-->Line_9 $$ s = r.readLine()[ FD ]
Line_9 $$ s = r.readLine()-->Line_9 $$ s = r.readLine()[ CD ]
Line_5 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in), 1)-->Line_9 $$ s = r.readLine()[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_10 $$ sl = s.split(" ")[ CD ]
Line_7 $$ String[] sl = s.split(" ")-->Line_10 $$ sl = s.split(" ")[ FD ]
Line_10 $$ sl = s.split(" ")-->Line_10 $$ sl = s.split(" ")[ FD ]
Line_10 $$ sl = s.split(" ")-->Line_10 $$ sl = s.split(" ")[ CD ]
Line_6 $$ String s = r.readLine()-->Line_10 $$ sl = s.split(" ")[ FD ]
Line_9 $$ s = r.readLine()-->Line_10 $$ sl = s.split(" ")[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_11 $$ int max = 0[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_12 $$ int sum = 0[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_3 $$ public static void main(String[] args) throws IOException [ CD ]
Line_8 $$ int n = Integer.parseInt(sl[0])-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_15 $$ int z = Integer.parseInt(sl[i])[ CD ]
Line_15 $$ int z = Integer.parseInt(sl[i])-->Line_15 $$ int z = Integer.parseInt(sl[i])[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_16 $$ max = Math.max(z, max)[ CD ]
Line_16 $$ max = Math.max(z, max)-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_11 $$ int max = 0-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_16 $$ max = Math.max(z, max)-->Line_16 $$ max = Math.max(z, max)[ CD ]
Line_15 $$ int z = Integer.parseInt(sl[i])-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_16 $$ max = Math.max(z, max)-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_11 $$ int max = 0-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_17 $$ sum += z[ CD ]
Line_17 $$ sum += z-->Line_17 $$ sum += z[ FD ]
Line_12 $$ int sum = 0-->Line_17 $$ sum += z[ FD ]
Line_15 $$ int z = Integer.parseInt(sl[i])-->Line_17 $$ sum += z[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_19 $$ System.out.println(max < (sum - max) ? "Yes" : "No")[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ int z = Integer.parseInt(sl[i])-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_16 $$ max = Math.max(z, max)-->Line_16 $$ max = Math.max(z, max)[ FD ]
Line_15 $$ int z = Integer.parseInt(sl[i])-->Line_17 $$ sum += z[ FD ]
