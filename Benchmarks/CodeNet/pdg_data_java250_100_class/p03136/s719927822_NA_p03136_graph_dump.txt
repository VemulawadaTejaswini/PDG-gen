Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int corner = scanner.nextInt()[ CD ]
Line_4 $$ int corner = scanner.nextInt()-->Line_4 $$ int corner = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int corner = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int totalLength = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int maxSideLength = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int corner = scanner.nextInt()-->Line_7 $$ for (int i = 0; i < corner; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ CD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ CD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_8 $$ int temp = scanner.nextInt()[ CD ]
Line_8 $$ int temp = scanner.nextInt()-->Line_8 $$ int temp = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_8 $$ int temp = scanner.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ CD ]
Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_6 $$ int maxSideLength = 0-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ CD ]
Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_6 $$ int maxSideLength = 0-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_8 $$ int temp = scanner.nextInt()-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_10 $$ totalLength += temp[ CD ]
Line_10 $$ totalLength += temp-->Line_10 $$ totalLength += temp[ FD ]
Line_5 $$ int totalLength = 0-->Line_10 $$ totalLength += temp[ FD ]
Line_8 $$ int temp = scanner.nextInt()-->Line_10 $$ totalLength += temp[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ totalLength -= maxSideLength[ CD ]
Line_10 $$ totalLength += temp-->Line_12 $$ totalLength -= maxSideLength[ FD ]
Line_5 $$ int totalLength = 0-->Line_12 $$ totalLength -= maxSideLength[ FD ]
Line_12 $$ totalLength -= maxSideLength-->Line_12 $$ totalLength -= maxSideLength[ FD ]
Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)-->Line_12 $$ totalLength -= maxSideLength[ FD ]
Line_6 $$ int maxSideLength = 0-->Line_12 $$ totalLength -= maxSideLength[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ String result = (maxSideLength < totalLength) ? "Yes" : "No"[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ System.out.println(result)[ CD ]
Line_13 $$ String result = (maxSideLength < totalLength) ? "Yes" : "No"-->Line_14 $$ System.out.println(result)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ scanner.close()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_15 $$ scanner.close()[ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < corner; ++i) -->Line_7 $$ for (int i = 0; i < corner; ++i) [ FD ]
Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_8 $$ int temp = scanner.nextInt()-->Line_9 $$ maxSideLength = Math.max(maxSideLength, temp)[ FD ]
Line_8 $$ int temp = scanner.nextInt()-->Line_10 $$ totalLength += temp[ FD ]
