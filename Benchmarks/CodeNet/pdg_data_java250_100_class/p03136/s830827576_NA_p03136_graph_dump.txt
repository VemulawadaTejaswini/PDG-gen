Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] L = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int max = -1[ CD ]
Line_6 $$ int max = -1-->Line_6 $$ int max = -1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int maxI = -1[ CD ]
Line_7 $$ int maxI = -1-->Line_7 $$ int maxI = -1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ L[i] = sc.nextInt()[ CD ]
Line_9 $$ L[i] = sc.nextInt()-->Line_9 $$ L[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ L[i] = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_10 $$ if (max < L[i]) [ CD ]
Line_6 $$ int max = -1-->Line_10 $$ if (max < L[i]) [ FD ]
Line_10 $$ if (max < L[i]) -->Line_11 $$ max = L[i][ CD ]
Line_11 $$ max = L[i]-->Line_11 $$ max = L[i][ FD ]
Line_6 $$ int max = -1-->Line_11 $$ max = L[i][ FD ]
Line_10 $$ if (max < L[i]) -->Line_12 $$ maxI = i[ CD ]
Line_12 $$ maxI = i-->Line_12 $$ maxI = i[ FD ]
Line_7 $$ int maxI = -1-->Line_12 $$ maxI = i[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_12 $$ maxI = i[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ int sumExcludedMax = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ CD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ CD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_17 $$ if (i == maxI)[ CD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_17 $$ if (i == maxI)[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_17 $$ if (i == maxI)[ FD ]
Line_12 $$ maxI = i-->Line_17 $$ if (i == maxI)[ FD ]
Line_7 $$ int maxI = -1-->Line_17 $$ if (i == maxI)[ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_18 $$ sumExcludedMax += L[i][ CD ]
Line_18 $$ sumExcludedMax += L[i]-->Line_18 $$ sumExcludedMax += L[i][ FD ]
Line_15 $$ int sumExcludedMax = 0-->Line_18 $$ sumExcludedMax += L[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ if (max < sumExcludedMax) [ CD ]
Line_11 $$ max = L[i]-->Line_20 $$ if (max < sumExcludedMax) [ FD ]
Line_6 $$ int max = -1-->Line_20 $$ if (max < sumExcludedMax) [ FD ]
Line_18 $$ sumExcludedMax += L[i]-->Line_20 $$ if (max < sumExcludedMax) [ FD ]
Line_15 $$ int sumExcludedMax = 0-->Line_20 $$ if (max < sumExcludedMax) [ FD ]
Line_20 $$ if (max < sumExcludedMax) -->Line_21 $$ System.out.println("Yes")[ CD ]
Line_20 $$ if (max < sumExcludedMax) -->Line_23 $$ System.out.println("No")[ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ max = L[i]-->Line_10 $$ if (max < L[i]) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_12 $$ maxI = i[ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_16 $$ for (int i = 0; i < N; i++) [ FD ]
Line_16 $$ for (int i = 0; i < N; i++) -->Line_17 $$ if (i == maxI)[ FD ]
