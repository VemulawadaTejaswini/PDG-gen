Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ List<Integer> L = new ArrayList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ L.add(sc.nextInt())[ CD ]
Line_5 $$ List<Integer> L = new ArrayList()-->Line_7 $$ L.add(sc.nextInt())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ L.add(sc.nextInt())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ Collections.sort(L, Comparator.reverseOrder())[ CD ]
Line_5 $$ List<Integer> L = new ArrayList()-->Line_9 $$ Collections.sort(L, Comparator.reverseOrder())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int index = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int max = L.get(0)[ CD ]
Line_11 $$ int max = L.get(0)-->Line_11 $$ int max = L.get(0)[ CD ]
Line_5 $$ List<Integer> L = new ArrayList()-->Line_11 $$ int max = L.get(0)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int total = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_5 $$ List<Integer> L = new ArrayList()-->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ CD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ CD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_14 $$ total += L.get(i)[ CD ]
Line_14 $$ total += L.get(i)-->Line_14 $$ total += L.get(i)[ FD ]
Line_12 $$ int total = 0-->Line_14 $$ total += L.get(i)[ FD ]
Line_14 $$ total += L.get(i)-->Line_14 $$ total += L.get(i)[ CD ]
Line_5 $$ List<Integer> L = new ArrayList()-->Line_14 $$ total += L.get(i)[ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_14 $$ total += L.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_14 $$ total += L.get(i)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ if (max < total) [ CD ]
Line_11 $$ int max = L.get(0)-->Line_16 $$ if (max < total) [ FD ]
Line_14 $$ total += L.get(i)-->Line_16 $$ if (max < total) [ FD ]
Line_12 $$ int total = 0-->Line_16 $$ if (max < total) [ FD ]
Line_16 $$ if (max < total) -->Line_17 $$ System.out.println("Yes")[ CD ]
Line_16 $$ if (max < total) -->Line_19 $$ System.out.println("No")[ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_13 $$ for (int i = 1; i < L.size(); i++) [ FD ]
Line_13 $$ for (int i = 1; i < L.size(); i++) -->Line_14 $$ total += L.get(i)[ FD ]
