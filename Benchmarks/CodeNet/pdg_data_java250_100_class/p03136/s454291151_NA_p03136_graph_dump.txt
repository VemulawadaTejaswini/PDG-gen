Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_4 $$ int N = in.nextInt()-->Line_4 $$ int N = in.nextInt()[ CD ]
Line_3 $$ try (Scanner in = new Scanner(System.in)) -->Line_4 $$ int N = in.nextInt()[ FD ]
Line_4 $$ int N = in.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ L[i] = in.nextInt()[ CD ]
Line_7 $$ L[i] = in.nextInt()-->Line_7 $$ L[i] = in.nextInt()[ CD ]
Line_3 $$ try (Scanner in = new Scanner(System.in)) -->Line_7 $$ L[i] = in.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = in.nextInt()-->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_12 $$ sum += L[i][ CD ]
Line_12 $$ sum += L[i]-->Line_12 $$ sum += L[i][ FD ]
Line_9 $$ int sum = 0-->Line_12 $$ sum += L[i][ FD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_13 $$ max = Math.max(max, L[i])[ CD ]
Line_13 $$ max = Math.max(max, L[i])-->Line_13 $$ max = Math.max(max, L[i])[ FD ]
Line_10 $$ int max = 0-->Line_13 $$ max = Math.max(max, L[i])[ FD ]
Line_13 $$ max = Math.max(max, L[i])-->Line_13 $$ max = Math.max(max, L[i])[ CD ]
Line_13 $$ max = Math.max(max, L[i])-->Line_13 $$ max = Math.max(max, L[i])[ FD ]
Line_10 $$ int max = 0-->Line_13 $$ max = Math.max(max, L[i])[ FD ]
Line_12 $$ sum += L[i]-->Line_15 $$ sum -= max[ FD ]
Line_9 $$ int sum = 0-->Line_15 $$ sum -= max[ FD ]
Line_15 $$ sum -= max-->Line_15 $$ sum -= max[ FD ]
Line_13 $$ max = Math.max(max, L[i])-->Line_15 $$ sum -= max[ FD ]
Line_10 $$ int max = 0-->Line_15 $$ sum -= max[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ max = Math.max(max, L[i])-->Line_13 $$ max = Math.max(max, L[i])[ FD ]
