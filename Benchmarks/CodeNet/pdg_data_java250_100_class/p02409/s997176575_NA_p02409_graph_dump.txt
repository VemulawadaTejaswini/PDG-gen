Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] arg) throws IOException [ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_4 $$ int p, b, f, r, v[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_5 $$ int room[][] = new int[13][11][ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_6 $$ String str = br.readLine()[ CD ]
Line_6 $$ String str = br.readLine()-->Line_6 $$ String str = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String str = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_7 $$ if (str.equals(""))[ CD ]
Line_6 $$ String str = br.readLine()-->Line_7 $$ if (str.equals(""))[ FD ]
Line_7 $$ if (str.equals(""))-->Line_7 $$ if (str.equals(""))[ CD ]
Line_6 $$ String str = br.readLine()-->Line_7 $$ if (str.equals(""))[ FD ]
Line_7 $$ if (str.equals(""))-->Line_7 $$ System.exit(0)[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_8 $$ int n = Integer.parseInt(str)[ CD ]
Line_8 $$ int n = Integer.parseInt(str)-->Line_8 $$ int n = Integer.parseInt(str)[ CD ]
Line_6 $$ String str = br.readLine()-->Line_8 $$ int n = Integer.parseInt(str)[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_9 $$ String[] strArray[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_10 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_2 $$ public static void main(String[] arg) throws IOException [ CD ]
Line_8 $$ int n = Integer.parseInt(str)-->Line_10 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_11 $$ str = br.readLine()[ CD ]
Line_11 $$ str = br.readLine()-->Line_11 $$ str = br.readLine()[ FD ]
Line_6 $$ String str = br.readLine()-->Line_11 $$ str = br.readLine()[ FD ]
Line_11 $$ str = br.readLine()-->Line_11 $$ str = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ str = br.readLine()[ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_12 $$ strArray = str.split(" ")[ CD ]
Line_12 $$ strArray = str.split(" ")-->Line_12 $$ strArray = str.split(" ")[ FD ]
Line_9 $$ String[] strArray-->Line_12 $$ strArray = str.split(" ")[ FD ]
Line_12 $$ strArray = str.split(" ")-->Line_12 $$ strArray = str.split(" ")[ CD ]
Line_11 $$ str = br.readLine()-->Line_12 $$ strArray = str.split(" ")[ FD ]
Line_6 $$ String str = br.readLine()-->Line_12 $$ strArray = str.split(" ")[ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ b = Integer.parseInt(strArray[0])[ CD ]
Line_13 $$ b = Integer.parseInt(strArray[0])-->Line_13 $$ b = Integer.parseInt(strArray[0])[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_13 $$ b = Integer.parseInt(strArray[0])[ FD ]
Line_13 $$ b = Integer.parseInt(strArray[0])-->Line_13 $$ b = Integer.parseInt(strArray[0])[ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_14 $$ f = Integer.parseInt(strArray[1])[ CD ]
Line_14 $$ f = Integer.parseInt(strArray[1])-->Line_14 $$ f = Integer.parseInt(strArray[1])[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_14 $$ f = Integer.parseInt(strArray[1])[ FD ]
Line_14 $$ f = Integer.parseInt(strArray[1])-->Line_14 $$ f = Integer.parseInt(strArray[1])[ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ r = Integer.parseInt(strArray[2])[ CD ]
Line_15 $$ r = Integer.parseInt(strArray[2])-->Line_15 $$ r = Integer.parseInt(strArray[2])[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_15 $$ r = Integer.parseInt(strArray[2])[ FD ]
Line_15 $$ r = Integer.parseInt(strArray[2])-->Line_15 $$ r = Integer.parseInt(strArray[2])[ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_16 $$ v = Integer.parseInt(strArray[3])[ CD ]
Line_16 $$ v = Integer.parseInt(strArray[3])-->Line_16 $$ v = Integer.parseInt(strArray[3])[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_16 $$ v = Integer.parseInt(strArray[3])[ FD ]
Line_16 $$ v = Integer.parseInt(strArray[3])-->Line_16 $$ v = Integer.parseInt(strArray[3])[ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_17 $$ room[(b - 1) * 3 + f][r] += v[ CD ]
Line_16 $$ v = Integer.parseInt(strArray[3])-->Line_17 $$ room[(b - 1) * 3 + f][r] += v[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_17 $$ room[(b - 1) * 3 + f][r] += v[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_19 $$ StringBuilder output = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_20 $$ boolean div = false[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_21 $$ for (int i = 1; i <= 12; i++) [ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_2 $$ public static void main(String[] arg) throws IOException [ CD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ CD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ CD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_22 $$ p = 1[ CD ]
Line_22 $$ p = 1-->Line_22 $$ p = 1[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_22 $$ p = 1[ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_23 $$ while (p <= 10) [ CD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ CD ]
Line_22 $$ p = 1-->Line_23 $$ while (p <= 10) [ FD ]
Line_4 $$ int p, b, f, r, v-->Line_23 $$ while (p <= 10) [ FD ]
Line_23 $$ while (p <= 10) -->Line_24 $$ output.append(" " + room[i][p])[ CD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_24 $$ output.append(" " + room[i][p])[ FD ]
Line_23 $$ while (p <= 10) -->Line_25 $$ p++[ CD ]
Line_22 $$ p = 1-->Line_25 $$ p++[ FD ]
Line_4 $$ int p, b, f, r, v-->Line_25 $$ p++[ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_27 $$ output.append("\n")[ CD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_27 $$ output.append("\n")[ FD ]
Line_30 $$ div = true-->Line_30 $$ div = true[ FD ]
Line_20 $$ boolean div = false-->Line_30 $$ div = true[ FD ]
Line_30 $$ div = true-->Line_33 $$ div = true[ FD ]
Line_33 $$ div = true-->Line_33 $$ div = true[ FD ]
Line_20 $$ boolean div = false-->Line_33 $$ div = true[ FD ]
Line_30 $$ div = true-->Line_36 $$ div = true[ FD ]
Line_33 $$ div = true-->Line_36 $$ div = true[ FD ]
Line_36 $$ div = true-->Line_36 $$ div = true[ FD ]
Line_20 $$ boolean div = false-->Line_36 $$ div = true[ FD ]
Line_30 $$ div = true-->Line_38 $$ div = false[ FD ]
Line_33 $$ div = true-->Line_38 $$ div = false[ FD ]
Line_36 $$ div = true-->Line_38 $$ div = false[ FD ]
Line_38 $$ div = false-->Line_38 $$ div = false[ FD ]
Line_20 $$ boolean div = false-->Line_38 $$ div = false[ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_41 $$ if (div == true) [ CD ]
Line_30 $$ div = true-->Line_41 $$ if (div == true) [ FD ]
Line_33 $$ div = true-->Line_41 $$ if (div == true) [ FD ]
Line_36 $$ div = true-->Line_41 $$ if (div == true) [ FD ]
Line_38 $$ div = false-->Line_41 $$ if (div == true) [ FD ]
Line_20 $$ boolean div = false-->Line_41 $$ if (div == true) [ FD ]
Line_41 $$ if (div == true) -->Line_42 $$ output.append("####################\n")[ CD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_42 $$ output.append("####################\n")[ FD ]
Line_41 $$ if (div == true) -->Line_43 $$ div = false[ CD ]
Line_30 $$ div = true-->Line_43 $$ div = false[ FD ]
Line_33 $$ div = true-->Line_43 $$ div = false[ FD ]
Line_36 $$ div = true-->Line_43 $$ div = false[ FD ]
Line_38 $$ div = false-->Line_43 $$ div = false[ FD ]
Line_43 $$ div = false-->Line_43 $$ div = false[ FD ]
Line_20 $$ boolean div = false-->Line_43 $$ div = false[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_45 $$ output.delete(output.length() - 1, output.length())[ CD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_45 $$ output.delete(output.length() - 1, output.length())[ FD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_45 $$ output.delete(output.length() - 1, output.length())[ FD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_45 $$ output.delete(output.length() - 1, output.length())[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_46 $$ System.out.println(output)[ CD ]
Line_19 $$ StringBuilder output = new StringBuilder()-->Line_46 $$ System.out.println(output)[ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_11 $$ str = br.readLine()-->Line_12 $$ strArray = str.split(" ")[ FD ]
Line_16 $$ v = Integer.parseInt(strArray[3])-->Line_17 $$ room[(b - 1) * 3 + f][r] += v[ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ FD ]
Line_21 $$ for (int i = 1; i <= 12; i++) -->Line_21 $$ for (int i = 1; i <= 12; i++) [ FD ]
Line_30 $$ div = true-->Line_41 $$ if (div == true) [ FD ]
Line_33 $$ div = true-->Line_41 $$ if (div == true) [ FD ]
Line_36 $$ div = true-->Line_41 $$ if (div == true) [ FD ]
Line_38 $$ div = false-->Line_41 $$ if (div == true) [ FD ]
Line_43 $$ div = false-->Line_41 $$ if (div == true) [ FD ]
