Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ InputStreamReader isr = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_6 $$ String input = br.readLine()-->Line_6 $$ String input = br.readLine()[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_6 $$ String input = br.readLine()[ FD ]
Line_7 $$ int num = Integer.parseInt(input)-->Line_7 $$ int num = Integer.parseInt(input)[ CD ]
Line_6 $$ String input = br.readLine()-->Line_7 $$ int num = Integer.parseInt(input)[ FD ]
Line_8 $$ int i, b, r, f, v-->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_7 $$ int num = Integer.parseInt(input)-->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ CD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_8 $$ int i, b, r, f, v-->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ CD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_8 $$ int i, b, r, f, v-->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_11 $$ String[] list = br.readLine().split(" ")[ CD ]
Line_11 $$ String[] list = br.readLine().split(" ")-->Line_11 $$ String[] list = br.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_11 $$ String[] list = br.readLine().split(" ")[ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_12 $$ b = Integer.parseInt(list[0]) - 1[ CD ]
Line_12 $$ b = Integer.parseInt(list[0]) - 1-->Line_12 $$ b = Integer.parseInt(list[0]) - 1[ FD ]
Line_8 $$ int i, b, r, f, v-->Line_12 $$ b = Integer.parseInt(list[0]) - 1[ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_13 $$ r = Integer.parseInt(list[1]) - 1[ CD ]
Line_13 $$ r = Integer.parseInt(list[1]) - 1-->Line_13 $$ r = Integer.parseInt(list[1]) - 1[ FD ]
Line_8 $$ int i, b, r, f, v-->Line_13 $$ r = Integer.parseInt(list[1]) - 1[ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_14 $$ f = Integer.parseInt(list[2]) - 1[ CD ]
Line_14 $$ f = Integer.parseInt(list[2]) - 1-->Line_14 $$ f = Integer.parseInt(list[2]) - 1[ FD ]
Line_8 $$ int i, b, r, f, v-->Line_14 $$ f = Integer.parseInt(list[2]) - 1[ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_15 $$ v = Integer.parseInt(list[3])[ CD ]
Line_15 $$ v = Integer.parseInt(list[3])-->Line_15 $$ v = Integer.parseInt(list[3])[ FD ]
Line_8 $$ int i, b, r, f, v-->Line_15 $$ v = Integer.parseInt(list[3])[ FD ]
Line_15 $$ v = Integer.parseInt(list[3])-->Line_15 $$ v = Integer.parseInt(list[3])[ CD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_16 $$ int temp = hoge[b][r][f] + v[ CD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_17 $$ if (temp > 9) [ CD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_17 $$ if (temp > 9) [ FD ]
Line_17 $$ if (temp > 9) -->Line_18 $$ temp = 9[ CD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_18 $$ temp = 9[ FD ]
Line_18 $$ temp = 9-->Line_18 $$ temp = 9[ FD ]
Line_17 $$ if (temp > 9) -->Line_19 $$ if (temp < 0) [ CD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_19 $$ if (temp < 0) [ FD ]
Line_18 $$ temp = 9-->Line_19 $$ if (temp < 0) [ FD ]
Line_19 $$ if (temp < 0) -->Line_20 $$ temp = 0[ CD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_20 $$ temp = 0[ FD ]
Line_18 $$ temp = 9-->Line_20 $$ temp = 0[ FD ]
Line_20 $$ temp = 0-->Line_20 $$ temp = 0[ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_22 $$ hoge[b][r][f] = temp[ CD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_22 $$ hoge[b][r][f] = temp[ FD ]
Line_18 $$ temp = 9-->Line_22 $$ hoge[b][r][f] = temp[ FD ]
Line_20 $$ temp = 0-->Line_22 $$ hoge[b][r][f] = temp[ FD ]
Line_24 $$ int x, y, z-->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ CD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_24 $$ int x, y, z-->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ CD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_24 $$ int x, y, z-->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_26 $$ int[][] xlist = hoge[x][ CD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ CD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ CD ]
Line_24 $$ int x, y, z-->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ CD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_24 $$ int x, y, z-->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ CD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_24 $$ int x, y, z-->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_28 $$ int[] ylist = xlist[y][ CD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ CD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ CD ]
Line_24 $$ int x, y, z-->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ CD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_24 $$ int x, y, z-->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ CD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_24 $$ int x, y, z-->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_30 $$ System.out.print(" " + ylist[z])[ CD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_32 $$ if (y != ylist.length - 1) [ CD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_32 $$ if (y != ylist.length - 1) [ FD ]
Line_24 $$ int x, y, z-->Line_32 $$ if (y != ylist.length - 1) [ FD ]
Line_32 $$ if (y != ylist.length - 1) -->Line_33 $$ System.out.println()[ CD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_36 $$ if (x != hoge.length - 1) [ CD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_36 $$ if (x != hoge.length - 1) [ FD ]
Line_24 $$ int x, y, z-->Line_36 $$ if (x != hoge.length - 1) [ FD ]
Line_36 $$ if (x != hoge.length - 1) -->Line_37 $$ System.out.println("####################")[ CD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_10 $$ for (i = 0; i < num; i++) -->Line_10 $$ for (i = 0; i < num; i++) [ FD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_17 $$ if (temp > 9) [ FD ]
Line_18 $$ temp = 9-->Line_17 $$ if (temp > 9) [ FD ]
Line_20 $$ temp = 0-->Line_17 $$ if (temp > 9) [ FD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_19 $$ if (temp < 0) [ FD ]
Line_18 $$ temp = 9-->Line_19 $$ if (temp < 0) [ FD ]
Line_20 $$ temp = 0-->Line_19 $$ if (temp < 0) [ FD ]
Line_16 $$ int temp = hoge[b][r][f] + v-->Line_22 $$ hoge[b][r][f] = temp[ FD ]
Line_18 $$ temp = 9-->Line_22 $$ hoge[b][r][f] = temp[ FD ]
Line_20 $$ temp = 0-->Line_22 $$ hoge[b][r][f] = temp[ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_25 $$ for (x = 0; x < hoge.length; x++) [ FD ]
Line_25 $$ for (x = 0; x < hoge.length; x++) -->Line_36 $$ if (x != hoge.length - 1) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_27 $$ for (y = 0; y < xlist.length; y++) [ FD ]
Line_27 $$ for (y = 0; y < xlist.length; y++) -->Line_32 $$ if (y != ylist.length - 1) [ FD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
Line_29 $$ for (z = 0; z < ylist.length; z++) -->Line_29 $$ for (z = 0; z < ylist.length; z++) [ FD ]
