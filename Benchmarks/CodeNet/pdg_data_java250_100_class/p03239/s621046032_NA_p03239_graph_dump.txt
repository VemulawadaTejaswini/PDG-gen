Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String[] str = in.readLine().split(" ")[ CD ]
Line_4 $$ String[] str = in.readLine().split(" ")-->Line_4 $$ String[] str = in.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] str = in.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int n = Integer.parseInt(str[0])[ CD ]
Line_5 $$ int n = Integer.parseInt(str[0])-->Line_5 $$ int n = Integer.parseInt(str[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int t = Integer.parseInt(str[1])[ CD ]
Line_6 $$ int t = Integer.parseInt(str[1])-->Line_6 $$ int t = Integer.parseInt(str[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int[] c = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int[] t_s = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int min = 10000[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ boolean flg = false[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ int n = Integer.parseInt(str[0])-->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_12 $$ str = in.readLine().split(" ")[ CD ]
Line_12 $$ str = in.readLine().split(" ")-->Line_12 $$ str = in.readLine().split(" ")[ FD ]
Line_4 $$ String[] str = in.readLine().split(" ")-->Line_12 $$ str = in.readLine().split(" ")[ FD ]
Line_12 $$ str = in.readLine().split(" ")-->Line_12 $$ str = in.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ str = in.readLine().split(" ")[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_13 $$ c[i] = Integer.parseInt(str[0])[ CD ]
Line_13 $$ c[i] = Integer.parseInt(str[0])-->Line_13 $$ c[i] = Integer.parseInt(str[0])[ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_14 $$ t_s[i] = Integer.parseInt(str[1])[ CD ]
Line_14 $$ t_s[i] = Integer.parseInt(str[1])-->Line_14 $$ t_s[i] = Integer.parseInt(str[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ int n = Integer.parseInt(str[0])-->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_17 $$ if (t_s[i] <= t) [ CD ]
Line_6 $$ int t = Integer.parseInt(str[1])-->Line_17 $$ if (t_s[i] <= t) [ FD ]
Line_17 $$ if (t_s[i] <= t) -->Line_18 $$ min = Math.min(min, c[i])[ CD ]
Line_18 $$ min = Math.min(min, c[i])-->Line_18 $$ min = Math.min(min, c[i])[ FD ]
Line_9 $$ int min = 10000-->Line_18 $$ min = Math.min(min, c[i])[ FD ]
Line_18 $$ min = Math.min(min, c[i])-->Line_18 $$ min = Math.min(min, c[i])[ CD ]
Line_18 $$ min = Math.min(min, c[i])-->Line_18 $$ min = Math.min(min, c[i])[ FD ]
Line_9 $$ int min = 10000-->Line_18 $$ min = Math.min(min, c[i])[ FD ]
Line_17 $$ if (t_s[i] <= t) -->Line_19 $$ flg = true[ CD ]
Line_19 $$ flg = true-->Line_19 $$ flg = true[ FD ]
Line_10 $$ boolean flg = false-->Line_19 $$ flg = true[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_22 $$ System.out.println(flg == true ? min : "TLE")[ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_18 $$ min = Math.min(min, c[i])-->Line_18 $$ min = Math.min(min, c[i])[ FD ]
