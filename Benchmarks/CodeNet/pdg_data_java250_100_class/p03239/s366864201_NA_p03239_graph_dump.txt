Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringTokenizer st[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ st = new StringTokenizer(br.readLine())[ CD ]
Line_4 $$ StringTokenizer st-->Line_5 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_5 $$ st = new StringTokenizer(br.readLine())-->Line_5 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int N = parseInt(st.nextToken())[ CD ]
Line_6 $$ int N = parseInt(st.nextToken())-->Line_6 $$ int N = parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st-->Line_6 $$ int N = parseInt(st.nextToken())[ FD ]
Line_5 $$ st = new StringTokenizer(br.readLine())-->Line_6 $$ int N = parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int T = parseInt(st.nextToken())[ CD ]
Line_7 $$ int T = parseInt(st.nextToken())-->Line_7 $$ int T = parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st-->Line_7 $$ int T = parseInt(st.nextToken())[ FD ]
Line_5 $$ st = new StringTokenizer(br.readLine())-->Line_7 $$ int T = parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ TreeSet<Integer> set = new TreeSet<Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ int N = parseInt(st.nextToken())-->Line_9 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_9 $$ for (int i = 0; i < N; i++) [ CD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_9 $$ for (int i = 0; i < N; i++) [ CD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_9 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_10 $$ st = new StringTokenizer(br.readLine())[ CD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_4 $$ StringTokenizer st-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_5 $$ st = new StringTokenizer(br.readLine())-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_11 $$ int c = parseInt(st.nextToken())[ CD ]
Line_11 $$ int c = parseInt(st.nextToken())-->Line_11 $$ int c = parseInt(st.nextToken())[ CD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_11 $$ int c = parseInt(st.nextToken())[ FD ]
Line_4 $$ StringTokenizer st-->Line_11 $$ int c = parseInt(st.nextToken())[ FD ]
Line_5 $$ st = new StringTokenizer(br.readLine())-->Line_11 $$ int c = parseInt(st.nextToken())[ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_12 $$ int t = parseInt(st.nextToken())[ CD ]
Line_12 $$ int t = parseInt(st.nextToken())-->Line_12 $$ int t = parseInt(st.nextToken())[ CD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_12 $$ int t = parseInt(st.nextToken())[ FD ]
Line_4 $$ StringTokenizer st-->Line_12 $$ int t = parseInt(st.nextToken())[ FD ]
Line_5 $$ st = new StringTokenizer(br.readLine())-->Line_12 $$ int t = parseInt(st.nextToken())[ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_13 $$ if (t <= T) [ CD ]
Line_12 $$ int t = parseInt(st.nextToken())-->Line_13 $$ if (t <= T) [ FD ]
Line_7 $$ int T = parseInt(st.nextToken())-->Line_13 $$ if (t <= T) [ FD ]
Line_13 $$ if (t <= T) -->Line_14 $$ set.add(c)[ CD ]
Line_8 $$ TreeSet<Integer> set = new TreeSet<Integer>()-->Line_14 $$ set.add(c)[ FD ]
Line_11 $$ int c = parseInt(st.nextToken())-->Line_14 $$ set.add(c)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_17 $$ if (set.isEmpty()) [ CD ]
Line_8 $$ TreeSet<Integer> set = new TreeSet<Integer>()-->Line_17 $$ if (set.isEmpty()) [ FD ]
Line_17 $$ if (set.isEmpty()) -->Line_17 $$ if (set.isEmpty()) [ CD ]
Line_8 $$ TreeSet<Integer> set = new TreeSet<Integer>()-->Line_17 $$ if (set.isEmpty()) [ FD ]
Line_17 $$ if (set.isEmpty()) -->Line_18 $$ System.out.println("TLE")[ CD ]
Line_17 $$ if (set.isEmpty()) -->Line_20 $$ System.out.println(set.first())[ CD ]
Line_8 $$ TreeSet<Integer> set = new TreeSet<Integer>()-->Line_20 $$ System.out.println(set.first())[ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_9 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_9 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N; i++) -->Line_9 $$ for (int i = 0; i < N; i++) [ FD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_11 $$ int c = parseInt(st.nextToken())[ FD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_12 $$ int t = parseInt(st.nextToken())[ FD ]
Line_12 $$ int t = parseInt(st.nextToken())-->Line_13 $$ if (t <= T) [ FD ]
Line_11 $$ int c = parseInt(st.nextToken())-->Line_14 $$ set.add(c)[ FD ]
