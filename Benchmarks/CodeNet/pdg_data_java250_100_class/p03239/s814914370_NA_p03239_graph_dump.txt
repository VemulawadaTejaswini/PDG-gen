Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] cost = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] time = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ cost[i] = sc.nextInt()[ CD ]
Line_9 $$ cost[i] = sc.nextInt()-->Line_9 $$ cost[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ cost[i] = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ time[i] = sc.nextInt()[ CD ]
Line_10 $$ time[i] = sc.nextInt()-->Line_10 $$ time[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ time[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int mincos = 1001[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (time[i] <= t && cost[i] < mincos) [ CD ]
Line_14 $$ if (time[i] <= t && cost[i] < mincos) -->Line_15 $$ mincos = cost[i][ CD ]
Line_15 $$ mincos = cost[i]-->Line_15 $$ mincos = cost[i][ FD ]
Line_12 $$ int mincos = 1001-->Line_15 $$ mincos = cost[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ if (mincos == 1001) [ CD ]
Line_15 $$ mincos = cost[i]-->Line_18 $$ if (mincos == 1001) [ FD ]
Line_12 $$ int mincos = 1001-->Line_18 $$ if (mincos == 1001) [ FD ]
Line_18 $$ if (mincos == 1001) -->Line_19 $$ System.out.print("TLE")[ CD ]
Line_18 $$ if (mincos == 1001) -->Line_21 $$ System.out.print(mincos)[ CD ]
Line_15 $$ mincos = cost[i]-->Line_21 $$ System.out.print(mincos)[ FD ]
Line_12 $$ int mincos = 1001-->Line_21 $$ System.out.print(mincos)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
