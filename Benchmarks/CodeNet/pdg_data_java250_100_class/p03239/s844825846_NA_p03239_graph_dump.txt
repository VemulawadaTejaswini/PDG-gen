Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int num = sc.nextInt()[ CD ]
Line_4 $$ int num = sc.nextInt()-->Line_4 $$ int num = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int num = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int maxTime = sc.nextInt()[ CD ]
Line_5 $$ int maxTime = sc.nextInt()-->Line_5 $$ int maxTime = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int maxTime = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int minCost = 10000[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < num; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int num = sc.nextInt()-->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ CD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ CD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_8 $$ int crtCost = sc.nextInt()[ CD ]
Line_8 $$ int crtCost = sc.nextInt()-->Line_8 $$ int crtCost = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ int crtCost = sc.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_9 $$ if (sc.nextInt() <= maxTime) [ CD ]
Line_5 $$ int maxTime = sc.nextInt()-->Line_9 $$ if (sc.nextInt() <= maxTime) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ if (sc.nextInt() <= maxTime) [ FD ]
Line_9 $$ if (sc.nextInt() <= maxTime) -->Line_10 $$ minCost = Math.min(minCost, crtCost)[ CD ]
Line_10 $$ minCost = Math.min(minCost, crtCost)-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
Line_6 $$ int minCost = 10000-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
Line_10 $$ minCost = Math.min(minCost, crtCost)-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ CD ]
Line_10 $$ minCost = Math.min(minCost, crtCost)-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
Line_6 $$ int minCost = 10000-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
Line_8 $$ int crtCost = sc.nextInt()-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ System.out.println(minCost == 10000 ? "TLE" : minCost)[ CD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_10 $$ minCost = Math.min(minCost, crtCost)-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
Line_8 $$ int crtCost = sc.nextInt()-->Line_10 $$ minCost = Math.min(minCost, crtCost)[ FD ]
