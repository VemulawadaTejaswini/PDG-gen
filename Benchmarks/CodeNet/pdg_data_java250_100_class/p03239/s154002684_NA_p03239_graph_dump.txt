Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int t = Integer.parseInt(sc.next())[ CD ]
Line_5 $$ int t = Integer.parseInt(sc.next())-->Line_5 $$ int t = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int[] cost = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int[] time = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ cost[i] = Integer.parseInt(sc.next())[ CD ]
Line_9 $$ cost[i] = Integer.parseInt(sc.next())-->Line_9 $$ cost[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ cost[i] = Integer.parseInt(sc.next())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ time[i] = Integer.parseInt(sc.next())[ CD ]
Line_10 $$ time[i] = Integer.parseInt(sc.next())-->Line_10 $$ time[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ time[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ int ans = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (time[i] <= t) [ CD ]
Line_5 $$ int t = Integer.parseInt(sc.next())-->Line_14 $$ if (time[i] <= t) [ FD ]
Line_14 $$ if (time[i] <= t) -->Line_15 $$ if (cost[i] < ans) [ CD ]
Line_12 $$ int ans = Integer.MAX_VALUE-->Line_15 $$ if (cost[i] < ans) [ FD ]
Line_15 $$ if (cost[i] < ans) -->Line_16 $$ ans = cost[i][ CD ]
Line_16 $$ ans = cost[i]-->Line_16 $$ ans = cost[i][ FD ]
Line_12 $$ int ans = Integer.MAX_VALUE-->Line_16 $$ ans = cost[i][ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ if (ans == Integer.MAX_VALUE) [ CD ]
Line_16 $$ ans = cost[i]-->Line_20 $$ if (ans == Integer.MAX_VALUE) [ FD ]
Line_12 $$ int ans = Integer.MAX_VALUE-->Line_20 $$ if (ans == Integer.MAX_VALUE) [ FD ]
Line_20 $$ if (ans == Integer.MAX_VALUE) -->Line_21 $$ System.out.println("TLE")[ CD ]
Line_20 $$ if (ans == Integer.MAX_VALUE) -->Line_23 $$ System.out.println(ans)[ CD ]
Line_16 $$ ans = cost[i]-->Line_23 $$ System.out.println(ans)[ FD ]
Line_12 $$ int ans = Integer.MAX_VALUE-->Line_23 $$ System.out.println(ans)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ ans = cost[i]-->Line_15 $$ if (cost[i] < ans) [ FD ]
