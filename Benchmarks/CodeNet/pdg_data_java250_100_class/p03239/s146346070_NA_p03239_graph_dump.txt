Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[][] matrix = new int[n][2][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ matrix[i][0] = sc.nextInt()[ CD ]
Line_8 $$ matrix[i][0] = sc.nextInt()-->Line_8 $$ matrix[i][0] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ matrix[i][0] = sc.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ matrix[i][1] = sc.nextInt()[ CD ]
Line_9 $$ matrix[i][1] = sc.nextInt()-->Line_9 $$ matrix[i][1] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ matrix[i][1] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int minCost = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if (matrix[i][1] <= t) [ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_13 $$ if (matrix[i][1] <= t) [ FD ]
Line_13 $$ if (matrix[i][1] <= t) -->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ CD ]
Line_14 $$ minCost = Math.min(minCost, matrix[i][0])-->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ FD ]
Line_11 $$ int minCost = Integer.MAX_VALUE-->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ FD ]
Line_14 $$ minCost = Math.min(minCost, matrix[i][0])-->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ CD ]
Line_14 $$ minCost = Math.min(minCost, matrix[i][0])-->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ FD ]
Line_11 $$ int minCost = Integer.MAX_VALUE-->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(minCost == Integer.MAX_VALUE ? "TLE" : minCost)[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ minCost = Math.min(minCost, matrix[i][0])-->Line_14 $$ minCost = Math.min(minCost, matrix[i][0])[ FD ]
