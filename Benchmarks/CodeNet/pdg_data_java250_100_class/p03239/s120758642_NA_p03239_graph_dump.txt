Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int T = sc.nextInt()[ CD ]
Line_5 $$ int T = sc.nextInt()-->Line_5 $$ int T = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int T = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] A = new int[N * 2][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int min = 10001[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int cost = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ CD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ CD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_10 $$ A[i] = sc.nextInt()[ CD ]
Line_10 $$ A[i] = sc.nextInt()-->Line_10 $$ A[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ A[i] = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_11 $$ if (i % 2 == 1) [ CD ]
Line_11 $$ if (i % 2 == 1) -->Line_12 $$ if (A[i] <= T) [ CD ]
Line_5 $$ int T = sc.nextInt()-->Line_12 $$ if (A[i] <= T) [ FD ]
Line_12 $$ if (A[i] <= T) -->Line_13 $$ cost = A[i - 1][ CD ]
Line_13 $$ cost = A[i - 1]-->Line_13 $$ cost = A[i - 1][ FD ]
Line_8 $$ int cost = 0-->Line_13 $$ cost = A[i - 1][ FD ]
Line_12 $$ if (A[i] <= T) -->Line_14 $$ min = Math.min(min, cost)[ CD ]
Line_14 $$ min = Math.min(min, cost)-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_7 $$ int min = 10001-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_14 $$ min = Math.min(min, cost)-->Line_14 $$ min = Math.min(min, cost)[ CD ]
Line_14 $$ min = Math.min(min, cost)-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_7 $$ int min = 10001-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_13 $$ cost = A[i - 1]-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_8 $$ int cost = 0-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ if (min == 10001) [ CD ]
Line_14 $$ min = Math.min(min, cost)-->Line_18 $$ if (min == 10001) [ FD ]
Line_7 $$ int min = 10001-->Line_18 $$ if (min == 10001) [ FD ]
Line_18 $$ if (min == 10001) -->Line_19 $$ System.out.println("TLE")[ CD ]
Line_18 $$ if (min == 10001) -->Line_21 $$ System.out.println(min)[ CD ]
Line_14 $$ min = Math.min(min, cost)-->Line_21 $$ System.out.println(min)[ FD ]
Line_7 $$ int min = 10001-->Line_21 $$ System.out.println(min)[ FD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < 2 * N; i++) -->Line_9 $$ for (int i = 0; i < 2 * N; i++) [ FD ]
Line_14 $$ min = Math.min(min, cost)-->Line_14 $$ min = Math.min(min, cost)[ FD ]
Line_13 $$ cost = A[i - 1]-->Line_14 $$ min = Math.min(min, cost)[ FD ]
