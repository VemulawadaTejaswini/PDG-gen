Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String line = scanner.nextLine()[ CD ]
Line_4 $$ String line = scanner.nextLine()-->Line_4 $$ String line = scanner.nextLine()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ String line = scanner.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String[] row = line.split(" ")[ CD ]
Line_5 $$ String[] row = line.split(" ")-->Line_5 $$ String[] row = line.split(" ")[ CD ]
Line_4 $$ String line = scanner.nextLine()-->Line_5 $$ String[] row = line.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int n = Integer.parseInt(row[0])[ CD ]
Line_6 $$ int n = Integer.parseInt(row[0])-->Line_6 $$ int n = Integer.parseInt(row[0])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int t = Integer.parseInt(row[1])[ CD ]
Line_7 $$ int t = Integer.parseInt(row[1])-->Line_7 $$ int t = Integer.parseInt(row[1])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int minCost = 1001[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ int n = Integer.parseInt(row[0])-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ String line2 = scanner.nextLine()[ CD ]
Line_10 $$ String line2 = scanner.nextLine()-->Line_10 $$ String line2 = scanner.nextLine()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_10 $$ String line2 = scanner.nextLine()[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ String[] row2 = line2.split(" ")[ CD ]
Line_11 $$ String[] row2 = line2.split(" ")-->Line_11 $$ String[] row2 = line2.split(" ")[ CD ]
Line_10 $$ String line2 = scanner.nextLine()-->Line_11 $$ String[] row2 = line2.split(" ")[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_12 $$ int cost = Integer.parseInt(row2[0])[ CD ]
Line_12 $$ int cost = Integer.parseInt(row2[0])-->Line_12 $$ int cost = Integer.parseInt(row2[0])[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_13 $$ int time = Integer.parseInt(row2[1])[ CD ]
Line_13 $$ int time = Integer.parseInt(row2[1])-->Line_13 $$ int time = Integer.parseInt(row2[1])[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (time <= t && cost < minCost) [ CD ]
Line_14 $$ if (time <= t && cost < minCost) -->Line_15 $$ minCost = cost[ CD ]
Line_15 $$ minCost = cost-->Line_15 $$ minCost = cost[ FD ]
Line_8 $$ int minCost = 1001-->Line_15 $$ minCost = cost[ FD ]
Line_12 $$ int cost = Integer.parseInt(row2[0])-->Line_15 $$ minCost = cost[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ if (minCost > 1000) [ CD ]
Line_15 $$ minCost = cost-->Line_18 $$ if (minCost > 1000) [ FD ]
Line_8 $$ int minCost = 1001-->Line_18 $$ if (minCost > 1000) [ FD ]
Line_18 $$ if (minCost > 1000) -->Line_19 $$ System.out.println("TLE")[ CD ]
Line_18 $$ if (minCost > 1000) -->Line_21 $$ System.out.println(minCost)[ CD ]
Line_15 $$ minCost = cost-->Line_21 $$ System.out.println(minCost)[ FD ]
Line_8 $$ int minCost = 1001-->Line_21 $$ System.out.println(minCost)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ String line2 = scanner.nextLine()-->Line_11 $$ String[] row2 = line2.split(" ")[ FD ]
Line_12 $$ int cost = Integer.parseInt(row2[0])-->Line_15 $$ minCost = cost[ FD ]
