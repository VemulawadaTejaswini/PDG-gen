Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String[] temp1 = scanner.nextLine().split(" ")[ CD ]
Line_4 $$ String[] temp1 = scanner.nextLine().split(" ")-->Line_4 $$ String[] temp1 = scanner.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ String[] temp1 = scanner.nextLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int n = Integer.parseInt(temp1[0])[ CD ]
Line_5 $$ int n = Integer.parseInt(temp1[0])-->Line_5 $$ int n = Integer.parseInt(temp1[0])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int t = Integer.parseInt(temp1[1])[ CD ]
Line_6 $$ int t = Integer.parseInt(temp1[1])-->Line_6 $$ int t = Integer.parseInt(temp1[1])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int ans = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int flag = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ String[] temp2 = new String[2][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int n = Integer.parseInt(temp1[0])-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ temp2 = scanner.nextLine().split(" ")[ CD ]
Line_11 $$ temp2 = scanner.nextLine().split(" ")-->Line_11 $$ temp2 = scanner.nextLine().split(" ")[ FD ]
Line_9 $$ String[] temp2 = new String[2]-->Line_11 $$ temp2 = scanner.nextLine().split(" ")[ FD ]
Line_11 $$ temp2 = scanner.nextLine().split(" ")-->Line_11 $$ temp2 = scanner.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_11 $$ temp2 = scanner.nextLine().split(" ")[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_12 $$ if (Integer.parseInt(temp2[1]) <= t) [ CD ]
Line_6 $$ int t = Integer.parseInt(temp1[1])-->Line_12 $$ if (Integer.parseInt(temp2[1]) <= t) [ FD ]
Line_12 $$ if (Integer.parseInt(temp2[1]) <= t) -->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ CD ]
Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))-->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ FD ]
Line_7 $$ int ans = Integer.MAX_VALUE-->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ FD ]
Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))-->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ CD ]
Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))-->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ FD ]
Line_7 $$ int ans = Integer.MAX_VALUE-->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ FD ]
Line_12 $$ if (Integer.parseInt(temp2[1]) <= t) -->Line_14 $$ flag++[ CD ]
Line_8 $$ int flag = 0-->Line_14 $$ flag++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ if (flag == 0) [ CD ]
Line_8 $$ int flag = 0-->Line_17 $$ if (flag == 0) [ FD ]
Line_17 $$ if (flag == 0) -->Line_18 $$ System.out.println("TLE")[ CD ]
Line_17 $$ if (flag == 0) -->Line_20 $$ System.out.println(ans)[ CD ]
Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))-->Line_20 $$ System.out.println(ans)[ FD ]
Line_7 $$ int ans = Integer.MAX_VALUE-->Line_20 $$ System.out.println(ans)[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))-->Line_13 $$ ans = Math.min(ans, Integer.parseInt(temp2[0]))[ FD ]
