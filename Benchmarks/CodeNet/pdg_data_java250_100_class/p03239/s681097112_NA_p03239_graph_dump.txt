Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ int t = Integer.parseInt(sc.next())[ CD ]
Line_5 $$ int t = Integer.parseInt(sc.next())-->Line_5 $$ int t = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ Integer[] cost = new Integer[n][ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ Integer[] time = new Integer[n][ CD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ cost[i] = Integer.parseInt(sc.next())[ CD ]
Line_9 $$ cost[i] = Integer.parseInt(sc.next())-->Line_9 $$ cost[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ cost[i] = Integer.parseInt(sc.next())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ time[i] = Integer.parseInt(sc.next())[ CD ]
Line_10 $$ time[i] = Integer.parseInt(sc.next())-->Line_10 $$ time[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ time[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_12 $$ int minCost = 1001[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (time[i] <= t) [ CD ]
Line_5 $$ int t = Integer.parseInt(sc.next())-->Line_14 $$ if (time[i] <= t) [ FD ]
Line_14 $$ if (time[i] <= t) -->Line_15 $$ minCost = Math.min(minCost, cost[i])[ CD ]
Line_15 $$ minCost = Math.min(minCost, cost[i])-->Line_15 $$ minCost = Math.min(minCost, cost[i])[ FD ]
Line_12 $$ int minCost = 1001-->Line_15 $$ minCost = Math.min(minCost, cost[i])[ FD ]
Line_15 $$ minCost = Math.min(minCost, cost[i])-->Line_15 $$ minCost = Math.min(minCost, cost[i])[ CD ]
Line_15 $$ minCost = Math.min(minCost, cost[i])-->Line_15 $$ minCost = Math.min(minCost, cost[i])[ FD ]
Line_12 $$ int minCost = 1001-->Line_15 $$ minCost = Math.min(minCost, cost[i])[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_18 $$ System.out.println(minCost > 1000 ? "TLE" : minCost)[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ minCost = Math.min(minCost, cost[i])-->Line_15 $$ minCost = Math.min(minCost, cost[i])[ FD ]
