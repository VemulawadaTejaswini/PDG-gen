Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ String w = br.readLine()[ CD ]
Line_4 $$ String w = br.readLine()-->Line_4 $$ String w = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String w = br.readLine()[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ String t[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_6 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_7 $$ while ((t = br.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_7 $$ while ((t = br.readLine()) != null) [ FD ]
Line_5 $$ String t-->Line_7 $$ while ((t = br.readLine()) != null) [ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_7 $$ while ((t = br.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ while ((t = br.readLine()) != null) [ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ CD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_5 $$ String t-->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_4 $$ String w = br.readLine()-->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_5 $$ String t-->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_11 $$ String[] str = t.split(" ")[ CD ]
Line_11 $$ String[] str = t.split(" ")-->Line_11 $$ String[] str = t.split(" ")[ CD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_11 $$ String[] str = t.split(" ")[ FD ]
Line_5 $$ String t-->Line_11 $$ String[] str = t.split(" ")[ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ CD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_7 $$ while ((t = br.readLine()) != null) [ CD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ CD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ CD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ FD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_13 $$ if (str[k].equalsIgnoreCase(w)) [ CD ]
Line_4 $$ String w = br.readLine()-->Line_13 $$ if (str[k].equalsIgnoreCase(w)) [ FD ]
Line_13 $$ if (str[k].equalsIgnoreCase(w)) -->Line_13 $$ if (str[k].equalsIgnoreCase(w)) [ CD ]
Line_4 $$ String w = br.readLine()-->Line_13 $$ if (str[k].equalsIgnoreCase(w)) [ FD ]
Line_13 $$ if (str[k].equalsIgnoreCase(w)) -->Line_14 $$ count++[ CD ]
Line_6 $$ int count = 0-->Line_14 $$ count++[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_18 $$ System.out.println(count)[ CD ]
Line_6 $$ int count = 0-->Line_18 $$ System.out.println(count)[ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_8 $$ if ("END_OF_TEXT".equals(t) || w.length() > 10 || t.length() > 1000) [ FD ]
Line_7 $$ while ((t = br.readLine()) != null) -->Line_11 $$ String[] str = t.split(" ")[ FD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ FD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ FD ]
Line_12 $$ for (int k = 0; k < str.length; k++) -->Line_12 $$ for (int k = 0; k < str.length; k++) [ FD ]
