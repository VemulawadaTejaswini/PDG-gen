Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ private static final String SPACE = " ";[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_10 $$ while ((sStr = stdReader.readLine()) != null) [ FD ]
Line_7 $$ String sStr-->Line_10 $$ while ((sStr = stdReader.readLine()) != null) [ FD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_10 $$ while ((sStr = stdReader.readLine()) != null) [ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_10 $$ while ((sStr = stdReader.readLine()) != null) [ FD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_11 $$ if (stdReader.getLineNumber() == 1) [ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_11 $$ if (stdReader.getLineNumber() == 1) [ FD ]
Line_11 $$ if (stdReader.getLineNumber() == 1) -->Line_12 $$ String[] inputs = sStr.split(" ")[ CD ]
Line_12 $$ String[] inputs = sStr.split(" ")-->Line_12 $$ String[] inputs = sStr.split(" ")[ CD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_12 $$ String[] inputs = sStr.split(" ")[ FD ]
Line_7 $$ String sStr-->Line_12 $$ String[] inputs = sStr.split(" ")[ FD ]
Line_11 $$ if (stdReader.getLineNumber() == 1) -->Line_13 $$ n = Integer.valueOf(inputs[0])[ CD ]
Line_13 $$ n = Integer.valueOf(inputs[0])-->Line_13 $$ n = Integer.valueOf(inputs[0])[ FD ]
Line_8 $$ int n = 0-->Line_13 $$ n = Integer.valueOf(inputs[0])[ FD ]
Line_13 $$ n = Integer.valueOf(inputs[0])-->Line_13 $$ n = Integer.valueOf(inputs[0])[ CD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_15 $$ if (stdReader.getLineNumber() == 2) [ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_15 $$ if (stdReader.getLineNumber() == 2) [ FD ]
Line_15 $$ if (stdReader.getLineNumber() == 2) -->Line_16 $$ String[] inputs = sStr.split(" ")[ CD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_16 $$ String[] inputs = sStr.split(" ")[ FD ]
Line_7 $$ String sStr-->Line_16 $$ String[] inputs = sStr.split(" ")[ FD ]
Line_15 $$ if (stdReader.getLineNumber() == 2) -->Line_17 $$ int i = 0[ CD ]
Line_15 $$ if (stdReader.getLineNumber() == 2) -->Line_18 $$ an = new int[n][ CD ]
Line_18 $$ an = new int[n]-->Line_18 $$ an = new int[n][ FD ]
Line_9 $$ int[] an = null-->Line_18 $$ an = new int[n][ FD ]
Line_20 $$ an[i] = Integer.parseInt(input)-->Line_20 $$ an[i] = Integer.parseInt(input)[ CD ]
Line_19 $$ for (String input : inputs) -->Line_20 $$ an[i] = Integer.parseInt(input)[ FD ]
Line_17 $$ int i = 0-->Line_21 $$ i++[ FD ]
Line_17 $$ int i = 0-->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ CD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ CD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_17 $$ int i = 0-->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_27 $$ System.out.print(an[i])[ CD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_28 $$ if (i != 0)[ CD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_28 $$ if (i != 0)[ FD ]
Line_17 $$ int i = 0-->Line_28 $$ if (i != 0)[ FD ]
Line_28 $$ if (i != 0)-->Line_28 $$ System.out.print(SPACE)[ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_31 $$ stdReader.close()[ FD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_12 $$ String[] inputs = sStr.split(" ")[ FD ]
Line_10 $$ while ((sStr = stdReader.readLine()) != null) -->Line_16 $$ String[] inputs = sStr.split(" ")[ FD ]
Line_19 $$ for (String input : inputs) -->Line_20 $$ an[i] = Integer.parseInt(input)[ FD ]
Line_17 $$ int i = 0-->Line_21 $$ i++[ FD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_26 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_26 $$ for (int i = n - 1; i >= 0; i--) -->Line_28 $$ if (i != 0)[ FD ]
