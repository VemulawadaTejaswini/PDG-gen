Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ static PrintStream o = System.out;[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) throws IOException [ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_4 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int n = sc.nextInt()[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_6 $$ HashSet<String> get = new HashSet<String>(n)[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int res = 0[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_8 $$ sc.nextLine()[ CD ]
Line_4 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ sc.nextLine()[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_9 $$ String one[ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_3 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ one = sc.nextLine()[ CD ]
Line_11 $$ one = sc.nextLine()-->Line_11 $$ one = sc.nextLine()[ FD ]
Line_9 $$ String one-->Line_11 $$ one = sc.nextLine()[ FD ]
Line_11 $$ one = sc.nextLine()-->Line_11 $$ one = sc.nextLine()[ CD ]
Line_4 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ one = sc.nextLine()[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_12 $$ if (!get.contains(one)) [ CD ]
Line_12 $$ if (!get.contains(one)) -->Line_12 $$ if (!get.contains(one)) [ CD ]
Line_12 $$ if (!get.contains(one)) -->Line_12 $$ if (!get.contains(one)) [ CD ]
Line_6 $$ HashSet<String> get = new HashSet<String>(n)-->Line_12 $$ if (!get.contains(one)) [ FD ]
Line_11 $$ one = sc.nextLine()-->Line_12 $$ if (!get.contains(one)) [ FD ]
Line_9 $$ String one-->Line_12 $$ if (!get.contains(one)) [ FD ]
Line_12 $$ if (!get.contains(one)) -->Line_13 $$ get.add(one)[ CD ]
Line_6 $$ HashSet<String> get = new HashSet<String>(n)-->Line_13 $$ get.add(one)[ FD ]
Line_11 $$ one = sc.nextLine()-->Line_13 $$ get.add(one)[ FD ]
Line_9 $$ String one-->Line_13 $$ get.add(one)[ FD ]
Line_12 $$ if (!get.contains(one)) -->Line_14 $$ res++[ CD ]
Line_7 $$ int res = 0-->Line_14 $$ res++[ FD ]
Line_3 $$ public static void main(String[] args) throws IOException -->Line_17 $$ o.println(res)[ CD ]
Line_7 $$ int res = 0-->Line_17 $$ o.println(res)[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ one = sc.nextLine()-->Line_12 $$ if (!get.contains(one)) [ FD ]
Line_11 $$ one = sc.nextLine()-->Line_13 $$ get.add(one)[ FD ]
