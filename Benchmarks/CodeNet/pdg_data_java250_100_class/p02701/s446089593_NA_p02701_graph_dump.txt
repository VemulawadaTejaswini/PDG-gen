Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int times = sc.nextInt()[ CD ]
Line_4 $$ int times = sc.nextInt()-->Line_4 $$ int times = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int times = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ HashSet<String> kuji = new HashSet<String>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < times; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int times = sc.nextInt()-->Line_6 $$ for (int i = 0; i < times; i++) [ FD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_6 $$ for (int i = 0; i < times; i++) [ CD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_6 $$ for (int i = 0; i < times; i++) [ CD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_6 $$ for (int i = 0; i < times; i++) [ FD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_7 $$ kuji.add(sc.next())[ CD ]
Line_5 $$ HashSet<String> kuji = new HashSet<String>()-->Line_7 $$ kuji.add(sc.next())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ kuji.add(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ System.out.print(kuji.size())[ CD ]
Line_5 $$ HashSet<String> kuji = new HashSet<String>()-->Line_9 $$ System.out.print(kuji.size())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ sc.close()[ FD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_6 $$ for (int i = 0; i < times; i++) [ FD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_6 $$ for (int i = 0; i < times; i++) [ FD ]
Line_6 $$ for (int i = 0; i < times; i++) -->Line_6 $$ for (int i = 0; i < times; i++) [ FD ]
