Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ String keihin = sc.next()[ CD ]
Line_7 $$ String keihin = sc.next()-->Line_7 $$ String keihin = sc.next()[ CD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_7 $$ String keihin = sc.next()[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_8 $$ if (mapG.containsKey(keihin)) [ CD ]
Line_5 $$ Map<String, Integer> mapG = new HashMap<String, Integer>()-->Line_8 $$ if (mapG.containsKey(keihin)) [ FD ]
Line_7 $$ String keihin = sc.next()-->Line_8 $$ if (mapG.containsKey(keihin)) [ FD ]
Line_8 $$ if (mapG.containsKey(keihin)) -->Line_8 $$ if (mapG.containsKey(keihin)) [ CD ]
Line_5 $$ Map<String, Integer> mapG = new HashMap<String, Integer>()-->Line_8 $$ if (mapG.containsKey(keihin)) [ FD ]
Line_7 $$ String keihin = sc.next()-->Line_8 $$ if (mapG.containsKey(keihin)) [ FD ]
Line_8 $$ if (mapG.containsKey(keihin)) -->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ CD ]
Line_5 $$ Map<String, Integer> mapG = new HashMap<String, Integer>()-->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ FD ]
Line_7 $$ String keihin = sc.next()-->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ FD ]
Line_5 $$ Map<String, Integer> mapG = new HashMap<String, Integer>()-->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ FD ]
Line_7 $$ String keihin = sc.next()-->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ FD ]
Line_8 $$ if (mapG.containsKey(keihin)) -->Line_11 $$ mapG.put(keihin, 1)[ CD ]
Line_5 $$ Map<String, Integer> mapG = new HashMap<String, Integer>()-->Line_11 $$ mapG.put(keihin, 1)[ FD ]
Line_7 $$ String keihin = sc.next()-->Line_11 $$ mapG.put(keihin, 1)[ FD ]
Line_5 $$ Map<String, Integer> mapG = new HashMap<String, Integer>()-->Line_14 $$ System.out.println(mapG.size())[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ String keihin = sc.next()-->Line_8 $$ if (mapG.containsKey(keihin)) [ FD ]
Line_7 $$ String keihin = sc.next()-->Line_8 $$ if (mapG.containsKey(keihin)) [ FD ]
Line_7 $$ String keihin = sc.next()-->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ FD ]
Line_7 $$ String keihin = sc.next()-->Line_9 $$ mapG.put(keihin, mapG.get(keihin) + 1)[ FD ]
Line_7 $$ String keihin = sc.next()-->Line_11 $$ mapG.put(keihin, 1)[ FD ]
