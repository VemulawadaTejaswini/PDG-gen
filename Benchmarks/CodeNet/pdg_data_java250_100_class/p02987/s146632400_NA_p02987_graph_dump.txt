Line_0 $$ Entry-->Line_2 $$ public class Main [ CD ]
Line_2 $$ public class Main -->Line_5 $$ public static void main(String[] args) [ CD ]
Line_5 $$ public static void main(String[] args) -->Line_6 $$ Map<Long, Long> mapX = new HashMap<Long, Long>()[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_7 $$ Map<Long, Long> mapY = new HashMap<Long, Long>()[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_8 $$ Map<Long, Long> mapX2 = new TreeMap<Long, Long>()[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_9 $$ Map<Long, Long> mapY2 = new TreeMap<Long, Long>()[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_10 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_11 $$ String s, s1, s2, result[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_12 $$ int index1, index2, num[ CD ]
Line_5 $$ public static void main(String[] args) -->Line_13 $$ s = sc.next()[ CD ]
Line_11 $$ String s, s1, s2, result-->Line_13 $$ s = sc.next()[ FD ]
Line_13 $$ s = sc.next()-->Line_13 $$ s = sc.next()[ FD ]
Line_13 $$ s = sc.next()-->Line_13 $$ s = sc.next()[ CD ]
Line_10 $$ Scanner sc = new Scanner(System.in)-->Line_13 $$ s = sc.next()[ FD ]
Line_5 $$ public static void main(String[] args) -->Line_14 $$ sc.close()[ CD ]
Line_10 $$ Scanner sc = new Scanner(System.in)-->Line_14 $$ sc.close()[ FD ]
Line_5 $$ public static void main(String[] args) -->Line_15 $$ result = "Yes"[ CD ]
Line_11 $$ String s, s1, s2, result-->Line_15 $$ result = "Yes"[ FD ]
Line_15 $$ result = "Yes"-->Line_15 $$ result = "Yes"[ FD ]
Line_12 $$ int index1, index2, num-->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ CD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_12 $$ int index1, index2, num-->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ CD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_12 $$ int index1, index2, num-->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ CD ]
Line_17 $$ s1 = s.substring(index1, index1 + 1)-->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_11 $$ String s, s1, s2, result-->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_17 $$ s1 = s.substring(index1, index1 + 1)-->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ CD ]
Line_11 $$ String s, s1, s2, result-->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_13 $$ s = sc.next()-->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_12 $$ int index1, index2, num-->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_18 $$ num = 0[ CD ]
Line_18 $$ num = 0-->Line_18 $$ num = 0[ FD ]
Line_12 $$ int index1, index2, num-->Line_18 $$ num = 0[ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ CD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ CD ]
Line_12 $$ int index1, index2, num-->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ CD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_12 $$ int index1, index2, num-->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ CD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_12 $$ int index1, index2, num-->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ CD ]
Line_20 $$ s2 = s.substring(index2, index2 + 1)-->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_11 $$ String s, s1, s2, result-->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_20 $$ s2 = s.substring(index2, index2 + 1)-->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ CD ]
Line_11 $$ String s, s1, s2, result-->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_13 $$ s = sc.next()-->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_12 $$ int index1, index2, num-->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_21 $$ if (s1.equals(s2)) [ CD ]
Line_17 $$ s1 = s.substring(index1, index1 + 1)-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_11 $$ String s, s1, s2, result-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_20 $$ s2 = s.substring(index2, index2 + 1)-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_11 $$ String s, s1, s2, result-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_21 $$ if (s1.equals(s2)) -->Line_21 $$ if (s1.equals(s2)) [ CD ]
Line_17 $$ s1 = s.substring(index1, index1 + 1)-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_11 $$ String s, s1, s2, result-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_20 $$ s2 = s.substring(index2, index2 + 1)-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_11 $$ String s, s1, s2, result-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_21 $$ if (s1.equals(s2)) -->Line_22 $$ num = num + 1[ CD ]
Line_22 $$ num = num + 1-->Line_22 $$ num = num + 1[ FD ]
Line_18 $$ num = 0-->Line_22 $$ num = num + 1[ FD ]
Line_12 $$ int index1, index2, num-->Line_22 $$ num = num + 1[ FD ]
Line_22 $$ num = num + 1-->Line_22 $$ num = num + 1[ FD ]
Line_18 $$ num = 0-->Line_22 $$ num = num + 1[ FD ]
Line_12 $$ int index1, index2, num-->Line_22 $$ num = num + 1[ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_25 $$ if (num != 2) [ CD ]
Line_22 $$ num = num + 1-->Line_25 $$ if (num != 2) [ FD ]
Line_18 $$ num = 0-->Line_25 $$ if (num != 2) [ FD ]
Line_12 $$ int index1, index2, num-->Line_25 $$ if (num != 2) [ FD ]
Line_25 $$ if (num != 2) -->Line_26 $$ result = "No"[ CD ]
Line_26 $$ result = "No"-->Line_26 $$ result = "No"[ FD ]
Line_11 $$ String s, s1, s2, result-->Line_26 $$ result = "No"[ FD ]
Line_15 $$ result = "Yes"-->Line_26 $$ result = "No"[ FD ]
Line_5 $$ public static void main(String[] args) -->Line_30 $$ System.out.println(result)[ CD ]
Line_26 $$ result = "No"-->Line_30 $$ System.out.println(result)[ FD ]
Line_11 $$ String s, s1, s2, result-->Line_30 $$ System.out.println(result)[ FD ]
Line_15 $$ result = "Yes"-->Line_30 $$ System.out.println(result)[ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_16 $$ for (index1 = 0; index1 < 3; index1++) [ FD ]
Line_16 $$ for (index1 = 0; index1 < 3; index1++) -->Line_17 $$ s1 = s.substring(index1, index1 + 1)[ FD ]
Line_18 $$ num = 0-->Line_25 $$ if (num != 2) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_19 $$ for (index2 = 0; index2 < 4; index2++) [ FD ]
Line_19 $$ for (index2 = 0; index2 < 4; index2++) -->Line_20 $$ s2 = s.substring(index2, index2 + 1)[ FD ]
Line_20 $$ s2 = s.substring(index2, index2 + 1)-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_20 $$ s2 = s.substring(index2, index2 + 1)-->Line_21 $$ if (s1.equals(s2)) [ FD ]
Line_22 $$ num = num + 1-->Line_22 $$ num = num + 1[ FD ]
