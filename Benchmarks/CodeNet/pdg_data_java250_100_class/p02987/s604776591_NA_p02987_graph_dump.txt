Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String word = sc.next()[ CD ]
Line_4 $$ String word = sc.next()-->Line_4 $$ String word = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String word = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ char c[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ boolean isEven = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_4 $$ String word = sc.next()-->Line_8 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ c = word.charAt(i)[ CD ]
Line_9 $$ c = word.charAt(i)-->Line_9 $$ c = word.charAt(i)[ FD ]
Line_5 $$ char c-->Line_9 $$ c = word.charAt(i)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_9 $$ c = word.charAt(i)[ CD ]
Line_4 $$ String word = sc.next()-->Line_9 $$ c = word.charAt(i)[ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ c = word.charAt(i)[ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_10 $$ if (countWord.containsKey(c)) [ CD ]
Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_9 $$ c = word.charAt(i)-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_5 $$ char c-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_10 $$ if (countWord.containsKey(c)) -->Line_10 $$ if (countWord.containsKey(c)) [ CD ]
Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_9 $$ c = word.charAt(i)-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_5 $$ char c-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_10 $$ if (countWord.containsKey(c)) -->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ CD ]
Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_5 $$ char c-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_5 $$ char c-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_10 $$ if (countWord.containsKey(c)) -->Line_13 $$ countWord.put(c, 1)[ CD ]
Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()-->Line_13 $$ countWord.put(c, 1)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_13 $$ countWord.put(c, 1)[ FD ]
Line_5 $$ char c-->Line_13 $$ countWord.put(c, 1)[ FD ]
Line_7 $$ LinkedHashMap<Character, Integer> countWord = new LinkedHashMap<Character, Integer>()-->Line_16 $$ for (int num : countWord.values()) [ FD ]
Line_16 $$ for (int num : countWord.values()) -->Line_17 $$ if (num != 2) [ FD ]
Line_17 $$ if (num != 2) -->Line_18 $$ isEven = false[ CD ]
Line_6 $$ boolean isEven = true-->Line_18 $$ isEven = false[ FD ]
Line_18 $$ isEven = false-->Line_18 $$ isEven = false[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ if (isEven) [ CD ]
Line_21 $$ if (isEven) -->Line_22 $$ System.out.println("Yes")[ CD ]
Line_21 $$ if (isEven) -->Line_24 $$ System.out.println("No")[ CD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_8 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ c = word.charAt(i)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_9 $$ c = word.charAt(i)-->Line_10 $$ if (countWord.containsKey(c)) [ FD ]
Line_9 $$ c = word.charAt(i)-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_11 $$ countWord.put(c, countWord.get(c) + 1)[ FD ]
Line_9 $$ c = word.charAt(i)-->Line_13 $$ countWord.put(c, 1)[ FD ]
