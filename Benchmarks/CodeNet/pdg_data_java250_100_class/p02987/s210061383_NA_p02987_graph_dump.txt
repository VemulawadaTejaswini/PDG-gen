Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ String S = sc.next()[ CD ]
Line_4 $$ String S = sc.next()-->Line_4 $$ String S = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String S = sc.next()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ HashMap<Character, Integer> hm = new HashMap()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ char ch = ' '[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_8 $$ ch = S.charAt(i)[ CD ]
Line_8 $$ ch = S.charAt(i)-->Line_8 $$ ch = S.charAt(i)[ FD ]
Line_6 $$ char ch = ' '-->Line_8 $$ ch = S.charAt(i)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_8 $$ ch = S.charAt(i)[ CD ]
Line_4 $$ String S = sc.next()-->Line_8 $$ ch = S.charAt(i)[ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_8 $$ ch = S.charAt(i)[ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_9 $$ if (!hm.containsKey(ch)) [ CD ]
Line_9 $$ if (!hm.containsKey(ch)) -->Line_9 $$ if (!hm.containsKey(ch)) [ CD ]
Line_9 $$ if (!hm.containsKey(ch)) -->Line_9 $$ if (!hm.containsKey(ch)) [ CD ]
Line_5 $$ HashMap<Character, Integer> hm = new HashMap()-->Line_9 $$ if (!hm.containsKey(ch)) [ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_9 $$ if (!hm.containsKey(ch)) [ FD ]
Line_6 $$ char ch = ' '-->Line_9 $$ if (!hm.containsKey(ch)) [ FD ]
Line_9 $$ if (!hm.containsKey(ch)) -->Line_10 $$ hm.put(ch, 1)[ CD ]
Line_5 $$ HashMap<Character, Integer> hm = new HashMap()-->Line_10 $$ hm.put(ch, 1)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_10 $$ hm.put(ch, 1)[ FD ]
Line_6 $$ char ch = ' '-->Line_10 $$ hm.put(ch, 1)[ FD ]
Line_9 $$ if (!hm.containsKey(ch)) -->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ CD ]
Line_5 $$ HashMap<Character, Integer> hm = new HashMap()-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_6 $$ char ch = ' '-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_5 $$ HashMap<Character, Integer> hm = new HashMap()-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_6 $$ char ch = ' '-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_16 $$ System.out.println((hm.size() == 2 && hm.get(ch) == 2) ? "Yes" : "No")[ CD ]
Line_5 $$ HashMap<Character, Integer> hm = new HashMap()-->Line_16 $$ System.out.println((hm.size() == 2 && hm.get(ch) == 2) ? "Yes" : "No")[ FD ]
Line_5 $$ HashMap<Character, Integer> hm = new HashMap()-->Line_16 $$ System.out.println((hm.size() == 2 && hm.get(ch) == 2) ? "Yes" : "No")[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_16 $$ System.out.println((hm.size() == 2 && hm.get(ch) == 2) ? "Yes" : "No")[ FD ]
Line_6 $$ char ch = ' '-->Line_16 $$ System.out.println((hm.size() == 2 && hm.get(ch) == 2) ? "Yes" : "No")[ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_8 $$ ch = S.charAt(i)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_9 $$ if (!hm.containsKey(ch)) [ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_10 $$ hm.put(ch, 1)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
Line_8 $$ ch = S.charAt(i)-->Line_13 $$ hm.put(ch, hm.get(ch) + 1)[ FD ]
