Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String S = sc.next()[ CD ]
Line_4 $$ String S = sc.next()-->Line_4 $$ String S = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String S = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_4 $$ String S = sc.next()-->Line_7 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ String s = S.substring(i, i + 1)[ CD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_8 $$ String s = S.substring(i, i + 1)[ CD ]
Line_4 $$ String S = sc.next()-->Line_8 $$ String s = S.substring(i, i + 1)[ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ String s = S.substring(i, i + 1)[ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_9 $$ Integer sCount = 1[ CD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_10 $$ if (sMap.containsKey(s)) [ CD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_10 $$ if (sMap.containsKey(s)) [ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_10 $$ if (sMap.containsKey(s)) [ FD ]
Line_10 $$ if (sMap.containsKey(s)) -->Line_10 $$ if (sMap.containsKey(s)) [ CD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_10 $$ if (sMap.containsKey(s)) [ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_10 $$ if (sMap.containsKey(s)) [ FD ]
Line_10 $$ if (sMap.containsKey(s)) -->Line_11 $$ sCount = sMap.get(s) + 1[ CD ]
Line_9 $$ Integer sCount = 1-->Line_11 $$ sCount = sMap.get(s) + 1[ FD ]
Line_11 $$ sCount = sMap.get(s) + 1-->Line_11 $$ sCount = sMap.get(s) + 1[ FD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_11 $$ sCount = sMap.get(s) + 1[ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_11 $$ sCount = sMap.get(s) + 1[ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ sMap.put(s, sCount)[ CD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_13 $$ sMap.put(s, sCount)[ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_13 $$ sMap.put(s, sCount)[ FD ]
Line_9 $$ Integer sCount = 1-->Line_13 $$ sMap.put(s, sCount)[ FD ]
Line_11 $$ sCount = sMap.get(s) + 1-->Line_13 $$ sMap.put(s, sCount)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ if (sMap.size() != 2) [ CD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_15 $$ if (sMap.size() != 2) [ FD ]
Line_15 $$ if (sMap.size() != 2) -->Line_16 $$ System.out.println("No")[ CD ]
Line_15 $$ if (sMap.size() != 2) -->Line_17 $$ return[ CD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_19 $$ for (String s : sMap.keySet()) [ FD ]
Line_6 $$ Map<String, Integer> sMap = new HashMap<String, Integer>()-->Line_20 $$ if (sMap.get(s) == 2) [ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_20 $$ if (sMap.get(s) == 2) [ FD ]
Line_19 $$ for (String s : sMap.keySet()) -->Line_20 $$ if (sMap.get(s) == 2) [ FD ]
Line_20 $$ if (sMap.get(s) == 2) -->Line_21 $$ System.out.println("Yes")[ CD ]
Line_20 $$ if (sMap.get(s) == 2) -->Line_22 $$ return[ CD ]
Line_20 $$ if (sMap.get(s) == 2) -->Line_24 $$ System.out.println("No")[ CD ]
Line_20 $$ if (sMap.get(s) == 2) -->Line_25 $$ return[ CD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ String s = S.substring(i, i + 1)[ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_10 $$ if (sMap.containsKey(s)) [ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_10 $$ if (sMap.containsKey(s)) [ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_11 $$ sCount = sMap.get(s) + 1[ FD ]
Line_8 $$ String s = S.substring(i, i + 1)-->Line_13 $$ sMap.put(s, sCount)[ FD ]
Line_9 $$ Integer sCount = 1-->Line_13 $$ sMap.put(s, sCount)[ FD ]
Line_11 $$ sCount = sMap.get(s) + 1-->Line_13 $$ sMap.put(s, sCount)[ FD ]
