Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_5 $$ int K = sc.nextInt()-->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int K = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double A = Math.log(N) / Math.log(K)[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ double A = Math.log(N) / Math.log(K)[ FD ]
Line_5 $$ int K = sc.nextInt()-->Line_6 $$ double A = Math.log(N) / Math.log(K)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int n = 0; n <= A; n++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ double A = Math.log(N) / Math.log(K)-->Line_7 $$ for (int n = 0; n <= A; n++) [ FD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_7 $$ for (int n = 0; n <= A; n++) [ CD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_7 $$ for (int n = 0; n <= A; n++) [ CD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_7 $$ for (int n = 0; n <= A; n++) [ FD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_8 $$ if (A < n + 1) [ CD ]
Line_6 $$ double A = Math.log(N) / Math.log(K)-->Line_8 $$ if (A < n + 1) [ FD ]
Line_8 $$ if (A < n + 1) -->Line_8 $$ System.out.println(n + 1)[ CD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_7 $$ for (int n = 0; n <= A; n++) [ FD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_7 $$ for (int n = 0; n <= A; n++) [ FD ]
Line_7 $$ for (int n = 0; n <= A; n++) -->Line_7 $$ for (int n = 0; n <= A; n++) [ FD ]
