Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String[] arr = reader.readLine().split(" ")[ CD ]
Line_4 $$ String[] arr = reader.readLine().split(" ")-->Line_4 $$ String[] arr = reader.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] arr = reader.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int N = Integer.parseInt(arr[0])[ CD ]
Line_5 $$ int N = Integer.parseInt(arr[0])-->Line_5 $$ int N = Integer.parseInt(arr[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int K = Integer.parseInt(arr[1])[ CD ]
Line_6 $$ int K = Integer.parseInt(arr[1])-->Line_6 $$ int K = Integer.parseInt(arr[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int cnt = 1[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ while (Math.pow(K, cnt) <= N) cnt++[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_5 $$ int N = Integer.parseInt(arr[0])-->Line_8 $$ while (Math.pow(K, cnt) <= N) cnt++[ FD ]
Line_6 $$ int K = Integer.parseInt(arr[1])-->Line_8 $$ while (Math.pow(K, cnt) <= N) cnt++[ FD ]
Line_7 $$ int cnt = 1-->Line_8 $$ while (Math.pow(K, cnt) <= N) cnt++[ FD ]
Line_8 $$ while (Math.pow(K, cnt) <= N) cnt++-->Line_9 $$ cnt++[ CD ]
Line_7 $$ int cnt = 1-->Line_9 $$ cnt++[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ System.out.println(cnt)[ CD ]
Line_7 $$ int cnt = 1-->Line_10 $$ System.out.println(cnt)[ FD ]
