Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws FileNotFoundException [ CD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_5 $$ int K = sc.nextInt()-->Line_5 $$ int K = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int K = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_6 $$ int q = K[ CD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_7 $$ int count = 1[ CD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_8 $$ while (q <= N) [ CD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_2 $$ public static void main(String[] args) throws FileNotFoundException [ CD ]
Line_6 $$ int q = K-->Line_8 $$ while (q <= N) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_8 $$ while (q <= N) [ FD ]
Line_8 $$ while (q <= N) -->Line_9 $$ q *= K[ CD ]
Line_9 $$ q *= K-->Line_9 $$ q *= K[ FD ]
Line_6 $$ int q = K-->Line_9 $$ q *= K[ FD ]
Line_5 $$ int K = sc.nextInt()-->Line_9 $$ q *= K[ FD ]
Line_8 $$ while (q <= N) -->Line_10 $$ count++[ CD ]
Line_7 $$ int count = 1-->Line_10 $$ count++[ FD ]
Line_2 $$ public static void main(String[] args) throws FileNotFoundException -->Line_12 $$ System.out.println(count)[ CD ]
Line_7 $$ int count = 1-->Line_12 $$ System.out.println(count)[ FD ]
Line_9 $$ q *= K-->Line_8 $$ while (q <= N) [ FD ]
Line_9 $$ q *= K-->Line_8 $$ while (q <= N) [ FD ]
