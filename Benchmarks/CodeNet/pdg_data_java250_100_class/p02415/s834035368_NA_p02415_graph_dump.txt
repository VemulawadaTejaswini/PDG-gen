Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ private static final String SPACE = " ";[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) -->Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) [ FD ]
Line_7 $$ String inputStr = null-->Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) [ FD ]
Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) -->Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) [ CD ]
Line_5 $$ LineNumberReader lineNumReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) [ FD ]
Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) -->Line_15 $$ if (lineNumReader.getLineNumber() == 1) [ CD ]
Line_5 $$ LineNumberReader lineNumReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_15 $$ if (lineNumReader.getLineNumber() == 1) [ FD ]
Line_15 $$ if (lineNumReader.getLineNumber() == 1) -->Line_16 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_15 $$ if (lineNumReader.getLineNumber() == 1) -->Line_17 $$ char temp[ CD ]
Line_15 $$ if (lineNumReader.getLineNumber() == 1) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ CD ]
Line_15 $$ if (lineNumReader.getLineNumber() == 1) -->Line_15 $$ if (lineNumReader.getLineNumber() == 1) [ CD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ CD ]
Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ FD ]
Line_7 $$ String inputStr = null-->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ CD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ CD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_19 $$ temp = inputStr.charAt(i)[ CD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_19 $$ temp = inputStr.charAt(i)[ FD ]
Line_17 $$ char temp-->Line_19 $$ temp = inputStr.charAt(i)[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_19 $$ temp = inputStr.charAt(i)[ CD ]
Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) -->Line_19 $$ temp = inputStr.charAt(i)[ FD ]
Line_7 $$ String inputStr = null-->Line_19 $$ temp = inputStr.charAt(i)[ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_19 $$ temp = inputStr.charAt(i)[ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_20 $$ if (Character.isUpperCase(temp)) [ CD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_20 $$ if (Character.isUpperCase(temp)) [ FD ]
Line_17 $$ char temp-->Line_20 $$ if (Character.isUpperCase(temp)) [ FD ]
Line_20 $$ if (Character.isUpperCase(temp)) -->Line_20 $$ if (Character.isUpperCase(temp)) [ CD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_20 $$ if (Character.isUpperCase(temp)) [ FD ]
Line_17 $$ char temp-->Line_20 $$ if (Character.isUpperCase(temp)) [ FD ]
Line_20 $$ if (Character.isUpperCase(temp)) -->Line_21 $$ sb.append(Character.toLowerCase(temp))[ CD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(Character.toLowerCase(temp))[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_21 $$ sb.append(Character.toLowerCase(temp))[ FD ]
Line_17 $$ char temp-->Line_21 $$ sb.append(Character.toLowerCase(temp))[ FD ]
Line_20 $$ if (Character.isUpperCase(temp)) -->Line_22 $$ if (Character.isLowerCase(temp)) [ CD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_22 $$ if (Character.isLowerCase(temp)) [ FD ]
Line_17 $$ char temp-->Line_22 $$ if (Character.isLowerCase(temp)) [ FD ]
Line_22 $$ if (Character.isLowerCase(temp)) -->Line_22 $$ if (Character.isLowerCase(temp)) [ CD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_22 $$ if (Character.isLowerCase(temp)) [ FD ]
Line_17 $$ char temp-->Line_22 $$ if (Character.isLowerCase(temp)) [ FD ]
Line_22 $$ if (Character.isLowerCase(temp)) -->Line_23 $$ sb.append(Character.toUpperCase(temp))[ CD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append(Character.toUpperCase(temp))[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_23 $$ sb.append(Character.toUpperCase(temp))[ FD ]
Line_17 $$ char temp-->Line_23 $$ sb.append(Character.toUpperCase(temp))[ FD ]
Line_22 $$ if (Character.isLowerCase(temp)) -->Line_25 $$ sb.append(temp)[ CD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_25 $$ sb.append(temp)[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_25 $$ sb.append(temp)[ FD ]
Line_17 $$ char temp-->Line_25 $$ sb.append(temp)[ FD ]
Line_15 $$ if (lineNumReader.getLineNumber() == 1) -->Line_28 $$ outputStr = sb.toString()[ CD ]
Line_28 $$ outputStr = sb.toString()-->Line_28 $$ outputStr = sb.toString()[ FD ]
Line_8 $$ String outputStr = null-->Line_28 $$ outputStr = sb.toString()[ FD ]
Line_28 $$ outputStr = sb.toString()-->Line_28 $$ outputStr = sb.toString()[ CD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ outputStr = sb.toString()[ FD ]
Line_14 $$ while ((inputStr = lineNumReader.readLine()) != null) -->Line_30 $$ if (lineNumReader.getLineNumber() == 1) [ CD ]
Line_5 $$ LineNumberReader lineNumReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_30 $$ if (lineNumReader.getLineNumber() == 1) [ FD ]
Line_28 $$ outputStr = sb.toString()-->Line_34 $$ System.out.println(outputStr)[ FD ]
Line_8 $$ String outputStr = null-->Line_34 $$ System.out.println(outputStr)[ FD ]
Line_5 $$ LineNumberReader lineNumReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_35 $$ lineNumReader.close()[ FD ]
Line_16 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ outputStr = sb.toString()[ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_18 $$ for (int i = 0; i < inputStr.length(); i++) [ FD ]
Line_18 $$ for (int i = 0; i < inputStr.length(); i++) -->Line_19 $$ temp = inputStr.charAt(i)[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_20 $$ if (Character.isUpperCase(temp)) [ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_20 $$ if (Character.isUpperCase(temp)) [ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_21 $$ sb.append(Character.toLowerCase(temp))[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_22 $$ if (Character.isLowerCase(temp)) [ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_22 $$ if (Character.isLowerCase(temp)) [ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_23 $$ sb.append(Character.toUpperCase(temp))[ FD ]
Line_19 $$ temp = inputStr.charAt(i)-->Line_25 $$ sb.append(temp)[ FD ]
