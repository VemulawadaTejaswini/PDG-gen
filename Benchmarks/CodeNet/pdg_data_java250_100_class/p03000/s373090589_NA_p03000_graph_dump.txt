Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String W = in.readLine()[ CD ]
Line_4 $$ String W = in.readLine()-->Line_4 $$ String W = in.readLine()[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String W = in.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ long N = Long.parseLong(W.split(" ")[0])[ CD ]
Line_5 $$ long N = Long.parseLong(W.split(" ")[0])-->Line_5 $$ long N = Long.parseLong(W.split(" ")[0])[ CD ]
Line_4 $$ String W = in.readLine()-->Line_5 $$ long N = Long.parseLong(W.split(" ")[0])[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ long X = Long.parseLong(W.split(" ")[1])[ CD ]
Line_6 $$ long X = Long.parseLong(W.split(" ")[1])-->Line_6 $$ long X = Long.parseLong(W.split(" ")[1])[ CD ]
Line_4 $$ String W = in.readLine()-->Line_6 $$ long X = Long.parseLong(W.split(" ")[1])[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ String[] Wi = in.readLine().split(" ")[ CD ]
Line_7 $$ String[] Wi = in.readLine().split(" ")-->Line_7 $$ String[] Wi = in.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ String[] Wi = in.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int n = 1[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ long p = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_11 $$ p += Integer.parseInt(Wi[i])[ CD ]
Line_11 $$ p += Integer.parseInt(Wi[i])-->Line_11 $$ p += Integer.parseInt(Wi[i])[ FD ]
Line_9 $$ long p = 0-->Line_11 $$ p += Integer.parseInt(Wi[i])[ FD ]
Line_11 $$ p += Integer.parseInt(Wi[i])-->Line_11 $$ p += Integer.parseInt(Wi[i])[ CD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_12 $$ if (p <= X) [ CD ]
Line_11 $$ p += Integer.parseInt(Wi[i])-->Line_12 $$ if (p <= X) [ FD ]
Line_9 $$ long p = 0-->Line_12 $$ if (p <= X) [ FD ]
Line_6 $$ long X = Long.parseLong(W.split(" ")[1])-->Line_12 $$ if (p <= X) [ FD ]
Line_12 $$ if (p <= X) -->Line_13 $$ n++[ CD ]
Line_8 $$ int n = 1-->Line_13 $$ n++[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ System.out.println(n)[ CD ]
Line_8 $$ int n = 1-->Line_16 $$ System.out.println(n)[ FD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < Wi.length; i++) -->Line_10 $$ for (int i = 0; i < Wi.length; i++) [ FD ]
Line_11 $$ p += Integer.parseInt(Wi[i])-->Line_12 $$ if (p <= X) [ FD ]
