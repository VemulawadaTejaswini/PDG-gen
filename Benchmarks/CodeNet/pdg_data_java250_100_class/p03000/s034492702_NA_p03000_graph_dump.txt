Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String input1 = null[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String input2 = null[ CD ]
Line_4 $$ String input1 = null-->Line_7 $$ input1 = br.readLine()[ FD ]
Line_7 $$ input1 = br.readLine()-->Line_7 $$ input1 = br.readLine()[ FD ]
Line_7 $$ input1 = br.readLine()-->Line_7 $$ input1 = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ input1 = br.readLine()[ FD ]
Line_5 $$ String input2 = null-->Line_8 $$ input2 = br.readLine()[ FD ]
Line_8 $$ input2 = br.readLine()-->Line_8 $$ input2 = br.readLine()[ FD ]
Line_8 $$ input2 = br.readLine()-->Line_8 $$ input2 = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ input2 = br.readLine()[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ br.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])[ CD ]
Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])-->Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])[ CD ]
Line_4 $$ String input1 = null-->Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])[ FD ]
Line_7 $$ input1 = br.readLine()-->Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int x = Integer.parseInt(input1.split(" ")[1])[ CD ]
Line_13 $$ int x = Integer.parseInt(input1.split(" ")[1])-->Line_13 $$ int x = Integer.parseInt(input1.split(" ")[1])[ CD ]
Line_4 $$ String input1 = null-->Line_13 $$ int x = Integer.parseInt(input1.split(" ")[1])[ FD ]
Line_7 $$ input1 = br.readLine()-->Line_13 $$ int x = Integer.parseInt(input1.split(" ")[1])[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ List<Integer> boundDistance = new ArrayList()[ CD ]
Line_5 $$ String input2 = null-->Line_15 $$ for (String s : input2.split(" ")) [ FD ]
Line_8 $$ input2 = br.readLine()-->Line_15 $$ for (String s : input2.split(" ")) [ FD ]
Line_14 $$ List<Integer> boundDistance = new ArrayList()-->Line_16 $$ boundDistance.add(Integer.parseInt(s))[ FD ]
Line_15 $$ for (String s : input2.split(" ")) -->Line_16 $$ boundDistance.add(Integer.parseInt(s))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ int boundPoint, countUnderX[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ boundPoint = 0[ CD ]
Line_18 $$ int boundPoint, countUnderX-->Line_19 $$ boundPoint = 0[ FD ]
Line_19 $$ boundPoint = 0-->Line_19 $$ boundPoint = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ countUnderX = 0[ CD ]
Line_18 $$ int boundPoint, countUnderX-->Line_20 $$ countUnderX = 0[ FD ]
Line_20 $$ countUnderX = 0-->Line_20 $$ countUnderX = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])-->Line_21 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ for (int i = 0; i <= n; i++) [ CD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_22 $$ if (boundPoint <= x)[ CD ]
Line_18 $$ int boundPoint, countUnderX-->Line_22 $$ if (boundPoint <= x)[ FD ]
Line_19 $$ boundPoint = 0-->Line_22 $$ if (boundPoint <= x)[ FD ]
Line_13 $$ int x = Integer.parseInt(input1.split(" ")[1])-->Line_22 $$ if (boundPoint <= x)[ FD ]
Line_22 $$ if (boundPoint <= x)-->Line_22 $$ countUnderX++[ CD ]
Line_18 $$ int boundPoint, countUnderX-->Line_22 $$ countUnderX++[ FD ]
Line_20 $$ countUnderX = 0-->Line_22 $$ countUnderX++[ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_23 $$ if (i != n)[ CD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_23 $$ if (i != n)[ FD ]
Line_13 $$ int n = Integer.parseInt(input1.split(" ")[0])-->Line_23 $$ if (i != n)[ FD ]
Line_23 $$ if (i != n)-->Line_23 $$ boundPoint += boundDistance.get(i)[ CD ]
Line_23 $$ boundPoint += boundDistance.get(i)-->Line_23 $$ boundPoint += boundDistance.get(i)[ FD ]
Line_18 $$ int boundPoint, countUnderX-->Line_23 $$ boundPoint += boundDistance.get(i)[ FD ]
Line_19 $$ boundPoint = 0-->Line_23 $$ boundPoint += boundDistance.get(i)[ FD ]
Line_23 $$ boundPoint += boundDistance.get(i)-->Line_23 $$ boundPoint += boundDistance.get(i)[ CD ]
Line_14 $$ List<Integer> boundDistance = new ArrayList()-->Line_23 $$ boundPoint += boundDistance.get(i)[ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_23 $$ boundPoint += boundDistance.get(i)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_25 $$ System.out.println(countUnderX)[ CD ]
Line_18 $$ int boundPoint, countUnderX-->Line_25 $$ System.out.println(countUnderX)[ FD ]
Line_20 $$ countUnderX = 0-->Line_25 $$ System.out.println(countUnderX)[ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_21 $$ for (int i = 0; i <= n; i++) [ FD ]
Line_23 $$ boundPoint += boundDistance.get(i)-->Line_22 $$ if (boundPoint <= x)[ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_23 $$ if (i != n)[ FD ]
Line_21 $$ for (int i = 0; i <= n; i++) -->Line_23 $$ boundPoint += boundDistance.get(i)[ FD ]
