Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int a = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int b = sc.nextInt()[ CD ]
Line_5 $$ int b = sc.nextInt()-->Line_5 $$ int b = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int b = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int c = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int lB = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ boolean flag = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ if (b / 100 > 0) [ CD ]
Line_9 $$ if (b / 100 > 0) -->Line_10 $$ lB = 3[ CD ]
Line_7 $$ int lB = 0-->Line_10 $$ lB = 3[ FD ]
Line_10 $$ lB = 3-->Line_10 $$ lB = 3[ FD ]
Line_9 $$ if (b / 100 > 0) -->Line_11 $$ if (b / 10 > 0) [ CD ]
Line_11 $$ if (b / 10 > 0) -->Line_12 $$ lB = 2[ CD ]
Line_7 $$ int lB = 0-->Line_12 $$ lB = 2[ FD ]
Line_10 $$ lB = 3-->Line_12 $$ lB = 2[ FD ]
Line_12 $$ lB = 2-->Line_12 $$ lB = 2[ FD ]
Line_11 $$ if (b / 10 > 0) -->Line_14 $$ lB = 1[ CD ]
Line_7 $$ int lB = 0-->Line_14 $$ lB = 1[ FD ]
Line_10 $$ lB = 3-->Line_14 $$ lB = 1[ FD ]
Line_12 $$ lB = 2-->Line_14 $$ lB = 1[ FD ]
Line_14 $$ lB = 1-->Line_14 $$ lB = 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ CD ]
Line_6 $$ int c = 0-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_16 $$ c = a * (int) Math.pow(10, lB) + b-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_5 $$ int b = sc.nextInt()-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_7 $$ int lB = 0-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_10 $$ lB = 3-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_12 $$ lB = 2-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_14 $$ lB = 1-->Line_16 $$ c = a * (int) Math.pow(10, lB) + b[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ for (int i = 1; i < 500; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_17 $$ for (int i = 1; i < 500; i++) [ CD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_17 $$ for (int i = 1; i < 500; i++) [ CD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_17 $$ for (int i = 1; i < 500; i++) [ FD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_18 $$ if (c == (int) Math.pow(i, 2)) [ CD ]
Line_6 $$ int c = 0-->Line_18 $$ if (c == (int) Math.pow(i, 2)) [ FD ]
Line_16 $$ c = a * (int) Math.pow(10, lB) + b-->Line_18 $$ if (c == (int) Math.pow(i, 2)) [ FD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_18 $$ if (c == (int) Math.pow(i, 2)) [ FD ]
Line_18 $$ if (c == (int) Math.pow(i, 2)) -->Line_19 $$ System.out.println("Yes")[ CD ]
Line_18 $$ if (c == (int) Math.pow(i, 2)) -->Line_20 $$ flag = true[ CD ]
Line_20 $$ flag = true-->Line_20 $$ flag = true[ FD ]
Line_8 $$ boolean flag = false-->Line_20 $$ flag = true[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ if (flag == false) [ CD ]
Line_20 $$ flag = true-->Line_24 $$ if (flag == false) [ FD ]
Line_8 $$ boolean flag = false-->Line_24 $$ if (flag == false) [ FD ]
Line_24 $$ if (flag == false) -->Line_25 $$ System.out.println("No")[ CD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_17 $$ for (int i = 1; i < 500; i++) [ FD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_17 $$ for (int i = 1; i < 500; i++) [ FD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_17 $$ for (int i = 1; i < 500; i++) [ FD ]
Line_17 $$ for (int i = 1; i < 500; i++) -->Line_18 $$ if (c == (int) Math.pow(i, 2)) [ FD ]
