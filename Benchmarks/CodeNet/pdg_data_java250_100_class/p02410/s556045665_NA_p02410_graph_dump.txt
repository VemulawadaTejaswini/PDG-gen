Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ int n, m[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] inputline = stdIn.readLine().split(" ")[ CD ]
Line_5 $$ String[] inputline = stdIn.readLine().split(" ")-->Line_5 $$ String[] inputline = stdIn.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] inputline = stdIn.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ n = Integer.parseInt(inputline[0])[ CD ]
Line_3 $$ int n, m-->Line_6 $$ n = Integer.parseInt(inputline[0])[ FD ]
Line_6 $$ n = Integer.parseInt(inputline[0])-->Line_6 $$ n = Integer.parseInt(inputline[0])[ FD ]
Line_6 $$ n = Integer.parseInt(inputline[0])-->Line_6 $$ n = Integer.parseInt(inputline[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ m = Integer.parseInt(inputline[1])[ CD ]
Line_3 $$ int n, m-->Line_7 $$ m = Integer.parseInt(inputline[1])[ FD ]
Line_7 $$ m = Integer.parseInt(inputline[1])-->Line_7 $$ m = Integer.parseInt(inputline[1])[ FD ]
Line_7 $$ m = Integer.parseInt(inputline[1])-->Line_7 $$ m = Integer.parseInt(inputline[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int[][] matrixA = new int[n][m][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_3 $$ int n, m-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ n = Integer.parseInt(inputline[0])-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ inputline = stdIn.readLine().split(" ")[ CD ]
Line_10 $$ inputline = stdIn.readLine().split(" ")-->Line_10 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_5 $$ String[] inputline = stdIn.readLine().split(" ")-->Line_10 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_10 $$ inputline = stdIn.readLine().split(" ")-->Line_10 $$ inputline = stdIn.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int j = 0; j < m; j++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_3 $$ int n, m-->Line_11 $$ for (int j = 0; j < m; j++) [ FD ]
Line_7 $$ m = Integer.parseInt(inputline[1])-->Line_11 $$ for (int j = 0; j < m; j++) [ FD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_11 $$ for (int j = 0; j < m; j++) [ CD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_11 $$ for (int j = 0; j < m; j++) [ CD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_11 $$ for (int j = 0; j < m; j++) [ FD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_12 $$ matrixA[i][j] = Integer.parseInt(inputline[j])[ CD ]
Line_12 $$ matrixA[i][j] = Integer.parseInt(inputline[j])-->Line_12 $$ matrixA[i][j] = Integer.parseInt(inputline[j])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ int[] vectorB = new int[m][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_16 $$ for (int i = 0; i < m; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_3 $$ int n, m-->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_7 $$ m = Integer.parseInt(inputline[1])-->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ CD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ CD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_17 $$ inputline = stdIn.readLine().split(" ")[ CD ]
Line_17 $$ inputline = stdIn.readLine().split(" ")-->Line_17 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_10 $$ inputline = stdIn.readLine().split(" ")-->Line_17 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_5 $$ String[] inputline = stdIn.readLine().split(" ")-->Line_17 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_17 $$ inputline = stdIn.readLine().split(" ")-->Line_17 $$ inputline = stdIn.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in))-->Line_17 $$ inputline = stdIn.readLine().split(" ")[ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_18 $$ vectorB[i] = Integer.parseInt(inputline[0])[ CD ]
Line_18 $$ vectorB[i] = Integer.parseInt(inputline[0])-->Line_18 $$ vectorB[i] = Integer.parseInt(inputline[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ int[] vectorC = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_21 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_3 $$ int n, m-->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ n = Integer.parseInt(inputline[0])-->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ CD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ CD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_22 $$ for (int j = 0; j < m; j++) [ CD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_3 $$ int n, m-->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_7 $$ m = Integer.parseInt(inputline[1])-->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ CD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ CD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_23 $$ vectorC[i] += (matrixA[i][j] * vectorB[j])[ CD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_27 $$ System.out.println(i)[ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_27 $$ System.out.println(i)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_27 $$ System.out.println(i)[ FD ]
Line_26 $$ for (int i : vectorC) -->Line_27 $$ System.out.println(i)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_11 $$ for (int j = 0; j < m; j++) [ FD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_11 $$ for (int j = 0; j < m; j++) [ FD ]
Line_11 $$ for (int j = 0; j < m; j++) -->Line_11 $$ for (int j = 0; j < m; j++) [ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ for (int i = 0; i < m; i++) -->Line_16 $$ for (int i = 0; i < m; i++) [ FD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < n; i++) [ FD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
Line_22 $$ for (int j = 0; j < m; j++) -->Line_22 $$ for (int j = 0; j < m; j++) [ FD ]
