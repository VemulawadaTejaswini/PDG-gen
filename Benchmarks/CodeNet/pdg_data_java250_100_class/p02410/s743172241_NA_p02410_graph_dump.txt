Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String first_line = input.readLine()[ CD ]
Line_4 $$ String first_line = input.readLine()-->Line_4 $$ String first_line = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String first_line = input.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] array_of_li_col = first_line.split(" ")[ CD ]
Line_5 $$ String[] array_of_li_col = first_line.split(" ")-->Line_5 $$ String[] array_of_li_col = first_line.split(" ")[ CD ]
Line_4 $$ String first_line = input.readLine()-->Line_5 $$ String[] array_of_li_col = first_line.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int line = Integer.parseInt(array_of_li_col[0])[ CD ]
Line_6 $$ int line = Integer.parseInt(array_of_li_col[0])-->Line_6 $$ int line = Integer.parseInt(array_of_li_col[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int column = Integer.parseInt(array_of_li_col[1])[ CD ]
Line_7 $$ int column = Integer.parseInt(array_of_li_col[1])-->Line_7 $$ int column = Integer.parseInt(array_of_li_col[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int matrix_array_A[][] = new int[line][column][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int vector_array_b[] = new int[column][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ int line = Integer.parseInt(array_of_li_col[0])-->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_11 $$ String elements_A = input.readLine()[ CD ]
Line_11 $$ String elements_A = input.readLine()-->Line_11 $$ String elements_A = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ String elements_A = input.readLine()[ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_12 $$ String[] elements_A_array = elements_A.split(" ")[ CD ]
Line_12 $$ String[] elements_A_array = elements_A.split(" ")-->Line_12 $$ String[] elements_A_array = elements_A.split(" ")[ CD ]
Line_11 $$ String elements_A = input.readLine()-->Line_12 $$ String[] elements_A_array = elements_A.split(" ")[ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ CD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_7 $$ int column = Integer.parseInt(array_of_li_col[1])-->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ CD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ CD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_14 $$ int elements_A_num = Integer.parseInt(elements_A_array[column_A])[ CD ]
Line_14 $$ int elements_A_num = Integer.parseInt(elements_A_array[column_A])-->Line_14 $$ int elements_A_num = Integer.parseInt(elements_A_array[column_A])[ CD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_15 $$ matrix_array_A[line_A][column_A] = elements_A_num[ CD ]
Line_14 $$ int elements_A_num = Integer.parseInt(elements_A_array[column_A])-->Line_15 $$ matrix_array_A[line_A][column_A] = elements_A_num[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_7 $$ int column = Integer.parseInt(array_of_li_col[1])-->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ CD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ CD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_19 $$ String elements_b = input.readLine()[ CD ]
Line_19 $$ String elements_b = input.readLine()-->Line_19 $$ String elements_b = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_19 $$ String elements_b = input.readLine()[ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)[ CD ]
Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)-->Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)[ CD ]
Line_19 $$ String elements_b = input.readLine()-->Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)[ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_21 $$ vector_array_b[column_b] = elements_b_num[ CD ]
Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)-->Line_21 $$ vector_array_b[column_b] = elements_b_num[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_23 $$ int elements_Ci = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_6 $$ int line = Integer.parseInt(array_of_li_col[0])-->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ CD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ CD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_7 $$ int column = Integer.parseInt(array_of_li_col[1])-->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ CD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ CD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_26 $$ elements_Ci += matrix_array_A[line_A][column_A] * vector_array_b[column_A][ CD ]
Line_26 $$ elements_Ci += matrix_array_A[line_A][column_A] * vector_array_b[column_A]-->Line_26 $$ elements_Ci += matrix_array_A[line_A][column_A] * vector_array_b[column_A][ FD ]
Line_23 $$ int elements_Ci = 0-->Line_26 $$ elements_Ci += matrix_array_A[line_A][column_A] * vector_array_b[column_A][ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_28 $$ System.out.println(elements_Ci)[ CD ]
Line_26 $$ elements_Ci += matrix_array_A[line_A][column_A] * vector_array_b[column_A]-->Line_28 $$ System.out.println(elements_Ci)[ FD ]
Line_23 $$ int elements_Ci = 0-->Line_28 $$ System.out.println(elements_Ci)[ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_29 $$ elements_Ci = 0[ CD ]
Line_26 $$ elements_Ci += matrix_array_A[line_A][column_A] * vector_array_b[column_A]-->Line_29 $$ elements_Ci = 0[ FD ]
Line_29 $$ elements_Ci = 0-->Line_29 $$ elements_Ci = 0[ FD ]
Line_23 $$ int elements_Ci = 0-->Line_29 $$ elements_Ci = 0[ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_10 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_10 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_11 $$ String elements_A = input.readLine()-->Line_12 $$ String[] elements_A_array = elements_A.split(" ")[ FD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_13 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_13 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_14 $$ int elements_A_num = Integer.parseInt(elements_A_array[column_A])-->Line_15 $$ matrix_array_A[line_A][column_A] = elements_A_num[ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ FD ]
Line_18 $$ for (int column_b = 0; column_b < column; column_b++) -->Line_18 $$ for (int column_b = 0; column_b < column; column_b++) [ FD ]
Line_19 $$ String elements_b = input.readLine()-->Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)[ FD ]
Line_20 $$ int elements_b_num = Integer.parseInt(elements_b)-->Line_21 $$ vector_array_b[column_b] = elements_b_num[ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_24 $$ for (int line_A = 0; line_A < line; line_A++) -->Line_24 $$ for (int line_A = 0; line_A < line; line_A++) [ FD ]
Line_29 $$ elements_Ci = 0-->Line_28 $$ System.out.println(elements_Ci)[ FD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
Line_25 $$ for (int column_A = 0; column_A < column; column_A++) -->Line_25 $$ for (int column_A = 0; column_A < column; column_A++) [ FD ]
