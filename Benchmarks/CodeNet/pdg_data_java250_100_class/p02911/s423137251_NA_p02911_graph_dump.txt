Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int k = sc.nextInt()[ CD ]
Line_5 $$ int k = sc.nextInt()-->Line_5 $$ int k = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int k = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int q = sc.nextInt()[ CD ]
Line_6 $$ int q = sc.nextInt()-->Line_6 $$ int q = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int q = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Map<Integer, Integer> map = new HashMap()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < q; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ int q = sc.nextInt()-->Line_8 $$ for (int i = 0; i < q; i++) [ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_8 $$ for (int i = 0; i < q; i++) [ CD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_8 $$ for (int i = 0; i < q; i++) [ CD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_8 $$ for (int i = 0; i < q; i++) [ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_9 $$ int t = sc.nextInt()[ CD ]
Line_9 $$ int t = sc.nextInt()-->Line_9 $$ int t = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ int t = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_10 $$ int count = map.getOrDefault(t, 0)[ CD ]
Line_10 $$ int count = map.getOrDefault(t, 0)-->Line_10 $$ int count = map.getOrDefault(t, 0)[ CD ]
Line_7 $$ Map<Integer, Integer> map = new HashMap()-->Line_10 $$ int count = map.getOrDefault(t, 0)[ FD ]
Line_9 $$ int t = sc.nextInt()-->Line_10 $$ int count = map.getOrDefault(t, 0)[ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_11 $$ map.put(t, ++count)[ CD ]
Line_7 $$ Map<Integer, Integer> map = new HashMap()-->Line_11 $$ map.put(t, ++count)[ FD ]
Line_9 $$ int t = sc.nextInt()-->Line_11 $$ map.put(t, ++count)[ FD ]
Line_10 $$ int count = map.getOrDefault(t, 0)-->Line_11 $$ map.put(t, ++count)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_14 $$ int score = k - q + map.getOrDefault(i, 0)[ CD ]
Line_7 $$ Map<Integer, Integer> map = new HashMap()-->Line_14 $$ int score = k - q + map.getOrDefault(i, 0)[ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_14 $$ int score = k - q + map.getOrDefault(i, 0)[ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_14 $$ int score = k - q + map.getOrDefault(i, 0)[ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ if (score > 0) [ CD ]
Line_14 $$ int score = k - q + map.getOrDefault(i, 0)-->Line_15 $$ if (score > 0) [ FD ]
Line_15 $$ if (score > 0) -->Line_16 $$ System.out.println("Yes")[ CD ]
Line_15 $$ if (score > 0) -->Line_18 $$ System.out.println("No")[ CD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_8 $$ for (int i = 0; i < q; i++) [ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_8 $$ for (int i = 0; i < q; i++) [ FD ]
Line_8 $$ for (int i = 0; i < q; i++) -->Line_8 $$ for (int i = 0; i < q; i++) [ FD ]
Line_9 $$ int t = sc.nextInt()-->Line_10 $$ int count = map.getOrDefault(t, 0)[ FD ]
Line_9 $$ int t = sc.nextInt()-->Line_11 $$ map.put(t, ++count)[ FD ]
Line_10 $$ int count = map.getOrDefault(t, 0)-->Line_11 $$ map.put(t, ++count)[ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_13 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= n; i++) -->Line_14 $$ int score = k - q + map.getOrDefault(i, 0)[ FD ]
Line_14 $$ int score = k - q + map.getOrDefault(i, 0)-->Line_15 $$ if (score > 0) [ FD ]
