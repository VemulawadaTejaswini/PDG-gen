Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = in.nextInt()[ CD ]
Line_4 $$ int n = in.nextInt()-->Line_4 $$ int n = in.nextInt()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_4 $$ int n = in.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int k = in.nextInt()[ CD ]
Line_5 $$ int k = in.nextInt()-->Line_5 $$ int k = in.nextInt()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_5 $$ int k = in.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int q = in.nextInt()[ CD ]
Line_6 $$ int q = in.nextInt()-->Line_6 $$ int q = in.nextInt()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_6 $$ int q = in.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] point = new int[n + 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ boolean[] result = new boolean[n + 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ Arrays.fill(point, -q + k)[ CD ]
Line_7 $$ int[] point = new int[n + 1]-->Line_9 $$ Arrays.fill(point, -q + k)[ FD ]
Line_6 $$ int q = in.nextInt()-->Line_9 $$ Arrays.fill(point, -q + k)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 1; i <= q; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ int q = in.nextInt()-->Line_10 $$ for (int i = 1; i <= q; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_10 $$ for (int i = 1; i <= q; i++) [ CD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_10 $$ for (int i = 1; i <= q; i++) [ CD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_10 $$ for (int i = 1; i <= q; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_11 $$ int num = in.nextInt()[ CD ]
Line_11 $$ int num = in.nextInt()-->Line_11 $$ int num = in.nextInt()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_11 $$ int num = in.nextInt()[ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_12 $$ point[num]++[ CD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_13 $$ if (point[num] > 0)[ CD ]
Line_13 $$ if (point[num] > 0)-->Line_13 $$ result[num] = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_4 $$ int n = in.nextInt()-->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_16 $$ if (point[i] > 0)[ CD ]
Line_16 $$ if (point[i] > 0)-->Line_16 $$ System.out.println("Yes")[ CD ]
Line_16 $$ if (point[i] > 0)-->Line_17 $$ System.out.println("No")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ in.close()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_19 $$ in.close()[ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_10 $$ for (int i = 1; i <= q; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_10 $$ for (int i = 1; i <= q; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= q; i++) -->Line_10 $$ for (int i = 1; i <= q; i++) [ FD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_15 $$ for (int i = 1; i <= n; i++) -->Line_15 $$ for (int i = 1; i <= n; i++) [ FD ]
