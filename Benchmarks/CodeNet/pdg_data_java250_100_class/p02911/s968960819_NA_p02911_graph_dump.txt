Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ HashMap<Integer, Integer> hmap = new HashMap()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] temp = r.readLine().split(" ")[ CD ]
Line_5 $$ String[] temp = r.readLine().split(" ")-->Line_5 $$ String[] temp = r.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] temp = r.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int n = Integer.parseInt(temp[0])[ CD ]
Line_6 $$ int n = Integer.parseInt(temp[0])-->Line_6 $$ int n = Integer.parseInt(temp[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ int n = Integer.parseInt(temp[0])-->Line_7 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_7 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_7 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_7 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_8 $$ hmap.put(i, 0)[ CD ]
Line_3 $$ HashMap<Integer, Integer> hmap = new HashMap()-->Line_8 $$ hmap.put(i, 0)[ FD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_8 $$ hmap.put(i, 0)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ int k = Integer.parseInt(temp[1])[ CD ]
Line_10 $$ int k = Integer.parseInt(temp[1])-->Line_10 $$ int k = Integer.parseInt(temp[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ int q = Integer.parseInt(temp[2])[ CD ]
Line_11 $$ int q = Integer.parseInt(temp[2])-->Line_11 $$ int q = Integer.parseInt(temp[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ for (int j = 0; j < q; j++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_11 $$ int q = Integer.parseInt(temp[2])-->Line_12 $$ for (int j = 0; j < q; j++) [ FD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_12 $$ for (int j = 0; j < q; j++) [ CD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_12 $$ for (int j = 0; j < q; j++) [ CD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_12 $$ for (int j = 0; j < q; j++) [ FD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_13 $$ temp = r.readLine().split(" ")[ CD ]
Line_13 $$ temp = r.readLine().split(" ")-->Line_13 $$ temp = r.readLine().split(" ")[ FD ]
Line_5 $$ String[] temp = r.readLine().split(" ")-->Line_13 $$ temp = r.readLine().split(" ")[ FD ]
Line_13 $$ temp = r.readLine().split(" ")-->Line_13 $$ temp = r.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ temp = r.readLine().split(" ")[ FD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_14 $$ int x = Integer.parseInt(temp[0])[ CD ]
Line_14 $$ int x = Integer.parseInt(temp[0])-->Line_14 $$ int x = Integer.parseInt(temp[0])[ CD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ CD ]
Line_3 $$ HashMap<Integer, Integer> hmap = new HashMap()-->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ FD ]
Line_14 $$ int x = Integer.parseInt(temp[0])-->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ FD ]
Line_3 $$ HashMap<Integer, Integer> hmap = new HashMap()-->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ FD ]
Line_14 $$ int x = Integer.parseInt(temp[0])-->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_17 $$ r.close()[ CD ]
Line_4 $$ BufferedReader r = new BufferedReader(new InputStreamReader(System.in))-->Line_17 $$ r.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ for (int l = 1; l <= n; l++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ int n = Integer.parseInt(temp[0])-->Line_18 $$ for (int l = 1; l <= n; l++) [ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_18 $$ for (int l = 1; l <= n; l++) [ CD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_18 $$ for (int l = 1; l <= n; l++) [ CD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_18 $$ for (int l = 1; l <= n; l++) [ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_19 $$ if (hmap.get(l) <= (q - k)) [ CD ]
Line_3 $$ HashMap<Integer, Integer> hmap = new HashMap()-->Line_19 $$ if (hmap.get(l) <= (q - k)) [ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_19 $$ if (hmap.get(l) <= (q - k)) [ FD ]
Line_19 $$ if (hmap.get(l) <= (q - k)) -->Line_20 $$ System.out.println("No")[ CD ]
Line_19 $$ if (hmap.get(l) <= (q - k)) -->Line_23 $$ System.out.println("Yes")[ CD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_7 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_7 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_7 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_7 $$ for (int i = 1; i <= n; i++) -->Line_8 $$ hmap.put(i, 0)[ FD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_12 $$ for (int j = 0; j < q; j++) [ FD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_12 $$ for (int j = 0; j < q; j++) [ FD ]
Line_12 $$ for (int j = 0; j < q; j++) -->Line_12 $$ for (int j = 0; j < q; j++) [ FD ]
Line_14 $$ int x = Integer.parseInt(temp[0])-->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ FD ]
Line_14 $$ int x = Integer.parseInt(temp[0])-->Line_15 $$ hmap.put(x, hmap.get(x) + 1)[ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_18 $$ for (int l = 1; l <= n; l++) [ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_18 $$ for (int l = 1; l <= n; l++) [ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_18 $$ for (int l = 1; l <= n; l++) [ FD ]
Line_18 $$ for (int l = 1; l <= n; l++) -->Line_19 $$ if (hmap.get(l) <= (q - k)) [ FD ]
