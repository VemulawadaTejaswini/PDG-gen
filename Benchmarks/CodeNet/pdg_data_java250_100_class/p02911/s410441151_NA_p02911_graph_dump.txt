Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ PrintWriter out = new PrintWriter(System.out)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ final int N = Integer.parseInt(sc.next())[ CD ]
Line_5 $$ final int N = Integer.parseInt(sc.next())-->Line_5 $$ final int N = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ final int N = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ final int K = Integer.parseInt(sc.next())[ CD ]
Line_6 $$ final int K = Integer.parseInt(sc.next())-->Line_6 $$ final int K = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ final int K = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ final int Q = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ final int Q = Integer.parseInt(sc.next())-->Line_7 $$ final int Q = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ final int Q = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int[] ar = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < Q; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ final int Q = Integer.parseInt(sc.next())-->Line_9 $$ for (int i = 0; i < Q; i++) [ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_9 $$ for (int i = 0; i < Q; i++) [ CD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_9 $$ for (int i = 0; i < Q; i++) [ CD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_9 $$ for (int i = 0; i < Q; i++) [ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_10 $$ int index = Integer.parseInt(sc.next()) - 1[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ int index = Integer.parseInt(sc.next()) - 1[ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_11 $$ ar[index]++[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_5 $$ final int N = Integer.parseInt(sc.next())-->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ CD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ CD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_14 $$ if (K - (Q - ar[i]) > 0) [ CD ]
Line_14 $$ if (K - (Q - ar[i]) > 0) -->Line_15 $$ out.println("Yes")[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_15 $$ out.println("Yes")[ FD ]
Line_14 $$ if (K - (Q - ar[i]) > 0) -->Line_17 $$ out.println("No")[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_17 $$ out.println("No")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ out.flush()[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_20 $$ out.flush()[ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_9 $$ for (int i = 0; i < Q; i++) [ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_9 $$ for (int i = 0; i < Q; i++) [ FD ]
Line_9 $$ for (int i = 0; i < Q; i++) -->Line_9 $$ for (int i = 0; i < Q; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
