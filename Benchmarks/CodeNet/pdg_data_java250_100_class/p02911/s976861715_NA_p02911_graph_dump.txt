Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String... args) [ CD ]
Line_2 $$ public static void main(String... args) -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_6 $$ String[] line = br.readLine().split(" ")-->Line_6 $$ String[] line = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String[] line = br.readLine().split(" ")[ FD ]
Line_7 $$ int n = Integer.parseInt(line[0])-->Line_7 $$ int n = Integer.parseInt(line[0])[ CD ]
Line_8 $$ int k = Integer.parseInt(line[1])-->Line_8 $$ int k = Integer.parseInt(line[1])[ CD ]
Line_9 $$ int q = Integer.parseInt(line[2])-->Line_9 $$ int q = Integer.parseInt(line[2])[ CD ]
Line_9 $$ int q = Integer.parseInt(line[2])-->Line_11 $$ for (int i = 0; i < q; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_11 $$ for (int i = 0; i < q; i++) [ CD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_11 $$ for (int i = 0; i < q; i++) [ CD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_11 $$ for (int i = 0; i < q; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_12 $$ point[Integer.parseInt(br.readLine()) - 1] += 1[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ point[Integer.parseInt(br.readLine()) - 1] += 1[ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ int n = Integer.parseInt(line[0])-->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ CD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ CD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_15 $$ point[i] += k - q[ CD ]
Line_8 $$ int k = Integer.parseInt(line[1])-->Line_15 $$ point[i] += k - q[ FD ]
Line_9 $$ int q = Integer.parseInt(line[2])-->Line_15 $$ point[i] += k - q[ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ CD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_18 $$ if (point[i] <= 0) [ CD ]
Line_18 $$ if (point[i] <= 0) -->Line_19 $$ System.out.println("No")[ CD ]
Line_18 $$ if (point[i] <= 0) -->Line_21 $$ System.out.println("Yes")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_24 $$ br.close()[ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_11 $$ for (int i = 0; i < q; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_11 $$ for (int i = 0; i < q; i++) [ FD ]
Line_11 $$ for (int i = 0; i < q; i++) -->Line_11 $$ for (int i = 0; i < q; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
Line_17 $$ for (int i = 0; i < point.length; i++) -->Line_17 $$ for (int i = 0; i < point.length; i++) [ FD ]
