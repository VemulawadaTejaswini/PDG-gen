Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ boolean divisible = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 1; i < 10; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_6 $$ for (int i = 1; i < 10; i++) [ CD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_6 $$ for (int i = 1; i < 10; i++) [ CD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_6 $$ for (int i = 1; i < 10; i++) [ FD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_7 $$ double divided = (double) N / i[ CD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_8 $$ int count = 0[ CD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_9 $$ if (divided % 1 == 0 && divided >= 1 && divided <= 9) [ CD ]
Line_9 $$ if (divided % 1 == 0 && divided >= 1 && divided <= 9) -->Line_10 $$ divisible = true[ CD ]
Line_10 $$ divisible = true-->Line_10 $$ divisible = true[ FD ]
Line_5 $$ boolean divisible = false-->Line_10 $$ divisible = true[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ if (divisible) [ CD ]
Line_13 $$ if (divisible) -->Line_14 $$ System.out.println("Yes")[ CD ]
Line_13 $$ if (divisible) -->Line_16 $$ System.out.println("No")[ CD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_6 $$ for (int i = 1; i < 10; i++) [ FD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_6 $$ for (int i = 1; i < 10; i++) [ FD ]
Line_6 $$ for (int i = 1; i < 10; i++) -->Line_6 $$ for (int i = 1; i < 10; i++) [ FD ]
