Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static final int MOD = 1000000007;[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_4 $$ int i, j[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_5 $$ Scanner sc = new Scanner(in)[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_6 $$ long a = parseLong(sc.next())[ CD ]
Line_6 $$ long a = parseLong(sc.next())-->Line_6 $$ long a = parseLong(sc.next())[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_6 $$ long a = parseLong(sc.next())[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_7 $$ long b = parseLong(sc.next())[ CD ]
Line_7 $$ long b = parseLong(sc.next())-->Line_7 $$ long b = parseLong(sc.next())[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_7 $$ long b = parseLong(sc.next())[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_8 $$ long c = parseLong(sc.next())[ CD ]
Line_8 $$ long c = parseLong(sc.next())-->Line_8 $$ long c = parseLong(sc.next())[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_8 $$ long c = parseLong(sc.next())[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_9 $$ long k = parseLong(sc.next())[ CD ]
Line_9 $$ long k = parseLong(sc.next())-->Line_9 $$ long k = parseLong(sc.next())[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_9 $$ long k = parseLong(sc.next())[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_10 $$ sc.close()[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_10 $$ sc.close()[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_11 $$ long ans = 0[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_12 $$ ans = Math.min(a, k)[ CD ]
Line_11 $$ long ans = 0-->Line_12 $$ ans = Math.min(a, k)[ FD ]
Line_12 $$ ans = Math.min(a, k)-->Line_12 $$ ans = Math.min(a, k)[ FD ]
Line_12 $$ ans = Math.min(a, k)-->Line_12 $$ ans = Math.min(a, k)[ CD ]
Line_6 $$ long a = parseLong(sc.next())-->Line_12 $$ ans = Math.min(a, k)[ FD ]
Line_9 $$ long k = parseLong(sc.next())-->Line_12 $$ ans = Math.min(a, k)[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_13 $$ k = Math.max(k - a - b, 0)[ CD ]
Line_9 $$ long k = parseLong(sc.next())-->Line_13 $$ k = Math.max(k - a - b, 0)[ FD ]
Line_13 $$ k = Math.max(k - a - b, 0)-->Line_13 $$ k = Math.max(k - a - b, 0)[ FD ]
Line_13 $$ k = Math.max(k - a - b, 0)-->Line_13 $$ k = Math.max(k - a - b, 0)[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_14 $$ if (k > 0) [ CD ]
Line_9 $$ long k = parseLong(sc.next())-->Line_14 $$ if (k > 0) [ FD ]
Line_13 $$ k = Math.max(k - a - b, 0)-->Line_14 $$ if (k > 0) [ FD ]
Line_14 $$ if (k > 0) -->Line_15 $$ ans -= Math.min(c, k)[ CD ]
Line_11 $$ long ans = 0-->Line_15 $$ ans -= Math.min(c, k)[ FD ]
Line_12 $$ ans = Math.min(a, k)-->Line_15 $$ ans -= Math.min(c, k)[ FD ]
Line_15 $$ ans -= Math.min(c, k)-->Line_15 $$ ans -= Math.min(c, k)[ FD ]
Line_15 $$ ans -= Math.min(c, k)-->Line_15 $$ ans -= Math.min(c, k)[ CD ]
Line_8 $$ long c = parseLong(sc.next())-->Line_15 $$ ans -= Math.min(c, k)[ FD ]
Line_9 $$ long k = parseLong(sc.next())-->Line_15 $$ ans -= Math.min(c, k)[ FD ]
Line_13 $$ k = Math.max(k - a - b, 0)-->Line_15 $$ ans -= Math.min(c, k)[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_17 $$ out.println(ans)[ CD ]
Line_11 $$ long ans = 0-->Line_17 $$ out.println(ans)[ FD ]
Line_12 $$ ans = Math.min(a, k)-->Line_17 $$ out.println(ans)[ FD ]
Line_15 $$ ans -= Math.min(c, k)-->Line_17 $$ out.println(ans)[ FD ]
