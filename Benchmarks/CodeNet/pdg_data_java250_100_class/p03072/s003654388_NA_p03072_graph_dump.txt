Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] H = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ H[0] = sc.nextInt()[ CD ]
Line_6 $$ H[0] = sc.nextInt()-->Line_6 $$ H[0] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ H[0] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int max = H[0][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int ans = 1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 1; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_9 $$ for (int i = 1; i < N; i++) [ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_9 $$ for (int i = 1; i < N; i++) [ CD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_9 $$ for (int i = 1; i < N; i++) [ CD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_9 $$ for (int i = 1; i < N; i++) [ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_10 $$ H[i] = sc.nextInt()[ CD ]
Line_10 $$ H[i] = sc.nextInt()-->Line_10 $$ H[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ H[i] = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_11 $$ max = Math.max(max, H[i])[ CD ]
Line_11 $$ max = Math.max(max, H[i])-->Line_11 $$ max = Math.max(max, H[i])[ FD ]
Line_7 $$ int max = H[0]-->Line_11 $$ max = Math.max(max, H[i])[ FD ]
Line_11 $$ max = Math.max(max, H[i])-->Line_11 $$ max = Math.max(max, H[i])[ CD ]
Line_11 $$ max = Math.max(max, H[i])-->Line_11 $$ max = Math.max(max, H[i])[ FD ]
Line_7 $$ int max = H[0]-->Line_11 $$ max = Math.max(max, H[i])[ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_12 $$ if (H[i] == max) [ CD ]
Line_11 $$ max = Math.max(max, H[i])-->Line_12 $$ if (H[i] == max) [ FD ]
Line_7 $$ int max = H[0]-->Line_12 $$ if (H[i] == max) [ FD ]
Line_12 $$ if (H[i] == max) -->Line_13 $$ ans += 1[ CD ]
Line_13 $$ ans += 1-->Line_13 $$ ans += 1[ FD ]
Line_8 $$ int ans = 1-->Line_13 $$ ans += 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(ans)[ CD ]
Line_13 $$ ans += 1-->Line_16 $$ System.out.println(ans)[ FD ]
Line_8 $$ int ans = 1-->Line_16 $$ System.out.println(ans)[ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_9 $$ for (int i = 1; i < N; i++) [ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_9 $$ for (int i = 1; i < N; i++) [ FD ]
Line_9 $$ for (int i = 1; i < N; i++) -->Line_9 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ max = Math.max(max, H[i])-->Line_11 $$ max = Math.max(max, H[i])[ FD ]
Line_11 $$ max = Math.max(max, H[i])-->Line_12 $$ if (H[i] == max) [ FD ]
