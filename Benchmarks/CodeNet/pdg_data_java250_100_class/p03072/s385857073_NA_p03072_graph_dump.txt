Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_5 $$ int n = Integer.parseInt(in.readLine())-->Line_5 $$ int n = Integer.parseInt(in.readLine())[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int n = Integer.parseInt(in.readLine())[ FD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ StringTokenizer st = new StringTokenizer(in.readLine())[ FD ]
Line_5 $$ int n = Integer.parseInt(in.readLine())-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ int x = Integer.parseInt(st.nextToken())[ CD ]
Line_10 $$ int x = Integer.parseInt(st.nextToken())-->Line_10 $$ int x = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(in.readLine())-->Line_10 $$ int x = Integer.parseInt(st.nextToken())[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ if (x >= tallest) [ CD ]
Line_10 $$ int x = Integer.parseInt(st.nextToken())-->Line_11 $$ if (x >= tallest) [ FD ]
Line_7 $$ int tallest = 0-->Line_11 $$ if (x >= tallest) [ FD ]
Line_11 $$ if (x >= tallest) -->Line_12 $$ tallest = Math.max(tallest, x)[ CD ]
Line_12 $$ tallest = Math.max(tallest, x)-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
Line_7 $$ int tallest = 0-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
Line_12 $$ tallest = Math.max(tallest, x)-->Line_12 $$ tallest = Math.max(tallest, x)[ CD ]
Line_12 $$ tallest = Math.max(tallest, x)-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
Line_7 $$ int tallest = 0-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
Line_10 $$ int x = Integer.parseInt(st.nextToken())-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
Line_11 $$ if (x >= tallest) -->Line_13 $$ res++[ CD ]
Line_8 $$ int res = 0-->Line_13 $$ res++[ FD ]
Line_8 $$ int res = 0-->Line_16 $$ System.out.println(res)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ int x = Integer.parseInt(st.nextToken())-->Line_11 $$ if (x >= tallest) [ FD ]
Line_12 $$ tallest = Math.max(tallest, x)-->Line_11 $$ if (x >= tallest) [ FD ]
Line_12 $$ tallest = Math.max(tallest, x)-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
Line_10 $$ int x = Integer.parseInt(st.nextToken())-->Line_12 $$ tallest = Math.max(tallest, x)[ FD ]
