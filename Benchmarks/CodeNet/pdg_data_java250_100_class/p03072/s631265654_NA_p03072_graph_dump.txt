Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int[] H = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ H[i] = sc.nextInt()[ CD ]
Line_7 $$ H[i] = sc.nextInt()-->Line_7 $$ H[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ H[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ int maxH = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ int count = 1[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ CD ]
Line_12 $$ maxH = Math.max(maxH, H[i - 1])-->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ FD ]
Line_9 $$ int maxH = 0-->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ FD ]
Line_12 $$ maxH = Math.max(maxH, H[i - 1])-->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ CD ]
Line_12 $$ maxH = Math.max(maxH, H[i - 1])-->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ FD ]
Line_9 $$ int maxH = 0-->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_13 $$ if (maxH <= H[i])[ CD ]
Line_12 $$ maxH = Math.max(maxH, H[i - 1])-->Line_13 $$ if (maxH <= H[i])[ FD ]
Line_9 $$ int maxH = 0-->Line_13 $$ if (maxH <= H[i])[ FD ]
Line_13 $$ if (maxH <= H[i])-->Line_13 $$ count++[ CD ]
Line_10 $$ int count = 1-->Line_13 $$ count++[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ System.out.println(count)[ CD ]
Line_10 $$ int count = 1-->Line_15 $$ System.out.println(count)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_12 $$ maxH = Math.max(maxH, H[i - 1])-->Line_12 $$ maxH = Math.max(maxH, H[i - 1])[ FD ]
Line_12 $$ maxH = Math.max(maxH, H[i - 1])-->Line_13 $$ if (maxH <= H[i])[ FD ]
