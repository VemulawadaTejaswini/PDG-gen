Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ int n, ans[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ List<Integer> heights = new ArrayList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ n = scanner.nextInt()[ CD ]
Line_3 $$ int n, ans-->Line_6 $$ n = scanner.nextInt()[ FD ]
Line_6 $$ n = scanner.nextInt()-->Line_6 $$ n = scanner.nextInt()[ FD ]
Line_6 $$ n = scanner.nextInt()-->Line_6 $$ n = scanner.nextInt()[ CD ]
Line_5 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ n = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_3 $$ int n, ans-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ n = scanner.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ heights.add(scanner.nextInt())[ CD ]
Line_4 $$ List<Integer> heights = new ArrayList()-->Line_8 $$ heights.add(scanner.nextInt())[ FD ]
Line_5 $$ Scanner scanner = new Scanner(System.in)-->Line_8 $$ heights.add(scanner.nextInt())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ scanner.close()[ CD ]
Line_5 $$ Scanner scanner = new Scanner(System.in)-->Line_10 $$ scanner.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int nW, nS = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ boolean higher = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ ans = 1[ CD ]
Line_3 $$ int n, ans-->Line_13 $$ ans = 1[ FD ]
Line_13 $$ ans = 1-->Line_13 $$ ans = 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ CD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ CD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_15 $$ nS = heights.get(j)[ CD ]
Line_15 $$ nS = heights.get(j)-->Line_15 $$ nS = heights.get(j)[ FD ]
Line_11 $$ int nW, nS = 0-->Line_15 $$ nS = heights.get(j)[ FD ]
Line_15 $$ nS = heights.get(j)-->Line_15 $$ nS = heights.get(j)[ CD ]
Line_4 $$ List<Integer> heights = new ArrayList()-->Line_15 $$ nS = heights.get(j)[ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_15 $$ nS = heights.get(j)[ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ CD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ CD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ CD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ CD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ FD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_17 $$ if (higher) [ CD ]
Line_17 $$ if (higher) -->Line_18 $$ nW = heights.get(k)[ CD ]
Line_18 $$ nW = heights.get(k)-->Line_18 $$ nW = heights.get(k)[ FD ]
Line_11 $$ int nW, nS = 0-->Line_18 $$ nW = heights.get(k)[ FD ]
Line_18 $$ nW = heights.get(k)-->Line_18 $$ nW = heights.get(k)[ CD ]
Line_4 $$ List<Integer> heights = new ArrayList()-->Line_18 $$ nW = heights.get(k)[ FD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_18 $$ nW = heights.get(k)[ FD ]
Line_17 $$ if (higher) -->Line_19 $$ if (nW > nS) [ CD ]
Line_18 $$ nW = heights.get(k)-->Line_19 $$ if (nW > nS) [ FD ]
Line_11 $$ int nW, nS = 0-->Line_19 $$ if (nW > nS) [ FD ]
Line_15 $$ nS = heights.get(j)-->Line_19 $$ if (nW > nS) [ FD ]
Line_11 $$ int nW, nS = 0-->Line_19 $$ if (nW > nS) [ FD ]
Line_19 $$ if (nW > nS) -->Line_20 $$ higher = false[ CD ]
Line_20 $$ higher = false-->Line_20 $$ higher = false[ FD ]
Line_12 $$ boolean higher = true-->Line_20 $$ higher = false[ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_24 $$ if (higher) [ CD ]
Line_24 $$ if (higher) -->Line_25 $$ ans++[ CD ]
Line_3 $$ int n, ans-->Line_25 $$ ans++[ FD ]
Line_13 $$ ans = 1-->Line_25 $$ ans++[ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_27 $$ higher = true[ CD ]
Line_20 $$ higher = false-->Line_27 $$ higher = true[ FD ]
Line_27 $$ higher = true-->Line_27 $$ higher = true[ FD ]
Line_12 $$ boolean higher = true-->Line_27 $$ higher = true[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_29 $$ System.out.println(ans)[ CD ]
Line_3 $$ int n, ans-->Line_29 $$ System.out.println(ans)[ FD ]
Line_13 $$ ans = 1-->Line_29 $$ System.out.println(ans)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_14 $$ for (int j = n - 1; 1 <= j; j--) [ FD ]
Line_14 $$ for (int j = n - 1; 1 <= j; j--) -->Line_15 $$ nS = heights.get(j)[ FD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ FD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ FD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_16 $$ for (int k = 0; k <= j - 1; k++) [ FD ]
Line_16 $$ for (int k = 0; k <= j - 1; k++) -->Line_18 $$ nW = heights.get(k)[ FD ]
Line_18 $$ nW = heights.get(k)-->Line_19 $$ if (nW > nS) [ FD ]
