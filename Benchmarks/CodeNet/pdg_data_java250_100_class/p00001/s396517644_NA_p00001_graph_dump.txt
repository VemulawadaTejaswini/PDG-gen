Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int[] best = [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ String line = br.readLine()[ CD ]
Line_6 $$ String line = br.readLine()-->Line_6 $$ String line = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String line = br.readLine()[ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_7 $$ int height = Integer.parseInt(line)[ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_7 $$ int height = Integer.parseInt(line)[ CD ]
Line_6 $$ String line = br.readLine()-->Line_7 $$ int height = Integer.parseInt(line)[ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_8 $$ if (height > best[0]) [ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_8 $$ if (height > best[0]) [ FD ]
Line_8 $$ if (height > best[0]) -->Line_9 $$ best[2] = best[1][ CD ]
Line_8 $$ if (height > best[0]) -->Line_10 $$ best[1] = best[0][ CD ]
Line_8 $$ if (height > best[0]) -->Line_11 $$ best[0] = height[ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_11 $$ best[0] = height[ FD ]
Line_8 $$ if (height > best[0]) -->Line_13 $$ if (height > best[1]) [ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_13 $$ if (height > best[1]) [ FD ]
Line_13 $$ if (height > best[1]) -->Line_14 $$ best[2] = best[1][ CD ]
Line_13 $$ if (height > best[1]) -->Line_15 $$ best[1] = height[ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_15 $$ best[1] = height[ FD ]
Line_13 $$ if (height > best[1]) -->Line_17 $$ if (height > best[2]) [ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_17 $$ if (height > best[2]) [ FD ]
Line_17 $$ if (height > best[2]) -->Line_18 $$ best[2] = height[ CD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_18 $$ best[2] = height[ FD ]
Line_21 $$ for (int h : best) -->Line_22 $$ System.out.println(h)[ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_6 $$ String line = br.readLine()-->Line_7 $$ int height = Integer.parseInt(line)[ FD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_8 $$ if (height > best[0]) [ FD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_11 $$ best[0] = height[ FD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_13 $$ if (height > best[1]) [ FD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_15 $$ best[1] = height[ FD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_17 $$ if (height > best[2]) [ FD ]
Line_7 $$ int height = Integer.parseInt(line)-->Line_18 $$ best[2] = height[ FD ]
