Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String line[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int[] hills = new int[10001][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_4 $$ String line-->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ CD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_4 $$ String line-->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_7 $$ hills[parseInt(line)]++[ CD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_7 $$ hills[parseInt(line)]++[ FD ]
Line_4 $$ String line-->Line_7 $$ hills[parseInt(line)]++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int count = 0[ CD ]
Line_11 $$ for (int i = hills.length - 1; ; i--) -->Line_11 $$ for (int i = hills.length - 1; ; i--) [ CD ]
Line_11 $$ for (int i = hills.length - 1; ; i--) -->Line_11 $$ for (int i = hills.length - 1; ; i--) [ CD ]
Line_11 $$ for (int i = hills.length - 1; ; i--) -->Line_11 $$ for (int i = hills.length - 1; ; i--) [ FD ]
Line_11 $$ for (int i = hills.length - 1; ; i--) -->Line_12 $$ if (hills[i] > 0) [ CD ]
Line_12 $$ if (hills[i] > 0) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ CD ]
Line_12 $$ if (hills[i] > 0) -->Line_12 $$ if (hills[i] > 0) [ CD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ CD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ CD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ FD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_14 $$ System.out.println(i)[ CD ]
Line_11 $$ for (int i = hills.length - 1; ; i--) -->Line_14 $$ System.out.println(i)[ FD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_15 $$ count++[ CD ]
Line_9 $$ int count = 0-->Line_15 $$ count++[ FD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_16 $$ if (count == 3)[ CD ]
Line_9 $$ int count = 0-->Line_16 $$ if (count == 3)[ FD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_6 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_7 $$ hills[parseInt(line)]++[ FD ]
Line_11 $$ for (int i = hills.length - 1; ; i--) -->Line_11 $$ for (int i = hills.length - 1; ; i--) [ FD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ FD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ FD ]
Line_13 $$ for (int j = 0; j < hills[i]; j++) -->Line_13 $$ for (int j = 0; j < hills[i]; j++) [ FD ]
