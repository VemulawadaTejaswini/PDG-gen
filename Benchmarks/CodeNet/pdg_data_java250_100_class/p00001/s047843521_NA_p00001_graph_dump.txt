Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ Integer[] mountains = new Integer[10][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ mountains[i] = sc.nextInt()[ CD ]
Line_6 $$ mountains[i] = sc.nextInt()-->Line_6 $$ mountains[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ mountains[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ Arrays.sort(mountains, Collections.reverseOrder())[ CD ]
Line_4 $$ Integer[] mountains = new Integer[10]-->Line_8 $$ Arrays.sort(mountains, Collections.reverseOrder())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ StringBuilder sb = new StringBuilder("")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_11 $$ sb.append(mountains[i])[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_11 $$ sb.append(mountains[i])[ FD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ sb.append('\n')[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_12 $$ sb.append('\n')[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ System.out.print(sb)[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder("")-->Line_14 $$ System.out.print(sb)[ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 10; i++) -->Line_5 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_10 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ for (int i = 0; i < 3; i++) [ FD ]
