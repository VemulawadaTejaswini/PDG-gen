Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ PrintWriter out = new PrintWriter(System.out)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int i = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ Integer[] mountains = new Integer[10][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ String line[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ while ((line = br.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_8 $$ while ((line = br.readLine()) != null) [ FD ]
Line_7 $$ String line-->Line_8 $$ while ((line = br.readLine()) != null) [ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_8 $$ while ((line = br.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ while ((line = br.readLine()) != null) [ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_9 $$ mountains[i++] = Integer.valueOf(line)[ CD ]
Line_5 $$ int i = 0-->Line_9 $$ mountains[i++] = Integer.valueOf(line)[ FD ]
Line_9 $$ mountains[i++] = Integer.valueOf(line)-->Line_9 $$ mountains[i++] = Integer.valueOf(line)[ CD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_9 $$ mountains[i++] = Integer.valueOf(line)[ FD ]
Line_7 $$ String line-->Line_9 $$ mountains[i++] = Integer.valueOf(line)[ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_10 $$ if (i >= 10)[ CD ]
Line_5 $$ int i = 0-->Line_10 $$ if (i >= 10)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ sort(mountains, Comparator.reverseOrder())[ CD ]
Line_6 $$ Integer[] mountains = new Integer[10]-->Line_12 $$ sort(mountains, Comparator.reverseOrder())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ for (i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ int i = 0-->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ CD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_5 $$ int i = 0-->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ CD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_5 $$ int i = 0-->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_14 $$ out.println(mountains[i])[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_14 $$ out.println(mountains[i])[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_16 $$ out.flush()[ CD ]
Line_4 $$ PrintWriter out = new PrintWriter(System.out)-->Line_16 $$ out.flush()[ FD ]
Line_8 $$ while ((line = br.readLine()) != null) -->Line_9 $$ mountains[i++] = Integer.valueOf(line)[ FD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
Line_13 $$ for (i = 0; i < 3; i++) -->Line_13 $$ for (i = 0; i < 3; i++) [ FD ]
