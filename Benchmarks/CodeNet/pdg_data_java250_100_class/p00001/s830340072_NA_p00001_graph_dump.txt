Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ ArrayList<Integer> heights = new ArrayList<Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ InputStreamReader isr = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ for (int i = 0; i < 10; i++) [ CD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_7 $$ int h = Integer.parseInt(br.readLine())[ CD ]
Line_7 $$ int h = Integer.parseInt(br.readLine())-->Line_7 $$ int h = Integer.parseInt(br.readLine())[ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(isr)-->Line_7 $$ int h = Integer.parseInt(br.readLine())[ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_8 $$ heights.add(h)[ CD ]
Line_3 $$ ArrayList<Integer> heights = new ArrayList<Integer>()-->Line_8 $$ heights.add(h)[ FD ]
Line_7 $$ int h = Integer.parseInt(br.readLine())-->Line_8 $$ heights.add(h)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ Collections.sort(heights)[ CD ]
Line_3 $$ ArrayList<Integer> heights = new ArrayList<Integer>()-->Line_10 $$ Collections.sort(heights)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ Collections.reverse(heights)[ CD ]
Line_3 $$ ArrayList<Integer> heights = new ArrayList<Integer>()-->Line_11 $$ Collections.reverse(heights)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_13 $$ System.out.println(heights.get(i))[ CD ]
Line_3 $$ ArrayList<Integer> heights = new ArrayList<Integer>()-->Line_13 $$ System.out.println(heights.get(i))[ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_13 $$ System.out.println(heights.get(i))[ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_13 $$ System.out.println(heights.get(i))[ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 10; i++) -->Line_6 $$ for (int i = 0; i < 10; i++) [ FD ]
Line_7 $$ int h = Integer.parseInt(br.readLine())-->Line_8 $$ heights.add(h)[ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_12 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_12 $$ for (int i = 0; i < 3; i++) -->Line_13 $$ System.out.println(heights.get(i))[ FD ]
