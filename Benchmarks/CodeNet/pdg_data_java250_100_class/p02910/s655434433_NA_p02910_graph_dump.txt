Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String S = sc.next()[ CD ]
Line_4 $$ String S = sc.next()-->Line_4 $$ String S = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String S = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_4 $$ String S = sc.next()-->Line_6 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_7 $$ if (i % 2 == 0) [ CD ]
Line_7 $$ if (i % 2 == 0) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String S = sc.next()-->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_4 $$ String S = sc.next()-->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_4 $$ String S = sc.next()-->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) -->Line_9 $$ count++[ CD ]
Line_5 $$ int count = 0-->Line_9 $$ count++[ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_12 $$ if (i % 2 == 1) [ CD ]
Line_12 $$ if (i % 2 == 1) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String S = sc.next()-->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_4 $$ String S = sc.next()-->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_4 $$ String S = sc.next()-->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) -->Line_14 $$ count++[ CD ]
Line_5 $$ int count = 0-->Line_14 $$ count++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ if (count == S.length()) [ CD ]
Line_5 $$ int count = 0-->Line_18 $$ if (count == S.length()) [ FD ]
Line_4 $$ String S = sc.next()-->Line_18 $$ if (count == S.length()) [ FD ]
Line_18 $$ if (count == S.length()) -->Line_19 $$ System.out.println("Yes")[ CD ]
Line_18 $$ if (count == S.length()) -->Line_21 $$ System.out.println("No")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_23 $$ sc.close()[ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_6 $$ for (int i = 0; i < S.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_8 $$ if (S.substring(i, i + 1).equals("R") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
Line_6 $$ for (int i = 0; i < S.length(); i++) -->Line_13 $$ if (S.substring(i, i + 1).equals("L") || S.substring(i, i + 1).equals("U") || S.substring(i, i + 1).equals("D")) [ FD ]
