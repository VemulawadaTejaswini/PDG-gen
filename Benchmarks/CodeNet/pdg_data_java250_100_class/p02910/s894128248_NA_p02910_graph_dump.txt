Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String str1 = scan.nextLine()[ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_4 $$ String str1 = scan.nextLine()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ String str1 = scan.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String str2[] = new String[str1.length()][ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_5 $$ String str2[] = new String[str1.length()][ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ boolean flag = true[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_8 $$ str2[i] = str1.substring(i, i + 1)[ CD ]
Line_8 $$ str2[i] = str1.substring(i, i + 1)-->Line_8 $$ str2[i] = str1.substring(i, i + 1)[ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_8 $$ str2[i] = str1.substring(i, i + 1)[ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_8 $$ str2[i] = str1.substring(i, i + 1)[ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_10 $$ flag = false[ CD ]
Line_10 $$ flag = false-->Line_10 $$ flag = false[ FD ]
Line_6 $$ boolean flag = true-->Line_10 $$ flag = false[ FD ]
Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ CD ]
Line_4 $$ String str1 = scan.nextLine()-->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) -->Line_13 $$ flag = false[ CD ]
Line_10 $$ flag = false-->Line_13 $$ flag = false[ FD ]
Line_13 $$ flag = false-->Line_13 $$ flag = false[ FD ]
Line_6 $$ boolean flag = true-->Line_13 $$ flag = false[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ if (flag) [ CD ]
Line_16 $$ if (flag) -->Line_17 $$ System.out.println("Yes")[ CD ]
Line_16 $$ if (flag) -->Line_20 $$ System.out.println("No")[ CD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_7 $$ for (int i = 0; i < str1.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_8 $$ str2[i] = str1.substring(i, i + 1)[ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_9 $$ if (i % 2 == 0 && !str1.substring(i, i + 1).equals("R") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
Line_7 $$ for (int i = 0; i < str1.length(); i++) -->Line_12 $$ if (i % 2 == 1 && !str1.substring(i, i + 1).equals("L") && !str1.substring(i, i + 1).equals("U") && !str1.substring(i, i + 1).equals("D")) [ FD ]
