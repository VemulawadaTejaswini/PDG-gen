Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) throws Exception [ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_3 $$ BufferedReader stdR = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_4 $$ int N = Integer.parseInt(stdR.readLine())[ CD ]
Line_4 $$ int N = Integer.parseInt(stdR.readLine())-->Line_4 $$ int N = Integer.parseInt(stdR.readLine())[ CD ]
Line_3 $$ BufferedReader stdR = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int N = Integer.parseInt(stdR.readLine())[ FD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_5 $$ int[] a = new int[N][ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_2 $$ public static void main(String args[]) throws Exception [ CD ]
Line_4 $$ int N = Integer.parseInt(stdR.readLine())-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ a[i] = Integer.parseInt(stdR.readLine())[ CD ]
Line_7 $$ a[i] = Integer.parseInt(stdR.readLine())-->Line_7 $$ a[i] = Integer.parseInt(stdR.readLine())[ CD ]
Line_3 $$ BufferedReader stdR = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ a[i] = Integer.parseInt(stdR.readLine())[ FD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_9 $$ Arrays.sort(a)[ CD ]
Line_5 $$ int[] a = new int[N]-->Line_9 $$ Arrays.sort(a)[ FD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_10 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_11 $$ int num = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_12 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_2 $$ public static void main(String args[]) throws Exception [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = Integer.parseInt(stdR.readLine())-->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ CD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ CD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_13 $$ if (num != a[i])[ CD ]
Line_11 $$ int num = 0-->Line_13 $$ if (num != a[i])[ FD ]
Line_13 $$ if (num != a[i])-->Line_13 $$ count++[ CD ]
Line_10 $$ int count = 0-->Line_13 $$ count++[ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_14 $$ num = a[i][ CD ]
Line_14 $$ num = a[i]-->Line_14 $$ num = a[i][ FD ]
Line_11 $$ int num = 0-->Line_14 $$ num = a[i][ FD ]
Line_2 $$ public static void main(String args[]) throws Exception -->Line_16 $$ System.out.println(count)[ CD ]
Line_10 $$ int count = 0-->Line_16 $$ System.out.println(count)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ num = a[i]-->Line_13 $$ if (num != a[i])[ FD ]
