Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ Set<Integer> list = new HashSet()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int num = scan.nextInt()[ CD ]
Line_5 $$ int num = scan.nextInt()-->Line_5 $$ int num = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ int num = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < num; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int num = scan.nextInt()-->Line_6 $$ for (int i = 0; i < num; i++) [ FD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_6 $$ for (int i = 0; i < num; i++) [ CD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_6 $$ for (int i = 0; i < num; i++) [ CD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_6 $$ for (int i = 0; i < num; i++) [ FD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_7 $$ list.add(scan.nextInt())[ CD ]
Line_4 $$ Set<Integer> list = new HashSet()-->Line_7 $$ list.add(scan.nextInt())[ FD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ list.add(scan.nextInt())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ System.out.println(list.size())[ CD ]
Line_4 $$ Set<Integer> list = new HashSet()-->Line_9 $$ System.out.println(list.size())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_10 $$ scan.close()[ FD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_6 $$ for (int i = 0; i < num; i++) [ FD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_6 $$ for (int i = 0; i < num; i++) [ FD ]
Line_6 $$ for (int i = 0; i < num; i++) -->Line_6 $$ for (int i = 0; i < num; i++) [ FD ]
