Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String s = sc.next()[ CD ]
Line_4 $$ String s = sc.next()-->Line_4 $$ String s = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String s = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int n = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))[ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))[ FD ]
Line_6 $$ int n = 0-->Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))[ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))[ FD ]
Line_4 $$ String s = sc.next()-->Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ n *= 10000[ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_10 $$ n *= 10000[ FD ]
Line_6 $$ int n = 0-->Line_10 $$ n *= 10000[ FD ]
Line_10 $$ n *= 10000-->Line_10 $$ n *= 10000[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ n += (s.charAt(5) - 48) * 1000[ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_11 $$ n += (s.charAt(5) - 48) * 1000[ FD ]
Line_6 $$ int n = 0-->Line_11 $$ n += (s.charAt(5) - 48) * 1000[ FD ]
Line_10 $$ n *= 10000-->Line_11 $$ n += (s.charAt(5) - 48) * 1000[ FD ]
Line_11 $$ n += (s.charAt(5) - 48) * 1000-->Line_11 $$ n += (s.charAt(5) - 48) * 1000[ FD ]
Line_4 $$ String s = sc.next()-->Line_11 $$ n += (s.charAt(5) - 48) * 1000[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ n += (s.charAt(6) - 48) * 100[ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_12 $$ n += (s.charAt(6) - 48) * 100[ FD ]
Line_6 $$ int n = 0-->Line_12 $$ n += (s.charAt(6) - 48) * 100[ FD ]
Line_10 $$ n *= 10000-->Line_12 $$ n += (s.charAt(6) - 48) * 100[ FD ]
Line_11 $$ n += (s.charAt(5) - 48) * 1000-->Line_12 $$ n += (s.charAt(6) - 48) * 100[ FD ]
Line_12 $$ n += (s.charAt(6) - 48) * 100-->Line_12 $$ n += (s.charAt(6) - 48) * 100[ FD ]
Line_4 $$ String s = sc.next()-->Line_12 $$ n += (s.charAt(6) - 48) * 100[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ n += (s.charAt(8) - 48) * 10[ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_6 $$ int n = 0-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_10 $$ n *= 10000-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_11 $$ n += (s.charAt(5) - 48) * 1000-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_12 $$ n += (s.charAt(6) - 48) * 100-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_13 $$ n += (s.charAt(8) - 48) * 10-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_4 $$ String s = sc.next()-->Line_13 $$ n += (s.charAt(8) - 48) * 10[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ n += s.charAt(9) - 48[ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_6 $$ int n = 0-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_10 $$ n *= 10000-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_11 $$ n += (s.charAt(5) - 48) * 1000-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_12 $$ n += (s.charAt(6) - 48) * 100-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_13 $$ n += (s.charAt(8) - 48) * 10-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_14 $$ n += s.charAt(9) - 48-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_4 $$ String s = sc.next()-->Line_14 $$ n += s.charAt(9) - 48[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ if (n < 20190431) [ CD ]
Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))-->Line_15 $$ if (n < 20190431) [ FD ]
Line_6 $$ int n = 0-->Line_15 $$ if (n < 20190431) [ FD ]
Line_10 $$ n *= 10000-->Line_15 $$ if (n < 20190431) [ FD ]
Line_11 $$ n += (s.charAt(5) - 48) * 1000-->Line_15 $$ if (n < 20190431) [ FD ]
Line_12 $$ n += (s.charAt(6) - 48) * 100-->Line_15 $$ if (n < 20190431) [ FD ]
Line_13 $$ n += (s.charAt(8) - 48) * 10-->Line_15 $$ if (n < 20190431) [ FD ]
Line_14 $$ n += s.charAt(9) - 48-->Line_15 $$ if (n < 20190431) [ FD ]
Line_15 $$ if (n < 20190431) -->Line_16 $$ System.out.println("Heisei")[ CD ]
Line_15 $$ if (n < 20190431) -->Line_18 $$ System.out.println("TBD")[ CD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_7 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < 4; i++) -->Line_8 $$ n += (Math.pow(10, i) * (s.charAt(3 - i) - 48))[ FD ]
