Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ static StringBuilder sb;[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ CD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ CD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_8 $$ lines.add(line)[ CD ]
Line_6 $$ List<String> lines = new ArrayList<String>()-->Line_8 $$ lines.add(line)[ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_8 $$ lines.add(line)[ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_8 $$ lines.add(line)[ FD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ br.close()[ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ CD ]
Line_6 $$ List<String> lines = new ArrayList<String>()-->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ CD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ CD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_16 $$ String type = lines.get(i).split(" ")[0][ CD ]
Line_6 $$ List<String> lines = new ArrayList<String>()-->Line_16 $$ String type = lines.get(i).split(" ")[0][ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_16 $$ String type = lines.get(i).split(" ")[0][ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])[ CD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])[ CD ]
Line_6 $$ List<String> lines = new ArrayList<String>()-->Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])[ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])[ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_18 $$ if (type.equals("S")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_18 $$ if (type.equals("S")) [ FD ]
Line_18 $$ if (type.equals("S")) -->Line_18 $$ if (type.equals("S")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_18 $$ if (type.equals("S")) [ FD ]
Line_18 $$ if (type.equals("S")) -->Line_19 $$ S.remove(num)[ CD ]
Line_11 $$ List<Integer> S = new ArrayList(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))-->Line_19 $$ S.remove(num)[ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_19 $$ S.remove(num)[ FD ]
Line_18 $$ if (type.equals("S")) -->Line_20 $$ if (type.equals("H")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_20 $$ if (type.equals("H")) [ FD ]
Line_20 $$ if (type.equals("H")) -->Line_20 $$ if (type.equals("H")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_20 $$ if (type.equals("H")) [ FD ]
Line_20 $$ if (type.equals("H")) -->Line_21 $$ H.remove(num)[ CD ]
Line_12 $$ List<Integer> H = new ArrayList(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))-->Line_21 $$ H.remove(num)[ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_21 $$ H.remove(num)[ FD ]
Line_20 $$ if (type.equals("H")) -->Line_22 $$ if (type.equals("C")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_22 $$ if (type.equals("C")) [ FD ]
Line_22 $$ if (type.equals("C")) -->Line_22 $$ if (type.equals("C")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_22 $$ if (type.equals("C")) [ FD ]
Line_22 $$ if (type.equals("C")) -->Line_23 $$ C.remove(num)[ CD ]
Line_13 $$ List<Integer> C = new ArrayList(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))-->Line_23 $$ C.remove(num)[ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_23 $$ C.remove(num)[ FD ]
Line_22 $$ if (type.equals("C")) -->Line_24 $$ if (type.equals("D")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_24 $$ if (type.equals("D")) [ FD ]
Line_24 $$ if (type.equals("D")) -->Line_24 $$ if (type.equals("D")) [ CD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_24 $$ if (type.equals("D")) [ FD ]
Line_24 $$ if (type.equals("D")) -->Line_25 $$ D.remove(num)[ CD ]
Line_14 $$ List<Integer> D = new ArrayList(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))-->Line_25 $$ D.remove(num)[ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_25 $$ D.remove(num)[ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) [ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_8 $$ lines.add(line)[ FD ]
Line_7 $$ for (String line = br.readLine(); line != null; line = br.readLine()) -->Line_8 $$ lines.add(line)[ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_15 $$ for (int i = 1; i < lines.size(); i++) [ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_16 $$ String type = lines.get(i).split(" ")[0][ FD ]
Line_15 $$ for (int i = 1; i < lines.size(); i++) -->Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])[ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_18 $$ if (type.equals("S")) [ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_18 $$ if (type.equals("S")) [ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_19 $$ S.remove(num)[ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_20 $$ if (type.equals("H")) [ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_20 $$ if (type.equals("H")) [ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_21 $$ H.remove(num)[ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_22 $$ if (type.equals("C")) [ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_22 $$ if (type.equals("C")) [ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_23 $$ C.remove(num)[ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_24 $$ if (type.equals("D")) [ FD ]
Line_16 $$ String type = lines.get(i).split(" ")[0]-->Line_24 $$ if (type.equals("D")) [ FD ]
Line_17 $$ Integer num = Integer.parseInt(lines.get(i).split(" ")[1])-->Line_25 $$ D.remove(num)[ FD ]
