Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ boolean[][] cards = new boolean[4][13][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ String[] card[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int i, j[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ char c[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_7 $$ int i, j-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_7 $$ int i, j-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_7 $$ int i, j-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_7 $$ int i, j-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_7 $$ int i, j-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ CD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_7 $$ int i, j-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ cards[i][j] = false[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ for (i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i, j-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ CD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i, j-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ CD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i, j-->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_11 $$ card = br.readLine().split(" ")[ CD ]
Line_11 $$ card = br.readLine().split(" ")-->Line_11 $$ card = br.readLine().split(" ")[ FD ]
Line_6 $$ String[] card-->Line_11 $$ card = br.readLine().split(" ")[ FD ]
Line_11 $$ card = br.readLine().split(" ")-->Line_11 $$ card = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ card = br.readLine().split(" ")[ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_12 $$ if (card[0].equals("S")) [ CD ]
Line_12 $$ if (card[0].equals("S")) -->Line_12 $$ if (card[0].equals("S")) [ CD ]
Line_12 $$ if (card[0].equals("S")) -->Line_13 $$ cards[0][Integer.parseInt(card[1]) - 1] = true[ CD ]
Line_12 $$ if (card[0].equals("S")) -->Line_14 $$ if (card[0].equals("H")) [ CD ]
Line_14 $$ if (card[0].equals("H")) -->Line_14 $$ if (card[0].equals("H")) [ CD ]
Line_14 $$ if (card[0].equals("H")) -->Line_15 $$ cards[1][Integer.parseInt(card[1]) - 1] = true[ CD ]
Line_14 $$ if (card[0].equals("H")) -->Line_16 $$ if (card[0].equals("C")) [ CD ]
Line_16 $$ if (card[0].equals("C")) -->Line_16 $$ if (card[0].equals("C")) [ CD ]
Line_16 $$ if (card[0].equals("C")) -->Line_17 $$ cards[2][Integer.parseInt(card[1]) - 1] = true[ CD ]
Line_16 $$ if (card[0].equals("C")) -->Line_18 $$ if (card[0].equals("D")) [ CD ]
Line_18 $$ if (card[0].equals("D")) -->Line_18 $$ if (card[0].equals("D")) [ CD ]
Line_18 $$ if (card[0].equals("D")) -->Line_19 $$ cards[3][Integer.parseInt(card[1]) - 1] = true[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_22 $$ for (i = 0; i < 4; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_7 $$ int i, j-->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ CD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_7 $$ int i, j-->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ CD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_7 $$ int i, j-->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_23 $$ for (j = 0; j < 13; j++) [ CD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ CD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_7 $$ int i, j-->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ CD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_7 $$ int i, j-->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ CD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_7 $$ int i, j-->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_24 $$ if (!cards[i][j]) [ CD ]
Line_24 $$ if (!cards[i][j]) -->Line_24 $$ if (!cards[i][j]) [ CD ]
Line_24 $$ if (!cards[i][j]) -->Line_25 $$ if (i == 0)[ CD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_25 $$ if (i == 0)[ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_25 $$ if (i == 0)[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_25 $$ if (i == 0)[ FD ]
Line_7 $$ int i, j-->Line_25 $$ if (i == 0)[ FD ]
Line_25 $$ if (i == 0)-->Line_25 $$ c = 'S'[ CD ]
Line_25 $$ c = 'S'-->Line_25 $$ c = 'S'[ FD ]
Line_8 $$ char c-->Line_25 $$ c = 'S'[ FD ]
Line_25 $$ if (i == 0)-->Line_26 $$ if (i == 1)[ CD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_26 $$ if (i == 1)[ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_26 $$ if (i == 1)[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_26 $$ if (i == 1)[ FD ]
Line_7 $$ int i, j-->Line_26 $$ if (i == 1)[ FD ]
Line_26 $$ if (i == 1)-->Line_26 $$ c = 'H'[ CD ]
Line_25 $$ c = 'S'-->Line_26 $$ c = 'H'[ FD ]
Line_26 $$ c = 'H'-->Line_26 $$ c = 'H'[ FD ]
Line_8 $$ char c-->Line_26 $$ c = 'H'[ FD ]
Line_26 $$ if (i == 1)-->Line_27 $$ if (i == 2)[ CD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_27 $$ if (i == 2)[ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_27 $$ if (i == 2)[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_27 $$ if (i == 2)[ FD ]
Line_7 $$ int i, j-->Line_27 $$ if (i == 2)[ FD ]
Line_27 $$ if (i == 2)-->Line_27 $$ c = 'C'[ CD ]
Line_25 $$ c = 'S'-->Line_27 $$ c = 'C'[ FD ]
Line_26 $$ c = 'H'-->Line_27 $$ c = 'C'[ FD ]
Line_27 $$ c = 'C'-->Line_27 $$ c = 'C'[ FD ]
Line_8 $$ char c-->Line_27 $$ c = 'C'[ FD ]
Line_27 $$ if (i == 2)-->Line_28 $$ c = 'D'[ CD ]
Line_25 $$ c = 'S'-->Line_28 $$ c = 'D'[ FD ]
Line_26 $$ c = 'H'-->Line_28 $$ c = 'D'[ FD ]
Line_27 $$ c = 'C'-->Line_28 $$ c = 'D'[ FD ]
Line_28 $$ c = 'D'-->Line_28 $$ c = 'D'[ FD ]
Line_8 $$ char c-->Line_28 $$ c = 'D'[ FD ]
Line_24 $$ if (!cards[i][j]) -->Line_29 $$ System.out.println(c + " " + (j + 1))[ CD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (i = 0; i < 4; i++) for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false-->Line_9 $$ for (j = 0; j < 13; j++) cards[i][j] = false[ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_10 $$ for (i = 0; i < n; i++) -->Line_10 $$ for (i = 0; i < n; i++) [ FD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_22 $$ for (i = 0; i < 4; i++) -->Line_22 $$ for (i = 0; i < 4; i++) [ FD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
Line_23 $$ for (j = 0; j < 13; j++) -->Line_23 $$ for (j = 0; j < 13; j++) [ FD ]
