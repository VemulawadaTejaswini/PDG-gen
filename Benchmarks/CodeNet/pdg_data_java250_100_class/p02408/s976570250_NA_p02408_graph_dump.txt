Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ boolean[][] cards = new boolean[4][13][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ char[] mark = [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int n = scan.nextInt()[ CD ]
Line_6 $$ int n = scan.nextInt()-->Line_6 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ int n = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ int n = scan.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ char ch = scan.next().charAt(0)[ CD ]
Line_8 $$ char ch = scan.next().charAt(0)-->Line_8 $$ char ch = scan.next().charAt(0)[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ char ch = scan.next().charAt(0)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ int num = Integer.parseInt(scan.next())[ CD ]
Line_9 $$ int num = Integer.parseInt(scan.next())-->Line_9 $$ int num = Integer.parseInt(scan.next())[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_9 $$ int num = Integer.parseInt(scan.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_17 $$ scan.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ CD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ CD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ CD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ FD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_20 $$ if (!cards[i][j]) [ CD ]
Line_20 $$ if (!cards[i][j]) -->Line_20 $$ if (!cards[i][j]) [ CD ]
Line_20 $$ if (!cards[i][j]) -->Line_21 $$ System.out.println(mark[i] + " " + (j + 1))[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_18 $$ for (int i = 0; i < 4; i++) -->Line_18 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ FD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ FD ]
Line_19 $$ for (int j = 0; j < 13; j++) -->Line_19 $$ for (int j = 0; j < 13; j++) [ FD ]
