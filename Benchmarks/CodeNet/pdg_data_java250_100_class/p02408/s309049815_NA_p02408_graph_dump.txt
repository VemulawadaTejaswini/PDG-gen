Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_3 $$ public static void main(String[] args) throws Exception [ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_5 $$ boolean[][] b = new boolean[4][13][ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_6 $$ String[] s = [ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_8 $$ int n = Integer.parseInt(br.readLine())-->Line_8 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_3 $$ public static void main(String[] args) throws Exception [ CD ]
Line_8 $$ int n = Integer.parseInt(br.readLine())-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ String[] strArr = (br.readLine()).split(" ")[ CD ]
Line_11 $$ String[] strArr = (br.readLine()).split(" ")-->Line_11 $$ String[] strArr = (br.readLine()).split(" ")[ CD ]
Line_7 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ String[] strArr = (br.readLine()).split(" ")[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_12 $$ int rank = Integer.parseInt(strArr[1])[ CD ]
Line_12 $$ int rank = Integer.parseInt(strArr[1])-->Line_12 $$ int rank = Integer.parseInt(strArr[1])[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if ("S".equals(strArr[0])) [ CD ]
Line_13 $$ if ("S".equals(strArr[0])) -->Line_13 $$ if ("S".equals(strArr[0])) [ CD ]
Line_13 $$ if ("S".equals(strArr[0])) -->Line_15 $$ b[0][rank - 1] = true[ CD ]
Line_13 $$ if ("S".equals(strArr[0])) -->Line_17 $$ if ("H".equals(strArr[0])) [ CD ]
Line_17 $$ if ("H".equals(strArr[0])) -->Line_17 $$ if ("H".equals(strArr[0])) [ CD ]
Line_17 $$ if ("H".equals(strArr[0])) -->Line_19 $$ b[1][rank - 1] = true[ CD ]
Line_17 $$ if ("H".equals(strArr[0])) -->Line_21 $$ if ("C".equals(strArr[0])) [ CD ]
Line_21 $$ if ("C".equals(strArr[0])) -->Line_21 $$ if ("C".equals(strArr[0])) [ CD ]
Line_21 $$ if ("C".equals(strArr[0])) -->Line_23 $$ b[2][rank - 1] = true[ CD ]
Line_21 $$ if ("C".equals(strArr[0])) -->Line_25 $$ if ("D".equals(strArr[0])) [ CD ]
Line_25 $$ if ("D".equals(strArr[0])) -->Line_25 $$ if ("D".equals(strArr[0])) [ CD ]
Line_25 $$ if ("D".equals(strArr[0])) -->Line_27 $$ b[3][rank - 1] = true[ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_30 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_3 $$ public static void main(String[] args) throws Exception -->Line_3 $$ public static void main(String[] args) throws Exception [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ CD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ CD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ CD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ CD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ FD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_34 $$ if (true != b[i][j]) [ CD ]
Line_34 $$ if (true != b[i][j]) -->Line_36 $$ System.out.println(s[i] + " " + (j + 1))[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_30 $$ for (int i = 0; i < 4; i++) -->Line_30 $$ for (int i = 0; i < 4; i++) [ FD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ FD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ FD ]
Line_32 $$ for (int j = 0; j < 13; j++) -->Line_32 $$ for (int j = 0; j < 13; j++) [ FD ]
