Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ boolean first = true[ CD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_9 $$ while ((line = br.readLine()) != null) [ FD ]
Line_5 $$ String line-->Line_9 $$ while ((line = br.readLine()) != null) [ FD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_9 $$ while ((line = br.readLine()) != null) [ CD ]
Line_4 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_9 $$ while ((line = br.readLine()) != null) [ FD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_10 $$ if (first) [ CD ]
Line_10 $$ if (first) -->Line_11 $$ n = Integer.parseInt(line)[ CD ]
Line_11 $$ n = Integer.parseInt(line)-->Line_11 $$ n = Integer.parseInt(line)[ FD ]
Line_6 $$ int i = 0, n = 0-->Line_11 $$ n = Integer.parseInt(line)[ FD ]
Line_11 $$ n = Integer.parseInt(line)-->Line_11 $$ n = Integer.parseInt(line)[ CD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_11 $$ n = Integer.parseInt(line)[ FD ]
Line_5 $$ String line-->Line_11 $$ n = Integer.parseInt(line)[ FD ]
Line_10 $$ if (first) -->Line_12 $$ map.put(0, "S")[ CD ]
Line_7 $$ Map<Integer, String> map = new HashMap<Integer, String>()-->Line_12 $$ map.put(0, "S")[ FD ]
Line_10 $$ if (first) -->Line_13 $$ map.put(1, "H")[ CD ]
Line_7 $$ Map<Integer, String> map = new HashMap<Integer, String>()-->Line_13 $$ map.put(1, "H")[ FD ]
Line_10 $$ if (first) -->Line_14 $$ map.put(2, "C")[ CD ]
Line_7 $$ Map<Integer, String> map = new HashMap<Integer, String>()-->Line_14 $$ map.put(2, "C")[ FD ]
Line_10 $$ if (first) -->Line_15 $$ map.put(3, "D")[ CD ]
Line_7 $$ Map<Integer, String> map = new HashMap<Integer, String>()-->Line_15 $$ map.put(3, "D")[ FD ]
Line_10 $$ if (first) -->Line_16 $$ first = false[ CD ]
Line_16 $$ first = false-->Line_16 $$ first = false[ FD ]
Line_3 $$ boolean first = true-->Line_16 $$ first = false[ FD ]
Line_10 $$ if (first) -->Line_18 $$ String[] str = line.split(" ")[ CD ]
Line_18 $$ String[] str = line.split(" ")-->Line_18 $$ String[] str = line.split(" ")[ CD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_18 $$ String[] str = line.split(" ")[ FD ]
Line_5 $$ String line-->Line_18 $$ String[] str = line.split(" ")[ FD ]
Line_10 $$ if (first) -->Line_19 $$ if (str[0].equals("S")) [ CD ]
Line_19 $$ if (str[0].equals("S")) -->Line_19 $$ if (str[0].equals("S")) [ CD ]
Line_19 $$ if (str[0].equals("S")) -->Line_20 $$ card[0][Integer.parseInt(str[1])] = true[ CD ]
Line_19 $$ if (str[0].equals("S")) -->Line_21 $$ if (str[0].equals("H")) [ CD ]
Line_21 $$ if (str[0].equals("H")) -->Line_21 $$ if (str[0].equals("H")) [ CD ]
Line_21 $$ if (str[0].equals("H")) -->Line_22 $$ card[1][Integer.parseInt(str[1])] = true[ CD ]
Line_21 $$ if (str[0].equals("H")) -->Line_23 $$ if (str[0].equals("C")) [ CD ]
Line_23 $$ if (str[0].equals("C")) -->Line_23 $$ if (str[0].equals("C")) [ CD ]
Line_23 $$ if (str[0].equals("C")) -->Line_24 $$ card[2][Integer.parseInt(str[1])] = true[ CD ]
Line_23 $$ if (str[0].equals("C")) -->Line_25 $$ if (str[0].equals("D")) [ CD ]
Line_25 $$ if (str[0].equals("D")) -->Line_25 $$ if (str[0].equals("D")) [ CD ]
Line_25 $$ if (str[0].equals("D")) -->Line_26 $$ card[3][Integer.parseInt(str[1])] = true[ CD ]
Line_10 $$ if (first) -->Line_28 $$ i++[ CD ]
Line_6 $$ int i = 0, n = 0-->Line_28 $$ i++[ FD ]
Line_10 $$ if (first) -->Line_29 $$ if (i == n) [ CD ]
Line_6 $$ int i = 0, n = 0-->Line_29 $$ if (i == n) [ FD ]
Line_11 $$ n = Integer.parseInt(line)-->Line_29 $$ if (i == n) [ FD ]
Line_6 $$ int i = 0, n = 0-->Line_29 $$ if (i == n) [ FD ]
Line_29 $$ if (i == n) -->Line_30 $$ for (int j = 0; j < 4; j++) [ CD ]
Line_29 $$ if (i == n) -->Line_29 $$ if (i == n) [ CD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ CD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ CD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_31 $$ String a = map.get(j)[ CD ]
Line_31 $$ String a = map.get(j)-->Line_31 $$ String a = map.get(j)[ CD ]
Line_7 $$ Map<Integer, String> map = new HashMap<Integer, String>()-->Line_31 $$ String a = map.get(j)[ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_31 $$ String a = map.get(j)[ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ CD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ CD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ CD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ CD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ FD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_33 $$ if (!card[j][l]) [ CD ]
Line_33 $$ if (!card[j][l]) -->Line_33 $$ if (!card[j][l]) [ CD ]
Line_33 $$ if (!card[j][l]) -->Line_34 $$ System.out.println(a + " " + l)[ CD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_11 $$ n = Integer.parseInt(line)[ FD ]
Line_9 $$ while ((line = br.readLine()) != null) -->Line_18 $$ String[] str = line.split(" ")[ FD ]
Line_11 $$ n = Integer.parseInt(line)-->Line_29 $$ if (i == n) [ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_30 $$ for (int j = 0; j < 4; j++) [ FD ]
Line_30 $$ for (int j = 0; j < 4; j++) -->Line_31 $$ String a = map.get(j)[ FD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ FD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ FD ]
Line_32 $$ for (int l = 1; l < 14; l++) -->Line_32 $$ for (int l = 1; l < 14; l++) [ FD ]
