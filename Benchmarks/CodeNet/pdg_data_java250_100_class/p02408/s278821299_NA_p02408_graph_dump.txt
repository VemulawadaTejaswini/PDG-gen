Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int cardCount = Integer.parseInt(reader.readLine())[ CD ]
Line_4 $$ int cardCount = Integer.parseInt(reader.readLine())-->Line_4 $$ int cardCount = Integer.parseInt(reader.readLine())[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int cardCount = Integer.parseInt(reader.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] marks = [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ Map<String, List<Integer>> cards = new HashMap<String, List<Integer>>()[ CD ]
Line_6 $$ Map<String, List<Integer>> cards = new HashMap<String, List<Integer>>()-->Line_8 $$ cards.put(mark, new ArrayList<Integer>())[ FD ]
Line_7 $$ for (String mark : marks) -->Line_8 $$ cards.put(mark, new ArrayList<Integer>())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int cardCount = Integer.parseInt(reader.readLine())-->Line_10 $$ for (int i = 0; i < cardCount; i++) [ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ CD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ CD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_11 $$ String line = reader.readLine()[ CD ]
Line_11 $$ String line = reader.readLine()-->Line_11 $$ String line = reader.readLine()[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ String line = reader.readLine()[ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_12 $$ String[] in = line.split(" ")[ CD ]
Line_12 $$ String[] in = line.split(" ")-->Line_12 $$ String[] in = line.split(" ")[ CD ]
Line_11 $$ String line = reader.readLine()-->Line_12 $$ String[] in = line.split(" ")[ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_13 $$ if (cards.containsKey(in[0])) [ CD ]
Line_6 $$ Map<String, List<Integer>> cards = new HashMap<String, List<Integer>>()-->Line_13 $$ if (cards.containsKey(in[0])) [ FD ]
Line_13 $$ if (cards.containsKey(in[0])) -->Line_13 $$ if (cards.containsKey(in[0])) [ CD ]
Line_6 $$ Map<String, List<Integer>> cards = new HashMap<String, List<Integer>>()-->Line_13 $$ if (cards.containsKey(in[0])) [ FD ]
Line_13 $$ if (cards.containsKey(in[0])) -->Line_14 $$ cards.get(in[0]).add(Integer.parseInt(in[1]))[ CD ]
Line_6 $$ Map<String, List<Integer>> cards = new HashMap<String, List<Integer>>()-->Line_14 $$ cards.get(in[0]).add(Integer.parseInt(in[1]))[ FD ]
Line_18 $$ List<Integer> cardList = cards.get(mark)-->Line_18 $$ List<Integer> cardList = cards.get(mark)[ CD ]
Line_6 $$ Map<String, List<Integer>> cards = new HashMap<String, List<Integer>>()-->Line_18 $$ List<Integer> cardList = cards.get(mark)[ FD ]
Line_7 $$ for (String mark : marks) -->Line_18 $$ List<Integer> cardList = cards.get(mark)[ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ CD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ CD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_20 $$ if (!cardList.contains(i)) [ CD ]
Line_20 $$ if (!cardList.contains(i)) -->Line_20 $$ if (!cardList.contains(i)) [ CD ]
Line_20 $$ if (!cardList.contains(i)) -->Line_20 $$ if (!cardList.contains(i)) [ CD ]
Line_18 $$ List<Integer> cardList = cards.get(mark)-->Line_20 $$ if (!cardList.contains(i)) [ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_20 $$ if (!cardList.contains(i)) [ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_20 $$ if (!cardList.contains(i)) [ FD ]
Line_20 $$ if (!cardList.contains(i)) -->Line_21 $$ System.out.println(mark + " " + i)[ CD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ FD ]
Line_10 $$ for (int i = 0; i < cardCount; i++) -->Line_10 $$ for (int i = 0; i < cardCount; i++) [ FD ]
Line_11 $$ String line = reader.readLine()-->Line_12 $$ String[] in = line.split(" ")[ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_19 $$ for (int i = 1; i <= 13; i++) [ FD ]
Line_19 $$ for (int i = 1; i <= 13; i++) -->Line_20 $$ if (!cardList.contains(i)) [ FD ]
