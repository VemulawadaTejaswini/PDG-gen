Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ String str[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ while ((str = in.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_5 $$ while ((str = in.readLine()) != null) -->Line_5 $$ while ((str = in.readLine()) != null) [ FD ]
Line_4 $$ String str-->Line_5 $$ while ((str = in.readLine()) != null) [ FD ]
Line_5 $$ while ((str = in.readLine()) != null) -->Line_5 $$ while ((str = in.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ while ((str = in.readLine()) != null) [ FD ]
Line_5 $$ while ((str = in.readLine()) != null) -->Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)[ CD ]
Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)-->Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)[ CD ]
Line_5 $$ while ((str = in.readLine()) != null) -->Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)[ FD ]
Line_4 $$ String str-->Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)[ FD ]
Line_5 $$ while ((str = in.readLine()) != null) -->Line_7 $$ System.out.print(reverse.reverse() + "\n")[ CD ]
Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)-->Line_7 $$ System.out.print(reverse.reverse() + "\n")[ FD ]
Line_5 $$ while ((str = in.readLine()) != null) -->Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)[ FD ]
Line_6 $$ StringBuffer reverse = new StringBuffer().append(str)-->Line_7 $$ System.out.print(reverse.reverse() + "\n")[ FD ]
