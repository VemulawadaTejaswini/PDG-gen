Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String S = sc.next()[ CD ]
Line_5 $$ String S = sc.next()-->Line_5 $$ String S = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String S = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ String[] splitS = S.split("", 0)[ CD ]
Line_6 $$ String[] splitS = S.split("", 0)-->Line_6 $$ String[] splitS = S.split("", 0)[ CD ]
Line_5 $$ String S = sc.next()-->Line_6 $$ String[] splitS = S.split("", 0)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ ArrayList<byte[]> list = new ArrayList<byte[]>()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ byte[] bytes = new byte[4][ CD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ for (int i = 0; i < splitS.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ for (int i = 0; i < splitS.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ for (int i = 0; i < splitS.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_11 $$ bytes = splitS[i].getBytes("UTF-16")[ CD ]
Line_11 $$ bytes = splitS[i].getBytes("UTF-16")-->Line_11 $$ bytes = splitS[i].getBytes("UTF-16")[ FD ]
Line_8 $$ byte[] bytes = new byte[4]-->Line_11 $$ bytes = splitS[i].getBytes("UTF-16")[ FD ]
Line_11 $$ bytes = splitS[i].getBytes("UTF-16")-->Line_11 $$ bytes = splitS[i].getBytes("UTF-16")[ CD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_12 $$ bytes[3] += N[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_12 $$ bytes[3] += N[ FD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_13 $$ if (bytes[3] > 90) [ CD ]
Line_13 $$ if (bytes[3] > 90) -->Line_14 $$ bytes[3] -= 26[ CD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_16 $$ String newStr = new String(bytes, "UTF-16")[ CD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_17 $$ System.out.print(newStr)[ CD ]
Line_16 $$ String newStr = new String(bytes, "UTF-16")-->Line_17 $$ System.out.print(newStr)[ FD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ for (int i = 0; i < splitS.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ for (int i = 0; i < splitS.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < splitS.length; i++) -->Line_10 $$ for (int i = 0; i < splitS.length; i++) [ FD ]
Line_16 $$ String newStr = new String(bytes, "UTF-16")-->Line_17 $$ System.out.print(newStr)[ FD ]
