Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int N = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int N = Integer.parseInt(br.readLine())-->Line_4 $$ int N = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int N = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] IN = br.readLine().split(" ")[ CD ]
Line_5 $$ String[] IN = br.readLine().split(" ")-->Line_5 $$ String[] IN = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] IN = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String ans = "YES"[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ HashMap<String, Integer> count = new HashMap<String, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int N = Integer.parseInt(br.readLine())-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ if (!count.containsKey(IN[i])) [ CD ]
Line_9 $$ if (!count.containsKey(IN[i])) -->Line_9 $$ if (!count.containsKey(IN[i])) [ CD ]
Line_9 $$ if (!count.containsKey(IN[i])) -->Line_9 $$ if (!count.containsKey(IN[i])) [ CD ]
Line_7 $$ HashMap<String, Integer> count = new HashMap<String, Integer>()-->Line_9 $$ if (!count.containsKey(IN[i])) [ FD ]
Line_9 $$ if (!count.containsKey(IN[i])) -->Line_10 $$ count.put(IN[i], 1)[ CD ]
Line_7 $$ HashMap<String, Integer> count = new HashMap<String, Integer>()-->Line_10 $$ count.put(IN[i], 1)[ FD ]
Line_9 $$ if (!count.containsKey(IN[i])) -->Line_12 $$ int now = count.get(IN[i])[ CD ]
Line_12 $$ int now = count.get(IN[i])-->Line_12 $$ int now = count.get(IN[i])[ CD ]
Line_7 $$ HashMap<String, Integer> count = new HashMap<String, Integer>()-->Line_12 $$ int now = count.get(IN[i])[ FD ]
Line_9 $$ if (!count.containsKey(IN[i])) -->Line_13 $$ count.replace(IN[i], now + 1)[ CD ]
Line_7 $$ HashMap<String, Integer> count = new HashMap<String, Integer>()-->Line_13 $$ count.replace(IN[i], now + 1)[ FD ]
Line_7 $$ HashMap<String, Integer> count = new HashMap<String, Integer>()-->Line_16 $$ for (int key1 : count.values()) [ FD ]
Line_16 $$ for (int key1 : count.values()) -->Line_17 $$ if (key1 > 1) [ FD ]
Line_17 $$ if (key1 > 1) -->Line_18 $$ ans = "NO"[ CD ]
Line_6 $$ String ans = "YES"-->Line_18 $$ ans = "NO"[ FD ]
Line_18 $$ ans = "NO"-->Line_18 $$ ans = "NO"[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_21 $$ System.out.println(ans)[ CD ]
Line_6 $$ String ans = "YES"-->Line_21 $$ System.out.println(ans)[ FD ]
Line_18 $$ ans = "NO"-->Line_21 $$ System.out.println(ans)[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
