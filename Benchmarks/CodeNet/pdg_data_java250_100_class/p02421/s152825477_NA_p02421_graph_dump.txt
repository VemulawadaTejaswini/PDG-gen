Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ int deck = scanner.nextInt()[ CD ]
Line_4 $$ int deck = scanner.nextInt()-->Line_4 $$ int deck = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int deck = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ int sum_t = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ int sum_h = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ int Judge = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_9 $$ int card_stlength_t[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_10 $$ int card_stlength_h[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ int card_stlength[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_12 $$ int case_st = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_13 $$ String work_t, work_h[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_14 $$ String alf[] = [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_16 $$ boolean bJudge = true[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_17 $$ do [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_17 $$ do -->Line_18 $$ String card_t = scanner.next()[ CD ]
Line_18 $$ String card_t = scanner.next()-->Line_18 $$ String card_t = scanner.next()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_18 $$ String card_t = scanner.next()[ FD ]
Line_17 $$ do -->Line_19 $$ String card_h = scanner.next()[ CD ]
Line_19 $$ String card_h = scanner.next()-->Line_19 $$ String card_h = scanner.next()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_19 $$ String card_h = scanner.next()[ FD ]
Line_17 $$ do -->Line_20 $$ if (card_t.equals(card_h)) [ CD ]
Line_18 $$ String card_t = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_19 $$ String card_h = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_20 $$ if (card_t.equals(card_h)) -->Line_20 $$ if (card_t.equals(card_h)) [ CD ]
Line_18 $$ String card_t = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_19 $$ String card_h = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_20 $$ if (card_t.equals(card_h)) -->Line_21 $$ Judge = 0[ CD ]
Line_21 $$ Judge = 0-->Line_21 $$ Judge = 0[ FD ]
Line_8 $$ int Judge = 0-->Line_21 $$ Judge = 0[ FD ]
Line_17 $$ do -->Line_23 $$ card_stlength_t = card_t.length()[ CD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_23 $$ card_stlength_t = card_t.length()[ FD ]
Line_9 $$ int card_stlength_t-->Line_23 $$ card_stlength_t = card_t.length()[ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_23 $$ card_stlength_t = card_t.length()[ CD ]
Line_18 $$ String card_t = scanner.next()-->Line_23 $$ card_stlength_t = card_t.length()[ FD ]
Line_17 $$ do -->Line_24 $$ card_stlength_h = card_h.length()[ CD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_24 $$ card_stlength_h = card_h.length()[ FD ]
Line_10 $$ int card_stlength_h-->Line_24 $$ card_stlength_h = card_h.length()[ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_24 $$ card_stlength_h = card_h.length()[ CD ]
Line_19 $$ String card_h = scanner.next()-->Line_24 $$ card_stlength_h = card_h.length()[ FD ]
Line_17 $$ do -->Line_25 $$ if (card_stlength_t == card_stlength_h) [ CD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_25 $$ if (card_stlength_t == card_stlength_h) [ FD ]
Line_9 $$ int card_stlength_t-->Line_25 $$ if (card_stlength_t == card_stlength_h) [ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_25 $$ if (card_stlength_t == card_stlength_h) [ FD ]
Line_10 $$ int card_stlength_h-->Line_25 $$ if (card_stlength_t == card_stlength_h) [ FD ]
Line_25 $$ if (card_stlength_t == card_stlength_h) -->Line_26 $$ card_stlength = card_stlength_t[ CD ]
Line_26 $$ card_stlength = card_stlength_t-->Line_26 $$ card_stlength = card_stlength_t[ FD ]
Line_11 $$ int card_stlength-->Line_26 $$ card_stlength = card_stlength_t[ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_26 $$ card_stlength = card_stlength_t[ FD ]
Line_9 $$ int card_stlength_t-->Line_26 $$ card_stlength = card_stlength_t[ FD ]
Line_25 $$ if (card_stlength_t == card_stlength_h) -->Line_27 $$ case_st = 0[ CD ]
Line_27 $$ case_st = 0-->Line_27 $$ case_st = 0[ FD ]
Line_12 $$ int case_st = 0-->Line_27 $$ case_st = 0[ FD ]
Line_25 $$ if (card_stlength_t == card_stlength_h) -->Line_28 $$ if (card_stlength_t > card_stlength_h) [ CD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_28 $$ if (card_stlength_t > card_stlength_h) [ FD ]
Line_9 $$ int card_stlength_t-->Line_28 $$ if (card_stlength_t > card_stlength_h) [ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_28 $$ if (card_stlength_t > card_stlength_h) [ FD ]
Line_10 $$ int card_stlength_h-->Line_28 $$ if (card_stlength_t > card_stlength_h) [ FD ]
Line_28 $$ if (card_stlength_t > card_stlength_h) -->Line_29 $$ card_stlength = card_stlength_t[ CD ]
Line_26 $$ card_stlength = card_stlength_t-->Line_29 $$ card_stlength = card_stlength_t[ FD ]
Line_29 $$ card_stlength = card_stlength_t-->Line_29 $$ card_stlength = card_stlength_t[ FD ]
Line_11 $$ int card_stlength-->Line_29 $$ card_stlength = card_stlength_t[ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_29 $$ card_stlength = card_stlength_t[ FD ]
Line_9 $$ int card_stlength_t-->Line_29 $$ card_stlength = card_stlength_t[ FD ]
Line_28 $$ if (card_stlength_t > card_stlength_h) -->Line_30 $$ case_st = 1[ CD ]
Line_27 $$ case_st = 0-->Line_30 $$ case_st = 1[ FD ]
Line_30 $$ case_st = 1-->Line_30 $$ case_st = 1[ FD ]
Line_12 $$ int case_st = 0-->Line_30 $$ case_st = 1[ FD ]
Line_28 $$ if (card_stlength_t > card_stlength_h) -->Line_32 $$ card_stlength = card_stlength_h[ CD ]
Line_26 $$ card_stlength = card_stlength_t-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_29 $$ card_stlength = card_stlength_t-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_32 $$ card_stlength = card_stlength_h-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_11 $$ int card_stlength-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_10 $$ int card_stlength_h-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_28 $$ if (card_stlength_t > card_stlength_h) -->Line_33 $$ case_st = 2[ CD ]
Line_27 $$ case_st = 0-->Line_33 $$ case_st = 2[ FD ]
Line_30 $$ case_st = 1-->Line_33 $$ case_st = 2[ FD ]
Line_33 $$ case_st = 2-->Line_33 $$ case_st = 2[ FD ]
Line_12 $$ int case_st = 0-->Line_33 $$ case_st = 2[ FD ]
Line_17 $$ do -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ CD ]
Line_17 $$ do -->Line_17 $$ do [ CD ]
Line_26 $$ card_stlength = card_stlength_t-->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_29 $$ card_stlength = card_stlength_t-->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_32 $$ card_stlength = card_stlength_h-->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_11 $$ int card_stlength-->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ CD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ CD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_36 $$ if (case_st == 1 && i == card_stlength_h) [ CD ]
Line_36 $$ if (case_st == 1 && i == card_stlength_h) -->Line_37 $$ Judge = 1[ CD ]
Line_37 $$ Judge = 1-->Line_37 $$ Judge = 1[ FD ]
Line_21 $$ Judge = 0-->Line_37 $$ Judge = 1[ FD ]
Line_8 $$ int Judge = 0-->Line_37 $$ Judge = 1[ FD ]
Line_36 $$ if (case_st == 1 && i == card_stlength_h) -->Line_39 $$ if (case_st == 2 && i == card_stlength_t) [ CD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_40 $$ Judge = 2[ CD ]
Line_37 $$ Judge = 1-->Line_40 $$ Judge = 2[ FD ]
Line_40 $$ Judge = 2-->Line_40 $$ Judge = 2[ FD ]
Line_21 $$ Judge = 0-->Line_40 $$ Judge = 2[ FD ]
Line_8 $$ int Judge = 0-->Line_40 $$ Judge = 2[ FD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_43 $$ work_t = card_t.substring(i, i + 1)[ CD ]
Line_43 $$ work_t = card_t.substring(i, i + 1)-->Line_43 $$ work_t = card_t.substring(i, i + 1)[ FD ]
Line_13 $$ String work_t, work_h-->Line_43 $$ work_t = card_t.substring(i, i + 1)[ FD ]
Line_43 $$ work_t = card_t.substring(i, i + 1)-->Line_43 $$ work_t = card_t.substring(i, i + 1)[ CD ]
Line_18 $$ String card_t = scanner.next()-->Line_43 $$ work_t = card_t.substring(i, i + 1)[ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_43 $$ work_t = card_t.substring(i, i + 1)[ FD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_44 $$ int j = 0[ CD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_45 $$ int k = 0[ CD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_46 $$ int ncard_t = 0, ncard_h = 0[ CD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_47 $$ while (true) [ CD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_39 $$ if (case_st == 2 && i == card_stlength_t) [ CD ]
Line_47 $$ while (true) -->Line_48 $$ ncard_t++[ CD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_48 $$ ncard_t++[ FD ]
Line_47 $$ while (true) -->Line_49 $$ if (work_t.equals(alf[j]))[ CD ]
Line_43 $$ work_t = card_t.substring(i, i + 1)-->Line_49 $$ if (work_t.equals(alf[j]))[ FD ]
Line_13 $$ String work_t, work_h-->Line_49 $$ if (work_t.equals(alf[j]))[ FD ]
Line_49 $$ if (work_t.equals(alf[j]))-->Line_49 $$ if (work_t.equals(alf[j]))[ CD ]
Line_43 $$ work_t = card_t.substring(i, i + 1)-->Line_49 $$ if (work_t.equals(alf[j]))[ FD ]
Line_13 $$ String work_t, work_h-->Line_49 $$ if (work_t.equals(alf[j]))[ FD ]
Line_47 $$ while (true) -->Line_51 $$ j++[ CD ]
Line_44 $$ int j = 0-->Line_51 $$ j++[ FD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_53 $$ work_h = card_h.substring(i, i + 1)[ CD ]
Line_53 $$ work_h = card_h.substring(i, i + 1)-->Line_53 $$ work_h = card_h.substring(i, i + 1)[ FD ]
Line_13 $$ String work_t, work_h-->Line_53 $$ work_h = card_h.substring(i, i + 1)[ FD ]
Line_53 $$ work_h = card_h.substring(i, i + 1)-->Line_53 $$ work_h = card_h.substring(i, i + 1)[ CD ]
Line_19 $$ String card_h = scanner.next()-->Line_53 $$ work_h = card_h.substring(i, i + 1)[ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_53 $$ work_h = card_h.substring(i, i + 1)[ FD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_54 $$ while (true) [ CD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_39 $$ if (case_st == 2 && i == card_stlength_t) [ CD ]
Line_54 $$ while (true) -->Line_55 $$ ncard_h++[ CD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_55 $$ ncard_h++[ FD ]
Line_54 $$ while (true) -->Line_56 $$ if (work_h.equals(alf[k]))[ CD ]
Line_53 $$ work_h = card_h.substring(i, i + 1)-->Line_56 $$ if (work_h.equals(alf[k]))[ FD ]
Line_13 $$ String work_t, work_h-->Line_56 $$ if (work_h.equals(alf[k]))[ FD ]
Line_56 $$ if (work_h.equals(alf[k]))-->Line_56 $$ if (work_h.equals(alf[k]))[ CD ]
Line_53 $$ work_h = card_h.substring(i, i + 1)-->Line_56 $$ if (work_h.equals(alf[k]))[ FD ]
Line_13 $$ String work_t, work_h-->Line_56 $$ if (work_h.equals(alf[k]))[ FD ]
Line_54 $$ while (true) -->Line_58 $$ k++[ CD ]
Line_45 $$ int k = 0-->Line_58 $$ k++[ FD ]
Line_39 $$ if (case_st == 2 && i == card_stlength_t) -->Line_60 $$ if (ncard_t > ncard_h) [ CD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_60 $$ if (ncard_t > ncard_h) [ FD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_60 $$ if (ncard_t > ncard_h) [ FD ]
Line_60 $$ if (ncard_t > ncard_h) -->Line_61 $$ Judge = 1[ CD ]
Line_37 $$ Judge = 1-->Line_61 $$ Judge = 1[ FD ]
Line_40 $$ Judge = 2-->Line_61 $$ Judge = 1[ FD ]
Line_61 $$ Judge = 1-->Line_61 $$ Judge = 1[ FD ]
Line_21 $$ Judge = 0-->Line_61 $$ Judge = 1[ FD ]
Line_8 $$ int Judge = 0-->Line_61 $$ Judge = 1[ FD ]
Line_60 $$ if (ncard_t > ncard_h) -->Line_63 $$ if (ncard_t < ncard_h) [ CD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_63 $$ if (ncard_t < ncard_h) [ FD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_63 $$ if (ncard_t < ncard_h) [ FD ]
Line_63 $$ if (ncard_t < ncard_h) -->Line_64 $$ Judge = 2[ CD ]
Line_37 $$ Judge = 1-->Line_64 $$ Judge = 2[ FD ]
Line_40 $$ Judge = 2-->Line_64 $$ Judge = 2[ FD ]
Line_61 $$ Judge = 1-->Line_64 $$ Judge = 2[ FD ]
Line_64 $$ Judge = 2-->Line_64 $$ Judge = 2[ FD ]
Line_21 $$ Judge = 0-->Line_64 $$ Judge = 2[ FD ]
Line_8 $$ int Judge = 0-->Line_64 $$ Judge = 2[ FD ]
Line_6 $$ int sum_t = 0-->Line_71 $$ sum_t++[ FD ]
Line_7 $$ int sum_h = 0-->Line_72 $$ sum_h++[ FD ]
Line_75 $$ sum_t += 3-->Line_75 $$ sum_t += 3[ FD ]
Line_6 $$ int sum_t = 0-->Line_75 $$ sum_t += 3[ FD ]
Line_78 $$ sum_h += 3-->Line_78 $$ sum_h += 3[ FD ]
Line_7 $$ int sum_h = 0-->Line_78 $$ sum_h += 3[ FD ]
Line_17 $$ do -->Line_81 $$ count++[ CD ]
Line_5 $$ int count = 0-->Line_81 $$ count++[ FD ]
Line_17 $$ do -->Line_82 $$ if (count >= deck) [ CD ]
Line_5 $$ int count = 0-->Line_82 $$ if (count >= deck) [ FD ]
Line_4 $$ int deck = scanner.nextInt()-->Line_82 $$ if (count >= deck) [ FD ]
Line_82 $$ if (count >= deck) -->Line_83 $$ bJudge = false[ CD ]
Line_83 $$ bJudge = false-->Line_83 $$ bJudge = false[ FD ]
Line_16 $$ boolean bJudge = true-->Line_83 $$ bJudge = false[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_86 $$ System.out.println(sum_t + " " + sum_h)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_87 $$ scanner.close()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_87 $$ scanner.close()[ FD ]
Line_18 $$ String card_t = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_19 $$ String card_h = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_18 $$ String card_t = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_19 $$ String card_h = scanner.next()-->Line_20 $$ if (card_t.equals(card_h)) [ FD ]
Line_18 $$ String card_t = scanner.next()-->Line_23 $$ card_stlength_t = card_t.length()[ FD ]
Line_19 $$ String card_h = scanner.next()-->Line_24 $$ card_stlength_h = card_h.length()[ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_25 $$ if (card_stlength_t == card_stlength_h) [ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_25 $$ if (card_stlength_t == card_stlength_h) [ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_26 $$ card_stlength = card_stlength_t[ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_28 $$ if (card_stlength_t > card_stlength_h) [ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_28 $$ if (card_stlength_t > card_stlength_h) [ FD ]
Line_23 $$ card_stlength_t = card_t.length()-->Line_29 $$ card_stlength = card_stlength_t[ FD ]
Line_24 $$ card_stlength_h = card_h.length()-->Line_32 $$ card_stlength = card_stlength_h[ FD ]
Line_75 $$ sum_t += 3-->Line_71 $$ sum_t++[ FD ]
Line_78 $$ sum_h += 3-->Line_72 $$ sum_h++[ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_35 $$ for (int i = 0; i < card_stlength; i++) [ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_43 $$ work_t = card_t.substring(i, i + 1)[ FD ]
Line_35 $$ for (int i = 0; i < card_stlength; i++) -->Line_53 $$ work_h = card_h.substring(i, i + 1)[ FD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_60 $$ if (ncard_t > ncard_h) [ FD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_60 $$ if (ncard_t > ncard_h) [ FD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_63 $$ if (ncard_t < ncard_h) [ FD ]
Line_46 $$ int ncard_t = 0, ncard_h = 0-->Line_63 $$ if (ncard_t < ncard_h) [ FD ]
