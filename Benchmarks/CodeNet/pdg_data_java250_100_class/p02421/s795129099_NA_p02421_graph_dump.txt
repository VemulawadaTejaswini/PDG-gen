Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String line1 = br.readLine()[ CD ]
Line_4 $$ String line1 = br.readLine()-->Line_4 $$ String line1 = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String line1 = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int n = Integer.parseInt(line1)[ CD ]
Line_5 $$ int n = Integer.parseInt(line1)-->Line_5 $$ int n = Integer.parseInt(line1)[ CD ]
Line_4 $$ String line1 = br.readLine()-->Line_5 $$ int n = Integer.parseInt(line1)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int taro = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int hanako = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ int n = Integer.parseInt(line1)-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ String line = br.readLine()[ CD ]
Line_9 $$ String line = br.readLine()-->Line_9 $$ String line = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ String line = br.readLine()[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ String[] str = line.split(" ")[ CD ]
Line_10 $$ String[] str = line.split(" ")-->Line_10 $$ String[] str = line.split(" ")[ CD ]
Line_9 $$ String line = br.readLine()-->Line_10 $$ String[] str = line.split(" ")[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_11 $$ if (str[0].compareToIgnoreCase(str[1]) > 0) [ CD ]
Line_11 $$ if (str[0].compareToIgnoreCase(str[1]) > 0) -->Line_12 $$ taro = taro + 3[ CD ]
Line_12 $$ taro = taro + 3-->Line_12 $$ taro = taro + 3[ FD ]
Line_6 $$ int taro = 0-->Line_12 $$ taro = taro + 3[ FD ]
Line_12 $$ taro = taro + 3-->Line_12 $$ taro = taro + 3[ FD ]
Line_6 $$ int taro = 0-->Line_12 $$ taro = taro + 3[ FD ]
Line_11 $$ if (str[0].compareToIgnoreCase(str[1]) > 0) -->Line_13 $$ if (str[0].compareToIgnoreCase(str[1]) < 0) [ CD ]
Line_13 $$ if (str[0].compareToIgnoreCase(str[1]) < 0) -->Line_14 $$ hanako = hanako + 3[ CD ]
Line_14 $$ hanako = hanako + 3-->Line_14 $$ hanako = hanako + 3[ FD ]
Line_7 $$ int hanako = 0-->Line_14 $$ hanako = hanako + 3[ FD ]
Line_14 $$ hanako = hanako + 3-->Line_14 $$ hanako = hanako + 3[ FD ]
Line_7 $$ int hanako = 0-->Line_14 $$ hanako = hanako + 3[ FD ]
Line_13 $$ if (str[0].compareToIgnoreCase(str[1]) < 0) -->Line_16 $$ taro++[ CD ]
Line_12 $$ taro = taro + 3-->Line_16 $$ taro++[ FD ]
Line_6 $$ int taro = 0-->Line_16 $$ taro++[ FD ]
Line_13 $$ if (str[0].compareToIgnoreCase(str[1]) < 0) -->Line_17 $$ hanako++[ CD ]
Line_14 $$ hanako = hanako + 3-->Line_17 $$ hanako++[ FD ]
Line_7 $$ int hanako = 0-->Line_17 $$ hanako++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ System.out.println(taro + " " + hanako)[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ String line = br.readLine()-->Line_10 $$ String[] str = line.split(" ")[ FD ]
Line_12 $$ taro = taro + 3-->Line_12 $$ taro = taro + 3[ FD ]
Line_14 $$ hanako = hanako + 3-->Line_14 $$ hanako = hanako + 3[ FD ]
Line_12 $$ taro = taro + 3-->Line_16 $$ taro++[ FD ]
Line_14 $$ hanako = hanako + 3-->Line_17 $$ hanako++[ FD ]
