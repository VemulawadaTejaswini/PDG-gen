Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_5 $$ int n = Integer.parseInt(kb.readLine())-->Line_5 $$ int n = Integer.parseInt(kb.readLine())[ CD ]
Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int n = Integer.parseInt(kb.readLine())[ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_9 $$ i = 0[ FD ]
Line_9 $$ i = 0-->Line_9 $$ i = 0[ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_10 $$ while (i < n) [ FD ]
Line_9 $$ i = 0-->Line_10 $$ while (i < n) [ FD ]
Line_5 $$ int n = Integer.parseInt(kb.readLine())-->Line_10 $$ while (i < n) [ FD ]
Line_10 $$ while (i < n) -->Line_11 $$ cards = kb.readLine().split(" ")[ CD ]
Line_11 $$ cards = kb.readLine().split(" ")-->Line_11 $$ cards = kb.readLine().split(" ")[ FD ]
Line_6 $$ String[] cards = new String[2]-->Line_11 $$ cards = kb.readLine().split(" ")[ FD ]
Line_11 $$ cards = kb.readLine().split(" ")-->Line_11 $$ cards = kb.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ cards = kb.readLine().split(" ")[ FD ]
Line_10 $$ while (i < n) -->Line_12 $$ if (cards[0].equals(cards[1])) [ CD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_12 $$ if (cards[0].equals(cards[1])) [ CD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_13 $$ hanakoScore += 1[ CD ]
Line_13 $$ hanakoScore += 1-->Line_13 $$ hanakoScore += 1[ FD ]
Line_7 $$ int hanakoScore = 0, taroScore = 0-->Line_13 $$ hanakoScore += 1[ FD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_14 $$ taroScore += 1[ CD ]
Line_14 $$ taroScore += 1-->Line_14 $$ taroScore += 1[ FD ]
Line_7 $$ int hanakoScore = 0, taroScore = 0-->Line_14 $$ taroScore += 1[ FD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_16 $$ j = 0[ CD ]
Line_16 $$ j = 0-->Line_16 $$ j = 0[ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_16 $$ j = 0[ FD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_17 $$ hlen = cards[0].length()[ CD ]
Line_17 $$ hlen = cards[0].length()-->Line_17 $$ hlen = cards[0].length()[ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_17 $$ hlen = cards[0].length()[ FD ]
Line_17 $$ hlen = cards[0].length()-->Line_17 $$ hlen = cards[0].length()[ CD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_18 $$ tlen = cards[1].length()[ CD ]
Line_18 $$ tlen = cards[1].length()-->Line_18 $$ tlen = cards[1].length()[ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_18 $$ tlen = cards[1].length()[ FD ]
Line_18 $$ tlen = cards[1].length()-->Line_18 $$ tlen = cards[1].length()[ CD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_19 $$ while (true) [ CD ]
Line_12 $$ if (cards[0].equals(cards[1])) -->Line_12 $$ if (cards[0].equals(cards[1])) [ CD ]
Line_19 $$ while (true) -->Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) [ CD ]
Line_16 $$ j = 0-->Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) [ FD ]
Line_16 $$ j = 0-->Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) [ FD ]
Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) -->Line_21 $$ taroScore += 3[ CD ]
Line_21 $$ taroScore += 3-->Line_21 $$ taroScore += 3[ FD ]
Line_14 $$ taroScore += 1-->Line_21 $$ taroScore += 3[ FD ]
Line_7 $$ int hanakoScore = 0, taroScore = 0-->Line_21 $$ taroScore += 3[ FD ]
Line_20 $$ if (cards[0].charAt(j) < cards[1].charAt(j)) -->Line_23 $$ if (cards[0].charAt(j) > cards[1].charAt(j)) [ CD ]
Line_16 $$ j = 0-->Line_23 $$ if (cards[0].charAt(j) > cards[1].charAt(j)) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_23 $$ if (cards[0].charAt(j) > cards[1].charAt(j)) [ FD ]
Line_16 $$ j = 0-->Line_23 $$ if (cards[0].charAt(j) > cards[1].charAt(j)) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_23 $$ if (cards[0].charAt(j) > cards[1].charAt(j)) [ FD ]
Line_23 $$ if (cards[0].charAt(j) > cards[1].charAt(j)) -->Line_24 $$ hanakoScore += 3[ CD ]
Line_24 $$ hanakoScore += 3-->Line_24 $$ hanakoScore += 3[ FD ]
Line_13 $$ hanakoScore += 1-->Line_24 $$ hanakoScore += 3[ FD ]
Line_7 $$ int hanakoScore = 0, taroScore = 0-->Line_24 $$ hanakoScore += 3[ FD ]
Line_19 $$ while (true) -->Line_27 $$ j++[ CD ]
Line_16 $$ j = 0-->Line_27 $$ j++[ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_27 $$ j++[ FD ]
Line_19 $$ while (true) -->Line_28 $$ if (j == hlen || j == tlen) [ CD ]
Line_28 $$ if (j == hlen || j == tlen) -->Line_29 $$ if (hlen < tlen) [ CD ]
Line_17 $$ hlen = cards[0].length()-->Line_29 $$ if (hlen < tlen) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_29 $$ if (hlen < tlen) [ FD ]
Line_18 $$ tlen = cards[1].length()-->Line_29 $$ if (hlen < tlen) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_29 $$ if (hlen < tlen) [ FD ]
Line_29 $$ if (hlen < tlen) -->Line_30 $$ taroScore += 3[ CD ]
Line_21 $$ taroScore += 3-->Line_30 $$ taroScore += 3[ FD ]
Line_30 $$ taroScore += 3-->Line_30 $$ taroScore += 3[ FD ]
Line_14 $$ taroScore += 1-->Line_30 $$ taroScore += 3[ FD ]
Line_7 $$ int hanakoScore = 0, taroScore = 0-->Line_30 $$ taroScore += 3[ FD ]
Line_29 $$ if (hlen < tlen) -->Line_32 $$ if (hlen > tlen) [ CD ]
Line_17 $$ hlen = cards[0].length()-->Line_32 $$ if (hlen > tlen) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_32 $$ if (hlen > tlen) [ FD ]
Line_18 $$ tlen = cards[1].length()-->Line_32 $$ if (hlen > tlen) [ FD ]
Line_8 $$ int i, j, hlen, tlen-->Line_32 $$ if (hlen > tlen) [ FD ]
Line_32 $$ if (hlen > tlen) -->Line_33 $$ hanakoScore += 3[ CD ]
Line_24 $$ hanakoScore += 3-->Line_33 $$ hanakoScore += 3[ FD ]
Line_33 $$ hanakoScore += 3-->Line_33 $$ hanakoScore += 3[ FD ]
Line_13 $$ hanakoScore += 1-->Line_33 $$ hanakoScore += 3[ FD ]
Line_7 $$ int hanakoScore = 0, taroScore = 0-->Line_33 $$ hanakoScore += 3[ FD ]
Line_10 $$ while (i < n) -->Line_39 $$ i++[ CD ]
Line_8 $$ int i, j, hlen, tlen-->Line_39 $$ i++[ FD ]
Line_9 $$ i = 0-->Line_39 $$ i++[ FD ]
