Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int aCount = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int bCount = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int cCount = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int x = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int answer = 0[ CD ]
Line_4 $$ int aCount = 0-->Line_10 $$ aCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_10 $$ aCount = Integer.parseInt(bufferedReader.readLine())-->Line_10 $$ aCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_10 $$ aCount = Integer.parseInt(bufferedReader.readLine())-->Line_10 $$ aCount = Integer.parseInt(bufferedReader.readLine())[ CD ]
Line_3 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ aCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_5 $$ int bCount = 0-->Line_11 $$ bCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_11 $$ bCount = Integer.parseInt(bufferedReader.readLine())-->Line_11 $$ bCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_11 $$ bCount = Integer.parseInt(bufferedReader.readLine())-->Line_11 $$ bCount = Integer.parseInt(bufferedReader.readLine())[ CD ]
Line_3 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ bCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_6 $$ int cCount = 0-->Line_12 $$ cCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_12 $$ cCount = Integer.parseInt(bufferedReader.readLine())-->Line_12 $$ cCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_12 $$ cCount = Integer.parseInt(bufferedReader.readLine())-->Line_12 $$ cCount = Integer.parseInt(bufferedReader.readLine())[ CD ]
Line_3 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ cCount = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_7 $$ int x = 0-->Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())-->Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())-->Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())[ CD ]
Line_3 $$ BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ CD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ CD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ FD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ CD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ CD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ CD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ CD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ FD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ CD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ CD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ CD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ CD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ FD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_20 $$ int total = 500 * i + 100 * j + 50 * k[ CD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_21 $$ if (total == x) [ CD ]
Line_20 $$ int total = 500 * i + 100 * j + 50 * k-->Line_21 $$ if (total == x) [ FD ]
Line_7 $$ int x = 0-->Line_21 $$ if (total == x) [ FD ]
Line_13 $$ x = Integer.parseInt(bufferedReader.readLine())-->Line_21 $$ if (total == x) [ FD ]
Line_21 $$ if (total == x) -->Line_22 $$ answer++[ CD ]
Line_8 $$ int answer = 0-->Line_22 $$ answer++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_27 $$ System.out.println(answer)[ CD ]
Line_8 $$ int answer = 0-->Line_27 $$ System.out.println(answer)[ FD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ FD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ FD ]
Line_17 $$ for (int i = 0; i < aCount + 1; i++) -->Line_17 $$ for (int i = 0; i < aCount + 1; i++) [ FD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ FD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ FD ]
Line_18 $$ for (int j = 0; j < bCount + 1; j++) -->Line_18 $$ for (int j = 0; j < bCount + 1; j++) [ FD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ FD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ FD ]
Line_19 $$ for (int k = 0; k < cCount + 1; k++) -->Line_19 $$ for (int k = 0; k < cCount + 1; k++) [ FD ]
Line_20 $$ int total = 500 * i + 100 * j + 50 * k-->Line_21 $$ if (total == x) [ FD ]
