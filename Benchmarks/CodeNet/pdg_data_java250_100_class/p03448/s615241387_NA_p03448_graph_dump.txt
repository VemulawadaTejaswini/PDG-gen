Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] arcs) throws IOException [ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_4 $$ int[] args = new int[4][ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_5 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_2 $$ public static void main(String[] arcs) throws IOException [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ CD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_6 $$ args[i] = Integer.parseInt(br.readLine())[ CD ]
Line_6 $$ args[i] = Integer.parseInt(br.readLine())-->Line_6 $$ args[i] = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ args[i] = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_8 $$ args[3] = Integer.parseInt(br.readLine()) / 50[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ args[3] = Integer.parseInt(br.readLine()) / 50[ FD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_9 $$ int c2 = 0[ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_10 $$ int c10 = 0[ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_11 $$ int counter = 0[ CD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_12 $$ if (args[0] * 10 + args[1] * 2 + args[2] >= args[3]) [ CD ]
Line_12 $$ if (args[0] * 10 + args[1] * 2 + args[2] >= args[3]) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ CD ]
Line_12 $$ if (args[0] * 10 + args[1] * 2 + args[2] >= args[3]) -->Line_12 $$ if (args[0] * 10 + args[1] * 2 + args[2] >= args[3]) [ CD ]
Line_10 $$ int c10 = 0-->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ CD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_10 $$ int c10 = 0-->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ CD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_10 $$ int c10 = 0-->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_14 $$ if (c10 * 10 > args[3]) [ CD ]
Line_14 $$ if (c10 * 10 > args[3]) -->Line_17 $$ if (c10 * 10 + args[1] * 2 + args[2] < args[3]) [ CD ]
Line_17 $$ if (c10 * 10 + args[1] * 2 + args[2] < args[3]) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ CD ]
Line_17 $$ if (c10 * 10 + args[1] * 2 + args[2] < args[3]) -->Line_17 $$ if (c10 * 10 + args[1] * 2 + args[2] < args[3]) [ CD ]
Line_9 $$ int c2 = 0-->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ CD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_9 $$ int c2 = 0-->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ CD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_9 $$ int c2 = 0-->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_21 $$ if (c10 * 10 + c2 * 2 > args[3]) [ CD ]
Line_21 $$ if (c10 * 10 + c2 * 2 > args[3]) -->Line_24 $$ if (c10 * 10 + c2 * 2 + args[2] < args[3]) [ CD ]
Line_24 $$ if (c10 * 10 + c2 * 2 + args[2] < args[3]) -->Line_26 $$ counter++[ CD ]
Line_11 $$ int counter = 0-->Line_26 $$ counter++[ FD ]
Line_2 $$ public static void main(String[] arcs) throws IOException -->Line_32 $$ System.out.println(counter)[ CD ]
Line_11 $$ int counter = 0-->Line_32 $$ System.out.println(counter)[ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_5 $$ for (int i = 0; i < 3; i++) -->Line_5 $$ for (int i = 0; i < 3; i++) [ FD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) -->Line_13 $$ for (c10 = 0; c10 <= args[0]; c10++) [ FD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) -->Line_20 $$ for (c2 = 0; c2 <= args[1]; c2++) [ FD ]
