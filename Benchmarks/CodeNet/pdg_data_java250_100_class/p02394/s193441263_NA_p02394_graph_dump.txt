Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String line = ""[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_4 $$ String line = ""-->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ CD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_4 $$ String line = ""-->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_6 $$ StringTokenizer st = new StringTokenizer(line)[ CD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_7 $$ int W, H, x, y, r[ CD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_8 $$ W = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int W, H, x, y, r-->Line_8 $$ W = Integer.parseInt(st.nextToken())[ FD ]
Line_8 $$ W = Integer.parseInt(st.nextToken())-->Line_8 $$ W = Integer.parseInt(st.nextToken())[ FD ]
Line_8 $$ W = Integer.parseInt(st.nextToken())-->Line_8 $$ W = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_8 $$ W = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_9 $$ H = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int W, H, x, y, r-->Line_9 $$ H = Integer.parseInt(st.nextToken())[ FD ]
Line_9 $$ H = Integer.parseInt(st.nextToken())-->Line_9 $$ H = Integer.parseInt(st.nextToken())[ FD ]
Line_9 $$ H = Integer.parseInt(st.nextToken())-->Line_9 $$ H = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_9 $$ H = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_10 $$ x = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int W, H, x, y, r-->Line_10 $$ x = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ x = Integer.parseInt(st.nextToken())-->Line_10 $$ x = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ x = Integer.parseInt(st.nextToken())-->Line_10 $$ x = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_10 $$ x = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_11 $$ y = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int W, H, x, y, r-->Line_11 $$ y = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ y = Integer.parseInt(st.nextToken())-->Line_11 $$ y = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ y = Integer.parseInt(st.nextToken())-->Line_11 $$ y = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_11 $$ y = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_12 $$ r = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int W, H, x, y, r-->Line_12 $$ r = Integer.parseInt(st.nextToken())[ FD ]
Line_12 $$ r = Integer.parseInt(st.nextToken())-->Line_12 $$ r = Integer.parseInt(st.nextToken())[ FD ]
Line_12 $$ r = Integer.parseInt(st.nextToken())-->Line_12 $$ r = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_12 $$ r = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_13 $$ boolean res = true[ CD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_14 $$ if (x - r < 0 || x + r > W || y - r < 0 || y + r > H)[ CD ]
Line_14 $$ if (x - r < 0 || x + r > W || y - r < 0 || y + r > H)-->Line_14 $$ res = false[ CD ]
Line_13 $$ boolean res = true-->Line_14 $$ res = false[ FD ]
Line_14 $$ res = false-->Line_14 $$ res = false[ FD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_15 $$ System.out.println(res ? "Yes" : "No")[ CD ]
Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) -->Line_5 $$ while ((line = br.readLine()) != null && !line.isEmpty()) [ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_8 $$ W = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_9 $$ H = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_10 $$ x = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_11 $$ y = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(line)-->Line_12 $$ r = Integer.parseInt(st.nextToken())[ FD ]
