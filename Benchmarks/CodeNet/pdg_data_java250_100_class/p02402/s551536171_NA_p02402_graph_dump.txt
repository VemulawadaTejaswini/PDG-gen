Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ long min, max, sum[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String[] strArray = br.readLine().split(" ")[ CD ]
Line_6 $$ String[] strArray = br.readLine().split(" ")-->Line_6 $$ String[] strArray = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String[] strArray = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ long[] longArray = new long[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ longArray[i] = Long.parseLong(strArray[i])[ CD ]
Line_9 $$ longArray[i] = Long.parseLong(strArray[i])-->Line_9 $$ longArray[i] = Long.parseLong(strArray[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ min = longArray[0][ CD ]
Line_5 $$ long min, max, sum-->Line_11 $$ min = longArray[0][ FD ]
Line_11 $$ min = longArray[0]-->Line_11 $$ min = longArray[0][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ max = longArray[0][ CD ]
Line_5 $$ long min, max, sum-->Line_12 $$ max = longArray[0][ FD ]
Line_12 $$ max = longArray[0]-->Line_12 $$ max = longArray[0][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ sum = longArray[0][ CD ]
Line_5 $$ long min, max, sum-->Line_13 $$ sum = longArray[0][ FD ]
Line_13 $$ sum = longArray[0]-->Line_13 $$ sum = longArray[0][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ for (int i = 1; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ CD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ CD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_15 $$ min = Math.min(min, longArray[i])[ CD ]
Line_15 $$ min = Math.min(min, longArray[i])-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_5 $$ long min, max, sum-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_11 $$ min = longArray[0]-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_15 $$ min = Math.min(min, longArray[i])-->Line_15 $$ min = Math.min(min, longArray[i])[ CD ]
Line_15 $$ min = Math.min(min, longArray[i])-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_5 $$ long min, max, sum-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_11 $$ min = longArray[0]-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_16 $$ max = Math.max(max, longArray[i])[ CD ]
Line_16 $$ max = Math.max(max, longArray[i])-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
Line_5 $$ long min, max, sum-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
Line_12 $$ max = longArray[0]-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
Line_16 $$ max = Math.max(max, longArray[i])-->Line_16 $$ max = Math.max(max, longArray[i])[ CD ]
Line_16 $$ max = Math.max(max, longArray[i])-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
Line_5 $$ long min, max, sum-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
Line_12 $$ max = longArray[0]-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_17 $$ sum += longArray[i][ CD ]
Line_17 $$ sum += longArray[i]-->Line_17 $$ sum += longArray[i][ FD ]
Line_5 $$ long min, max, sum-->Line_17 $$ sum += longArray[i][ FD ]
Line_13 $$ sum = longArray[0]-->Line_17 $$ sum += longArray[i][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_19 $$ System.out.println(min + " " + max + " " + sum)[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_14 $$ for (int i = 1; i < n; i++) -->Line_14 $$ for (int i = 1; i < n; i++) [ FD ]
Line_15 $$ min = Math.min(min, longArray[i])-->Line_15 $$ min = Math.min(min, longArray[i])[ FD ]
Line_16 $$ max = Math.max(max, longArray[i])-->Line_16 $$ max = Math.max(max, longArray[i])[ FD ]
