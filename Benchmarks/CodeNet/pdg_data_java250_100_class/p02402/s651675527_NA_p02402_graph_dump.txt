Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String input = br.readLine()[ CD ]
Line_5 $$ String input = br.readLine()-->Line_5 $$ String input = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String input = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ StringTokenizer st = new StringTokenizer(input, " ")[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ long[] a = new long[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ long min = 1000000[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ long max = -1000000[ CD ]
Line_9 $$ long max = -1000000-->Line_9 $$ long max = -1000000[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ long sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_12 $$ a[i] = Long.parseLong(st.nextToken())[ CD ]
Line_12 $$ a[i] = Long.parseLong(st.nextToken())-->Line_12 $$ a[i] = Long.parseLong(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(input, " ")-->Line_12 $$ a[i] = Long.parseLong(st.nextToken())[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_13 $$ min = Math.min(min, a[i])[ CD ]
Line_13 $$ min = Math.min(min, a[i])-->Line_13 $$ min = Math.min(min, a[i])[ FD ]
Line_8 $$ long min = 1000000-->Line_13 $$ min = Math.min(min, a[i])[ FD ]
Line_13 $$ min = Math.min(min, a[i])-->Line_13 $$ min = Math.min(min, a[i])[ CD ]
Line_13 $$ min = Math.min(min, a[i])-->Line_13 $$ min = Math.min(min, a[i])[ FD ]
Line_8 $$ long min = 1000000-->Line_13 $$ min = Math.min(min, a[i])[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_14 $$ max = Math.max(max, a[i])[ CD ]
Line_14 $$ max = Math.max(max, a[i])-->Line_14 $$ max = Math.max(max, a[i])[ FD ]
Line_9 $$ long max = -1000000-->Line_14 $$ max = Math.max(max, a[i])[ FD ]
Line_14 $$ max = Math.max(max, a[i])-->Line_14 $$ max = Math.max(max, a[i])[ CD ]
Line_14 $$ max = Math.max(max, a[i])-->Line_14 $$ max = Math.max(max, a[i])[ FD ]
Line_9 $$ long max = -1000000-->Line_14 $$ max = Math.max(max, a[i])[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_15 $$ sum += a[i][ CD ]
Line_15 $$ sum += a[i]-->Line_15 $$ sum += a[i][ FD ]
Line_10 $$ long sum = 0-->Line_15 $$ sum += a[i][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_17 $$ System.out.println(min + " " + max + " " + sum)[ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ min = Math.min(min, a[i])-->Line_13 $$ min = Math.min(min, a[i])[ FD ]
Line_14 $$ max = Math.max(max, a[i])-->Line_14 $$ max = Math.max(max, a[i])[ FD ]
