Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String line[] = br.readLine().split(" ")[ CD ]
Line_5 $$ String line[] = br.readLine().split(" ")-->Line_5 $$ String line[] = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String line[] = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int mi = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ CD ]
Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))-->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ FD ]
Line_6 $$ int mi = Integer.MAX_VALUE-->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ FD ]
Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))-->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ CD ]
Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))-->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ FD ]
Line_6 $$ int mi = Integer.MAX_VALUE-->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ int ma = Integer.MIN_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ CD ]
Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))-->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ FD ]
Line_10 $$ int ma = Integer.MIN_VALUE-->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ FD ]
Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))-->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ CD ]
Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))-->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ FD ]
Line_10 $$ int ma = Integer.MIN_VALUE-->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ long sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ CD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_16 $$ sum += Long.parseLong(line[i])[ CD ]
Line_16 $$ sum += Long.parseLong(line[i])-->Line_16 $$ sum += Long.parseLong(line[i])[ FD ]
Line_14 $$ long sum = 0-->Line_16 $$ sum += Long.parseLong(line[i])[ FD ]
Line_16 $$ sum += Long.parseLong(line[i])-->Line_16 $$ sum += Long.parseLong(line[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ CD ]
Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))-->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ FD ]
Line_6 $$ int mi = Integer.MAX_VALUE-->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ FD ]
Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))-->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ FD ]
Line_10 $$ int ma = Integer.MIN_VALUE-->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ FD ]
Line_16 $$ sum += Long.parseLong(line[i])-->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ FD ]
Line_14 $$ long sum = 0-->Line_18 $$ System.out.printf("%s %s %s\n", mi, ma, sum)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))-->Line_8 $$ mi = Math.min(mi, Integer.parseInt(line[i]))[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))-->Line_12 $$ ma = Math.max(ma, Integer.parseInt(line[i]))[ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
Line_15 $$ for (int i = 0; i < n; i++) -->Line_15 $$ for (int i = 0; i < n; i++) [ FD ]
