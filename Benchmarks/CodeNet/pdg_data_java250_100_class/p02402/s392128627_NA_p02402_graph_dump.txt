Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int n = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] hako = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ long sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int max = -1000000[ CD ]
Line_7 $$ int max = -1000000-->Line_7 $$ int max = -1000000[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int min = 1000000[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ hako[i] = scan.nextInt()[ CD ]
Line_10 $$ hako[i] = scan.nextInt()-->Line_10 $$ hako[i] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_10 $$ hako[i] = scan.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ sum = sum + hako[i][ CD ]
Line_11 $$ sum = sum + hako[i]-->Line_11 $$ sum = sum + hako[i][ FD ]
Line_6 $$ long sum = 0-->Line_11 $$ sum = sum + hako[i][ FD ]
Line_11 $$ sum = sum + hako[i]-->Line_11 $$ sum = sum + hako[i][ FD ]
Line_6 $$ long sum = 0-->Line_11 $$ sum = sum + hako[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ CD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_14 $$ if (max < hako[i]) [ CD ]
Line_7 $$ int max = -1000000-->Line_14 $$ if (max < hako[i]) [ FD ]
Line_14 $$ if (max < hako[i]) -->Line_15 $$ max = hako[i][ CD ]
Line_15 $$ max = hako[i]-->Line_15 $$ max = hako[i][ FD ]
Line_7 $$ int max = -1000000-->Line_15 $$ max = hako[i][ FD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_17 $$ if (min > hako[i]) [ CD ]
Line_8 $$ int min = 1000000-->Line_17 $$ if (min > hako[i]) [ FD ]
Line_17 $$ if (min > hako[i]) -->Line_18 $$ min = hako[i][ CD ]
Line_18 $$ min = hako[i]-->Line_18 $$ min = hako[i][ FD ]
Line_8 $$ int min = 1000000-->Line_18 $$ min = hako[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(min + " " + max + " " + sum)[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ sum = sum + hako[i]-->Line_11 $$ sum = sum + hako[i][ FD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < hako.length; i++) -->Line_13 $$ for (int i = 0; i < hako.length; i++) [ FD ]
Line_15 $$ max = hako[i]-->Line_14 $$ if (max < hako[i]) [ FD ]
Line_18 $$ min = hako[i]-->Line_17 $$ if (min > hako[i]) [ FD ]
