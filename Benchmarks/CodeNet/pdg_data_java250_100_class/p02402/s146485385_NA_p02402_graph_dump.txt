Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ int intNum = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int intMin = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int intMax = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double dbSum = 0[ CD ]
Line_9 $$ String strLine = br.readLine()-->Line_9 $$ String strLine = br.readLine()[ CD ]
Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ String strLine = br.readLine()[ FD ]
Line_3 $$ int intNum = 0-->Line_10 $$ intNum = Integer.parseInt(strLine)[ FD ]
Line_10 $$ intNum = Integer.parseInt(strLine)-->Line_10 $$ intNum = Integer.parseInt(strLine)[ FD ]
Line_10 $$ intNum = Integer.parseInt(strLine)-->Line_10 $$ intNum = Integer.parseInt(strLine)[ CD ]
Line_9 $$ String strLine = br.readLine()-->Line_10 $$ intNum = Integer.parseInt(strLine)[ FD ]
Line_9 $$ String strLine = br.readLine()-->Line_11 $$ strLine = br.readLine()[ FD ]
Line_11 $$ strLine = br.readLine()-->Line_11 $$ strLine = br.readLine()[ FD ]
Line_11 $$ strLine = br.readLine()-->Line_11 $$ strLine = br.readLine()[ CD ]
Line_8 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ strLine = br.readLine()[ FD ]
Line_12 $$ String[] strLineAry = strLine.split(" ")-->Line_12 $$ String[] strLineAry = strLine.split(" ")[ CD ]
Line_9 $$ String strLine = br.readLine()-->Line_12 $$ String[] strLineAry = strLine.split(" ")[ FD ]
Line_11 $$ strLine = br.readLine()-->Line_12 $$ String[] strLineAry = strLine.split(" ")[ FD ]
Line_4 $$ int intMin = 0-->Line_13 $$ intMin = Integer.parseInt(strLineAry[0])[ FD ]
Line_13 $$ intMin = Integer.parseInt(strLineAry[0])-->Line_13 $$ intMin = Integer.parseInt(strLineAry[0])[ FD ]
Line_13 $$ intMin = Integer.parseInt(strLineAry[0])-->Line_13 $$ intMin = Integer.parseInt(strLineAry[0])[ CD ]
Line_5 $$ int intMax = 0-->Line_14 $$ intMax = intMin[ FD ]
Line_14 $$ intMax = intMin-->Line_14 $$ intMax = intMin[ FD ]
Line_4 $$ int intMin = 0-->Line_14 $$ intMax = intMin[ FD ]
Line_13 $$ intMin = Integer.parseInt(strLineAry[0])-->Line_14 $$ intMax = intMin[ FD ]
Line_6 $$ double dbSum = 0-->Line_15 $$ dbSum += (double) intMin[ FD ]
Line_15 $$ dbSum += (double) intMin-->Line_15 $$ dbSum += (double) intMin[ FD ]
Line_3 $$ int intNum = 0-->Line_16 $$ for (int i = 1; i < intNum; i++) [ FD ]
Line_10 $$ intNum = Integer.parseInt(strLine)-->Line_16 $$ for (int i = 1; i < intNum; i++) [ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_16 $$ for (int i = 1; i < intNum; i++) [ CD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_16 $$ for (int i = 1; i < intNum; i++) [ CD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_16 $$ for (int i = 1; i < intNum; i++) [ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])[ CD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])[ CD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_18 $$ if (intNum2 < intMin) [ CD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_18 $$ if (intNum2 < intMin) [ FD ]
Line_4 $$ int intMin = 0-->Line_18 $$ if (intNum2 < intMin) [ FD ]
Line_13 $$ intMin = Integer.parseInt(strLineAry[0])-->Line_18 $$ if (intNum2 < intMin) [ FD ]
Line_18 $$ if (intNum2 < intMin) -->Line_19 $$ intMin = intNum2[ CD ]
Line_19 $$ intMin = intNum2-->Line_19 $$ intMin = intNum2[ FD ]
Line_4 $$ int intMin = 0-->Line_19 $$ intMin = intNum2[ FD ]
Line_13 $$ intMin = Integer.parseInt(strLineAry[0])-->Line_19 $$ intMin = intNum2[ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_19 $$ intMin = intNum2[ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_21 $$ if (intMax < intNum2) [ CD ]
Line_5 $$ int intMax = 0-->Line_21 $$ if (intMax < intNum2) [ FD ]
Line_14 $$ intMax = intMin-->Line_21 $$ if (intMax < intNum2) [ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_21 $$ if (intMax < intNum2) [ FD ]
Line_21 $$ if (intMax < intNum2) -->Line_22 $$ intMax = intNum2[ CD ]
Line_22 $$ intMax = intNum2-->Line_22 $$ intMax = intNum2[ FD ]
Line_5 $$ int intMax = 0-->Line_22 $$ intMax = intNum2[ FD ]
Line_14 $$ intMax = intMin-->Line_22 $$ intMax = intNum2[ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_22 $$ intMax = intNum2[ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_24 $$ dbSum += (double) intNum2[ CD ]
Line_24 $$ dbSum += (double) intNum2-->Line_24 $$ dbSum += (double) intNum2[ FD ]
Line_6 $$ double dbSum = 0-->Line_24 $$ dbSum += (double) intNum2[ FD ]
Line_15 $$ dbSum += (double) intMin-->Line_24 $$ dbSum += (double) intNum2[ FD ]
Line_26 $$ DecimalFormat insDF = new DecimalFormat("0")-->Line_27 $$ System.out.println(intMin + " " + intMax + " " + insDF.format(dbSum))[ FD ]
Line_24 $$ dbSum += (double) intNum2-->Line_27 $$ System.out.println(intMin + " " + intMax + " " + insDF.format(dbSum))[ FD ]
Line_6 $$ double dbSum = 0-->Line_27 $$ System.out.println(intMin + " " + intMax + " " + insDF.format(dbSum))[ FD ]
Line_15 $$ dbSum += (double) intMin-->Line_27 $$ System.out.println(intMin + " " + intMax + " " + insDF.format(dbSum))[ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_16 $$ for (int i = 1; i < intNum; i++) [ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_16 $$ for (int i = 1; i < intNum; i++) [ FD ]
Line_16 $$ for (int i = 1; i < intNum; i++) -->Line_16 $$ for (int i = 1; i < intNum; i++) [ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_18 $$ if (intNum2 < intMin) [ FD ]
Line_19 $$ intMin = intNum2-->Line_18 $$ if (intNum2 < intMin) [ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_19 $$ intMin = intNum2[ FD ]
Line_22 $$ intMax = intNum2-->Line_21 $$ if (intMax < intNum2) [ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_21 $$ if (intMax < intNum2) [ FD ]
Line_17 $$ int intNum2 = Integer.parseInt(strLineAry[i])-->Line_22 $$ intMax = intNum2[ FD ]
