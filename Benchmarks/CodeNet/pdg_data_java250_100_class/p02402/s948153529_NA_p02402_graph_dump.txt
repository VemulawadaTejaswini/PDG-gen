Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = scanner.nextInt()-->Line_4 $$ int N = scanner.nextInt()[ CD ]
Line_3 $$ try (Scanner scanner = new Scanner(System.in)) -->Line_4 $$ int N = scanner.nextInt()[ FD ]
Line_4 $$ int N = scanner.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ list[i] = scanner.nextInt()[ CD ]
Line_7 $$ list[i] = scanner.nextInt()-->Line_7 $$ list[i] = scanner.nextInt()[ CD ]
Line_3 $$ try (Scanner scanner = new Scanner(System.in)) -->Line_7 $$ list[i] = scanner.nextInt()[ FD ]
Line_9 $$ long min = LongStream.of(list).min().getAsLong()-->Line_9 $$ long min = LongStream.of(list).min().getAsLong()[ CD ]
Line_5 $$ long[] list = new long[N]-->Line_9 $$ long min = LongStream.of(list).min().getAsLong()[ FD ]
Line_10 $$ long max = LongStream.of(list).max().getAsLong()-->Line_10 $$ long max = LongStream.of(list).max().getAsLong()[ CD ]
Line_5 $$ long[] list = new long[N]-->Line_10 $$ long max = LongStream.of(list).max().getAsLong()[ FD ]
Line_11 $$ long sum = LongStream.of(list).sum()-->Line_11 $$ long sum = LongStream.of(list).sum()[ CD ]
Line_5 $$ long[] list = new long[N]-->Line_11 $$ long sum = LongStream.of(list).sum()[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
