Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ private static final String SPACE = " ";[ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_11 $$ while ((sStr = stdReader.readLine()) != null) [ FD ]
Line_7 $$ String sStr-->Line_11 $$ while ((sStr = stdReader.readLine()) != null) [ FD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_11 $$ while ((sStr = stdReader.readLine()) != null) [ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_11 $$ while ((sStr = stdReader.readLine()) != null) [ FD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_12 $$ if (stdReader.getLineNumber() == 1) [ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_12 $$ if (stdReader.getLineNumber() == 1) [ FD ]
Line_12 $$ if (stdReader.getLineNumber() == 1) -->Line_13 $$ String[] inputs = sStr.split(SPACE)[ CD ]
Line_13 $$ String[] inputs = sStr.split(SPACE)-->Line_13 $$ String[] inputs = sStr.split(SPACE)[ CD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_13 $$ String[] inputs = sStr.split(SPACE)[ FD ]
Line_7 $$ String sStr-->Line_13 $$ String[] inputs = sStr.split(SPACE)[ FD ]
Line_12 $$ if (stdReader.getLineNumber() == 1) -->Line_14 $$ r = Integer.valueOf(inputs[0])[ CD ]
Line_14 $$ r = Integer.valueOf(inputs[0])-->Line_14 $$ r = Integer.valueOf(inputs[0])[ FD ]
Line_8 $$ int r = 0-->Line_14 $$ r = Integer.valueOf(inputs[0])[ FD ]
Line_14 $$ r = Integer.valueOf(inputs[0])-->Line_14 $$ r = Integer.valueOf(inputs[0])[ CD ]
Line_12 $$ if (stdReader.getLineNumber() == 1) -->Line_15 $$ c = Integer.valueOf(inputs[1])[ CD ]
Line_15 $$ c = Integer.valueOf(inputs[1])-->Line_15 $$ c = Integer.valueOf(inputs[1])[ FD ]
Line_9 $$ int c = 0-->Line_15 $$ c = Integer.valueOf(inputs[1])[ FD ]
Line_15 $$ c = Integer.valueOf(inputs[1])-->Line_15 $$ c = Integer.valueOf(inputs[1])[ CD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_18 $$ if (stdReader.getLineNumber() >= 2) [ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_18 $$ if (stdReader.getLineNumber() >= 2) [ FD ]
Line_18 $$ if (stdReader.getLineNumber() >= 2) -->Line_19 $$ String[] matrix_row = sStr.split(SPACE)[ CD ]
Line_19 $$ String[] matrix_row = sStr.split(SPACE)-->Line_19 $$ String[] matrix_row = sStr.split(SPACE)[ CD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_19 $$ String[] matrix_row = sStr.split(SPACE)[ FD ]
Line_7 $$ String sStr-->Line_19 $$ String[] matrix_row = sStr.split(SPACE)[ FD ]
Line_18 $$ if (stdReader.getLineNumber() >= 2) -->Line_20 $$ int i = 0[ CD ]
Line_18 $$ if (stdReader.getLineNumber() >= 2) -->Line_21 $$ int row = stdReader.getLineNumber() - 2[ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_21 $$ int row = stdReader.getLineNumber() - 2[ FD ]
Line_23 $$ an[row][i] = Integer.valueOf(temp)-->Line_23 $$ an[row][i] = Integer.valueOf(temp)[ CD ]
Line_22 $$ for (String temp : matrix_row) -->Line_23 $$ an[row][i] = Integer.valueOf(temp)[ FD ]
Line_20 $$ int i = 0-->Line_24 $$ i++[ FD ]
Line_18 $$ if (stdReader.getLineNumber() >= 2) -->Line_26 $$ if (stdReader.getLineNumber() == r + 1)[ CD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_26 $$ if (stdReader.getLineNumber() == r + 1)[ FD ]
Line_20 $$ int i = 0-->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_14 $$ r = Integer.valueOf(inputs[0])-->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_8 $$ int r = 0-->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ CD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ CD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_20 $$ int i = 0-->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_30 $$ int sumOfRow = 0[ CD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_31 $$ for (int j = 0; j < c; j++) [ CD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ CD ]
Line_15 $$ c = Integer.valueOf(inputs[1])-->Line_31 $$ for (int j = 0; j < c; j++) [ FD ]
Line_9 $$ int c = 0-->Line_31 $$ for (int j = 0; j < c; j++) [ FD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_31 $$ for (int j = 0; j < c; j++) [ CD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_31 $$ for (int j = 0; j < c; j++) [ CD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_31 $$ for (int j = 0; j < c; j++) [ FD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_32 $$ sumOfRow += an[i][j][ CD ]
Line_32 $$ sumOfRow += an[i][j]-->Line_32 $$ sumOfRow += an[i][j][ FD ]
Line_30 $$ int sumOfRow = 0-->Line_32 $$ sumOfRow += an[i][j][ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_34 $$ an[i][c] = sumOfRow[ CD ]
Line_32 $$ sumOfRow += an[i][j]-->Line_34 $$ an[i][c] = sumOfRow[ FD ]
Line_30 $$ int sumOfRow = 0-->Line_34 $$ an[i][c] = sumOfRow[ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_20 $$ int i = 0-->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_15 $$ c = Integer.valueOf(inputs[1])-->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_9 $$ int c = 0-->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ CD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ CD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_20 $$ int i = 0-->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_37 $$ int sumOfColumn = 0[ CD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_38 $$ for (int j = 0; j < r; j++) [ CD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ CD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_14 $$ r = Integer.valueOf(inputs[0])-->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_8 $$ int r = 0-->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ CD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ CD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_39 $$ sumOfColumn += an[j][i][ CD ]
Line_39 $$ sumOfColumn += an[j][i]-->Line_39 $$ sumOfColumn += an[j][i][ FD ]
Line_37 $$ int sumOfColumn = 0-->Line_39 $$ sumOfColumn += an[j][i][ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_41 $$ an[r][i] = sumOfColumn[ CD ]
Line_39 $$ sumOfColumn += an[j][i]-->Line_41 $$ an[r][i] = sumOfColumn[ FD ]
Line_37 $$ int sumOfColumn = 0-->Line_41 $$ an[r][i] = sumOfColumn[ FD ]
Line_45 $$ for (int c_temp : r_temp) -->Line_46 $$ System.out.print(c_temp)[ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_47 $$ if (i < c) [ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_47 $$ if (i < c) [ FD ]
Line_20 $$ int i = 0-->Line_47 $$ if (i < c) [ FD ]
Line_44 $$ int i = 0-->Line_47 $$ if (i < c) [ FD ]
Line_15 $$ c = Integer.valueOf(inputs[1])-->Line_47 $$ if (i < c) [ FD ]
Line_9 $$ int c = 0-->Line_47 $$ if (i < c) [ FD ]
Line_47 $$ if (i < c) -->Line_48 $$ System.out.print(SPACE)[ CD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_50 $$ i++[ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_50 $$ i++[ FD ]
Line_20 $$ int i = 0-->Line_50 $$ i++[ FD ]
Line_44 $$ int i = 0-->Line_50 $$ i++[ FD ]
Line_5 $$ LineNumberReader stdReader = new LineNumberReader(new InputStreamReader(System.in))-->Line_54 $$ stdReader.close()[ FD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_13 $$ String[] inputs = sStr.split(SPACE)[ FD ]
Line_11 $$ while ((sStr = stdReader.readLine()) != null) -->Line_19 $$ String[] matrix_row = sStr.split(SPACE)[ FD ]
Line_22 $$ for (String temp : matrix_row) -->Line_23 $$ an[row][i] = Integer.valueOf(temp)[ FD ]
Line_20 $$ int i = 0-->Line_24 $$ i++[ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_29 $$ for (int i = 0; i < r; i++) -->Line_29 $$ for (int i = 0; i < r; i++) [ FD ]
Line_30 $$ int sumOfRow = 0-->Line_34 $$ an[i][c] = sumOfRow[ FD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_31 $$ for (int j = 0; j < c; j++) [ FD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_31 $$ for (int j = 0; j < c; j++) [ FD ]
Line_31 $$ for (int j = 0; j < c; j++) -->Line_31 $$ for (int j = 0; j < c; j++) [ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_36 $$ for (int i = 0; i <= c; i++) -->Line_36 $$ for (int i = 0; i <= c; i++) [ FD ]
Line_37 $$ int sumOfColumn = 0-->Line_41 $$ an[r][i] = sumOfColumn[ FD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
Line_38 $$ for (int j = 0; j < r; j++) -->Line_38 $$ for (int j = 0; j < r; j++) [ FD ]
