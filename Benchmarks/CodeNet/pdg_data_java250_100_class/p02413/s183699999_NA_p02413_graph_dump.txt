Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String first_line = input.readLine()[ CD ]
Line_4 $$ String first_line = input.readLine()-->Line_4 $$ String first_line = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String first_line = input.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] array_of_li_col = first_line.split(" ")[ CD ]
Line_5 $$ String[] array_of_li_col = first_line.split(" ")-->Line_5 $$ String[] array_of_li_col = first_line.split(" ")[ CD ]
Line_4 $$ String first_line = input.readLine()-->Line_5 $$ String[] array_of_li_col = first_line.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int line_r = Integer.parseInt(array_of_li_col[0])[ CD ]
Line_6 $$ int line_r = Integer.parseInt(array_of_li_col[0])-->Line_6 $$ int line_r = Integer.parseInt(array_of_li_col[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int column_c = Integer.parseInt(array_of_li_col[1])[ CD ]
Line_7 $$ int column_c = Integer.parseInt(array_of_li_col[1])-->Line_7 $$ int column_c = Integer.parseInt(array_of_li_col[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int graph_array[][] = new int[line_r][column_c][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int column_sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ int line_sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ int All_sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_6 $$ int line_r = Integer.parseInt(array_of_li_col[0])-->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_13 $$ String input_column = input.readLine()[ CD ]
Line_13 $$ String input_column = input.readLine()-->Line_13 $$ String input_column = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ String input_column = input.readLine()[ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_14 $$ String[] array_of_column = input_column.split(" ")[ CD ]
Line_14 $$ String[] array_of_column = input_column.split(" ")-->Line_14 $$ String[] array_of_column = input_column.split(" ")[ CD ]
Line_13 $$ String input_column = input.readLine()-->Line_14 $$ String[] array_of_column = input_column.split(" ")[ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_7 $$ int column_c = Integer.parseInt(array_of_li_col[1])-->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_16 $$ int element_column = Integer.parseInt(array_of_column[column_spot])[ CD ]
Line_16 $$ int element_column = Integer.parseInt(array_of_column[column_spot])-->Line_16 $$ int element_column = Integer.parseInt(array_of_column[column_spot])[ CD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_17 $$ graph_array[line_spot][column_spot] = element_column[ CD ]
Line_16 $$ int element_column = Integer.parseInt(array_of_column[column_spot])-->Line_17 $$ graph_array[line_spot][column_spot] = element_column[ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_18 $$ column_sum += graph_array[line_spot][column_spot][ CD ]
Line_18 $$ column_sum += graph_array[line_spot][column_spot]-->Line_18 $$ column_sum += graph_array[line_spot][column_spot][ FD ]
Line_9 $$ int column_sum = 0-->Line_18 $$ column_sum += graph_array[line_spot][column_spot][ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_19 $$ System.out.print(graph_array[line_spot][column_spot] + " ")[ CD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_21 $$ System.out.println(column_sum)[ CD ]
Line_18 $$ column_sum += graph_array[line_spot][column_spot]-->Line_21 $$ System.out.println(column_sum)[ FD ]
Line_9 $$ int column_sum = 0-->Line_21 $$ System.out.println(column_sum)[ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_22 $$ All_sum += column_sum[ CD ]
Line_22 $$ All_sum += column_sum-->Line_22 $$ All_sum += column_sum[ FD ]
Line_11 $$ int All_sum = 0-->Line_22 $$ All_sum += column_sum[ FD ]
Line_18 $$ column_sum += graph_array[line_spot][column_spot]-->Line_22 $$ All_sum += column_sum[ FD ]
Line_9 $$ int column_sum = 0-->Line_22 $$ All_sum += column_sum[ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_23 $$ column_sum = 0[ CD ]
Line_18 $$ column_sum += graph_array[line_spot][column_spot]-->Line_23 $$ column_sum = 0[ FD ]
Line_23 $$ column_sum = 0-->Line_23 $$ column_sum = 0[ FD ]
Line_9 $$ int column_sum = 0-->Line_23 $$ column_sum = 0[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_7 $$ int column_c = Integer.parseInt(array_of_li_col[1])-->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ CD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_6 $$ int line_r = Integer.parseInt(array_of_li_col[0])-->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ CD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_27 $$ line_sum += graph_array[line_spot][column_spot][ CD ]
Line_27 $$ line_sum += graph_array[line_spot][column_spot]-->Line_27 $$ line_sum += graph_array[line_spot][column_spot][ FD ]
Line_10 $$ int line_sum = 0-->Line_27 $$ line_sum += graph_array[line_spot][column_spot][ FD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_29 $$ System.out.print(line_sum + " ")[ CD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_30 $$ line_sum = 0[ CD ]
Line_27 $$ line_sum += graph_array[line_spot][column_spot]-->Line_30 $$ line_sum = 0[ FD ]
Line_30 $$ line_sum = 0-->Line_30 $$ line_sum = 0[ FD ]
Line_10 $$ int line_sum = 0-->Line_30 $$ line_sum = 0[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_32 $$ System.out.println(All_sum)[ CD ]
Line_22 $$ All_sum += column_sum-->Line_32 $$ System.out.println(All_sum)[ FD ]
Line_11 $$ int All_sum = 0-->Line_32 $$ System.out.println(All_sum)[ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_12 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_13 $$ String input_column = input.readLine()-->Line_14 $$ String[] array_of_column = input_column.split(" ")[ FD ]
Line_23 $$ column_sum = 0-->Line_21 $$ System.out.println(column_sum)[ FD ]
Line_23 $$ column_sum = 0-->Line_22 $$ All_sum += column_sum[ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_15 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_16 $$ int element_column = Integer.parseInt(array_of_column[column_spot])-->Line_17 $$ graph_array[line_spot][column_spot] = element_column[ FD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) -->Line_25 $$ for (int column_spot = 0; column_spot < column_c; column_spot++) [ FD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) -->Line_26 $$ for (int line_spot = 0; line_spot < line_r; line_spot++) [ FD ]
