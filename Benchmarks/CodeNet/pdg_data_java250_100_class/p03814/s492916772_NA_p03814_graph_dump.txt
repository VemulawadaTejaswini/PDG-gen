Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String s = scanner.next()[ CD ]
Line_4 $$ String s = scanner.next()-->Line_4 $$ String s = scanner.next()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ String s = scanner.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ scanner.close()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_5 $$ scanner.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ Pattern p = Pattern.compile("[A][A-Z]*[Z]")[ CD ]
Line_6 $$ Pattern p = Pattern.compile("[A][A-Z]*[Z]")-->Line_6 $$ Pattern p = Pattern.compile("[A][A-Z]*[Z]")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Matcher matcher = p.matcher(s)[ CD ]
Line_7 $$ Matcher matcher = p.matcher(s)-->Line_7 $$ Matcher matcher = p.matcher(s)[ CD ]
Line_6 $$ Pattern p = Pattern.compile("[A][A-Z]*[Z]")-->Line_7 $$ Matcher matcher = p.matcher(s)[ FD ]
Line_4 $$ String s = scanner.next()-->Line_7 $$ Matcher matcher = p.matcher(s)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ while (matcher.find()) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ while (matcher.find()) -->Line_9 $$ while (matcher.find()) [ CD ]
Line_7 $$ Matcher matcher = p.matcher(s)-->Line_9 $$ while (matcher.find()) [ FD ]
Line_9 $$ while (matcher.find()) -->Line_10 $$ int length = matcher.group().length()[ CD ]
Line_10 $$ int length = matcher.group().length()-->Line_10 $$ int length = matcher.group().length()[ CD ]
Line_7 $$ Matcher matcher = p.matcher(s)-->Line_10 $$ int length = matcher.group().length()[ FD ]
Line_9 $$ while (matcher.find()) -->Line_11 $$ if (max < length) [ CD ]
Line_8 $$ int max = 0-->Line_11 $$ if (max < length) [ FD ]
Line_10 $$ int length = matcher.group().length()-->Line_11 $$ if (max < length) [ FD ]
Line_11 $$ if (max < length) -->Line_12 $$ max = length[ CD ]
Line_12 $$ max = length-->Line_12 $$ max = length[ FD ]
Line_8 $$ int max = 0-->Line_12 $$ max = length[ FD ]
Line_10 $$ int length = matcher.group().length()-->Line_12 $$ max = length[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ System.out.println(max)[ CD ]
Line_12 $$ max = length-->Line_15 $$ System.out.println(max)[ FD ]
Line_8 $$ int max = 0-->Line_15 $$ System.out.println(max)[ FD ]
Line_12 $$ max = length-->Line_11 $$ if (max < length) [ FD ]
Line_10 $$ int length = matcher.group().length()-->Line_11 $$ if (max < length) [ FD ]
Line_10 $$ int length = matcher.group().length()-->Line_12 $$ max = length[ FD ]
