Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ int N = Integer.parseInt(st.nextToken())-->Line_6 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_6 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int M = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int M = Integer.parseInt(st.nextToken())-->Line_7 $$ int M = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_7 $$ int M = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int[] assign = new int[M][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int vacation = 0, sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ st = new StringTokenizer(br.readLine())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ for (int i = 0; i < M; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_7 $$ int M = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < M; i++) [ FD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_11 $$ for (int i = 0; i < M; i++) [ CD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_11 $$ for (int i = 0; i < M; i++) [ CD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_11 $$ for (int i = 0; i < M; i++) [ FD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_12 $$ assign[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_12 $$ assign[i] = Integer.parseInt(st.nextToken())-->Line_12 $$ assign[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_12 $$ assign[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ st = new StringTokenizer(br.readLine())-->Line_12 $$ assign[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_13 $$ sum += assign[i][ CD ]
Line_13 $$ sum += assign[i]-->Line_13 $$ sum += assign[i][ FD ]
Line_9 $$ int vacation = 0, sum = 0-->Line_13 $$ sum += assign[i][ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ vacation = N - sum[ CD ]
Line_9 $$ int vacation = 0, sum = 0-->Line_15 $$ vacation = N - sum[ FD ]
Line_15 $$ vacation = N - sum-->Line_15 $$ vacation = N - sum[ FD ]
Line_6 $$ int N = Integer.parseInt(st.nextToken())-->Line_15 $$ vacation = N - sum[ FD ]
Line_13 $$ sum += assign[i]-->Line_15 $$ vacation = N - sum[ FD ]
Line_9 $$ int vacation = 0, sum = 0-->Line_15 $$ vacation = N - sum[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_16 $$ if (vacation < 0)[ CD ]
Line_9 $$ int vacation = 0, sum = 0-->Line_16 $$ if (vacation < 0)[ FD ]
Line_15 $$ vacation = N - sum-->Line_16 $$ if (vacation < 0)[ FD ]
Line_16 $$ if (vacation < 0)-->Line_17 $$ bw.write(-1 + "\n")[ CD ]
Line_4 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out))-->Line_17 $$ bw.write(-1 + "\n")[ FD ]
Line_16 $$ if (vacation < 0)-->Line_19 $$ bw.write(vacation + "\n")[ CD ]
Line_4 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out))-->Line_19 $$ bw.write(vacation + "\n")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_20 $$ bw.flush()[ CD ]
Line_4 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out))-->Line_20 $$ bw.flush()[ FD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_11 $$ for (int i = 0; i < M; i++) [ FD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_11 $$ for (int i = 0; i < M; i++) [ FD ]
Line_11 $$ for (int i = 0; i < M; i++) -->Line_11 $$ for (int i = 0; i < M; i++) [ FD ]
