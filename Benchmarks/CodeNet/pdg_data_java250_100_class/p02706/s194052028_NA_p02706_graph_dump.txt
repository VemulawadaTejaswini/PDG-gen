Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String[] Arguments) throws IOException [ CD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_5 $$ BufferedReader BR = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_5 $$ StringTokenizer ST = new StringTokenizer(BR.readLine())[ CD ]
Line_5 $$ BufferedReader BR = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ StringTokenizer ST = new StringTokenizer(BR.readLine())[ FD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0[ CD ]
Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0-->Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0[ CD ]
Line_5 $$ StringTokenizer ST = new StringTokenizer(BR.readLine())-->Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0[ FD ]
Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0-->Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0[ CD ]
Line_5 $$ StringTokenizer ST = new StringTokenizer(BR.readLine())-->Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0[ FD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_7 $$ ST = new StringTokenizer(BR.readLine())[ CD ]
Line_5 $$ StringTokenizer ST = new StringTokenizer(BR.readLine())-->Line_7 $$ ST = new StringTokenizer(BR.readLine())[ FD ]
Line_7 $$ ST = new StringTokenizer(BR.readLine())-->Line_7 $$ ST = new StringTokenizer(BR.readLine())[ FD ]
Line_5 $$ BufferedReader BR = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ ST = new StringTokenizer(BR.readLine())[ FD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_8 $$ for (; M > 0; M--) homeworkDays += Integer.parseInt(ST.nextToken())[ CD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_3 $$ public static void main(String[] Arguments) throws IOException [ CD ]
Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0-->Line_8 $$ for (; M > 0; M--) homeworkDays += Integer.parseInt(ST.nextToken())[ FD ]
Line_8 $$ for (; M > 0; M--) homeworkDays += Integer.parseInt(ST.nextToken())-->Line_8 $$ for (; M > 0; M--) homeworkDays += Integer.parseInt(ST.nextToken())[ CD ]
Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0-->Line_8 $$ for (; M > 0; M--) homeworkDays += Integer.parseInt(ST.nextToken())[ FD ]
Line_8 $$ for (; M > 0; M--) homeworkDays += Integer.parseInt(ST.nextToken())-->Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())[ CD ]
Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())-->Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())[ FD ]
Line_6 $$ int N = Integer.parseInt(ST.nextToken()), M = Integer.parseInt(ST.nextToken()), homeworkDays = 0-->Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())[ FD ]
Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())-->Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())[ CD ]
Line_5 $$ StringTokenizer ST = new StringTokenizer(BR.readLine())-->Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())[ FD ]
Line_7 $$ ST = new StringTokenizer(BR.readLine())-->Line_8 $$ homeworkDays += Integer.parseInt(ST.nextToken())[ FD ]
Line_3 $$ public static void main(String[] Arguments) throws IOException -->Line_9 $$ System.out.println((homeworkDays <= N) ? N - homeworkDays : -1)[ CD ]
