Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ CD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_7 $$ int M = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int M = Integer.parseInt(st.nextToken())-->Line_7 $$ int M = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_7 $$ int M = Integer.parseInt(st.nextToken())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_8 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_8 $$ int N = Integer.parseInt(st.nextToken())-->Line_8 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_8 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_9 $$ int[] arr = new int[N][ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_10 $$ st = new StringTokenizer(infile.readLine())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_10 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_10 $$ st = new StringTokenizer(infile.readLine())-->Line_10 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_8 $$ int N = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ st = new StringTokenizer(infile.readLine())-->Line_12 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_13 $$ long sum = 0L[ CD ]
Line_13 $$ long sum = 0L-->Line_15 $$ sum += x[ FD ]
Line_15 $$ sum += x-->Line_15 $$ sum += x[ FD ]
Line_14 $$ for (int x : arr) sum += x-->Line_15 $$ sum += x[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_16 $$ if (sum > M)[ CD ]
Line_13 $$ long sum = 0L-->Line_16 $$ if (sum > M)[ FD ]
Line_15 $$ sum += x-->Line_16 $$ if (sum > M)[ FD ]
Line_7 $$ int M = Integer.parseInt(st.nextToken())-->Line_16 $$ if (sum > M)[ FD ]
Line_16 $$ if (sum > M)-->Line_17 $$ System.out.println(-1)[ CD ]
Line_16 $$ if (sum > M)-->Line_19 $$ System.out.println(M - sum)[ CD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ for (int i = 0; i < N; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
