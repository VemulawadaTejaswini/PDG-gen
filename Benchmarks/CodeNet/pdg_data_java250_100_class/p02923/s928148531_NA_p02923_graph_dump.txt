Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int n = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int h[] = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = scan.nextInt()[ CD ]
Line_7 $$ h[i] = scan.nextInt()-->Line_7 $$ h[i] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ h[i] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_9 $$ scan.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int cnt = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_13 $$ if (h[i + 1] <= h[i])[ CD ]
Line_13 $$ if (h[i + 1] <= h[i])-->Line_13 $$ cnt++[ CD ]
Line_10 $$ int cnt = 0-->Line_13 $$ cnt++[ FD ]
Line_13 $$ if (h[i + 1] <= h[i])-->Line_14 $$ cnt = 0[ CD ]
Line_14 $$ cnt = 0-->Line_14 $$ cnt = 0[ FD ]
Line_10 $$ int cnt = 0-->Line_14 $$ cnt = 0[ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_15 $$ if (cnt > max)[ CD ]
Line_14 $$ cnt = 0-->Line_15 $$ if (cnt > max)[ FD ]
Line_10 $$ int cnt = 0-->Line_15 $$ if (cnt > max)[ FD ]
Line_11 $$ int max = 0-->Line_15 $$ if (cnt > max)[ FD ]
Line_15 $$ if (cnt > max)-->Line_15 $$ max = cnt[ CD ]
Line_15 $$ max = cnt-->Line_15 $$ max = cnt[ FD ]
Line_11 $$ int max = 0-->Line_15 $$ max = cnt[ FD ]
Line_14 $$ cnt = 0-->Line_15 $$ max = cnt[ FD ]
Line_10 $$ int cnt = 0-->Line_15 $$ max = cnt[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(max)[ CD ]
Line_15 $$ max = cnt-->Line_17 $$ System.out.println(max)[ FD ]
Line_11 $$ int max = 0-->Line_17 $$ System.out.println(max)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_14 $$ cnt = 0-->Line_13 $$ cnt++[ FD ]
Line_14 $$ cnt = 0-->Line_15 $$ if (cnt > max)[ FD ]
Line_15 $$ max = cnt-->Line_15 $$ if (cnt > max)[ FD ]
Line_14 $$ cnt = 0-->Line_15 $$ max = cnt[ FD ]
