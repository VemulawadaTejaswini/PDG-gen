Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] h = new long[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = sc.nextLong()[ CD ]
Line_7 $$ h[i] = sc.nextLong()-->Line_7 $$ h[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ h[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ long max = 0, count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ if (h[i] >= h[i + 1]) [ CD ]
Line_11 $$ if (h[i] >= h[i + 1]) -->Line_12 $$ count += 1[ CD ]
Line_12 $$ count += 1-->Line_12 $$ count += 1[ FD ]
Line_9 $$ long max = 0, count = 0-->Line_12 $$ count += 1[ FD ]
Line_11 $$ if (h[i] >= h[i + 1]) -->Line_14 $$ count = 0[ CD ]
Line_12 $$ count += 1-->Line_14 $$ count = 0[ FD ]
Line_14 $$ count = 0-->Line_14 $$ count = 0[ FD ]
Line_9 $$ long max = 0, count = 0-->Line_14 $$ count = 0[ FD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_16 $$ if (max < count) [ CD ]
Line_9 $$ long max = 0, count = 0-->Line_16 $$ if (max < count) [ FD ]
Line_12 $$ count += 1-->Line_16 $$ if (max < count) [ FD ]
Line_14 $$ count = 0-->Line_16 $$ if (max < count) [ FD ]
Line_9 $$ long max = 0, count = 0-->Line_16 $$ if (max < count) [ FD ]
Line_16 $$ if (max < count) -->Line_17 $$ max = count[ CD ]
Line_17 $$ max = count-->Line_17 $$ max = count[ FD ]
Line_9 $$ long max = 0, count = 0-->Line_17 $$ max = count[ FD ]
Line_12 $$ count += 1-->Line_17 $$ max = count[ FD ]
Line_14 $$ count = 0-->Line_17 $$ max = count[ FD ]
Line_9 $$ long max = 0, count = 0-->Line_17 $$ max = count[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(max)[ CD ]
Line_17 $$ max = count-->Line_20 $$ System.out.println(max)[ FD ]
Line_9 $$ long max = 0, count = 0-->Line_20 $$ System.out.println(max)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_17 $$ max = count-->Line_16 $$ if (max < count) [ FD ]
Line_12 $$ count += 1-->Line_16 $$ if (max < count) [ FD ]
Line_14 $$ count = 0-->Line_16 $$ if (max < count) [ FD ]
Line_12 $$ count += 1-->Line_17 $$ max = count[ FD ]
Line_14 $$ count = 0-->Line_17 $$ max = count[ FD ]
