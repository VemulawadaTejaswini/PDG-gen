Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] h = new long[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ h[i] = sc.nextLong()[ CD ]
Line_6 $$ h[i] = sc.nextLong()-->Line_6 $$ h[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ h[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int last = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_9 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_9 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_10 $$ if (h[i] - h[i + 1] < 0) [ CD ]
Line_10 $$ if (h[i] - h[i + 1] < 0) -->Line_11 $$ last = i + 1[ CD ]
Line_11 $$ last = i + 1-->Line_11 $$ last = i + 1[ FD ]
Line_7 $$ int last = 0-->Line_11 $$ last = i + 1[ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ last = i + 1[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_11 $$ last = i + 1[ FD ]
Line_10 $$ if (h[i] - h[i + 1] < 0) -->Line_13 $$ if (i + 1 - last > max)[ CD ]
Line_8 $$ int max = 0-->Line_13 $$ if (i + 1 - last > max)[ FD ]
Line_13 $$ if (i + 1 - last > max)-->Line_13 $$ max = i + 1 - last[ CD ]
Line_13 $$ max = i + 1 - last-->Line_13 $$ max = i + 1 - last[ FD ]
Line_8 $$ int max = 0-->Line_13 $$ max = i + 1 - last[ FD ]
Line_11 $$ last = i + 1-->Line_13 $$ max = i + 1 - last[ FD ]
Line_7 $$ int last = 0-->Line_13 $$ max = i + 1 - last[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(max)[ CD ]
Line_13 $$ max = i + 1 - last-->Line_16 $$ System.out.println(max)[ FD ]
Line_8 $$ int max = 0-->Line_16 $$ System.out.println(max)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()-->Line_6 $$ for (int i = 0; i < n; i++) h[i] = sc.nextLong()[ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_9 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ last = i + 1[ FD ]
Line_13 $$ max = i + 1 - last-->Line_13 $$ if (i + 1 - last > max)[ FD ]
Line_11 $$ last = i + 1-->Line_13 $$ max = i + 1 - last[ FD ]
