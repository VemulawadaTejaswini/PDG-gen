Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] map = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ map[i] = sc.nextInt()[ CD ]
Line_7 $$ map[i] = sc.nextInt()-->Line_7 $$ map[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ map[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int i[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int j = 0; j < n; j++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ CD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ CD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ CD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_8 $$ int i-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ CD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_8 $$ int i-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ CD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_8 $$ int i-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ if (map[i] < map[i + 1])[ CD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_11 $$ if (max < i - j)[ CD ]
Line_5 $$ int max = 0-->Line_11 $$ if (max < i - j)[ FD ]
Line_11 $$ if (max < i - j)-->Line_11 $$ max = i - j[ CD ]
Line_11 $$ max = i - j-->Line_11 $$ max = i - j[ FD ]
Line_5 $$ int max = 0-->Line_11 $$ max = i - j[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_11 $$ max = i - j[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_11 $$ max = i - j[ FD ]
Line_8 $$ int i-->Line_11 $$ max = i - j[ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_11 $$ max = i - j[ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_12 $$ j = i[ CD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_12 $$ j = i[ FD ]
Line_12 $$ j = i-->Line_12 $$ j = i[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_12 $$ j = i[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_12 $$ j = i[ FD ]
Line_8 $$ int i-->Line_12 $$ j = i[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ System.out.println(max)[ CD ]
Line_11 $$ max = i - j-->Line_14 $$ System.out.println(max)[ FD ]
Line_5 $$ int max = 0-->Line_14 $$ System.out.println(max)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) map[i] = sc.nextInt()[ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_12 $$ j = i-->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_12 $$ j = i-->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_12 $$ j = i-->Line_9 $$ for (int j = 0; j < n; j++) [ FD ]
Line_11 $$ max = i - j-->Line_11 $$ if (max < i - j)[ FD ]
Line_9 $$ for (int j = 0; j < n; j++) -->Line_11 $$ max = i - j[ FD ]
Line_12 $$ j = i-->Line_11 $$ max = i - j[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])-->Line_10 $$ for (i = j; i < n - 1; i++) if (map[i] < map[i + 1])[ FD ]
