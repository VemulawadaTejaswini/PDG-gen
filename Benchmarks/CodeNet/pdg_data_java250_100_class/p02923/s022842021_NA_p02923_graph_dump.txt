Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int N = Integer.parseInt(reader.readLine())-->Line_4 $$ int N = Integer.parseInt(reader.readLine())[ CD ]
Line_3 $$ try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) -->Line_4 $$ int N = Integer.parseInt(reader.readLine())[ FD ]
Line_5 $$ String[] array = reader.readLine().split(" ")-->Line_5 $$ String[] array = reader.readLine().split(" ")[ CD ]
Line_3 $$ try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) -->Line_5 $$ String[] array = reader.readLine().split(" ")[ FD ]
Line_4 $$ int N = Integer.parseInt(reader.readLine())-->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_8 $$ H[i] = Long.parseLong(array[i])[ CD ]
Line_8 $$ H[i] = Long.parseLong(array[i])-->Line_8 $$ H[i] = Long.parseLong(array[i])[ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_13 $$ if (H[i] >= H[i + 1]) [ CD ]
Line_13 $$ if (H[i] >= H[i + 1]) -->Line_14 $$ count++[ CD ]
Line_11 $$ int count = 0-->Line_14 $$ count++[ FD ]
Line_13 $$ if (H[i] >= H[i + 1]) -->Line_15 $$ if (ans < count) [ CD ]
Line_10 $$ int ans = 0-->Line_15 $$ if (ans < count) [ FD ]
Line_11 $$ int count = 0-->Line_15 $$ if (ans < count) [ FD ]
Line_15 $$ if (ans < count) -->Line_16 $$ ans = count[ CD ]
Line_16 $$ ans = count-->Line_16 $$ ans = count[ FD ]
Line_10 $$ int ans = 0-->Line_16 $$ ans = count[ FD ]
Line_11 $$ int count = 0-->Line_16 $$ ans = count[ FD ]
Line_13 $$ if (H[i] >= H[i + 1]) -->Line_19 $$ count = 0[ CD ]
Line_19 $$ count = 0-->Line_19 $$ count = 0[ FD ]
Line_11 $$ int count = 0-->Line_19 $$ count = 0[ FD ]
Line_16 $$ ans = count-->Line_22 $$ System.out.println(ans)[ FD ]
Line_10 $$ int ans = 0-->Line_22 $$ System.out.println(ans)[ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_19 $$ count = 0-->Line_14 $$ count++[ FD ]
Line_16 $$ ans = count-->Line_15 $$ if (ans < count) [ FD ]
Line_19 $$ count = 0-->Line_15 $$ if (ans < count) [ FD ]
Line_19 $$ count = 0-->Line_16 $$ ans = count[ FD ]
