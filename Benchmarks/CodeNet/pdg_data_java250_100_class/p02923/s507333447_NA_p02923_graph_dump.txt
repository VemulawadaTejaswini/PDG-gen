Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int counter = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int a[] = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ a[i] = Integer.parseInt(sc.next())[ CD ]
Line_9 $$ a[i] = Integer.parseInt(sc.next())-->Line_9 $$ a[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ a[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ if (a[i] >= a[i + 1]) [ CD ]
Line_12 $$ if (a[i] >= a[i + 1]) -->Line_13 $$ counter++[ CD ]
Line_5 $$ int counter = 0-->Line_13 $$ counter++[ FD ]
Line_12 $$ if (a[i] >= a[i + 1]) -->Line_14 $$ max = Math.max(max, counter)[ CD ]
Line_14 $$ max = Math.max(max, counter)-->Line_14 $$ max = Math.max(max, counter)[ FD ]
Line_6 $$ int max = 0-->Line_14 $$ max = Math.max(max, counter)[ FD ]
Line_14 $$ max = Math.max(max, counter)-->Line_14 $$ max = Math.max(max, counter)[ CD ]
Line_14 $$ max = Math.max(max, counter)-->Line_14 $$ max = Math.max(max, counter)[ FD ]
Line_6 $$ int max = 0-->Line_14 $$ max = Math.max(max, counter)[ FD ]
Line_5 $$ int counter = 0-->Line_14 $$ max = Math.max(max, counter)[ FD ]
Line_12 $$ if (a[i] >= a[i + 1]) -->Line_16 $$ counter = 0[ CD ]
Line_16 $$ counter = 0-->Line_16 $$ counter = 0[ FD ]
Line_5 $$ int counter = 0-->Line_16 $$ counter = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ System.out.println(max)[ CD ]
Line_14 $$ max = Math.max(max, counter)-->Line_19 $$ System.out.println(max)[ FD ]
Line_6 $$ int max = 0-->Line_19 $$ System.out.println(max)[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_16 $$ counter = 0-->Line_13 $$ counter++[ FD ]
Line_14 $$ max = Math.max(max, counter)-->Line_14 $$ max = Math.max(max, counter)[ FD ]
Line_16 $$ counter = 0-->Line_14 $$ max = Math.max(max, counter)[ FD ]
