Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int tmp = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int h1 = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ int h1 = Integer.parseInt(sc.next())-->Line_7 $$ int h1 = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int h1 = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int h2 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 1; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_9 $$ for (int i = 1; i < n; i++) [ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_9 $$ for (int i = 1; i < n; i++) [ CD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_9 $$ for (int i = 1; i < n; i++) [ CD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_9 $$ for (int i = 1; i < n; i++) [ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_10 $$ h2 = Integer.parseInt(sc.next())[ CD ]
Line_10 $$ h2 = Integer.parseInt(sc.next())-->Line_10 $$ h2 = Integer.parseInt(sc.next())[ FD ]
Line_8 $$ int h2 = 0-->Line_10 $$ h2 = Integer.parseInt(sc.next())[ FD ]
Line_10 $$ h2 = Integer.parseInt(sc.next())-->Line_10 $$ h2 = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ h2 = Integer.parseInt(sc.next())[ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_11 $$ if (h1 >= h2) [ CD ]
Line_7 $$ int h1 = Integer.parseInt(sc.next())-->Line_11 $$ if (h1 >= h2) [ FD ]
Line_10 $$ h2 = Integer.parseInt(sc.next())-->Line_11 $$ if (h1 >= h2) [ FD ]
Line_8 $$ int h2 = 0-->Line_11 $$ if (h1 >= h2) [ FD ]
Line_11 $$ if (h1 >= h2) -->Line_12 $$ tmp += 1[ CD ]
Line_12 $$ tmp += 1-->Line_12 $$ tmp += 1[ FD ]
Line_6 $$ int tmp = 0-->Line_12 $$ tmp += 1[ FD ]
Line_11 $$ if (h1 >= h2) -->Line_13 $$ if (i == n - 1) [ CD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_13 $$ if (i == n - 1) [ FD ]
Line_13 $$ if (i == n - 1) -->Line_14 $$ ans = Math.max(tmp, ans)[ CD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_5 $$ int ans = 0-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_14 $$ ans = Math.max(tmp, ans)[ CD ]
Line_12 $$ tmp += 1-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_6 $$ int tmp = 0-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_5 $$ int ans = 0-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_11 $$ if (h1 >= h2) -->Line_17 $$ ans = Math.max(tmp, ans)[ CD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_17 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_5 $$ int ans = 0-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_17 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ CD ]
Line_12 $$ tmp += 1-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_6 $$ int tmp = 0-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_17 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_5 $$ int ans = 0-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_11 $$ if (h1 >= h2) -->Line_18 $$ tmp = 0[ CD ]
Line_12 $$ tmp += 1-->Line_18 $$ tmp = 0[ FD ]
Line_18 $$ tmp = 0-->Line_18 $$ tmp = 0[ FD ]
Line_6 $$ int tmp = 0-->Line_18 $$ tmp = 0[ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_20 $$ h1 = h2[ CD ]
Line_20 $$ h1 = h2-->Line_20 $$ h1 = h2[ FD ]
Line_7 $$ int h1 = Integer.parseInt(sc.next())-->Line_20 $$ h1 = h2[ FD ]
Line_10 $$ h2 = Integer.parseInt(sc.next())-->Line_20 $$ h1 = h2[ FD ]
Line_8 $$ int h2 = 0-->Line_20 $$ h1 = h2[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ System.out.println(ans)[ CD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_22 $$ System.out.println(ans)[ FD ]
Line_17 $$ ans = Math.max(tmp, ans)-->Line_22 $$ System.out.println(ans)[ FD ]
Line_5 $$ int ans = 0-->Line_22 $$ System.out.println(ans)[ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_9 $$ for (int i = 1; i < n; i++) [ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_9 $$ for (int i = 1; i < n; i++) [ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_9 $$ for (int i = 1; i < n; i++) [ FD ]
Line_20 $$ h1 = h2-->Line_11 $$ if (h1 >= h2) [ FD ]
Line_10 $$ h2 = Integer.parseInt(sc.next())-->Line_11 $$ if (h1 >= h2) [ FD ]
Line_9 $$ for (int i = 1; i < n; i++) -->Line_13 $$ if (i == n - 1) [ FD ]
Line_12 $$ tmp += 1-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_18 $$ tmp = 0-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_17 $$ ans = Math.max(tmp, ans)-->Line_14 $$ ans = Math.max(tmp, ans)[ FD ]
Line_12 $$ tmp += 1-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_18 $$ tmp = 0-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_14 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_17 $$ ans = Math.max(tmp, ans)-->Line_17 $$ ans = Math.max(tmp, ans)[ FD ]
Line_10 $$ h2 = Integer.parseInt(sc.next())-->Line_20 $$ h1 = h2[ FD ]
