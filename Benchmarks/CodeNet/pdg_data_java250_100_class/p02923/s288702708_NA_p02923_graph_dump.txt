Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ CD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ CD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_7 $$ h[i] = sc.nextInt()[ CD ]
Line_7 $$ h[i] = sc.nextInt()-->Line_7 $$ h[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ h[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int cnt = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_12 $$ if (i + 1 == n) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_12 $$ if (i + 1 == n) [ FD ]
Line_12 $$ if (i + 1 == n) -->Line_13 $$ ans = Math.max(ans, cnt)[ CD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_9 $$ int ans = 0-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_13 $$ ans = Math.max(ans, cnt)[ CD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_9 $$ int ans = 0-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_10 $$ int cnt = 0-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_16 $$ if (h[i] >= h[i + 1]) [ CD ]
Line_16 $$ if (h[i] >= h[i + 1]) -->Line_17 $$ cnt++[ CD ]
Line_10 $$ int cnt = 0-->Line_17 $$ cnt++[ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_20 $$ ans = Math.max(ans, cnt)[ CD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_20 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_9 $$ int ans = 0-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_20 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ CD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_20 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_9 $$ int ans = 0-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_10 $$ int cnt = 0-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_21 $$ cnt = 0[ CD ]
Line_21 $$ cnt = 0-->Line_21 $$ cnt = 0[ FD ]
Line_10 $$ int cnt = 0-->Line_21 $$ cnt = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(ans)[ CD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_23 $$ System.out.println(ans)[ FD ]
Line_20 $$ ans = Math.max(ans, cnt)-->Line_23 $$ System.out.println(ans)[ FD ]
Line_9 $$ int ans = 0-->Line_23 $$ System.out.println(ans)[ FD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < h.length; i++) -->Line_6 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_11 $$ for (int i = 0; i < h.length; i++) -->Line_11 $$ for (int i = 0; i < h.length; i++) [ FD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_20 $$ ans = Math.max(ans, cnt)-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_21 $$ cnt = 0-->Line_13 $$ ans = Math.max(ans, cnt)[ FD ]
Line_21 $$ cnt = 0-->Line_17 $$ cnt++[ FD ]
Line_13 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_20 $$ ans = Math.max(ans, cnt)-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
Line_21 $$ cnt = 0-->Line_20 $$ ans = Math.max(ans, cnt)[ FD ]
