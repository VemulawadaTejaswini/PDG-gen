Line_0 $$ Entry-->Line_2 $$ public class Main [ CD ]
Line_2 $$ public class Main -->Line_3 $$ static Scanner scn = new Scanner(System.in);[ CD ]
Line_2 $$ public class Main -->Line_4 $$ public static void main(String[] args) [ CD ]
Line_4 $$ public static void main(String[] args) -->Line_5 $$ int n = scn.nextInt()[ CD ]
Line_5 $$ int n = scn.nextInt()-->Line_5 $$ int n = scn.nextInt()[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_6 $$ int[] a = new int[n][ CD ]
Line_4 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_4 $$ public static void main(String[] args) -->Line_4 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int n = scn.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ a[i] = scn.nextInt()[ CD ]
Line_9 $$ a[i] = scn.nextInt()-->Line_9 $$ a[i] = scn.nextInt()[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_11 $$ int count = 0, max = 0[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_12 $$ if (n == 1)[ CD ]
Line_5 $$ int n = scn.nextInt()-->Line_12 $$ if (n == 1)[ FD ]
Line_12 $$ if (n == 1)-->Line_12 $$ System.out.println("0")[ CD ]
Line_12 $$ if (n == 1)-->Line_13 $$ if (n > 1) [ CD ]
Line_5 $$ int n = scn.nextInt()-->Line_13 $$ if (n > 1) [ FD ]
Line_13 $$ if (n > 1) -->Line_14 $$ int i = 0, j = 1[ CD ]
Line_13 $$ if (n > 1) -->Line_15 $$ while (j < n) [ CD ]
Line_13 $$ if (n > 1) -->Line_13 $$ if (n > 1) [ CD ]
Line_14 $$ int i = 0, j = 1-->Line_15 $$ while (j < n) [ FD ]
Line_5 $$ int n = scn.nextInt()-->Line_15 $$ while (j < n) [ FD ]
Line_15 $$ while (j < n) -->Line_17 $$ if (a[i] >= a[j]) [ CD ]
Line_17 $$ if (a[i] >= a[j]) -->Line_19 $$ count++[ CD ]
Line_11 $$ int count = 0, max = 0-->Line_19 $$ count++[ FD ]
Line_17 $$ if (a[i] >= a[j]) -->Line_20 $$ i++[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_20 $$ i++[ FD ]
Line_14 $$ int i = 0, j = 1-->Line_20 $$ i++[ FD ]
Line_17 $$ if (a[i] >= a[j]) -->Line_20 $$ j++[ CD ]
Line_14 $$ int i = 0, j = 1-->Line_20 $$ j++[ FD ]
Line_17 $$ if (a[i] >= a[j]) -->Line_22 $$ if (a[i] < a[j]) [ CD ]
Line_22 $$ if (a[i] < a[j]) -->Line_24 $$ i++[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_24 $$ i++[ FD ]
Line_14 $$ int i = 0, j = 1-->Line_24 $$ i++[ FD ]
Line_22 $$ if (a[i] < a[j]) -->Line_25 $$ j++[ CD ]
Line_14 $$ int i = 0, j = 1-->Line_25 $$ j++[ FD ]
Line_22 $$ if (a[i] < a[j]) -->Line_26 $$ max = Math.max(max, count)[ CD ]
Line_26 $$ max = Math.max(max, count)-->Line_26 $$ max = Math.max(max, count)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_26 $$ max = Math.max(max, count)[ FD ]
Line_26 $$ max = Math.max(max, count)-->Line_26 $$ max = Math.max(max, count)[ CD ]
Line_26 $$ max = Math.max(max, count)-->Line_26 $$ max = Math.max(max, count)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_26 $$ max = Math.max(max, count)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_26 $$ max = Math.max(max, count)[ FD ]
Line_22 $$ if (a[i] < a[j]) -->Line_27 $$ count = 0[ CD ]
Line_27 $$ count = 0-->Line_27 $$ count = 0[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_27 $$ count = 0[ FD ]
Line_13 $$ if (n > 1) -->Line_30 $$ max = Math.max(max, count)[ CD ]
Line_26 $$ max = Math.max(max, count)-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_30 $$ max = Math.max(max, count)-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_30 $$ max = Math.max(max, count)-->Line_30 $$ max = Math.max(max, count)[ CD ]
Line_26 $$ max = Math.max(max, count)-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_30 $$ max = Math.max(max, count)-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_27 $$ count = 0-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_30 $$ max = Math.max(max, count)[ FD ]
Line_13 $$ if (n > 1) -->Line_31 $$ System.out.println(max)[ CD ]
Line_26 $$ max = Math.max(max, count)-->Line_31 $$ System.out.println(max)[ FD ]
Line_11 $$ int count = 0, max = 0-->Line_31 $$ System.out.println(max)[ FD ]
Line_30 $$ max = Math.max(max, count)-->Line_31 $$ System.out.println(max)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_27 $$ count = 0-->Line_19 $$ count++[ FD ]
Line_26 $$ max = Math.max(max, count)-->Line_26 $$ max = Math.max(max, count)[ FD ]
Line_27 $$ count = 0-->Line_26 $$ max = Math.max(max, count)[ FD ]
