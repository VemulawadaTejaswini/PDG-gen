Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int H[] = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ H[i] = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ H[i] = Integer.parseInt(sc.next())-->Line_7 $$ H[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ H[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int i = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int j = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int maxCount = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ while (i < N) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_13 $$ while (i < N) [ FD ]
Line_9 $$ int i = 0-->Line_13 $$ while (i < N) [ FD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_13 $$ while (i < N) [ FD ]
Line_13 $$ while (i < N) -->Line_14 $$ j = i[ CD ]
Line_14 $$ j = i-->Line_14 $$ j = i[ FD ]
Line_10 $$ int j = 0-->Line_14 $$ j = i[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_14 $$ j = i[ FD ]
Line_9 $$ int i = 0-->Line_14 $$ j = i[ FD ]
Line_13 $$ while (i < N) -->Line_15 $$ count = 0[ CD ]
Line_15 $$ count = 0-->Line_15 $$ count = 0[ FD ]
Line_11 $$ int count = 0-->Line_15 $$ count = 0[ FD ]
Line_13 $$ while (i < N) -->Line_16 $$ while (j < N - 1) [ CD ]
Line_13 $$ while (i < N) -->Line_13 $$ while (i < N) [ CD ]
Line_14 $$ j = i-->Line_16 $$ while (j < N - 1) [ FD ]
Line_10 $$ int j = 0-->Line_16 $$ while (j < N - 1) [ FD ]
Line_16 $$ while (j < N - 1) -->Line_17 $$ if (H[j] >= H[j + 1]) [ CD ]
Line_17 $$ if (H[j] >= H[j + 1]) -->Line_18 $$ count++[ CD ]
Line_15 $$ count = 0-->Line_18 $$ count++[ FD ]
Line_11 $$ int count = 0-->Line_18 $$ count++[ FD ]
Line_17 $$ if (H[j] >= H[j + 1]) -->Line_19 $$ j++[ CD ]
Line_14 $$ j = i-->Line_19 $$ j++[ FD ]
Line_10 $$ int j = 0-->Line_19 $$ j++[ FD ]
Line_13 $$ while (i < N) -->Line_24 $$ maxCount = Math.max(maxCount, count)[ CD ]
Line_24 $$ maxCount = Math.max(maxCount, count)-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_12 $$ int maxCount = 0-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_24 $$ maxCount = Math.max(maxCount, count)-->Line_24 $$ maxCount = Math.max(maxCount, count)[ CD ]
Line_24 $$ maxCount = Math.max(maxCount, count)-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_12 $$ int maxCount = 0-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_15 $$ count = 0-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_11 $$ int count = 0-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_13 $$ while (i < N) -->Line_25 $$ i += count + 1[ CD ]
Line_25 $$ i += count + 1-->Line_25 $$ i += count + 1[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_25 $$ i += count + 1[ FD ]
Line_9 $$ int i = 0-->Line_25 $$ i += count + 1[ FD ]
Line_15 $$ count = 0-->Line_25 $$ i += count + 1[ FD ]
Line_11 $$ int count = 0-->Line_25 $$ i += count + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_27 $$ System.out.println(maxCount)[ CD ]
Line_24 $$ maxCount = Math.max(maxCount, count)-->Line_27 $$ System.out.println(maxCount)[ FD ]
Line_12 $$ int maxCount = 0-->Line_27 $$ System.out.println(maxCount)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_25 $$ i += count + 1-->Line_13 $$ while (i < N) [ FD ]
Line_25 $$ i += count + 1-->Line_13 $$ while (i < N) [ FD ]
Line_25 $$ i += count + 1-->Line_14 $$ j = i[ FD ]
Line_24 $$ maxCount = Math.max(maxCount, count)-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_15 $$ count = 0-->Line_24 $$ maxCount = Math.max(maxCount, count)[ FD ]
Line_15 $$ count = 0-->Line_25 $$ i += count + 1[ FD ]
