Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int H[] = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_8 $$ H[i] = sc.nextInt()[ CD ]
Line_8 $$ H[i] = sc.nextInt()-->Line_8 $$ H[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ H[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int tmp = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ if (H[i] >= H[i + 1]) [ CD ]
Line_12 $$ if (H[i] >= H[i + 1]) -->Line_13 $$ for (int j = i; j < N; j++) [ CD ]
Line_12 $$ if (H[i] >= H[i + 1]) -->Line_12 $$ if (H[i] >= H[i + 1]) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_13 $$ for (int j = i; j < N; j++) [ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_13 $$ for (int j = i; j < N; j++) [ CD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_13 $$ for (int j = i; j < N; j++) [ CD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_13 $$ for (int j = i; j < N; j++) [ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_14 $$ if (j == N - 1) [ CD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_14 $$ if (j == N - 1) [ FD ]
Line_14 $$ if (j == N - 1) -->Line_15 $$ max = Math.max(tmp, max)[ CD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_6 $$ int max = 0-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_15 $$ max = Math.max(tmp, max)[ CD ]
Line_10 $$ int tmp = 0-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_6 $$ int max = 0-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_14 $$ if (j == N - 1) -->Line_16 $$ tmp = 0[ CD ]
Line_16 $$ tmp = 0-->Line_16 $$ tmp = 0[ FD ]
Line_10 $$ int tmp = 0-->Line_16 $$ tmp = 0[ FD ]
Line_14 $$ if (j == N - 1) -->Line_17 $$ i = j[ CD ]
Line_17 $$ i = j-->Line_17 $$ i = j[ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_17 $$ i = j[ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_17 $$ i = j[ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_17 $$ i = j[ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_20 $$ if (H[j] >= H[j + 1]) [ CD ]
Line_20 $$ if (H[j] >= H[j + 1]) -->Line_21 $$ tmp++[ CD ]
Line_16 $$ tmp = 0-->Line_21 $$ tmp++[ FD ]
Line_10 $$ int tmp = 0-->Line_21 $$ tmp++[ FD ]
Line_20 $$ if (H[j] >= H[j + 1]) -->Line_23 $$ max = Math.max(tmp, max)[ CD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_23 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_6 $$ int max = 0-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_23 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ CD ]
Line_16 $$ tmp = 0-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_10 $$ int tmp = 0-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_23 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_6 $$ int max = 0-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_20 $$ if (H[j] >= H[j + 1]) -->Line_24 $$ tmp = 0[ CD ]
Line_16 $$ tmp = 0-->Line_24 $$ tmp = 0[ FD ]
Line_24 $$ tmp = 0-->Line_24 $$ tmp = 0[ FD ]
Line_10 $$ int tmp = 0-->Line_24 $$ tmp = 0[ FD ]
Line_20 $$ if (H[j] >= H[j + 1]) -->Line_25 $$ i = j[ CD ]
Line_17 $$ i = j-->Line_25 $$ i = j[ FD ]
Line_25 $$ i = j-->Line_25 $$ i = j[ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_25 $$ i = j[ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_25 $$ i = j[ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_25 $$ i = j[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_31 $$ System.out.println(max)[ CD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_31 $$ System.out.println(max)[ FD ]
Line_23 $$ max = Math.max(tmp, max)-->Line_31 $$ System.out.println(max)[ FD ]
Line_6 $$ int max = 0-->Line_31 $$ System.out.println(max)[ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_7 $$ for (int i = 0; i < N; i++) -->Line_7 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_13 $$ for (int j = i; j < N; j++) [ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_13 $$ for (int j = i; j < N; j++) [ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_13 $$ for (int j = i; j < N; j++) [ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_14 $$ if (j == N - 1) [ FD ]
Line_16 $$ tmp = 0-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_24 $$ tmp = 0-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_23 $$ max = Math.max(tmp, max)-->Line_15 $$ max = Math.max(tmp, max)[ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_17 $$ i = j[ FD ]
Line_16 $$ tmp = 0-->Line_21 $$ tmp++[ FD ]
Line_24 $$ tmp = 0-->Line_21 $$ tmp++[ FD ]
Line_16 $$ tmp = 0-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_24 $$ tmp = 0-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_15 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_23 $$ max = Math.max(tmp, max)-->Line_23 $$ max = Math.max(tmp, max)[ FD ]
Line_13 $$ for (int j = i; j < N; j++) -->Line_25 $$ i = j[ FD ]
