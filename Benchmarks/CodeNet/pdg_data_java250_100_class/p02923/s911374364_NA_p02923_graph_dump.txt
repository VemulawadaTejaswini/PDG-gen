Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(final String[] args) [ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int n = scan.nextInt()[ FD ]
Line_2 $$ public static void main(final String[] args) -->Line_5 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_2 $$ public static void main(final String[] args) [ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = scan.nextInt()[ CD ]
Line_7 $$ h[i] = scan.nextInt()-->Line_7 $$ h[i] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ h[i] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(final String[] args) -->Line_9 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_10 $$ int len = 0[ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(final String[] args) -->Line_2 $$ public static void main(final String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_12 $$ if (h[i] >= h[i + 1]) [ CD ]
Line_12 $$ if (h[i] >= h[i + 1]) -->Line_13 $$ len++[ CD ]
Line_10 $$ int len = 0-->Line_13 $$ len++[ FD ]
Line_12 $$ if (h[i] >= h[i + 1]) -->Line_15 $$ ans = Math.max(ans, len)[ CD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
Line_9 $$ int ans = 0-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_15 $$ ans = Math.max(ans, len)[ CD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
Line_9 $$ int ans = 0-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
Line_10 $$ int len = 0-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
Line_12 $$ if (h[i] >= h[i + 1]) -->Line_16 $$ len = 0[ CD ]
Line_16 $$ len = 0-->Line_16 $$ len = 0[ FD ]
Line_10 $$ int len = 0-->Line_16 $$ len = 0[ FD ]
Line_2 $$ public static void main(final String[] args) -->Line_19 $$ ans = Math.max(ans, len)[ CD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_9 $$ int ans = 0-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_19 $$ ans = Math.max(ans, len)-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_19 $$ ans = Math.max(ans, len)-->Line_19 $$ ans = Math.max(ans, len)[ CD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_9 $$ int ans = 0-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_19 $$ ans = Math.max(ans, len)-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_16 $$ len = 0-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_10 $$ int len = 0-->Line_19 $$ ans = Math.max(ans, len)[ FD ]
Line_2 $$ public static void main(final String[] args) -->Line_20 $$ System.out.println(ans)[ CD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_20 $$ System.out.println(ans)[ FD ]
Line_9 $$ int ans = 0-->Line_20 $$ System.out.println(ans)[ FD ]
Line_19 $$ ans = Math.max(ans, len)-->Line_20 $$ System.out.println(ans)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_16 $$ len = 0-->Line_13 $$ len++[ FD ]
Line_15 $$ ans = Math.max(ans, len)-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
Line_16 $$ len = 0-->Line_15 $$ ans = Math.max(ans, len)[ FD ]
