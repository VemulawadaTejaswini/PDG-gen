Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int[] grid = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ grid[i] = sc.nextInt()[ CD ]
Line_7 $$ grid[i] = sc.nextInt()-->Line_7 $$ grid[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ grid[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ int num = n - 1[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ int cnt = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ for (int i = 0; i < num; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_9 $$ int num = n - 1-->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ CD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ CD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_13 $$ if (grid[i] >= grid[i + 1]) [ CD ]
Line_13 $$ if (grid[i] >= grid[i + 1]) -->Line_14 $$ cnt++[ CD ]
Line_10 $$ int cnt = 0-->Line_14 $$ cnt++[ FD ]
Line_13 $$ if (grid[i] >= grid[i + 1]) -->Line_16 $$ cnt = 0[ CD ]
Line_16 $$ cnt = 0-->Line_16 $$ cnt = 0[ FD ]
Line_10 $$ int cnt = 0-->Line_16 $$ cnt = 0[ FD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_18 $$ max = Math.max(max, cnt)[ CD ]
Line_18 $$ max = Math.max(max, cnt)-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_11 $$ int max = 0-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_18 $$ max = Math.max(max, cnt)-->Line_18 $$ max = Math.max(max, cnt)[ CD ]
Line_18 $$ max = Math.max(max, cnt)-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_11 $$ int max = 0-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_16 $$ cnt = 0-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_10 $$ int cnt = 0-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ System.out.println(max)[ CD ]
Line_18 $$ max = Math.max(max, cnt)-->Line_20 $$ System.out.println(max)[ FD ]
Line_11 $$ int max = 0-->Line_20 $$ System.out.println(max)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_12 $$ for (int i = 0; i < num; i++) -->Line_12 $$ for (int i = 0; i < num; i++) [ FD ]
Line_16 $$ cnt = 0-->Line_14 $$ cnt++[ FD ]
Line_18 $$ max = Math.max(max, cnt)-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
Line_16 $$ cnt = 0-->Line_18 $$ max = Math.max(max, cnt)[ FD ]
