Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int con = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] arr = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ CD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_9 $$ arr[i] = sc.nextInt()[ CD ]
Line_9 $$ arr[i] = sc.nextInt()-->Line_9 $$ arr[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ arr[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_12 $$ if (arr[i - 1] - arr[i] >= 0) [ CD ]
Line_12 $$ if (arr[i - 1] - arr[i] >= 0) -->Line_13 $$ con++[ CD ]
Line_5 $$ int con = 0-->Line_13 $$ con++[ FD ]
Line_12 $$ if (arr[i - 1] - arr[i] >= 0) -->Line_15 $$ max = Math.max(max, con)[ CD ]
Line_15 $$ max = Math.max(max, con)-->Line_15 $$ max = Math.max(max, con)[ FD ]
Line_6 $$ int max = 0-->Line_15 $$ max = Math.max(max, con)[ FD ]
Line_15 $$ max = Math.max(max, con)-->Line_15 $$ max = Math.max(max, con)[ CD ]
Line_15 $$ max = Math.max(max, con)-->Line_15 $$ max = Math.max(max, con)[ FD ]
Line_6 $$ int max = 0-->Line_15 $$ max = Math.max(max, con)[ FD ]
Line_5 $$ int con = 0-->Line_15 $$ max = Math.max(max, con)[ FD ]
Line_12 $$ if (arr[i - 1] - arr[i] >= 0) -->Line_16 $$ con = 0[ CD ]
Line_16 $$ con = 0-->Line_16 $$ con = 0[ FD ]
Line_5 $$ int con = 0-->Line_16 $$ con = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ max = Math.max(max, con)[ CD ]
Line_15 $$ max = Math.max(max, con)-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_6 $$ int max = 0-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_19 $$ max = Math.max(max, con)-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_19 $$ max = Math.max(max, con)-->Line_19 $$ max = Math.max(max, con)[ CD ]
Line_15 $$ max = Math.max(max, con)-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_6 $$ int max = 0-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_19 $$ max = Math.max(max, con)-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_16 $$ con = 0-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_5 $$ int con = 0-->Line_19 $$ max = Math.max(max, con)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(max)[ CD ]
Line_15 $$ max = Math.max(max, con)-->Line_20 $$ System.out.println(max)[ FD ]
Line_6 $$ int max = 0-->Line_20 $$ System.out.println(max)[ FD ]
Line_19 $$ max = Math.max(max, con)-->Line_20 $$ System.out.println(max)[ FD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < arr.length; i++) -->Line_8 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_16 $$ con = 0-->Line_13 $$ con++[ FD ]
Line_15 $$ max = Math.max(max, con)-->Line_15 $$ max = Math.max(max, con)[ FD ]
Line_16 $$ con = 0-->Line_15 $$ max = Math.max(max, con)[ FD ]
