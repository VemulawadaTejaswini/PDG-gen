Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ h[i] = Integer.parseInt(sc.next())-->Line_7 $$ h[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ h[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int returnMax = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_12 $$ int leftPoint = i[ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_13 $$ count = 0[ CD ]
Line_13 $$ count = 0-->Line_13 $$ count = 0[ FD ]
Line_10 $$ int count = 0-->Line_13 $$ count = 0[ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_14 $$ for (int j = i + 1; j < n; j++) [ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ CD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ CD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_15 $$ if (h[leftPoint] >= h[j]) [ CD ]
Line_15 $$ if (h[leftPoint] >= h[j]) -->Line_16 $$ leftPoint = j[ CD ]
Line_16 $$ leftPoint = j-->Line_16 $$ leftPoint = j[ FD ]
Line_12 $$ int leftPoint = i-->Line_16 $$ leftPoint = j[ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_16 $$ leftPoint = j[ FD ]
Line_15 $$ if (h[leftPoint] >= h[j]) -->Line_17 $$ count++[ CD ]
Line_13 $$ count = 0-->Line_17 $$ count++[ FD ]
Line_10 $$ int count = 0-->Line_17 $$ count++[ FD ]
Line_15 $$ if (h[leftPoint] >= h[j]) -->Line_18 $$ if (returnMax < count) [ CD ]
Line_9 $$ int returnMax = 0-->Line_18 $$ if (returnMax < count) [ FD ]
Line_13 $$ count = 0-->Line_18 $$ if (returnMax < count) [ FD ]
Line_10 $$ int count = 0-->Line_18 $$ if (returnMax < count) [ FD ]
Line_18 $$ if (returnMax < count) -->Line_19 $$ returnMax = count[ CD ]
Line_19 $$ returnMax = count-->Line_19 $$ returnMax = count[ FD ]
Line_9 $$ int returnMax = 0-->Line_19 $$ returnMax = count[ FD ]
Line_13 $$ count = 0-->Line_19 $$ returnMax = count[ FD ]
Line_10 $$ int count = 0-->Line_19 $$ returnMax = count[ FD ]
Line_18 $$ if (returnMax < count) -->Line_20 $$ if (returnMax >= (n - i)) [ CD ]
Line_19 $$ returnMax = count-->Line_20 $$ if (returnMax >= (n - i)) [ FD ]
Line_9 $$ int returnMax = 0-->Line_20 $$ if (returnMax >= (n - i)) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_28 $$ if (returnMax >= (n - i)) [ CD ]
Line_19 $$ returnMax = count-->Line_28 $$ if (returnMax >= (n - i)) [ FD ]
Line_9 $$ int returnMax = 0-->Line_28 $$ if (returnMax >= (n - i)) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_32 $$ System.out.println(returnMax)[ CD ]
Line_19 $$ returnMax = count-->Line_32 $$ System.out.println(returnMax)[ FD ]
Line_9 $$ int returnMax = 0-->Line_32 $$ System.out.println(returnMax)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_14 $$ for (int j = i + 1; j < n; j++) [ FD ]
Line_14 $$ for (int j = i + 1; j < n; j++) -->Line_16 $$ leftPoint = j[ FD ]
Line_19 $$ returnMax = count-->Line_18 $$ if (returnMax < count) [ FD ]
Line_19 $$ returnMax = count-->Line_20 $$ if (returnMax >= (n - i)) [ FD ]
