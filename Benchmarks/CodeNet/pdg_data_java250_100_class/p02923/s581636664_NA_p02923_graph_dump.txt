Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] h = new long[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ h[i] = sc.nextLong()[ CD ]
Line_7 $$ h[i] = sc.nextLong()-->Line_7 $$ h[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ h[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int i = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ while (i < n - 1) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ while (i < n - 1) [ FD ]
Line_11 $$ int i = 0-->Line_12 $$ while (i < n - 1) [ FD ]
Line_12 $$ while (i < n - 1) -->Line_13 $$ if (h[i] >= h[i + 1])[ CD ]
Line_13 $$ if (h[i] >= h[i + 1])-->Line_13 $$ count++[ CD ]
Line_10 $$ int count = 0-->Line_13 $$ count++[ FD ]
Line_13 $$ if (h[i] >= h[i + 1])-->Line_15 $$ max = Math.max(max, count)[ CD ]
Line_15 $$ max = Math.max(max, count)-->Line_15 $$ max = Math.max(max, count)[ FD ]
Line_9 $$ int max = 0-->Line_15 $$ max = Math.max(max, count)[ FD ]
Line_15 $$ max = Math.max(max, count)-->Line_15 $$ max = Math.max(max, count)[ CD ]
Line_15 $$ max = Math.max(max, count)-->Line_15 $$ max = Math.max(max, count)[ FD ]
Line_9 $$ int max = 0-->Line_15 $$ max = Math.max(max, count)[ FD ]
Line_10 $$ int count = 0-->Line_15 $$ max = Math.max(max, count)[ FD ]
Line_13 $$ if (h[i] >= h[i + 1])-->Line_16 $$ count = 0[ CD ]
Line_16 $$ count = 0-->Line_16 $$ count = 0[ FD ]
Line_10 $$ int count = 0-->Line_16 $$ count = 0[ FD ]
Line_12 $$ while (i < n - 1) -->Line_18 $$ i++[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_18 $$ i++[ FD ]
Line_11 $$ int i = 0-->Line_18 $$ i++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ max = Math.max(max, count)[ CD ]
Line_15 $$ max = Math.max(max, count)-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_9 $$ int max = 0-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_20 $$ max = Math.max(max, count)-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_20 $$ max = Math.max(max, count)-->Line_20 $$ max = Math.max(max, count)[ CD ]
Line_15 $$ max = Math.max(max, count)-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_9 $$ int max = 0-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_20 $$ max = Math.max(max, count)-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_16 $$ count = 0-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_10 $$ int count = 0-->Line_20 $$ max = Math.max(max, count)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(max)[ CD ]
Line_15 $$ max = Math.max(max, count)-->Line_21 $$ System.out.println(max)[ FD ]
Line_9 $$ int max = 0-->Line_21 $$ System.out.println(max)[ FD ]
Line_20 $$ max = Math.max(max, count)-->Line_21 $$ System.out.println(max)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ count = 0-->Line_13 $$ count++[ FD ]
Line_15 $$ max = Math.max(max, count)-->Line_15 $$ max = Math.max(max, count)[ FD ]
Line_16 $$ count = 0-->Line_15 $$ max = Math.max(max, count)[ FD ]
