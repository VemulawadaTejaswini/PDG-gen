Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_4 $$ int a = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int a = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] in = new int[a][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < a; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int a = sc.nextInt()-->Line_6 $$ for (int i = 0; i < a; i++) [ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_6 $$ for (int i = 0; i < a; i++) [ CD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_6 $$ for (int i = 0; i < a; i++) [ CD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_6 $$ for (int i = 0; i < a; i++) [ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_7 $$ in[i] = sc.nextInt()[ CD ]
Line_7 $$ in[i] = sc.nextInt()-->Line_7 $$ in[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ in[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ if (in[i] >= in[i + 1]) [ CD ]
Line_11 $$ if (in[i] >= in[i + 1]) -->Line_11 $$ count++[ CD ]
Line_9 $$ int count = 0-->Line_11 $$ count++[ FD ]
Line_11 $$ if (in[i] >= in[i + 1]) -->Line_12 $$ ans = Math.max(ans, count)[ CD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_10 $$ int ans = 0-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_12 $$ ans = Math.max(ans, count)[ CD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_10 $$ int ans = 0-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_9 $$ int count = 0-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_11 $$ if (in[i] >= in[i + 1]) -->Line_13 $$ count = 0[ CD ]
Line_13 $$ count = 0-->Line_13 $$ count = 0[ FD ]
Line_9 $$ int count = 0-->Line_13 $$ count = 0[ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_15 $$ if (i == a - 2) [ CD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_15 $$ if (i == a - 2) [ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_15 $$ if (i == a - 2) [ FD ]
Line_15 $$ if (i == a - 2) -->Line_15 $$ ans = Math.max(ans, count)[ CD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_15 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_10 $$ int ans = 0-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_15 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ CD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_15 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_10 $$ int ans = 0-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_13 $$ count = 0-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_9 $$ int count = 0-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(ans)[ CD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_17 $$ System.out.println(ans)[ FD ]
Line_15 $$ ans = Math.max(ans, count)-->Line_17 $$ System.out.println(ans)[ FD ]
Line_10 $$ int ans = 0-->Line_17 $$ System.out.println(ans)[ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_6 $$ for (int i = 0; i < a; i++) [ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_6 $$ for (int i = 0; i < a; i++) [ FD ]
Line_6 $$ for (int i = 0; i < a; i++) -->Line_6 $$ for (int i = 0; i < a; i++) [ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_11 $$ for (int i = 0; i < a - 1; i++) [ FD ]
Line_13 $$ count = 0-->Line_11 $$ count++[ FD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_15 $$ ans = Math.max(ans, count)-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_13 $$ count = 0-->Line_12 $$ ans = Math.max(ans, count)[ FD ]
Line_11 $$ for (int i = 0; i < a - 1; i++) -->Line_15 $$ if (i == a - 2) [ FD ]
Line_12 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_15 $$ ans = Math.max(ans, count)-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
Line_13 $$ count = 0-->Line_15 $$ ans = Math.max(ans, count)[ FD ]
