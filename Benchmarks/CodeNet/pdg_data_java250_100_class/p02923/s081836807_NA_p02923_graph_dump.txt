Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = in.nextInt()[ CD ]
Line_4 $$ int N = in.nextInt()-->Line_4 $$ int N = in.nextInt()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_4 $$ int N = in.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] squares = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ CD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ CD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_7 $$ squares[i] = in.nextInt()[ CD ]
Line_7 $$ squares[i] = in.nextInt()-->Line_7 $$ squares[i] = in.nextInt()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_7 $$ squares[i] = in.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int min = 0, count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ boolean flag = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ FD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ CD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ CD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ FD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ FD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_12 $$ if (squares[i] <= squares[i - 1]) [ CD ]
Line_12 $$ if (squares[i] <= squares[i - 1]) -->Line_13 $$ count++[ CD ]
Line_9 $$ int min = 0, count = 0-->Line_13 $$ count++[ FD ]
Line_12 $$ if (squares[i] <= squares[i - 1]) -->Line_16 $$ flag = true[ CD ]
Line_16 $$ flag = true-->Line_16 $$ flag = true[ FD ]
Line_10 $$ boolean flag = false-->Line_16 $$ flag = true[ FD ]
Line_12 $$ if (squares[i] <= squares[i - 1]) -->Line_17 $$ min = Math.max(count, min)[ CD ]
Line_17 $$ min = Math.max(count, min)-->Line_17 $$ min = Math.max(count, min)[ FD ]
Line_9 $$ int min = 0, count = 0-->Line_17 $$ min = Math.max(count, min)[ FD ]
Line_17 $$ min = Math.max(count, min)-->Line_17 $$ min = Math.max(count, min)[ CD ]
Line_9 $$ int min = 0, count = 0-->Line_17 $$ min = Math.max(count, min)[ FD ]
Line_17 $$ min = Math.max(count, min)-->Line_17 $$ min = Math.max(count, min)[ FD ]
Line_9 $$ int min = 0, count = 0-->Line_17 $$ min = Math.max(count, min)[ FD ]
Line_12 $$ if (squares[i] <= squares[i - 1]) -->Line_18 $$ count = 0[ CD ]
Line_18 $$ count = 0-->Line_18 $$ count = 0[ FD ]
Line_9 $$ int min = 0, count = 0-->Line_18 $$ count = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ if (flag)[ CD ]
Line_21 $$ if (flag)-->Line_21 $$ System.out.println(min)[ CD ]
Line_17 $$ min = Math.max(count, min)-->Line_21 $$ System.out.println(min)[ FD ]
Line_9 $$ int min = 0, count = 0-->Line_21 $$ System.out.println(min)[ FD ]
Line_21 $$ if (flag)-->Line_22 $$ System.out.println(count)[ CD ]
Line_18 $$ count = 0-->Line_22 $$ System.out.println(count)[ FD ]
Line_9 $$ int min = 0, count = 0-->Line_22 $$ System.out.println(count)[ FD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ FD ]
Line_6 $$ for (int i = 0; i < squares.length; i++) -->Line_6 $$ for (int i = 0; i < squares.length; i++) [ FD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ FD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ FD ]
Line_11 $$ for (int i = squares.length - 1; i > 0; i--) -->Line_11 $$ for (int i = squares.length - 1; i > 0; i--) [ FD ]
Line_18 $$ count = 0-->Line_13 $$ count++[ FD ]
Line_18 $$ count = 0-->Line_17 $$ min = Math.max(count, min)[ FD ]
Line_17 $$ min = Math.max(count, min)-->Line_17 $$ min = Math.max(count, min)[ FD ]
