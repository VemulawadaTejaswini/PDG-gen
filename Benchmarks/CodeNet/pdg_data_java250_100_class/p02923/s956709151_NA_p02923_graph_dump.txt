Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int H[] = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int answer = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ H[i] = sc.nextInt()[ CD ]
Line_9 $$ H[i] = sc.nextInt()-->Line_9 $$ H[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ H[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_12 $$ answer = 0[ CD ]
Line_12 $$ answer = 0-->Line_12 $$ answer = 0[ FD ]
Line_7 $$ int answer = 0-->Line_12 $$ answer = 0[ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ CD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ CD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ CD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ FD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_14 $$ if (H[i + j] < H[i + j + 1]) [ CD ]
Line_14 $$ if (H[i + j] < H[i + j + 1]) -->Line_17 $$ answer++[ CD ]
Line_12 $$ answer = 0-->Line_17 $$ answer++[ FD ]
Line_7 $$ int answer = 0-->Line_17 $$ answer++[ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_20 $$ if (max < answer)[ CD ]
Line_6 $$ int max = 0-->Line_20 $$ if (max < answer)[ FD ]
Line_12 $$ answer = 0-->Line_20 $$ if (max < answer)[ FD ]
Line_7 $$ int answer = 0-->Line_20 $$ if (max < answer)[ FD ]
Line_20 $$ if (max < answer)-->Line_20 $$ max = answer[ CD ]
Line_20 $$ max = answer-->Line_20 $$ max = answer[ FD ]
Line_6 $$ int max = 0-->Line_20 $$ max = answer[ FD ]
Line_12 $$ answer = 0-->Line_20 $$ max = answer[ FD ]
Line_7 $$ int answer = 0-->Line_20 $$ max = answer[ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_21 $$ if (N - i <= max)[ CD ]
Line_20 $$ max = answer-->Line_21 $$ if (N - i <= max)[ FD ]
Line_6 $$ int max = 0-->Line_21 $$ if (N - i <= max)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(max)[ CD ]
Line_20 $$ max = answer-->Line_23 $$ System.out.println(max)[ FD ]
Line_6 $$ int max = 0-->Line_23 $$ System.out.println(max)[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_20 $$ max = answer-->Line_20 $$ if (max < answer)[ FD ]
Line_12 $$ answer = 0-->Line_20 $$ if (max < answer)[ FD ]
Line_12 $$ answer = 0-->Line_20 $$ max = answer[ FD ]
Line_20 $$ max = answer-->Line_21 $$ if (N - i <= max)[ FD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ FD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ FD ]
Line_13 $$ for (int j = 0; j < N - i - 1; j++) -->Line_13 $$ for (int j = 0; j < N - i - 1; j++) [ FD ]
