Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ Scanner s = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ int n = s.nextInt()[ CD ]
Line_4 $$ int n = s.nextInt()-->Line_4 $$ int n = s.nextInt()[ CD ]
Line_3 $$ Scanner s = new Scanner(System.in)-->Line_4 $$ int n = s.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ int a[] = new int[n][ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_4 $$ int n = s.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ a[i] = s.nextInt()[ CD ]
Line_7 $$ a[i] = s.nextInt()-->Line_7 $$ a[i] = s.nextInt()[ CD ]
Line_3 $$ Scanner s = new Scanner(System.in)-->Line_7 $$ a[i] = s.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_9 $$ int c = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_10 $$ int max = -1[ CD ]
Line_10 $$ int max = -1-->Line_10 $$ int max = -1[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_12 $$ if (a[i] >= a[i + 1]) [ CD ]
Line_12 $$ if (a[i] >= a[i + 1]) -->Line_13 $$ c++[ CD ]
Line_9 $$ int c = 0-->Line_13 $$ c++[ FD ]
Line_12 $$ if (a[i] >= a[i + 1]) -->Line_14 $$ if (c > max)[ CD ]
Line_9 $$ int c = 0-->Line_14 $$ if (c > max)[ FD ]
Line_10 $$ int max = -1-->Line_14 $$ if (c > max)[ FD ]
Line_14 $$ if (c > max)-->Line_15 $$ max = c[ CD ]
Line_15 $$ max = c-->Line_15 $$ max = c[ FD ]
Line_10 $$ int max = -1-->Line_15 $$ max = c[ FD ]
Line_9 $$ int c = 0-->Line_15 $$ max = c[ FD ]
Line_12 $$ if (a[i] >= a[i + 1]) -->Line_18 $$ c = 0[ CD ]
Line_18 $$ c = 0-->Line_18 $$ c = 0[ FD ]
Line_9 $$ int c = 0-->Line_18 $$ c = 0[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_20 $$ System.out.println(Math.max(max, 0))[ CD ]
Line_15 $$ max = c-->Line_20 $$ System.out.println(Math.max(max, 0))[ FD ]
Line_10 $$ int max = -1-->Line_20 $$ System.out.println(Math.max(max, 0))[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n - 1; i++) -->Line_11 $$ for (int i = 0; i < n - 1; i++) [ FD ]
Line_18 $$ c = 0-->Line_13 $$ c++[ FD ]
Line_18 $$ c = 0-->Line_14 $$ if (c > max)[ FD ]
Line_15 $$ max = c-->Line_14 $$ if (c > max)[ FD ]
Line_18 $$ c = 0-->Line_15 $$ max = c[ FD ]
