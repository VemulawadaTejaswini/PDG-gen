Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] h = new long[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ h[i] = sc.nextLong()[ CD ]
Line_7 $$ h[i] = sc.nextLong()-->Line_7 $$ h[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ h[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int count = 0, maxium = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 1; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ CD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ CD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_11 $$ if (h[i] <= h[i - 1]) [ CD ]
Line_11 $$ if (h[i] <= h[i - 1]) -->Line_12 $$ count++[ CD ]
Line_9 $$ int count = 0, maxium = 0-->Line_12 $$ count++[ FD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_14 $$ if (h[i] > h[i - 1] || i == N - 1) [ CD ]
Line_14 $$ if (h[i] > h[i - 1] || i == N - 1) -->Line_15 $$ maxium = Math.max(maxium, count)[ CD ]
Line_15 $$ maxium = Math.max(maxium, count)-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
Line_9 $$ int count = 0, maxium = 0-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
Line_15 $$ maxium = Math.max(maxium, count)-->Line_15 $$ maxium = Math.max(maxium, count)[ CD ]
Line_15 $$ maxium = Math.max(maxium, count)-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
Line_9 $$ int count = 0, maxium = 0-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
Line_9 $$ int count = 0, maxium = 0-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
Line_14 $$ if (h[i] > h[i - 1] || i == N - 1) -->Line_16 $$ count = 0[ CD ]
Line_16 $$ count = 0-->Line_16 $$ count = 0[ FD ]
Line_9 $$ int count = 0, maxium = 0-->Line_16 $$ count = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ System.out.println(maxium)[ CD ]
Line_15 $$ maxium = Math.max(maxium, count)-->Line_19 $$ System.out.println(maxium)[ FD ]
Line_9 $$ int count = 0, maxium = 0-->Line_19 $$ System.out.println(maxium)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_10 $$ for (int i = 1; i < N; i++) -->Line_10 $$ for (int i = 1; i < N; i++) [ FD ]
Line_16 $$ count = 0-->Line_12 $$ count++[ FD ]
Line_15 $$ maxium = Math.max(maxium, count)-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
Line_16 $$ count = 0-->Line_15 $$ maxium = Math.max(maxium, count)[ FD ]
