Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String[] hs = sc.nextLine().split(" ")[ CD ]
Line_5 $$ String[] hs = sc.nextLine().split(" ")-->Line_5 $$ String[] hs = sc.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String[] hs = sc.nextLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ h[i] = Integer.parseInt(hs[i])[ CD ]
Line_7 $$ h[i] = Integer.parseInt(hs[i])-->Line_7 $$ h[i] = Integer.parseInt(hs[i])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 1; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_11 $$ for (int i = 1; i < n; i++) [ CD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_11 $$ for (int i = 1; i < n; i++) [ CD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_12 $$ count = h[i] <= h[i - 1] ? count + 1 : 0[ CD ]
Line_12 $$ count = h[i] <= h[i - 1] ? count + 1 : 0-->Line_12 $$ count = h[i] <= h[i - 1] ? count + 1 : 0[ FD ]
Line_10 $$ int count = 0-->Line_12 $$ count = h[i] <= h[i - 1] ? count + 1 : 0[ FD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_13 $$ max = Math.max(max, count)[ CD ]
Line_13 $$ max = Math.max(max, count)-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_9 $$ int max = 0-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_13 $$ max = Math.max(max, count)-->Line_13 $$ max = Math.max(max, count)[ CD ]
Line_13 $$ max = Math.max(max, count)-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_9 $$ int max = 0-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_12 $$ count = h[i] <= h[i - 1] ? count + 1 : 0-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_10 $$ int count = 0-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ System.out.println(max)[ CD ]
Line_13 $$ max = Math.max(max, count)-->Line_15 $$ System.out.println(max)[ FD ]
Line_9 $$ int max = 0-->Line_15 $$ System.out.println(max)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])-->Line_7 $$ for (int i = 0; i < n; i++) h[i] = Integer.parseInt(hs[i])[ FD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_11 $$ for (int i = 1; i < n; i++) -->Line_11 $$ for (int i = 1; i < n; i++) [ FD ]
Line_13 $$ max = Math.max(max, count)-->Line_13 $$ max = Math.max(max, count)[ FD ]
Line_12 $$ count = h[i] <= h[i - 1] ? count + 1 : 0-->Line_13 $$ max = Math.max(max, count)[ FD ]
