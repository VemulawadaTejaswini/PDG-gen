Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] h = new long[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ long[] p = new long[n - 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ CD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ CD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_8 $$ h[i] = sc.nextLong()[ CD ]
Line_8 $$ h[i] = sc.nextLong()-->Line_8 $$ h[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ h[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_9 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ CD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ CD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_9 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_10 $$ if (h[i] < h[i + 1])[ CD ]
Line_10 $$ if (h[i] < h[i + 1])-->Line_10 $$ p[i] = 0[ CD ]
Line_10 $$ if (h[i] < h[i + 1])-->Line_11 $$ p[i] = 1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int max1 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ int max2 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ CD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ CD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_16 $$ if (p[i] == 1) [ CD ]
Line_16 $$ if (p[i] == 1) -->Line_17 $$ ++max1[ CD ]
Line_13 $$ int max1 = 0-->Line_17 $$ ++max1[ FD ]
Line_16 $$ if (p[i] == 1) -->Line_20 $$ max2 = Math.max(max1, max2)[ CD ]
Line_20 $$ max2 = Math.max(max1, max2)-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
Line_14 $$ int max2 = 0-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
Line_20 $$ max2 = Math.max(max1, max2)-->Line_20 $$ max2 = Math.max(max1, max2)[ CD ]
Line_13 $$ int max1 = 0-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
Line_20 $$ max2 = Math.max(max1, max2)-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
Line_14 $$ int max2 = 0-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
Line_16 $$ if (p[i] == 1) -->Line_21 $$ max1 = 0[ CD ]
Line_21 $$ max1 = 0-->Line_21 $$ max1 = 0[ FD ]
Line_13 $$ int max1 = 0-->Line_21 $$ max1 = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ System.out.println(Math.max(max1, max2))[ CD ]
Line_21 $$ max1 = 0-->Line_24 $$ System.out.println(Math.max(max1, max2))[ FD ]
Line_13 $$ int max1 = 0-->Line_24 $$ System.out.println(Math.max(max1, max2))[ FD ]
Line_20 $$ max2 = Math.max(max1, max2)-->Line_24 $$ System.out.println(Math.max(max1, max2))[ FD ]
Line_14 $$ int max2 = 0-->Line_24 $$ System.out.println(Math.max(max1, max2))[ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ FD ]
Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()-->Line_7 $$ for (int i = 0; i < n; ++i) h[i] = sc.nextLong()[ FD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_9 $$ for (int i = 0; i < p.length; ++i) -->Line_9 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_15 $$ for (int i = 0; i < p.length; ++i) -->Line_15 $$ for (int i = 0; i < p.length; ++i) [ FD ]
Line_21 $$ max1 = 0-->Line_17 $$ ++max1[ FD ]
Line_21 $$ max1 = 0-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
Line_20 $$ max2 = Math.max(max1, max2)-->Line_20 $$ max2 = Math.max(max1, max2)[ FD ]
