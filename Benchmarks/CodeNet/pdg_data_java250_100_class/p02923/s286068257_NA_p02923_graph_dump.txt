Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = scan.nextInt()[ CD ]
Line_4 $$ int N = scan.nextInt()-->Line_4 $$ int N = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int N = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] H = new int[N + 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ CD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ CD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_7 $$ H[i] = scan.nextInt()[ CD ]
Line_7 $$ H[i] = scan.nextInt()-->Line_7 $$ H[i] = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ H[i] = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int best = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int j = 1; j < N; j++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = scan.nextInt()-->Line_11 $$ for (int j = 1; j < N; j++) [ FD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_11 $$ for (int j = 1; j < N; j++) [ CD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_11 $$ for (int j = 1; j < N; j++) [ CD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_11 $$ for (int j = 1; j < N; j++) [ FD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_12 $$ if (H[j] >= H[j + 1]) [ CD ]
Line_12 $$ if (H[j] >= H[j + 1]) -->Line_13 $$ count++[ CD ]
Line_9 $$ int count = 0-->Line_13 $$ count++[ FD ]
Line_12 $$ if (H[j] >= H[j + 1]) -->Line_15 $$ if (best < count)[ CD ]
Line_10 $$ int best = 0-->Line_15 $$ if (best < count)[ FD ]
Line_9 $$ int count = 0-->Line_15 $$ if (best < count)[ FD ]
Line_15 $$ if (best < count)-->Line_15 $$ best = count[ CD ]
Line_15 $$ best = count-->Line_15 $$ best = count[ FD ]
Line_10 $$ int best = 0-->Line_15 $$ best = count[ FD ]
Line_9 $$ int count = 0-->Line_15 $$ best = count[ FD ]
Line_12 $$ if (H[j] >= H[j + 1]) -->Line_16 $$ count = 0[ CD ]
Line_16 $$ count = 0-->Line_16 $$ count = 0[ FD ]
Line_9 $$ int count = 0-->Line_16 $$ count = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ if (best < count)[ CD ]
Line_15 $$ best = count-->Line_19 $$ if (best < count)[ FD ]
Line_10 $$ int best = 0-->Line_19 $$ if (best < count)[ FD ]
Line_16 $$ count = 0-->Line_19 $$ if (best < count)[ FD ]
Line_9 $$ int count = 0-->Line_19 $$ if (best < count)[ FD ]
Line_19 $$ if (best < count)-->Line_19 $$ best = count[ CD ]
Line_15 $$ best = count-->Line_19 $$ best = count[ FD ]
Line_10 $$ int best = 0-->Line_19 $$ best = count[ FD ]
Line_19 $$ best = count-->Line_19 $$ best = count[ FD ]
Line_16 $$ count = 0-->Line_19 $$ best = count[ FD ]
Line_9 $$ int count = 0-->Line_19 $$ best = count[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(best)[ CD ]
Line_15 $$ best = count-->Line_20 $$ System.out.println(best)[ FD ]
Line_10 $$ int best = 0-->Line_20 $$ System.out.println(best)[ FD ]
Line_19 $$ best = count-->Line_20 $$ System.out.println(best)[ FD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_6 $$ for (int i = 1; i < N + 1; i++) -->Line_6 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_11 $$ for (int j = 1; j < N; j++) [ FD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_11 $$ for (int j = 1; j < N; j++) [ FD ]
Line_11 $$ for (int j = 1; j < N; j++) -->Line_11 $$ for (int j = 1; j < N; j++) [ FD ]
Line_16 $$ count = 0-->Line_13 $$ count++[ FD ]
Line_15 $$ best = count-->Line_15 $$ if (best < count)[ FD ]
Line_16 $$ count = 0-->Line_15 $$ if (best < count)[ FD ]
Line_16 $$ count = 0-->Line_15 $$ best = count[ FD ]
