Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ int h[] = new int[n][ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_6 $$ String str[] = br.readLine().split(" ")[ CD ]
Line_6 $$ String str[] = br.readLine().split(" ")-->Line_6 $$ String str[] = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String str[] = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ h[i] = Integer.parseInt(str[i])[ CD ]
Line_8 $$ h[i] = Integer.parseInt(str[i])-->Line_8 $$ h[i] = Integer.parseInt(str[i])[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_10 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_11 $$ int j = 0[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ while (j < n - 1 && h[j] >= h[j + 1]) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ while (j < n - 1 && h[j] >= h[j + 1]) -->Line_14 $$ j++[ CD ]
Line_11 $$ int j = 0-->Line_14 $$ j++[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_16 $$ ans = Math.max(ans, j - i)[ CD ]
Line_16 $$ ans = Math.max(ans, j - i)-->Line_16 $$ ans = Math.max(ans, j - i)[ FD ]
Line_10 $$ int ans = 0-->Line_16 $$ ans = Math.max(ans, j - i)[ FD ]
Line_16 $$ ans = Math.max(ans, j - i)-->Line_16 $$ ans = Math.max(ans, j - i)[ CD ]
Line_16 $$ ans = Math.max(ans, j - i)-->Line_16 $$ ans = Math.max(ans, j - i)[ FD ]
Line_10 $$ int ans = 0-->Line_16 $$ ans = Math.max(ans, j - i)[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_17 $$ if (i == j) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_17 $$ if (i == j) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_17 $$ if (i == j) [ FD ]
Line_11 $$ int j = 0-->Line_17 $$ if (i == j) [ FD ]
Line_17 $$ if (i == j) -->Line_18 $$ j++[ CD ]
Line_11 $$ int j = 0-->Line_18 $$ j++[ FD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_21 $$ System.out.println(ans)[ CD ]
Line_16 $$ ans = Math.max(ans, j - i)-->Line_21 $$ System.out.println(ans)[ FD ]
Line_10 $$ int ans = 0-->Line_21 $$ System.out.println(ans)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ ans = Math.max(ans, j - i)-->Line_16 $$ ans = Math.max(ans, j - i)[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_17 $$ if (i == j) [ FD ]
