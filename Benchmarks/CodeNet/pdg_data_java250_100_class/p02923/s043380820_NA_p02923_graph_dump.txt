Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] a = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ a[i] = sc.nextInt()[ CD ]
Line_8 $$ a[i] = sc.nextInt()-->Line_8 $$ a[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ a[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int t = a[n - 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int max = 0, cnt = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ CD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_13 $$ if (t <= a[i]) [ CD ]
Line_10 $$ int t = a[n - 1]-->Line_13 $$ if (t <= a[i]) [ FD ]
Line_13 $$ if (t <= a[i]) -->Line_14 $$ cnt++[ CD ]
Line_11 $$ int max = 0, cnt = 0-->Line_14 $$ cnt++[ FD ]
Line_13 $$ if (t <= a[i]) -->Line_15 $$ max = Math.max(max, cnt)[ CD ]
Line_15 $$ max = Math.max(max, cnt)-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
Line_11 $$ int max = 0, cnt = 0-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
Line_15 $$ max = Math.max(max, cnt)-->Line_15 $$ max = Math.max(max, cnt)[ CD ]
Line_15 $$ max = Math.max(max, cnt)-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
Line_11 $$ int max = 0, cnt = 0-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
Line_11 $$ int max = 0, cnt = 0-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
Line_13 $$ if (t <= a[i]) -->Line_17 $$ cnt = 0[ CD ]
Line_17 $$ cnt = 0-->Line_17 $$ cnt = 0[ FD ]
Line_11 $$ int max = 0, cnt = 0-->Line_17 $$ cnt = 0[ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_19 $$ t = a[i][ CD ]
Line_19 $$ t = a[i]-->Line_19 $$ t = a[i][ FD ]
Line_10 $$ int t = a[n - 1]-->Line_19 $$ t = a[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(max)[ CD ]
Line_15 $$ max = Math.max(max, cnt)-->Line_21 $$ System.out.println(max)[ FD ]
Line_11 $$ int max = 0, cnt = 0-->Line_21 $$ System.out.println(max)[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 2; i >= 0; i--) -->Line_12 $$ for (int i = n - 2; i >= 0; i--) [ FD ]
Line_19 $$ t = a[i]-->Line_13 $$ if (t <= a[i]) [ FD ]
Line_17 $$ cnt = 0-->Line_14 $$ cnt++[ FD ]
Line_15 $$ max = Math.max(max, cnt)-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
Line_17 $$ cnt = 0-->Line_15 $$ max = Math.max(max, cnt)[ FD ]
