Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] H = new long[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ H[i] = sc.nextLong()[ CD ]
Line_7 $$ H[i] = sc.nextLong()-->Line_7 $$ H[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ H[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int gMax = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int lMax = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ CD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_12 $$ if (H[i] <= H[i - 1]) [ CD ]
Line_12 $$ if (H[i] <= H[i - 1]) -->Line_13 $$ lMax++[ CD ]
Line_10 $$ int lMax = 0-->Line_13 $$ lMax++[ FD ]
Line_12 $$ if (H[i] <= H[i - 1]) -->Line_14 $$ gMax = Math.max(gMax, lMax)[ CD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_9 $$ int gMax = 0-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_14 $$ gMax = Math.max(gMax, lMax)[ CD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_9 $$ int gMax = 0-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_10 $$ int lMax = 0-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_12 $$ if (H[i] <= H[i - 1]) -->Line_16 $$ lMax = 0[ CD ]
Line_16 $$ lMax = 0-->Line_16 $$ lMax = 0[ FD ]
Line_10 $$ int lMax = 0-->Line_16 $$ lMax = 0[ FD ]
Line_12 $$ if (H[i] <= H[i - 1]) -->Line_17 $$ gMax = Math.max(gMax, lMax)[ CD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_17 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_9 $$ int gMax = 0-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_17 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ CD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_17 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_9 $$ int gMax = 0-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_16 $$ lMax = 0-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_10 $$ int lMax = 0-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(gMax)[ CD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_20 $$ System.out.println(gMax)[ FD ]
Line_17 $$ gMax = Math.max(gMax, lMax)-->Line_20 $$ System.out.println(gMax)[ FD ]
Line_9 $$ int gMax = 0-->Line_20 $$ System.out.println(gMax)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_11 $$ for (int i = 1; i < N; i++) -->Line_11 $$ for (int i = 1; i < N; i++) [ FD ]
Line_16 $$ lMax = 0-->Line_13 $$ lMax++[ FD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_17 $$ gMax = Math.max(gMax, lMax)-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_16 $$ lMax = 0-->Line_14 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_14 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_17 $$ gMax = Math.max(gMax, lMax)-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
Line_16 $$ lMax = 0-->Line_17 $$ gMax = Math.max(gMax, lMax)[ FD ]
