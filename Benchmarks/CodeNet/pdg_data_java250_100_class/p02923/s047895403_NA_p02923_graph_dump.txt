Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long[] H = new long[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ H[i] = sc.nextLong()[ CD ]
Line_7 $$ H[i] = sc.nextLong()-->Line_7 $$ H[i] = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ H[i] = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int right = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int left = 0; left < N; left++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_12 $$ for (int left = 0; left < N; left++) [ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ CD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ CD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_13 $$ while (right < N - 1 && H[right] >= H[right + 1]) [ CD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ CD ]
Line_13 $$ while (right < N - 1 && H[right] >= H[right + 1]) -->Line_14 $$ right++[ CD ]
Line_11 $$ int right = 0-->Line_14 $$ right++[ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_16 $$ ans = Math.max(ans, right - left)[ CD ]
Line_16 $$ ans = Math.max(ans, right - left)-->Line_16 $$ ans = Math.max(ans, right - left)[ FD ]
Line_10 $$ int ans = 0-->Line_16 $$ ans = Math.max(ans, right - left)[ FD ]
Line_16 $$ ans = Math.max(ans, right - left)-->Line_16 $$ ans = Math.max(ans, right - left)[ CD ]
Line_16 $$ ans = Math.max(ans, right - left)-->Line_16 $$ ans = Math.max(ans, right - left)[ FD ]
Line_10 $$ int ans = 0-->Line_16 $$ ans = Math.max(ans, right - left)[ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_17 $$ if (left == right) [ CD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_17 $$ if (left == right) [ FD ]
Line_11 $$ int right = 0-->Line_17 $$ if (left == right) [ FD ]
Line_17 $$ if (left == right) -->Line_18 $$ right++[ CD ]
Line_11 $$ int right = 0-->Line_18 $$ right++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(ans)[ CD ]
Line_16 $$ ans = Math.max(ans, right - left)-->Line_21 $$ System.out.println(ans)[ FD ]
Line_10 $$ int ans = 0-->Line_21 $$ System.out.println(ans)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_12 $$ for (int left = 0; left < N; left++) [ FD ]
Line_16 $$ ans = Math.max(ans, right - left)-->Line_16 $$ ans = Math.max(ans, right - left)[ FD ]
Line_12 $$ for (int left = 0; left < N; left++) -->Line_17 $$ if (left == right) [ FD ]
