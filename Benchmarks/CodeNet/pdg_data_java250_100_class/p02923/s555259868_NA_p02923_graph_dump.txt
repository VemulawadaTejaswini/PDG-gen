Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] arr = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ CD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ CD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ arr[i] = sc.nextInt()[ CD ]
Line_6 $$ arr[i] = sc.nextInt()-->Line_6 $$ arr[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ arr[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int cur = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ FD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ CD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ CD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ FD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_10 $$ if (arr[i] >= arr[i + 1]) [ CD ]
Line_10 $$ if (arr[i] >= arr[i + 1]) -->Line_11 $$ cur++[ CD ]
Line_8 $$ int cur = 0-->Line_11 $$ cur++[ FD ]
Line_10 $$ if (arr[i] >= arr[i + 1]) -->Line_13 $$ cur = 0[ CD ]
Line_13 $$ cur = 0-->Line_13 $$ cur = 0[ FD ]
Line_8 $$ int cur = 0-->Line_13 $$ cur = 0[ FD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_15 $$ max = Math.max(max, cur)[ CD ]
Line_15 $$ max = Math.max(max, cur)-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_7 $$ int max = 0-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_15 $$ max = Math.max(max, cur)-->Line_15 $$ max = Math.max(max, cur)[ CD ]
Line_15 $$ max = Math.max(max, cur)-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_7 $$ int max = 0-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_13 $$ cur = 0-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_8 $$ int cur = 0-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(max)[ CD ]
Line_15 $$ max = Math.max(max, cur)-->Line_17 $$ System.out.println(max)[ FD ]
Line_7 $$ int max = 0-->Line_17 $$ System.out.println(max)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()-->Line_6 $$ for (int i = 0; i < N; i++) arr[i] = sc.nextInt()[ FD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ FD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ FD ]
Line_9 $$ for (int i = N - 2; i >= 0; i--) -->Line_9 $$ for (int i = N - 2; i >= 0; i--) [ FD ]
Line_13 $$ cur = 0-->Line_11 $$ cur++[ FD ]
Line_15 $$ max = Math.max(max, cur)-->Line_15 $$ max = Math.max(max, cur)[ FD ]
Line_13 $$ cur = 0-->Line_15 $$ max = Math.max(max, cur)[ FD ]
