Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_6 $$ int n = sc.nextInt()-->Line_6 $$ int n = sc.nextInt()[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_6 $$ int n = sc.nextInt()[ FD ]
Line_8 $$ int cur = -1-->Line_8 $$ int cur = -1[ CD ]
Line_6 $$ int n = sc.nextInt()-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ int h = sc.nextInt()[ CD ]
Line_11 $$ int h = sc.nextInt()-->Line_11 $$ int h = sc.nextInt()[ CD ]
Line_5 $$ Scanner sc = new Scanner(in)-->Line_11 $$ int h = sc.nextInt()[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_12 $$ if (h <= last) [ CD ]
Line_11 $$ int h = sc.nextInt()-->Line_12 $$ if (h <= last) [ FD ]
Line_9 $$ int last = Integer.MAX_VALUE-->Line_12 $$ if (h <= last) [ FD ]
Line_12 $$ if (h <= last) -->Line_13 $$ cur++[ CD ]
Line_8 $$ int cur = -1-->Line_13 $$ cur++[ FD ]
Line_12 $$ if (h <= last) -->Line_14 $$ max = Math.max(max, cur)[ CD ]
Line_14 $$ max = Math.max(max, cur)-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_7 $$ int max = 0-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_14 $$ max = Math.max(max, cur)-->Line_14 $$ max = Math.max(max, cur)[ CD ]
Line_14 $$ max = Math.max(max, cur)-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_7 $$ int max = 0-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_8 $$ int cur = -1-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_12 $$ if (h <= last) -->Line_16 $$ cur = 0[ CD ]
Line_16 $$ cur = 0-->Line_16 $$ cur = 0[ FD ]
Line_8 $$ int cur = -1-->Line_16 $$ cur = 0[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_18 $$ last = h[ CD ]
Line_18 $$ last = h-->Line_18 $$ last = h[ FD ]
Line_9 $$ int last = Integer.MAX_VALUE-->Line_18 $$ last = h[ FD ]
Line_11 $$ int h = sc.nextInt()-->Line_18 $$ last = h[ FD ]
Line_3 $$ try (BufferedInputStream in = new BufferedInputStream(System.in);-->Line_20 $$ out.println(max)[ FD ]
Line_14 $$ max = Math.max(max, cur)-->Line_20 $$ out.println(max)[ FD ]
Line_7 $$ int max = 0-->Line_20 $$ out.println(max)[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ int h = sc.nextInt()-->Line_12 $$ if (h <= last) [ FD ]
Line_18 $$ last = h-->Line_12 $$ if (h <= last) [ FD ]
Line_16 $$ cur = 0-->Line_13 $$ cur++[ FD ]
Line_14 $$ max = Math.max(max, cur)-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_16 $$ cur = 0-->Line_14 $$ max = Math.max(max, cur)[ FD ]
Line_11 $$ int h = sc.nextInt()-->Line_18 $$ last = h[ FD ]
