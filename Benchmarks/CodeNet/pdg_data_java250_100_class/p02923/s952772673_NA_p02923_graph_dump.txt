Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String srgs[]) [ CD ]
Line_2 $$ public static void main(String srgs[]) -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_5 $$ int N = Integer.parseInt(reader.readLine())-->Line_5 $$ int N = Integer.parseInt(reader.readLine())[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int N = Integer.parseInt(reader.readLine())[ FD ]
Line_6 $$ String[] str = reader.readLine().split(" ")-->Line_6 $$ String[] str = reader.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String[] str = reader.readLine().split(" ")[ FD ]
Line_8 $$ H[0] = Integer.parseInt(str[0])-->Line_8 $$ H[0] = Integer.parseInt(str[0])[ CD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_12 $$ for (int i = 1; i < N + 1; i++) [ CD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_12 $$ for (int i = 1; i < N + 1; i++) [ CD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_12 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_13 $$ if (i == N) [ CD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_13 $$ if (i == N) [ FD ]
Line_5 $$ int N = Integer.parseInt(reader.readLine())-->Line_13 $$ if (i == N) [ FD ]
Line_13 $$ if (i == N) -->Line_14 $$ H[i] = H[i - 1] + 1[ CD ]
Line_13 $$ if (i == N) -->Line_16 $$ H[i] = Integer.parseInt(str[i])[ CD ]
Line_16 $$ H[i] = Integer.parseInt(str[i])-->Line_16 $$ H[i] = Integer.parseInt(str[i])[ CD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_18 $$ if (H[i] > H[i - 1]) [ CD ]
Line_18 $$ if (H[i] > H[i - 1]) -->Line_19 $$ tmpcount = i - j - 1[ CD ]
Line_19 $$ tmpcount = i - j - 1-->Line_19 $$ tmpcount = i - j - 1[ FD ]
Line_10 $$ int tmpcount = 0-->Line_19 $$ tmpcount = i - j - 1[ FD ]
Line_18 $$ if (H[i] > H[i - 1]) -->Line_20 $$ if (tmpcount > maxcount) [ CD ]
Line_19 $$ tmpcount = i - j - 1-->Line_20 $$ if (tmpcount > maxcount) [ FD ]
Line_10 $$ int tmpcount = 0-->Line_20 $$ if (tmpcount > maxcount) [ FD ]
Line_11 $$ int maxcount = 0-->Line_20 $$ if (tmpcount > maxcount) [ FD ]
Line_20 $$ if (tmpcount > maxcount) -->Line_21 $$ maxcount = tmpcount[ CD ]
Line_21 $$ maxcount = tmpcount-->Line_21 $$ maxcount = tmpcount[ FD ]
Line_11 $$ int maxcount = 0-->Line_21 $$ maxcount = tmpcount[ FD ]
Line_19 $$ tmpcount = i - j - 1-->Line_21 $$ maxcount = tmpcount[ FD ]
Line_10 $$ int tmpcount = 0-->Line_21 $$ maxcount = tmpcount[ FD ]
Line_18 $$ if (H[i] > H[i - 1]) -->Line_23 $$ j = i[ CD ]
Line_23 $$ j = i-->Line_23 $$ j = i[ FD ]
Line_9 $$ int j = 0-->Line_23 $$ j = i[ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_23 $$ j = i[ FD ]
Line_21 $$ maxcount = tmpcount-->Line_26 $$ System.out.println(maxcount)[ FD ]
Line_11 $$ int maxcount = 0-->Line_26 $$ System.out.println(maxcount)[ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_12 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_12 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_12 $$ for (int i = 1; i < N + 1; i++) [ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_13 $$ if (i == N) [ FD ]
Line_19 $$ tmpcount = i - j - 1-->Line_20 $$ if (tmpcount > maxcount) [ FD ]
Line_21 $$ maxcount = tmpcount-->Line_20 $$ if (tmpcount > maxcount) [ FD ]
Line_19 $$ tmpcount = i - j - 1-->Line_21 $$ maxcount = tmpcount[ FD ]
Line_12 $$ for (int i = 1; i < N + 1; i++) -->Line_23 $$ j = i[ FD ]
