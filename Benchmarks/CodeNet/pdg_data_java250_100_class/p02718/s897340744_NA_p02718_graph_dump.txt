Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int M = sc.nextInt()[ CD ]
Line_5 $$ int M = sc.nextInt()-->Line_5 $$ int M = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int M = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double sum = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ PriorityQueue<Integer> pq = new PriorityQueue(Collections.reverseOrder())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ int Ai = sc.nextInt()[ CD ]
Line_9 $$ int Ai = sc.nextInt()-->Line_9 $$ int Ai = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ int Ai = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_10 $$ sum += Ai[ CD ]
Line_10 $$ sum += Ai-->Line_10 $$ sum += Ai[ FD ]
Line_6 $$ double sum = 0-->Line_10 $$ sum += Ai[ FD ]
Line_9 $$ int Ai = sc.nextInt()-->Line_10 $$ sum += Ai[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_11 $$ pq.add(Ai)[ CD ]
Line_7 $$ PriorityQueue<Integer> pq = new PriorityQueue(Collections.reverseOrder())-->Line_11 $$ pq.add(Ai)[ FD ]
Line_9 $$ int Ai = sc.nextInt()-->Line_11 $$ pq.add(Ai)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ double threshold = sum / (4 * M)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ boolean result = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ for (int i = 0; i < M; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
Line_5 $$ int M = sc.nextInt()-->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ CD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ CD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_16 $$ if (pq.poll() < threshold) [ CD ]
Line_13 $$ double threshold = sum / (4 * M)-->Line_16 $$ if (pq.poll() < threshold) [ FD ]
Line_7 $$ PriorityQueue<Integer> pq = new PriorityQueue(Collections.reverseOrder())-->Line_16 $$ if (pq.poll() < threshold) [ FD ]
Line_16 $$ if (pq.poll() < threshold) -->Line_17 $$ result = false[ CD ]
Line_17 $$ result = false-->Line_17 $$ result = false[ FD ]
Line_14 $$ boolean result = true-->Line_17 $$ result = false[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(result ? "Yes" : "No")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_22 $$ sc.close()[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ int Ai = sc.nextInt()-->Line_10 $$ sum += Ai[ FD ]
Line_9 $$ int Ai = sc.nextInt()-->Line_11 $$ pq.add(Ai)[ FD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
Line_15 $$ for (int i = 0; i < M; i++) -->Line_15 $$ for (int i = 0; i < M; i++) [ FD ]
