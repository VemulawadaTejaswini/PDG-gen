Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader((System.in)))[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader((System.in)))-->Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_5 $$ int n = Integer.parseInt(st.nextToken())[ CD ]
Line_5 $$ int n = Integer.parseInt(st.nextToken())-->Line_5 $$ int n = Integer.parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_5 $$ int n = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_6 $$ int m = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ int m = Integer.parseInt(st.nextToken())-->Line_6 $$ int m = Integer.parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_6 $$ int m = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_7 $$ st = new StringTokenizer(br.readLine())[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_7 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_7 $$ st = new StringTokenizer(br.readLine())-->Line_7 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader((System.in)))-->Line_7 $$ st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_8 $$ int total = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_9 $$ int[] votes = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_2 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_5 $$ int n = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ votes[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_11 $$ votes[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ votes[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_4 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_11 $$ votes[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_7 $$ st = new StringTokenizer(br.readLine())-->Line_11 $$ votes[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_12 $$ total += votes[i][ CD ]
Line_12 $$ total += votes[i]-->Line_12 $$ total += votes[i][ FD ]
Line_8 $$ int total = 0-->Line_12 $$ total += votes[i][ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_14 $$ int necessaryVotes = (int) Math.ceil(1.0 * total / (4 * m))[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_15 $$ int canPrint = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_2 $$ public static void main(String[] args) throws java.lang.Exception [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_5 $$ int n = Integer.parseInt(st.nextToken())-->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_17 $$ if (votes[i] >= necessaryVotes)[ CD ]
Line_14 $$ int necessaryVotes = (int) Math.ceil(1.0 * total / (4 * m))-->Line_17 $$ if (votes[i] >= necessaryVotes)[ FD ]
Line_17 $$ if (votes[i] >= necessaryVotes)-->Line_17 $$ canPrint++[ CD ]
Line_15 $$ int canPrint = 0-->Line_17 $$ canPrint++[ FD ]
Line_2 $$ public static void main(String[] args) throws java.lang.Exception -->Line_19 $$ System.out.println(canPrint >= m ? "Yes" : "No")[ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
