Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String[] f = br.readLine().split(" ")[ CD ]
Line_4 $$ String[] f = br.readLine().split(" ")-->Line_4 $$ String[] f = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String[] f = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int n = Integer.parseInt(f[0])[ CD ]
Line_5 $$ int n = Integer.parseInt(f[0])-->Line_5 $$ int n = Integer.parseInt(f[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int m = Integer.parseInt(f[1])[ CD ]
Line_6 $$ int m = Integer.parseInt(f[1])-->Line_6 $$ int m = Integer.parseInt(f[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int l = Integer.parseInt(f[2])[ CD ]
Line_7 $$ int l = Integer.parseInt(f[2])-->Line_7 $$ int l = Integer.parseInt(f[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ String[][] As = new String[n][m][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ String[][] Bs = new String[m][l][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ int[][] Ai = new int[n][m][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ int[][] Bi = new int[m][l][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_5 $$ int n = Integer.parseInt(f[0])-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ FD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ CD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ CD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ FD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ As[ni] = br.readLine().split(" ")[ CD ]
Line_12 $$ As[ni] = br.readLine().split(" ")-->Line_12 $$ As[ni] = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ As[ni] = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_6 $$ int m = Integer.parseInt(f[1])-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ FD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ CD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ CD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ FD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ Bs[mi] = br.readLine().split(" ")[ CD ]
Line_13 $$ Bs[mi] = br.readLine().split(" ")-->Line_13 $$ Bs[mi] = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ Bs[mi] = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_5 $$ int n = Integer.parseInt(f[0])-->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ CD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ CD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_16 $$ for (int li = 0; li < l; li++) [ CD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ CD ]
Line_7 $$ int l = Integer.parseInt(f[2])-->Line_16 $$ for (int li = 0; li < l; li++) [ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ CD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ CD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_17 $$ long b = 0[ CD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ CD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ CD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
Line_6 $$ int m = Integer.parseInt(f[1])-->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ CD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ CD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_19 $$ if (Ai[ni][mi] == 0)[ CD ]
Line_19 $$ if (Ai[ni][mi] == 0)-->Line_19 $$ Ai[ni][mi] = Integer.parseInt(As[ni][mi])[ CD ]
Line_19 $$ Ai[ni][mi] = Integer.parseInt(As[ni][mi])-->Line_19 $$ Ai[ni][mi] = Integer.parseInt(As[ni][mi])[ CD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_20 $$ if (Bi[mi][li] == 0)[ CD ]
Line_20 $$ if (Bi[mi][li] == 0)-->Line_20 $$ Bi[mi][li] = Integer.parseInt(Bs[mi][li])[ CD ]
Line_20 $$ Bi[mi][li] = Integer.parseInt(Bs[mi][li])-->Line_20 $$ Bi[mi][li] = Integer.parseInt(Bs[mi][li])[ CD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_21 $$ b += Ai[ni][mi] * Bi[mi][li][ CD ]
Line_21 $$ b += Ai[ni][mi] * Bi[mi][li]-->Line_21 $$ b += Ai[ni][mi] * Bi[mi][li][ FD ]
Line_17 $$ long b = 0-->Line_21 $$ b += Ai[ni][mi] * Bi[mi][li][ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_23 $$ sb.append(b)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append(b)[ FD ]
Line_21 $$ b += Ai[ni][mi] * Bi[mi][li]-->Line_23 $$ sb.append(b)[ FD ]
Line_17 $$ long b = 0-->Line_23 $$ sb.append(b)[ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_24 $$ if (li != l - 1)[ CD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_24 $$ if (li != l - 1)[ FD ]
Line_24 $$ if (li != l - 1)-->Line_24 $$ sb.append(" ")[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(" ")[ FD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_26 $$ sb.append("\n")[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ sb.append("\n")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_28 $$ System.out.print(sb)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ System.out.print(sb)[ FD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ FD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ FD ]
Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")-->Line_12 $$ for (int ni = 0; ni < n; ni++) As[ni] = br.readLine().split(" ")[ FD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ FD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ FD ]
Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")-->Line_13 $$ for (int mi = 0; mi < m; mi++) Bs[mi] = br.readLine().split(" ")[ FD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_15 $$ for (int ni = 0; ni < n; ni++) -->Line_15 $$ for (int ni = 0; ni < n; ni++) [ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_16 $$ for (int li = 0; li < l; li++) [ FD ]
Line_17 $$ long b = 0-->Line_23 $$ sb.append(b)[ FD ]
Line_16 $$ for (int li = 0; li < l; li++) -->Line_24 $$ if (li != l - 1)[ FD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
Line_18 $$ for (int mi = 0; mi < m; mi++) -->Line_18 $$ for (int mi = 0; mi < m; mi++) [ FD ]
