Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] strargs = new String[3][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ long[][] A = null[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ long[][] B = null[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ long[][] C = null[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ strargs = br.readLine().split("\\s+")[ CD ]
Line_5 $$ String[] strargs = new String[3]-->Line_9 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_9 $$ strargs = br.readLine().split("\\s+")-->Line_9 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_9 $$ strargs = br.readLine().split("\\s+")-->Line_9 $$ strargs = br.readLine().split("\\s+")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ int n = Integer.parseInt(strargs[0])[ CD ]
Line_10 $$ int n = Integer.parseInt(strargs[0])-->Line_10 $$ int n = Integer.parseInt(strargs[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ int m = Integer.parseInt(strargs[1])[ CD ]
Line_11 $$ int m = Integer.parseInt(strargs[1])-->Line_11 $$ int m = Integer.parseInt(strargs[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ int l = Integer.parseInt(strargs[2])[ CD ]
Line_12 $$ int l = Integer.parseInt(strargs[2])-->Line_12 $$ int l = Integer.parseInt(strargs[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) [ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_14 $$ A = new long[n][m][ CD ]
Line_6 $$ long[][] A = null-->Line_14 $$ A = new long[n][m][ FD ]
Line_14 $$ A = new long[n][m]-->Line_14 $$ A = new long[n][m][ FD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_15 $$ B = new long[m][l][ CD ]
Line_7 $$ long[][] B = null-->Line_15 $$ B = new long[m][l][ FD ]
Line_15 $$ B = new long[m][l]-->Line_15 $$ B = new long[m][l][ FD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_16 $$ C = new long[n][l][ CD ]
Line_8 $$ long[][] C = null-->Line_16 $$ C = new long[n][l][ FD ]
Line_16 $$ C = new long[n][l]-->Line_16 $$ C = new long[n][l][ FD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_17 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) [ CD ]
Line_10 $$ int n = Integer.parseInt(strargs[0])-->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ CD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ CD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_18 $$ strargs = br.readLine().split("\\s+")[ CD ]
Line_18 $$ strargs = br.readLine().split("\\s+")-->Line_18 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_5 $$ String[] strargs = new String[3]-->Line_18 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_9 $$ strargs = br.readLine().split("\\s+")-->Line_18 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_18 $$ strargs = br.readLine().split("\\s+")-->Line_18 $$ strargs = br.readLine().split("\\s+")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_18 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ int m = Integer.parseInt(strargs[1])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ A[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_19 $$ A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ A[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_21 $$ for (int i = 0; i < m; i++) [ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) [ CD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_11 $$ int m = Integer.parseInt(strargs[1])-->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ CD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ CD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_22 $$ strargs = br.readLine().split("\\s+")[ CD ]
Line_22 $$ strargs = br.readLine().split("\\s+")-->Line_22 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_18 $$ strargs = br.readLine().split("\\s+")-->Line_22 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_5 $$ String[] strargs = new String[3]-->Line_22 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_9 $$ strargs = br.readLine().split("\\s+")-->Line_22 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_22 $$ strargs = br.readLine().split("\\s+")-->Line_22 $$ strargs = br.readLine().split("\\s+")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_22 $$ strargs = br.readLine().split("\\s+")[ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ CD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_12 $$ int l = Integer.parseInt(strargs[2])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ B[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_23 $$ B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ B[i][j] = Long.parseLong(strargs[j])[ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_25 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) [ CD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ int n = Integer.parseInt(strargs[0])-->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ CD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ CD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_26 $$ for (int j = 0; j < l; j++) [ CD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ CD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_12 $$ int l = Integer.parseInt(strargs[2])-->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ CD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ CD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_27 $$ for (int k = 0; k < m; k++) [ CD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ CD ]
Line_11 $$ int m = Integer.parseInt(strargs[1])-->Line_27 $$ for (int k = 0; k < m; k++) [ FD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_27 $$ for (int k = 0; k < m; k++) [ CD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_27 $$ for (int k = 0; k < m; k++) [ CD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_27 $$ for (int k = 0; k < m; k++) [ FD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_28 $$ C[i][j] += A[i][k] * B[k][j][ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_32 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) [ CD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ int n = Integer.parseInt(strargs[0])-->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ CD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ CD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_33 $$ for (int j = 0; j < l; j++) [ CD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ CD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_12 $$ int l = Integer.parseInt(strargs[2])-->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ CD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ CD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_34 $$ sb.append(C[i][j])[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_34 $$ sb.append(C[i][j])[ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_35 $$ if (j != (l - 1))[ CD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_35 $$ if (j != (l - 1))[ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_35 $$ if (j != (l - 1))[ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_35 $$ if (j != (l - 1))[ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_35 $$ if (j != (l - 1))[ FD ]
Line_35 $$ if (j != (l - 1))-->Line_35 $$ sb.append(" ")[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_35 $$ sb.append(" ")[ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_37 $$ if (i != (n - 1))[ CD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_37 $$ if (i != (n - 1))[ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_37 $$ if (i != (n - 1))[ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_37 $$ if (i != (n - 1))[ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_37 $$ if (i != (n - 1))[ FD ]
Line_37 $$ if (i != (n - 1))-->Line_37 $$ sb.append("\n")[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_37 $$ sb.append("\n")[ FD ]
Line_13 $$ if ((1 <= n && n <= 100) && (1 <= m && m <= 100) && (1 <= l && l <= 100)) -->Line_39 $$ System.out.println(sb)[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_39 $$ System.out.println(sb)[ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 0; i < n; i++) [ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])-->Line_19 $$ for (int j = 0; j < m; j++) A[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_21 $$ for (int i = 0; i < m; i++) -->Line_21 $$ for (int i = 0; i < m; i++) [ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])-->Line_23 $$ for (int j = 0; j < l; j++) B[i][j] = Long.parseLong(strargs[j])[ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_25 $$ for (int i = 0; i < n; i++) -->Line_25 $$ for (int i = 0; i < n; i++) [ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_26 $$ for (int j = 0; j < l; j++) -->Line_26 $$ for (int j = 0; j < l; j++) [ FD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_27 $$ for (int k = 0; k < m; k++) [ FD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_27 $$ for (int k = 0; k < m; k++) [ FD ]
Line_27 $$ for (int k = 0; k < m; k++) -->Line_27 $$ for (int k = 0; k < m; k++) [ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_32 $$ for (int i = 0; i < n; i++) [ FD ]
Line_32 $$ for (int i = 0; i < n; i++) -->Line_37 $$ if (i != (n - 1))[ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_33 $$ for (int j = 0; j < l; j++) [ FD ]
Line_33 $$ for (int j = 0; j < l; j++) -->Line_35 $$ if (j != (l - 1))[ FD ]
