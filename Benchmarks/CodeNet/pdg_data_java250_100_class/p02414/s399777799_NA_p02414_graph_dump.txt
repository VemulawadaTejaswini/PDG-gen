Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String buffer[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int m = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int n = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int l = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int[][] matrix1 = null[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int[][] matrix2 = null[ CD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_12 $$ while ((buffer = reader.readLine()) != null) [ FD ]
Line_4 $$ String buffer-->Line_12 $$ while ((buffer = reader.readLine()) != null) [ FD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_12 $$ while ((buffer = reader.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ while ((buffer = reader.readLine()) != null) [ FD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_13 $$ String[] input = buffer.split(" ")[ CD ]
Line_13 $$ String[] input = buffer.split(" ")-->Line_13 $$ String[] input = buffer.split(" ")[ CD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_13 $$ String[] input = buffer.split(" ")[ FD ]
Line_4 $$ String buffer-->Line_13 $$ String[] input = buffer.split(" ")[ FD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_14 $$ if (count == 0) [ CD ]
Line_5 $$ int count = 0-->Line_14 $$ if (count == 0) [ FD ]
Line_14 $$ if (count == 0) -->Line_15 $$ n = Integer.valueOf(input[0])[ CD ]
Line_15 $$ n = Integer.valueOf(input[0])-->Line_15 $$ n = Integer.valueOf(input[0])[ FD ]
Line_7 $$ int n = 0-->Line_15 $$ n = Integer.valueOf(input[0])[ FD ]
Line_15 $$ n = Integer.valueOf(input[0])-->Line_15 $$ n = Integer.valueOf(input[0])[ CD ]
Line_14 $$ if (count == 0) -->Line_16 $$ m = Integer.valueOf(input[1])[ CD ]
Line_16 $$ m = Integer.valueOf(input[1])-->Line_16 $$ m = Integer.valueOf(input[1])[ FD ]
Line_6 $$ int m = 0-->Line_16 $$ m = Integer.valueOf(input[1])[ FD ]
Line_16 $$ m = Integer.valueOf(input[1])-->Line_16 $$ m = Integer.valueOf(input[1])[ CD ]
Line_14 $$ if (count == 0) -->Line_17 $$ l = Integer.valueOf(input[2])[ CD ]
Line_17 $$ l = Integer.valueOf(input[2])-->Line_17 $$ l = Integer.valueOf(input[2])[ FD ]
Line_8 $$ int l = 0-->Line_17 $$ l = Integer.valueOf(input[2])[ FD ]
Line_17 $$ l = Integer.valueOf(input[2])-->Line_17 $$ l = Integer.valueOf(input[2])[ CD ]
Line_14 $$ if (count == 0) -->Line_18 $$ matrix1 = new int[n][m][ CD ]
Line_18 $$ matrix1 = new int[n][m]-->Line_18 $$ matrix1 = new int[n][m][ FD ]
Line_9 $$ int[][] matrix1 = null-->Line_18 $$ matrix1 = new int[n][m][ FD ]
Line_14 $$ if (count == 0) -->Line_19 $$ matrix2 = new int[m][l][ CD ]
Line_19 $$ matrix2 = new int[m][l]-->Line_19 $$ matrix2 = new int[m][l][ FD ]
Line_10 $$ int[][] matrix2 = null-->Line_19 $$ matrix2 = new int[m][l][ FD ]
Line_14 $$ if (count == 0) -->Line_21 $$ if (count <= n) [ CD ]
Line_5 $$ int count = 0-->Line_21 $$ if (count <= n) [ FD ]
Line_15 $$ n = Integer.valueOf(input[0])-->Line_21 $$ if (count <= n) [ FD ]
Line_7 $$ int n = 0-->Line_21 $$ if (count <= n) [ FD ]
Line_21 $$ if (count <= n) -->Line_22 $$ for (int i = 0; i < m; i++) [ CD ]
Line_21 $$ if (count <= n) -->Line_21 $$ if (count <= n) [ CD ]
Line_16 $$ m = Integer.valueOf(input[1])-->Line_22 $$ for (int i = 0; i < m; i++) [ FD ]
Line_6 $$ int m = 0-->Line_22 $$ for (int i = 0; i < m; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_22 $$ for (int i = 0; i < m; i++) [ CD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_22 $$ for (int i = 0; i < m; i++) [ CD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_22 $$ for (int i = 0; i < m; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_23 $$ matrix1[count - 1][i] = Integer.valueOf(input[i])[ CD ]
Line_23 $$ matrix1[count - 1][i] = Integer.valueOf(input[i])-->Line_23 $$ matrix1[count - 1][i] = Integer.valueOf(input[i])[ CD ]
Line_21 $$ if (count <= n) -->Line_26 $$ if (count <= n + m) [ CD ]
Line_5 $$ int count = 0-->Line_26 $$ if (count <= n + m) [ FD ]
Line_26 $$ if (count <= n + m) -->Line_27 $$ for (int i = 0; i < l; i++) [ CD ]
Line_26 $$ if (count <= n + m) -->Line_26 $$ if (count <= n + m) [ CD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_17 $$ l = Integer.valueOf(input[2])-->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_8 $$ int l = 0-->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ CD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ CD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_28 $$ matrix2[count - 1 - n][i] = Integer.valueOf(input[i])[ CD ]
Line_28 $$ matrix2[count - 1 - n][i] = Integer.valueOf(input[i])-->Line_28 $$ matrix2[count - 1 - n][i] = Integer.valueOf(input[i])[ CD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_31 $$ if (count == n + m) [ CD ]
Line_5 $$ int count = 0-->Line_31 $$ if (count == n + m) [ FD ]
Line_31 $$ if (count == n + m) -->Line_32 $$ for (int h = 0; h < n; h++) [ CD ]
Line_31 $$ if (count == n + m) -->Line_31 $$ if (count == n + m) [ CD ]
Line_15 $$ n = Integer.valueOf(input[0])-->Line_32 $$ for (int h = 0; h < n; h++) [ FD ]
Line_7 $$ int n = 0-->Line_32 $$ for (int h = 0; h < n; h++) [ FD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ CD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ CD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ FD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_33 $$ for (int w = 0; w < l; w++) [ CD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ CD ]
Line_17 $$ l = Integer.valueOf(input[2])-->Line_33 $$ for (int w = 0; w < l; w++) [ FD ]
Line_8 $$ int l = 0-->Line_33 $$ for (int w = 0; w < l; w++) [ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ CD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ CD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_34 $$ long calc = 0[ CD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_35 $$ for (int i = 0; i < m; i++) [ CD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ CD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ m = Integer.valueOf(input[1])-->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_6 $$ int m = 0-->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ CD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ CD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_36 $$ calc += matrix1[h][i] * matrix2[i][w][ CD ]
Line_36 $$ calc += matrix1[h][i] * matrix2[i][w]-->Line_36 $$ calc += matrix1[h][i] * matrix2[i][w][ FD ]
Line_34 $$ long calc = 0-->Line_36 $$ calc += matrix1[h][i] * matrix2[i][w][ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_38 $$ System.out.print(calc)[ CD ]
Line_36 $$ calc += matrix1[h][i] * matrix2[i][w]-->Line_38 $$ System.out.print(calc)[ FD ]
Line_34 $$ long calc = 0-->Line_38 $$ System.out.print(calc)[ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_39 $$ if (w != l - 1) [ CD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_39 $$ if (w != l - 1) [ FD ]
Line_39 $$ if (w != l - 1) -->Line_40 $$ System.out.print(" ")[ CD ]
Line_39 $$ if (w != l - 1) -->Line_43 $$ System.out.println()[ CD ]
Line_31 $$ if (count == n + m) -->Line_47 $$ reader.close()[ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_47 $$ reader.close()[ FD ]
Line_31 $$ if (count == n + m) -->Line_48 $$ return[ CD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_50 $$ count++[ CD ]
Line_5 $$ int count = 0-->Line_50 $$ count++[ FD ]
Line_12 $$ while ((buffer = reader.readLine()) != null) -->Line_13 $$ String[] input = buffer.split(" ")[ FD ]
Line_15 $$ n = Integer.valueOf(input[0])-->Line_21 $$ if (count <= n) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_22 $$ for (int i = 0; i < m; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_22 $$ for (int i = 0; i < m; i++) [ FD ]
Line_22 $$ for (int i = 0; i < m; i++) -->Line_22 $$ for (int i = 0; i < m; i++) [ FD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_27 $$ for (int i = 0; i < l; i++) -->Line_27 $$ for (int i = 0; i < l; i++) [ FD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ FD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ FD ]
Line_32 $$ for (int h = 0; h < n; h++) -->Line_32 $$ for (int h = 0; h < n; h++) [ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_33 $$ for (int w = 0; w < l; w++) [ FD ]
Line_34 $$ long calc = 0-->Line_38 $$ System.out.print(calc)[ FD ]
Line_33 $$ for (int w = 0; w < l; w++) -->Line_39 $$ if (w != l - 1) [ FD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
Line_35 $$ for (int i = 0; i < m; i++) -->Line_35 $$ for (int i = 0; i < m; i++) [ FD ]
