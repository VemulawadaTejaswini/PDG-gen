Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ for (int i = 0; i < 300; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ FD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_5 $$ String line = sc.nextLine()[ CD ]
Line_5 $$ String line = sc.nextLine()-->Line_5 $$ String line = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String line = sc.nextLine()[ FD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_6 $$ String[] l = line.split(" ")[ CD ]
Line_6 $$ String[] l = line.split(" ")-->Line_6 $$ String[] l = line.split(" ")[ CD ]
Line_5 $$ String line = sc.nextLine()-->Line_6 $$ String[] l = line.split(" ")[ FD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_7 $$ int H = Integer.parseInt(l[0])[ CD ]
Line_7 $$ int H = Integer.parseInt(l[0])-->Line_7 $$ int H = Integer.parseInt(l[0])[ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_8 $$ int W = Integer.parseInt(l[1])[ CD ]
Line_8 $$ int W = Integer.parseInt(l[1])-->Line_8 $$ int W = Integer.parseInt(l[1])[ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_9 $$ if (H == 0 && W == 0) [ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_12 $$ for (int h = 0; h < H; h++) [ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ CD ]
Line_7 $$ int H = Integer.parseInt(l[0])-->Line_12 $$ for (int h = 0; h < H; h++) [ FD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ CD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ CD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ FD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_13 $$ for (int w = 0; w < W; w++) [ CD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ CD ]
Line_8 $$ int W = Integer.parseInt(l[1])-->Line_13 $$ for (int w = 0; w < W; w++) [ FD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_13 $$ for (int w = 0; w < W; w++) [ CD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_13 $$ for (int w = 0; w < W; w++) [ CD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_13 $$ for (int w = 0; w < W; w++) [ FD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_14 $$ if (h == 0 || h == H - 1 || w == 0 || w == W - 1) [ CD ]
Line_14 $$ if (h == 0 || h == H - 1 || w == 0 || w == W - 1) -->Line_15 $$ System.out.print("#")[ CD ]
Line_14 $$ if (h == 0 || h == H - 1 || w == 0 || w == W - 1) -->Line_17 $$ System.out.print(".")[ CD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_20 $$ System.out.println()[ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_22 $$ System.out.println()[ CD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ FD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ FD ]
Line_4 $$ for (int i = 0; i < 300; i++) -->Line_4 $$ for (int i = 0; i < 300; i++) [ FD ]
Line_5 $$ String line = sc.nextLine()-->Line_6 $$ String[] l = line.split(" ")[ FD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ FD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ FD ]
Line_12 $$ for (int h = 0; h < H; h++) -->Line_12 $$ for (int h = 0; h < H; h++) [ FD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_13 $$ for (int w = 0; w < W; w++) [ FD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_13 $$ for (int w = 0; w < W; w++) [ FD ]
Line_13 $$ for (int w = 0; w < W; w++) -->Line_13 $$ for (int w = 0; w < W; w++) [ FD ]
