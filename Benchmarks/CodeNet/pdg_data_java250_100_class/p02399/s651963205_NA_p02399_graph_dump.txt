Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int a = scan.nextInt()[ CD ]
Line_4 $$ int a = scan.nextInt()-->Line_4 $$ int a = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int a = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int b = scan.nextInt()[ CD ]
Line_5 $$ int b = scan.nextInt()-->Line_5 $$ int b = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ int b = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int d = a / b[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int r = a % b[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double f = 1.0 * a / b[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ BigDecimal g = new BigDecimal(f)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)[ CD ]
Line_9 $$ BigDecimal g = new BigDecimal(f)-->Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)[ FD ]
Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)-->Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)[ FD ]
Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)-->Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)[ CD ]
Line_9 $$ BigDecimal g = new BigDecimal(f)-->Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)[ FD ]
Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)-->Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ System.out.printf("%d" + " " + "%d" + " " + "%.5f", d, r, g)[ CD ]
Line_6 $$ int d = a / b-->Line_11 $$ System.out.printf("%d" + " " + "%d" + " " + "%.5f", d, r, g)[ FD ]
Line_7 $$ int r = a % b-->Line_11 $$ System.out.printf("%d" + " " + "%d" + " " + "%.5f", d, r, g)[ FD ]
Line_9 $$ BigDecimal g = new BigDecimal(f)-->Line_11 $$ System.out.printf("%d" + " " + "%d" + " " + "%.5f", d, r, g)[ FD ]
Line_10 $$ g = g.setScale(5, BigDecimal.ROUND_HALF_UP)-->Line_11 $$ System.out.printf("%d" + " " + "%d" + " " + "%.5f", d, r, g)[ FD ]
