Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in), 1)[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ String str = ""[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ StringTokenizer st[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ while ((str = br.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_6 $$ while ((str = br.readLine()) != null) [ FD ]
Line_4 $$ String str = ""-->Line_6 $$ while ((str = br.readLine()) != null) [ FD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_6 $$ while ((str = br.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in), 1)-->Line_6 $$ while ((str = br.readLine()) != null) [ FD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_7 $$ st = new StringTokenizer(str, " ")[ CD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_7 $$ st = new StringTokenizer(str, " ")[ FD ]
Line_5 $$ StringTokenizer st-->Line_7 $$ st = new StringTokenizer(str, " ")[ FD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_8 $$ if (st.countTokens() > 2)[ CD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_8 $$ if (st.countTokens() > 2)[ FD ]
Line_5 $$ StringTokenizer st-->Line_8 $$ if (st.countTokens() > 2)[ FD ]
Line_8 $$ if (st.countTokens() > 2)-->Line_9 $$ System.out.println("Only 2 numbers per dataset allowed.")[ CD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_10 $$ int n1[ CD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_11 $$ int n2[ CD ]
Line_10 $$ int n1-->Line_13 $$ n1 = Integer.parseInt(st.nextToken())[ FD ]
Line_13 $$ n1 = Integer.parseInt(st.nextToken())-->Line_13 $$ n1 = Integer.parseInt(st.nextToken())[ FD ]
Line_13 $$ n1 = Integer.parseInt(st.nextToken())-->Line_13 $$ n1 = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_13 $$ n1 = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ StringTokenizer st-->Line_13 $$ n1 = Integer.parseInt(st.nextToken())[ FD ]
Line_11 $$ int n2-->Line_14 $$ n2 = Integer.parseInt(st.nextToken())[ FD ]
Line_14 $$ n2 = Integer.parseInt(st.nextToken())-->Line_14 $$ n2 = Integer.parseInt(st.nextToken())[ FD ]
Line_14 $$ n2 = Integer.parseInt(st.nextToken())-->Line_14 $$ n2 = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_14 $$ n2 = Integer.parseInt(st.nextToken())[ FD ]
Line_5 $$ StringTokenizer st-->Line_14 $$ n2 = Integer.parseInt(st.nextToken())[ FD ]
Line_15 $$ if (n1 < 0 || n2 < 0 || n1 > 1000000 || n2 > 1000000)-->Line_16 $$ System.out.println("Out of range. 0 ??? a, b ??? 1,000,000")[ CD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_17 $$ str = String.valueOf(n1 + n2)[ FD ]
Line_17 $$ str = String.valueOf(n1 + n2)-->Line_17 $$ str = String.valueOf(n1 + n2)[ FD ]
Line_4 $$ String str = ""-->Line_17 $$ str = String.valueOf(n1 + n2)[ FD ]
Line_17 $$ str = String.valueOf(n1 + n2)-->Line_17 $$ str = String.valueOf(n1 + n2)[ CD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_18 $$ System.out.println(str.length())[ FD ]
Line_17 $$ str = String.valueOf(n1 + n2)-->Line_18 $$ System.out.println(str.length())[ FD ]
Line_4 $$ String str = ""-->Line_18 $$ System.out.println(str.length())[ FD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_8 $$ if (st.countTokens() > 2)[ FD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_13 $$ n1 = Integer.parseInt(st.nextToken())[ FD ]
Line_7 $$ st = new StringTokenizer(str, " ")-->Line_14 $$ n2 = Integer.parseInt(st.nextToken())[ FD ]
Line_6 $$ while ((str = br.readLine()) != null) -->Line_18 $$ System.out.println(str.length())[ FD ]
Line_17 $$ str = String.valueOf(n1 + n2)-->Line_18 $$ System.out.println(str.length())[ FD ]
