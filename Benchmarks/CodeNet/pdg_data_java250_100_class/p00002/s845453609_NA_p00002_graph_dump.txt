Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String readStr[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ while ((readStr = reader.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_5 $$ while ((readStr = reader.readLine()) != null) [ FD ]
Line_4 $$ String readStr-->Line_5 $$ while ((readStr = reader.readLine()) != null) [ FD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_5 $$ while ((readStr = reader.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ while ((readStr = reader.readLine()) != null) [ FD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_6 $$ String[] formattedStrs = readStr.split(" ")[ CD ]
Line_6 $$ String[] formattedStrs = readStr.split(" ")-->Line_6 $$ String[] formattedStrs = readStr.split(" ")[ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_6 $$ String[] formattedStrs = readStr.split(" ")[ FD ]
Line_4 $$ String readStr-->Line_6 $$ String[] formattedStrs = readStr.split(" ")[ FD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_7 $$ int left = Integer.parseInt(formattedStrs[0])[ CD ]
Line_7 $$ int left = Integer.parseInt(formattedStrs[0])-->Line_7 $$ int left = Integer.parseInt(formattedStrs[0])[ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_8 $$ int right = Integer.parseInt(formattedStrs[1])[ CD ]
Line_8 $$ int right = Integer.parseInt(formattedStrs[1])-->Line_8 $$ int right = Integer.parseInt(formattedStrs[1])[ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_9 $$ int weight = 1[ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_10 $$ int count = 1[ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_11 $$ while (true) [ CD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_5 $$ while ((readStr = reader.readLine()) != null) [ CD ]
Line_11 $$ while (true) -->Line_12 $$ int surplus = (left + right) / weight[ CD ]
Line_11 $$ while (true) -->Line_13 $$ if (surplus < 10) [ CD ]
Line_12 $$ int surplus = (left + right) / weight-->Line_13 $$ if (surplus < 10) [ FD ]
Line_13 $$ if (surplus < 10) -->Line_14 $$ System.out.println(count)[ CD ]
Line_10 $$ int count = 1-->Line_14 $$ System.out.println(count)[ FD ]
Line_11 $$ while (true) -->Line_17 $$ weight *= 10[ CD ]
Line_17 $$ weight *= 10-->Line_17 $$ weight *= 10[ FD ]
Line_9 $$ int weight = 1-->Line_17 $$ weight *= 10[ FD ]
Line_11 $$ while (true) -->Line_18 $$ count++[ CD ]
Line_10 $$ int count = 1-->Line_18 $$ count++[ FD ]
Line_5 $$ while ((readStr = reader.readLine()) != null) -->Line_6 $$ String[] formattedStrs = readStr.split(" ")[ FD ]
Line_12 $$ int surplus = (left + right) / weight-->Line_13 $$ if (surplus < 10) [ FD ]
