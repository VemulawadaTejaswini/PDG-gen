Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ int a = 0, b = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int length = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int result = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int flag = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ String op = ""[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ String str[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ ArrayList<String> operant = new ArrayList<String>()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ ArrayList<Integer> answer = new ArrayList<Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ String[] box = new String[3][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_13 $$ while (true) -->Line_14 $$ str = br.readLine()[ CD ]
Line_14 $$ str = br.readLine()-->Line_14 $$ str = br.readLine()[ FD ]
Line_8 $$ String str-->Line_14 $$ str = br.readLine()[ FD ]
Line_14 $$ str = br.readLine()-->Line_14 $$ str = br.readLine()[ CD ]
Line_12 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_14 $$ str = br.readLine()[ FD ]
Line_13 $$ while (true) -->Line_15 $$ box = str.split(" ", 0)[ CD ]
Line_15 $$ box = str.split(" ", 0)-->Line_15 $$ box = str.split(" ", 0)[ FD ]
Line_11 $$ String[] box = new String[3]-->Line_15 $$ box = str.split(" ", 0)[ FD ]
Line_15 $$ box = str.split(" ", 0)-->Line_15 $$ box = str.split(" ", 0)[ CD ]
Line_14 $$ str = br.readLine()-->Line_15 $$ box = str.split(" ", 0)[ FD ]
Line_8 $$ String str-->Line_15 $$ box = str.split(" ", 0)[ FD ]
Line_13 $$ while (true) -->Line_16 $$ a = Integer.parseInt(box[0])[ CD ]
Line_16 $$ a = Integer.parseInt(box[0])-->Line_16 $$ a = Integer.parseInt(box[0])[ FD ]
Line_3 $$ int a = 0, b = 0-->Line_16 $$ a = Integer.parseInt(box[0])[ FD ]
Line_16 $$ a = Integer.parseInt(box[0])-->Line_16 $$ a = Integer.parseInt(box[0])[ CD ]
Line_13 $$ while (true) -->Line_17 $$ b = Integer.parseInt(box[2])[ CD ]
Line_17 $$ b = Integer.parseInt(box[2])-->Line_17 $$ b = Integer.parseInt(box[2])[ FD ]
Line_3 $$ int a = 0, b = 0-->Line_17 $$ b = Integer.parseInt(box[2])[ FD ]
Line_17 $$ b = Integer.parseInt(box[2])-->Line_17 $$ b = Integer.parseInt(box[2])[ CD ]
Line_13 $$ while (true) -->Line_18 $$ op = box[1][ CD ]
Line_18 $$ op = box[1]-->Line_18 $$ op = box[1][ FD ]
Line_7 $$ String op = ""-->Line_18 $$ op = box[1][ FD ]
Line_13 $$ while (true) -->Line_19 $$ if (op.equals("+")) [ CD ]
Line_18 $$ op = box[1]-->Line_19 $$ if (op.equals("+")) [ FD ]
Line_7 $$ String op = ""-->Line_19 $$ if (op.equals("+")) [ FD ]
Line_19 $$ if (op.equals("+")) -->Line_19 $$ if (op.equals("+")) [ CD ]
Line_18 $$ op = box[1]-->Line_19 $$ if (op.equals("+")) [ FD ]
Line_7 $$ String op = ""-->Line_19 $$ if (op.equals("+")) [ FD ]
Line_19 $$ if (op.equals("+")) -->Line_20 $$ result = (a + b)[ CD ]
Line_20 $$ result = (a + b)-->Line_20 $$ result = (a + b)[ FD ]
Line_5 $$ int result = 0-->Line_20 $$ result = (a + b)[ FD ]
Line_19 $$ if (op.equals("+")) -->Line_21 $$ if (op.equals("-")) [ CD ]
Line_18 $$ op = box[1]-->Line_21 $$ if (op.equals("-")) [ FD ]
Line_7 $$ String op = ""-->Line_21 $$ if (op.equals("-")) [ FD ]
Line_21 $$ if (op.equals("-")) -->Line_21 $$ if (op.equals("-")) [ CD ]
Line_18 $$ op = box[1]-->Line_21 $$ if (op.equals("-")) [ FD ]
Line_7 $$ String op = ""-->Line_21 $$ if (op.equals("-")) [ FD ]
Line_21 $$ if (op.equals("-")) -->Line_22 $$ result = (a - b)[ CD ]
Line_20 $$ result = (a + b)-->Line_22 $$ result = (a - b)[ FD ]
Line_22 $$ result = (a - b)-->Line_22 $$ result = (a - b)[ FD ]
Line_5 $$ int result = 0-->Line_22 $$ result = (a - b)[ FD ]
Line_21 $$ if (op.equals("-")) -->Line_23 $$ if (op.equals("*")) [ CD ]
Line_18 $$ op = box[1]-->Line_23 $$ if (op.equals("*")) [ FD ]
Line_7 $$ String op = ""-->Line_23 $$ if (op.equals("*")) [ FD ]
Line_23 $$ if (op.equals("*")) -->Line_23 $$ if (op.equals("*")) [ CD ]
Line_18 $$ op = box[1]-->Line_23 $$ if (op.equals("*")) [ FD ]
Line_7 $$ String op = ""-->Line_23 $$ if (op.equals("*")) [ FD ]
Line_23 $$ if (op.equals("*")) -->Line_24 $$ result = (a * b)[ CD ]
Line_20 $$ result = (a + b)-->Line_24 $$ result = (a * b)[ FD ]
Line_22 $$ result = (a - b)-->Line_24 $$ result = (a * b)[ FD ]
Line_24 $$ result = (a * b)-->Line_24 $$ result = (a * b)[ FD ]
Line_5 $$ int result = 0-->Line_24 $$ result = (a * b)[ FD ]
Line_23 $$ if (op.equals("*")) -->Line_25 $$ if (op.equals("/") && b != 0) [ CD ]
Line_18 $$ op = box[1]-->Line_25 $$ if (op.equals("/") && b != 0) [ FD ]
Line_7 $$ String op = ""-->Line_25 $$ if (op.equals("/") && b != 0) [ FD ]
Line_25 $$ if (op.equals("/") && b != 0) -->Line_26 $$ result = (a / b)[ CD ]
Line_20 $$ result = (a + b)-->Line_26 $$ result = (a / b)[ FD ]
Line_22 $$ result = (a - b)-->Line_26 $$ result = (a / b)[ FD ]
Line_24 $$ result = (a * b)-->Line_26 $$ result = (a / b)[ FD ]
Line_26 $$ result = (a / b)-->Line_26 $$ result = (a / b)[ FD ]
Line_5 $$ int result = 0-->Line_26 $$ result = (a / b)[ FD ]
Line_25 $$ if (op.equals("/") && b != 0) -->Line_27 $$ if (op.equals("?")) [ CD ]
Line_18 $$ op = box[1]-->Line_27 $$ if (op.equals("?")) [ FD ]
Line_7 $$ String op = ""-->Line_27 $$ if (op.equals("?")) [ FD ]
Line_27 $$ if (op.equals("?")) -->Line_27 $$ if (op.equals("?")) [ CD ]
Line_18 $$ op = box[1]-->Line_27 $$ if (op.equals("?")) [ FD ]
Line_7 $$ String op = ""-->Line_27 $$ if (op.equals("?")) [ FD ]
Line_27 $$ if (op.equals("?")) -->Line_28 $$ flag = 1[ CD ]
Line_28 $$ flag = 1-->Line_28 $$ flag = 1[ FD ]
Line_6 $$ int flag = 0-->Line_28 $$ flag = 1[ FD ]
Line_27 $$ if (op.equals("?")) -->Line_30 $$ if (op.equals("/") && b == 0) [ CD ]
Line_18 $$ op = box[1]-->Line_30 $$ if (op.equals("/") && b == 0) [ FD ]
Line_7 $$ String op = ""-->Line_30 $$ if (op.equals("/") && b == 0) [ FD ]
Line_30 $$ if (op.equals("/") && b == 0) -->Line_31 $$ flag = 1[ CD ]
Line_28 $$ flag = 1-->Line_31 $$ flag = 1[ FD ]
Line_31 $$ flag = 1-->Line_31 $$ flag = 1[ FD ]
Line_6 $$ int flag = 0-->Line_31 $$ flag = 1[ FD ]
Line_13 $$ while (true) -->Line_34 $$ answer.add(result)[ CD ]
Line_10 $$ ArrayList<Integer> answer = new ArrayList<Integer>()-->Line_34 $$ answer.add(result)[ FD ]
Line_20 $$ result = (a + b)-->Line_34 $$ answer.add(result)[ FD ]
Line_22 $$ result = (a - b)-->Line_34 $$ answer.add(result)[ FD ]
Line_24 $$ result = (a * b)-->Line_34 $$ answer.add(result)[ FD ]
Line_26 $$ result = (a / b)-->Line_34 $$ answer.add(result)[ FD ]
Line_5 $$ int result = 0-->Line_34 $$ answer.add(result)[ FD ]
Line_13 $$ while (true) -->Line_35 $$ if (flag == 1) [ CD ]
Line_28 $$ flag = 1-->Line_35 $$ if (flag == 1) [ FD ]
Line_31 $$ flag = 1-->Line_35 $$ if (flag == 1) [ FD ]
Line_6 $$ int flag = 0-->Line_35 $$ if (flag == 1) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ CD ]
Line_10 $$ ArrayList<Integer> answer = new ArrayList<Integer>()-->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ CD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ CD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_40 $$ System.out.println(answer.get(j))[ CD ]
Line_10 $$ ArrayList<Integer> answer = new ArrayList<Integer>()-->Line_40 $$ System.out.println(answer.get(j))[ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_40 $$ System.out.println(answer.get(j))[ FD ]
Line_14 $$ str = br.readLine()-->Line_15 $$ box = str.split(" ", 0)[ FD ]
Line_18 $$ op = box[1]-->Line_19 $$ if (op.equals("+")) [ FD ]
Line_18 $$ op = box[1]-->Line_19 $$ if (op.equals("+")) [ FD ]
Line_18 $$ op = box[1]-->Line_21 $$ if (op.equals("-")) [ FD ]
Line_18 $$ op = box[1]-->Line_21 $$ if (op.equals("-")) [ FD ]
Line_18 $$ op = box[1]-->Line_23 $$ if (op.equals("*")) [ FD ]
Line_18 $$ op = box[1]-->Line_23 $$ if (op.equals("*")) [ FD ]
Line_18 $$ op = box[1]-->Line_25 $$ if (op.equals("/") && b != 0) [ FD ]
Line_18 $$ op = box[1]-->Line_27 $$ if (op.equals("?")) [ FD ]
Line_18 $$ op = box[1]-->Line_27 $$ if (op.equals("?")) [ FD ]
Line_18 $$ op = box[1]-->Line_30 $$ if (op.equals("/") && b == 0) [ FD ]
Line_20 $$ result = (a + b)-->Line_34 $$ answer.add(result)[ FD ]
Line_22 $$ result = (a - b)-->Line_34 $$ answer.add(result)[ FD ]
Line_24 $$ result = (a * b)-->Line_34 $$ answer.add(result)[ FD ]
Line_26 $$ result = (a / b)-->Line_34 $$ answer.add(result)[ FD ]
Line_28 $$ flag = 1-->Line_35 $$ if (flag == 1) [ FD ]
Line_31 $$ flag = 1-->Line_35 $$ if (flag == 1) [ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_39 $$ for (int j = 0; j < answer.size(); ++j) [ FD ]
Line_39 $$ for (int j = 0; j < answer.size(); ++j) -->Line_40 $$ System.out.println(answer.get(j))[ FD ]
