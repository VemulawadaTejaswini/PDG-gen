Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ PriorityQueue<String> caca = new PriorityQueue<String>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ Scanner scn = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int n = scn.nextInt()[ CD ]
Line_5 $$ int n = scn.nextInt()-->Line_5 $$ int n = scn.nextInt()[ CD ]
Line_4 $$ Scanner scn = new Scanner(System.in)-->Line_5 $$ int n = scn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int n2 = scn.nextInt()[ CD ]
Line_6 $$ int n2 = scn.nextInt()-->Line_6 $$ int n2 = scn.nextInt()[ CD ]
Line_4 $$ Scanner scn = new Scanner(System.in)-->Line_6 $$ int n2 = scn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int n = scn.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ caca.add(scn.next())[ CD ]
Line_3 $$ PriorityQueue<String> caca = new PriorityQueue<String>()-->Line_7 $$ caca.add(scn.next())[ FD ]
Line_4 $$ Scanner scn = new Scanner(System.in)-->Line_7 $$ caca.add(scn.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
Line_5 $$ int n = scn.nextInt()-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ System.out.print(caca.poll())[ CD ]
Line_3 $$ PriorityQueue<String> caca = new PriorityQueue<String>()-->Line_8 $$ System.out.print(caca.poll())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ System.out.println()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ scn.close()[ CD ]
Line_4 $$ Scanner scn = new Scanner(System.in)-->Line_10 $$ scn.close()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())-->Line_7 $$ for (int i = 0; i < n; i++) caca.add(scn.next())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())-->Line_8 $$ for (int i = 0; i < n; i++) System.out.print(caca.poll())[ FD ]
