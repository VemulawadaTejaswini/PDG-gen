Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int L = Integer.parseInt(sc.next())[ CD ]
Line_5 $$ int L = Integer.parseInt(sc.next())-->Line_5 $$ int L = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int L = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String[] S = new String[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ String s = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ S[i] = sc.next()[ CD ]
Line_9 $$ S[i] = sc.next()-->Line_9 $$ S[i] = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ S[i] = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ Arrays.sort(S)[ CD ]
Line_6 $$ String[] S = new String[N]-->Line_11 $$ Arrays.sort(S)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ CD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ CD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_13 $$ s += S[i][ CD ]
Line_13 $$ s += S[i]-->Line_13 $$ s += S[i][ FD ]
Line_7 $$ String s = ""-->Line_13 $$ s += S[i][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ PrintWriter out = new PrintWriter(System.out)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ out.println(s)[ CD ]
Line_15 $$ PrintWriter out = new PrintWriter(System.out)-->Line_16 $$ out.println(s)[ FD ]
Line_13 $$ s += S[i]-->Line_16 $$ out.println(s)[ FD ]
Line_7 $$ String s = ""-->Line_16 $$ out.println(s)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_17 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ out.flush()[ CD ]
Line_15 $$ PrintWriter out = new PrintWriter(System.out)-->Line_18 $$ out.flush()[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < N; i++) -->Line_12 $$ for (int i = 0; i < N; i++) [ FD ]
