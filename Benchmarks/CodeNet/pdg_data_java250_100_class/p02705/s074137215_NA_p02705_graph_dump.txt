Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ double r = in.nextDouble()[ CD ]
Line_4 $$ double r = in.nextDouble()-->Line_4 $$ double r = in.nextDouble()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_4 $$ double r = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double pi = acos(-1.0)[ CD ]
Line_5 $$ double pi = acos(-1.0)-->Line_5 $$ double pi = acos(-1.0)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ Double are = 2 * pi * r[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Double toBeTruncated = new Double(are)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ Double truncatedDouble = BigDecimal.valueOf(toBeTruncated).setScale(3, RoundingMode.HALF_UP).doubleValue()[ CD ]
Line_8 $$ Double truncatedDouble = BigDecimal.valueOf(toBeTruncated).setScale(3, RoundingMode.HALF_UP).doubleValue()-->Line_8 $$ Double truncatedDouble = BigDecimal.valueOf(toBeTruncated).setScale(3, RoundingMode.HALF_UP).doubleValue()[ CD ]
Line_7 $$ Double toBeTruncated = new Double(are)-->Line_8 $$ Double truncatedDouble = BigDecimal.valueOf(toBeTruncated).setScale(3, RoundingMode.HALF_UP).doubleValue()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ System.out.println(toBeTruncated)[ CD ]
Line_7 $$ Double toBeTruncated = new Double(are)-->Line_11 $$ System.out.println(toBeTruncated)[ FD ]
