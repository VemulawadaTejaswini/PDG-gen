Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String line[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ while ((line = br.readLine()) != null) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_5 $$ while ((line = br.readLine()) != null) [ FD ]
Line_4 $$ String line-->Line_5 $$ while ((line = br.readLine()) != null) [ FD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_5 $$ while ((line = br.readLine()) != null) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ while ((line = br.readLine()) != null) [ FD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_6 $$ String[] input = line.split(" ")[ CD ]
Line_6 $$ String[] input = line.split(" ")-->Line_6 $$ String[] input = line.split(" ")[ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_6 $$ String[] input = line.split(" ")[ FD ]
Line_4 $$ String line-->Line_6 $$ String[] input = line.split(" ")[ FD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_7 $$ int max = Integer.valueOf(input[0])[ CD ]
Line_7 $$ int max = Integer.valueOf(input[0])-->Line_7 $$ int max = Integer.valueOf(input[0])[ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_8 $$ int goal = Integer.valueOf(input[1])[ CD ]
Line_8 $$ int goal = Integer.valueOf(input[1])-->Line_8 $$ int goal = Integer.valueOf(input[1])[ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_9 $$ if (max == 0 && goal == 0)[ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_10 $$ int count = 0[ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_11 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_5 $$ while ((line = br.readLine()) != null) [ CD ]
Line_7 $$ int max = Integer.valueOf(input[0])-->Line_11 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_7 $$ int max = Integer.valueOf(input[0])-->Line_12 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_13 $$ if (i == j)[ CD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ if (i == j)[ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_13 $$ if (i == j)[ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ CD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_7 $$ int max = Integer.valueOf(input[0])-->Line_14 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ CD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ CD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_15 $$ if (i == k || j == k)[ CD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ if ((i + j + k) == goal)[ CD ]
Line_8 $$ int goal = Integer.valueOf(input[1])-->Line_16 $$ if ((i + j + k) == goal)[ FD ]
Line_16 $$ if ((i + j + k) == goal)-->Line_16 $$ count++[ CD ]
Line_10 $$ int count = 0-->Line_16 $$ count++[ FD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_20 $$ System.out.println(count / 6)[ CD ]
Line_5 $$ while ((line = br.readLine()) != null) -->Line_6 $$ String[] input = line.split(" ")[ FD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_11 $$ for (int i = 1; i <= max; i++) -->Line_11 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_12 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_12 $$ for (int j = 1; j <= max; j++) -->Line_13 $$ if (i == j)[ FD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_14 $$ for (int k = 1; k <= max; k++) -->Line_14 $$ for (int k = 1; k <= max; k++) [ FD ]
