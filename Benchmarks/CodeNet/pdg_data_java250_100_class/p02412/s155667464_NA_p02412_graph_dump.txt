Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ while (true) -->Line_5 $$ int count = 0[ CD ]
Line_4 $$ while (true) -->Line_6 $$ int n = scanner.nextInt()[ CD ]
Line_6 $$ int n = scanner.nextInt()-->Line_6 $$ int n = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ int n = scanner.nextInt()[ FD ]
Line_4 $$ while (true) -->Line_7 $$ int x = scanner.nextInt()[ CD ]
Line_7 $$ int x = scanner.nextInt()-->Line_7 $$ int x = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_7 $$ int x = scanner.nextInt()[ FD ]
Line_4 $$ while (true) -->Line_8 $$ if (n == 0 && x == 0) [ CD ]
Line_4 $$ while (true) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ CD ]
Line_4 $$ while (true) -->Line_4 $$ while (true) [ CD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ CD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ CD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ FD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ CD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ CD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ CD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ CD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ FD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ CD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ CD ]
Line_6 $$ int n = scanner.nextInt()-->Line_12 $$ for (int k = j + 1; k <= n; k++) [ FD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ CD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ CD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ FD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_13 $$ if ((i + j + k) == x) [ CD ]
Line_7 $$ int x = scanner.nextInt()-->Line_13 $$ if ((i + j + k) == x) [ FD ]
Line_13 $$ if ((i + j + k) == x) -->Line_14 $$ count++[ CD ]
Line_5 $$ int count = 0-->Line_14 $$ count++[ FD ]
Line_4 $$ while (true) -->Line_19 $$ System.out.println(count)[ CD ]
Line_5 $$ int count = 0-->Line_19 $$ System.out.println(count)[ FD ]
Line_5 $$ int count = 0-->Line_19 $$ System.out.println(count)[ FD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ FD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ FD ]
Line_10 $$ for (int i = 1; i <= (n - 2); i++) -->Line_10 $$ for (int i = 1; i <= (n - 2); i++) [ FD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ FD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ FD ]
Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) -->Line_11 $$ for (int j = i + 1; j <= (n - 1); j++) [ FD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ FD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ FD ]
Line_12 $$ for (int k = j + 1; k <= n; k++) -->Line_12 $$ for (int k = j + 1; k <= n; k++) [ FD ]
