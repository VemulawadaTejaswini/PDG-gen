Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ while (true) -->Line_5 $$ String input = br.readLine()[ CD ]
Line_5 $$ String input = br.readLine()-->Line_5 $$ String input = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String input = br.readLine()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ if (input.equals("0 0")) [ CD ]
Line_5 $$ String input = br.readLine()-->Line_6 $$ if (input.equals("0 0")) [ FD ]
Line_6 $$ if (input.equals("0 0")) -->Line_6 $$ if (input.equals("0 0")) [ CD ]
Line_5 $$ String input = br.readLine()-->Line_6 $$ if (input.equals("0 0")) [ FD ]
Line_4 $$ while (true) -->Line_9 $$ String[] numbers = input.split(" ")[ CD ]
Line_9 $$ String[] numbers = input.split(" ")-->Line_9 $$ String[] numbers = input.split(" ")[ CD ]
Line_5 $$ String input = br.readLine()-->Line_9 $$ String[] numbers = input.split(" ")[ FD ]
Line_4 $$ while (true) -->Line_10 $$ Integer max = Integer.parseInt(numbers[0])[ CD ]
Line_10 $$ Integer max = Integer.parseInt(numbers[0])-->Line_10 $$ Integer max = Integer.parseInt(numbers[0])[ CD ]
Line_4 $$ while (true) -->Line_11 $$ Integer target = Integer.parseInt(numbers[1])[ CD ]
Line_11 $$ Integer target = Integer.parseInt(numbers[1])-->Line_11 $$ Integer target = Integer.parseInt(numbers[1])[ CD ]
Line_4 $$ while (true) -->Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()[ CD ]
Line_4 $$ while (true) -->Line_13 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_4 $$ while (true) -->Line_4 $$ while (true) [ CD ]
Line_10 $$ Integer max = Integer.parseInt(numbers[0])-->Line_13 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ CD ]
Line_10 $$ Integer max = Integer.parseInt(numbers[0])-->Line_14 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ CD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_15 $$ if (j != i) [ CD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_15 $$ if (j != i) [ FD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_15 $$ if (j != i) [ FD ]
Line_15 $$ if (j != i) -->Line_16 $$ for (int k = 1; k <= max; k++) [ CD ]
Line_15 $$ if (j != i) -->Line_15 $$ if (j != i) [ CD ]
Line_10 $$ Integer max = Integer.parseInt(numbers[0])-->Line_16 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ for (int k = 1; k <= max; k++) [ CD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ for (int k = 1; k <= max; k++) [ CD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_17 $$ if (k != i && k != j) [ CD ]
Line_17 $$ if (k != i && k != j) -->Line_18 $$ if (i + j + k == target) [ CD ]
Line_11 $$ Integer target = Integer.parseInt(numbers[1])-->Line_18 $$ if (i + j + k == target) [ FD ]
Line_18 $$ if (i + j + k == target) -->Line_19 $$ Integer[] comb = [ CD ]
Line_18 $$ if (i + j + k == target) -->Line_20 $$ Arrays.sort(comb)[ CD ]
Line_19 $$ Integer[] comb = -->Line_20 $$ Arrays.sort(comb)[ FD ]
Line_18 $$ if (i + j + k == target) -->Line_21 $$ boolean is_contain = false[ CD ]
Line_18 $$ if (i + j + k == target) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ CD ]
Line_18 $$ if (i + j + k == target) -->Line_18 $$ if (i + j + k == target) [ CD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ CD ]
Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()-->Line_22 $$ for (int l = 0; l < result.size(); l++) [ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ CD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ CD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) [ CD ]
Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()-->Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) [ FD ]
Line_19 $$ Integer[] comb = -->Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) [ FD ]
Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()-->Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) [ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) [ FD ]
Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) -->Line_24 $$ is_contain = true[ CD ]
Line_24 $$ is_contain = true-->Line_24 $$ is_contain = true[ FD ]
Line_21 $$ boolean is_contain = false-->Line_24 $$ is_contain = true[ FD ]
Line_18 $$ if (i + j + k == target) -->Line_27 $$ if (!is_contain) [ CD ]
Line_24 $$ is_contain = true-->Line_27 $$ if (!is_contain) [ FD ]
Line_21 $$ boolean is_contain = false-->Line_27 $$ if (!is_contain) [ FD ]
Line_27 $$ if (!is_contain) -->Line_27 $$ if (!is_contain) [ CD ]
Line_24 $$ is_contain = true-->Line_27 $$ if (!is_contain) [ FD ]
Line_21 $$ boolean is_contain = false-->Line_27 $$ if (!is_contain) [ FD ]
Line_27 $$ if (!is_contain) -->Line_28 $$ result.add(comb)[ CD ]
Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()-->Line_28 $$ result.add(comb)[ FD ]
Line_19 $$ Integer[] comb = -->Line_28 $$ result.add(comb)[ FD ]
Line_4 $$ while (true) -->Line_36 $$ System.out.println(result.size())[ CD ]
Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()-->Line_36 $$ System.out.println(result.size())[ FD ]
Line_5 $$ String input = br.readLine()-->Line_6 $$ if (input.equals("0 0")) [ FD ]
Line_5 $$ String input = br.readLine()-->Line_6 $$ if (input.equals("0 0")) [ FD ]
Line_5 $$ String input = br.readLine()-->Line_9 $$ String[] numbers = input.split(" ")[ FD ]
Line_12 $$ ArrayList<Integer[]> result = new ArrayList<Integer[]>()-->Line_36 $$ System.out.println(result.size())[ FD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_13 $$ for (int i = 1; i <= max; i++) -->Line_13 $$ for (int i = 1; i <= max; i++) [ FD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_14 $$ for (int j = 1; j <= max; j++) [ FD ]
Line_14 $$ for (int j = 1; j <= max; j++) -->Line_15 $$ if (j != i) [ FD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_16 $$ for (int k = 1; k <= max; k++) -->Line_16 $$ for (int k = 1; k <= max; k++) [ FD ]
Line_19 $$ Integer[] comb = -->Line_20 $$ Arrays.sort(comb)[ FD ]
Line_21 $$ boolean is_contain = false-->Line_27 $$ if (!is_contain) [ FD ]
Line_21 $$ boolean is_contain = false-->Line_27 $$ if (!is_contain) [ FD ]
Line_19 $$ Integer[] comb = -->Line_28 $$ result.add(comb)[ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_22 $$ for (int l = 0; l < result.size(); l++) [ FD ]
Line_22 $$ for (int l = 0; l < result.size(); l++) -->Line_23 $$ if (result.size() > 0 && Arrays.equals(result.get(l), comb)) [ FD ]
