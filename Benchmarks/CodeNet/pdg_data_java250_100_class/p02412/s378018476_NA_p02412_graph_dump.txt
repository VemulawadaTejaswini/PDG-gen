Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ while (true) -->Line_5 $$ int n = scan.nextInt()[ CD ]
Line_5 $$ int n = scan.nextInt()-->Line_5 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ int n = scan.nextInt()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ int x = scan.nextInt()[ CD ]
Line_6 $$ int x = scan.nextInt()-->Line_6 $$ int x = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ int x = scan.nextInt()[ FD ]
Line_4 $$ while (true) -->Line_7 $$ if (n == 0 && x == 0) [ CD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_11 $$ int first[ CD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_12 $$ int second[ CD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_13 $$ int third[ CD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_14 $$ int count = 0[ CD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ CD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_7 $$ if (n == 0 && x == 0) [ CD ]
Line_11 $$ int first-->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ CD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_11 $$ int first-->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ CD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_11 $$ int first-->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ CD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ CD ]
Line_12 $$ int second-->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ CD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_12 $$ int second-->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ CD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_12 $$ int second-->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ CD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ CD ]
Line_13 $$ int third-->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_5 $$ int n = scan.nextInt()-->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ CD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_13 $$ int third-->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ CD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_13 $$ int third-->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_18 $$ if (n == 0 && x == 0) [ CD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_21 $$ if ((first + second + third) == x) [ CD ]
Line_6 $$ int x = scan.nextInt()-->Line_21 $$ if ((first + second + third) == x) [ FD ]
Line_21 $$ if ((first + second + third) == x) -->Line_22 $$ count++[ CD ]
Line_14 $$ int count = 0-->Line_22 $$ count++[ FD ]
Line_7 $$ if (n == 0 && x == 0) -->Line_27 $$ System.out.println(count)[ CD ]
Line_14 $$ int count = 0-->Line_27 $$ System.out.println(count)[ FD ]
Line_14 $$ int count = 0-->Line_27 $$ System.out.println(count)[ FD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_15 $$ for (first = 1; first <= (n - 2); first++) -->Line_15 $$ for (first = 1; first <= (n - 2); first++) [ FD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) -->Line_16 $$ for (second = (first + 1); second <= (n - 1); second++) [ FD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
Line_17 $$ for (third = (second + 1); third <= n; third++) -->Line_17 $$ for (third = (second + 1); third <= n; third++) [ FD ]
