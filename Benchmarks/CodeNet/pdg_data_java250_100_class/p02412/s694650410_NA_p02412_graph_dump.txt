Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ InputStreamReader isr = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_8 $$ do -->Line_9 $$ String[] inputList = br.readLine().split(" ")[ CD ]
Line_9 $$ String[] inputList = br.readLine().split(" ")-->Line_9 $$ String[] inputList = br.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_9 $$ String[] inputList = br.readLine().split(" ")[ FD ]
Line_8 $$ do -->Line_10 $$ n = Integer.parseInt(inputList[0])[ CD ]
Line_10 $$ n = Integer.parseInt(inputList[0])-->Line_10 $$ n = Integer.parseInt(inputList[0])[ FD ]
Line_7 $$ int n, x-->Line_10 $$ n = Integer.parseInt(inputList[0])[ FD ]
Line_10 $$ n = Integer.parseInt(inputList[0])-->Line_10 $$ n = Integer.parseInt(inputList[0])[ CD ]
Line_8 $$ do -->Line_11 $$ x = Integer.parseInt(inputList[1])[ CD ]
Line_11 $$ x = Integer.parseInt(inputList[1])-->Line_11 $$ x = Integer.parseInt(inputList[1])[ FD ]
Line_7 $$ int n, x-->Line_11 $$ x = Integer.parseInt(inputList[1])[ FD ]
Line_11 $$ x = Integer.parseInt(inputList[1])-->Line_11 $$ x = Integer.parseInt(inputList[1])[ CD ]
Line_8 $$ do -->Line_12 $$ if (n == 0 && x == 0) [ CD ]
Line_12 $$ if (n == 0 && x == 0) -->Line_15 $$ if (x < 6) [ CD ]
Line_11 $$ x = Integer.parseInt(inputList[1])-->Line_15 $$ if (x < 6) [ FD ]
Line_7 $$ int n, x-->Line_15 $$ if (x < 6) [ FD ]
Line_15 $$ if (x < 6) -->Line_16 $$ ret.add(0)[ CD ]
Line_6 $$ List<Integer> ret = new ArrayList<Integer>()-->Line_16 $$ ret.add(0)[ FD ]
Line_15 $$ if (x < 6) -->Line_18 $$ List<int[]> hoge = new ArrayList<int[]>()[ CD ]
Line_15 $$ if (x < 6) -->Line_19 $$ int a, b, c[ CD ]
Line_15 $$ if (x < 6) -->Line_20 $$ for (a = 1; a <= n; a++) [ CD ]
Line_15 $$ if (x < 6) -->Line_15 $$ if (x < 6) [ CD ]
Line_19 $$ int a, b, c-->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_10 $$ n = Integer.parseInt(inputList[0])-->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_7 $$ int n, x-->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ CD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_19 $$ int a, b, c-->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ CD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_19 $$ int a, b, c-->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_21 $$ for (b = 1; b <= n; b++) [ CD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ CD ]
Line_19 $$ int a, b, c-->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_10 $$ n = Integer.parseInt(inputList[0])-->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_7 $$ int n, x-->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ CD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_19 $$ int a, b, c-->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ CD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_19 $$ int a, b, c-->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_22 $$ for (c = 1; c <= n; c++) [ CD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ CD ]
Line_19 $$ int a, b, c-->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_10 $$ n = Integer.parseInt(inputList[0])-->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_7 $$ int n, x-->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ CD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_19 $$ int a, b, c-->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ CD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_19 $$ int a, b, c-->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_23 $$ if (!(a == b || b == c || a == c) && a + b + c == x) [ CD ]
Line_23 $$ if (!(a == b || b == c || a == c) && a + b + c == x) -->Line_24 $$ boolean flg = true[ CD ]
Line_26 $$ if ((list[0] == a || list[0] == b || list[0] == c) && (list[1] == a || list[1] == b || list[1] == c) && (list[2] == a || list[2] == b || list[2] == c)) -->Line_29 $$ flg = false[ CD ]
Line_24 $$ boolean flg = true-->Line_29 $$ flg = false[ FD ]
Line_29 $$ flg = false-->Line_29 $$ flg = false[ FD ]
Line_23 $$ if (!(a == b || b == c || a == c) && a + b + c == x) -->Line_33 $$ if (flg) [ CD ]
Line_33 $$ if (flg) -->Line_34 $$ int[] tmp = new int[3][ CD ]
Line_33 $$ if (flg) -->Line_35 $$ tmp[0] = a[ CD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_35 $$ tmp[0] = a[ FD ]
Line_19 $$ int a, b, c-->Line_35 $$ tmp[0] = a[ FD ]
Line_33 $$ if (flg) -->Line_36 $$ tmp[1] = b[ CD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_36 $$ tmp[1] = b[ FD ]
Line_19 $$ int a, b, c-->Line_36 $$ tmp[1] = b[ FD ]
Line_33 $$ if (flg) -->Line_37 $$ tmp[2] = c[ CD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_37 $$ tmp[2] = c[ FD ]
Line_19 $$ int a, b, c-->Line_37 $$ tmp[2] = c[ FD ]
Line_33 $$ if (flg) -->Line_38 $$ hoge.add(tmp)[ CD ]
Line_18 $$ List<int[]> hoge = new ArrayList<int[]>()-->Line_38 $$ hoge.add(tmp)[ FD ]
Line_34 $$ int[] tmp = new int[3]-->Line_38 $$ hoge.add(tmp)[ FD ]
Line_15 $$ if (x < 6) -->Line_45 $$ ret.add(hoge.size())[ CD ]
Line_6 $$ List<Integer> ret = new ArrayList<Integer>()-->Line_45 $$ ret.add(hoge.size())[ FD ]
Line_18 $$ List<int[]> hoge = new ArrayList<int[]>()-->Line_45 $$ ret.add(hoge.size())[ FD ]
Line_49 $$ for (int num : ret) -->Line_50 $$ System.out.println(num)[ FD ]
Line_11 $$ x = Integer.parseInt(inputList[1])-->Line_15 $$ if (x < 6) [ FD ]
Line_18 $$ List<int[]> hoge = new ArrayList<int[]>()-->Line_45 $$ ret.add(hoge.size())[ FD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_20 $$ for (a = 1; a <= n; a++) -->Line_20 $$ for (a = 1; a <= n; a++) [ FD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_21 $$ for (b = 1; b <= n; b++) -->Line_21 $$ for (b = 1; b <= n; b++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_22 $$ for (c = 1; c <= n; c++) [ FD ]
Line_22 $$ for (c = 1; c <= n; c++) -->Line_37 $$ tmp[2] = c[ FD ]
Line_34 $$ int[] tmp = new int[3]-->Line_38 $$ hoge.add(tmp)[ FD ]
