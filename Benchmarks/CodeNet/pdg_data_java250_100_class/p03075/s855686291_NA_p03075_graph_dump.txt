Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ static int[] antena = new int[5];[ CD ]
Line_1 $$ public class Main -->Line_3 $$ static int dist;[ CD ]
Line_1 $$ public class Main -->Line_4 $$ public static void main(String[] args) [ CD ]
Line_4 $$ public static void main(String[] args) -->Line_5 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_4 $$ public static void main(String[] args) -->Line_4 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_7 $$ antena[i] = Integer.parseInt(sc.nextLine())[ CD ]
Line_7 $$ antena[i] = Integer.parseInt(sc.nextLine())-->Line_7 $$ antena[i] = Integer.parseInt(sc.nextLine())[ CD ]
Line_5 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ antena[i] = Integer.parseInt(sc.nextLine())[ FD ]
Line_4 $$ public static void main(String[] args) -->Line_9 $$ dist = Integer.parseInt(sc.nextLine())[ CD ]
Line_9 $$ dist = Integer.parseInt(sc.nextLine())-->Line_9 $$ dist = Integer.parseInt(sc.nextLine())[ FD ]
Line_9 $$ dist = Integer.parseInt(sc.nextLine())-->Line_9 $$ dist = Integer.parseInt(sc.nextLine())[ CD ]
Line_5 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ dist = Integer.parseInt(sc.nextLine())[ FD ]
Line_4 $$ public static void main(String[] args) -->Line_10 $$ int max = 0[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_4 $$ public static void main(String[] args) -->Line_4 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_12 $$ for (int j = 4; j > i; j--) [ CD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_12 $$ for (int j = 4; j > i; j--) [ FD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_12 $$ for (int j = 4; j > i; j--) [ FD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_12 $$ for (int j = 4; j > i; j--) [ CD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_12 $$ for (int j = 4; j > i; j--) [ CD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_12 $$ for (int j = 4; j > i; j--) [ FD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_13 $$ if (Math.abs(antena[i] - antena[j]) > max) [ CD ]
Line_10 $$ int max = 0-->Line_13 $$ if (Math.abs(antena[i] - antena[j]) > max) [ FD ]
Line_13 $$ if (Math.abs(antena[i] - antena[j]) > max) -->Line_14 $$ max = Math.abs(antena[i] - antena[j])[ CD ]
Line_14 $$ max = Math.abs(antena[i] - antena[j])-->Line_14 $$ max = Math.abs(antena[i] - antena[j])[ FD ]
Line_10 $$ int max = 0-->Line_14 $$ max = Math.abs(antena[i] - antena[j])[ FD ]
Line_14 $$ max = Math.abs(antena[i] - antena[j])-->Line_14 $$ max = Math.abs(antena[i] - antena[j])[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_18 $$ if (max > dist) [ CD ]
Line_14 $$ max = Math.abs(antena[i] - antena[j])-->Line_18 $$ if (max > dist) [ FD ]
Line_10 $$ int max = 0-->Line_18 $$ if (max > dist) [ FD ]
Line_9 $$ dist = Integer.parseInt(sc.nextLine())-->Line_18 $$ if (max > dist) [ FD ]
Line_18 $$ if (max > dist) -->Line_19 $$ System.out.println(":(")[ CD ]
Line_18 $$ if (max > dist) -->Line_21 $$ System.out.println("Yay!")[ CD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_6 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_11 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_12 $$ for (int j = 4; j > i; j--) [ FD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_12 $$ for (int j = 4; j > i; j--) [ FD ]
Line_12 $$ for (int j = 4; j > i; j--) -->Line_12 $$ for (int j = 4; j > i; j--) [ FD ]
Line_14 $$ max = Math.abs(antena[i] - antena[j])-->Line_13 $$ if (Math.abs(antena[i] - antena[j]) > max) [ FD ]
