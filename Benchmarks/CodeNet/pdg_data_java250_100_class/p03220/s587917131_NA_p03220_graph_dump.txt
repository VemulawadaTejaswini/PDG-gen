Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ long N = sc.nextLong()[ CD ]
Line_4 $$ long N = sc.nextLong()-->Line_4 $$ long N = sc.nextLong()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ long N = sc.nextLong()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double T = sc.nextDouble()[ CD ]
Line_5 $$ double T = sc.nextDouble()-->Line_5 $$ double T = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ double T = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double A = sc.nextDouble()[ CD ]
Line_6 $$ double A = sc.nextDouble()-->Line_6 $$ double A = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double A = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ long ans = 1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double H = sc.nextDouble()[ CD ]
Line_8 $$ double H = sc.nextDouble()-->Line_8 $$ double H = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ double H = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double tmp = T - H * 0.006[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double tem = Math.abs(A - tmp)[ CD ]
Line_10 $$ double tem = Math.abs(A - tmp)-->Line_10 $$ double tem = Math.abs(A - tmp)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ CD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ CD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_12 $$ H = sc.nextDouble()[ CD ]
Line_12 $$ H = sc.nextDouble()-->Line_12 $$ H = sc.nextDouble()[ FD ]
Line_8 $$ double H = sc.nextDouble()-->Line_12 $$ H = sc.nextDouble()[ FD ]
Line_12 $$ H = sc.nextDouble()-->Line_12 $$ H = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_12 $$ H = sc.nextDouble()[ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_13 $$ tmp = T - H * 0.006[ CD ]
Line_13 $$ tmp = T - H * 0.006-->Line_13 $$ tmp = T - H * 0.006[ FD ]
Line_9 $$ double tmp = T - H * 0.006-->Line_13 $$ tmp = T - H * 0.006[ FD ]
Line_5 $$ double T = sc.nextDouble()-->Line_13 $$ tmp = T - H * 0.006[ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_14 $$ if (tem > Math.abs(A - tmp)) [ CD ]
Line_10 $$ double tem = Math.abs(A - tmp)-->Line_14 $$ if (tem > Math.abs(A - tmp)) [ FD ]
Line_14 $$ if (tem > Math.abs(A - tmp)) -->Line_15 $$ tem = Math.abs(A - tmp)[ CD ]
Line_15 $$ tem = Math.abs(A - tmp)-->Line_15 $$ tem = Math.abs(A - tmp)[ FD ]
Line_10 $$ double tem = Math.abs(A - tmp)-->Line_15 $$ tem = Math.abs(A - tmp)[ FD ]
Line_15 $$ tem = Math.abs(A - tmp)-->Line_15 $$ tem = Math.abs(A - tmp)[ CD ]
Line_14 $$ if (tem > Math.abs(A - tmp)) -->Line_16 $$ ans = i[ CD ]
Line_16 $$ ans = i-->Line_16 $$ ans = i[ FD ]
Line_7 $$ long ans = 1-->Line_16 $$ ans = i[ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_16 $$ ans = i[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ System.out.println(ans)[ CD ]
Line_16 $$ ans = i-->Line_19 $$ System.out.println(ans)[ FD ]
Line_7 $$ long ans = 1-->Line_19 $$ System.out.println(ans)[ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_11 $$ for (long i = 2; i < N + 1; i++) [ FD ]
Line_15 $$ tem = Math.abs(A - tmp)-->Line_14 $$ if (tem > Math.abs(A - tmp)) [ FD ]
Line_11 $$ for (long i = 2; i < N + 1; i++) -->Line_16 $$ ans = i[ FD ]
