Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int givenNumber = scanner.nextInt()[ CD ]
Line_4 $$ int givenNumber = scanner.nextInt()-->Line_4 $$ int givenNumber = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int givenNumber = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int baseTmp = scanner.nextInt()[ CD ]
Line_5 $$ int baseTmp = scanner.nextInt()-->Line_5 $$ int baseTmp = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_5 $$ int baseTmp = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int preferableTmp = scanner.nextInt()[ CD ]
Line_6 $$ int preferableTmp = scanner.nextInt()-->Line_6 $$ int preferableTmp = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ int preferableTmp = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] location = new int[givenNumber][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int givenNumber = scanner.nextInt()-->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ FD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ CD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ CD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ FD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_9 $$ location[i] = scanner.nextInt()[ CD ]
Line_9 $$ location[i] = scanner.nextInt()-->Line_9 $$ location[i] = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_9 $$ location[i] = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double tmpDif = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ double currentDif = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int targetIndex = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ CD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ CD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)[ CD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)[ FD ]
Line_11 $$ double tmpDif = 0-->Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)[ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)[ CD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_16 $$ if (j == 0) [ CD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_16 $$ if (j == 0) [ FD ]
Line_16 $$ if (j == 0) -->Line_17 $$ targetIndex = j[ CD ]
Line_17 $$ targetIndex = j-->Line_17 $$ targetIndex = j[ FD ]
Line_13 $$ int targetIndex = 0-->Line_17 $$ targetIndex = j[ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_17 $$ targetIndex = j[ FD ]
Line_16 $$ if (j == 0) -->Line_18 $$ currentDif = tmpDif[ CD ]
Line_18 $$ currentDif = tmpDif-->Line_18 $$ currentDif = tmpDif[ FD ]
Line_12 $$ double currentDif = 0-->Line_18 $$ currentDif = tmpDif[ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_18 $$ currentDif = tmpDif[ FD ]
Line_11 $$ double tmpDif = 0-->Line_18 $$ currentDif = tmpDif[ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_20 $$ if (currentDif > tmpDif) [ CD ]
Line_18 $$ currentDif = tmpDif-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_12 $$ double currentDif = 0-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_11 $$ double tmpDif = 0-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_20 $$ if (currentDif > tmpDif) -->Line_21 $$ targetIndex = j[ CD ]
Line_17 $$ targetIndex = j-->Line_21 $$ targetIndex = j[ FD ]
Line_21 $$ targetIndex = j-->Line_21 $$ targetIndex = j[ FD ]
Line_13 $$ int targetIndex = 0-->Line_21 $$ targetIndex = j[ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_21 $$ targetIndex = j[ FD ]
Line_20 $$ if (currentDif > tmpDif) -->Line_22 $$ currentDif = tmpDif[ CD ]
Line_18 $$ currentDif = tmpDif-->Line_22 $$ currentDif = tmpDif[ FD ]
Line_22 $$ currentDif = tmpDif-->Line_22 $$ currentDif = tmpDif[ FD ]
Line_12 $$ double currentDif = 0-->Line_22 $$ currentDif = tmpDif[ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_22 $$ currentDif = tmpDif[ FD ]
Line_11 $$ double tmpDif = 0-->Line_22 $$ currentDif = tmpDif[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_25 $$ System.out.println(targetIndex + 1)[ CD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ FD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ FD ]
Line_8 $$ for (int i = 0; i < givenNumber; i++) -->Line_8 $$ for (int i = 0; i < givenNumber; i++) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_14 $$ for (int j = 0; j < location.length; j++) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_16 $$ if (j == 0) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_17 $$ targetIndex = j[ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_18 $$ currentDif = tmpDif[ FD ]
Line_18 $$ currentDif = tmpDif-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_22 $$ currentDif = tmpDif-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_20 $$ if (currentDif > tmpDif) [ FD ]
Line_14 $$ for (int j = 0; j < location.length; j++) -->Line_21 $$ targetIndex = j[ FD ]
Line_15 $$ tmpDif = Math.abs((baseTmp - location[j] * 0.006) - preferableTmp)-->Line_22 $$ currentDif = tmpDif[ FD ]
