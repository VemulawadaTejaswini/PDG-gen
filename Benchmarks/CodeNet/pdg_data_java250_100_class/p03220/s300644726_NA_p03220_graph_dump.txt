Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int a = sc.nextInt()[ CD ]
Line_6 $$ int a = sc.nextInt()-->Line_6 $$ int a = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int a = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] hArr = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ hArr[i] = sc.nextInt()[ CD ]
Line_9 $$ hArr[i] = sc.nextInt()-->Line_9 $$ hArr[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ hArr[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double diff = Math.abs((double) a - ((double) t - (double) hArr[0] * 0.006))[ CD ]
Line_11 $$ double diff = Math.abs((double) a - ((double) t - (double) hArr[0] * 0.006))-->Line_11 $$ double diff = Math.abs((double) a - ((double) t - (double) hArr[0] * 0.006))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int ans = 1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ CD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ CD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))[ CD ]
Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))-->Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))[ CD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_15 $$ if (diff > tmpDiff) [ CD ]
Line_11 $$ double diff = Math.abs((double) a - ((double) t - (double) hArr[0] * 0.006))-->Line_15 $$ if (diff > tmpDiff) [ FD ]
Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))-->Line_15 $$ if (diff > tmpDiff) [ FD ]
Line_15 $$ if (diff > tmpDiff) -->Line_16 $$ diff = tmpDiff[ CD ]
Line_16 $$ diff = tmpDiff-->Line_16 $$ diff = tmpDiff[ FD ]
Line_11 $$ double diff = Math.abs((double) a - ((double) t - (double) hArr[0] * 0.006))-->Line_16 $$ diff = tmpDiff[ FD ]
Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))-->Line_16 $$ diff = tmpDiff[ FD ]
Line_15 $$ if (diff > tmpDiff) -->Line_17 $$ ans = i + 1[ CD ]
Line_17 $$ ans = i + 1-->Line_17 $$ ans = i + 1[ FD ]
Line_12 $$ int ans = 1-->Line_17 $$ ans = i + 1[ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_17 $$ ans = i + 1[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_17 $$ ans = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(ans)[ CD ]
Line_17 $$ ans = i + 1-->Line_20 $$ System.out.println(ans)[ FD ]
Line_12 $$ int ans = 1-->Line_20 $$ System.out.println(ans)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_13 $$ for (int i = 1; i < hArr.length; i++) [ FD ]
Line_16 $$ diff = tmpDiff-->Line_15 $$ if (diff > tmpDiff) [ FD ]
Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))-->Line_15 $$ if (diff > tmpDiff) [ FD ]
Line_14 $$ double tmpDiff = Math.abs((double) a - ((double) t - (double) hArr[i] * 0.006))-->Line_16 $$ diff = tmpDiff[ FD ]
Line_13 $$ for (int i = 1; i < hArr.length; i++) -->Line_17 $$ ans = i + 1[ FD ]
