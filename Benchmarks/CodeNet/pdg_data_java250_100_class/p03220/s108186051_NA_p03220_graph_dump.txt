Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int source = Integer.parseInt(sc.next())[ CD ]
Line_5 $$ int source = Integer.parseInt(sc.next())-->Line_5 $$ int source = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int source = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int target = Integer.parseInt(sc.next())[ CD ]
Line_6 $$ int target = Integer.parseInt(sc.next())-->Line_6 $$ int target = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int target = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int[] palace = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ double min = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ palace[i] = Integer.parseInt(sc.next())[ CD ]
Line_11 $$ palace[i] = Integer.parseInt(sc.next())-->Line_11 $$ palace[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ palace[i] = Integer.parseInt(sc.next())[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_12 $$ double tmp = (source - (palace[i] * 0.006))[ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if (min > Math.abs(tmp - target)) [ CD ]
Line_9 $$ double min = Integer.MAX_VALUE-->Line_13 $$ if (min > Math.abs(tmp - target)) [ FD ]
Line_13 $$ if (min > Math.abs(tmp - target)) -->Line_14 $$ min = Math.abs(tmp - target)[ CD ]
Line_14 $$ min = Math.abs(tmp - target)-->Line_14 $$ min = Math.abs(tmp - target)[ FD ]
Line_9 $$ double min = Integer.MAX_VALUE-->Line_14 $$ min = Math.abs(tmp - target)[ FD ]
Line_14 $$ min = Math.abs(tmp - target)-->Line_14 $$ min = Math.abs(tmp - target)[ CD ]
Line_13 $$ if (min > Math.abs(tmp - target)) -->Line_15 $$ ans = i[ CD ]
Line_15 $$ ans = i-->Line_15 $$ ans = i[ FD ]
Line_8 $$ int ans = 0-->Line_15 $$ ans = i[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_15 $$ ans = i[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ System.out.println(ans + 1)[ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ min = Math.abs(tmp - target)-->Line_13 $$ if (min > Math.abs(tmp - target)) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_15 $$ ans = i[ FD ]
