Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int a = sc.nextInt()[ CD ]
Line_6 $$ int a = sc.nextInt()-->Line_6 $$ int a = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int a = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double mingap = Double.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ int h = sc.nextInt()[ CD ]
Line_10 $$ int h = sc.nextInt()-->Line_10 $$ int h = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ int h = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)[ CD ]
Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)-->Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_12 $$ if (gap < mingap) [ CD ]
Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)-->Line_12 $$ if (gap < mingap) [ FD ]
Line_8 $$ double mingap = Double.MAX_VALUE-->Line_12 $$ if (gap < mingap) [ FD ]
Line_12 $$ if (gap < mingap) -->Line_13 $$ mingap = gap[ CD ]
Line_13 $$ mingap = gap-->Line_13 $$ mingap = gap[ FD ]
Line_8 $$ double mingap = Double.MAX_VALUE-->Line_13 $$ mingap = gap[ FD ]
Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)-->Line_13 $$ mingap = gap[ FD ]
Line_12 $$ if (gap < mingap) -->Line_14 $$ ans = i + 1[ CD ]
Line_14 $$ ans = i + 1-->Line_14 $$ ans = i + 1[ FD ]
Line_7 $$ int ans = 0-->Line_14 $$ ans = i + 1[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_14 $$ ans = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(ans)[ CD ]
Line_14 $$ ans = i + 1-->Line_17 $$ System.out.println(ans)[ FD ]
Line_7 $$ int ans = 0-->Line_17 $$ System.out.println(ans)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)-->Line_12 $$ if (gap < mingap) [ FD ]
Line_13 $$ mingap = gap-->Line_12 $$ if (gap < mingap) [ FD ]
Line_11 $$ double gap = Math.abs(t - (h * 0.006) - a)-->Line_13 $$ mingap = gap[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_14 $$ ans = i + 1[ FD ]
