Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_5 $$ int t = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int t = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double a = sc.nextDouble()[ CD ]
Line_6 $$ double a = sc.nextDouble()-->Line_6 $$ double a = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double a = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] h = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int flag = 1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double[] t_ave = new double[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ h[i] = sc.nextInt()[ CD ]
Line_11 $$ h[i] = sc.nextInt()-->Line_11 $$ h[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ h[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ t_ave[i] = t - h[i] * 0.006[ CD ]
Line_5 $$ int t = sc.nextInt()-->Line_14 $$ t_ave[i] = t - h[i] * 0.006[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ double min = Math.abs(a - t_ave[0])[ CD ]
Line_16 $$ double min = Math.abs(a - t_ave[0])-->Line_16 $$ double min = Math.abs(a - t_ave[0])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ for (int i = 1; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ CD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ CD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_18 $$ if (min > Math.abs(a - t_ave[i])) [ CD ]
Line_16 $$ double min = Math.abs(a - t_ave[0])-->Line_18 $$ if (min > Math.abs(a - t_ave[i])) [ FD ]
Line_18 $$ if (min > Math.abs(a - t_ave[i])) -->Line_19 $$ min = Math.abs(a - t_ave[i])[ CD ]
Line_19 $$ min = Math.abs(a - t_ave[i])-->Line_19 $$ min = Math.abs(a - t_ave[i])[ FD ]
Line_16 $$ double min = Math.abs(a - t_ave[0])-->Line_19 $$ min = Math.abs(a - t_ave[i])[ FD ]
Line_19 $$ min = Math.abs(a - t_ave[i])-->Line_19 $$ min = Math.abs(a - t_ave[i])[ CD ]
Line_18 $$ if (min > Math.abs(a - t_ave[i])) -->Line_20 $$ flag = i + 1[ CD ]
Line_20 $$ flag = i + 1-->Line_20 $$ flag = i + 1[ FD ]
Line_8 $$ int flag = 1-->Line_20 $$ flag = i + 1[ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_20 $$ flag = i + 1[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_20 $$ flag = i + 1[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_20 $$ flag = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(flag)[ CD ]
Line_20 $$ flag = i + 1-->Line_23 $$ System.out.println(flag)[ FD ]
Line_8 $$ int flag = 1-->Line_23 $$ System.out.println(flag)[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_17 $$ for (int i = 1; i < n; i++) [ FD ]
Line_19 $$ min = Math.abs(a - t_ave[i])-->Line_18 $$ if (min > Math.abs(a - t_ave[i])) [ FD ]
Line_17 $$ for (int i = 1; i < n; i++) -->Line_20 $$ flag = i + 1[ FD ]
