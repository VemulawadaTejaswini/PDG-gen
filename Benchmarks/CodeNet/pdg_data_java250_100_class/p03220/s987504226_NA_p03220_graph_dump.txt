Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int T = Integer.parseInt(sc.next())[ CD ]
Line_5 $$ int T = Integer.parseInt(sc.next())-->Line_5 $$ int T = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int T = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int A = Integer.parseInt(sc.next())[ CD ]
Line_6 $$ int A = Integer.parseInt(sc.next())-->Line_6 $$ int A = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int A = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ ArrayList<Integer> high = new ArrayList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_9 $$ high.add(Integer.parseInt(sc.next()))[ CD ]
Line_7 $$ ArrayList<Integer> high = new ArrayList()-->Line_9 $$ high.add(Integer.parseInt(sc.next()))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ high.add(Integer.parseInt(sc.next()))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_11 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int min = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ CD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ CD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_15 $$ int tmp = T * 1000 - high.get(i) * 6[ CD ]
Line_7 $$ ArrayList<Integer> high = new ArrayList()-->Line_15 $$ int tmp = T * 1000 - high.get(i) * 6[ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_15 $$ int tmp = T * 1000 - high.get(i) * 6[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_15 $$ int tmp = T * 1000 - high.get(i) * 6[ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_16 $$ if (Math.min(min, Math.abs(1000 * A - tmp)) == Math.abs(1000 * A - tmp)) [ CD ]
Line_13 $$ int min = Integer.MAX_VALUE-->Line_16 $$ if (Math.min(min, Math.abs(1000 * A - tmp)) == Math.abs(1000 * A - tmp)) [ FD ]
Line_16 $$ if (Math.min(min, Math.abs(1000 * A - tmp)) == Math.abs(1000 * A - tmp)) -->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ CD ]
Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))-->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ FD ]
Line_13 $$ int min = Integer.MAX_VALUE-->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ FD ]
Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))-->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ CD ]
Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))-->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ FD ]
Line_13 $$ int min = Integer.MAX_VALUE-->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ FD ]
Line_16 $$ if (Math.min(min, Math.abs(1000 * A - tmp)) == Math.abs(1000 * A - tmp)) -->Line_18 $$ ans = i + 1[ CD ]
Line_18 $$ ans = i + 1-->Line_18 $$ ans = i + 1[ FD ]
Line_12 $$ int ans = 0-->Line_18 $$ ans = i + 1[ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_18 $$ ans = i + 1[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_18 $$ ans = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(ans)[ CD ]
Line_18 $$ ans = i + 1-->Line_23 $$ System.out.println(ans)[ FD ]
Line_12 $$ int ans = 0-->Line_23 $$ System.out.println(ans)[ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < N; i++) -->Line_8 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_14 $$ for (int i = 0; i < N; i++) [ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_15 $$ int tmp = T * 1000 - high.get(i) * 6[ FD ]
Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))-->Line_16 $$ if (Math.min(min, Math.abs(1000 * A - tmp)) == Math.abs(1000 * A - tmp)) [ FD ]
Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))-->Line_17 $$ min = Math.min(min, Math.abs(1000 * A - tmp))[ FD ]
Line_14 $$ for (int i = 0; i < N; i++) -->Line_18 $$ ans = i + 1[ FD ]
