Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_4 $$ int n = scan.nextInt()-->Line_4 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int n = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = scan.nextInt()[ CD ]
Line_5 $$ int t = scan.nextInt()-->Line_5 $$ int t = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ int t = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int goal = scan.nextInt()[ CD ]
Line_6 $$ int goal = scan.nextInt()-->Line_6 $$ int goal = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ int goal = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] height = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double ans = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int x = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ CD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_11 $$ double ave = t - scan.nextInt() * 0.006[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_11 $$ double ave = t - scan.nextInt() * 0.006[ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_12 $$ if (ans > Math.abs(goal - ave)) [ CD ]
Line_8 $$ double ans = Integer.MAX_VALUE-->Line_12 $$ if (ans > Math.abs(goal - ave)) [ FD ]
Line_12 $$ if (ans > Math.abs(goal - ave)) -->Line_13 $$ ans = Math.abs(goal - ave)[ CD ]
Line_13 $$ ans = Math.abs(goal - ave)-->Line_13 $$ ans = Math.abs(goal - ave)[ FD ]
Line_8 $$ double ans = Integer.MAX_VALUE-->Line_13 $$ ans = Math.abs(goal - ave)[ FD ]
Line_13 $$ ans = Math.abs(goal - ave)-->Line_13 $$ ans = Math.abs(goal - ave)[ CD ]
Line_12 $$ if (ans > Math.abs(goal - ave)) -->Line_14 $$ x = i + 1[ CD ]
Line_14 $$ x = i + 1-->Line_14 $$ x = i + 1[ FD ]
Line_9 $$ int x = 0-->Line_14 $$ x = i + 1[ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_14 $$ x = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(x)[ CD ]
Line_14 $$ x = i + 1-->Line_17 $$ System.out.println(x)[ FD ]
Line_9 $$ int x = 0-->Line_17 $$ System.out.println(x)[ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_10 $$ for (int i = 0; i < height.length; i++) [ FD ]
Line_13 $$ ans = Math.abs(goal - ave)-->Line_12 $$ if (ans > Math.abs(goal - ave)) [ FD ]
Line_10 $$ for (int i = 0; i < height.length; i++) -->Line_14 $$ x = i + 1[ FD ]
