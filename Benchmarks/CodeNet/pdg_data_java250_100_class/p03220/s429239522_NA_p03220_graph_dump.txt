Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ String[] tmpArray = br.readLine().split(" ")[ CD ]
Line_5 $$ String[] tmpArray = br.readLine().split(" ")-->Line_5 $$ String[] tmpArray = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String[] tmpArray = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ int t = Integer.parseInt(tmpArray[0])[ CD ]
Line_6 $$ int t = Integer.parseInt(tmpArray[0])-->Line_6 $$ int t = Integer.parseInt(tmpArray[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ int a = Integer.parseInt(tmpArray[1])[ CD ]
Line_7 $$ int a = Integer.parseInt(tmpArray[1])-->Line_7 $$ int a = Integer.parseInt(tmpArray[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ double temper[] = new double[n][ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_9 $$ tmpArray = br.readLine().split(" ")[ CD ]
Line_5 $$ String[] tmpArray = br.readLine().split(" ")-->Line_9 $$ tmpArray = br.readLine().split(" ")[ FD ]
Line_9 $$ tmpArray = br.readLine().split(" ")-->Line_9 $$ tmpArray = br.readLine().split(" ")[ FD ]
Line_9 $$ tmpArray = br.readLine().split(" ")-->Line_9 $$ tmpArray = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ tmpArray = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_10 $$ double dt = Double.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_11 $$ int index = -1[ CD ]
Line_11 $$ int index = -1-->Line_11 $$ int index = -1[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ int h = Integer.parseInt(tmpArray[i])[ CD ]
Line_13 $$ int h = Integer.parseInt(tmpArray[i])-->Line_13 $$ int h = Integer.parseInt(tmpArray[i])[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ temper[i] = t - 0.006 * h[ CD ]
Line_6 $$ int t = Integer.parseInt(tmpArray[0])-->Line_14 $$ temper[i] = t - 0.006 * h[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_15 $$ if (dt > Math.abs(temper[i] - a)) [ CD ]
Line_10 $$ double dt = Double.MAX_VALUE-->Line_15 $$ if (dt > Math.abs(temper[i] - a)) [ FD ]
Line_15 $$ if (dt > Math.abs(temper[i] - a)) -->Line_16 $$ dt = Math.abs(temper[i] - a)[ CD ]
Line_16 $$ dt = Math.abs(temper[i] - a)-->Line_16 $$ dt = Math.abs(temper[i] - a)[ FD ]
Line_10 $$ double dt = Double.MAX_VALUE-->Line_16 $$ dt = Math.abs(temper[i] - a)[ FD ]
Line_16 $$ dt = Math.abs(temper[i] - a)-->Line_16 $$ dt = Math.abs(temper[i] - a)[ CD ]
Line_15 $$ if (dt > Math.abs(temper[i] - a)) -->Line_17 $$ index = i[ CD ]
Line_17 $$ index = i-->Line_17 $$ index = i[ FD ]
Line_11 $$ int index = -1-->Line_17 $$ index = i[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_17 $$ index = i[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_20 $$ System.out.println(index + 1)[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ dt = Math.abs(temper[i] - a)-->Line_15 $$ if (dt > Math.abs(temper[i] - a)) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_17 $$ index = i[ FD ]
