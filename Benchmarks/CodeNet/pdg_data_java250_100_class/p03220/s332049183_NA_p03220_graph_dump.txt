Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double t = sc.nextDouble()[ CD ]
Line_5 $$ double t = sc.nextDouble()-->Line_5 $$ double t = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ double t = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double a = sc.nextDouble()[ CD ]
Line_6 $$ double a = sc.nextDouble()-->Line_6 $$ double a = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double a = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int answer = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double answertempdiff = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_9 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ for (int i = 1; i <= n; i++) [ CD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_10 $$ double temp = t - (sc.nextDouble() * 0.006)[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ double temp = t - (sc.nextDouble() * 0.006)[ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_11 $$ if (Math.abs(a - temp) < answertempdiff) [ CD ]
Line_8 $$ double answertempdiff = Integer.MAX_VALUE-->Line_11 $$ if (Math.abs(a - temp) < answertempdiff) [ FD ]
Line_11 $$ if (Math.abs(a - temp) < answertempdiff) -->Line_12 $$ answer = i[ CD ]
Line_12 $$ answer = i-->Line_12 $$ answer = i[ FD ]
Line_7 $$ int answer = 0-->Line_12 $$ answer = i[ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_12 $$ answer = i[ FD ]
Line_11 $$ if (Math.abs(a - temp) < answertempdiff) -->Line_13 $$ answertempdiff = Math.abs(a - temp)[ CD ]
Line_13 $$ answertempdiff = Math.abs(a - temp)-->Line_13 $$ answertempdiff = Math.abs(a - temp)[ FD ]
Line_8 $$ double answertempdiff = Integer.MAX_VALUE-->Line_13 $$ answertempdiff = Math.abs(a - temp)[ FD ]
Line_13 $$ answertempdiff = Math.abs(a - temp)-->Line_13 $$ answertempdiff = Math.abs(a - temp)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(answer)[ CD ]
Line_12 $$ answer = i-->Line_16 $$ System.out.println(answer)[ FD ]
Line_7 $$ int answer = 0-->Line_16 $$ System.out.println(answer)[ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_9 $$ for (int i = 1; i <= n; i++) [ FD ]
Line_13 $$ answertempdiff = Math.abs(a - temp)-->Line_11 $$ if (Math.abs(a - temp) < answertempdiff) [ FD ]
Line_9 $$ for (int i = 1; i <= n; i++) -->Line_12 $$ answer = i[ FD ]
