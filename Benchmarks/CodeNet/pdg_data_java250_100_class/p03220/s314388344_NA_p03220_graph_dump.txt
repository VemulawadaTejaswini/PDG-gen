Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner stdIn = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = stdIn.nextInt()[ CD ]
Line_4 $$ int n = stdIn.nextInt()-->Line_4 $$ int n = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_4 $$ int n = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int t = stdIn.nextInt()[ CD ]
Line_5 $$ int t = stdIn.nextInt()-->Line_5 $$ int t = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_5 $$ int t = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int a = stdIn.nextInt()[ CD ]
Line_6 $$ int a = stdIn.nextInt()-->Line_6 $$ int a = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_6 $$ int a = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] place = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = stdIn.nextInt()-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ place[i] = stdIn.nextInt()[ CD ]
Line_9 $$ place[i] = stdIn.nextInt()-->Line_9 $$ place[i] = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_9 $$ place[i] = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double ans = Double.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int j = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = stdIn.nextInt()-->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_14 $$ double ave = t - (place[i] * 0.006)[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_15 $$ double an = (ave - a) > 0 ? ave - a : a - ave[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_16 $$ if (ans > an) [ CD ]
Line_11 $$ double ans = Double.MAX_VALUE-->Line_16 $$ if (ans > an) [ FD ]
Line_15 $$ double an = (ave - a) > 0 ? ave - a : a - ave-->Line_16 $$ if (ans > an) [ FD ]
Line_16 $$ if (ans > an) -->Line_17 $$ j = i + 1[ CD ]
Line_17 $$ j = i + 1-->Line_17 $$ j = i + 1[ FD ]
Line_12 $$ int j = 0-->Line_17 $$ j = i + 1[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_17 $$ j = i + 1[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_17 $$ j = i + 1[ FD ]
Line_16 $$ if (ans > an) -->Line_18 $$ ans = an[ CD ]
Line_18 $$ ans = an-->Line_18 $$ ans = an[ FD ]
Line_11 $$ double ans = Double.MAX_VALUE-->Line_18 $$ ans = an[ FD ]
Line_15 $$ double an = (ave - a) > 0 ? ave - a : a - ave-->Line_18 $$ ans = an[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(j)[ CD ]
Line_17 $$ j = i + 1-->Line_21 $$ System.out.println(j)[ FD ]
Line_12 $$ int j = 0-->Line_21 $$ System.out.println(j)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) [ FD ]
Line_18 $$ ans = an-->Line_16 $$ if (ans > an) [ FD ]
Line_15 $$ double an = (ave - a) > 0 ? ave - a : a - ave-->Line_16 $$ if (ans > an) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) -->Line_17 $$ j = i + 1[ FD ]
Line_15 $$ double an = (ave - a) > 0 ? ave - a : a - ave-->Line_18 $$ ans = an[ FD ]
