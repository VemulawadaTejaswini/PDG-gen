Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ double n = sc.nextDouble()-->Line_4 $$ double n = sc.nextDouble()[ CD ]
Line_3 $$ try (Scanner sc = new Scanner(System.in)) -->Line_4 $$ double n = sc.nextDouble()[ FD ]
Line_6 $$ if (n % 2 == 0) -->Line_7 $$ p = 1f / 2f[ CD ]
Line_5 $$ double p = (n / 2) / n-->Line_7 $$ p = 1f / 2f[ FD ]
Line_7 $$ p = 1f / 2f-->Line_7 $$ p = 1f / 2f[ FD ]
Line_6 $$ if (n % 2 == 0) -->Line_10 $$ p = (Math.floor(n / 2) + 1) / n[ CD ]
Line_5 $$ double p = (n / 2) / n-->Line_10 $$ p = (Math.floor(n / 2) + 1) / n[ FD ]
Line_7 $$ p = 1f / 2f-->Line_10 $$ p = (Math.floor(n / 2) + 1) / n[ FD ]
Line_10 $$ p = (Math.floor(n / 2) + 1) / n-->Line_10 $$ p = (Math.floor(n / 2) + 1) / n[ FD ]
Line_4 $$ double n = sc.nextDouble()-->Line_10 $$ p = (Math.floor(n / 2) + 1) / n[ FD ]
Line_5 $$ double p = (n / 2) / n-->Line_12 $$ System.out.println(p)[ FD ]
Line_7 $$ p = 1f / 2f-->Line_12 $$ System.out.println(p)[ FD ]
Line_10 $$ p = (Math.floor(n / 2) + 1) / n-->Line_12 $$ System.out.println(p)[ FD ]
