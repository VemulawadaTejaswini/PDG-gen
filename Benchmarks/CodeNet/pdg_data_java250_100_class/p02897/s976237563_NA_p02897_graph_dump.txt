Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_6 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_6 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_6 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_6 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_7 $$ if (i % 2 != 0) [ CD ]
Line_7 $$ if (i % 2 != 0) -->Line_8 $$ count += 1[ CD ]
Line_8 $$ count += 1-->Line_8 $$ count += 1[ FD ]
Line_5 $$ int count = 0-->Line_8 $$ count += 1[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ double ans = (double) count / N[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ System.out.println(ans)[ CD ]
Line_11 $$ double ans = (double) count / N-->Line_12 $$ System.out.println(ans)[ FD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_6 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_6 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 1; i <= N; i++) -->Line_6 $$ for (int i = 1; i <= N; i++) [ FD ]
