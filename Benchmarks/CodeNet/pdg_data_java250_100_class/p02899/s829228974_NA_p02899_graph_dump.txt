Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_4 $$ int N = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Integer a[][] = new Integer[2][N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_7 $$ a[0][i] = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ a[0][i] = Integer.parseInt(sc.next())-->Line_7 $$ a[0][i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ a[0][i] = Integer.parseInt(sc.next())[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_8 $$ a[1][i] = i + 1[ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_8 $$ a[1][i] = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ Map<Integer, Integer> map = new TreeMap<Integer, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ CD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ CD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_12 $$ map.put(a[0][i], a[1][i])[ CD ]
Line_10 $$ Map<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_12 $$ map.put(a[0][i], a[1][i])[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int k = 0[ CD ]
Line_10 $$ Map<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_14 $$ for (int key : map.keySet()) [ FD ]
Line_14 $$ for (int key : map.keySet()) -->Line_15 $$ a[0][k] = key[ FD ]
Line_13 $$ int k = 0-->Line_16 $$ a[1][k++] = map.get(key)[ FD ]
Line_16 $$ a[1][k++] = map.get(key)-->Line_16 $$ a[1][k++] = map.get(key)[ CD ]
Line_10 $$ Map<Integer, Integer> map = new TreeMap<Integer, Integer>()-->Line_16 $$ a[1][k++] = map.get(key)[ FD ]
Line_14 $$ for (int key : map.keySet()) -->Line_16 $$ a[1][k++] = map.get(key)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = Integer.parseInt(sc.next())-->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ CD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ CD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_20 $$ sb.append(a[1][i])[ CD ]
Line_18 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append(a[1][i])[ FD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_21 $$ sb.append(" ")[ CD ]
Line_18 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(sb)[ CD ]
Line_18 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ System.out.println(sb)[ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_6 $$ for (int i = 0; i < N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N; i++) -->Line_8 $$ a[1][i] = i + 1[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])-->Line_11 $$ for (int i = 0; i < N; i++) map.put(a[0][i], a[1][i])[ FD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
Line_19 $$ for (int i = 0; i < N; i++) -->Line_19 $$ for (int i = 0; i < N; i++) [ FD ]
