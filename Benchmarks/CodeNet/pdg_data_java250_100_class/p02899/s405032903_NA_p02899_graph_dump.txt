Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ final int number = Integer.parseInt(sc.nextLine())-->Line_4 $$ final int number = Integer.parseInt(sc.nextLine())[ CD ]
Line_3 $$ try (final Scanner sc = new Scanner(System.in)) -->Line_4 $$ final int number = Integer.parseInt(sc.nextLine())[ FD ]
Line_6 $$ final String[] values = sc.nextLine().split(" ")-->Line_6 $$ final String[] values = sc.nextLine().split(" ")[ CD ]
Line_3 $$ try (final Scanner sc = new Scanner(System.in)) -->Line_6 $$ final String[] values = sc.nextLine().split(" ")[ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_7 $$ for (int i = 0; i < values.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_7 $$ for (int i = 0; i < values.length; i++) [ CD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_7 $$ for (int i = 0; i < values.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_8 $$ final int val = Integer.parseInt(values[i])[ CD ]
Line_8 $$ final int val = Integer.parseInt(values[i])-->Line_8 $$ final int val = Integer.parseInt(values[i])[ CD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_9 $$ mem.put(val, i + 1)[ CD ]
Line_5 $$ final Map<Integer, Integer> mem = new HashMap<Integer, Integer>()-->Line_9 $$ mem.put(val, i + 1)[ FD ]
Line_8 $$ final int val = Integer.parseInt(values[i])-->Line_9 $$ mem.put(val, i + 1)[ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ CD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ CD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_13 $$ sb.append(mem.get(i) + " ")[ CD ]
Line_11 $$ final StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(mem.get(i) + " ")[ FD ]
Line_5 $$ final Map<Integer, Integer> mem = new HashMap<Integer, Integer>()-->Line_13 $$ sb.append(mem.get(i) + " ")[ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_13 $$ sb.append(mem.get(i) + " ")[ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_13 $$ sb.append(mem.get(i) + " ")[ FD ]
Line_15 $$ final String result = sb.toString().trim()-->Line_15 $$ final String result = sb.toString().trim()[ CD ]
Line_11 $$ final StringBuilder sb = new StringBuilder()-->Line_15 $$ final String result = sb.toString().trim()[ FD ]
Line_15 $$ final String result = sb.toString().trim()-->Line_16 $$ System.out.println(result)[ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_7 $$ for (int i = 0; i < values.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_7 $$ for (int i = 0; i < values.length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < values.length; i++) -->Line_7 $$ for (int i = 0; i < values.length; i++) [ FD ]
Line_8 $$ final int val = Integer.parseInt(values[i])-->Line_9 $$ mem.put(val, i + 1)[ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_12 $$ for (int i = 1; i <= values.length; i++) [ FD ]
Line_12 $$ for (int i = 1; i <= values.length; i++) -->Line_13 $$ sb.append(mem.get(i) + " ")[ FD ]
