Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int n = Integer.parseInt(in.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(in.readLine())-->Line_4 $$ int n = Integer.parseInt(in.readLine())[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(in.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int[] a = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String[] str = in.readLine().split(" ")[ CD ]
Line_6 $$ String[] str = in.readLine().split(" ")-->Line_6 $$ String[] str = in.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String[] str = in.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int[] turn = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int n = Integer.parseInt(in.readLine())-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ a[i] = Integer.parseInt(str[i])[ CD ]
Line_9 $$ a[i] = Integer.parseInt(str[i])-->Line_9 $$ a[i] = Integer.parseInt(str[i])[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ turn[a[i] - 1] = i + 1[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ turn[a[i] - 1] = i + 1[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(in.readLine())-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ System.out.print(turn[i])[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (i != n - 1)[ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (i != n - 1)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (i != n - 1)[ FD ]
Line_14 $$ if (i != n - 1)-->Line_15 $$ System.out.print(" ")[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ turn[a[i] - 1] = i + 1[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (i != n - 1)[ FD ]
