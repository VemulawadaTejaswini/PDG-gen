Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ while (true) -->Line_5 $$ String cards = sc.next()[ CD ]
Line_5 $$ String cards = sc.next()-->Line_5 $$ String cards = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String cards = sc.next()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ if (cards.equals("-"))[ CD ]
Line_5 $$ String cards = sc.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_6 $$ if (cards.equals("-"))-->Line_6 $$ if (cards.equals("-"))[ CD ]
Line_5 $$ String cards = sc.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_4 $$ while (true) -->Line_7 $$ int shuffleNum = sc.nextInt()[ CD ]
Line_7 $$ int shuffleNum = sc.nextInt()-->Line_7 $$ int shuffleNum = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int shuffleNum = sc.nextInt()[ FD ]
Line_4 $$ while (true) -->Line_8 $$ StringBuilder sb = new StringBuilder(cards)[ CD ]
Line_4 $$ while (true) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ CD ]
Line_4 $$ while (true) -->Line_4 $$ while (true) [ CD ]
Line_7 $$ int shuffleNum = sc.nextInt()-->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ CD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ CD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_10 $$ int h = sc.nextInt()[ CD ]
Line_10 $$ int h = sc.nextInt()-->Line_10 $$ int h = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ int h = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_11 $$ String cutStr = sb.substring(0, h)[ CD ]
Line_11 $$ String cutStr = sb.substring(0, h)-->Line_11 $$ String cutStr = sb.substring(0, h)[ CD ]
Line_8 $$ StringBuilder sb = new StringBuilder(cards)-->Line_11 $$ String cutStr = sb.substring(0, h)[ FD ]
Line_10 $$ int h = sc.nextInt()-->Line_11 $$ String cutStr = sb.substring(0, h)[ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_12 $$ sb.delete(0, h)[ CD ]
Line_8 $$ StringBuilder sb = new StringBuilder(cards)-->Line_12 $$ sb.delete(0, h)[ FD ]
Line_10 $$ int h = sc.nextInt()-->Line_12 $$ sb.delete(0, h)[ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_13 $$ sb.append(cutStr)[ CD ]
Line_8 $$ StringBuilder sb = new StringBuilder(cards)-->Line_13 $$ sb.append(cutStr)[ FD ]
Line_11 $$ String cutStr = sb.substring(0, h)-->Line_13 $$ sb.append(cutStr)[ FD ]
Line_4 $$ while (true) -->Line_15 $$ System.out.println(sb.toString())[ CD ]
Line_8 $$ StringBuilder sb = new StringBuilder(cards)-->Line_15 $$ System.out.println(sb.toString())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_17 $$ sc.close()[ FD ]
Line_5 $$ String cards = sc.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_5 $$ String cards = sc.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_8 $$ StringBuilder sb = new StringBuilder(cards)-->Line_15 $$ System.out.println(sb.toString())[ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ FD ]
Line_9 $$ for (int i = 0; i < shuffleNum; i++) -->Line_9 $$ for (int i = 0; i < shuffleNum; i++) [ FD ]
Line_10 $$ int h = sc.nextInt()-->Line_11 $$ String cutStr = sb.substring(0, h)[ FD ]
Line_10 $$ int h = sc.nextInt()-->Line_12 $$ sb.delete(0, h)[ FD ]
Line_11 $$ String cutStr = sb.substring(0, h)-->Line_13 $$ sb.append(cutStr)[ FD ]
