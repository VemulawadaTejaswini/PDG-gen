Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_8 $$ while (null != (str = kb.readLine())) [ FD ]
Line_5 $$ String str-->Line_8 $$ while (null != (str = kb.readLine())) [ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_8 $$ while (null != (str = kb.readLine())) [ CD ]
Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ while (null != (str = kb.readLine())) [ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_9 $$ if (str.equals("-")) [ CD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_9 $$ if (str.equals("-")) [ FD ]
Line_5 $$ String str-->Line_9 $$ if (str.equals("-")) [ FD ]
Line_9 $$ if (str.equals("-")) -->Line_9 $$ if (str.equals("-")) [ CD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_9 $$ if (str.equals("-")) [ FD ]
Line_5 $$ String str-->Line_9 $$ if (str.equals("-")) [ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_10 $$ m = Integer.parseInt(kb.readLine())[ CD ]
Line_10 $$ m = Integer.parseInt(kb.readLine())-->Line_10 $$ m = Integer.parseInt(kb.readLine())[ FD ]
Line_7 $$ int m, shuffle, len-->Line_10 $$ m = Integer.parseInt(kb.readLine())[ FD ]
Line_10 $$ m = Integer.parseInt(kb.readLine())-->Line_10 $$ m = Integer.parseInt(kb.readLine())[ CD ]
Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ m = Integer.parseInt(kb.readLine())[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_11 $$ len = str.length()[ CD ]
Line_11 $$ len = str.length()-->Line_11 $$ len = str.length()[ FD ]
Line_7 $$ int m, shuffle, len-->Line_11 $$ len = str.length()[ FD ]
Line_11 $$ len = str.length()-->Line_11 $$ len = str.length()[ CD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_11 $$ len = str.length()[ FD ]
Line_5 $$ String str-->Line_11 $$ len = str.length()[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_12 $$ for (int i = 0; i < m; i++) [ CD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_8 $$ while (null != (str = kb.readLine())) [ CD ]
Line_10 $$ m = Integer.parseInt(kb.readLine())-->Line_12 $$ for (int i = 0; i < m; i++) [ FD ]
Line_7 $$ int m, shuffle, len-->Line_12 $$ for (int i = 0; i < m; i++) [ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_12 $$ for (int i = 0; i < m; i++) [ CD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_12 $$ for (int i = 0; i < m; i++) [ CD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_12 $$ for (int i = 0; i < m; i++) [ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_13 $$ shuffle = Integer.parseInt(kb.readLine())[ CD ]
Line_13 $$ shuffle = Integer.parseInt(kb.readLine())-->Line_13 $$ shuffle = Integer.parseInt(kb.readLine())[ FD ]
Line_7 $$ int m, shuffle, len-->Line_13 $$ shuffle = Integer.parseInt(kb.readLine())[ FD ]
Line_13 $$ shuffle = Integer.parseInt(kb.readLine())-->Line_13 $$ shuffle = Integer.parseInt(kb.readLine())[ CD ]
Line_3 $$ BufferedReader kb = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ shuffle = Integer.parseInt(kb.readLine())[ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_14 $$ cards.append(str.substring(shuffle, len))[ CD ]
Line_6 $$ StringBuilder cards = new StringBuilder(200 + 1)-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_5 $$ String str-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_13 $$ shuffle = Integer.parseInt(kb.readLine())-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_7 $$ int m, shuffle, len-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_11 $$ len = str.length()-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_7 $$ int m, shuffle, len-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_15 $$ cards.append(str.substring(0, shuffle))[ CD ]
Line_6 $$ StringBuilder cards = new StringBuilder(200 + 1)-->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
Line_5 $$ String str-->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
Line_13 $$ shuffle = Integer.parseInt(kb.readLine())-->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
Line_7 $$ int m, shuffle, len-->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_16 $$ str = cards.toString()[ CD ]
Line_16 $$ str = cards.toString()-->Line_16 $$ str = cards.toString()[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_16 $$ str = cards.toString()[ FD ]
Line_5 $$ String str-->Line_16 $$ str = cards.toString()[ FD ]
Line_16 $$ str = cards.toString()-->Line_16 $$ str = cards.toString()[ CD ]
Line_6 $$ StringBuilder cards = new StringBuilder(200 + 1)-->Line_16 $$ str = cards.toString()[ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_17 $$ cards.setLength(0)[ CD ]
Line_6 $$ StringBuilder cards = new StringBuilder(200 + 1)-->Line_17 $$ cards.setLength(0)[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_19 $$ System.out.println(str)[ CD ]
Line_16 $$ str = cards.toString()-->Line_19 $$ System.out.println(str)[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_19 $$ System.out.println(str)[ FD ]
Line_5 $$ String str-->Line_19 $$ System.out.println(str)[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_9 $$ if (str.equals("-")) [ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_9 $$ if (str.equals("-")) [ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_11 $$ len = str.length()[ FD ]
Line_8 $$ while (null != (str = kb.readLine())) -->Line_19 $$ System.out.println(str)[ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_12 $$ for (int i = 0; i < m; i++) [ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_12 $$ for (int i = 0; i < m; i++) [ FD ]
Line_12 $$ for (int i = 0; i < m; i++) -->Line_12 $$ for (int i = 0; i < m; i++) [ FD ]
Line_16 $$ str = cards.toString()-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_13 $$ shuffle = Integer.parseInt(kb.readLine())-->Line_14 $$ cards.append(str.substring(shuffle, len))[ FD ]
Line_16 $$ str = cards.toString()-->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
Line_13 $$ shuffle = Integer.parseInt(kb.readLine())-->Line_15 $$ cards.append(str.substring(0, shuffle))[ FD ]
