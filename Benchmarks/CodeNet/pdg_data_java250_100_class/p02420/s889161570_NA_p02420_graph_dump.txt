Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ while (sc.hasNext()) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ while (sc.hasNext()) -->Line_4 $$ while (sc.hasNext()) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ while (sc.hasNext()) [ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_5 $$ String str = sc.nextLine()[ CD ]
Line_5 $$ String str = sc.nextLine()-->Line_5 $$ String str = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String str = sc.nextLine()[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_6 $$ if (str.equals("-"))[ CD ]
Line_5 $$ String str = sc.nextLine()-->Line_6 $$ if (str.equals("-"))[ FD ]
Line_6 $$ if (str.equals("-"))-->Line_6 $$ if (str.equals("-"))[ CD ]
Line_5 $$ String str = sc.nextLine()-->Line_6 $$ if (str.equals("-"))[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_8 $$ int m = Integer.parseInt(sc.nextLine())[ CD ]
Line_8 $$ int m = Integer.parseInt(sc.nextLine())-->Line_8 $$ int m = Integer.parseInt(sc.nextLine())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ int m = Integer.parseInt(sc.nextLine())[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_9 $$ for (int i = 0; i < m; i++) [ CD ]
Line_4 $$ while (sc.hasNext()) -->Line_4 $$ while (sc.hasNext()) [ CD ]
Line_8 $$ int m = Integer.parseInt(sc.nextLine())-->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_9 $$ for (int i = 0; i < m; i++) [ CD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_9 $$ for (int i = 0; i < m; i++) [ CD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_10 $$ String nextStr = sc.nextLine()[ CD ]
Line_10 $$ String nextStr = sc.nextLine()-->Line_10 $$ String nextStr = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ String nextStr = sc.nextLine()[ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ CD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ CD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_10 $$ String nextStr = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_10 $$ String nextStr = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_4 $$ while (sc.hasNext()) -->Line_16 $$ System.out.println(str)[ CD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_16 $$ System.out.println(str)[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_16 $$ System.out.println(str)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_18 $$ sc.close()[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_6 $$ if (str.equals("-"))[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_6 $$ if (str.equals("-"))[ FD ]
Line_5 $$ String str = sc.nextLine()-->Line_16 $$ System.out.println(str)[ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
Line_9 $$ for (int i = 0; i < m; i++) -->Line_9 $$ for (int i = 0; i < m; i++) [ FD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_10 $$ String nextStr = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
Line_10 $$ String nextStr = sc.nextLine()-->Line_11 $$ str = new StringBuilder().append(str.substring(Integer.parseInt(nextStr))).append(str.substring(0, Integer.parseInt(nextStr))).toString()[ FD ]
