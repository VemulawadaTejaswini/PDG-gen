Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int times, time_count[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ while (sc.hasNext()) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ while (sc.hasNext()) -->Line_5 $$ while (sc.hasNext()) [ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ while (sc.hasNext()) [ FD ]
Line_5 $$ while (sc.hasNext()) -->Line_6 $$ String word = sc.next()[ CD ]
Line_6 $$ String word = sc.next()-->Line_6 $$ String word = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String word = sc.next()[ FD ]
Line_5 $$ while (sc.hasNext()) -->Line_7 $$ if (word.equals("-"))[ CD ]
Line_6 $$ String word = sc.next()-->Line_7 $$ if (word.equals("-"))[ FD ]
Line_7 $$ if (word.equals("-"))-->Line_7 $$ if (word.equals("-"))[ CD ]
Line_6 $$ String word = sc.next()-->Line_7 $$ if (word.equals("-"))[ FD ]
Line_5 $$ while (sc.hasNext()) -->Line_8 $$ times = sc.nextInt()[ CD ]
Line_8 $$ times = sc.nextInt()-->Line_8 $$ times = sc.nextInt()[ FD ]
Line_4 $$ int times, time_count-->Line_8 $$ times = sc.nextInt()[ FD ]
Line_8 $$ times = sc.nextInt()-->Line_8 $$ times = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ times = sc.nextInt()[ FD ]
Line_5 $$ while (sc.hasNext()) -->Line_9 $$ for (int i = 0; i < times; i++) [ CD ]
Line_5 $$ while (sc.hasNext()) -->Line_5 $$ while (sc.hasNext()) [ CD ]
Line_8 $$ times = sc.nextInt()-->Line_9 $$ for (int i = 0; i < times; i++) [ FD ]
Line_4 $$ int times, time_count-->Line_9 $$ for (int i = 0; i < times; i++) [ FD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_9 $$ for (int i = 0; i < times; i++) [ CD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_9 $$ for (int i = 0; i < times; i++) [ CD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_9 $$ for (int i = 0; i < times; i++) [ FD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_10 $$ time_count = sc.nextInt()[ CD ]
Line_10 $$ time_count = sc.nextInt()-->Line_10 $$ time_count = sc.nextInt()[ FD ]
Line_4 $$ int times, time_count-->Line_10 $$ time_count = sc.nextInt()[ FD ]
Line_10 $$ time_count = sc.nextInt()-->Line_10 $$ time_count = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ time_count = sc.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ CD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_6 $$ String word = sc.next()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_6 $$ String word = sc.next()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_10 $$ time_count = sc.nextInt()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_4 $$ int times, time_count-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_6 $$ String word = sc.next()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_6 $$ String word = sc.next()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_10 $$ time_count = sc.nextInt()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_4 $$ int times, time_count-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_5 $$ while (sc.hasNext()) -->Line_13 $$ System.out.println(word)[ CD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_13 $$ System.out.println(word)[ FD ]
Line_6 $$ String word = sc.next()-->Line_13 $$ System.out.println(word)[ FD ]
Line_6 $$ String word = sc.next()-->Line_7 $$ if (word.equals("-"))[ FD ]
Line_6 $$ String word = sc.next()-->Line_7 $$ if (word.equals("-"))[ FD ]
Line_6 $$ String word = sc.next()-->Line_13 $$ System.out.println(word)[ FD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_9 $$ for (int i = 0; i < times; i++) [ FD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_9 $$ for (int i = 0; i < times; i++) [ FD ]
Line_9 $$ for (int i = 0; i < times; i++) -->Line_9 $$ for (int i = 0; i < times; i++) [ FD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_10 $$ time_count = sc.nextInt()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
Line_10 $$ time_count = sc.nextInt()-->Line_11 $$ word = word.substring(time_count, word.length()) + word.substring(0, time_count)[ FD ]
