Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ StringBuilder cards = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int count[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int i[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int h[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) [ CD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) [ CD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) [ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) [ FD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_9 $$ count = Integer.parseInt(br.readLine())[ CD ]
Line_9 $$ count = Integer.parseInt(br.readLine())-->Line_9 $$ count = Integer.parseInt(br.readLine())[ FD ]
Line_5 $$ int count-->Line_9 $$ count = Integer.parseInt(br.readLine())[ FD ]
Line_9 $$ count = Integer.parseInt(br.readLine())-->Line_9 $$ count = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ count = Integer.parseInt(br.readLine())[ FD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_10 $$ for (i = 0; i < count; i++) [ CD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) [ CD ]
Line_6 $$ int i-->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_9 $$ count = Integer.parseInt(br.readLine())-->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_5 $$ int count-->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ CD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_6 $$ int i-->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ CD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_6 $$ int i-->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_11 $$ h = Integer.parseInt(br.readLine())[ CD ]
Line_11 $$ h = Integer.parseInt(br.readLine())-->Line_11 $$ h = Integer.parseInt(br.readLine())[ FD ]
Line_7 $$ int h-->Line_11 $$ h = Integer.parseInt(br.readLine())[ FD ]
Line_11 $$ h = Integer.parseInt(br.readLine())-->Line_11 $$ h = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ h = Integer.parseInt(br.readLine())[ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_12 $$ String subStr = cards.substring(0, h)[ CD ]
Line_12 $$ String subStr = cards.substring(0, h)-->Line_12 $$ String subStr = cards.substring(0, h)[ CD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_12 $$ String subStr = cards.substring(0, h)[ FD ]
Line_11 $$ h = Integer.parseInt(br.readLine())-->Line_12 $$ String subStr = cards.substring(0, h)[ FD ]
Line_7 $$ int h-->Line_12 $$ String subStr = cards.substring(0, h)[ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_13 $$ cards.delete(0, h)[ CD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_13 $$ cards.delete(0, h)[ FD ]
Line_11 $$ h = Integer.parseInt(br.readLine())-->Line_13 $$ cards.delete(0, h)[ FD ]
Line_7 $$ int h-->Line_13 $$ cards.delete(0, h)[ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_14 $$ cards.append(subStr)[ CD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_14 $$ cards.append(subStr)[ FD ]
Line_12 $$ String subStr = cards.substring(0, h)-->Line_14 $$ cards.append(subStr)[ FD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_16 $$ System.out.println(cards)[ CD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_16 $$ System.out.println(cards)[ FD ]
Line_8 $$ while (!cards.append(br.readLine()).toString().equals("-")) -->Line_17 $$ cards.delete(0, cards.length())[ CD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_17 $$ cards.delete(0, cards.length())[ FD ]
Line_4 $$ StringBuilder cards = new StringBuilder()-->Line_17 $$ cards.delete(0, cards.length())[ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_10 $$ for (i = 0; i < count; i++) -->Line_10 $$ for (i = 0; i < count; i++) [ FD ]
Line_11 $$ h = Integer.parseInt(br.readLine())-->Line_12 $$ String subStr = cards.substring(0, h)[ FD ]
Line_11 $$ h = Integer.parseInt(br.readLine())-->Line_13 $$ cards.delete(0, h)[ FD ]
Line_12 $$ String subStr = cards.substring(0, h)-->Line_14 $$ cards.append(subStr)[ FD ]
