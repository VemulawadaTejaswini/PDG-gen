Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ StringBuffer sb1 = null[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ StringBuffer sb2 = new StringBuffer()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ String cards[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ CD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ CD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ FD ]
Line_7 $$ String cards-->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ FD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ FD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_9 $$ sb1 = new StringBuffer(cards)[ CD ]
Line_9 $$ sb1 = new StringBuffer(cards)-->Line_9 $$ sb1 = new StringBuffer(cards)[ FD ]
Line_5 $$ StringBuffer sb1 = null-->Line_9 $$ sb1 = new StringBuffer(cards)[ FD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_10 $$ int shuffle = Integer.parseInt(input.readLine())[ CD ]
Line_10 $$ int shuffle = Integer.parseInt(input.readLine())-->Line_10 $$ int shuffle = Integer.parseInt(input.readLine())[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ int shuffle = Integer.parseInt(input.readLine())[ FD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_11 $$ int i = 0[ CD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_12 $$ while (i != shuffle) [ CD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_8 $$ while (!(cards = input.readLine()).equals("-")) [ CD ]
Line_11 $$ int i = 0-->Line_12 $$ while (i != shuffle) [ FD ]
Line_10 $$ int shuffle = Integer.parseInt(input.readLine())-->Line_12 $$ while (i != shuffle) [ FD ]
Line_12 $$ while (i != shuffle) -->Line_13 $$ i++[ CD ]
Line_11 $$ int i = 0-->Line_13 $$ i++[ FD ]
Line_12 $$ while (i != shuffle) -->Line_14 $$ int n = Integer.parseInt(input.readLine())[ CD ]
Line_14 $$ int n = Integer.parseInt(input.readLine())-->Line_14 $$ int n = Integer.parseInt(input.readLine())[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_14 $$ int n = Integer.parseInt(input.readLine())[ FD ]
Line_12 $$ while (i != shuffle) -->Line_15 $$ String str = sb1.substring(0, n)[ CD ]
Line_15 $$ String str = sb1.substring(0, n)-->Line_15 $$ String str = sb1.substring(0, n)[ CD ]
Line_9 $$ sb1 = new StringBuffer(cards)-->Line_15 $$ String str = sb1.substring(0, n)[ FD ]
Line_5 $$ StringBuffer sb1 = null-->Line_15 $$ String str = sb1.substring(0, n)[ FD ]
Line_14 $$ int n = Integer.parseInt(input.readLine())-->Line_15 $$ String str = sb1.substring(0, n)[ FD ]
Line_12 $$ while (i != shuffle) -->Line_16 $$ sb1.delete(0, n)[ CD ]
Line_9 $$ sb1 = new StringBuffer(cards)-->Line_16 $$ sb1.delete(0, n)[ FD ]
Line_5 $$ StringBuffer sb1 = null-->Line_16 $$ sb1.delete(0, n)[ FD ]
Line_14 $$ int n = Integer.parseInt(input.readLine())-->Line_16 $$ sb1.delete(0, n)[ FD ]
Line_12 $$ while (i != shuffle) -->Line_17 $$ sb1.append(str)[ CD ]
Line_9 $$ sb1 = new StringBuffer(cards)-->Line_17 $$ sb1.append(str)[ FD ]
Line_5 $$ StringBuffer sb1 = null-->Line_17 $$ sb1.append(str)[ FD ]
Line_15 $$ String str = sb1.substring(0, n)-->Line_17 $$ sb1.append(str)[ FD ]
Line_8 $$ while (!(cards = input.readLine()).equals("-")) -->Line_19 $$ sb2.append(sb1 + "\n")[ CD ]
Line_6 $$ StringBuffer sb2 = new StringBuffer()-->Line_19 $$ sb2.append(sb1 + "\n")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_21 $$ System.out.print(sb2)[ CD ]
Line_6 $$ StringBuffer sb2 = new StringBuffer()-->Line_21 $$ System.out.print(sb2)[ FD ]
Line_14 $$ int n = Integer.parseInt(input.readLine())-->Line_15 $$ String str = sb1.substring(0, n)[ FD ]
Line_14 $$ int n = Integer.parseInt(input.readLine())-->Line_16 $$ sb1.delete(0, n)[ FD ]
Line_15 $$ String str = sb1.substring(0, n)-->Line_17 $$ sb1.append(str)[ FD ]
