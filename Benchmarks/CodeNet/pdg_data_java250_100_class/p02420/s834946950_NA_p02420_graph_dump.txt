Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ while (true) -->Line_5 $$ String cards = scan.next()[ CD ]
Line_5 $$ String cards = scan.next()-->Line_5 $$ String cards = scan.next()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ String cards = scan.next()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ if (cards.equals("-"))[ CD ]
Line_5 $$ String cards = scan.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_6 $$ if (cards.equals("-"))-->Line_6 $$ if (cards.equals("-"))[ CD ]
Line_5 $$ String cards = scan.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_4 $$ while (true) -->Line_8 $$ int n = scan.nextInt()[ CD ]
Line_8 $$ int n = scan.nextInt()-->Line_8 $$ int n = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ int n = scan.nextInt()[ FD ]
Line_4 $$ while (true) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_4 $$ while (true) -->Line_4 $$ while (true) [ CD ]
Line_8 $$ int n = scan.nextInt()-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ int h = scan.nextInt()[ CD ]
Line_10 $$ int h = scan.nextInt()-->Line_10 $$ int h = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_10 $$ int h = scan.nextInt()[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ CD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_5 $$ String cards = scan.next()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ CD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_5 $$ String cards = scan.next()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_10 $$ int h = scan.nextInt()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_5 $$ String cards = scan.next()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_5 $$ String cards = scan.next()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_10 $$ int h = scan.nextInt()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_4 $$ while (true) -->Line_13 $$ System.out.println(cards)[ CD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_13 $$ System.out.println(cards)[ FD ]
Line_5 $$ String cards = scan.next()-->Line_13 $$ System.out.println(cards)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ scan.close()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_15 $$ scan.close()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.exit(0)[ CD ]
Line_5 $$ String cards = scan.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_5 $$ String cards = scan.next()-->Line_6 $$ if (cards.equals("-"))[ FD ]
Line_5 $$ String cards = scan.next()-->Line_13 $$ System.out.println(cards)[ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_10 $$ int h = scan.nextInt()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
Line_10 $$ int h = scan.nextInt()-->Line_11 $$ cards = cards.substring(h, cards.length()).concat(cards.substring(0, h))[ FD ]
