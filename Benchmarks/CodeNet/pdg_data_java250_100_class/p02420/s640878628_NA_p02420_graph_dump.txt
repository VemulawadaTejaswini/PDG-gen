Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ boolean Judge = true[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ String end = "-"[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ String work[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ while (Judge) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_7 $$ while (Judge) -->Line_8 $$ String deck = scanner.next()[ CD ]
Line_8 $$ String deck = scanner.next()-->Line_8 $$ String deck = scanner.next()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_8 $$ String deck = scanner.next()[ FD ]
Line_7 $$ while (Judge) -->Line_9 $$ if (deck.equals(end)) [ CD ]
Line_8 $$ String deck = scanner.next()-->Line_9 $$ if (deck.equals(end)) [ FD ]
Line_5 $$ String end = "-"-->Line_9 $$ if (deck.equals(end)) [ FD ]
Line_9 $$ if (deck.equals(end)) -->Line_9 $$ if (deck.equals(end)) [ CD ]
Line_8 $$ String deck = scanner.next()-->Line_9 $$ if (deck.equals(end)) [ FD ]
Line_5 $$ String end = "-"-->Line_9 $$ if (deck.equals(end)) [ FD ]
Line_9 $$ if (deck.equals(end)) -->Line_10 $$ Judge = false[ CD ]
Line_10 $$ Judge = false-->Line_10 $$ Judge = false[ FD ]
Line_4 $$ boolean Judge = true-->Line_10 $$ Judge = false[ FD ]
Line_7 $$ while (Judge) -->Line_13 $$ int shuffle = scanner.nextInt()[ CD ]
Line_13 $$ int shuffle = scanner.nextInt()-->Line_13 $$ int shuffle = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_13 $$ int shuffle = scanner.nextInt()[ FD ]
Line_7 $$ while (Judge) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ CD ]
Line_7 $$ while (Judge) -->Line_7 $$ while (Judge) [ CD ]
Line_13 $$ int shuffle = scanner.nextInt()-->Line_14 $$ for (int i = 0; i < shuffle; i++) [ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ CD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ CD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_15 $$ int num = scanner.nextInt()[ CD ]
Line_15 $$ int num = scanner.nextInt()-->Line_15 $$ int num = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_15 $$ int num = scanner.nextInt()[ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_16 $$ String substr = deck.substring(0, num)[ CD ]
Line_16 $$ String substr = deck.substring(0, num)-->Line_16 $$ String substr = deck.substring(0, num)[ CD ]
Line_8 $$ String deck = scanner.next()-->Line_16 $$ String substr = deck.substring(0, num)[ FD ]
Line_15 $$ int num = scanner.nextInt()-->Line_16 $$ String substr = deck.substring(0, num)[ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_17 $$ work = deck.replaceFirst(substr, "")[ CD ]
Line_17 $$ work = deck.replaceFirst(substr, "")-->Line_17 $$ work = deck.replaceFirst(substr, "")[ FD ]
Line_6 $$ String work-->Line_17 $$ work = deck.replaceFirst(substr, "")[ FD ]
Line_17 $$ work = deck.replaceFirst(substr, "")-->Line_17 $$ work = deck.replaceFirst(substr, "")[ CD ]
Line_8 $$ String deck = scanner.next()-->Line_17 $$ work = deck.replaceFirst(substr, "")[ FD ]
Line_16 $$ String substr = deck.substring(0, num)-->Line_17 $$ work = deck.replaceFirst(substr, "")[ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_18 $$ deck = work.concat(substr)[ CD ]
Line_18 $$ deck = work.concat(substr)-->Line_18 $$ deck = work.concat(substr)[ FD ]
Line_8 $$ String deck = scanner.next()-->Line_18 $$ deck = work.concat(substr)[ FD ]
Line_18 $$ deck = work.concat(substr)-->Line_18 $$ deck = work.concat(substr)[ CD ]
Line_17 $$ work = deck.replaceFirst(substr, "")-->Line_18 $$ deck = work.concat(substr)[ FD ]
Line_6 $$ String work-->Line_18 $$ deck = work.concat(substr)[ FD ]
Line_16 $$ String substr = deck.substring(0, num)-->Line_18 $$ deck = work.concat(substr)[ FD ]
Line_7 $$ while (Judge) -->Line_20 $$ System.out.println(deck)[ CD ]
Line_18 $$ deck = work.concat(substr)-->Line_20 $$ System.out.println(deck)[ FD ]
Line_8 $$ String deck = scanner.next()-->Line_20 $$ System.out.println(deck)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_22 $$ scanner.close()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_22 $$ scanner.close()[ FD ]
Line_8 $$ String deck = scanner.next()-->Line_9 $$ if (deck.equals(end)) [ FD ]
Line_8 $$ String deck = scanner.next()-->Line_9 $$ if (deck.equals(end)) [ FD ]
Line_8 $$ String deck = scanner.next()-->Line_20 $$ System.out.println(deck)[ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ FD ]
Line_14 $$ for (int i = 0; i < shuffle; i++) -->Line_14 $$ for (int i = 0; i < shuffle; i++) [ FD ]
Line_18 $$ deck = work.concat(substr)-->Line_16 $$ String substr = deck.substring(0, num)[ FD ]
Line_15 $$ int num = scanner.nextInt()-->Line_16 $$ String substr = deck.substring(0, num)[ FD ]
Line_18 $$ deck = work.concat(substr)-->Line_17 $$ work = deck.replaceFirst(substr, "")[ FD ]
Line_16 $$ String substr = deck.substring(0, num)-->Line_17 $$ work = deck.replaceFirst(substr, "")[ FD ]
Line_17 $$ work = deck.replaceFirst(substr, "")-->Line_18 $$ deck = work.concat(substr)[ FD ]
Line_16 $$ String substr = deck.substring(0, num)-->Line_18 $$ deck = work.concat(substr)[ FD ]
