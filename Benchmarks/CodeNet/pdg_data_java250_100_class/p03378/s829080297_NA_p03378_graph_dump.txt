Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int m = sc.nextInt()[ CD ]
Line_5 $$ int m = sc.nextInt()-->Line_5 $$ int m = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int m = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int x = sc.nextInt()[ CD ]
Line_6 $$ int x = sc.nextInt()-->Line_6 $$ int x = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int x = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] a = new int[m][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < m; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int m = sc.nextInt()-->Line_8 $$ for (int i = 0; i < m; i++) [ FD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_8 $$ for (int i = 0; i < m; i++) [ CD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_8 $$ for (int i = 0; i < m; i++) [ CD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_8 $$ for (int i = 0; i < m; i++) [ FD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_9 $$ a[i] = sc.nextInt()[ CD ]
Line_9 $$ a[i] = sc.nextInt()-->Line_9 $$ a[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ a[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int mae = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int usiro = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < m; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
Line_5 $$ int m = sc.nextInt()-->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ CD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ CD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_14 $$ if (a[i] < x) [ CD ]
Line_6 $$ int x = sc.nextInt()-->Line_14 $$ if (a[i] < x) [ FD ]
Line_14 $$ if (a[i] < x) -->Line_15 $$ mae++[ CD ]
Line_11 $$ int mae = 0-->Line_15 $$ mae++[ FD ]
Line_14 $$ if (a[i] < x) -->Line_17 $$ usiro++[ CD ]
Line_12 $$ int usiro = 0-->Line_17 $$ usiro++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ int ans = Math.min(mae, usiro)[ CD ]
Line_20 $$ int ans = Math.min(mae, usiro)-->Line_20 $$ int ans = Math.min(mae, usiro)[ CD ]
Line_11 $$ int mae = 0-->Line_20 $$ int ans = Math.min(mae, usiro)[ FD ]
Line_12 $$ int usiro = 0-->Line_20 $$ int ans = Math.min(mae, usiro)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ System.out.println(ans)[ CD ]
Line_20 $$ int ans = Math.min(mae, usiro)-->Line_21 $$ System.out.println(ans)[ FD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_8 $$ for (int i = 0; i < m; i++) [ FD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_8 $$ for (int i = 0; i < m; i++) [ FD ]
Line_8 $$ for (int i = 0; i < m; i++) -->Line_8 $$ for (int i = 0; i < m; i++) [ FD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
Line_13 $$ for (int i = 0; i < m; i++) -->Line_13 $$ for (int i = 0; i < m; i++) [ FD ]
