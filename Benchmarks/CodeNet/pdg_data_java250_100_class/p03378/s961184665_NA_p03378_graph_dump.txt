Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = scan.nextInt()[ CD ]
Line_4 $$ int N = scan.nextInt()-->Line_4 $$ int N = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int N = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int M = scan.nextInt()[ CD ]
Line_5 $$ int M = scan.nextInt()-->Line_5 $$ int M = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ int M = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int X = scan.nextInt()[ CD ]
Line_6 $$ int X = scan.nextInt()-->Line_6 $$ int X = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ int X = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ HashSet<Integer> station = new HashSet()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < M; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int M = scan.nextInt()-->Line_8 $$ for (int i = 0; i < M; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_8 $$ for (int i = 0; i < M; i++) [ CD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_8 $$ for (int i = 0; i < M; i++) [ CD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_8 $$ for (int i = 0; i < M; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_9 $$ station.add(scan.nextInt())[ CD ]
Line_7 $$ HashSet<Integer> station = new HashSet()-->Line_9 $$ station.add(scan.nextInt())[ FD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_9 $$ station.add(scan.nextInt())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int costR = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = 0; i < X; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_6 $$ int X = scan.nextInt()-->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ CD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ CD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_13 $$ if (station.contains(i)) [ CD ]
Line_7 $$ HashSet<Integer> station = new HashSet()-->Line_13 $$ if (station.contains(i)) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_13 $$ if (station.contains(i)) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_13 $$ if (station.contains(i)) [ FD ]
Line_13 $$ if (station.contains(i)) -->Line_13 $$ if (station.contains(i)) [ CD ]
Line_7 $$ HashSet<Integer> station = new HashSet()-->Line_13 $$ if (station.contains(i)) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_13 $$ if (station.contains(i)) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_13 $$ if (station.contains(i)) [ FD ]
Line_13 $$ if (station.contains(i)) -->Line_14 $$ costR += 1[ CD ]
Line_14 $$ costR += 1-->Line_14 $$ costR += 1[ FD ]
Line_11 $$ int costR = 0-->Line_14 $$ costR += 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ int costL = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_4 $$ int N = scan.nextInt()-->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ CD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ CD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_19 $$ if (station.contains(i)) [ CD ]
Line_7 $$ HashSet<Integer> station = new HashSet()-->Line_19 $$ if (station.contains(i)) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_19 $$ if (station.contains(i)) -->Line_19 $$ if (station.contains(i)) [ CD ]
Line_7 $$ HashSet<Integer> station = new HashSet()-->Line_19 $$ if (station.contains(i)) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_19 $$ if (station.contains(i)) -->Line_20 $$ costL += 1[ CD ]
Line_20 $$ costL += 1-->Line_20 $$ costL += 1[ FD ]
Line_17 $$ int costL = 0-->Line_20 $$ costL += 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(Math.min(costR, costL))[ CD ]
Line_14 $$ costR += 1-->Line_23 $$ System.out.println(Math.min(costR, costL))[ FD ]
Line_11 $$ int costR = 0-->Line_23 $$ System.out.println(Math.min(costR, costL))[ FD ]
Line_20 $$ costL += 1-->Line_23 $$ System.out.println(Math.min(costR, costL))[ FD ]
Line_17 $$ int costL = 0-->Line_23 $$ System.out.println(Math.min(costR, costL))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_8 $$ for (int i = 0; i < M; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_8 $$ for (int i = 0; i < M; i++) [ FD ]
Line_8 $$ for (int i = 0; i < M; i++) -->Line_8 $$ for (int i = 0; i < M; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_12 $$ for (int i = 0; i < X; i++) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_13 $$ if (station.contains(i)) [ FD ]
Line_12 $$ for (int i = 0; i < X; i++) -->Line_13 $$ if (station.contains(i)) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_18 $$ for (int i = X + 1; i <= N; i++) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
Line_18 $$ for (int i = X + 1; i <= N; i++) -->Line_19 $$ if (station.contains(i)) [ FD ]
