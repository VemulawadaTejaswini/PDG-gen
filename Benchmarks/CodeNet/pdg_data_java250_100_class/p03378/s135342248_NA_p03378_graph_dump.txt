Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ int M = sc.nextInt()[ CD ]
Line_5 $$ int M = sc.nextInt()-->Line_5 $$ int M = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int M = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ int X = sc.nextInt()[ CD ]
Line_6 $$ int X = sc.nextInt()-->Line_6 $$ int X = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int X = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ HashSet<Integer> A = new HashSet<Integer>()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_5 $$ int M = sc.nextInt()-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ CD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ CD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_9 $$ A.add(sc.nextInt())[ CD ]
Line_7 $$ HashSet<Integer> A = new HashSet<Integer>()-->Line_9 $$ A.add(sc.nextInt())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ A.add(sc.nextInt())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_10 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ int ansLeft = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_12 $$ int ansRight = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ CD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ CD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_14 $$ if (A.contains(i))[ CD ]
Line_7 $$ HashSet<Integer> A = new HashSet<Integer>()-->Line_14 $$ if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_14 $$ if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_14 $$ if (A.contains(i))[ FD ]
Line_14 $$ if (A.contains(i))-->Line_14 $$ if (A.contains(i))[ CD ]
Line_7 $$ HashSet<Integer> A = new HashSet<Integer>()-->Line_14 $$ if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_14 $$ if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_14 $$ if (A.contains(i))[ FD ]
Line_14 $$ if (A.contains(i))-->Line_15 $$ ansLeft++[ CD ]
Line_11 $$ int ansLeft = 0-->Line_15 $$ ansLeft++[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ CD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ CD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ CD ]
Line_7 $$ HashSet<Integer> A = new HashSet<Integer>()-->Line_17 $$ if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_17 $$ if (A.contains(i))[ FD ]
Line_17 $$ if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ CD ]
Line_7 $$ HashSet<Integer> A = new HashSet<Integer>()-->Line_17 $$ if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_17 $$ if (A.contains(i))[ FD ]
Line_17 $$ if (A.contains(i))-->Line_18 $$ ansRight++[ CD ]
Line_12 $$ int ansRight = 0-->Line_18 $$ ansRight++[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_19 $$ System.out.println(Math.min(ansLeft, ansRight))[ CD ]
Line_11 $$ int ansLeft = 0-->Line_19 $$ System.out.println(Math.min(ansLeft, ansRight))[ FD ]
Line_12 $$ int ansRight = 0-->Line_19 $$ System.out.println(Math.min(ansLeft, ansRight))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())-->Line_8 $$ for (int i = 0; i < M; i++) A.add(sc.nextInt())[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_14 $$ if (A.contains(i))[ FD ]
Line_13 $$ for (int i = X; i >= 0; i--) if (A.contains(i))-->Line_14 $$ if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ FD ]
Line_16 $$ for (int i = X; i <= N; i++) if (A.contains(i))-->Line_17 $$ if (A.contains(i))[ FD ]
