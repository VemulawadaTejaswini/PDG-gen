Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scanner = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = scanner.nextInt()[ CD ]
Line_4 $$ int N = scanner.nextInt()-->Line_4 $$ int N = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_4 $$ int N = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int M = scanner.nextInt()[ CD ]
Line_5 $$ int M = scanner.nextInt()-->Line_5 $$ int M = scanner.nextInt()[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_5 $$ int M = scanner.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int X = scanner.nextInt() - 1[ CD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_6 $$ int X = scanner.nextInt() - 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Set<Integer> tolls = new HashSet()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int M = scanner.nextInt()-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ CD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ CD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ tolls.add(scanner.nextInt() - 1)[ CD ]
Line_7 $$ Set<Integer> tolls = new HashSet()-->Line_8 $$ tolls.add(scanner.nextInt() - 1)[ FD ]
Line_3 $$ Scanner scanner = new Scanner(System.in)-->Line_8 $$ tolls.add(scanner.nextInt() - 1)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ int left = 0, right = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ CD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ CD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ if (tolls.contains(i))[ CD ]
Line_7 $$ Set<Integer> tolls = new HashSet()-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ if (tolls.contains(i))-->Line_10 $$ if (tolls.contains(i))[ CD ]
Line_7 $$ Set<Integer> tolls = new HashSet()-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ if (tolls.contains(i))-->Line_10 $$ left++[ CD ]
Line_9 $$ int left = 0, right = 0-->Line_10 $$ left++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_4 $$ int N = scanner.nextInt()-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ CD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ CD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ CD ]
Line_7 $$ Set<Integer> tolls = new HashSet()-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_11 $$ if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ CD ]
Line_7 $$ Set<Integer> tolls = new HashSet()-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_11 $$ if (tolls.contains(i))-->Line_11 $$ right++[ CD ]
Line_9 $$ int left = 0, right = 0-->Line_11 $$ right++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ System.out.println(Math.min(left, right))[ CD ]
Line_9 $$ int left = 0, right = 0-->Line_12 $$ System.out.println(Math.min(left, right))[ FD ]
Line_9 $$ int left = 0, right = 0-->Line_12 $$ System.out.println(Math.min(left, right))[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ FD ]
Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)-->Line_8 $$ for (int i = 0; i < M; i++) tolls.add(scanner.nextInt() - 1)[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_10 $$ for (int i = X; i >= 0; i--) if (tolls.contains(i))-->Line_10 $$ if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ FD ]
Line_11 $$ for (int i = X; i < N; i++) if (tolls.contains(i))-->Line_11 $$ if (tolls.contains(i))[ FD ]
