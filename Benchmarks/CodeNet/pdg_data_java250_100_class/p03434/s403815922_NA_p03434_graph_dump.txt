Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ List<Integer> list = new ArrayList()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int alice = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int Bob = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ for (int x = 1; x <= n; x++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_8 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_8 $$ for (int x = 1; x <= n; x++) [ CD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_8 $$ for (int x = 1; x <= n; x++) [ CD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_8 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_9 $$ list.add(Integer.parseInt(sc.next()))[ CD ]
Line_5 $$ List<Integer> list = new ArrayList()-->Line_9 $$ list.add(Integer.parseInt(sc.next()))[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ list.add(Integer.parseInt(sc.next()))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ Collections.sort(list, Collections.reverseOrder())[ CD ]
Line_5 $$ List<Integer> list = new ArrayList()-->Line_11 $$ Collections.sort(list, Collections.reverseOrder())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ for (int x = 1; x <= n; x++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ CD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ CD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_13 $$ if (x % 2 == 1) [ CD ]
Line_13 $$ if (x % 2 == 1) -->Line_14 $$ alice += list.get(x - 1)[ CD ]
Line_14 $$ alice += list.get(x - 1)-->Line_14 $$ alice += list.get(x - 1)[ FD ]
Line_6 $$ int alice = 0-->Line_14 $$ alice += list.get(x - 1)[ FD ]
Line_14 $$ alice += list.get(x - 1)-->Line_14 $$ alice += list.get(x - 1)[ CD ]
Line_5 $$ List<Integer> list = new ArrayList()-->Line_14 $$ alice += list.get(x - 1)[ FD ]
Line_13 $$ if (x % 2 == 1) -->Line_16 $$ Bob += list.get(x - 1)[ CD ]
Line_16 $$ Bob += list.get(x - 1)-->Line_16 $$ Bob += list.get(x - 1)[ FD ]
Line_7 $$ int Bob = 0-->Line_16 $$ Bob += list.get(x - 1)[ FD ]
Line_16 $$ Bob += list.get(x - 1)-->Line_16 $$ Bob += list.get(x - 1)[ CD ]
Line_5 $$ List<Integer> list = new ArrayList()-->Line_16 $$ Bob += list.get(x - 1)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_19 $$ System.out.println(alice - Bob)[ CD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_8 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_8 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_8 $$ for (int x = 1; x <= n; x++) -->Line_8 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
Line_12 $$ for (int x = 1; x <= n; x++) -->Line_12 $$ for (int x = 1; x <= n; x++) [ FD ]
