Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ ArrayList<Integer> cards = new ArrayList()[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ cards.add(sc.nextInt())[ CD ]
Line_5 $$ ArrayList<Integer> cards = new ArrayList()-->Line_7 $$ cards.add(sc.nextInt())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ cards.add(sc.nextInt())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_9 $$ List<Integer> sortedCards = cards.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())[ CD ]
Line_9 $$ List<Integer> sortedCards = cards.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())-->Line_9 $$ List<Integer> sortedCards = cards.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())[ CD ]
Line_5 $$ ArrayList<Integer> cards = new ArrayList()-->Line_9 $$ List<Integer> sortedCards = cards.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_10 $$ int alicePoints = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ int bobPoints = 0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = sc.nextInt()-->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if (i % 2 == 0) [ CD ]
Line_13 $$ if (i % 2 == 0) -->Line_14 $$ alicePoints += sortedCards.get(i)[ CD ]
Line_14 $$ alicePoints += sortedCards.get(i)-->Line_14 $$ alicePoints += sortedCards.get(i)[ FD ]
Line_10 $$ int alicePoints = 0-->Line_14 $$ alicePoints += sortedCards.get(i)[ FD ]
Line_14 $$ alicePoints += sortedCards.get(i)-->Line_14 $$ alicePoints += sortedCards.get(i)[ CD ]
Line_9 $$ List<Integer> sortedCards = cards.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())-->Line_14 $$ alicePoints += sortedCards.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ alicePoints += sortedCards.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_14 $$ alicePoints += sortedCards.get(i)[ FD ]
Line_13 $$ if (i % 2 == 0) -->Line_16 $$ bobPoints += sortedCards.get(i)[ CD ]
Line_16 $$ bobPoints += sortedCards.get(i)-->Line_16 $$ bobPoints += sortedCards.get(i)[ FD ]
Line_11 $$ int bobPoints = 0-->Line_16 $$ bobPoints += sortedCards.get(i)[ FD ]
Line_16 $$ bobPoints += sortedCards.get(i)-->Line_16 $$ bobPoints += sortedCards.get(i)[ CD ]
Line_9 $$ List<Integer> sortedCards = cards.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())-->Line_16 $$ bobPoints += sortedCards.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_16 $$ bobPoints += sortedCards.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_16 $$ bobPoints += sortedCards.get(i)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_19 $$ System.out.println(alicePoints - bobPoints)[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_14 $$ alicePoints += sortedCards.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < n; i++) -->Line_16 $$ bobPoints += sortedCards.get(i)[ FD ]
