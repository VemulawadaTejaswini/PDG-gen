Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ LinkedList<Integer> list = new LinkedList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ list.add(sc.nextInt())[ CD ]
Line_5 $$ LinkedList<Integer> list = new LinkedList()-->Line_7 $$ list.add(sc.nextInt())[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ list.add(sc.nextInt())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ Collections.sort(list)[ CD ]
Line_5 $$ LinkedList<Integer> list = new LinkedList()-->Line_9 $$ Collections.sort(list)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int a = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int b = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ boolean isAlice = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ Integer val = null[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ while ((val = list.pollLast()) != null) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_14 $$ while ((val = list.pollLast()) != null) [ FD ]
Line_13 $$ Integer val = null-->Line_14 $$ while ((val = list.pollLast()) != null) [ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_14 $$ while ((val = list.pollLast()) != null) [ CD ]
Line_5 $$ LinkedList<Integer> list = new LinkedList()-->Line_14 $$ while ((val = list.pollLast()) != null) [ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_15 $$ if (isAlice) [ CD ]
Line_15 $$ if (isAlice) -->Line_16 $$ a += val[ CD ]
Line_16 $$ a += val-->Line_16 $$ a += val[ FD ]
Line_10 $$ int a = 0-->Line_16 $$ a += val[ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_16 $$ a += val[ FD ]
Line_13 $$ Integer val = null-->Line_16 $$ a += val[ FD ]
Line_15 $$ if (isAlice) -->Line_18 $$ b += val[ CD ]
Line_18 $$ b += val-->Line_18 $$ b += val[ FD ]
Line_11 $$ int b = 0-->Line_18 $$ b += val[ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_18 $$ b += val[ FD ]
Line_13 $$ Integer val = null-->Line_18 $$ b += val[ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_20 $$ isAlice = !isAlice[ CD ]
Line_20 $$ isAlice = !isAlice-->Line_20 $$ isAlice = !isAlice[ FD ]
Line_12 $$ boolean isAlice = true-->Line_20 $$ isAlice = !isAlice[ FD ]
Line_20 $$ isAlice = !isAlice-->Line_20 $$ isAlice = !isAlice[ CD ]
Line_20 $$ isAlice = !isAlice-->Line_20 $$ isAlice = !isAlice[ FD ]
Line_12 $$ boolean isAlice = true-->Line_20 $$ isAlice = !isAlice[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ System.out.println(a - b)[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_16 $$ a += val[ FD ]
Line_14 $$ while ((val = list.pollLast()) != null) -->Line_18 $$ b += val[ FD ]
Line_20 $$ isAlice = !isAlice-->Line_20 $$ isAlice = !isAlice[ FD ]
