Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int alicePoints = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int bobPoints = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_6 $$ int n = Integer.parseInt(sc.nextLine())-->Line_6 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int n = Integer.parseInt(sc.nextLine())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ String[] a = sc.nextLine().split(" ")[ CD ]
Line_7 $$ String[] a = sc.nextLine().split(" ")-->Line_7 $$ String[] a = sc.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ String[] a = sc.nextLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ Integer[] aInt = new Integer[a.length][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_10 $$ aInt[i] = Integer.parseInt(a[i])[ CD ]
Line_10 $$ aInt[i] = Integer.parseInt(a[i])-->Line_10 $$ aInt[i] = Integer.parseInt(a[i])[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ Arrays.sort(aInt, Comparator.reverseOrder())[ CD ]
Line_8 $$ Integer[] aInt = new Integer[a.length]-->Line_12 $$ Arrays.sort(aInt, Comparator.reverseOrder())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ int n = Integer.parseInt(sc.nextLine())-->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ FD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ CD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ CD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ FD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_14 $$ if (tursCount % 2 == 0) [ CD ]
Line_14 $$ if (tursCount % 2 == 0) -->Line_15 $$ alicePoints = alicePoints + aInt[tursCount][ CD ]
Line_15 $$ alicePoints = alicePoints + aInt[tursCount]-->Line_15 $$ alicePoints = alicePoints + aInt[tursCount][ FD ]
Line_4 $$ int alicePoints = 0-->Line_15 $$ alicePoints = alicePoints + aInt[tursCount][ FD ]
Line_15 $$ alicePoints = alicePoints + aInt[tursCount]-->Line_15 $$ alicePoints = alicePoints + aInt[tursCount][ FD ]
Line_4 $$ int alicePoints = 0-->Line_15 $$ alicePoints = alicePoints + aInt[tursCount][ FD ]
Line_14 $$ if (tursCount % 2 == 0) -->Line_17 $$ bobPoints = bobPoints + aInt[tursCount][ CD ]
Line_17 $$ bobPoints = bobPoints + aInt[tursCount]-->Line_17 $$ bobPoints = bobPoints + aInt[tursCount][ FD ]
Line_5 $$ int bobPoints = 0-->Line_17 $$ bobPoints = bobPoints + aInt[tursCount][ FD ]
Line_17 $$ bobPoints = bobPoints + aInt[tursCount]-->Line_17 $$ bobPoints = bobPoints + aInt[tursCount][ FD ]
Line_5 $$ int bobPoints = 0-->Line_17 $$ bobPoints = bobPoints + aInt[tursCount][ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(alicePoints - bobPoints)[ CD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ FD ]
Line_9 $$ for (int i = 0; i < a.length; i++) -->Line_9 $$ for (int i = 0; i < a.length; i++) [ FD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ FD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ FD ]
Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) -->Line_13 $$ for (int tursCount = 0; tursCount < n; tursCount++) [ FD ]
Line_15 $$ alicePoints = alicePoints + aInt[tursCount]-->Line_15 $$ alicePoints = alicePoints + aInt[tursCount][ FD ]
Line_17 $$ bobPoints = bobPoints + aInt[tursCount]-->Line_17 $$ bobPoints = bobPoints + aInt[tursCount][ FD ]
