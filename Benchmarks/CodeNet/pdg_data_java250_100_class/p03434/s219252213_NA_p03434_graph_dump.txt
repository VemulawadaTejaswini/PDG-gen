Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_4 $$ int n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ List<Integer> split = new ArrayList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt()-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ int buf = sc.nextInt()[ CD ]
Line_7 $$ int buf = sc.nextInt()-->Line_7 $$ int buf = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int buf = sc.nextInt()[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_8 $$ split.add(buf)[ CD ]
Line_5 $$ List<Integer> split = new ArrayList()-->Line_8 $$ split.add(buf)[ FD ]
Line_7 $$ int buf = sc.nextInt()-->Line_8 $$ split.add(buf)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int resultsA = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ int resultsB = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ int max = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int index = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ int size = split.size()[ CD ]
Line_14 $$ int size = split.size()-->Line_14 $$ int size = split.size()[ CD ]
Line_5 $$ List<Integer> split = new ArrayList()-->Line_14 $$ int size = split.size()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ String current = "A"[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ int count = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ Boolean boo = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_18 $$ while (boo) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_18 $$ while (boo) -->Line_19 $$ for (int i = 0; i < size; i++) [ CD ]
Line_18 $$ while (boo) -->Line_18 $$ while (boo) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_14 $$ int size = split.size()-->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ CD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ CD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_20 $$ if (max <= split.get(i)) [ CD ]
Line_12 $$ int max = 0-->Line_20 $$ if (max <= split.get(i)) [ FD ]
Line_5 $$ List<Integer> split = new ArrayList()-->Line_20 $$ if (max <= split.get(i)) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_20 $$ if (max <= split.get(i)) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_20 $$ if (max <= split.get(i)) [ FD ]
Line_20 $$ if (max <= split.get(i)) -->Line_21 $$ max = split.get(i)[ CD ]
Line_21 $$ max = split.get(i)-->Line_21 $$ max = split.get(i)[ FD ]
Line_12 $$ int max = 0-->Line_21 $$ max = split.get(i)[ FD ]
Line_21 $$ max = split.get(i)-->Line_21 $$ max = split.get(i)[ CD ]
Line_5 $$ List<Integer> split = new ArrayList()-->Line_21 $$ max = split.get(i)[ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_21 $$ max = split.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_21 $$ max = split.get(i)[ FD ]
Line_20 $$ if (max <= split.get(i)) -->Line_22 $$ index = i[ CD ]
Line_22 $$ index = i-->Line_22 $$ index = i[ FD ]
Line_13 $$ int index = 0-->Line_22 $$ index = i[ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_22 $$ index = i[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_22 $$ index = i[ FD ]
Line_18 $$ while (boo) -->Line_25 $$ split.remove(index)[ CD ]
Line_5 $$ List<Integer> split = new ArrayList()-->Line_25 $$ split.remove(index)[ FD ]
Line_22 $$ index = i-->Line_25 $$ split.remove(index)[ FD ]
Line_13 $$ int index = 0-->Line_25 $$ split.remove(index)[ FD ]
Line_18 $$ while (boo) -->Line_26 $$ size -= 1[ CD ]
Line_26 $$ size -= 1-->Line_26 $$ size -= 1[ FD ]
Line_14 $$ int size = split.size()-->Line_26 $$ size -= 1[ FD ]
Line_18 $$ while (boo) -->Line_27 $$ if (current.equals("A")) [ CD ]
Line_15 $$ String current = "A"-->Line_27 $$ if (current.equals("A")) [ FD ]
Line_27 $$ if (current.equals("A")) -->Line_27 $$ if (current.equals("A")) [ CD ]
Line_15 $$ String current = "A"-->Line_27 $$ if (current.equals("A")) [ FD ]
Line_27 $$ if (current.equals("A")) -->Line_28 $$ resultsA += max[ CD ]
Line_28 $$ resultsA += max-->Line_28 $$ resultsA += max[ FD ]
Line_10 $$ int resultsA = 0-->Line_28 $$ resultsA += max[ FD ]
Line_21 $$ max = split.get(i)-->Line_28 $$ resultsA += max[ FD ]
Line_12 $$ int max = 0-->Line_28 $$ resultsA += max[ FD ]
Line_27 $$ if (current.equals("A")) -->Line_29 $$ current = "B"[ CD ]
Line_29 $$ current = "B"-->Line_29 $$ current = "B"[ FD ]
Line_15 $$ String current = "A"-->Line_29 $$ current = "B"[ FD ]
Line_27 $$ if (current.equals("A")) -->Line_31 $$ resultsB += max[ CD ]
Line_31 $$ resultsB += max-->Line_31 $$ resultsB += max[ FD ]
Line_11 $$ int resultsB = 0-->Line_31 $$ resultsB += max[ FD ]
Line_21 $$ max = split.get(i)-->Line_31 $$ resultsB += max[ FD ]
Line_12 $$ int max = 0-->Line_31 $$ resultsB += max[ FD ]
Line_27 $$ if (current.equals("A")) -->Line_32 $$ current = "A"[ CD ]
Line_29 $$ current = "B"-->Line_32 $$ current = "A"[ FD ]
Line_32 $$ current = "A"-->Line_32 $$ current = "A"[ FD ]
Line_15 $$ String current = "A"-->Line_32 $$ current = "A"[ FD ]
Line_18 $$ while (boo) -->Line_34 $$ max = 0[ CD ]
Line_21 $$ max = split.get(i)-->Line_34 $$ max = 0[ FD ]
Line_34 $$ max = 0-->Line_34 $$ max = 0[ FD ]
Line_12 $$ int max = 0-->Line_34 $$ max = 0[ FD ]
Line_18 $$ while (boo) -->Line_35 $$ if (size == 0) [ CD ]
Line_26 $$ size -= 1-->Line_35 $$ if (size == 0) [ FD ]
Line_14 $$ int size = split.size()-->Line_35 $$ if (size == 0) [ FD ]
Line_35 $$ if (size == 0) -->Line_36 $$ boo = false[ CD ]
Line_36 $$ boo = false-->Line_36 $$ boo = false[ FD ]
Line_17 $$ Boolean boo = true-->Line_36 $$ boo = false[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_39 $$ count = resultsA - resultsB[ CD ]
Line_16 $$ int count = 0-->Line_39 $$ count = resultsA - resultsB[ FD ]
Line_39 $$ count = resultsA - resultsB-->Line_39 $$ count = resultsA - resultsB[ FD ]
Line_28 $$ resultsA += max-->Line_39 $$ count = resultsA - resultsB[ FD ]
Line_10 $$ int resultsA = 0-->Line_39 $$ count = resultsA - resultsB[ FD ]
Line_31 $$ resultsB += max-->Line_39 $$ count = resultsA - resultsB[ FD ]
Line_11 $$ int resultsB = 0-->Line_39 $$ count = resultsA - resultsB[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_40 $$ System.out.println(count)[ CD ]
Line_16 $$ int count = 0-->Line_40 $$ System.out.println(count)[ FD ]
Line_39 $$ count = resultsA - resultsB-->Line_40 $$ System.out.println(count)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ int buf = sc.nextInt()-->Line_8 $$ split.add(buf)[ FD ]
Line_29 $$ current = "B"-->Line_27 $$ if (current.equals("A")) [ FD ]
Line_32 $$ current = "A"-->Line_27 $$ if (current.equals("A")) [ FD ]
Line_29 $$ current = "B"-->Line_27 $$ if (current.equals("A")) [ FD ]
Line_32 $$ current = "A"-->Line_27 $$ if (current.equals("A")) [ FD ]
Line_34 $$ max = 0-->Line_28 $$ resultsA += max[ FD ]
Line_34 $$ max = 0-->Line_31 $$ resultsB += max[ FD ]
Line_26 $$ size -= 1-->Line_35 $$ if (size == 0) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_19 $$ for (int i = 0; i < size; i++) [ FD ]
Line_21 $$ max = split.get(i)-->Line_20 $$ if (max <= split.get(i)) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_20 $$ if (max <= split.get(i)) [ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_21 $$ max = split.get(i)[ FD ]
Line_19 $$ for (int i = 0; i < size; i++) -->Line_22 $$ index = i[ FD ]
