Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_4 $$ int n = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int[] a = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.next())-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ a[i] = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ a[i] = Integer.parseInt(sc.next())-->Line_7 $$ a[i] = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ a[i] = Integer.parseInt(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ Arrays.sort(a)[ CD ]
Line_5 $$ int[] a = new int[n]-->Line_9 $$ Arrays.sort(a)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ boolean flag = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ CD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ CD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_13 $$ if (flag == true) [ CD ]
Line_11 $$ boolean flag = true-->Line_13 $$ if (flag == true) [ FD ]
Line_13 $$ if (flag == true) -->Line_13 $$ ans += a[i][ CD ]
Line_13 $$ ans += a[i]-->Line_13 $$ ans += a[i][ FD ]
Line_10 $$ int ans = 0-->Line_13 $$ ans += a[i][ FD ]
Line_13 $$ if (flag == true) -->Line_14 $$ ans -= a[i][ CD ]
Line_13 $$ ans += a[i]-->Line_14 $$ ans -= a[i][ FD ]
Line_14 $$ ans -= a[i]-->Line_14 $$ ans -= a[i][ FD ]
Line_10 $$ int ans = 0-->Line_14 $$ ans -= a[i][ FD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_15 $$ flag ^= true[ CD ]
Line_15 $$ flag ^= true-->Line_15 $$ flag ^= true[ FD ]
Line_11 $$ boolean flag = true-->Line_15 $$ flag ^= true[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ System.out.println(ans)[ CD ]
Line_13 $$ ans += a[i]-->Line_17 $$ System.out.println(ans)[ FD ]
Line_14 $$ ans -= a[i]-->Line_17 $$ System.out.println(ans)[ FD ]
Line_10 $$ int ans = 0-->Line_17 $$ System.out.println(ans)[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_12 $$ for (int i = n - 1; i >= 0; i--) -->Line_12 $$ for (int i = n - 1; i >= 0; i--) [ FD ]
Line_15 $$ flag ^= true-->Line_13 $$ if (flag == true) [ FD ]
