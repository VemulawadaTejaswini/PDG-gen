Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(input.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(input.readLine())-->Line_4 $$ int n = Integer.parseInt(input.readLine())[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(input.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int[] values = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int n = Integer.parseInt(input.readLine())-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ values[i] = Integer.parseInt(tokenizer.nextToken())[ CD ]
Line_8 $$ values[i] = Integer.parseInt(tokenizer.nextToken())-->Line_8 $$ values[i] = Integer.parseInt(tokenizer.nextToken())[ CD ]
Line_5 $$ StringTokenizer tokenizer = new StringTokenizer(input.readLine())-->Line_8 $$ values[i] = Integer.parseInt(tokenizer.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ Arrays.sort(values)[ CD ]
Line_6 $$ int[] values = new int[n]-->Line_10 $$ Arrays.sort(values)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ boolean state = true[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ int sum1 = 0, sum2 = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ FD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ CD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ CD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ FD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_14 $$ if (state) [ CD ]
Line_14 $$ if (state) -->Line_15 $$ sum1 += values[i][ CD ]
Line_15 $$ sum1 += values[i]-->Line_15 $$ sum1 += values[i][ FD ]
Line_12 $$ int sum1 = 0, sum2 = 0-->Line_15 $$ sum1 += values[i][ FD ]
Line_14 $$ if (state) -->Line_16 $$ state = false[ CD ]
Line_16 $$ state = false-->Line_16 $$ state = false[ FD ]
Line_11 $$ boolean state = true-->Line_16 $$ state = false[ FD ]
Line_14 $$ if (state) -->Line_18 $$ sum2 += values[i][ CD ]
Line_18 $$ sum2 += values[i]-->Line_18 $$ sum2 += values[i][ FD ]
Line_12 $$ int sum1 = 0, sum2 = 0-->Line_18 $$ sum2 += values[i][ FD ]
Line_14 $$ if (state) -->Line_19 $$ state = true[ CD ]
Line_16 $$ state = false-->Line_19 $$ state = true[ FD ]
Line_19 $$ state = true-->Line_19 $$ state = true[ FD ]
Line_11 $$ boolean state = true-->Line_19 $$ state = true[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_22 $$ System.out.println(Math.abs(sum1 - sum2))[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ FD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ FD ]
Line_13 $$ for (int i = n - 1; i > -1; i--) -->Line_13 $$ for (int i = n - 1; i > -1; i--) [ FD ]
