Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int H, W[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int n = Integer.MAX_VALUE[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int n = Integer.MAX_VALUE-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ H = Integer.parseInt(sc.next())[ CD ]
Line_7 $$ H = Integer.parseInt(sc.next())-->Line_7 $$ H = Integer.parseInt(sc.next())[ FD ]
Line_4 $$ int H, W-->Line_7 $$ H = Integer.parseInt(sc.next())[ FD ]
Line_7 $$ H = Integer.parseInt(sc.next())-->Line_7 $$ H = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ H = Integer.parseInt(sc.next())[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_8 $$ W = Integer.parseInt(sc.next())[ CD ]
Line_8 $$ W = Integer.parseInt(sc.next())-->Line_8 $$ W = Integer.parseInt(sc.next())[ FD ]
Line_4 $$ int H, W-->Line_8 $$ W = Integer.parseInt(sc.next())[ FD ]
Line_8 $$ W = Integer.parseInt(sc.next())-->Line_8 $$ W = Integer.parseInt(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ W = Integer.parseInt(sc.next())[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_9 $$ if (H == 0 && W == 0) [ CD ]
Line_9 $$ if (H == 0 && W == 0) -->Line_13 $$ for (int j = 0; j < H; j++) [ CD ]
Line_9 $$ if (H == 0 && W == 0) -->Line_9 $$ if (H == 0 && W == 0) [ CD ]
Line_7 $$ H = Integer.parseInt(sc.next())-->Line_13 $$ for (int j = 0; j < H; j++) [ FD ]
Line_4 $$ int H, W-->Line_13 $$ for (int j = 0; j < H; j++) [ FD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ CD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ CD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ FD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_14 $$ for (int k = 0; k < W; k++) [ CD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ CD ]
Line_8 $$ W = Integer.parseInt(sc.next())-->Line_14 $$ for (int k = 0; k < W; k++) [ FD ]
Line_4 $$ int H, W-->Line_14 $$ for (int k = 0; k < W; k++) [ FD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_14 $$ for (int k = 0; k < W; k++) [ CD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_14 $$ for (int k = 0; k < W; k++) [ CD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_14 $$ for (int k = 0; k < W; k++) [ FD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_15 $$ System.out.print("#")[ CD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_17 $$ System.out.println("")[ CD ]
Line_9 $$ if (H == 0 && W == 0) -->Line_19 $$ System.out.println("")[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ FD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ FD ]
Line_13 $$ for (int j = 0; j < H; j++) -->Line_13 $$ for (int j = 0; j < H; j++) [ FD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_14 $$ for (int k = 0; k < W; k++) [ FD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_14 $$ for (int k = 0; k < W; k++) [ FD ]
Line_14 $$ for (int k = 0; k < W; k++) -->Line_14 $$ for (int k = 0; k < W; k++) [ FD ]
