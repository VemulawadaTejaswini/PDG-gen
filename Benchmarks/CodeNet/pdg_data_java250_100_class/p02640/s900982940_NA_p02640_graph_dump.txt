Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ static final String YES = "Yes";[ CD ]
Line_1 $$ public class Main -->Line_4 $$ public static void main(String[] args) [ CD ]
Line_4 $$ public static void main(String[] args) -->Line_5 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_6 $$ int X = scan.nextInt()[ CD ]
Line_6 $$ int X = scan.nextInt()-->Line_6 $$ int X = scan.nextInt()[ CD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_6 $$ int X = scan.nextInt()[ FD ]
Line_4 $$ public static void main(String[] args) -->Line_7 $$ int Y = scan.nextInt()[ CD ]
Line_7 $$ int Y = scan.nextInt()-->Line_7 $$ int Y = scan.nextInt()[ CD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_7 $$ int Y = scan.nextInt()[ FD ]
Line_4 $$ public static void main(String[] args) -->Line_8 $$ scan.close()[ CD ]
Line_5 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ scan.close()[ FD ]
Line_4 $$ public static void main(String[] args) -->Line_9 $$ if (Y % 2 != 0) [ CD ]
Line_9 $$ if (Y % 2 != 0) -->Line_10 $$ System.out.println(NO)[ CD ]
Line_9 $$ if (Y % 2 != 0) -->Line_11 $$ return[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_13 $$ int crane = 2 * X - Y / 2[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_14 $$ int turtle = (Y - 2 * X) / 2[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_15 $$ if (crane < 0) [ CD ]
Line_13 $$ int crane = 2 * X - Y / 2-->Line_15 $$ if (crane < 0) [ FD ]
Line_15 $$ if (crane < 0) -->Line_16 $$ System.out.println(NO)[ CD ]
Line_15 $$ if (crane < 0) -->Line_17 $$ return[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_19 $$ if (turtle < 0) [ CD ]
Line_14 $$ int turtle = (Y - 2 * X) / 2-->Line_19 $$ if (turtle < 0) [ FD ]
Line_19 $$ if (turtle < 0) -->Line_20 $$ System.out.println(NO)[ CD ]
Line_19 $$ if (turtle < 0) -->Line_21 $$ return[ CD ]
Line_4 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(YES)[ CD ]
