Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String N = sc.next()[ CD ]
Line_4 $$ String N = sc.next()-->Line_4 $$ String N = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String N = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ long n = Long.parseLong(N)[ CD ]
Line_5 $$ long n = Long.parseLong(N)-->Line_5 $$ long n = Long.parseLong(N)[ CD ]
Line_4 $$ String N = sc.next()-->Line_5 $$ long n = Long.parseLong(N)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String A = sc.next()[ CD ]
Line_6 $$ String A = sc.next()-->Line_6 $$ String A = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String A = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ long a = Long.parseLong(A)[ CD ]
Line_7 $$ long a = Long.parseLong(A)-->Line_7 $$ long a = Long.parseLong(A)[ CD ]
Line_6 $$ String A = sc.next()-->Line_7 $$ long a = Long.parseLong(A)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ String B = sc.next()[ CD ]
Line_8 $$ String B = sc.next()-->Line_8 $$ String B = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ String B = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ long b = Long.parseLong(B)[ CD ]
Line_9 $$ long b = Long.parseLong(B)-->Line_9 $$ long b = Long.parseLong(B)[ CD ]
Line_8 $$ String B = sc.next()-->Line_9 $$ long b = Long.parseLong(B)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ long buf[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ long rem[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ long ans[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ buf = n / (a + b)[ CD ]
Line_10 $$ long buf-->Line_13 $$ buf = n / (a + b)[ FD ]
Line_13 $$ buf = n / (a + b)-->Line_13 $$ buf = n / (a + b)[ FD ]
Line_5 $$ long n = Long.parseLong(N)-->Line_13 $$ buf = n / (a + b)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ rem = n - buf * (a + b)[ CD ]
Line_11 $$ long rem-->Line_14 $$ rem = n - buf * (a + b)[ FD ]
Line_14 $$ rem = n - buf * (a + b)-->Line_14 $$ rem = n - buf * (a + b)[ FD ]
Line_5 $$ long n = Long.parseLong(N)-->Line_14 $$ rem = n - buf * (a + b)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ if (rem > a) [ CD ]
Line_11 $$ long rem-->Line_15 $$ if (rem > a) [ FD ]
Line_14 $$ rem = n - buf * (a + b)-->Line_15 $$ if (rem > a) [ FD ]
Line_7 $$ long a = Long.parseLong(A)-->Line_15 $$ if (rem > a) [ FD ]
Line_15 $$ if (rem > a) -->Line_16 $$ ans = (buf + 1) * a[ CD ]
Line_12 $$ long ans-->Line_16 $$ ans = (buf + 1) * a[ FD ]
Line_16 $$ ans = (buf + 1) * a-->Line_16 $$ ans = (buf + 1) * a[ FD ]
Line_7 $$ long a = Long.parseLong(A)-->Line_16 $$ ans = (buf + 1) * a[ FD ]
Line_15 $$ if (rem > a) -->Line_18 $$ ans = buf * a + rem[ CD ]
Line_12 $$ long ans-->Line_18 $$ ans = buf * a + rem[ FD ]
Line_16 $$ ans = (buf + 1) * a-->Line_18 $$ ans = buf * a + rem[ FD ]
Line_18 $$ ans = buf * a + rem-->Line_18 $$ ans = buf * a + rem[ FD ]
Line_11 $$ long rem-->Line_18 $$ ans = buf * a + rem[ FD ]
Line_14 $$ rem = n - buf * (a + b)-->Line_18 $$ ans = buf * a + rem[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(ans)[ CD ]
Line_12 $$ long ans-->Line_20 $$ System.out.println(ans)[ FD ]
Line_16 $$ ans = (buf + 1) * a-->Line_20 $$ System.out.println(ans)[ FD ]
Line_18 $$ ans = buf * a + rem-->Line_20 $$ System.out.println(ans)[ FD ]
