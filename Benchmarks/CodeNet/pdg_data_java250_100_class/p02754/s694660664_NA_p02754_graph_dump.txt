Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ InputStreamReader in = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedReader br = new BufferedReader(in)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String[] line = br.readLine().split(" ")[ CD ]
Line_5 $$ String[] line = br.readLine().split(" ")-->Line_5 $$ String[] line = br.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(in)-->Line_5 $$ String[] line = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ long n = Long.parseLong(line[0])[ CD ]
Line_6 $$ long n = Long.parseLong(line[0])-->Line_6 $$ long n = Long.parseLong(line[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ long a = Long.parseLong(line[1])[ CD ]
Line_7 $$ long a = Long.parseLong(line[1])-->Line_7 $$ long a = Long.parseLong(line[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ long b = Long.parseLong(line[2])[ CD ]
Line_8 $$ long b = Long.parseLong(line[2])-->Line_8 $$ long b = Long.parseLong(line[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ br.close()[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(in)-->Line_9 $$ br.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ long blue = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ if (a == 0) [ CD ]
Line_7 $$ long a = Long.parseLong(line[1])-->Line_11 $$ if (a == 0) [ FD ]
Line_11 $$ if (a == 0) -->Line_12 $$ blue = 0[ CD ]
Line_10 $$ long blue = 0-->Line_12 $$ blue = 0[ FD ]
Line_12 $$ blue = 0-->Line_12 $$ blue = 0[ FD ]
Line_11 $$ if (a == 0) -->Line_14 $$ long mod = n % (a + b)[ CD ]
Line_11 $$ if (a == 0) -->Line_15 $$ long div = n / (a + b)[ CD ]
Line_11 $$ if (a == 0) -->Line_16 $$ if (mod == 0 || mod <= a) [ CD ]
Line_16 $$ if (mod == 0 || mod <= a) -->Line_17 $$ blue = a * div + mod[ CD ]
Line_10 $$ long blue = 0-->Line_17 $$ blue = a * div + mod[ FD ]
Line_12 $$ blue = 0-->Line_17 $$ blue = a * div + mod[ FD ]
Line_17 $$ blue = a * div + mod-->Line_17 $$ blue = a * div + mod[ FD ]
Line_14 $$ long mod = n % (a + b)-->Line_17 $$ blue = a * div + mod[ FD ]
Line_16 $$ if (mod == 0 || mod <= a) -->Line_19 $$ blue = a * div + a[ CD ]
Line_10 $$ long blue = 0-->Line_19 $$ blue = a * div + a[ FD ]
Line_12 $$ blue = 0-->Line_19 $$ blue = a * div + a[ FD ]
Line_17 $$ blue = a * div + mod-->Line_19 $$ blue = a * div + a[ FD ]
Line_19 $$ blue = a * div + a-->Line_19 $$ blue = a * div + a[ FD ]
Line_7 $$ long a = Long.parseLong(line[1])-->Line_19 $$ blue = a * div + a[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_22 $$ System.out.println(blue)[ CD ]
Line_10 $$ long blue = 0-->Line_22 $$ System.out.println(blue)[ FD ]
Line_12 $$ blue = 0-->Line_22 $$ System.out.println(blue)[ FD ]
Line_17 $$ blue = a * div + mod-->Line_22 $$ System.out.println(blue)[ FD ]
Line_19 $$ blue = a * div + a-->Line_22 $$ System.out.println(blue)[ FD ]
