Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ BigInteger N = new BigInteger(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ BigInteger N = new BigInteger(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ BigInteger A = new BigInteger(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ BigInteger A = new BigInteger(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ BigInteger B = new BigInteger(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ BigInteger B = new BigInteger(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ BigInteger sum = A.add(B)[ CD ]
Line_7 $$ BigInteger sum = A.add(B)-->Line_7 $$ BigInteger sum = A.add(B)[ CD ]
Line_5 $$ BigInteger A = new BigInteger(sc.next())-->Line_7 $$ BigInteger sum = A.add(B)[ FD ]
Line_6 $$ BigInteger B = new BigInteger(sc.next())-->Line_7 $$ BigInteger sum = A.add(B)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ BigInteger setCount = N.divide(sum)[ CD ]
Line_8 $$ BigInteger setCount = N.divide(sum)-->Line_8 $$ BigInteger setCount = N.divide(sum)[ CD ]
Line_4 $$ BigInteger N = new BigInteger(sc.next())-->Line_8 $$ BigInteger setCount = N.divide(sum)[ FD ]
Line_7 $$ BigInteger sum = A.add(B)-->Line_8 $$ BigInteger setCount = N.divide(sum)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ BigInteger remain = N.remainder(sum)[ CD ]
Line_9 $$ BigInteger remain = N.remainder(sum)-->Line_9 $$ BigInteger remain = N.remainder(sum)[ CD ]
Line_4 $$ BigInteger N = new BigInteger(sc.next())-->Line_9 $$ BigInteger remain = N.remainder(sum)[ FD ]
Line_7 $$ BigInteger sum = A.add(B)-->Line_9 $$ BigInteger remain = N.remainder(sum)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ BigInteger result = A.multiply(setCount)[ CD ]
Line_10 $$ BigInteger result = A.multiply(setCount)-->Line_10 $$ BigInteger result = A.multiply(setCount)[ CD ]
Line_5 $$ BigInteger A = new BigInteger(sc.next())-->Line_10 $$ BigInteger result = A.multiply(setCount)[ FD ]
Line_8 $$ BigInteger setCount = N.divide(sum)-->Line_10 $$ BigInteger result = A.multiply(setCount)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ if (remain.compareTo(A) >= 0) [ CD ]
Line_9 $$ BigInteger remain = N.remainder(sum)-->Line_11 $$ if (remain.compareTo(A) >= 0) [ FD ]
Line_5 $$ BigInteger A = new BigInteger(sc.next())-->Line_11 $$ if (remain.compareTo(A) >= 0) [ FD ]
Line_11 $$ if (remain.compareTo(A) >= 0) -->Line_12 $$ result = result.add(A)[ CD ]
Line_10 $$ BigInteger result = A.multiply(setCount)-->Line_12 $$ result = result.add(A)[ FD ]
Line_12 $$ result = result.add(A)-->Line_12 $$ result = result.add(A)[ FD ]
Line_12 $$ result = result.add(A)-->Line_12 $$ result = result.add(A)[ CD ]
Line_10 $$ BigInteger result = A.multiply(setCount)-->Line_12 $$ result = result.add(A)[ FD ]
Line_12 $$ result = result.add(A)-->Line_12 $$ result = result.add(A)[ FD ]
Line_5 $$ BigInteger A = new BigInteger(sc.next())-->Line_12 $$ result = result.add(A)[ FD ]
Line_11 $$ if (remain.compareTo(A) >= 0) -->Line_14 $$ result = result.add(remain)[ CD ]
Line_10 $$ BigInteger result = A.multiply(setCount)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_12 $$ result = result.add(A)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_14 $$ result = result.add(remain)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_14 $$ result = result.add(remain)-->Line_14 $$ result = result.add(remain)[ CD ]
Line_10 $$ BigInteger result = A.multiply(setCount)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_12 $$ result = result.add(A)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_14 $$ result = result.add(remain)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_9 $$ BigInteger remain = N.remainder(sum)-->Line_14 $$ result = result.add(remain)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(result)[ CD ]
Line_10 $$ BigInteger result = A.multiply(setCount)-->Line_16 $$ System.out.println(result)[ FD ]
Line_12 $$ result = result.add(A)-->Line_16 $$ System.out.println(result)[ FD ]
Line_14 $$ result = result.add(remain)-->Line_16 $$ System.out.println(result)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_17 $$ sc.close()[ FD ]
