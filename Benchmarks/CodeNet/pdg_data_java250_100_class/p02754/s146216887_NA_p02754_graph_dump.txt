Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ BigInteger n = new BigInteger(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ BigInteger n = new BigInteger(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ BigInteger a_blue = new BigInteger(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ BigInteger a_blue = new BigInteger(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ BigInteger b_red = new BigInteger(sc.next())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ BigInteger b_red = new BigInteger(sc.next())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ BigInteger absum = a_blue.add(b_red)[ CD ]
Line_7 $$ BigInteger absum = a_blue.add(b_red)-->Line_7 $$ BigInteger absum = a_blue.add(b_red)[ CD ]
Line_5 $$ BigInteger a_blue = new BigInteger(sc.next())-->Line_7 $$ BigInteger absum = a_blue.add(b_red)[ FD ]
Line_6 $$ BigInteger b_red = new BigInteger(sc.next())-->Line_7 $$ BigInteger absum = a_blue.add(b_red)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ BigInteger div = n.divide(absum)[ CD ]
Line_8 $$ BigInteger div = n.divide(absum)-->Line_8 $$ BigInteger div = n.divide(absum)[ CD ]
Line_4 $$ BigInteger n = new BigInteger(sc.next())-->Line_8 $$ BigInteger div = n.divide(absum)[ FD ]
Line_7 $$ BigInteger absum = a_blue.add(b_red)-->Line_8 $$ BigInteger div = n.divide(absum)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ BigInteger rem = n.remainder(absum)[ CD ]
Line_9 $$ BigInteger rem = n.remainder(absum)-->Line_9 $$ BigInteger rem = n.remainder(absum)[ CD ]
Line_4 $$ BigInteger n = new BigInteger(sc.next())-->Line_9 $$ BigInteger rem = n.remainder(absum)[ FD ]
Line_7 $$ BigInteger absum = a_blue.add(b_red)-->Line_9 $$ BigInteger rem = n.remainder(absum)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))[ CD ]
Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))-->Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))[ CD ]
Line_8 $$ BigInteger div = n.divide(absum)-->Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))[ FD ]
Line_5 $$ BigInteger a_blue = new BigInteger(sc.next())-->Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))[ FD ]
Line_9 $$ BigInteger rem = n.remainder(absum)-->Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))[ FD ]
Line_5 $$ BigInteger a_blue = new BigInteger(sc.next())-->Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ System.out.println(answer)[ CD ]
Line_10 $$ BigInteger answer = div.multiply(a_blue).add(rem.min(a_blue))-->Line_11 $$ System.out.println(answer)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_12 $$ sc.close()[ FD ]
