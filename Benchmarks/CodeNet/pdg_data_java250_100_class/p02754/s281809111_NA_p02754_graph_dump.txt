Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String data = sc.nextLine()[ CD ]
Line_4 $$ String data = sc.nextLine()-->Line_4 $$ String data = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String data = sc.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String[] array = data.split(" ")[ CD ]
Line_5 $$ String[] array = data.split(" ")-->Line_5 $$ String[] array = data.split(" ")[ CD ]
Line_4 $$ String data = sc.nextLine()-->Line_5 $$ String[] array = data.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ long n = Long.parseLong(array[0])[ CD ]
Line_6 $$ long n = Long.parseLong(array[0])-->Line_6 $$ long n = Long.parseLong(array[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ long a = Long.parseLong(array[1])[ CD ]
Line_7 $$ long a = Long.parseLong(array[1])-->Line_7 $$ long a = Long.parseLong(array[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ long b = Long.parseLong(array[2])[ CD ]
Line_8 $$ long b = Long.parseLong(array[2])-->Line_8 $$ long b = Long.parseLong(array[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ long count = n / (a + b)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ long amari = n % (a + b)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ long blue = count * a[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ if (amari <= a) [ CD ]
Line_10 $$ long amari = n % (a + b)-->Line_12 $$ if (amari <= a) [ FD ]
Line_7 $$ long a = Long.parseLong(array[1])-->Line_12 $$ if (amari <= a) [ FD ]
Line_12 $$ if (amari <= a) -->Line_14 $$ blue += amari[ CD ]
Line_11 $$ long blue = count * a-->Line_14 $$ blue += amari[ FD ]
Line_14 $$ blue += amari-->Line_14 $$ blue += amari[ FD ]
Line_10 $$ long amari = n % (a + b)-->Line_14 $$ blue += amari[ FD ]
Line_12 $$ if (amari <= a) -->Line_18 $$ blue += a[ CD ]
Line_11 $$ long blue = count * a-->Line_18 $$ blue += a[ FD ]
Line_14 $$ blue += amari-->Line_18 $$ blue += a[ FD ]
Line_18 $$ blue += a-->Line_18 $$ blue += a[ FD ]
Line_7 $$ long a = Long.parseLong(array[1])-->Line_18 $$ blue += a[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_20 $$ System.out.println(blue)[ CD ]
Line_11 $$ long blue = count * a-->Line_20 $$ System.out.println(blue)[ FD ]
Line_14 $$ blue += amari-->Line_20 $$ System.out.println(blue)[ FD ]
Line_18 $$ blue += a-->Line_20 $$ System.out.println(blue)[ FD ]
