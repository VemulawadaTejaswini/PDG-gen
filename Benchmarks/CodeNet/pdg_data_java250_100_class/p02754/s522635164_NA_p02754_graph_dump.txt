Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String strN = sc.next()[ CD ]
Line_4 $$ String strN = sc.next()-->Line_4 $$ String strN = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String strN = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String strA = sc.next()[ CD ]
Line_5 $$ String strA = sc.next()-->Line_5 $$ String strA = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String strA = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String strB = sc.next()[ CD ]
Line_6 $$ String strB = sc.next()-->Line_6 $$ String strB = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ String strB = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ long N = Long.parseLong(strN)[ CD ]
Line_7 $$ long N = Long.parseLong(strN)-->Line_7 $$ long N = Long.parseLong(strN)[ CD ]
Line_4 $$ String strN = sc.next()-->Line_7 $$ long N = Long.parseLong(strN)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ long A = Long.parseLong(strA)[ CD ]
Line_8 $$ long A = Long.parseLong(strA)-->Line_8 $$ long A = Long.parseLong(strA)[ CD ]
Line_5 $$ String strA = sc.next()-->Line_8 $$ long A = Long.parseLong(strA)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ long B = Long.parseLong(strB)[ CD ]
Line_9 $$ long B = Long.parseLong(strB)-->Line_9 $$ long B = Long.parseLong(strB)[ CD ]
Line_6 $$ String strB = sc.next()-->Line_9 $$ long B = Long.parseLong(strB)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ boolean flg = false[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ if (A == 0) [ CD ]
Line_8 $$ long A = Long.parseLong(strA)-->Line_11 $$ if (A == 0) [ FD ]
Line_11 $$ if (A == 0) -->Line_12 $$ System.out.println(0)[ CD ]
Line_11 $$ if (A == 0) -->Line_13 $$ return[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ long roop = N / (A + B)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ long amari = N % (A + B)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ if (amari > A) [ CD ]
Line_16 $$ long amari = N % (A + B)-->Line_17 $$ if (amari > A) [ FD ]
Line_8 $$ long A = Long.parseLong(strA)-->Line_17 $$ if (amari > A) [ FD ]
Line_17 $$ if (amari > A) -->Line_18 $$ amari = A[ CD ]
Line_16 $$ long amari = N % (A + B)-->Line_18 $$ amari = A[ FD ]
Line_18 $$ amari = A-->Line_18 $$ amari = A[ FD ]
Line_8 $$ long A = Long.parseLong(strA)-->Line_18 $$ amari = A[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ System.out.println(roop * A + amari)[ CD ]
