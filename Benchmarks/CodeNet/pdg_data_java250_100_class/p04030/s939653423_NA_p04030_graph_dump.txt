Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String s = sc.next()[ CD ]
Line_4 $$ String s = sc.next()-->Line_4 $$ String s = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String s = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ Stack<Character> stack = new Stack<Character>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_4 $$ String s = sc.next()-->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ char c = s.charAt(i)[ CD ]
Line_7 $$ char c = s.charAt(i)-->Line_7 $$ char c = s.charAt(i)[ CD ]
Line_4 $$ String s = sc.next()-->Line_7 $$ char c = s.charAt(i)[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ char c = s.charAt(i)[ FD ]
Line_5 $$ Stack<Character> stack = new Stack<Character>()-->Line_11 $$ stack.push(c)[ FD ]
Line_7 $$ char c = s.charAt(i)-->Line_11 $$ stack.push(c)[ FD ]
Line_14 $$ if (!stack.isEmpty()) -->Line_14 $$ if (!stack.isEmpty()) [ CD ]
Line_14 $$ if (!stack.isEmpty()) -->Line_14 $$ if (!stack.isEmpty()) [ CD ]
Line_5 $$ Stack<Character> stack = new Stack<Character>()-->Line_14 $$ if (!stack.isEmpty()) [ FD ]
Line_14 $$ if (!stack.isEmpty()) -->Line_15 $$ stack.pop()[ CD ]
Line_5 $$ Stack<Character> stack = new Stack<Character>()-->Line_15 $$ stack.pop()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ String result = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ while (!stack.isEmpty()) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_20 $$ while (!stack.isEmpty()) -->Line_20 $$ while (!stack.isEmpty()) [ CD ]
Line_20 $$ while (!stack.isEmpty()) -->Line_20 $$ while (!stack.isEmpty()) [ CD ]
Line_5 $$ Stack<Character> stack = new Stack<Character>()-->Line_20 $$ while (!stack.isEmpty()) [ FD ]
Line_20 $$ while (!stack.isEmpty()) -->Line_21 $$ result = stack.pop() + result[ CD ]
Line_21 $$ result = stack.pop() + result-->Line_21 $$ result = stack.pop() + result[ FD ]
Line_19 $$ String result = ""-->Line_21 $$ result = stack.pop() + result[ FD ]
Line_21 $$ result = stack.pop() + result-->Line_21 $$ result = stack.pop() + result[ FD ]
Line_19 $$ String result = ""-->Line_21 $$ result = stack.pop() + result[ FD ]
Line_5 $$ Stack<Character> stack = new Stack<Character>()-->Line_21 $$ result = stack.pop() + result[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(result)[ CD ]
Line_21 $$ result = stack.pop() + result-->Line_23 $$ System.out.println(result)[ FD ]
Line_19 $$ String result = ""-->Line_23 $$ System.out.println(result)[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ char c = s.charAt(i)[ FD ]
Line_7 $$ char c = s.charAt(i)-->Line_11 $$ stack.push(c)[ FD ]
Line_21 $$ result = stack.pop() + result-->Line_21 $$ result = stack.pop() + result[ FD ]
