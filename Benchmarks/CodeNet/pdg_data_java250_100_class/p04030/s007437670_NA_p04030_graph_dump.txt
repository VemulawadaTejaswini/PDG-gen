Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String word = input.readLine()[ CD ]
Line_4 $$ String word = input.readLine()-->Line_4 $$ String word = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String word = input.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ Stack<Character> characters = new Stack()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_4 $$ String word = input.readLine()-->Line_6 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) [ CD ]
Line_4 $$ String word = input.readLine()-->Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) [ FD ]
Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) -->Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) [ CD ]
Line_5 $$ Stack<Character> characters = new Stack()-->Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) [ FD ]
Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) -->Line_8 $$ characters.pop()[ CD ]
Line_5 $$ Stack<Character> characters = new Stack()-->Line_8 $$ characters.pop()[ FD ]
Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) -->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ CD ]
Line_4 $$ String word = input.readLine()-->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ FD ]
Line_4 $$ String word = input.readLine()-->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ FD ]
Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') -->Line_10 $$ characters.push(word.charAt(i))[ CD ]
Line_5 $$ Stack<Character> characters = new Stack()-->Line_10 $$ characters.push(word.charAt(i))[ FD ]
Line_4 $$ String word = input.readLine()-->Line_10 $$ characters.push(word.charAt(i))[ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_10 $$ characters.push(word.charAt(i))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ StringBuilder out = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_5 $$ Stack<Character> characters = new Stack()-->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_15 $$ out.append(characters.get(i))[ CD ]
Line_13 $$ StringBuilder out = new StringBuilder()-->Line_15 $$ out.append(characters.get(i))[ FD ]
Line_5 $$ Stack<Character> characters = new Stack()-->Line_15 $$ out.append(characters.get(i))[ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_15 $$ out.append(characters.get(i))[ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_15 $$ out.append(characters.get(i))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ System.out.println(out)[ CD ]
Line_13 $$ StringBuilder out = new StringBuilder()-->Line_17 $$ System.out.println(out)[ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_6 $$ for (int i = 0; i < word.length(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_7 $$ if (word.charAt(i) == 'B' && !characters.isEmpty()) [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_9 $$ if (word.charAt(i) == '1' || word.charAt(i) == '0') [ FD ]
Line_6 $$ for (int i = 0; i < word.length(); i++) -->Line_10 $$ characters.push(word.charAt(i))[ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_14 $$ for (int i = 0; i < characters.size(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < characters.size(); i++) -->Line_15 $$ out.append(characters.get(i))[ FD ]
