Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ LinkedList<Character> stack = new LinkedList()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String s = sc.next()[ CD ]
Line_5 $$ String s = sc.next()-->Line_5 $$ String s = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ String s = sc.next()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String res = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_5 $$ String s = sc.next()-->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (s.charAt(i) == 'B') [ CD ]
Line_5 $$ String s = sc.next()-->Line_8 $$ if (s.charAt(i) == 'B') [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (s.charAt(i) == 'B') [ FD ]
Line_8 $$ if (s.charAt(i) == 'B') -->Line_9 $$ if (!stack.isEmpty()) [ CD ]
Line_9 $$ if (!stack.isEmpty()) -->Line_9 $$ if (!stack.isEmpty()) [ CD ]
Line_9 $$ if (!stack.isEmpty()) -->Line_9 $$ if (!stack.isEmpty()) [ CD ]
Line_4 $$ LinkedList<Character> stack = new LinkedList()-->Line_9 $$ if (!stack.isEmpty()) [ FD ]
Line_9 $$ if (!stack.isEmpty()) -->Line_10 $$ stack.pop()[ CD ]
Line_4 $$ LinkedList<Character> stack = new LinkedList()-->Line_10 $$ stack.pop()[ FD ]
Line_8 $$ if (s.charAt(i) == 'B') -->Line_13 $$ stack.push(s.charAt(i))[ CD ]
Line_4 $$ LinkedList<Character> stack = new LinkedList()-->Line_13 $$ stack.push(s.charAt(i))[ FD ]
Line_5 $$ String s = sc.next()-->Line_13 $$ stack.push(s.charAt(i))[ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_13 $$ stack.push(s.charAt(i))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ while (!stack.isEmpty()) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_16 $$ while (!stack.isEmpty()) -->Line_16 $$ while (!stack.isEmpty()) [ CD ]
Line_16 $$ while (!stack.isEmpty()) -->Line_16 $$ while (!stack.isEmpty()) [ CD ]
Line_4 $$ LinkedList<Character> stack = new LinkedList()-->Line_16 $$ while (!stack.isEmpty()) [ FD ]
Line_16 $$ while (!stack.isEmpty()) -->Line_17 $$ res = stack.pop() + res[ CD ]
Line_17 $$ res = stack.pop() + res-->Line_17 $$ res = stack.pop() + res[ FD ]
Line_6 $$ String res = ""-->Line_17 $$ res = stack.pop() + res[ FD ]
Line_17 $$ res = stack.pop() + res-->Line_17 $$ res = stack.pop() + res[ FD ]
Line_6 $$ String res = ""-->Line_17 $$ res = stack.pop() + res[ FD ]
Line_4 $$ LinkedList<Character> stack = new LinkedList()-->Line_17 $$ res = stack.pop() + res[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ System.out.println(res)[ CD ]
Line_17 $$ res = stack.pop() + res-->Line_19 $$ System.out.println(res)[ FD ]
Line_6 $$ String res = ""-->Line_19 $$ System.out.println(res)[ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ if (s.charAt(i) == 'B') [ FD ]
Line_7 $$ for (int i = 0; i < s.length(); i++) -->Line_13 $$ stack.push(s.charAt(i))[ FD ]
Line_17 $$ res = stack.pop() + res-->Line_17 $$ res = stack.pop() + res[ FD ]
