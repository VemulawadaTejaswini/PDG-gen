Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String agrs[]) [ CD ]
Line_2 $$ public static void main(String agrs[]) -->Line_4 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String agrs[]) -->Line_5 $$ double a = in.nextDouble()[ CD ]
Line_5 $$ double a = in.nextDouble()-->Line_5 $$ double a = in.nextDouble()[ CD ]
Line_4 $$ Scanner in = new Scanner(System.in)-->Line_5 $$ double a = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_6 $$ double b = in.nextDouble()[ CD ]
Line_6 $$ double b = in.nextDouble()-->Line_6 $$ double b = in.nextDouble()[ CD ]
Line_4 $$ Scanner in = new Scanner(System.in)-->Line_6 $$ double b = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_7 $$ double h = in.nextDouble()[ CD ]
Line_7 $$ double h = in.nextDouble()-->Line_7 $$ double h = in.nextDouble()[ CD ]
Line_4 $$ Scanner in = new Scanner(System.in)-->Line_7 $$ double h = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_8 $$ double m = in.nextDouble()[ CD ]
Line_8 $$ double m = in.nextDouble()-->Line_8 $$ double m = in.nextDouble()[ CD ]
Line_4 $$ Scanner in = new Scanner(System.in)-->Line_8 $$ double m = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_9 $$ h *= 30[ CD ]
Line_7 $$ double h = in.nextDouble()-->Line_9 $$ h *= 30[ FD ]
Line_9 $$ h *= 30-->Line_9 $$ h *= 30[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_10 $$ m *= 6[ CD ]
Line_8 $$ double m = in.nextDouble()-->Line_10 $$ m *= 6[ FD ]
Line_10 $$ m *= 6-->Line_10 $$ m *= 6[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_11 $$ h += m / 12[ CD ]
Line_7 $$ double h = in.nextDouble()-->Line_11 $$ h += m / 12[ FD ]
Line_9 $$ h *= 30-->Line_11 $$ h += m / 12[ FD ]
Line_11 $$ h += m / 12-->Line_11 $$ h += m / 12[ FD ]
Line_8 $$ double m = in.nextDouble()-->Line_11 $$ h += m / 12[ FD ]
Line_10 $$ m *= 6-->Line_11 $$ h += m / 12[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_12 $$ if (m == 0) [ CD ]
Line_8 $$ double m = in.nextDouble()-->Line_12 $$ if (m == 0) [ FD ]
Line_10 $$ m *= 6-->Line_12 $$ if (m == 0) [ FD ]
Line_12 $$ if (m == 0) -->Line_14 $$ m = 360.0[ CD ]
Line_8 $$ double m = in.nextDouble()-->Line_14 $$ m = 360.0[ FD ]
Line_10 $$ m *= 6-->Line_14 $$ m = 360.0[ FD ]
Line_14 $$ m = 360.0-->Line_14 $$ m = 360.0[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_16 $$ if (h == 0) [ CD ]
Line_7 $$ double h = in.nextDouble()-->Line_16 $$ if (h == 0) [ FD ]
Line_9 $$ h *= 30-->Line_16 $$ if (h == 0) [ FD ]
Line_11 $$ h += m / 12-->Line_16 $$ if (h == 0) [ FD ]
Line_16 $$ if (h == 0) -->Line_18 $$ h = 360.0[ CD ]
Line_7 $$ double h = in.nextDouble()-->Line_18 $$ h = 360.0[ FD ]
Line_9 $$ h *= 30-->Line_18 $$ h = 360.0[ FD ]
Line_11 $$ h += m / 12-->Line_18 $$ h = 360.0[ FD ]
Line_18 $$ h = 360.0-->Line_18 $$ h = 360.0[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_20 $$ double angle = Math.min(Math.abs(h - m), Math.abs(m - h))[ CD ]
Line_20 $$ double angle = Math.min(Math.abs(h - m), Math.abs(m - h))-->Line_20 $$ double angle = Math.min(Math.abs(h - m), Math.abs(m - h))[ CD ]
Line_2 $$ public static void main(String agrs[]) -->Line_21 $$ angle /= 180[ CD ]
Line_20 $$ double angle = Math.min(Math.abs(h - m), Math.abs(m - h))-->Line_21 $$ angle /= 180[ FD ]
Line_21 $$ angle /= 180-->Line_21 $$ angle /= 180[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_22 $$ angle *= Math.PI[ CD ]
Line_20 $$ double angle = Math.min(Math.abs(h - m), Math.abs(m - h))-->Line_22 $$ angle *= Math.PI[ FD ]
Line_21 $$ angle /= 180-->Line_22 $$ angle *= Math.PI[ FD ]
Line_22 $$ angle *= Math.PI-->Line_22 $$ angle *= Math.PI[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))[ CD ]
Line_5 $$ double a = in.nextDouble()-->Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))[ FD ]
Line_6 $$ double b = in.nextDouble()-->Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))[ FD ]
Line_20 $$ double angle = Math.min(Math.abs(h - m), Math.abs(m - h))-->Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))[ FD ]
Line_21 $$ angle /= 180-->Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))[ FD ]
Line_22 $$ angle *= Math.PI-->Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_24 $$ hyp = Math.sqrt(hyp)[ CD ]
Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))-->Line_24 $$ hyp = Math.sqrt(hyp)[ FD ]
Line_24 $$ hyp = Math.sqrt(hyp)-->Line_24 $$ hyp = Math.sqrt(hyp)[ FD ]
Line_24 $$ hyp = Math.sqrt(hyp)-->Line_24 $$ hyp = Math.sqrt(hyp)[ CD ]
Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))-->Line_24 $$ hyp = Math.sqrt(hyp)[ FD ]
Line_24 $$ hyp = Math.sqrt(hyp)-->Line_24 $$ hyp = Math.sqrt(hyp)[ FD ]
Line_2 $$ public static void main(String agrs[]) -->Line_25 $$ System.out.println(hyp)[ CD ]
Line_23 $$ double hyp = Math.pow(a, 2) + Math.pow(b, 2) - (2 * a * b * Math.cos(angle))-->Line_25 $$ System.out.println(hyp)[ FD ]
Line_24 $$ hyp = Math.sqrt(hyp)-->Line_25 $$ System.out.println(hyp)[ FD ]
