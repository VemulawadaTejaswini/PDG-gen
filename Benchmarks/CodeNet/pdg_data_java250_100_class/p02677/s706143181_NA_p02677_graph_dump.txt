Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ static Scanner sc = new Scanner(System.in);[ CD ]
Line_1 $$ class Main -->Line_3 $$ public static void main(String[] args) [ CD ]
Line_3 $$ public static void main(String[] args) -->Line_4 $$ double A = sc.nextDouble()[ CD ]
Line_4 $$ double A = sc.nextDouble()-->Line_4 $$ double A = sc.nextDouble()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_5 $$ double B = sc.nextDouble()[ CD ]
Line_5 $$ double B = sc.nextDouble()-->Line_5 $$ double B = sc.nextDouble()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_6 $$ double H = sc.nextDouble()[ CD ]
Line_6 $$ double H = sc.nextDouble()-->Line_6 $$ double H = sc.nextDouble()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_7 $$ double M = sc.nextDouble()[ CD ]
Line_7 $$ double M = sc.nextDouble()-->Line_7 $$ double M = sc.nextDouble()[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_8 $$ double thetaH = 2 * Math.PI * (H + M / 60) / 12[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_9 $$ double thetaM = 2 * Math.PI * M / 60[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_10 $$ double theta = Math.abs(thetaH - thetaM)[ CD ]
Line_10 $$ double theta = Math.abs(thetaH - thetaM)-->Line_10 $$ double theta = Math.abs(thetaH - thetaM)[ CD ]
Line_3 $$ public static void main(String[] args) -->Line_11 $$ double distance = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(theta))[ CD ]
Line_11 $$ double distance = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(theta))-->Line_11 $$ double distance = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(theta))[ CD ]
Line_10 $$ double theta = Math.abs(thetaH - thetaM)-->Line_11 $$ double distance = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(theta))[ FD ]
Line_3 $$ public static void main(String[] args) -->Line_12 $$ System.out.println(distance)[ CD ]
Line_11 $$ double distance = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(theta))-->Line_12 $$ System.out.println(distance)[ FD ]
