Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner in = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ double A = in.nextDouble()[ CD ]
Line_4 $$ double A = in.nextDouble()-->Line_4 $$ double A = in.nextDouble()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_4 $$ double A = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double B = in.nextDouble()[ CD ]
Line_5 $$ double B = in.nextDouble()-->Line_5 $$ double B = in.nextDouble()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_5 $$ double B = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double ho = in.nextDouble()[ CD ]
Line_6 $$ double ho = in.nextDouble()-->Line_6 $$ double ho = in.nextDouble()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_6 $$ double ho = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ double mi = in.nextDouble()[ CD ]
Line_7 $$ double mi = in.nextDouble()-->Line_7 $$ double mi = in.nextDouble()[ CD ]
Line_3 $$ Scanner in = new Scanner(System.in)-->Line_7 $$ double mi = in.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double rad = 60 / mi[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double radMi = 360 / rad[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double radiHo = (ho * 30) + (30 / rad)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double radian = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ if (radiHo > radMi) [ CD ]
Line_10 $$ double radiHo = (ho * 30) + (30 / rad)-->Line_12 $$ if (radiHo > radMi) [ FD ]
Line_9 $$ double radMi = 360 / rad-->Line_12 $$ if (radiHo > radMi) [ FD ]
Line_12 $$ if (radiHo > radMi) -->Line_12 $$ radian = radiHo - radMi[ CD ]
Line_11 $$ double radian = 0-->Line_12 $$ radian = radiHo - radMi[ FD ]
Line_12 $$ radian = radiHo - radMi-->Line_12 $$ radian = radiHo - radMi[ FD ]
Line_10 $$ double radiHo = (ho * 30) + (30 / rad)-->Line_12 $$ radian = radiHo - radMi[ FD ]
Line_9 $$ double radMi = 360 / rad-->Line_12 $$ radian = radiHo - radMi[ FD ]
Line_12 $$ if (radiHo > radMi) -->Line_13 $$ radian = radMi - radiHo[ CD ]
Line_11 $$ double radian = 0-->Line_13 $$ radian = radMi - radiHo[ FD ]
Line_12 $$ radian = radiHo - radMi-->Line_13 $$ radian = radMi - radiHo[ FD ]
Line_13 $$ radian = radMi - radiHo-->Line_13 $$ radian = radMi - radiHo[ FD ]
Line_9 $$ double radMi = 360 / rad-->Line_13 $$ radian = radMi - radiHo[ FD ]
Line_10 $$ double radiHo = (ho * 30) + (30 / rad)-->Line_13 $$ radian = radMi - radiHo[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ double result = (A * A) + (B * B) - 2 * A * B * Math.cos(Math.toRadians(radian))[ CD ]
Line_11 $$ double radian = 0-->Line_14 $$ double result = (A * A) + (B * B) - 2 * A * B * Math.cos(Math.toRadians(radian))[ FD ]
Line_12 $$ radian = radiHo - radMi-->Line_14 $$ double result = (A * A) + (B * B) - 2 * A * B * Math.cos(Math.toRadians(radian))[ FD ]
Line_13 $$ radian = radMi - radiHo-->Line_14 $$ double result = (A * A) + (B * B) - 2 * A * B * Math.cos(Math.toRadians(radian))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ double ans = Math.sqrt(result)[ CD ]
Line_15 $$ double ans = Math.sqrt(result)-->Line_15 $$ double ans = Math.sqrt(result)[ CD ]
Line_14 $$ double result = (A * A) + (B * B) - 2 * A * B * Math.cos(Math.toRadians(radian))-->Line_15 $$ double ans = Math.sqrt(result)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(ans)[ CD ]
Line_15 $$ double ans = Math.sqrt(result)-->Line_16 $$ System.out.println(ans)[ FD ]
