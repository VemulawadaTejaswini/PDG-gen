Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int A = sc.nextInt()[ CD ]
Line_4 $$ int A = sc.nextInt()-->Line_4 $$ int A = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int A = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int B = sc.nextInt()[ CD ]
Line_5 $$ int B = sc.nextInt()-->Line_5 $$ int B = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int B = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int H = sc.nextInt()[ CD ]
Line_6 $$ int H = sc.nextInt()-->Line_6 $$ int H = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ int H = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int M = sc.nextInt()[ CD ]
Line_7 $$ int M = sc.nextInt()-->Line_7 $$ int M = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ int M = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ sc.close()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ sc.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ double kakudoA = (double) (0.5 * (H * 60 + M))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ double kakudoB = (double) (6 * M)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)[ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ double c = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ if (kakudoC == 0) [ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_13 $$ if (kakudoC == 0) [ FD ]
Line_13 $$ if (kakudoC == 0) -->Line_14 $$ c = Math.abs(A - B)[ CD ]
Line_12 $$ double c = 0-->Line_14 $$ c = Math.abs(A - B)[ FD ]
Line_14 $$ c = Math.abs(A - B)-->Line_14 $$ c = Math.abs(A - B)[ FD ]
Line_14 $$ c = Math.abs(A - B)-->Line_14 $$ c = Math.abs(A - B)[ CD ]
Line_13 $$ if (kakudoC == 0) -->Line_15 $$ if (kakudoC == 180) [ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_15 $$ if (kakudoC == 180) [ FD ]
Line_15 $$ if (kakudoC == 180) -->Line_16 $$ c = A + B[ CD ]
Line_12 $$ double c = 0-->Line_16 $$ c = A + B[ FD ]
Line_14 $$ c = Math.abs(A - B)-->Line_16 $$ c = A + B[ FD ]
Line_16 $$ c = A + B-->Line_16 $$ c = A + B[ FD ]
Line_4 $$ int A = sc.nextInt()-->Line_16 $$ c = A + B[ FD ]
Line_5 $$ int B = sc.nextInt()-->Line_16 $$ c = A + B[ FD ]
Line_15 $$ if (kakudoC == 180) -->Line_17 $$ if (kakudoC < 180) [ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_17 $$ if (kakudoC < 180) [ FD ]
Line_17 $$ if (kakudoC < 180) -->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ CD ]
Line_12 $$ double c = 0-->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_14 $$ c = Math.abs(A - B)-->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_16 $$ c = A + B-->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_17 $$ if (kakudoC < 180) -->Line_20 $$ kakudoC = 360 - kakudoC[ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_20 $$ kakudoC = 360 - kakudoC[ FD ]
Line_20 $$ kakudoC = 360 - kakudoC-->Line_20 $$ kakudoC = 360 - kakudoC[ FD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_20 $$ kakudoC = 360 - kakudoC[ FD ]
Line_20 $$ kakudoC = 360 - kakudoC-->Line_20 $$ kakudoC = 360 - kakudoC[ FD ]
Line_17 $$ if (kakudoC < 180) -->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ CD ]
Line_12 $$ double c = 0-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_14 $$ c = Math.abs(A - B)-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_16 $$ c = A + B-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ CD ]
Line_11 $$ double kakudoC = Math.abs(kakudoA - kakudoB)-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_20 $$ kakudoC = 360 - kakudoC-->Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_23 $$ System.out.println(c)[ CD ]
Line_12 $$ double c = 0-->Line_23 $$ System.out.println(c)[ FD ]
Line_14 $$ c = Math.abs(A - B)-->Line_23 $$ System.out.println(c)[ FD ]
Line_16 $$ c = A + B-->Line_23 $$ System.out.println(c)[ FD ]
Line_18 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_23 $$ System.out.println(c)[ FD ]
Line_21 $$ c = Math.sqrt(A * A + B * B - 2 * A * B * Math.cos(Math.toRadians(kakudoC)))-->Line_23 $$ System.out.println(c)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_24 $$ return[ CD ]
