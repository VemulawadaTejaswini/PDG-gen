Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String s = br.readLine()[ CD ]
Line_4 $$ String s = br.readLine()-->Line_4 $$ String s = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String s = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String[] cmd = s.split(" ")[ CD ]
Line_5 $$ String[] cmd = s.split(" ")-->Line_5 $$ String[] cmd = s.split(" ")[ CD ]
Line_4 $$ String s = br.readLine()-->Line_5 $$ String[] cmd = s.split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ double a = Double.valueOf(cmd[0])[ CD ]
Line_6 $$ double a = Double.valueOf(cmd[0])-->Line_6 $$ double a = Double.valueOf(cmd[0])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ double b = Double.valueOf(cmd[1])[ CD ]
Line_7 $$ double b = Double.valueOf(cmd[1])-->Line_7 $$ double b = Double.valueOf(cmd[1])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ double c = Double.valueOf(cmd[2])[ CD ]
Line_8 $$ double c = Double.valueOf(cmd[2])-->Line_8 $$ double c = Double.valueOf(cmd[2])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_9 $$ double d = Double.valueOf(cmd[3])[ CD ]
Line_9 $$ double d = Double.valueOf(cmd[3])-->Line_9 $$ double d = Double.valueOf(cmd[3])[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ double x = ((c * 60 + d) * 6) % 360[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ double y = c * 30 + (d * 1.0) / 2[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ double an = Math.abs(x - y)[ CD ]
Line_12 $$ double an = Math.abs(x - y)-->Line_12 $$ double an = Math.abs(x - y)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ if (an > 180)[ CD ]
Line_12 $$ double an = Math.abs(x - y)-->Line_13 $$ if (an > 180)[ FD ]
Line_13 $$ if (an > 180)-->Line_14 $$ an = 360 - an[ CD ]
Line_12 $$ double an = Math.abs(x - y)-->Line_14 $$ an = 360 - an[ FD ]
Line_14 $$ an = 360 - an-->Line_14 $$ an = 360 - an[ FD ]
Line_12 $$ double an = Math.abs(x - y)-->Line_14 $$ an = 360 - an[ FD ]
Line_14 $$ an = 360 - an-->Line_14 $$ an = 360 - an[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_15 $$ double a1 = a * a + b * b[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ double a2 = 2 * a * b[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_17 $$ double a3 = a1 - a2 * Math.cos((an * Math.PI) / 180)[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_18 $$ System.out.println(Math.sqrt(a3))[ CD ]
Line_17 $$ double a3 = a1 - a2 * Math.cos((an * Math.PI) / 180)-->Line_18 $$ System.out.println(Math.sqrt(a3))[ FD ]
