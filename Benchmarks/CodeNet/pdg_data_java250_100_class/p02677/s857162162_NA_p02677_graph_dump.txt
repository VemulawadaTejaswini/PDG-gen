Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ PrintWriter pw = new PrintWriter(System.out)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ double A = Double.parseDouble(st.nextToken())[ CD ]
Line_6 $$ double A = Double.parseDouble(st.nextToken())-->Line_6 $$ double A = Double.parseDouble(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_6 $$ double A = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ double B = Double.parseDouble(st.nextToken())[ CD ]
Line_7 $$ double B = Double.parseDouble(st.nextToken())-->Line_7 $$ double B = Double.parseDouble(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_7 $$ double B = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ double H = Double.parseDouble(st.nextToken())[ CD ]
Line_8 $$ double H = Double.parseDouble(st.nextToken())-->Line_8 $$ double H = Double.parseDouble(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_8 $$ double H = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ double M = Double.parseDouble(st.nextToken())[ CD ]
Line_9 $$ double M = Double.parseDouble(st.nextToken())-->Line_9 $$ double M = Double.parseDouble(st.nextToken())[ CD ]
Line_5 $$ StringTokenizer st = new StringTokenizer(br.readLine())-->Line_9 $$ double M = Double.parseDouble(st.nextToken())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ double angle_H = (60 * H + M) / 720 * 360[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_11 $$ double angle_M = M / 60 * 360[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_12 $$ double A_x = A * Math.cos(Math.toRadians(angle_H))[ CD ]
Line_10 $$ double angle_H = (60 * H + M) / 720 * 360-->Line_12 $$ double A_x = A * Math.cos(Math.toRadians(angle_H))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_13 $$ double A_y = A * Math.sin(Math.toRadians(angle_H))[ CD ]
Line_10 $$ double angle_H = (60 * H + M) / 720 * 360-->Line_13 $$ double A_y = A * Math.sin(Math.toRadians(angle_H))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ double B_x = B * Math.cos(Math.toRadians(angle_M))[ CD ]
Line_11 $$ double angle_M = M / 60 * 360-->Line_14 $$ double B_x = B * Math.cos(Math.toRadians(angle_M))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_15 $$ double B_y = B * Math.sin(Math.toRadians(angle_M))[ CD ]
Line_11 $$ double angle_M = M / 60 * 360-->Line_15 $$ double B_y = B * Math.sin(Math.toRadians(angle_M))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_16 $$ double ans = Math.sqrt(Math.pow((A_x - B_x), 2) + Math.pow((A_y - B_y), 2))[ CD ]
Line_16 $$ double ans = Math.sqrt(Math.pow((A_x - B_x), 2) + Math.pow((A_y - B_y), 2))-->Line_16 $$ double ans = Math.sqrt(Math.pow((A_x - B_x), 2) + Math.pow((A_y - B_y), 2))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_17 $$ pw.println(ans)[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_17 $$ pw.println(ans)[ FD ]
Line_16 $$ double ans = Math.sqrt(Math.pow((A_x - B_x), 2) + Math.pow((A_y - B_y), 2))-->Line_17 $$ pw.println(ans)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_18 $$ br.close()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new java.io.InputStreamReader(System.in))-->Line_18 $$ br.close()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_19 $$ pw.close()[ CD ]
Line_4 $$ PrintWriter pw = new PrintWriter(System.out)-->Line_19 $$ pw.close()[ FD ]
