Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ double pai = Math.PI[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double a = sc.nextDouble()[ CD ]
Line_5 $$ double a = sc.nextDouble()-->Line_5 $$ double a = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ double a = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ double b = sc.nextDouble()[ CD ]
Line_6 $$ double b = sc.nextDouble()-->Line_6 $$ double b = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double b = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ double h = sc.nextDouble()[ CD ]
Line_7 $$ double h = sc.nextDouble()-->Line_7 $$ double h = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ double h = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ double m = sc.nextDouble()[ CD ]
Line_8 $$ double m = sc.nextDouble()-->Line_8 $$ double m = sc.nextDouble()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ double m = sc.nextDouble()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ double cosC = Math.cos(Math.abs(30 * (h + m / 60) - 6 * m) / 180 * pai)[ CD ]
Line_9 $$ double cosC = Math.cos(Math.abs(30 * (h + m / 60) - 6 * m) / 180 * pai)-->Line_9 $$ double cosC = Math.cos(Math.abs(30 * (h + m / 60) - 6 * m) / 180 * pai)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ double ansPow = b * b + a * a - 2 * a * b * cosC[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ System.out.println(Math.pow(ansPow, 0.5))[ CD ]
Line_10 $$ double ansPow = b * b + a * a - 2 * a * b * cosC-->Line_11 $$ System.out.println(Math.pow(ansPow, 0.5))[ FD ]
