Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String args[]) [ CD ]
Line_2 $$ public static void main(String args[]) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_4 $$ double shortA = sc.nextInt()[ CD ]
Line_4 $$ double shortA = sc.nextInt()-->Line_4 $$ double shortA = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ double shortA = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_5 $$ double longB = sc.nextInt()[ CD ]
Line_5 $$ double longB = sc.nextInt()-->Line_5 $$ double longB = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ double longB = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_6 $$ double time = sc.nextInt()[ CD ]
Line_6 $$ double time = sc.nextInt()-->Line_6 $$ double time = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_6 $$ double time = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_7 $$ double minute = sc.nextInt()[ CD ]
Line_7 $$ double minute = sc.nextInt()-->Line_7 $$ double minute = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ double minute = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_8 $$ double all = 360[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_9 $$ double ans = 0.0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_10 $$ double timeMinute = 60.0 * time + minute[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_11 $$ double shortaa = (timeMinute / 720.0) * 360[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_12 $$ double longaa = minute * 6[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_13 $$ double angle = 0.0[ CD ]
Line_2 $$ public static void main(String args[]) -->Line_14 $$ if (shortaa < longaa) [ CD ]
Line_11 $$ double shortaa = (timeMinute / 720.0) * 360-->Line_14 $$ if (shortaa < longaa) [ FD ]
Line_12 $$ double longaa = minute * 6-->Line_14 $$ if (shortaa < longaa) [ FD ]
Line_14 $$ if (shortaa < longaa) -->Line_15 $$ angle = longaa - shortaa[ CD ]
Line_13 $$ double angle = 0.0-->Line_15 $$ angle = longaa - shortaa[ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_15 $$ angle = longaa - shortaa[ FD ]
Line_12 $$ double longaa = minute * 6-->Line_15 $$ angle = longaa - shortaa[ FD ]
Line_11 $$ double shortaa = (timeMinute / 720.0) * 360-->Line_15 $$ angle = longaa - shortaa[ FD ]
Line_14 $$ if (shortaa < longaa) -->Line_17 $$ angle = shortaa - longaa[ CD ]
Line_13 $$ double angle = 0.0-->Line_17 $$ angle = shortaa - longaa[ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_17 $$ angle = shortaa - longaa[ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_17 $$ angle = shortaa - longaa[ FD ]
Line_11 $$ double shortaa = (timeMinute / 720.0) * 360-->Line_17 $$ angle = shortaa - longaa[ FD ]
Line_12 $$ double longaa = minute * 6-->Line_17 $$ angle = shortaa - longaa[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_19 $$ if (angle == 360.0) [ CD ]
Line_13 $$ double angle = 0.0-->Line_19 $$ if (angle == 360.0) [ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_19 $$ if (angle == 360.0) [ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_19 $$ if (angle == 360.0) [ FD ]
Line_19 $$ if (angle == 360.0) -->Line_20 $$ angle = 0.0[ CD ]
Line_13 $$ double angle = 0.0-->Line_20 $$ angle = 0.0[ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_20 $$ angle = 0.0[ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_20 $$ angle = 0.0[ FD ]
Line_20 $$ angle = 0.0-->Line_20 $$ angle = 0.0[ FD ]
Line_19 $$ if (angle == 360.0) -->Line_22 $$ if (angle > 180.0) [ CD ]
Line_13 $$ double angle = 0.0-->Line_22 $$ if (angle > 180.0) [ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_22 $$ if (angle > 180.0) [ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_22 $$ if (angle > 180.0) [ FD ]
Line_20 $$ angle = 0.0-->Line_22 $$ if (angle > 180.0) [ FD ]
Line_22 $$ if (angle > 180.0) -->Line_23 $$ angle = 360.0 - angle[ CD ]
Line_13 $$ double angle = 0.0-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_20 $$ angle = 0.0-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_23 $$ angle = 360.0 - angle-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_13 $$ double angle = 0.0-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_20 $$ angle = 0.0-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_23 $$ angle = 360.0 - angle-->Line_23 $$ angle = 360.0 - angle[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ CD ]
Line_25 $$ double cos = Math.cos(Math.toRadians(angle))-->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ CD ]
Line_13 $$ double angle = 0.0-->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ FD ]
Line_15 $$ angle = longaa - shortaa-->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ FD ]
Line_17 $$ angle = shortaa - longaa-->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ FD ]
Line_20 $$ angle = 0.0-->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ FD ]
Line_23 $$ angle = 360.0 - angle-->Line_25 $$ double cos = Math.cos(Math.toRadians(angle))[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)[ CD ]
Line_9 $$ double ans = 0.0-->Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)[ FD ]
Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)-->Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)[ FD ]
Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)-->Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)[ CD ]
Line_4 $$ double shortA = sc.nextInt()-->Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)[ FD ]
Line_5 $$ double longB = sc.nextInt()-->Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)[ FD ]
Line_2 $$ public static void main(String args[]) -->Line_27 $$ System.out.println(ans)[ CD ]
Line_9 $$ double ans = 0.0-->Line_27 $$ System.out.println(ans)[ FD ]
Line_26 $$ ans = Math.sqrt(Math.pow(shortA, 2) + Math.pow(longB, 2) - 2.0 * shortA * longB * cos)-->Line_27 $$ System.out.println(ans)[ FD ]
