Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_5 $$ int n = sc.nextInt()[ CD ]
Line_4 $$ Scanner sc = new Scanner(System.in)-->Line_5 $$ int n = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_5 $$ int n = sc.nextInt()-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ String p = sc.next()[ CD ]
Line_9 $$ String p = sc.next()-->Line_9 $$ String p = sc.next()[ CD ]
Line_4 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ String p = sc.next()[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_10 $$ if (mp.containsKey(p)) [ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_10 $$ if (mp.containsKey(p)) [ FD ]
Line_9 $$ String p = sc.next()-->Line_10 $$ if (mp.containsKey(p)) [ FD ]
Line_10 $$ if (mp.containsKey(p)) -->Line_10 $$ if (mp.containsKey(p)) [ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_10 $$ if (mp.containsKey(p)) [ FD ]
Line_9 $$ String p = sc.next()-->Line_10 $$ if (mp.containsKey(p)) [ FD ]
Line_10 $$ if (mp.containsKey(p)) -->Line_12 $$ mp.put(p, mp.get(p) + 1)[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_12 $$ mp.put(p, mp.get(p) + 1)[ FD ]
Line_9 $$ String p = sc.next()-->Line_12 $$ mp.put(p, mp.get(p) + 1)[ FD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_12 $$ mp.put(p, mp.get(p) + 1)[ FD ]
Line_9 $$ String p = sc.next()-->Line_12 $$ mp.put(p, mp.get(p) + 1)[ FD ]
Line_10 $$ if (mp.containsKey(p)) -->Line_16 $$ mp.put(p, 1)[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_16 $$ mp.put(p, 1)[ FD ]
Line_9 $$ String p = sc.next()-->Line_16 $$ mp.put(p, 1)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ Set<Map.Entry<String, Integer>> sp = mp.entrySet()[ CD ]
Line_19 $$ Set<Map.Entry<String, Integer>> sp = mp.entrySet()-->Line_19 $$ Set<Map.Entry<String, Integer>> sp = mp.entrySet()[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_19 $$ Set<Map.Entry<String, Integer>> sp = mp.entrySet()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_20 $$ long flag1 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_21 $$ long flag2 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_22 $$ long flag3 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ long flag4 = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ if (mp.get("AC") == null) [ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_24 $$ if (mp.get("AC") == null) [ FD ]
Line_24 $$ if (mp.get("AC") == null) -->Line_26 $$ System.out.println("AC x " + "0")[ CD ]
Line_24 $$ if (mp.get("AC") == null) -->Line_30 $$ System.out.println("AC x " + mp.get("AC"))[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_30 $$ System.out.println("AC x " + mp.get("AC"))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_32 $$ if (mp.get("WA") == null) [ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_32 $$ if (mp.get("WA") == null) [ FD ]
Line_32 $$ if (mp.get("WA") == null) -->Line_34 $$ System.out.println("WA x " + "0")[ CD ]
Line_32 $$ if (mp.get("WA") == null) -->Line_38 $$ System.out.println("WA x " + mp.get("WA"))[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_38 $$ System.out.println("WA x " + mp.get("WA"))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_40 $$ if (mp.get("TLE") == null) [ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_40 $$ if (mp.get("TLE") == null) [ FD ]
Line_40 $$ if (mp.get("TLE") == null) -->Line_42 $$ System.out.println("TLE x " + "0")[ CD ]
Line_40 $$ if (mp.get("TLE") == null) -->Line_46 $$ System.out.println("TLE x " + mp.get("TLE"))[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_46 $$ System.out.println("TLE x " + mp.get("TLE"))[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_48 $$ if (mp.get("RE") == null) [ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_48 $$ if (mp.get("RE") == null) [ FD ]
Line_48 $$ if (mp.get("RE") == null) -->Line_50 $$ System.out.println("RE x " + "0")[ CD ]
Line_48 $$ if (mp.get("RE") == null) -->Line_54 $$ System.out.println("RE x " + mp.get("RE"))[ CD ]
Line_6 $$ Map<String, Integer> mp = new TreeMap<String, Integer>()-->Line_54 $$ System.out.println("RE x " + mp.get("RE"))[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ String p = sc.next()-->Line_10 $$ if (mp.containsKey(p)) [ FD ]
Line_9 $$ String p = sc.next()-->Line_10 $$ if (mp.containsKey(p)) [ FD ]
Line_9 $$ String p = sc.next()-->Line_12 $$ mp.put(p, mp.get(p) + 1)[ FD ]
Line_9 $$ String p = sc.next()-->Line_12 $$ mp.put(p, mp.get(p) + 1)[ FD ]
Line_9 $$ String p = sc.next()-->Line_16 $$ mp.put(p, 1)[ FD ]
