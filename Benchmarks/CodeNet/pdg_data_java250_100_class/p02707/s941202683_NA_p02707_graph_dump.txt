Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scn = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = scn.nextInt()[ CD ]
Line_4 $$ int N = scn.nextInt()-->Line_4 $$ int N = scn.nextInt()[ CD ]
Line_3 $$ Scanner scn = new Scanner(System.in)-->Line_4 $$ int N = scn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String[] Am = (scn.nextLine()).split(" ")[ CD ]
Line_5 $$ String[] Am = (scn.nextLine()).split(" ")-->Line_5 $$ String[] Am = (scn.nextLine()).split(" ")[ CD ]
Line_3 $$ Scanner scn = new Scanner(System.in)-->Line_5 $$ String[] Am = (scn.nextLine()).split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ Am = (scn.nextLine()).split(" ")[ CD ]
Line_5 $$ String[] Am = (scn.nextLine()).split(" ")-->Line_6 $$ Am = (scn.nextLine()).split(" ")[ FD ]
Line_6 $$ Am = (scn.nextLine()).split(" ")-->Line_6 $$ Am = (scn.nextLine()).split(" ")[ FD ]
Line_6 $$ Am = (scn.nextLine()).split(" ")-->Line_6 $$ Am = (scn.nextLine()).split(" ")[ CD ]
Line_3 $$ Scanner scn = new Scanner(System.in)-->Line_6 $$ Am = (scn.nextLine()).split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int[] Aresult = new int[N][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int A = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_10 $$ A = Integer.valueOf(Am[i]) - 1[ CD ]
Line_10 $$ A = Integer.valueOf(Am[i]) - 1-->Line_10 $$ A = Integer.valueOf(Am[i]) - 1[ FD ]
Line_8 $$ int A = 0-->Line_10 $$ A = Integer.valueOf(Am[i]) - 1[ FD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ Aresult[A] = Aresult[A] + 1[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int i = 0; i < N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_4 $$ int N = scn.nextInt()-->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ CD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ CD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_14 $$ System.out.println(Aresult[i])[ CD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_9 $$ for (int i = 0; i < N - 1; i++) -->Line_9 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
Line_13 $$ for (int i = 0; i < N; i++) -->Line_13 $$ for (int i = 0; i < N; i++) [ FD ]
