Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ CD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_7 $$ int N = Integer.parseInt(st.nextToken())-->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_7 $$ int N = Integer.parseInt(st.nextToken())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_8 $$ int[] arr = new int[N - 1][ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_9 $$ st = new StringTokenizer(infile.readLine())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_9 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_9 $$ st = new StringTokenizer(infile.readLine())-->Line_9 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_5 $$ BufferedReader infile = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ st = new StringTokenizer(infile.readLine())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())-->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ CD ]
Line_6 $$ StringTokenizer st = new StringTokenizer(infile.readLine())-->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_9 $$ st = new StringTokenizer(infile.readLine())-->Line_11 $$ arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_12 $$ int[] cnt = new int[N + 5][ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_15 $$ int ans = N[ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_16 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_3 $$ public static void main(String omkar[]) throws Exception -->Line_3 $$ public static void main(String omkar[]) throws Exception [ CD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_7 $$ int N = Integer.parseInt(st.nextToken())-->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_16 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_16 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_18 $$ ans = cnt[i][ CD ]
Line_18 $$ ans = cnt[i]-->Line_18 $$ ans = cnt[i][ FD ]
Line_15 $$ int ans = N-->Line_18 $$ ans = cnt[i][ FD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_19 $$ System.out.println(ans)[ CD ]
Line_18 $$ ans = cnt[i]-->Line_19 $$ System.out.println(ans)[ FD ]
Line_15 $$ int ans = N-->Line_19 $$ System.out.println(ans)[ FD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())-->Line_10 $$ for (int i = 0; i < N - 1; i++) arr[i] = Integer.parseInt(st.nextToken())[ FD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_16 $$ for (int i = 1; i <= N; i++) -->Line_16 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_18 $$ ans = cnt[i]-->Line_19 $$ System.out.println(ans)[ FD ]
