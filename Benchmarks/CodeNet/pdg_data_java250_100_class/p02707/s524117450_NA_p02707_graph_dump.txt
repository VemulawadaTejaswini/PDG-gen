Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_4 $$ int N = sc.nextInt()-->Line_4 $$ int N = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int N = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int A[] = new int[N - 1][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ CD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_7 $$ A[i] = sc.nextInt()[ CD ]
Line_7 $$ A[i] = sc.nextInt()-->Line_7 $$ A[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ A[i] = sc.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ Map<Integer, Integer> map = new HashMap<Integer, Integer>()[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_11 $$ map.put(i, 0)[ CD ]
Line_9 $$ Map<Integer, Integer> map = new HashMap<Integer, Integer>()-->Line_11 $$ map.put(i, 0)[ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_11 $$ map.put(i, 0)[ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_11 $$ map.put(i, 0)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ CD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ CD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ FD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_14 $$ int old = map.get(A[j]) + 1[ CD ]
Line_9 $$ Map<Integer, Integer> map = new HashMap<Integer, Integer>()-->Line_14 $$ int old = map.get(A[j]) + 1[ FD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_15 $$ map.put(A[j], old)[ CD ]
Line_9 $$ Map<Integer, Integer> map = new HashMap<Integer, Integer>()-->Line_15 $$ map.put(A[j], old)[ FD ]
Line_14 $$ int old = map.get(A[j]) + 1-->Line_15 $$ map.put(A[j], old)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_17 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_4 $$ int N = sc.nextInt()-->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ CD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_18 $$ System.out.println(map.get(i))[ CD ]
Line_9 $$ Map<Integer, Integer> map = new HashMap<Integer, Integer>()-->Line_18 $$ System.out.println(map.get(i))[ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_18 $$ System.out.println(map.get(i))[ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_18 $$ System.out.println(map.get(i))[ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_18 $$ System.out.println(map.get(i))[ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_6 $$ for (int i = 0; i < N - 1; i++) -->Line_6 $$ for (int i = 0; i < N - 1; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_10 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_10 $$ for (int i = 1; i <= N; i++) -->Line_11 $$ map.put(i, 0)[ FD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ FD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ FD ]
Line_13 $$ for (int j = 0; j < N - 1; j++) -->Line_13 $$ for (int j = 0; j < N - 1; j++) [ FD ]
Line_14 $$ int old = map.get(A[j]) + 1-->Line_15 $$ map.put(A[j], old)[ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_17 $$ for (int i = 1; i <= N; i++) [ FD ]
Line_17 $$ for (int i = 1; i <= N; i++) -->Line_18 $$ System.out.println(map.get(i))[ FD ]
