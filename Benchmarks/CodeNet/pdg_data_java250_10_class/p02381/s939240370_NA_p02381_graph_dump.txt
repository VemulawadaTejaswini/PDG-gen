Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] age) throws IOException [ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_4 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_5 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_2 $$ public static void main(String[] age) throws IOException [ CD ]
Line_5 $$ while (true) -->Line_6 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_6 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_5 $$ while (true) -->Line_7 $$ int i = 0[ CD ]
Line_5 $$ while (true) -->Line_8 $$ double m = 0[ CD ]
Line_5 $$ while (true) -->Line_9 $$ double a = 0[ CD ]
Line_5 $$ while (true) -->Line_10 $$ if (n == 0)[ CD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_10 $$ if (n == 0)[ FD ]
Line_5 $$ while (true) -->Line_11 $$ String[] s = br.readLine().split(" ")[ CD ]
Line_11 $$ String[] s = br.readLine().split(" ")-->Line_11 $$ String[] s = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_11 $$ String[] s = br.readLine().split(" ")[ FD ]
Line_5 $$ while (true) -->Line_12 $$ for (i = 0; i < n; i++) [ CD ]
Line_5 $$ while (true) -->Line_5 $$ while (true) [ CD ]
Line_7 $$ int i = 0-->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ CD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i = 0-->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ CD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i = 0-->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_13 $$ m = m + Double.parseDouble(s[i])[ CD ]
Line_13 $$ m = m + Double.parseDouble(s[i])-->Line_13 $$ m = m + Double.parseDouble(s[i])[ FD ]
Line_8 $$ double m = 0-->Line_13 $$ m = m + Double.parseDouble(s[i])[ FD ]
Line_13 $$ m = m + Double.parseDouble(s[i])-->Line_13 $$ m = m + Double.parseDouble(s[i])[ FD ]
Line_8 $$ double m = 0-->Line_13 $$ m = m + Double.parseDouble(s[i])[ FD ]
Line_5 $$ while (true) -->Line_15 $$ m = m / n[ CD ]
Line_13 $$ m = m + Double.parseDouble(s[i])-->Line_15 $$ m = m / n[ FD ]
Line_8 $$ double m = 0-->Line_15 $$ m = m / n[ FD ]
Line_15 $$ m = m / n-->Line_15 $$ m = m / n[ FD ]
Line_13 $$ m = m + Double.parseDouble(s[i])-->Line_15 $$ m = m / n[ FD ]
Line_8 $$ double m = 0-->Line_15 $$ m = m / n[ FD ]
Line_15 $$ m = m / n-->Line_15 $$ m = m / n[ FD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_15 $$ m = m / n[ FD ]
Line_5 $$ while (true) -->Line_16 $$ for (i = 0; i < n; i++) [ CD ]
Line_5 $$ while (true) -->Line_5 $$ while (true) [ CD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i = 0-->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ CD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i = 0-->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ CD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i = 0-->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)[ CD ]
Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)-->Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)[ FD ]
Line_9 $$ double a = 0-->Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)[ FD ]
Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)-->Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)[ FD ]
Line_9 $$ double a = 0-->Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)[ FD ]
Line_5 $$ while (true) -->Line_19 $$ a = Math.sqrt(a / n)[ CD ]
Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)-->Line_19 $$ a = Math.sqrt(a / n)[ FD ]
Line_9 $$ double a = 0-->Line_19 $$ a = Math.sqrt(a / n)[ FD ]
Line_19 $$ a = Math.sqrt(a / n)-->Line_19 $$ a = Math.sqrt(a / n)[ FD ]
Line_19 $$ a = Math.sqrt(a / n)-->Line_19 $$ a = Math.sqrt(a / n)[ CD ]
Line_5 $$ while (true) -->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ FD ]
Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)-->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ FD ]
Line_9 $$ double a = 0-->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ FD ]
Line_19 $$ a = Math.sqrt(a / n)-->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ FD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_22 $$ System.out.print(sb)[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_22 $$ System.out.print(sb)[ FD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_10 $$ if (n == 0)[ FD ]
Line_8 $$ double m = 0-->Line_15 $$ m = m / n[ FD ]
Line_15 $$ m = m / n-->Line_15 $$ m = m / n[ FD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_15 $$ m = m / n[ FD ]
Line_9 $$ double a = 0-->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ FD ]
Line_19 $$ a = Math.sqrt(a / n)-->Line_20 $$ sb.append(String.format("%.6f", a)).append("\n")[ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_12 $$ for (i = 0; i < n; i++) -->Line_12 $$ for (i = 0; i < n; i++) [ FD ]
Line_13 $$ m = m + Double.parseDouble(s[i])-->Line_13 $$ m = m + Double.parseDouble(s[i])[ FD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_16 $$ for (i = 0; i < n; i++) -->Line_16 $$ for (i = 0; i < n; i++) [ FD ]
Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)-->Line_17 $$ a = a + Math.pow(Double.parseDouble(s[i]) - m, 2)[ FD ]
