Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_4 $$ double alph[ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_5 $$ while (true) [ CD ]
Line_2 $$ public static void main(String args[]) throws IOException -->Line_2 $$ public static void main(String args[]) throws IOException [ CD ]
Line_5 $$ while (true) -->Line_6 $$ String st = br.readLine()[ CD ]
Line_6 $$ String st = br.readLine()-->Line_6 $$ String st = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ String st = br.readLine()[ FD ]
Line_5 $$ while (true) -->Line_7 $$ if (st.equals("0"))[ CD ]
Line_6 $$ String st = br.readLine()-->Line_7 $$ if (st.equals("0"))[ FD ]
Line_7 $$ if (st.equals("0"))-->Line_7 $$ if (st.equals("0"))[ CD ]
Line_6 $$ String st = br.readLine()-->Line_7 $$ if (st.equals("0"))[ FD ]
Line_5 $$ while (true) -->Line_8 $$ double n = Double.parseDouble(st)[ CD ]
Line_8 $$ double n = Double.parseDouble(st)-->Line_8 $$ double n = Double.parseDouble(st)[ CD ]
Line_6 $$ String st = br.readLine()-->Line_8 $$ double n = Double.parseDouble(st)[ FD ]
Line_5 $$ while (true) -->Line_9 $$ String[] s = br.readLine().split(" ")[ CD ]
Line_9 $$ String[] s = br.readLine().split(" ")-->Line_9 $$ String[] s = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ String[] s = br.readLine().split(" ")[ FD ]
Line_5 $$ while (true) -->Line_10 $$ double sum = 0[ CD ]
Line_5 $$ while (true) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_5 $$ while (true) -->Line_5 $$ while (true) [ CD ]
Line_8 $$ double n = Double.parseDouble(st)-->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_12 $$ sum += Double.parseDouble(s[i])[ CD ]
Line_12 $$ sum += Double.parseDouble(s[i])-->Line_12 $$ sum += Double.parseDouble(s[i])[ FD ]
Line_10 $$ double sum = 0-->Line_12 $$ sum += Double.parseDouble(s[i])[ FD ]
Line_12 $$ sum += Double.parseDouble(s[i])-->Line_12 $$ sum += Double.parseDouble(s[i])[ CD ]
Line_5 $$ while (true) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_5 $$ while (true) -->Line_5 $$ while (true) [ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ double n = Double.parseDouble(st)-->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_17 $$ sigma += Math.pow(Double.parseDouble(s[i]) - ave, 2)[ CD ]
Line_5 $$ while (true) -->Line_19 $$ alph = Math.sqrt(sigma / n)[ CD ]
Line_19 $$ alph = Math.sqrt(sigma / n)-->Line_19 $$ alph = Math.sqrt(sigma / n)[ FD ]
Line_4 $$ double alph-->Line_19 $$ alph = Math.sqrt(sigma / n)[ FD ]
Line_19 $$ alph = Math.sqrt(sigma / n)-->Line_19 $$ alph = Math.sqrt(sigma / n)[ CD ]
Line_5 $$ while (true) -->Line_20 $$ System.out.println(alph)[ CD ]
Line_19 $$ alph = Math.sqrt(sigma / n)-->Line_20 $$ System.out.println(alph)[ FD ]
Line_4 $$ double alph-->Line_20 $$ System.out.println(alph)[ FD ]
Line_6 $$ String st = br.readLine()-->Line_7 $$ if (st.equals("0"))[ FD ]
Line_6 $$ String st = br.readLine()-->Line_7 $$ if (st.equals("0"))[ FD ]
Line_6 $$ String st = br.readLine()-->Line_8 $$ double n = Double.parseDouble(st)[ FD ]
Line_19 $$ alph = Math.sqrt(sigma / n)-->Line_20 $$ System.out.println(alph)[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
