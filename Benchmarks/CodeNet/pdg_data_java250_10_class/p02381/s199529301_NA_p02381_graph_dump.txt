Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ while (true) -->Line_6 $$ int num = Integer.parseInt(br.readLine())[ CD ]
Line_6 $$ int num = Integer.parseInt(br.readLine())-->Line_6 $$ int num = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_6 $$ int num = Integer.parseInt(br.readLine())[ FD ]
Line_5 $$ while (true) -->Line_7 $$ if (num == 0) [ CD ]
Line_6 $$ int num = Integer.parseInt(br.readLine())-->Line_7 $$ if (num == 0) [ FD ]
Line_5 $$ while (true) -->Line_10 $$ String[] token = br.readLine().split(" ")[ CD ]
Line_10 $$ String[] token = br.readLine().split(" ")-->Line_10 $$ String[] token = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ String[] token = br.readLine().split(" ")[ FD ]
Line_5 $$ while (true) -->Line_11 $$ int[] point = new int[num][ CD ]
Line_5 $$ while (true) -->Line_12 $$ double sum = 0[ CD ]
Line_5 $$ while (true) -->Line_13 $$ for (int i = 0; i < num; i++) [ CD ]
Line_5 $$ while (true) -->Line_5 $$ while (true) [ CD ]
Line_6 $$ int num = Integer.parseInt(br.readLine())-->Line_13 $$ for (int i = 0; i < num; i++) [ FD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_13 $$ for (int i = 0; i < num; i++) [ CD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_13 $$ for (int i = 0; i < num; i++) [ CD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_13 $$ for (int i = 0; i < num; i++) [ FD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_14 $$ point[i] = Integer.parseInt(token[i])[ CD ]
Line_14 $$ point[i] = Integer.parseInt(token[i])-->Line_14 $$ point[i] = Integer.parseInt(token[i])[ CD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_15 $$ sum += point[i][ CD ]
Line_15 $$ sum += point[i]-->Line_15 $$ sum += point[i][ FD ]
Line_12 $$ double sum = 0-->Line_15 $$ sum += point[i][ FD ]
Line_5 $$ while (true) -->Line_18 $$ sum = 0[ CD ]
Line_15 $$ sum += point[i]-->Line_18 $$ sum = 0[ FD ]
Line_12 $$ double sum = 0-->Line_18 $$ sum = 0[ FD ]
Line_18 $$ sum = 0-->Line_18 $$ sum = 0[ FD ]
Line_5 $$ while (true) -->Line_19 $$ for (int i = 0; i < num; i++) [ CD ]
Line_5 $$ while (true) -->Line_5 $$ while (true) [ CD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
Line_6 $$ int num = Integer.parseInt(br.readLine())-->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ CD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ CD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_20 $$ sum += Math.pow(point[i] - average, 2)[ CD ]
Line_20 $$ sum += Math.pow(point[i] - average, 2)-->Line_20 $$ sum += Math.pow(point[i] - average, 2)[ FD ]
Line_15 $$ sum += point[i]-->Line_20 $$ sum += Math.pow(point[i] - average, 2)[ FD ]
Line_12 $$ double sum = 0-->Line_20 $$ sum += Math.pow(point[i] - average, 2)[ FD ]
Line_18 $$ sum = 0-->Line_20 $$ sum += Math.pow(point[i] - average, 2)[ FD ]
Line_20 $$ sum += Math.pow(point[i] - average, 2)-->Line_20 $$ sum += Math.pow(point[i] - average, 2)[ CD ]
Line_5 $$ while (true) -->Line_23 $$ double deviation = Math.sqrt(dispersion)[ CD ]
Line_5 $$ while (true) -->Line_24 $$ sb.append(String.format("%.8f\n", deviation))[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(String.format("%.8f\n", deviation))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_26 $$ System.out.print(sb)[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ System.out.print(sb)[ FD ]
Line_6 $$ int num = Integer.parseInt(br.readLine())-->Line_7 $$ if (num == 0) [ FD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_13 $$ for (int i = 0; i < num; i++) [ FD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_13 $$ for (int i = 0; i < num; i++) [ FD ]
Line_13 $$ for (int i = 0; i < num; i++) -->Line_13 $$ for (int i = 0; i < num; i++) [ FD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
Line_19 $$ for (int i = 0; i < num; i++) -->Line_19 $$ for (int i = 0; i < num; i++) [ FD ]
