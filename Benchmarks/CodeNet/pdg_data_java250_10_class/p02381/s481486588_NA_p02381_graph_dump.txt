Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String[] Test_String[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int[] Test_Score[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ String input_n = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ String input_test = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ boolean judge_n = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ boolean judge_test = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ double m = 0.0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ double V = 0.0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ int MAX = 1000[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ double[] SD = new double[MAX][ CD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ int data_count = 0[ CD ]
Line_16 $$ while (true) -->Line_17 $$ input_n = sc.nextLine()[ CD ]
Line_17 $$ input_n = sc.nextLine()-->Line_17 $$ input_n = sc.nextLine()[ FD ]
Line_7 $$ String input_n = ""-->Line_17 $$ input_n = sc.nextLine()[ FD ]
Line_17 $$ input_n = sc.nextLine()-->Line_17 $$ input_n = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_17 $$ input_n = sc.nextLine()[ FD ]
Line_16 $$ while (true) -->Line_18 $$ n = Integer.parseInt(input_n)[ CD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_18 $$ n = Integer.parseInt(input_n)[ FD ]
Line_4 $$ int n = 0-->Line_18 $$ n = Integer.parseInt(input_n)[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_18 $$ n = Integer.parseInt(input_n)[ CD ]
Line_17 $$ input_n = sc.nextLine()-->Line_18 $$ n = Integer.parseInt(input_n)[ FD ]
Line_7 $$ String input_n = ""-->Line_18 $$ n = Integer.parseInt(input_n)[ FD ]
Line_16 $$ while (true) -->Line_19 $$ if (n == 0) [ CD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_19 $$ if (n == 0) [ FD ]
Line_4 $$ int n = 0-->Line_19 $$ if (n == 0) [ FD ]
Line_16 $$ while (true) -->Line_22 $$ if (n < 0 || n > 1000) [ CD ]
Line_22 $$ if (n < 0 || n > 1000) -->Line_23 $$ judge_n = false[ CD ]
Line_23 $$ judge_n = false-->Line_23 $$ judge_n = false[ FD ]
Line_9 $$ boolean judge_n = true-->Line_23 $$ judge_n = false[ FD ]
Line_16 $$ while (true) -->Line_26 $$ input_test = sc.nextLine()[ CD ]
Line_26 $$ input_test = sc.nextLine()-->Line_26 $$ input_test = sc.nextLine()[ FD ]
Line_8 $$ String input_test = ""-->Line_26 $$ input_test = sc.nextLine()[ FD ]
Line_26 $$ input_test = sc.nextLine()-->Line_26 $$ input_test = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_26 $$ input_test = sc.nextLine()[ FD ]
Line_16 $$ while (true) -->Line_27 $$ Test_String = input_test.split(" ")[ CD ]
Line_27 $$ Test_String = input_test.split(" ")-->Line_27 $$ Test_String = input_test.split(" ")[ FD ]
Line_5 $$ String[] Test_String-->Line_27 $$ Test_String = input_test.split(" ")[ FD ]
Line_27 $$ Test_String = input_test.split(" ")-->Line_27 $$ Test_String = input_test.split(" ")[ CD ]
Line_26 $$ input_test = sc.nextLine()-->Line_27 $$ Test_String = input_test.split(" ")[ FD ]
Line_8 $$ String input_test = ""-->Line_27 $$ Test_String = input_test.split(" ")[ FD ]
Line_16 $$ while (true) -->Line_28 $$ if (Test_String.length != n) [ CD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_28 $$ if (Test_String.length != n) [ FD ]
Line_4 $$ int n = 0-->Line_28 $$ if (Test_String.length != n) [ FD ]
Line_28 $$ if (Test_String.length != n) -->Line_29 $$ judge_test = false[ CD ]
Line_29 $$ judge_test = false-->Line_29 $$ judge_test = false[ FD ]
Line_10 $$ boolean judge_test = true-->Line_29 $$ judge_test = false[ FD ]
Line_16 $$ while (true) -->Line_32 $$ m = 0.0[ CD ]
Line_32 $$ m = 0.0-->Line_32 $$ m = 0.0[ FD ]
Line_11 $$ double m = 0.0-->Line_32 $$ m = 0.0[ FD ]
Line_16 $$ while (true) -->Line_33 $$ Test_Score = new int[n][ CD ]
Line_33 $$ Test_Score = new int[n]-->Line_33 $$ Test_Score = new int[n][ FD ]
Line_6 $$ int[] Test_Score-->Line_33 $$ Test_Score = new int[n][ FD ]
Line_16 $$ while (true) -->Line_34 $$ for (int i = 0; i < n; i++) [ CD ]
Line_16 $$ while (true) -->Line_16 $$ while (true) [ CD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_34 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = 0-->Line_34 $$ for (int i = 0; i < n; i++) [ FD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < n; i++) [ CD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < n; i++) [ CD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < n; i++) [ FD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_35 $$ Test_Score[i] = Integer.parseInt(Test_String[i])[ CD ]
Line_35 $$ Test_Score[i] = Integer.parseInt(Test_String[i])-->Line_35 $$ Test_Score[i] = Integer.parseInt(Test_String[i])[ CD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_36 $$ m += Test_Score[i][ CD ]
Line_36 $$ m += Test_Score[i]-->Line_36 $$ m += Test_Score[i][ FD ]
Line_32 $$ m = 0.0-->Line_36 $$ m += Test_Score[i][ FD ]
Line_11 $$ double m = 0.0-->Line_36 $$ m += Test_Score[i][ FD ]
Line_16 $$ while (true) -->Line_38 $$ m = m / n[ CD ]
Line_36 $$ m += Test_Score[i]-->Line_38 $$ m = m / n[ FD ]
Line_32 $$ m = 0.0-->Line_38 $$ m = m / n[ FD ]
Line_38 $$ m = m / n-->Line_38 $$ m = m / n[ FD ]
Line_11 $$ double m = 0.0-->Line_38 $$ m = m / n[ FD ]
Line_36 $$ m += Test_Score[i]-->Line_38 $$ m = m / n[ FD ]
Line_32 $$ m = 0.0-->Line_38 $$ m = m / n[ FD ]
Line_38 $$ m = m / n-->Line_38 $$ m = m / n[ FD ]
Line_11 $$ double m = 0.0-->Line_38 $$ m = m / n[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_38 $$ m = m / n[ FD ]
Line_4 $$ int n = 0-->Line_38 $$ m = m / n[ FD ]
Line_16 $$ while (true) -->Line_39 $$ V = 0.0[ CD ]
Line_39 $$ V = 0.0-->Line_39 $$ V = 0.0[ FD ]
Line_12 $$ double V = 0.0-->Line_39 $$ V = 0.0[ FD ]
Line_16 $$ while (true) -->Line_40 $$ for (int j = 0; j < n; j++) [ CD ]
Line_16 $$ while (true) -->Line_16 $$ while (true) [ CD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_40 $$ for (int j = 0; j < n; j++) [ FD ]
Line_4 $$ int n = 0-->Line_40 $$ for (int j = 0; j < n; j++) [ FD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_40 $$ for (int j = 0; j < n; j++) [ CD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_40 $$ for (int j = 0; j < n; j++) [ CD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_40 $$ for (int j = 0; j < n; j++) [ FD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))[ CD ]
Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))-->Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))[ FD ]
Line_39 $$ V = 0.0-->Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))[ FD ]
Line_12 $$ double V = 0.0-->Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))[ FD ]
Line_16 $$ while (true) -->Line_44 $$ V = V / n[ CD ]
Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))-->Line_44 $$ V = V / n[ FD ]
Line_39 $$ V = 0.0-->Line_44 $$ V = V / n[ FD ]
Line_44 $$ V = V / n-->Line_44 $$ V = V / n[ FD ]
Line_12 $$ double V = 0.0-->Line_44 $$ V = V / n[ FD ]
Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))-->Line_44 $$ V = V / n[ FD ]
Line_39 $$ V = 0.0-->Line_44 $$ V = V / n[ FD ]
Line_44 $$ V = V / n-->Line_44 $$ V = V / n[ FD ]
Line_12 $$ double V = 0.0-->Line_44 $$ V = V / n[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_44 $$ V = V / n[ FD ]
Line_4 $$ int n = 0-->Line_44 $$ V = V / n[ FD ]
Line_16 $$ while (true) -->Line_45 $$ SD[data_count] = Math.sqrt(V)[ CD ]
Line_45 $$ SD[data_count] = Math.sqrt(V)-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ CD ]
Line_41 $$ V += ((double) (Test_Score[j] - m)) * ((double) (Test_Score[j] - m))-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ FD ]
Line_39 $$ V = 0.0-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ FD ]
Line_44 $$ V = V / n-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ FD ]
Line_12 $$ double V = 0.0-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ FD ]
Line_16 $$ while (true) -->Line_46 $$ data_count++[ CD ]
Line_15 $$ int data_count = 0-->Line_46 $$ data_count++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_48 $$ if (judge_n == true && judge_test == true) [ CD ]
Line_48 $$ if (judge_n == true && judge_test == true) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ CD ]
Line_48 $$ if (judge_n == true && judge_test == true) -->Line_48 $$ if (judge_n == true && judge_test == true) [ CD ]
Line_15 $$ int data_count = 0-->Line_49 $$ for (int k = 0; k < data_count; k++) [ FD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ CD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ CD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ FD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_50 $$ System.out.printf("%.5f", SD[k])[ CD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_51 $$ System.out.println()[ CD ]
Line_17 $$ input_n = sc.nextLine()-->Line_18 $$ n = Integer.parseInt(input_n)[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_19 $$ if (n == 0) [ FD ]
Line_26 $$ input_test = sc.nextLine()-->Line_27 $$ Test_String = input_test.split(" ")[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_28 $$ if (Test_String.length != n) [ FD ]
Line_32 $$ m = 0.0-->Line_38 $$ m = m / n[ FD ]
Line_38 $$ m = m / n-->Line_38 $$ m = m / n[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_38 $$ m = m / n[ FD ]
Line_39 $$ V = 0.0-->Line_44 $$ V = V / n[ FD ]
Line_44 $$ V = V / n-->Line_44 $$ V = V / n[ FD ]
Line_18 $$ n = Integer.parseInt(input_n)-->Line_44 $$ V = V / n[ FD ]
Line_39 $$ V = 0.0-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ FD ]
Line_44 $$ V = V / n-->Line_45 $$ SD[data_count] = Math.sqrt(V)[ FD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < n; i++) [ FD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < n; i++) [ FD ]
Line_34 $$ for (int i = 0; i < n; i++) -->Line_34 $$ for (int i = 0; i < n; i++) [ FD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_40 $$ for (int j = 0; j < n; j++) [ FD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_40 $$ for (int j = 0; j < n; j++) [ FD ]
Line_40 $$ for (int j = 0; j < n; j++) -->Line_40 $$ for (int j = 0; j < n; j++) [ FD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ FD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ FD ]
Line_49 $$ for (int k = 0; k < data_count; k++) -->Line_49 $$ for (int k = 0; k < data_count; k++) [ FD ]
