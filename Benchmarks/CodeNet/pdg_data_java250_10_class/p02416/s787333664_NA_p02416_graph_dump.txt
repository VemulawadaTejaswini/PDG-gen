Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException -->Line_2 $$ public static void main(String[] args) throws NumberFormatException [ CD ]
Line_4 $$ while (true) -->Line_5 $$ BigDecimal x = scan.nextBigDecimal()[ CD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_5 $$ BigDecimal x = scan.nextBigDecimal()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_5 $$ BigDecimal x = scan.nextBigDecimal()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ if (x.equals(BigDecimal.ZERO)) [ CD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_6 $$ if (x.equals(BigDecimal.ZERO)) [ FD ]
Line_6 $$ if (x.equals(BigDecimal.ZERO)) -->Line_6 $$ if (x.equals(BigDecimal.ZERO)) [ CD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_6 $$ if (x.equals(BigDecimal.ZERO)) [ FD ]
Line_4 $$ while (true) -->Line_9 $$ int sum = 0[ CD ]
Line_4 $$ while (true) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ CD ]
Line_4 $$ while (true) -->Line_4 $$ while (true) [ CD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ CD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ CD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ CD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ CD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)[ CD ]
Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)-->Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)[ CD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)[ FD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)[ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ CD ]
Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ FD ]
Line_12 $$ amari = amari.multiply(BigDecimal.TEN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ FD ]
Line_12 $$ amari = amari.multiply(BigDecimal.TEN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ CD ]
Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ FD ]
Line_12 $$ amari = amari.multiply(BigDecimal.TEN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_13 $$ sum += x.subtract(amari).intValue()[ CD ]
Line_13 $$ sum += x.subtract(amari).intValue()-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_9 $$ int sum = 0-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_13 $$ sum += x.subtract(amari).intValue()-->Line_13 $$ sum += x.subtract(amari).intValue()[ CD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_12 $$ amari = amari.multiply(BigDecimal.TEN)-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_4 $$ while (true) -->Line_15 $$ System.out.println(sum)[ CD ]
Line_13 $$ sum += x.subtract(amari).intValue()-->Line_15 $$ System.out.println(sum)[ FD ]
Line_9 $$ int sum = 0-->Line_15 $$ System.out.println(sum)[ FD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_6 $$ if (x.equals(BigDecimal.ZERO)) [ FD ]
Line_5 $$ BigDecimal x = scan.nextBigDecimal()-->Line_6 $$ if (x.equals(BigDecimal.ZERO)) [ FD ]
Line_9 $$ int sum = 0-->Line_15 $$ System.out.println(sum)[ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) [ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)[ FD ]
Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ FD ]
Line_12 $$ amari = amari.multiply(BigDecimal.TEN)-->Line_12 $$ amari = amari.multiply(BigDecimal.TEN)[ FD ]
Line_10 $$ for (; !x.equals(BigDecimal.ZERO); x = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)) -->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_11 $$ BigDecimal amari = x.divide(BigDecimal.TEN, 0, BigDecimal.ROUND_DOWN)-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
Line_12 $$ amari = amari.multiply(BigDecimal.TEN)-->Line_13 $$ sum += x.subtract(amari).intValue()[ FD ]
