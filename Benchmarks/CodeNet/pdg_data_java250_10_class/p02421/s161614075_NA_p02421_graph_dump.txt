Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int taro = 0, hanako = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int i, j[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ char taroCard, hanakoCard[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ String[] cards[ CD ]
Line_6 $$ int i, j-->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ CD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_6 $$ int i, j-->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ CD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_6 $$ int i, j-->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_10 $$ cards = br.readLine().split(" ")[ CD ]
Line_10 $$ cards = br.readLine().split(" ")-->Line_10 $$ cards = br.readLine().split(" ")[ FD ]
Line_8 $$ String[] cards-->Line_10 $$ cards = br.readLine().split(" ")[ FD ]
Line_10 $$ cards = br.readLine().split(" ")-->Line_10 $$ cards = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_10 $$ cards = br.readLine().split(" ")[ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ CD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ CD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ CD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ FD ]
Line_6 $$ int i, j-->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ CD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ FD ]
Line_6 $$ int i, j-->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_12 $$ taroCard = cards[0].charAt(j)[ CD ]
Line_12 $$ taroCard = cards[0].charAt(j)-->Line_12 $$ taroCard = cards[0].charAt(j)[ FD ]
Line_7 $$ char taroCard, hanakoCard-->Line_12 $$ taroCard = cards[0].charAt(j)[ FD ]
Line_12 $$ taroCard = cards[0].charAt(j)-->Line_12 $$ taroCard = cards[0].charAt(j)[ CD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_12 $$ taroCard = cards[0].charAt(j)[ FD ]
Line_6 $$ int i, j-->Line_12 $$ taroCard = cards[0].charAt(j)[ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_13 $$ hanakoCard = cards[1].charAt(j)[ CD ]
Line_13 $$ hanakoCard = cards[1].charAt(j)-->Line_13 $$ hanakoCard = cards[1].charAt(j)[ FD ]
Line_7 $$ char taroCard, hanakoCard-->Line_13 $$ hanakoCard = cards[1].charAt(j)[ FD ]
Line_13 $$ hanakoCard = cards[1].charAt(j)-->Line_13 $$ hanakoCard = cards[1].charAt(j)[ CD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_13 $$ hanakoCard = cards[1].charAt(j)[ FD ]
Line_6 $$ int i, j-->Line_13 $$ hanakoCard = cards[1].charAt(j)[ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_14 $$ if (taroCard > hanakoCard) [ CD ]
Line_12 $$ taroCard = cards[0].charAt(j)-->Line_14 $$ if (taroCard > hanakoCard) [ FD ]
Line_7 $$ char taroCard, hanakoCard-->Line_14 $$ if (taroCard > hanakoCard) [ FD ]
Line_13 $$ hanakoCard = cards[1].charAt(j)-->Line_14 $$ if (taroCard > hanakoCard) [ FD ]
Line_7 $$ char taroCard, hanakoCard-->Line_14 $$ if (taroCard > hanakoCard) [ FD ]
Line_14 $$ if (taroCard > hanakoCard) -->Line_15 $$ taro += 3[ CD ]
Line_15 $$ taro += 3-->Line_15 $$ taro += 3[ FD ]
Line_5 $$ int taro = 0, hanako = 0-->Line_15 $$ taro += 3[ FD ]
Line_14 $$ if (taroCard > hanakoCard) -->Line_17 $$ if (taroCard < hanakoCard) [ CD ]
Line_12 $$ taroCard = cards[0].charAt(j)-->Line_17 $$ if (taroCard < hanakoCard) [ FD ]
Line_7 $$ char taroCard, hanakoCard-->Line_17 $$ if (taroCard < hanakoCard) [ FD ]
Line_13 $$ hanakoCard = cards[1].charAt(j)-->Line_17 $$ if (taroCard < hanakoCard) [ FD ]
Line_7 $$ char taroCard, hanakoCard-->Line_17 $$ if (taroCard < hanakoCard) [ FD ]
Line_17 $$ if (taroCard < hanakoCard) -->Line_18 $$ hanako += 3[ CD ]
Line_18 $$ hanako += 3-->Line_18 $$ hanako += 3[ FD ]
Line_5 $$ int taro = 0, hanako = 0-->Line_18 $$ hanako += 3[ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_22 $$ if (cards[0].length() > cards[1].length()) [ CD ]
Line_22 $$ if (cards[0].length() > cards[1].length()) -->Line_23 $$ taro += 3[ CD ]
Line_15 $$ taro += 3-->Line_23 $$ taro += 3[ FD ]
Line_23 $$ taro += 3-->Line_23 $$ taro += 3[ FD ]
Line_5 $$ int taro = 0, hanako = 0-->Line_23 $$ taro += 3[ FD ]
Line_22 $$ if (cards[0].length() > cards[1].length()) -->Line_24 $$ if (cards[0].length() < cards[1].length()) [ CD ]
Line_24 $$ if (cards[0].length() < cards[1].length()) -->Line_25 $$ hanako += 3[ CD ]
Line_18 $$ hanako += 3-->Line_25 $$ hanako += 3[ FD ]
Line_25 $$ hanako += 3-->Line_25 $$ hanako += 3[ FD ]
Line_5 $$ int taro = 0, hanako = 0-->Line_25 $$ hanako += 3[ FD ]
Line_24 $$ if (cards[0].length() < cards[1].length()) -->Line_27 $$ taro++[ CD ]
Line_15 $$ taro += 3-->Line_27 $$ taro++[ FD ]
Line_23 $$ taro += 3-->Line_27 $$ taro++[ FD ]
Line_5 $$ int taro = 0, hanako = 0-->Line_27 $$ taro++[ FD ]
Line_24 $$ if (cards[0].length() < cards[1].length()) -->Line_28 $$ hanako++[ CD ]
Line_18 $$ hanako += 3-->Line_28 $$ hanako++[ FD ]
Line_25 $$ hanako += 3-->Line_28 $$ hanako++[ FD ]
Line_5 $$ int taro = 0, hanako = 0-->Line_28 $$ hanako++[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_31 $$ System.out.println(taro + " " + hanako)[ CD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_9 $$ for (i = 0; i < n; i++) -->Line_9 $$ for (i = 0; i < n; i++) [ FD ]
Line_23 $$ taro += 3-->Line_27 $$ taro++[ FD ]
Line_25 $$ hanako += 3-->Line_28 $$ hanako++[ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) [ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_12 $$ taroCard = cards[0].charAt(j)[ FD ]
Line_11 $$ for (j = 0; j < cards[0].length() && j < cards[1].length(); j++) -->Line_13 $$ hanakoCard = cards[1].charAt(j)[ FD ]
Line_12 $$ taroCard = cards[0].charAt(j)-->Line_14 $$ if (taroCard > hanakoCard) [ FD ]
Line_13 $$ hanakoCard = cards[1].charAt(j)-->Line_14 $$ if (taroCard > hanakoCard) [ FD ]
Line_12 $$ taroCard = cards[0].charAt(j)-->Line_17 $$ if (taroCard < hanakoCard) [ FD ]
Line_13 $$ hanakoCard = cards[1].charAt(j)-->Line_17 $$ if (taroCard < hanakoCard) [ FD ]
