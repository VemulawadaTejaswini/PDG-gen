Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ InputStreamReader isr = new InputStreamReader(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ BufferedReader br = new BufferedReader(isr)[ CD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_6 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_6 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_6 $$ int n = Integer.parseInt(br.readLine())-->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ CD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ CD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_9 $$ String input[] = br.readLine().split(" ")[ CD ]
Line_9 $$ String input[] = br.readLine().split(" ")-->Line_9 $$ String input[] = br.readLine().split(" ")[ CD ]
Line_4 $$ BufferedReader br = new BufferedReader(isr)-->Line_9 $$ String input[] = br.readLine().split(" ")[ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_10 $$ int min = (input[0].length() < input[1].length()) ? input[0].length() : input[1].length()[ CD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_11 $$ for (j = 0; j < min; j++) [ CD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ CD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_10 $$ int min = (input[0].length() < input[1].length()) ? input[0].length() : input[1].length()-->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ CD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ CD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ CD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ FD ]
Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) -->Line_13 $$ taro = taro + 3[ CD ]
Line_13 $$ taro = taro + 3-->Line_13 $$ taro = taro + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_13 $$ taro = taro + 3[ FD ]
Line_13 $$ taro = taro + 3-->Line_13 $$ taro = taro + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_13 $$ taro = taro + 3[ FD ]
Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) -->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ CD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ FD ]
Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) -->Line_16 $$ hanako = hanako + 3[ CD ]
Line_16 $$ hanako = hanako + 3-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_16 $$ hanako = hanako + 3-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) -->Line_18 $$ if (j == min - 1) [ CD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_18 $$ if (j == min - 1) [ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_18 $$ if (j == min - 1) [ FD ]
Line_18 $$ if (j == min - 1) -->Line_19 $$ if (input[0].length() > input[1].length()) [ CD ]
Line_19 $$ if (input[0].length() > input[1].length()) -->Line_20 $$ taro = taro + 3[ CD ]
Line_13 $$ taro = taro + 3-->Line_20 $$ taro = taro + 3[ FD ]
Line_20 $$ taro = taro + 3-->Line_20 $$ taro = taro + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_20 $$ taro = taro + 3[ FD ]
Line_13 $$ taro = taro + 3-->Line_20 $$ taro = taro + 3[ FD ]
Line_20 $$ taro = taro + 3-->Line_20 $$ taro = taro + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_20 $$ taro = taro + 3[ FD ]
Line_19 $$ if (input[0].length() > input[1].length()) -->Line_21 $$ if (input[0].length() < input[1].length()) [ CD ]
Line_21 $$ if (input[0].length() < input[1].length()) -->Line_22 $$ hanako = hanako + 3[ CD ]
Line_16 $$ hanako = hanako + 3-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_16 $$ hanako = hanako + 3-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_21 $$ if (input[0].length() < input[1].length()) -->Line_24 $$ taro = taro + 1[ CD ]
Line_13 $$ taro = taro + 3-->Line_24 $$ taro = taro + 1[ FD ]
Line_20 $$ taro = taro + 3-->Line_24 $$ taro = taro + 1[ FD ]
Line_24 $$ taro = taro + 1-->Line_24 $$ taro = taro + 1[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_24 $$ taro = taro + 1[ FD ]
Line_13 $$ taro = taro + 3-->Line_24 $$ taro = taro + 1[ FD ]
Line_20 $$ taro = taro + 3-->Line_24 $$ taro = taro + 1[ FD ]
Line_24 $$ taro = taro + 1-->Line_24 $$ taro = taro + 1[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_24 $$ taro = taro + 1[ FD ]
Line_21 $$ if (input[0].length() < input[1].length()) -->Line_25 $$ hanako = hanako + 1[ CD ]
Line_16 $$ hanako = hanako + 3-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_25 $$ hanako = hanako + 1-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_16 $$ hanako = hanako + 3-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_25 $$ hanako = hanako + 1-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_7 $$ int i, j, taro = 0, hanako = 0-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_8 $$ for (i = 0; i < n; i++) -->Line_8 $$ for (i = 0; i < n; i++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_11 $$ for (j = 0; j < min; j++) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_12 $$ if (input[0].charAt(j) > input[1].charAt(j)) [ FD ]
Line_13 $$ taro = taro + 3-->Line_13 $$ taro = taro + 3[ FD ]
Line_20 $$ taro = taro + 3-->Line_13 $$ taro = taro + 3[ FD ]
Line_24 $$ taro = taro + 1-->Line_13 $$ taro = taro + 3[ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_15 $$ if (input[0].charAt(j) < input[1].charAt(j)) [ FD ]
Line_16 $$ hanako = hanako + 3-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_25 $$ hanako = hanako + 1-->Line_16 $$ hanako = hanako + 3[ FD ]
Line_11 $$ for (j = 0; j < min; j++) -->Line_18 $$ if (j == min - 1) [ FD ]
Line_13 $$ taro = taro + 3-->Line_20 $$ taro = taro + 3[ FD ]
Line_20 $$ taro = taro + 3-->Line_20 $$ taro = taro + 3[ FD ]
Line_24 $$ taro = taro + 1-->Line_20 $$ taro = taro + 3[ FD ]
Line_16 $$ hanako = hanako + 3-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_25 $$ hanako = hanako + 1-->Line_22 $$ hanako = hanako + 3[ FD ]
Line_13 $$ taro = taro + 3-->Line_24 $$ taro = taro + 1[ FD ]
Line_20 $$ taro = taro + 3-->Line_24 $$ taro = taro + 1[ FD ]
Line_24 $$ taro = taro + 1-->Line_24 $$ taro = taro + 1[ FD ]
Line_16 $$ hanako = hanako + 3-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_22 $$ hanako = hanako + 3-->Line_25 $$ hanako = hanako + 1[ FD ]
Line_25 $$ hanako = hanako + 1-->Line_25 $$ hanako = hanako + 1[ FD ]
