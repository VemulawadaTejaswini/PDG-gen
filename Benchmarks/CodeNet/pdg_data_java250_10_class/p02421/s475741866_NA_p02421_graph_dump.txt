Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] arg) throws IOException [ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_4 $$ int turn = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int turn = Integer.parseInt(br.readLine())-->Line_4 $$ int turn = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int turn = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_5 $$ int p1 = 0, p2 = 0[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_6 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_2 $$ public static void main(String[] arg) throws IOException [ CD ]
Line_4 $$ int turn = Integer.parseInt(br.readLine())-->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_7 $$ String[] ani = br.readLine().split(" ")[ CD ]
Line_7 $$ String[] ani = br.readLine().split(" ")-->Line_7 $$ String[] ani = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ String[] ani = br.readLine().split(" ")[ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_8 $$ if (ani[0].compareToIgnoreCase(ani[1]) > 0) [ CD ]
Line_8 $$ if (ani[0].compareToIgnoreCase(ani[1]) > 0) -->Line_9 $$ p1 += 3[ CD ]
Line_9 $$ p1 += 3-->Line_9 $$ p1 += 3[ FD ]
Line_5 $$ int p1 = 0, p2 = 0-->Line_9 $$ p1 += 3[ FD ]
Line_8 $$ if (ani[0].compareToIgnoreCase(ani[1]) > 0) -->Line_11 $$ if (ani[0].compareToIgnoreCase(ani[1]) == 0) [ CD ]
Line_11 $$ if (ani[0].compareToIgnoreCase(ani[1]) == 0) -->Line_12 $$ p1 += 1[ CD ]
Line_9 $$ p1 += 3-->Line_12 $$ p1 += 1[ FD ]
Line_12 $$ p1 += 1-->Line_12 $$ p1 += 1[ FD ]
Line_5 $$ int p1 = 0, p2 = 0-->Line_12 $$ p1 += 1[ FD ]
Line_11 $$ if (ani[0].compareToIgnoreCase(ani[1]) == 0) -->Line_13 $$ p2 += 1[ CD ]
Line_13 $$ p2 += 1-->Line_13 $$ p2 += 1[ FD ]
Line_5 $$ int p1 = 0, p2 = 0-->Line_13 $$ p2 += 1[ FD ]
Line_11 $$ if (ani[0].compareToIgnoreCase(ani[1]) == 0) -->Line_15 $$ if (ani[0].compareToIgnoreCase(ani[1]) < 0) [ CD ]
Line_15 $$ if (ani[0].compareToIgnoreCase(ani[1]) < 0) -->Line_16 $$ p2 += 3[ CD ]
Line_13 $$ p2 += 1-->Line_16 $$ p2 += 3[ FD ]
Line_16 $$ p2 += 3-->Line_16 $$ p2 += 3[ FD ]
Line_5 $$ int p1 = 0, p2 = 0-->Line_16 $$ p2 += 3[ FD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_19 $$ System.out.println(p1 + " " + p2)[ CD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
