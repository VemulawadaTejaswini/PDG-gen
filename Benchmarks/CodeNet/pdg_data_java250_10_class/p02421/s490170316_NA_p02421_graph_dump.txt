Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int taroPoint = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int hanakoPoint = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ String[] word = sc.nextLine().split(" ")[ CD ]
Line_8 $$ String[] word = sc.nextLine().split(" ")-->Line_8 $$ String[] word = sc.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ String[] word = sc.nextLine().split(" ")[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ if (word[0].equals(word[1])) [ CD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_9 $$ if (word[0].equals(word[1])) [ CD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_10 $$ taroPoint += 1[ CD ]
Line_10 $$ taroPoint += 1-->Line_10 $$ taroPoint += 1[ FD ]
Line_5 $$ int taroPoint = 0-->Line_10 $$ taroPoint += 1[ FD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_11 $$ hanakoPoint += 1[ CD ]
Line_11 $$ hanakoPoint += 1-->Line_11 $$ hanakoPoint += 1[ FD ]
Line_6 $$ int hanakoPoint = 0-->Line_11 $$ hanakoPoint += 1[ FD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_13 $$ int wordlength = word[0].length()[ CD ]
Line_13 $$ int wordlength = word[0].length()-->Line_13 $$ int wordlength = word[0].length()[ CD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_14 $$ if (wordlength > word[1].length()) [ CD ]
Line_13 $$ int wordlength = word[0].length()-->Line_14 $$ if (wordlength > word[1].length()) [ FD ]
Line_14 $$ if (wordlength > word[1].length()) -->Line_15 $$ wordlength = word[1].length()[ CD ]
Line_13 $$ int wordlength = word[0].length()-->Line_15 $$ wordlength = word[1].length()[ FD ]
Line_15 $$ wordlength = word[1].length()-->Line_15 $$ wordlength = word[1].length()[ FD ]
Line_15 $$ wordlength = word[1].length()-->Line_15 $$ wordlength = word[1].length()[ CD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ CD ]
Line_9 $$ if (word[0].equals(word[1])) -->Line_9 $$ if (word[0].equals(word[1])) [ CD ]
Line_13 $$ int wordlength = word[0].length()-->Line_17 $$ for (int j = 0; j < wordlength; j++) [ FD ]
Line_15 $$ wordlength = word[1].length()-->Line_17 $$ for (int j = 0; j < wordlength; j++) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ CD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ CD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) [ CD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) [ FD ]
Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) -->Line_19 $$ taroPoint += 3[ CD ]
Line_19 $$ taroPoint += 3-->Line_19 $$ taroPoint += 3[ FD ]
Line_10 $$ taroPoint += 1-->Line_19 $$ taroPoint += 3[ FD ]
Line_5 $$ int taroPoint = 0-->Line_19 $$ taroPoint += 3[ FD ]
Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) -->Line_21 $$ if (word[0].charAt(j) < word[1].charAt(j)) [ CD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_21 $$ if (word[0].charAt(j) < word[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_21 $$ if (word[0].charAt(j) < word[1].charAt(j)) [ FD ]
Line_21 $$ if (word[0].charAt(j) < word[1].charAt(j)) -->Line_22 $$ hanakoPoint += 3[ CD ]
Line_22 $$ hanakoPoint += 3-->Line_22 $$ hanakoPoint += 3[ FD ]
Line_11 $$ hanakoPoint += 1-->Line_22 $$ hanakoPoint += 3[ FD ]
Line_6 $$ int hanakoPoint = 0-->Line_22 $$ hanakoPoint += 3[ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_25 $$ if (j == wordlength - 1) [ CD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_25 $$ if (j == wordlength - 1) [ FD ]
Line_25 $$ if (j == wordlength - 1) -->Line_26 $$ if (word[0].length() > word[1].length()) [ CD ]
Line_26 $$ if (word[0].length() > word[1].length()) -->Line_27 $$ taroPoint += 3[ CD ]
Line_19 $$ taroPoint += 3-->Line_27 $$ taroPoint += 3[ FD ]
Line_27 $$ taroPoint += 3-->Line_27 $$ taroPoint += 3[ FD ]
Line_10 $$ taroPoint += 1-->Line_27 $$ taroPoint += 3[ FD ]
Line_5 $$ int taroPoint = 0-->Line_27 $$ taroPoint += 3[ FD ]
Line_26 $$ if (word[0].length() > word[1].length()) -->Line_29 $$ hanakoPoint += 3[ CD ]
Line_22 $$ hanakoPoint += 3-->Line_29 $$ hanakoPoint += 3[ FD ]
Line_29 $$ hanakoPoint += 3-->Line_29 $$ hanakoPoint += 3[ FD ]
Line_11 $$ hanakoPoint += 1-->Line_29 $$ hanakoPoint += 3[ FD ]
Line_6 $$ int hanakoPoint = 0-->Line_29 $$ hanakoPoint += 3[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_35 $$ System.out.println(taroPoint + " " + hanakoPoint)[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ int wordlength = word[0].length()-->Line_14 $$ if (wordlength > word[1].length()) [ FD ]
Line_15 $$ wordlength = word[1].length()-->Line_14 $$ if (wordlength > word[1].length()) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_17 $$ for (int j = 0; j < wordlength; j++) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_18 $$ if (word[0].charAt(j) > word[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_21 $$ if (word[0].charAt(j) < word[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_21 $$ if (word[0].charAt(j) < word[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < wordlength; j++) -->Line_25 $$ if (j == wordlength - 1) [ FD ]
