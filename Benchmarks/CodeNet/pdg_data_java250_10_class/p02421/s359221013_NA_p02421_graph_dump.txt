Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner stdIn = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String word1 = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String word2 = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int n = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int pointA = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ int pointB = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ n = stdIn.nextInt()[ CD ]
Line_6 $$ int n = 0-->Line_9 $$ n = stdIn.nextInt()[ FD ]
Line_9 $$ n = stdIn.nextInt()-->Line_9 $$ n = stdIn.nextInt()[ FD ]
Line_9 $$ n = stdIn.nextInt()-->Line_9 $$ n = stdIn.nextInt()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_9 $$ n = stdIn.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_6 $$ int n = 0-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ n = stdIn.nextInt()-->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_11 $$ word1 = stdIn.next()[ CD ]
Line_11 $$ word1 = stdIn.next()-->Line_11 $$ word1 = stdIn.next()[ FD ]
Line_4 $$ String word1 = ""-->Line_11 $$ word1 = stdIn.next()[ FD ]
Line_11 $$ word1 = stdIn.next()-->Line_11 $$ word1 = stdIn.next()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_11 $$ word1 = stdIn.next()[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_12 $$ word2 = stdIn.next()[ CD ]
Line_12 $$ word2 = stdIn.next()-->Line_12 $$ word2 = stdIn.next()[ FD ]
Line_5 $$ String word2 = ""-->Line_12 $$ word2 = stdIn.next()[ FD ]
Line_12 $$ word2 = stdIn.next()-->Line_12 $$ word2 = stdIn.next()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_12 $$ word2 = stdIn.next()[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_13 $$ int result = word1.compareTo(word2)[ CD ]
Line_13 $$ int result = word1.compareTo(word2)-->Line_13 $$ int result = word1.compareTo(word2)[ CD ]
Line_11 $$ word1 = stdIn.next()-->Line_13 $$ int result = word1.compareTo(word2)[ FD ]
Line_4 $$ String word1 = ""-->Line_13 $$ int result = word1.compareTo(word2)[ FD ]
Line_12 $$ word2 = stdIn.next()-->Line_13 $$ int result = word1.compareTo(word2)[ FD ]
Line_5 $$ String word2 = ""-->Line_13 $$ int result = word1.compareTo(word2)[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_14 $$ if (result > 0) [ CD ]
Line_13 $$ int result = word1.compareTo(word2)-->Line_14 $$ if (result > 0) [ FD ]
Line_14 $$ if (result > 0) -->Line_15 $$ pointA = pointA + 3[ CD ]
Line_15 $$ pointA = pointA + 3-->Line_15 $$ pointA = pointA + 3[ FD ]
Line_7 $$ int pointA = 0-->Line_15 $$ pointA = pointA + 3[ FD ]
Line_15 $$ pointA = pointA + 3-->Line_15 $$ pointA = pointA + 3[ FD ]
Line_7 $$ int pointA = 0-->Line_15 $$ pointA = pointA + 3[ FD ]
Line_14 $$ if (result > 0) -->Line_16 $$ if (result == 0) [ CD ]
Line_13 $$ int result = word1.compareTo(word2)-->Line_16 $$ if (result == 0) [ FD ]
Line_16 $$ if (result == 0) -->Line_17 $$ pointA = pointA + 1[ CD ]
Line_15 $$ pointA = pointA + 3-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_17 $$ pointA = pointA + 1-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_7 $$ int pointA = 0-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_15 $$ pointA = pointA + 3-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_17 $$ pointA = pointA + 1-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_7 $$ int pointA = 0-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_16 $$ if (result == 0) -->Line_18 $$ pointB = pointB + 1[ CD ]
Line_18 $$ pointB = pointB + 1-->Line_18 $$ pointB = pointB + 1[ FD ]
Line_8 $$ int pointB = 0-->Line_18 $$ pointB = pointB + 1[ FD ]
Line_18 $$ pointB = pointB + 1-->Line_18 $$ pointB = pointB + 1[ FD ]
Line_8 $$ int pointB = 0-->Line_18 $$ pointB = pointB + 1[ FD ]
Line_16 $$ if (result == 0) -->Line_20 $$ pointB = pointB + 3[ CD ]
Line_18 $$ pointB = pointB + 1-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_20 $$ pointB = pointB + 3-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_8 $$ int pointB = 0-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_18 $$ pointB = pointB + 1-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_20 $$ pointB = pointB + 3-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_8 $$ int pointB = 0-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_23 $$ System.out.println(pointA + " " + pointB)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ stdIn.close()[ CD ]
Line_3 $$ Scanner stdIn = new Scanner(System.in)-->Line_24 $$ stdIn.close()[ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ for (int i = 0; i < n; i++) -->Line_10 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ word1 = stdIn.next()-->Line_13 $$ int result = word1.compareTo(word2)[ FD ]
Line_12 $$ word2 = stdIn.next()-->Line_13 $$ int result = word1.compareTo(word2)[ FD ]
Line_13 $$ int result = word1.compareTo(word2)-->Line_14 $$ if (result > 0) [ FD ]
Line_15 $$ pointA = pointA + 3-->Line_15 $$ pointA = pointA + 3[ FD ]
Line_17 $$ pointA = pointA + 1-->Line_15 $$ pointA = pointA + 3[ FD ]
Line_13 $$ int result = word1.compareTo(word2)-->Line_16 $$ if (result == 0) [ FD ]
Line_15 $$ pointA = pointA + 3-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_17 $$ pointA = pointA + 1-->Line_17 $$ pointA = pointA + 1[ FD ]
Line_18 $$ pointB = pointB + 1-->Line_18 $$ pointB = pointB + 1[ FD ]
Line_20 $$ pointB = pointB + 3-->Line_18 $$ pointB = pointB + 1[ FD ]
Line_18 $$ pointB = pointB + 1-->Line_20 $$ pointB = pointB + 3[ FD ]
Line_20 $$ pointB = pointB + 3-->Line_20 $$ pointB = pointB + 3[ FD ]
