Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int num = scan.nextInt()[ CD ]
Line_4 $$ int num = scan.nextInt()-->Line_4 $$ int num = scan.nextInt()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_4 $$ int num = scan.nextInt()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int alphaAns = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int betaAns = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < num; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int num = scan.nextInt()-->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ CD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ CD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_8 $$ String alpha = scan.next()[ CD ]
Line_8 $$ String alpha = scan.next()-->Line_8 $$ String alpha = scan.next()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ String alpha = scan.next()[ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_9 $$ String beta = scan.next()[ CD ]
Line_9 $$ String beta = scan.next()-->Line_9 $$ String beta = scan.next()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_9 $$ String beta = scan.next()[ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_10 $$ if (alpha.compareTo(beta) == 0) [ CD ]
Line_8 $$ String alpha = scan.next()-->Line_10 $$ if (alpha.compareTo(beta) == 0) [ FD ]
Line_9 $$ String beta = scan.next()-->Line_10 $$ if (alpha.compareTo(beta) == 0) [ FD ]
Line_10 $$ if (alpha.compareTo(beta) == 0) -->Line_11 $$ alphaAns++[ CD ]
Line_5 $$ int alphaAns = 0-->Line_11 $$ alphaAns++[ FD ]
Line_10 $$ if (alpha.compareTo(beta) == 0) -->Line_12 $$ betaAns++[ CD ]
Line_6 $$ int betaAns = 0-->Line_12 $$ betaAns++[ FD ]
Line_10 $$ if (alpha.compareTo(beta) == 0) -->Line_13 $$ if (alpha.compareTo(beta) > 0) [ CD ]
Line_8 $$ String alpha = scan.next()-->Line_13 $$ if (alpha.compareTo(beta) > 0) [ FD ]
Line_9 $$ String beta = scan.next()-->Line_13 $$ if (alpha.compareTo(beta) > 0) [ FD ]
Line_13 $$ if (alpha.compareTo(beta) > 0) -->Line_14 $$ alphaAns += 3[ CD ]
Line_14 $$ alphaAns += 3-->Line_14 $$ alphaAns += 3[ FD ]
Line_5 $$ int alphaAns = 0-->Line_14 $$ alphaAns += 3[ FD ]
Line_13 $$ if (alpha.compareTo(beta) > 0) -->Line_16 $$ betaAns += 3[ CD ]
Line_16 $$ betaAns += 3-->Line_16 $$ betaAns += 3[ FD ]
Line_6 $$ int betaAns = 0-->Line_16 $$ betaAns += 3[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_19 $$ out.printf("%d %d\n", alphaAns, betaAns)[ CD ]
Line_14 $$ alphaAns += 3-->Line_19 $$ out.printf("%d %d\n", alphaAns, betaAns)[ FD ]
Line_5 $$ int alphaAns = 0-->Line_19 $$ out.printf("%d %d\n", alphaAns, betaAns)[ FD ]
Line_16 $$ betaAns += 3-->Line_19 $$ out.printf("%d %d\n", alphaAns, betaAns)[ FD ]
Line_6 $$ int betaAns = 0-->Line_19 $$ out.printf("%d %d\n", alphaAns, betaAns)[ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_7 $$ for (int i = 0; i < num; i++) -->Line_7 $$ for (int i = 0; i < num; i++) [ FD ]
Line_8 $$ String alpha = scan.next()-->Line_10 $$ if (alpha.compareTo(beta) == 0) [ FD ]
Line_9 $$ String beta = scan.next()-->Line_10 $$ if (alpha.compareTo(beta) == 0) [ FD ]
Line_14 $$ alphaAns += 3-->Line_11 $$ alphaAns++[ FD ]
Line_16 $$ betaAns += 3-->Line_12 $$ betaAns++[ FD ]
Line_8 $$ String alpha = scan.next()-->Line_13 $$ if (alpha.compareTo(beta) > 0) [ FD ]
Line_9 $$ String beta = scan.next()-->Line_13 $$ if (alpha.compareTo(beta) > 0) [ FD ]
