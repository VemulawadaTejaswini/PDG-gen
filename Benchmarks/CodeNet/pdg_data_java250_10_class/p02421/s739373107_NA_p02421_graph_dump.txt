Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int turn = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int turn = Integer.parseInt(br.readLine())-->Line_4 $$ int turn = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int turn = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int tarou = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int hanako = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int turn = Integer.parseInt(br.readLine())-->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_7 $$ String[] card = br.readLine().split(" ")[ CD ]
Line_7 $$ String[] card = br.readLine().split(" ")-->Line_7 $$ String[] card = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ String[] card = br.readLine().split(" ")[ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) [ CD ]
Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) -->Line_9 $$ tarou++[ CD ]
Line_5 $$ int tarou = 0-->Line_9 $$ tarou++[ FD ]
Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) -->Line_9 $$ hanako++[ CD ]
Line_5 $$ int hanako = 0-->Line_9 $$ hanako++[ FD ]
Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) -->Line_10 $$ if (card[0].compareToIgnoreCase(card[1]) > 0) [ CD ]
Line_10 $$ if (card[0].compareToIgnoreCase(card[1]) > 0) -->Line_11 $$ tarou += 3[ CD ]
Line_11 $$ tarou += 3-->Line_11 $$ tarou += 3[ FD ]
Line_5 $$ int tarou = 0-->Line_11 $$ tarou += 3[ FD ]
Line_10 $$ if (card[0].compareToIgnoreCase(card[1]) > 0) -->Line_13 $$ hanako += 3[ CD ]
Line_13 $$ hanako += 3-->Line_13 $$ hanako += 3[ FD ]
Line_5 $$ int hanako = 0-->Line_13 $$ hanako += 3[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ System.out.println(tarou + " " + hanako)[ CD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_6 $$ for (int i = 0; i < turn; i++) -->Line_6 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_11 $$ tarou += 3-->Line_9 $$ tarou++[ FD ]
Line_13 $$ hanako += 3-->Line_9 $$ hanako++[ FD ]
