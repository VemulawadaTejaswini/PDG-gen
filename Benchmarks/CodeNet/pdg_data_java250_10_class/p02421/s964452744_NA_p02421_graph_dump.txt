Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_5 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_5 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_6 $$ int taroPoint = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_7 $$ int hanakoPoint = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException [ CD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ String input = br.readLine()[ CD ]
Line_9 $$ String input = br.readLine()-->Line_9 $$ String input = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ String input = br.readLine()[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ String[] card = input.split(" ")[ CD ]
Line_10 $$ String[] card = input.split(" ")-->Line_10 $$ String[] card = input.split(" ")[ CD ]
Line_9 $$ String input = br.readLine()-->Line_10 $$ String[] card = input.split(" ")[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_11 $$ String taro = card[0][ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_12 $$ String hanako = card[1][ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if (taro.compareTo(hanako) > 0) [ CD ]
Line_11 $$ String taro = card[0]-->Line_13 $$ if (taro.compareTo(hanako) > 0) [ FD ]
Line_12 $$ String hanako = card[1]-->Line_13 $$ if (taro.compareTo(hanako) > 0) [ FD ]
Line_13 $$ if (taro.compareTo(hanako) > 0) -->Line_14 $$ taroPoint += 3[ CD ]
Line_14 $$ taroPoint += 3-->Line_14 $$ taroPoint += 3[ FD ]
Line_6 $$ int taroPoint = 0-->Line_14 $$ taroPoint += 3[ FD ]
Line_13 $$ if (taro.compareTo(hanako) > 0) -->Line_15 $$ if (taro.compareTo(hanako) < 0) [ CD ]
Line_11 $$ String taro = card[0]-->Line_15 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_12 $$ String hanako = card[1]-->Line_15 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_15 $$ if (taro.compareTo(hanako) < 0) -->Line_16 $$ hanakoPoint += 3[ CD ]
Line_16 $$ hanakoPoint += 3-->Line_16 $$ hanakoPoint += 3[ FD ]
Line_7 $$ int hanakoPoint = 0-->Line_16 $$ hanakoPoint += 3[ FD ]
Line_15 $$ if (taro.compareTo(hanako) < 0) -->Line_18 $$ taroPoint++[ CD ]
Line_14 $$ taroPoint += 3-->Line_18 $$ taroPoint++[ FD ]
Line_6 $$ int taroPoint = 0-->Line_18 $$ taroPoint++[ FD ]
Line_15 $$ if (taro.compareTo(hanako) < 0) -->Line_19 $$ hanakoPoint++[ CD ]
Line_16 $$ hanakoPoint += 3-->Line_19 $$ hanakoPoint++[ FD ]
Line_7 $$ int hanakoPoint = 0-->Line_19 $$ hanakoPoint++[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_22 $$ sb.append(taroPoint).append(" ").append(hanakoPoint)[ CD ]
Line_16 $$ hanakoPoint += 3-->Line_22 $$ sb.append(taroPoint).append(" ").append(hanakoPoint)[ FD ]
Line_7 $$ int hanakoPoint = 0-->Line_22 $$ sb.append(taroPoint).append(" ").append(hanakoPoint)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ sb.append(taroPoint).append(" ").append(hanakoPoint)[ FD ]
Line_14 $$ taroPoint += 3-->Line_22 $$ sb.append(taroPoint).append(" ").append(hanakoPoint)[ FD ]
Line_6 $$ int taroPoint = 0-->Line_22 $$ sb.append(taroPoint).append(" ").append(hanakoPoint)[ FD ]
Line_2 $$ public static void main(String[] args) throws NumberFormatException, IOException -->Line_23 $$ System.out.println(sb)[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ System.out.println(sb)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ String input = br.readLine()-->Line_10 $$ String[] card = input.split(" ")[ FD ]
Line_11 $$ String taro = card[0]-->Line_13 $$ if (taro.compareTo(hanako) > 0) [ FD ]
Line_12 $$ String hanako = card[1]-->Line_13 $$ if (taro.compareTo(hanako) > 0) [ FD ]
Line_11 $$ String taro = card[0]-->Line_15 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_12 $$ String hanako = card[1]-->Line_15 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_14 $$ taroPoint += 3-->Line_18 $$ taroPoint++[ FD ]
Line_16 $$ hanakoPoint += 3-->Line_19 $$ hanakoPoint++[ FD ]
