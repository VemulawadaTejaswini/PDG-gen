Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ String line = br.readLine()[ CD ]
Line_4 $$ String line = br.readLine()-->Line_4 $$ String line = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String line = br.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int n = Integer.parseInt(line)[ CD ]
Line_5 $$ int n = Integer.parseInt(line)-->Line_5 $$ int n = Integer.parseInt(line)[ CD ]
Line_4 $$ String line = br.readLine()-->Line_5 $$ int n = Integer.parseInt(line)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int tarouScore = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int hanakoScore = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_5 $$ int n = Integer.parseInt(line)-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ String[] s = br.readLine().split(" ")[ CD ]
Line_9 $$ String[] s = br.readLine().split(" ")-->Line_9 $$ String[] s = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ String[] s = br.readLine().split(" ")[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ String tarou = s[0][ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_11 $$ String hanako = s[1][ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_12 $$ ArrayList<String> dic = new ArrayList<String>()[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ dic.add(tarou)[ CD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_13 $$ dic.add(tarou)[ FD ]
Line_10 $$ String tarou = s[0]-->Line_13 $$ dic.add(tarou)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_14 $$ dic.add(hanako)[ CD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_14 $$ dic.add(hanako)[ FD ]
Line_11 $$ String hanako = s[1]-->Line_14 $$ dic.add(hanako)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_15 $$ Collections.sort(dic)[ CD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_15 $$ Collections.sort(dic)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_16 $$ if (tarou.equals(hanako)) [ CD ]
Line_10 $$ String tarou = s[0]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_11 $$ String hanako = s[1]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_16 $$ if (tarou.equals(hanako)) -->Line_16 $$ if (tarou.equals(hanako)) [ CD ]
Line_10 $$ String tarou = s[0]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_11 $$ String hanako = s[1]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_16 $$ if (tarou.equals(hanako)) -->Line_17 $$ tarouScore += 1[ CD ]
Line_17 $$ tarouScore += 1-->Line_17 $$ tarouScore += 1[ FD ]
Line_6 $$ int tarouScore = 0-->Line_17 $$ tarouScore += 1[ FD ]
Line_16 $$ if (tarou.equals(hanako)) -->Line_18 $$ hanakoScore += 1[ CD ]
Line_18 $$ hanakoScore += 1-->Line_18 $$ hanakoScore += 1[ FD ]
Line_7 $$ int hanakoScore = 0-->Line_18 $$ hanakoScore += 1[ FD ]
Line_16 $$ if (tarou.equals(hanako)) -->Line_19 $$ if (tarou.equals(dic.get(0))) [ CD ]
Line_10 $$ String tarou = s[0]-->Line_19 $$ if (tarou.equals(dic.get(0))) [ FD ]
Line_19 $$ if (tarou.equals(dic.get(0))) -->Line_19 $$ if (tarou.equals(dic.get(0))) [ CD ]
Line_10 $$ String tarou = s[0]-->Line_19 $$ if (tarou.equals(dic.get(0))) [ FD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_19 $$ if (tarou.equals(dic.get(0))) [ FD ]
Line_19 $$ if (tarou.equals(dic.get(0))) -->Line_20 $$ hanakoScore += 3[ CD ]
Line_18 $$ hanakoScore += 1-->Line_20 $$ hanakoScore += 3[ FD ]
Line_20 $$ hanakoScore += 3-->Line_20 $$ hanakoScore += 3[ FD ]
Line_7 $$ int hanakoScore = 0-->Line_20 $$ hanakoScore += 3[ FD ]
Line_19 $$ if (tarou.equals(dic.get(0))) -->Line_22 $$ tarouScore += 3[ CD ]
Line_17 $$ tarouScore += 1-->Line_22 $$ tarouScore += 3[ FD ]
Line_22 $$ tarouScore += 3-->Line_22 $$ tarouScore += 3[ FD ]
Line_6 $$ int tarouScore = 0-->Line_22 $$ tarouScore += 3[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_25 $$ System.out.println(tarouScore + " " + hanakoScore)[ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_13 $$ dic.add(tarou)[ FD ]
Line_10 $$ String tarou = s[0]-->Line_13 $$ dic.add(tarou)[ FD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_14 $$ dic.add(hanako)[ FD ]
Line_11 $$ String hanako = s[1]-->Line_14 $$ dic.add(hanako)[ FD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_15 $$ Collections.sort(dic)[ FD ]
Line_10 $$ String tarou = s[0]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_11 $$ String hanako = s[1]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_10 $$ String tarou = s[0]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_11 $$ String hanako = s[1]-->Line_16 $$ if (tarou.equals(hanako)) [ FD ]
Line_10 $$ String tarou = s[0]-->Line_19 $$ if (tarou.equals(dic.get(0))) [ FD ]
Line_10 $$ String tarou = s[0]-->Line_19 $$ if (tarou.equals(dic.get(0))) [ FD ]
Line_12 $$ ArrayList<String> dic = new ArrayList<String>()-->Line_19 $$ if (tarou.equals(dic.get(0))) [ FD ]
