Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] age) throws IOException [ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_4 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_5 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_5 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_6 $$ int i = 0[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_7 $$ int j = 0[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_8 $$ int a = 0[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_9 $$ int T = 0[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_10 $$ int H = 0[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_11 $$ String alha = "abcdefghijklmnopqrstuvwxyz"[ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_12 $$ while (a < n) [ CD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_2 $$ public static void main(String[] age) throws IOException [ CD ]
Line_8 $$ int a = 0-->Line_12 $$ while (a < n) [ FD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_12 $$ while (a < n) [ FD ]
Line_12 $$ while (a < n) -->Line_13 $$ String[] input = br.readLine().split(" ")[ CD ]
Line_13 $$ String[] input = br.readLine().split(" ")-->Line_13 $$ String[] input = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_13 $$ String[] input = br.readLine().split(" ")[ FD ]
Line_12 $$ while (a < n) -->Line_14 $$ if (input[0].equals(input[1])) [ CD ]
Line_14 $$ if (input[0].equals(input[1])) -->Line_14 $$ if (input[0].equals(input[1])) [ CD ]
Line_14 $$ if (input[0].equals(input[1])) -->Line_15 $$ T++[ CD ]
Line_9 $$ int T = 0-->Line_15 $$ T++[ FD ]
Line_14 $$ if (input[0].equals(input[1])) -->Line_16 $$ H++[ CD ]
Line_10 $$ int H = 0-->Line_16 $$ H++[ FD ]
Line_14 $$ if (input[0].equals(input[1])) -->Line_17 $$ if (input[0].length() >= input[1].length()) [ CD ]
Line_17 $$ if (input[0].length() >= input[1].length()) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ CD ]
Line_17 $$ if (input[0].length() >= input[1].length()) -->Line_17 $$ if (input[0].length() >= input[1].length()) [ CD ]
Line_6 $$ int i = 0-->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_6 $$ int i = 0-->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_6 $$ int i = 0-->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ CD ]
Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_20 $$ if (i == input[1].length() - 1)[ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_20 $$ if (i == input[1].length() - 1)[ FD ]
Line_6 $$ int i = 0-->Line_20 $$ if (i == input[1].length() - 1)[ FD ]
Line_20 $$ if (i == input[1].length() - 1)-->Line_20 $$ T = T + 3[ CD ]
Line_20 $$ T = T + 3-->Line_20 $$ T = T + 3[ FD ]
Line_9 $$ int T = 0-->Line_20 $$ T = T + 3[ FD ]
Line_20 $$ T = T + 3-->Line_20 $$ T = T + 3[ FD ]
Line_9 $$ int T = 0-->Line_20 $$ T = T + 3[ FD ]
Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_22 $$ for (j = 0; j < 26; j++) [ CD ]
Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ CD ]
Line_7 $$ int j = 0-->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ CD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_7 $$ int j = 0-->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ CD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_7 $$ int j = 0-->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_11 $$ String alha = "abcdefghijklmnopqrstuvwxyz"-->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_7 $$ int j = 0-->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_24 $$ H = H + 3[ CD ]
Line_24 $$ H = H + 3-->Line_24 $$ H = H + 3[ FD ]
Line_10 $$ int H = 0-->Line_24 $$ H = H + 3[ FD ]
Line_24 $$ H = H + 3-->Line_24 $$ H = H + 3[ FD ]
Line_10 $$ int H = 0-->Line_24 $$ H = H + 3[ FD ]
Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_11 $$ String alha = "abcdefghijklmnopqrstuvwxyz"-->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_7 $$ int j = 0-->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_27 $$ T = T + 3[ CD ]
Line_27 $$ T = T + 3-->Line_27 $$ T = T + 3[ FD ]
Line_20 $$ T = T + 3-->Line_27 $$ T = T + 3[ FD ]
Line_9 $$ int T = 0-->Line_27 $$ T = T + 3[ FD ]
Line_27 $$ T = T + 3-->Line_27 $$ T = T + 3[ FD ]
Line_20 $$ T = T + 3-->Line_27 $$ T = T + 3[ FD ]
Line_9 $$ int T = 0-->Line_27 $$ T = T + 3[ FD ]
Line_17 $$ if (input[0].length() >= input[1].length()) -->Line_34 $$ if (input[0].length() < input[1].length()) [ CD ]
Line_34 $$ if (input[0].length() < input[1].length()) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ CD ]
Line_34 $$ if (input[0].length() < input[1].length()) -->Line_34 $$ if (input[0].length() < input[1].length()) [ CD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_6 $$ int i = 0-->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ CD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_6 $$ int i = 0-->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ CD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_6 $$ int i = 0-->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ CD ]
Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ CD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_37 $$ if (i == input[0].length() - 1)[ CD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_37 $$ if (i == input[0].length() - 1)[ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_37 $$ if (i == input[0].length() - 1)[ FD ]
Line_6 $$ int i = 0-->Line_37 $$ if (i == input[0].length() - 1)[ FD ]
Line_37 $$ if (i == input[0].length() - 1)-->Line_37 $$ H = H + 3[ CD ]
Line_37 $$ H = H + 3-->Line_37 $$ H = H + 3[ FD ]
Line_24 $$ H = H + 3-->Line_37 $$ H = H + 3[ FD ]
Line_10 $$ int H = 0-->Line_37 $$ H = H + 3[ FD ]
Line_37 $$ H = H + 3-->Line_37 $$ H = H + 3[ FD ]
Line_24 $$ H = H + 3-->Line_37 $$ H = H + 3[ FD ]
Line_10 $$ int H = 0-->Line_37 $$ H = H + 3[ FD ]
Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_39 $$ for (j = 0; j < 26; j++) [ CD ]
Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ CD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_7 $$ int j = 0-->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ CD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_7 $$ int j = 0-->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ CD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_7 $$ int j = 0-->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_11 $$ String alha = "abcdefghijklmnopqrstuvwxyz"-->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_7 $$ int j = 0-->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_41 $$ H = H + 3[ CD ]
Line_41 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_37 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_24 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_10 $$ int H = 0-->Line_41 $$ H = H + 3[ FD ]
Line_41 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_37 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_24 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_10 $$ int H = 0-->Line_41 $$ H = H + 3[ FD ]
Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ CD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_6 $$ int i = 0-->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_11 $$ String alha = "abcdefghijklmnopqrstuvwxyz"-->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_7 $$ int j = 0-->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) -->Line_44 $$ T = T + 3[ CD ]
Line_44 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
Line_27 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
Line_20 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
Line_9 $$ int T = 0-->Line_44 $$ T = T + 3[ FD ]
Line_44 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
Line_27 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
Line_20 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
Line_9 $$ int T = 0-->Line_44 $$ T = T + 3[ FD ]
Line_12 $$ while (a < n) -->Line_52 $$ a++[ CD ]
Line_8 $$ int a = 0-->Line_52 $$ a++[ FD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_44 $$ T = T + 3-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_27 $$ T = T + 3-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_20 $$ T = T + 3-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_9 $$ int T = 0-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_41 $$ H = H + 3-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_37 $$ H = H + 3-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_24 $$ H = H + 3-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_10 $$ int H = 0-->Line_54 $$ sb.append(Integer.toString(T)).append(" ").append(Integer.toString(H))[ FD ]
Line_2 $$ public static void main(String[] age) throws IOException -->Line_55 $$ System.out.println(sb)[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_55 $$ System.out.println(sb)[ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_18 $$ for (i = 0; i < input[1].length(); i++) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_19 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_18 $$ for (i = 0; i < input[1].length(); i++) -->Line_20 $$ if (i == input[1].length() - 1)[ FD ]
Line_20 $$ T = T + 3-->Line_20 $$ T = T + 3[ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_22 $$ for (j = 0; j < 26; j++) [ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_23 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_24 $$ H = H + 3-->Line_24 $$ H = H + 3[ FD ]
Line_22 $$ for (j = 0; j < 26; j++) -->Line_26 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_27 $$ T = T + 3-->Line_27 $$ T = T + 3[ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_35 $$ for (i = 0; i < input[0].length(); i++) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_36 $$ if (input[0].substring(i, i + 1).equals(input[1].substring(i, i + 1))) [ FD ]
Line_35 $$ for (i = 0; i < input[0].length(); i++) -->Line_37 $$ if (i == input[0].length() - 1)[ FD ]
Line_37 $$ H = H + 3-->Line_37 $$ H = H + 3[ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_39 $$ for (j = 0; j < 26; j++) [ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_40 $$ if (input[0].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_41 $$ H = H + 3-->Line_41 $$ H = H + 3[ FD ]
Line_39 $$ for (j = 0; j < 26; j++) -->Line_43 $$ if (input[1].substring(i, i + 1).equals(alha.substring(j, j + 1))) [ FD ]
Line_44 $$ T = T + 3-->Line_44 $$ T = T + 3[ FD ]
