Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = Integer.parseInt(sc.nextLine())[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ int tarou_point = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ int hanako_point = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = Integer.parseInt(sc.nextLine())-->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_8 $$ String[] words = sc.nextLine().split(" ")[ CD ]
Line_8 $$ String[] words = sc.nextLine().split(" ")-->Line_8 $$ String[] words = sc.nextLine().split(" ")[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_8 $$ String[] words = sc.nextLine().split(" ")[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_9 $$ char tarou[] = words[0].toCharArray()[ CD ]
Line_9 $$ char tarou[] = words[0].toCharArray()-->Line_9 $$ char tarou[] = words[0].toCharArray()[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_10 $$ char hanako[] = words[1].toCharArray()[ CD ]
Line_10 $$ char hanako[] = words[1].toCharArray()-->Line_10 $$ char hanako[] = words[1].toCharArray()[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_11 $$ int flag = 2[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_12 $$ int length = hanako.length[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_13 $$ if (tarou.length < hanako.length) [ CD ]
Line_13 $$ if (tarou.length < hanako.length) -->Line_14 $$ length = tarou.length[ CD ]
Line_12 $$ int length = hanako.length-->Line_14 $$ length = tarou.length[ FD ]
Line_14 $$ length = tarou.length-->Line_14 $$ length = tarou.length[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int l = 0; l < length; l++) [ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ CD ]
Line_12 $$ int length = hanako.length-->Line_16 $$ for (int l = 0; l < length; l++) [ FD ]
Line_14 $$ length = tarou.length-->Line_16 $$ for (int l = 0; l < length; l++) [ FD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_16 $$ for (int l = 0; l < length; l++) [ CD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_16 $$ for (int l = 0; l < length; l++) [ CD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_16 $$ for (int l = 0; l < length; l++) [ FD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_17 $$ if (tarou[l] < hanako[l]) [ CD ]
Line_17 $$ if (tarou[l] < hanako[l]) -->Line_18 $$ flag = 0[ CD ]
Line_18 $$ flag = 0-->Line_18 $$ flag = 0[ FD ]
Line_11 $$ int flag = 2-->Line_18 $$ flag = 0[ FD ]
Line_17 $$ if (tarou[l] < hanako[l]) -->Line_20 $$ if (tarou[l] > hanako[l]) [ CD ]
Line_20 $$ if (tarou[l] > hanako[l]) -->Line_21 $$ flag = 1[ CD ]
Line_18 $$ flag = 0-->Line_21 $$ flag = 1[ FD ]
Line_21 $$ flag = 1-->Line_21 $$ flag = 1[ FD ]
Line_11 $$ int flag = 2-->Line_21 $$ flag = 1[ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_25 $$ if (flag == 0) [ CD ]
Line_18 $$ flag = 0-->Line_25 $$ if (flag == 0) [ FD ]
Line_21 $$ flag = 1-->Line_25 $$ if (flag == 0) [ FD ]
Line_11 $$ int flag = 2-->Line_25 $$ if (flag == 0) [ FD ]
Line_25 $$ if (flag == 0) -->Line_26 $$ hanako_point += 3[ CD ]
Line_26 $$ hanako_point += 3-->Line_26 $$ hanako_point += 3[ FD ]
Line_6 $$ int hanako_point = 0-->Line_26 $$ hanako_point += 3[ FD ]
Line_25 $$ if (flag == 0) -->Line_27 $$ if (flag == 1) [ CD ]
Line_18 $$ flag = 0-->Line_27 $$ if (flag == 1) [ FD ]
Line_21 $$ flag = 1-->Line_27 $$ if (flag == 1) [ FD ]
Line_11 $$ int flag = 2-->Line_27 $$ if (flag == 1) [ FD ]
Line_27 $$ if (flag == 1) -->Line_28 $$ tarou_point += 3[ CD ]
Line_28 $$ tarou_point += 3-->Line_28 $$ tarou_point += 3[ FD ]
Line_5 $$ int tarou_point = 0-->Line_28 $$ tarou_point += 3[ FD ]
Line_27 $$ if (flag == 1) -->Line_30 $$ if (tarou.length > hanako.length) [ CD ]
Line_30 $$ if (tarou.length > hanako.length) -->Line_31 $$ tarou_point += 3[ CD ]
Line_28 $$ tarou_point += 3-->Line_31 $$ tarou_point += 3[ FD ]
Line_31 $$ tarou_point += 3-->Line_31 $$ tarou_point += 3[ FD ]
Line_5 $$ int tarou_point = 0-->Line_31 $$ tarou_point += 3[ FD ]
Line_30 $$ if (tarou.length > hanako.length) -->Line_32 $$ if (tarou.length < hanako.length) [ CD ]
Line_32 $$ if (tarou.length < hanako.length) -->Line_33 $$ hanako_point += 3[ CD ]
Line_26 $$ hanako_point += 3-->Line_33 $$ hanako_point += 3[ FD ]
Line_33 $$ hanako_point += 3-->Line_33 $$ hanako_point += 3[ FD ]
Line_6 $$ int hanako_point = 0-->Line_33 $$ hanako_point += 3[ FD ]
Line_32 $$ if (tarou.length < hanako.length) -->Line_35 $$ hanako_point += 1[ CD ]
Line_26 $$ hanako_point += 3-->Line_35 $$ hanako_point += 1[ FD ]
Line_33 $$ hanako_point += 3-->Line_35 $$ hanako_point += 1[ FD ]
Line_35 $$ hanako_point += 1-->Line_35 $$ hanako_point += 1[ FD ]
Line_6 $$ int hanako_point = 0-->Line_35 $$ hanako_point += 1[ FD ]
Line_32 $$ if (tarou.length < hanako.length) -->Line_36 $$ tarou_point += 1[ CD ]
Line_28 $$ tarou_point += 3-->Line_36 $$ tarou_point += 1[ FD ]
Line_31 $$ tarou_point += 3-->Line_36 $$ tarou_point += 1[ FD ]
Line_36 $$ tarou_point += 1-->Line_36 $$ tarou_point += 1[ FD ]
Line_5 $$ int tarou_point = 0-->Line_36 $$ tarou_point += 1[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_40 $$ System.out.println(tarou_point + " " + hanako_point)[ CD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ for (int i = 0; i < n; i++) -->Line_7 $$ for (int i = 0; i < n; i++) [ FD ]
Line_11 $$ int flag = 2-->Line_25 $$ if (flag == 0) [ FD ]
Line_11 $$ int flag = 2-->Line_27 $$ if (flag == 1) [ FD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_16 $$ for (int l = 0; l < length; l++) [ FD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_16 $$ for (int l = 0; l < length; l++) [ FD ]
Line_16 $$ for (int l = 0; l < length; l++) -->Line_16 $$ for (int l = 0; l < length; l++) [ FD ]
