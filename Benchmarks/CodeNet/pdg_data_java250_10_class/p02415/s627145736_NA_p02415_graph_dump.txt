Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner scan = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ char c[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String ch, charc[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ Pattern p = Pattern.compile("[a-zA-Z]")[ CD ]
Line_6 $$ Pattern p = Pattern.compile("[a-zA-Z]")-->Line_6 $$ Pattern p = Pattern.compile("[a-zA-Z]")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ Matcher m[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ ch = scan.nextLine()[ CD ]
Line_5 $$ String ch, charc-->Line_8 $$ ch = scan.nextLine()[ FD ]
Line_8 $$ ch = scan.nextLine()-->Line_8 $$ ch = scan.nextLine()[ FD ]
Line_8 $$ ch = scan.nextLine()-->Line_8 $$ ch = scan.nextLine()[ CD ]
Line_3 $$ Scanner scan = new Scanner(System.in)-->Line_8 $$ ch = scan.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ StringBuilder sb = new StringBuilder(ch)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ CD ]
Line_5 $$ String ch, charc-->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ FD ]
Line_8 $$ ch = scan.nextLine()-->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ CD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ CD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_11 $$ c = ch.charAt(i)[ CD ]
Line_11 $$ c = ch.charAt(i)-->Line_11 $$ c = ch.charAt(i)[ FD ]
Line_4 $$ char c-->Line_11 $$ c = ch.charAt(i)[ FD ]
Line_11 $$ c = ch.charAt(i)-->Line_11 $$ c = ch.charAt(i)[ CD ]
Line_5 $$ String ch, charc-->Line_11 $$ c = ch.charAt(i)[ FD ]
Line_8 $$ ch = scan.nextLine()-->Line_11 $$ c = ch.charAt(i)[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_11 $$ c = ch.charAt(i)[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_12 $$ charc = String.valueOf(c)[ CD ]
Line_12 $$ charc = String.valueOf(c)-->Line_12 $$ charc = String.valueOf(c)[ FD ]
Line_5 $$ String ch, charc-->Line_12 $$ charc = String.valueOf(c)[ FD ]
Line_12 $$ charc = String.valueOf(c)-->Line_12 $$ charc = String.valueOf(c)[ CD ]
Line_11 $$ c = ch.charAt(i)-->Line_12 $$ charc = String.valueOf(c)[ FD ]
Line_4 $$ char c-->Line_12 $$ charc = String.valueOf(c)[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_13 $$ m = p.matcher(charc)[ CD ]
Line_13 $$ m = p.matcher(charc)-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_7 $$ Matcher m-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_13 $$ m = p.matcher(charc)-->Line_13 $$ m = p.matcher(charc)[ CD ]
Line_6 $$ Pattern p = Pattern.compile("[a-zA-Z]")-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_12 $$ charc = String.valueOf(c)-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_5 $$ String ch, charc-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_14 $$ if (m.find()) [ CD ]
Line_13 $$ m = p.matcher(charc)-->Line_14 $$ if (m.find()) [ FD ]
Line_7 $$ Matcher m-->Line_14 $$ if (m.find()) [ FD ]
Line_14 $$ if (m.find()) -->Line_14 $$ if (m.find()) [ CD ]
Line_13 $$ m = p.matcher(charc)-->Line_14 $$ if (m.find()) [ FD ]
Line_7 $$ Matcher m-->Line_14 $$ if (m.find()) [ FD ]
Line_14 $$ if (m.find()) -->Line_15 $$ if (Character.isUpperCase(c)) [ CD ]
Line_11 $$ c = ch.charAt(i)-->Line_15 $$ if (Character.isUpperCase(c)) [ FD ]
Line_4 $$ char c-->Line_15 $$ if (Character.isUpperCase(c)) [ FD ]
Line_15 $$ if (Character.isUpperCase(c)) -->Line_15 $$ if (Character.isUpperCase(c)) [ CD ]
Line_11 $$ c = ch.charAt(i)-->Line_15 $$ if (Character.isUpperCase(c)) [ FD ]
Line_4 $$ char c-->Line_15 $$ if (Character.isUpperCase(c)) [ FD ]
Line_15 $$ if (Character.isUpperCase(c)) -->Line_16 $$ charc = charc.toLowerCase()[ CD ]
Line_12 $$ charc = String.valueOf(c)-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_5 $$ String ch, charc-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_16 $$ charc = charc.toLowerCase()[ CD ]
Line_12 $$ charc = String.valueOf(c)-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_5 $$ String ch, charc-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_15 $$ if (Character.isUpperCase(c)) -->Line_18 $$ charc = charc.toUpperCase()[ CD ]
Line_12 $$ charc = String.valueOf(c)-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_5 $$ String ch, charc-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_18 $$ charc = charc.toUpperCase()[ CD ]
Line_12 $$ charc = String.valueOf(c)-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_5 $$ String ch, charc-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_14 $$ if (m.find()) -->Line_20 $$ char cc[] = charc.toCharArray()[ CD ]
Line_20 $$ char cc[] = charc.toCharArray()-->Line_20 $$ char cc[] = charc.toCharArray()[ CD ]
Line_12 $$ charc = String.valueOf(c)-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_5 $$ String ch, charc-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_14 $$ if (m.find()) -->Line_21 $$ sb.setCharAt(i, cc[0])[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder(ch)-->Line_21 $$ sb.setCharAt(i, cc[0])[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_21 $$ sb.setCharAt(i, cc[0])[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_24 $$ System.out.println(sb)[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder(ch)-->Line_24 $$ System.out.println(sb)[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_10 $$ for (int i = 0; i < ch.length(); i++) [ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_11 $$ c = ch.charAt(i)[ FD ]
Line_11 $$ c = ch.charAt(i)-->Line_12 $$ charc = String.valueOf(c)[ FD ]
Line_12 $$ charc = String.valueOf(c)-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_13 $$ m = p.matcher(charc)[ FD ]
Line_13 $$ m = p.matcher(charc)-->Line_14 $$ if (m.find()) [ FD ]
Line_13 $$ m = p.matcher(charc)-->Line_14 $$ if (m.find()) [ FD ]
Line_11 $$ c = ch.charAt(i)-->Line_15 $$ if (Character.isUpperCase(c)) [ FD ]
Line_11 $$ c = ch.charAt(i)-->Line_15 $$ if (Character.isUpperCase(c)) [ FD ]
Line_12 $$ charc = String.valueOf(c)-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_16 $$ charc = charc.toLowerCase()[ FD ]
Line_12 $$ charc = String.valueOf(c)-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_18 $$ charc = charc.toUpperCase()[ FD ]
Line_12 $$ charc = String.valueOf(c)-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_16 $$ charc = charc.toLowerCase()-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_18 $$ charc = charc.toUpperCase()-->Line_20 $$ char cc[] = charc.toCharArray()[ FD ]
Line_10 $$ for (int i = 0; i < ch.length(); i++) -->Line_21 $$ sb.setCharAt(i, cc[0])[ FD ]
