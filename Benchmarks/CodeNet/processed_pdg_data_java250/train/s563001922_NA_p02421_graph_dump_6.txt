Line_10 $$ if (card[0].compareToIgnoreCase(card[1]) < 0) -->Line_11 $$ h += 3[ CD ]
Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) -->Line_9 $$ h++[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ String[] card = br.readLine().split(" ")[ CD ]
Line_11 $$ h += 3-->Line_9 $$ h++[ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int t = 0, h = 0-->Line_12 $$ t += 3[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ String[] card = br.readLine().split(" ")[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ System.out.println(t + " " + h)[ CD ]
Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) -->Line_9 $$ t++[ CD ]
Line_4 $$ int t = 0, h = 0-->Line_9 $$ t++[ FD ]
Line_12 $$ t += 3-->Line_9 $$ t++[ FD ]
Line_4 $$ int t = 0, h = 0-->Line_11 $$ h += 3[ FD ]
Line_4 $$ int t = 0, h = 0-->Line_9 $$ h++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_10 $$ if (card[0].compareToIgnoreCase(card[1]) < 0) -->Line_12 $$ t += 3[ CD ]
Line_8 $$ if (card[0].compareToIgnoreCase(card[1]) == 0) -->Line_10 $$ if (card[0].compareToIgnoreCase(card[1]) < 0) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int t = 0, h = 0[ CD ]
