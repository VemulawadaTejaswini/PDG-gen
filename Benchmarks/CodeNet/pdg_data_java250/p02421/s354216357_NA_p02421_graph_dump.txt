Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int card = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int card = Integer.parseInt(br.readLine())-->Line_4 $$ int card = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int card = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ String[] str[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ int t = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_7 $$ int h = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_8 $$ for (int i = 0; i < card; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int card = Integer.parseInt(br.readLine())-->Line_8 $$ for (int i = 0; i < card; i++) [ FD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_8 $$ for (int i = 0; i < card; i++) [ CD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_8 $$ for (int i = 0; i < card; i++) [ CD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_8 $$ for (int i = 0; i < card; i++) [ FD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_9 $$ str = br.readLine().split(" ")[ CD ]
Line_9 $$ str = br.readLine().split(" ")-->Line_9 $$ str = br.readLine().split(" ")[ FD ]
Line_5 $$ String[] str-->Line_9 $$ str = br.readLine().split(" ")[ FD ]
Line_9 $$ str = br.readLine().split(" ")-->Line_9 $$ str = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ str = br.readLine().split(" ")[ FD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_10 $$ String tarou = str[0][ CD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_11 $$ String hanako = str[1][ CD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_12 $$ int judge = tarou.compareTo(hanako)[ CD ]
Line_12 $$ int judge = tarou.compareTo(hanako)-->Line_12 $$ int judge = tarou.compareTo(hanako)[ CD ]
Line_10 $$ String tarou = str[0]-->Line_12 $$ int judge = tarou.compareTo(hanako)[ FD ]
Line_11 $$ String hanako = str[1]-->Line_12 $$ int judge = tarou.compareTo(hanako)[ FD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_13 $$ if (judge < 0) [ CD ]
Line_12 $$ int judge = tarou.compareTo(hanako)-->Line_13 $$ if (judge < 0) [ FD ]
Line_13 $$ if (judge < 0) -->Line_14 $$ h += 3[ CD ]
Line_14 $$ h += 3-->Line_14 $$ h += 3[ FD ]
Line_7 $$ int h = 0-->Line_14 $$ h += 3[ FD ]
Line_13 $$ if (judge < 0) -->Line_15 $$ if (judge > 0) [ CD ]
Line_12 $$ int judge = tarou.compareTo(hanako)-->Line_15 $$ if (judge > 0) [ FD ]
Line_15 $$ if (judge > 0) -->Line_16 $$ t += 3[ CD ]
Line_16 $$ t += 3-->Line_16 $$ t += 3[ FD ]
Line_6 $$ int t = 0-->Line_16 $$ t += 3[ FD ]
Line_15 $$ if (judge > 0) -->Line_18 $$ h += 1[ CD ]
Line_14 $$ h += 3-->Line_18 $$ h += 1[ FD ]
Line_18 $$ h += 1-->Line_18 $$ h += 1[ FD ]
Line_7 $$ int h = 0-->Line_18 $$ h += 1[ FD ]
Line_15 $$ if (judge > 0) -->Line_19 $$ t += 1[ CD ]
Line_16 $$ t += 3-->Line_19 $$ t += 1[ FD ]
Line_19 $$ t += 1-->Line_19 $$ t += 1[ FD ]
Line_6 $$ int t = 0-->Line_19 $$ t += 1[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_22 $$ System.out.println(t + " " + h)[ CD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_8 $$ for (int i = 0; i < card; i++) [ FD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_8 $$ for (int i = 0; i < card; i++) [ FD ]
Line_8 $$ for (int i = 0; i < card; i++) -->Line_8 $$ for (int i = 0; i < card; i++) [ FD ]
Line_10 $$ String tarou = str[0]-->Line_12 $$ int judge = tarou.compareTo(hanako)[ FD ]
Line_11 $$ String hanako = str[1]-->Line_12 $$ int judge = tarou.compareTo(hanako)[ FD ]
Line_12 $$ int judge = tarou.compareTo(hanako)-->Line_13 $$ if (judge < 0) [ FD ]
Line_12 $$ int judge = tarou.compareTo(hanako)-->Line_15 $$ if (judge > 0) [ FD ]
