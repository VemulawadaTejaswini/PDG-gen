Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_5 $$ int t = 0, h = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ int n = Integer.parseInt(br.readLine())-->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_7 $$ String[] a = br.readLine().split(" ")[ CD ]
Line_7 $$ String[] a = br.readLine().split(" ")-->Line_7 $$ String[] a = br.readLine().split(" ")[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ String[] a = br.readLine().split(" ")[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_8 $$ int s = 0[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_9 $$ int l0 = a[0].length()[ CD ]
Line_9 $$ int l0 = a[0].length()-->Line_9 $$ int l0 = a[0].length()[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_10 $$ int l1 = a[1].length()[ CD ]
Line_10 $$ int l1 = a[1].length()-->Line_10 $$ int l1 = a[1].length()[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_11 $$ if (l0 < l1) [ CD ]
Line_9 $$ int l0 = a[0].length()-->Line_11 $$ if (l0 < l1) [ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_11 $$ if (l0 < l1) [ FD ]
Line_11 $$ if (l0 < l1) -->Line_12 $$ s = l0[ CD ]
Line_8 $$ int s = 0-->Line_12 $$ s = l0[ FD ]
Line_12 $$ s = l0-->Line_12 $$ s = l0[ FD ]
Line_9 $$ int l0 = a[0].length()-->Line_12 $$ s = l0[ FD ]
Line_11 $$ if (l0 < l1) -->Line_14 $$ s = l1[ CD ]
Line_8 $$ int s = 0-->Line_14 $$ s = l1[ FD ]
Line_12 $$ s = l0-->Line_14 $$ s = l1[ FD ]
Line_14 $$ s = l1-->Line_14 $$ s = l1[ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_14 $$ s = l1[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_16 $$ boolean even = false[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_17 $$ for (int j = 0; j < s; j++) [ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ int s = 0-->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_12 $$ s = l0-->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_14 $$ s = l1-->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_17 $$ for (int j = 0; j < s; j++) [ CD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_17 $$ for (int j = 0; j < s; j++) [ CD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) [ CD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) [ FD ]
Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) -->Line_19 $$ t += 3[ CD ]
Line_19 $$ t += 3-->Line_19 $$ t += 3[ FD ]
Line_5 $$ int t = 0, h = 0-->Line_19 $$ t += 3[ FD ]
Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) -->Line_20 $$ even = false[ CD ]
Line_20 $$ even = false-->Line_20 $$ even = false[ FD ]
Line_16 $$ boolean even = false-->Line_20 $$ even = false[ FD ]
Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) -->Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) [ CD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) [ FD ]
Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) -->Line_23 $$ h += 3[ CD ]
Line_23 $$ h += 3-->Line_23 $$ h += 3[ FD ]
Line_5 $$ int t = 0, h = 0-->Line_23 $$ h += 3[ FD ]
Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) -->Line_24 $$ even = false[ CD ]
Line_20 $$ even = false-->Line_24 $$ even = false[ FD ]
Line_24 $$ even = false-->Line_24 $$ even = false[ FD ]
Line_16 $$ boolean even = false-->Line_24 $$ even = false[ FD ]
Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) -->Line_27 $$ even = true[ CD ]
Line_20 $$ even = false-->Line_27 $$ even = true[ FD ]
Line_24 $$ even = false-->Line_27 $$ even = true[ FD ]
Line_27 $$ even = true-->Line_27 $$ even = true[ FD ]
Line_16 $$ boolean even = false-->Line_27 $$ even = true[ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_30 $$ if (even) [ CD ]
Line_30 $$ if (even) -->Line_31 $$ if (l0 > l1) [ CD ]
Line_9 $$ int l0 = a[0].length()-->Line_31 $$ if (l0 > l1) [ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_31 $$ if (l0 > l1) [ FD ]
Line_31 $$ if (l0 > l1) -->Line_32 $$ t += 3[ CD ]
Line_19 $$ t += 3-->Line_32 $$ t += 3[ FD ]
Line_32 $$ t += 3-->Line_32 $$ t += 3[ FD ]
Line_5 $$ int t = 0, h = 0-->Line_32 $$ t += 3[ FD ]
Line_31 $$ if (l0 > l1) -->Line_33 $$ if (l0 < l1) [ CD ]
Line_9 $$ int l0 = a[0].length()-->Line_33 $$ if (l0 < l1) [ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_33 $$ if (l0 < l1) [ FD ]
Line_33 $$ if (l0 < l1) -->Line_34 $$ h += 3[ CD ]
Line_23 $$ h += 3-->Line_34 $$ h += 3[ FD ]
Line_34 $$ h += 3-->Line_34 $$ h += 3[ FD ]
Line_5 $$ int t = 0, h = 0-->Line_34 $$ h += 3[ FD ]
Line_33 $$ if (l0 < l1) -->Line_36 $$ t += 1[ CD ]
Line_19 $$ t += 3-->Line_36 $$ t += 1[ FD ]
Line_32 $$ t += 3-->Line_36 $$ t += 1[ FD ]
Line_36 $$ t += 1-->Line_36 $$ t += 1[ FD ]
Line_5 $$ int t = 0, h = 0-->Line_36 $$ t += 1[ FD ]
Line_33 $$ if (l0 < l1) -->Line_37 $$ h += 1[ CD ]
Line_23 $$ h += 3-->Line_37 $$ h += 1[ FD ]
Line_34 $$ h += 3-->Line_37 $$ h += 1[ FD ]
Line_37 $$ h += 1-->Line_37 $$ h += 1[ FD ]
Line_5 $$ int t = 0, h = 0-->Line_37 $$ h += 1[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_41 $$ System.out.println(t + " " + h)[ CD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_6 $$ for (int i = 0; i < n; i++) -->Line_6 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ int l0 = a[0].length()-->Line_11 $$ if (l0 < l1) [ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_11 $$ if (l0 < l1) [ FD ]
Line_9 $$ int l0 = a[0].length()-->Line_12 $$ s = l0[ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_14 $$ s = l1[ FD ]
Line_9 $$ int l0 = a[0].length()-->Line_31 $$ if (l0 > l1) [ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_31 $$ if (l0 > l1) [ FD ]
Line_9 $$ int l0 = a[0].length()-->Line_33 $$ if (l0 < l1) [ FD ]
Line_10 $$ int l1 = a[1].length()-->Line_33 $$ if (l0 < l1) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_17 $$ for (int j = 0; j < s; j++) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_18 $$ if ((int) a[0].charAt(j) > (int) a[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) [ FD ]
Line_17 $$ for (int j = 0; j < s; j++) -->Line_22 $$ if ((int) a[0].charAt(j) < (int) a[1].charAt(j)) [ FD ]
