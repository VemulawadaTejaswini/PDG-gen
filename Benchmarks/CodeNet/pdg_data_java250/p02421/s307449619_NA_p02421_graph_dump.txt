Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int card = Integer.parseInt(br.readLine())[ CD ]
Line_4 $$ int card = Integer.parseInt(br.readLine())-->Line_4 $$ int card = Integer.parseInt(br.readLine())[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ int card = Integer.parseInt(br.readLine())[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int turn = card[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int win = 3[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ int drow = 1[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_8 $$ int taropoint = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_9 $$ int hanakopoint = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_10 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_5 $$ int turn = card-->Line_10 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_10 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_10 $$ for (int i = 0; i < turn; i++) [ CD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_10 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_11 $$ String str = null[ CD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_12 $$ str = br.readLine()[ CD ]
Line_11 $$ String str = null-->Line_12 $$ str = br.readLine()[ FD ]
Line_12 $$ str = br.readLine()-->Line_12 $$ str = br.readLine()[ FD ]
Line_12 $$ str = br.readLine()-->Line_12 $$ str = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_12 $$ str = br.readLine()[ FD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_13 $$ String[] s = str.split(" ")[ CD ]
Line_13 $$ String[] s = str.split(" ")-->Line_13 $$ String[] s = str.split(" ")[ CD ]
Line_11 $$ String str = null-->Line_13 $$ String[] s = str.split(" ")[ FD ]
Line_12 $$ str = br.readLine()-->Line_13 $$ String[] s = str.split(" ")[ FD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_14 $$ String taro = (s[0])[ CD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_15 $$ String hanako = (s[1])[ CD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_16 $$ if (taro.compareTo(hanako) == 0) [ CD ]
Line_14 $$ String taro = (s[0])-->Line_16 $$ if (taro.compareTo(hanako) == 0) [ FD ]
Line_15 $$ String hanako = (s[1])-->Line_16 $$ if (taro.compareTo(hanako) == 0) [ FD ]
Line_16 $$ if (taro.compareTo(hanako) == 0) -->Line_17 $$ taropoint += drow[ CD ]
Line_17 $$ taropoint += drow-->Line_17 $$ taropoint += drow[ FD ]
Line_8 $$ int taropoint = 0-->Line_17 $$ taropoint += drow[ FD ]
Line_7 $$ int drow = 1-->Line_17 $$ taropoint += drow[ FD ]
Line_16 $$ if (taro.compareTo(hanako) == 0) -->Line_18 $$ hanakopoint += drow[ CD ]
Line_18 $$ hanakopoint += drow-->Line_18 $$ hanakopoint += drow[ FD ]
Line_9 $$ int hanakopoint = 0-->Line_18 $$ hanakopoint += drow[ FD ]
Line_7 $$ int drow = 1-->Line_18 $$ hanakopoint += drow[ FD ]
Line_16 $$ if (taro.compareTo(hanako) == 0) -->Line_19 $$ if (taro.compareTo(hanako) < 0) [ CD ]
Line_14 $$ String taro = (s[0])-->Line_19 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_15 $$ String hanako = (s[1])-->Line_19 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_19 $$ if (taro.compareTo(hanako) < 0) -->Line_20 $$ hanakopoint += win[ CD ]
Line_18 $$ hanakopoint += drow-->Line_20 $$ hanakopoint += win[ FD ]
Line_20 $$ hanakopoint += win-->Line_20 $$ hanakopoint += win[ FD ]
Line_9 $$ int hanakopoint = 0-->Line_20 $$ hanakopoint += win[ FD ]
Line_6 $$ int win = 3-->Line_20 $$ hanakopoint += win[ FD ]
Line_19 $$ if (taro.compareTo(hanako) < 0) -->Line_22 $$ taropoint += win[ CD ]
Line_17 $$ taropoint += drow-->Line_22 $$ taropoint += win[ FD ]
Line_22 $$ taropoint += win-->Line_22 $$ taropoint += win[ FD ]
Line_8 $$ int taropoint = 0-->Line_22 $$ taropoint += win[ FD ]
Line_6 $$ int win = 3-->Line_22 $$ taropoint += win[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_25 $$ System.out.println(taropoint + " " + hanakopoint)[ CD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_10 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_10 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_10 $$ for (int i = 0; i < turn; i++) -->Line_10 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_11 $$ String str = null-->Line_13 $$ String[] s = str.split(" ")[ FD ]
Line_12 $$ str = br.readLine()-->Line_13 $$ String[] s = str.split(" ")[ FD ]
Line_14 $$ String taro = (s[0])-->Line_16 $$ if (taro.compareTo(hanako) == 0) [ FD ]
Line_15 $$ String hanako = (s[1])-->Line_16 $$ if (taro.compareTo(hanako) == 0) [ FD ]
Line_14 $$ String taro = (s[0])-->Line_19 $$ if (taro.compareTo(hanako) < 0) [ FD ]
Line_15 $$ String hanako = (s[1])-->Line_19 $$ if (taro.compareTo(hanako) < 0) [ FD ]
