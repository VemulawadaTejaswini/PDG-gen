Line_0 $$ Entry-->Line_1 $$ class Main [ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ int n = sc.nextInt(), sum = 0[ CD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_4 $$ int n = sc.nextInt(), sum = 0[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ int n = sc.nextInt(), sum = 0[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double ave, tmpsum = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ while (n != 0) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_6 $$ while (n != 0) [ FD ]
Line_6 $$ while (n != 0) -->Line_7 $$ int[] s = new int[n][ CD ]
Line_6 $$ while (n != 0) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_6 $$ while (n != 0) -->Line_6 $$ while (n != 0) [ CD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_9 $$ s[i] = sc.nextInt()[ CD ]
Line_9 $$ s[i] = sc.nextInt()-->Line_9 $$ s[i] = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ s[i] = sc.nextInt()[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_10 $$ sum += s[i][ CD ]
Line_10 $$ sum += s[i]-->Line_10 $$ sum += s[i][ FD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_10 $$ sum += s[i][ FD ]
Line_6 $$ while (n != 0) -->Line_12 $$ ave = (double) sum / n[ CD ]
Line_12 $$ ave = (double) sum / n-->Line_12 $$ ave = (double) sum / n[ FD ]
Line_5 $$ double ave, tmpsum = 0-->Line_12 $$ ave = (double) sum / n[ FD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_12 $$ ave = (double) sum / n[ FD ]
Line_6 $$ while (n != 0) -->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ CD ]
Line_6 $$ while (n != 0) -->Line_6 $$ while (n != 0) [ CD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ CD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ tmpsum += (s[i] - ave) * (s[i] - ave)[ CD ]
Line_13 $$ tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_5 $$ double ave, tmpsum = 0-->Line_13 $$ tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_6 $$ while (n != 0) -->Line_14 $$ ave = tmpsum / n[ CD ]
Line_12 $$ ave = (double) sum / n-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_14 $$ ave = tmpsum / n-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_5 $$ double ave, tmpsum = 0-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_13 $$ tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_5 $$ double ave, tmpsum = 0-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_6 $$ while (n != 0) -->Line_15 $$ System.out.println(Math.sqrt(ave))[ CD ]
Line_12 $$ ave = (double) sum / n-->Line_15 $$ System.out.println(Math.sqrt(ave))[ FD ]
Line_14 $$ ave = tmpsum / n-->Line_15 $$ System.out.println(Math.sqrt(ave))[ FD ]
Line_5 $$ double ave, tmpsum = 0-->Line_15 $$ System.out.println(Math.sqrt(ave))[ FD ]
Line_6 $$ while (n != 0) -->Line_16 $$ sum = 0[ CD ]
Line_10 $$ sum += s[i]-->Line_16 $$ sum = 0[ FD ]
Line_16 $$ sum = 0-->Line_16 $$ sum = 0[ FD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_16 $$ sum = 0[ FD ]
Line_6 $$ while (n != 0) -->Line_17 $$ tmpsum = 0[ CD ]
Line_13 $$ tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_17 $$ tmpsum = 0[ FD ]
Line_17 $$ tmpsum = 0-->Line_17 $$ tmpsum = 0[ FD ]
Line_5 $$ double ave, tmpsum = 0-->Line_17 $$ tmpsum = 0[ FD ]
Line_6 $$ while (n != 0) -->Line_18 $$ n = sc.nextInt()[ CD ]
Line_18 $$ n = sc.nextInt()-->Line_18 $$ n = sc.nextInt()[ FD ]
Line_4 $$ int n = sc.nextInt(), sum = 0-->Line_18 $$ n = sc.nextInt()[ FD ]
Line_18 $$ n = sc.nextInt()-->Line_18 $$ n = sc.nextInt()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_18 $$ n = sc.nextInt()[ FD ]
Line_18 $$ n = sc.nextInt()-->Line_6 $$ while (n != 0) [ FD ]
Line_18 $$ n = sc.nextInt()-->Line_6 $$ while (n != 0) [ FD ]
Line_18 $$ n = sc.nextInt()-->Line_12 $$ ave = (double) sum / n[ FD ]
Line_17 $$ tmpsum = 0-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_18 $$ n = sc.nextInt()-->Line_14 $$ ave = tmpsum / n[ FD ]
Line_12 $$ ave = (double) sum / n-->Line_15 $$ System.out.println(Math.sqrt(ave))[ FD ]
Line_14 $$ ave = tmpsum / n-->Line_15 $$ System.out.println(Math.sqrt(ave))[ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_8 $$ for (int i = 0; i < n; i++) -->Line_8 $$ for (int i = 0; i < n; i++) [ FD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)-->Line_13 $$ for (int i = 0; i < n; i++) tmpsum += (s[i] - ave) * (s[i] - ave)[ FD ]
