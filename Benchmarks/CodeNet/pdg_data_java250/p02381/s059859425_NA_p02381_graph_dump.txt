Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_2 $$ public static void main(String[] args) throws Exception [ CD ]
Line_4 $$ while (true) -->Line_5 $$ String line = br.readLine()[ CD ]
Line_5 $$ String line = br.readLine()-->Line_5 $$ String line = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String line = br.readLine()[ FD ]
Line_4 $$ while (true) -->Line_6 $$ if ("0".equals(line))[ CD ]
Line_5 $$ String line = br.readLine()-->Line_6 $$ if ("0".equals(line))[ FD ]
Line_6 $$ if ("0".equals(line))-->Line_6 $$ if ("0".equals(line))[ CD ]
Line_5 $$ String line = br.readLine()-->Line_6 $$ if ("0".equals(line))[ FD ]
Line_4 $$ while (true) -->Line_8 $$ int n = Integer.parseInt(line)[ CD ]
Line_8 $$ int n = Integer.parseInt(line)-->Line_8 $$ int n = Integer.parseInt(line)[ CD ]
Line_5 $$ String line = br.readLine()-->Line_8 $$ int n = Integer.parseInt(line)[ FD ]
Line_4 $$ while (true) -->Line_9 $$ line = br.readLine()[ CD ]
Line_5 $$ String line = br.readLine()-->Line_9 $$ line = br.readLine()[ FD ]
Line_9 $$ line = br.readLine()-->Line_9 $$ line = br.readLine()[ FD ]
Line_9 $$ line = br.readLine()-->Line_9 $$ line = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_9 $$ line = br.readLine()[ FD ]
Line_4 $$ while (true) -->Line_10 $$ String[] scores = line.split(" ")[ CD ]
Line_10 $$ String[] scores = line.split(" ")-->Line_10 $$ String[] scores = line.split(" ")[ CD ]
Line_5 $$ String line = br.readLine()-->Line_10 $$ String[] scores = line.split(" ")[ FD ]
Line_9 $$ line = br.readLine()-->Line_10 $$ String[] scores = line.split(" ")[ FD ]
Line_4 $$ while (true) -->Line_11 $$ double sum = 0[ CD ]
Line_11 $$ double sum = 0-->Line_13 $$ sum += Integer.parseInt(score)[ FD ]
Line_13 $$ sum += Integer.parseInt(score)-->Line_13 $$ sum += Integer.parseInt(score)[ FD ]
Line_13 $$ sum += Integer.parseInt(score)-->Line_13 $$ sum += Integer.parseInt(score)[ CD ]
Line_12 $$ for (String score : scores) -->Line_13 $$ sum += Integer.parseInt(score)[ FD ]
Line_4 $$ while (true) -->Line_15 $$ double avg = sum / n[ CD ]
Line_4 $$ while (true) -->Line_16 $$ sum = 0[ CD ]
Line_11 $$ double sum = 0-->Line_16 $$ sum = 0[ FD ]
Line_13 $$ sum += Integer.parseInt(score)-->Line_16 $$ sum = 0[ FD ]
Line_16 $$ sum = 0-->Line_16 $$ sum = 0[ FD ]
Line_11 $$ double sum = 0-->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ FD ]
Line_13 $$ sum += Integer.parseInt(score)-->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ FD ]
Line_16 $$ sum = 0-->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ FD ]
Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)-->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ FD ]
Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)-->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ CD ]
Line_12 $$ for (String score : scores) -->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ FD ]
Line_4 $$ while (true) -->Line_20 $$ double a2 = sum / n[ CD ]
Line_4 $$ while (true) -->Line_21 $$ System.out.printf("%.5f%n", Math.sqrt(a2))[ CD ]
Line_20 $$ double a2 = sum / n-->Line_21 $$ System.out.printf("%.5f%n", Math.sqrt(a2))[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_23 $$ if (br != null) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_23 $$ if (br != null) [ FD ]
Line_23 $$ if (br != null) -->Line_24 $$ br.close()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_24 $$ br.close()[ FD ]
Line_23 $$ if (br != null) -->Line_25 $$ br = null[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_25 $$ br = null[ FD ]
Line_25 $$ br = null-->Line_25 $$ br = null[ FD ]
Line_5 $$ String line = br.readLine()-->Line_6 $$ if ("0".equals(line))[ FD ]
Line_9 $$ line = br.readLine()-->Line_6 $$ if ("0".equals(line))[ FD ]
Line_5 $$ String line = br.readLine()-->Line_6 $$ if ("0".equals(line))[ FD ]
Line_9 $$ line = br.readLine()-->Line_6 $$ if ("0".equals(line))[ FD ]
Line_5 $$ String line = br.readLine()-->Line_8 $$ int n = Integer.parseInt(line)[ FD ]
Line_9 $$ line = br.readLine()-->Line_8 $$ int n = Integer.parseInt(line)[ FD ]
Line_5 $$ String line = br.readLine()-->Line_10 $$ String[] scores = line.split(" ")[ FD ]
Line_9 $$ line = br.readLine()-->Line_10 $$ String[] scores = line.split(" ")[ FD ]
Line_12 $$ for (String score : scores) -->Line_13 $$ sum += Integer.parseInt(score)[ FD ]
Line_12 $$ for (String score : scores) -->Line_18 $$ sum += Math.pow(Integer.parseInt(score) - avg, 2)[ FD ]
Line_20 $$ double a2 = sum / n-->Line_21 $$ System.out.printf("%.5f%n", Math.sqrt(a2))[ FD ]
