Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String W = sc.nextLine()[ CD ]
Line_4 $$ String W = sc.nextLine()-->Line_4 $$ String W = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String W = sc.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ String T = ""[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String end = "END_OF_TEXT"[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ while (!(T.equals(end))) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_8 $$ while (!(T.equals(end))) -->Line_8 $$ while (!(T.equals(end))) [ CD ]
Line_5 $$ String T = ""-->Line_8 $$ while (!(T.equals(end))) [ FD ]
Line_6 $$ String end = "END_OF_TEXT"-->Line_8 $$ while (!(T.equals(end))) [ FD ]
Line_8 $$ while (!(T.equals(end))) -->Line_9 $$ T = sc.next()[ CD ]
Line_9 $$ T = sc.next()-->Line_9 $$ T = sc.next()[ FD ]
Line_5 $$ String T = ""-->Line_9 $$ T = sc.next()[ FD ]
Line_9 $$ T = sc.next()-->Line_9 $$ T = sc.next()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_9 $$ T = sc.next()[ FD ]
Line_8 $$ while (!(T.equals(end))) -->Line_10 $$ Pattern ptn = Pattern.compile(W, Pattern.CASE_INSENSITIVE)[ CD ]
Line_10 $$ Pattern ptn = Pattern.compile(W, Pattern.CASE_INSENSITIVE)-->Line_10 $$ Pattern ptn = Pattern.compile(W, Pattern.CASE_INSENSITIVE)[ CD ]
Line_4 $$ String W = sc.nextLine()-->Line_10 $$ Pattern ptn = Pattern.compile(W, Pattern.CASE_INSENSITIVE)[ FD ]
Line_8 $$ while (!(T.equals(end))) -->Line_11 $$ Matcher mc = ptn.matcher(T)[ CD ]
Line_11 $$ Matcher mc = ptn.matcher(T)-->Line_11 $$ Matcher mc = ptn.matcher(T)[ CD ]
Line_10 $$ Pattern ptn = Pattern.compile(W, Pattern.CASE_INSENSITIVE)-->Line_11 $$ Matcher mc = ptn.matcher(T)[ FD ]
Line_9 $$ T = sc.next()-->Line_11 $$ Matcher mc = ptn.matcher(T)[ FD ]
Line_5 $$ String T = ""-->Line_11 $$ Matcher mc = ptn.matcher(T)[ FD ]
Line_8 $$ while (!(T.equals(end))) -->Line_12 $$ if (mc.matches()) [ CD ]
Line_11 $$ Matcher mc = ptn.matcher(T)-->Line_12 $$ if (mc.matches()) [ FD ]
Line_12 $$ if (mc.matches()) -->Line_12 $$ if (mc.matches()) [ CD ]
Line_11 $$ Matcher mc = ptn.matcher(T)-->Line_12 $$ if (mc.matches()) [ FD ]
Line_12 $$ if (mc.matches()) -->Line_13 $$ ans++[ CD ]
Line_7 $$ int ans = 0-->Line_13 $$ ans++[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_16 $$ System.out.println(ans)[ CD ]
Line_7 $$ int ans = 0-->Line_16 $$ System.out.println(ans)[ FD ]
Line_9 $$ T = sc.next()-->Line_8 $$ while (!(T.equals(end))) [ FD ]
Line_10 $$ Pattern ptn = Pattern.compile(W, Pattern.CASE_INSENSITIVE)-->Line_11 $$ Matcher mc = ptn.matcher(T)[ FD ]
Line_9 $$ T = sc.next()-->Line_11 $$ Matcher mc = ptn.matcher(T)[ FD ]
Line_11 $$ Matcher mc = ptn.matcher(T)-->Line_12 $$ if (mc.matches()) [ FD ]
Line_11 $$ Matcher mc = ptn.matcher(T)-->Line_12 $$ if (mc.matches()) [ FD ]
