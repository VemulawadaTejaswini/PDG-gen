Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String W = br.readLine().toLowerCase()[ CD ]
Line_4 $$ String W = br.readLine().toLowerCase()-->Line_4 $$ String W = br.readLine().toLowerCase()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String W = br.readLine().toLowerCase()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int ans = 0[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String line[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ CD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ FD ]
Line_6 $$ String line-->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ FD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ FD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_8 $$ line = line.toLowerCase()[ CD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_8 $$ line = line.toLowerCase()-->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_6 $$ String line-->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_8 $$ line = line.toLowerCase()-->Line_8 $$ line = line.toLowerCase()[ CD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_8 $$ line = line.toLowerCase()-->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_6 $$ String line-->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_9 $$ StringTokenizer st = new StringTokenizer(line, " ")[ CD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_10 $$ while (st.hasMoreTokens()) [ CD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) [ CD ]
Line_10 $$ while (st.hasMoreTokens()) -->Line_10 $$ while (st.hasMoreTokens()) [ CD ]
Line_9 $$ StringTokenizer st = new StringTokenizer(line, " ")-->Line_10 $$ while (st.hasMoreTokens()) [ FD ]
Line_10 $$ while (st.hasMoreTokens()) -->Line_11 $$ if (st.nextToken().equals(W))[ CD ]
Line_4 $$ String W = br.readLine().toLowerCase()-->Line_11 $$ if (st.nextToken().equals(W))[ FD ]
Line_11 $$ if (st.nextToken().equals(W))-->Line_11 $$ if (st.nextToken().equals(W))[ CD ]
Line_4 $$ String W = br.readLine().toLowerCase()-->Line_11 $$ if (st.nextToken().equals(W))[ FD ]
Line_9 $$ StringTokenizer st = new StringTokenizer(line, " ")-->Line_11 $$ if (st.nextToken().equals(W))[ FD ]
Line_11 $$ if (st.nextToken().equals(W))-->Line_11 $$ ans++[ CD ]
Line_5 $$ int ans = 0-->Line_11 $$ ans++[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ System.out.println(ans)[ CD ]
Line_5 $$ int ans = 0-->Line_14 $$ System.out.println(ans)[ FD ]
Line_7 $$ while (!((line = br.readLine()).equals("END_OF_TEXT"))) -->Line_8 $$ line = line.toLowerCase()[ FD ]
Line_8 $$ line = line.toLowerCase()-->Line_8 $$ line = line.toLowerCase()[ FD ]
