Line_0 $$ Entry-->Line_1 $$ public class Main [ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_4 $$ String line = sc.nextLine()[ CD ]
Line_4 $$ String line = sc.nextLine()-->Line_4 $$ String line = sc.nextLine()[ CD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_4 $$ String line = sc.nextLine()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double r = Double.valueOf(line)[ CD ]
Line_5 $$ double r = Double.valueOf(line)-->Line_5 $$ double r = Double.valueOf(line)[ CD ]
Line_4 $$ String line = sc.nextLine()-->Line_5 $$ double r = Double.valueOf(line)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)[ CD ]
Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)-->Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)[ CD ]
Line_5 $$ double r = Double.valueOf(line)-->Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ BigDecimal p = BigDecimal.valueOf(Math.PI)[ CD ]
Line_7 $$ BigDecimal p = BigDecimal.valueOf(Math.PI)-->Line_7 $$ BigDecimal p = BigDecimal.valueOf(Math.PI)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ BigDecimal two = new BigDecimal("2")[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ BigDecimal m = R.multiply(R)[ CD ]
Line_9 $$ BigDecimal m = R.multiply(R)-->Line_9 $$ BigDecimal m = R.multiply(R)[ CD ]
Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)-->Line_9 $$ BigDecimal m = R.multiply(R)[ FD ]
Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)-->Line_9 $$ BigDecimal m = R.multiply(R)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ BigDecimal M = m.multiply(p)[ CD ]
Line_10 $$ BigDecimal M = m.multiply(p)-->Line_10 $$ BigDecimal M = m.multiply(p)[ CD ]
Line_9 $$ BigDecimal m = R.multiply(R)-->Line_10 $$ BigDecimal M = m.multiply(p)[ FD ]
Line_7 $$ BigDecimal p = BigDecimal.valueOf(Math.PI)-->Line_10 $$ BigDecimal M = m.multiply(p)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ BigDecimal e = R.multiply(two)[ CD ]
Line_11 $$ BigDecimal e = R.multiply(two)-->Line_11 $$ BigDecimal e = R.multiply(two)[ CD ]
Line_6 $$ BigDecimal R = BigDecimal.valueOf(r)-->Line_11 $$ BigDecimal e = R.multiply(two)[ FD ]
Line_8 $$ BigDecimal two = new BigDecimal("2")-->Line_11 $$ BigDecimal e = R.multiply(two)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_12 $$ BigDecimal E = e.multiply(p)[ CD ]
Line_12 $$ BigDecimal E = e.multiply(p)-->Line_12 $$ BigDecimal E = e.multiply(p)[ CD ]
Line_11 $$ BigDecimal e = R.multiply(two)-->Line_12 $$ BigDecimal E = e.multiply(p)[ FD ]
Line_7 $$ BigDecimal p = BigDecimal.valueOf(Math.PI)-->Line_12 $$ BigDecimal E = e.multiply(p)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_13 $$ BigDecimal MM = M.setScale(6, BigDecimal.ROUND_HALF_UP)[ CD ]
Line_13 $$ BigDecimal MM = M.setScale(6, BigDecimal.ROUND_HALF_UP)-->Line_13 $$ BigDecimal MM = M.setScale(6, BigDecimal.ROUND_HALF_UP)[ CD ]
Line_10 $$ BigDecimal M = m.multiply(p)-->Line_13 $$ BigDecimal MM = M.setScale(6, BigDecimal.ROUND_HALF_UP)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_14 $$ BigDecimal EE = E.setScale(6, BigDecimal.ROUND_HALF_UP)[ CD ]
Line_14 $$ BigDecimal EE = E.setScale(6, BigDecimal.ROUND_HALF_UP)-->Line_14 $$ BigDecimal EE = E.setScale(6, BigDecimal.ROUND_HALF_UP)[ CD ]
Line_12 $$ BigDecimal E = e.multiply(p)-->Line_14 $$ BigDecimal EE = E.setScale(6, BigDecimal.ROUND_HALF_UP)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_15 $$ System.out.println(MM + " " + EE)[ CD ]
