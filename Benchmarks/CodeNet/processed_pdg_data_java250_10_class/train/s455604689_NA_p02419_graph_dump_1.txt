Line_5 $$ String str_containing_key = ""-->Line_9 $$ if (str_containing_key.equals("END_OF_TEXT")) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String str_containing_key = ""[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_19 $$ System.out.println(count)[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_6 $$ int count = 0-->Line_19 $$ System.out.println(count)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ String keyword = input.readLine()[ CD ]
Line_7 $$ while (true) -->Line_13 $$ for (int array_spot = 0; array_spot < str_array.length; array_spot++) [ CD ]
Line_7 $$ while (true) -->Line_8 $$ str_containing_key = input.readLine()[ CD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_4 $$ String keyword = input.readLine()[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ int count = 0[ CD ]
Line_7 $$ while (true) -->Line_9 $$ if (str_containing_key.equals("END_OF_TEXT")) [ CD ]
Line_8 $$ str_containing_key = input.readLine()-->Line_9 $$ if (str_containing_key.equals("END_OF_TEXT")) [ FD ]
Line_5 $$ String str_containing_key = ""-->Line_12 $$ String[] str_array = str_containing_key.split(" ")[ FD ]
Line_14 $$ if (str_array[array_spot].equalsIgnoreCase(keyword)) -->Line_15 $$ count++[ CD ]
Line_5 $$ String str_containing_key = ""-->Line_8 $$ str_containing_key = input.readLine()[ FD ]
Line_3 $$ BufferedReader input = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ str_containing_key = input.readLine()[ FD ]
Line_6 $$ int count = 0-->Line_15 $$ count++[ FD ]
Line_8 $$ str_containing_key = input.readLine()-->Line_12 $$ String[] str_array = str_containing_key.split(" ")[ FD ]
Line_7 $$ while (true) -->Line_12 $$ String[] str_array = str_containing_key.split(" ")[ CD ]
Line_13 $$ for (int array_spot = 0; array_spot < str_array.length; array_spot++) -->Line_14 $$ if (str_array[array_spot].equalsIgnoreCase(keyword)) [ CD ]
Line_4 $$ String keyword = input.readLine()-->Line_14 $$ if (str_array[array_spot].equalsIgnoreCase(keyword)) [ FD ]
