Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ while ((str = br.readLine()) != null) [ CD ]
Line_8 $$ for (int i = 0; i < str.length(); i++) -->Line_16 $$ for (int i = 0; i < counts.length; i++) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int counts[] = new int[26][ CD ]
Line_16 $$ for (int i = 0; i < counts.length; i++) -->Line_17 $$ System.out.println((char) (i + ASCII_CODE_BASE) + " : " + counts[i])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ String str[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_6 $$ String str-->Line_8 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_6 $$ String str-->Line_9 $$ char c = str.charAt(i)[ FD ]
Line_7 $$ while ((str = br.readLine()) != null) -->Line_9 $$ char c = str.charAt(i)[ FD ]
Line_9 $$ char c = str.charAt(i)-->Line_11 $$ char lowerChar = Character.toLowerCase(c)[ FD ]
Line_7 $$ while ((str = br.readLine()) != null) -->Line_8 $$ for (int i = 0; i < str.length(); i++) [ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ while ((str = br.readLine()) != null) [ FD ]
Line_7 $$ while ((str = br.readLine()) != null) -->Line_8 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_10 $$ if (Character.isAlphabetic(c)) -->Line_11 $$ char lowerChar = Character.toLowerCase(c)[ CD ]
Line_8 $$ for (int i = 0; i < str.length(); i++) -->Line_9 $$ char c = str.charAt(i)[ CD ]
Line_10 $$ if (Character.isAlphabetic(c)) -->Line_12 $$ counts[lowerChar - ASCII_CODE_BASE]++[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ final char ASCII_CODE_BASE = 97[ CD ]
Line_9 $$ char c = str.charAt(i)-->Line_10 $$ if (Character.isAlphabetic(c)) [ FD ]
Line_6 $$ String str-->Line_7 $$ while ((str = br.readLine()) != null) [ FD ]
Line_8 $$ for (int i = 0; i < str.length(); i++) -->Line_10 $$ if (Character.isAlphabetic(c)) [ CD ]
Line_8 $$ for (int i = 0; i < str.length(); i++) -->Line_9 $$ char c = str.charAt(i)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_16 $$ for (int i = 0; i < counts.length; i++) [ CD ]
