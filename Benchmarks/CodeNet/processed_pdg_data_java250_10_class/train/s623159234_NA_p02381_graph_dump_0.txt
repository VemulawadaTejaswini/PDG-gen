Line_2 $$ public static void main(String[] args) -->Line_4 $$ int i, n[ CD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) [ CD ]
Line_4 $$ int i, n-->Line_7 $$ n = sc.nextInt()[ FD ]
Line_7 $$ n = sc.nextInt()-->Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) [ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_7 $$ n = sc.nextInt()[ FD ]
Line_10 $$ s = sc.nextDouble()-->Line_12 $$ sum2 += s * s[ FD ]
Line_3 $$ Scanner sc = new Scanner(System.in)-->Line_10 $$ s = sc.nextDouble()[ FD ]
Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) -->Line_11 $$ sum += s[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_5 $$ double s, sum, sum2[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ Scanner sc = new Scanner(System.in)[ CD ]
Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) -->Line_12 $$ sum2 += s * s[ CD ]
Line_4 $$ int i, n-->Line_8 $$ if (n == 0)[ FD ]
Line_7 $$ n = sc.nextInt()-->Line_8 $$ if (n == 0)[ FD ]
Line_5 $$ double s, sum, sum2-->Line_10 $$ s = sc.nextDouble()[ FD ]
Line_5 $$ double s, sum, sum2-->Line_12 $$ sum2 += s * s[ FD ]
Line_5 $$ double s, sum, sum2-->Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) [ FD ]
Line_6 $$ while (true) -->Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) [ CD ]
Line_6 $$ while (true) -->Line_8 $$ if (n == 0)[ CD ]
Line_4 $$ int i, n-->Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) [ FD ]
Line_10 $$ s = sc.nextDouble()-->Line_11 $$ sum += s[ FD ]
Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) -->Line_11 $$ sum += s[ FD ]
Line_6 $$ while (true) -->Line_7 $$ n = sc.nextInt()[ CD ]
Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) -->Line_10 $$ s = sc.nextDouble()[ CD ]
Line_6 $$ while (true) -->Line_14 $$ System.out.println(Math.sqrt(sum2 / n - (sum / n) * (sum / n)))[ CD ]
Line_9 $$ for (i = 0, sum = 0, sum2 = 0; i < n; i++) -->Line_12 $$ sum2 += s * s[ FD ]
Line_5 $$ double s, sum, sum2-->Line_11 $$ sum += s[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ while (true) [ CD ]
