Line_6 $$ for (int i = 0; i < input.length(); i++) -->Line_7 $$ char token = input.charAt(i)[ FD ]
Line_7 $$ char token = input.charAt(i)-->Line_8 $$ if (Character.isUpperCase(token)) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ sb.append(Character.toLowerCase(token))[ FD ]
Line_6 $$ for (int i = 0; i < input.length(); i++) -->Line_8 $$ if (Character.isUpperCase(token)) [ CD ]
Line_8 $$ if (Character.isUpperCase(token)) -->Line_9 $$ sb.append(Character.toLowerCase(token))[ CD ]
Line_8 $$ if (Character.isUpperCase(token)) -->Line_11 $$ sb.append(Character.toUpperCase(token))[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(Character.toUpperCase(token))[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ String input = br.readLine()[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String input = br.readLine()[ CD ]
Line_5 $$ String input = br.readLine()-->Line_6 $$ for (int i = 0; i < input.length(); i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_5 $$ String input = br.readLine()-->Line_7 $$ char token = input.charAt(i)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_14 $$ System.out.println(sb)[ CD ]
Line_7 $$ char token = input.charAt(i)-->Line_11 $$ sb.append(Character.toUpperCase(token))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ for (int i = 0; i < input.length(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < input.length(); i++) -->Line_7 $$ char token = input.charAt(i)[ CD ]
Line_7 $$ char token = input.charAt(i)-->Line_9 $$ sb.append(Character.toLowerCase(token))[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_14 $$ System.out.println(sb)[ FD ]
