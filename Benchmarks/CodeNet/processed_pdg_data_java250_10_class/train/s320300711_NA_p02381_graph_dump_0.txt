Line_6 $$ while (true) -->Line_8 $$ if (num == 0) [ CD ]
Line_8 $$ if (num == 0) -->Line_14 $$ double sum2 = 0[ CD ]
Line_4 $$ BufferedReader read = new BufferedReader(in)-->Line_17 $$ String line = read.readLine()[ FD ]
Line_7 $$ num = Integer.parseInt(read.readLine())-->Line_8 $$ if (num == 0) [ FD ]
Line_8 $$ if (num == 0) -->Line_24 $$ ave = sum / num[ CD ]
Line_7 $$ num = Integer.parseInt(read.readLine())-->Line_24 $$ ave = sum / num[ FD ]
Line_13 $$ double ave = 0-->Line_24 $$ ave = sum / num[ FD ]
Line_8 $$ if (num == 0) -->Line_29 $$ deviation = Math.sqrt(a2)[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ int num, count[ CD ]
Line_14 $$ double sum2 = 0-->Line_28 $$ a2 = sum2 / num[ FD ]
Line_5 $$ int num, count-->Line_20 $$ for (count = 0; count < num; count++) [ FD ]
Line_22 $$ sum = sum + x[count]-->Line_24 $$ ave = sum / num[ FD ]
Line_14 $$ double sum2 = 0-->Line_26 $$ sum2 = sum2 + (ave - x[count]) * (ave - x[count])[ FD ]
Line_5 $$ int num, count-->Line_28 $$ a2 = sum2 / num[ FD ]
Line_8 $$ if (num == 0) -->Line_16 $$ double deviation = 0[ CD ]
Line_5 $$ int num, count-->Line_8 $$ if (num == 0) [ FD ]
Line_17 $$ String line = read.readLine()-->Line_18 $$ String[] spli = line.split(" ")[ FD ]
Line_20 $$ for (count = 0; count < num; count++) -->Line_22 $$ sum = sum + x[count][ CD ]
Line_8 $$ if (num == 0) -->Line_12 $$ double sum = 0[ CD ]
Line_7 $$ num = Integer.parseInt(read.readLine())-->Line_25 $$ for (count = 0; count < num; count++) [ FD ]
Line_16 $$ double deviation = 0-->Line_30 $$ System.out.println(deviation)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ InputStreamReader in = new InputStreamReader(System.in)[ CD ]
Line_29 $$ deviation = Math.sqrt(a2)-->Line_30 $$ System.out.println(deviation)[ FD ]
Line_8 $$ if (num == 0) -->Line_28 $$ a2 = sum2 / num[ CD ]
Line_8 $$ if (num == 0) -->Line_25 $$ for (count = 0; count < num; count++) [ CD ]
Line_20 $$ for (count = 0; count < num; count++) -->Line_21 $$ x[count] = Double.parseDouble(spli[count])[ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ while (true) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ BufferedReader read = new BufferedReader(in)[ CD ]
Line_12 $$ double sum = 0-->Line_24 $$ ave = sum / num[ FD ]
Line_8 $$ if (num == 0) -->Line_19 $$ double[] x = new double[num][ CD ]
Line_5 $$ int num, count-->Line_7 $$ num = Integer.parseInt(read.readLine())[ FD ]
Line_7 $$ num = Integer.parseInt(read.readLine())-->Line_28 $$ a2 = sum2 / num[ FD ]
Line_6 $$ while (true) -->Line_7 $$ num = Integer.parseInt(read.readLine())[ CD ]
Line_26 $$ sum2 = sum2 + (ave - x[count]) * (ave - x[count])-->Line_28 $$ a2 = sum2 / num[ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ BufferedReader read = new BufferedReader(in)-->Line_7 $$ num = Integer.parseInt(read.readLine())[ FD ]
Line_8 $$ if (num == 0) -->Line_30 $$ System.out.println(deviation)[ CD ]
Line_12 $$ double sum = 0-->Line_22 $$ sum = sum + x[count][ FD ]
Line_8 $$ if (num == 0) -->Line_13 $$ double ave = 0[ CD ]
Line_15 $$ double a2 = 0-->Line_29 $$ deviation = Math.sqrt(a2)[ FD ]
Line_8 $$ if (num == 0) -->Line_17 $$ String line = read.readLine()[ CD ]
Line_5 $$ int num, count-->Line_24 $$ ave = sum / num[ FD ]
Line_8 $$ if (num == 0) -->Line_20 $$ for (count = 0; count < num; count++) [ CD ]
Line_25 $$ for (count = 0; count < num; count++) -->Line_26 $$ sum2 = sum2 + (ave - x[count]) * (ave - x[count])[ CD ]
Line_28 $$ a2 = sum2 / num-->Line_29 $$ deviation = Math.sqrt(a2)[ FD ]
Line_7 $$ num = Integer.parseInt(read.readLine())-->Line_20 $$ for (count = 0; count < num; count++) [ FD ]
Line_20 $$ for (count = 0; count < num; count++) -->Line_25 $$ for (count = 0; count < num; count++) [ FD ]
Line_8 $$ if (num == 0) -->Line_15 $$ double a2 = 0[ CD ]
Line_16 $$ double deviation = 0-->Line_29 $$ deviation = Math.sqrt(a2)[ FD ]
Line_8 $$ if (num == 0) -->Line_18 $$ String[] spli = line.split(" ")[ CD ]
Line_5 $$ int num, count-->Line_25 $$ for (count = 0; count < num; count++) [ FD ]
Line_15 $$ double a2 = 0-->Line_28 $$ a2 = sum2 / num[ FD ]
