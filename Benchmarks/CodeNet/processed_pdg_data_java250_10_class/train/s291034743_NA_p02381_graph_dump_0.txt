Line_4 $$ while (true) -->Line_14 $$ for (int i = 0; i < n; i++) [ CD ]
Line_4 $$ while (true) -->Line_5 $$ int n = Integer.parseInt(br.readLine())[ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_11 $$ m += s[ CD ]
Line_4 $$ while (true) -->Line_6 $$ if (n == 0)[ CD ]
Line_7 $$ double m = 0, sig = 0-->Line_11 $$ m += s[ FD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_9 $$ for (int i = 0; i < n; i++) [ FD ]
Line_1 $$ class Main -->Line_2 $$ public static void main(String[] arg) throws IOException [ CD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_6 $$ if (n == 0)[ FD ]
Line_7 $$ double m = 0, sig = 0-->Line_13 $$ m = m / n[ FD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_5 $$ int n = Integer.parseInt(br.readLine())[ FD ]
Line_10 $$ double s = Double.parseDouble(div[i])-->Line_11 $$ m += s[ FD ]
Line_4 $$ while (true) -->Line_13 $$ m = m / n[ CD ]
Line_7 $$ double m = 0, sig = 0-->Line_16 $$ sig += (s - m) * (s - m)[ FD ]
Line_4 $$ while (true) -->Line_7 $$ double m = 0, sig = 0[ CD ]
Line_11 $$ m += s-->Line_13 $$ m = m / n[ FD ]
Line_4 $$ while (true) -->Line_8 $$ String[] div = br.readLine().split(" ")[ CD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_15 $$ double s = Double.parseDouble(div[i])[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_4 $$ while (true) [ CD ]
Line_4 $$ while (true) -->Line_18 $$ System.out.println(Math.sqrt(sig / n))[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ String[] div = br.readLine().split(" ")[ FD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_13 $$ m = m / n[ FD ]
Line_14 $$ for (int i = 0; i < n; i++) -->Line_16 $$ sig += (s - m) * (s - m)[ CD ]
Line_2 $$ public static void main(String[] arg) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_5 $$ int n = Integer.parseInt(br.readLine())-->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_14 $$ for (int i = 0; i < n; i++) [ FD ]
Line_4 $$ while (true) -->Line_9 $$ for (int i = 0; i < n; i++) [ CD ]
Line_9 $$ for (int i = 0; i < n; i++) -->Line_10 $$ double s = Double.parseDouble(div[i])[ CD ]
