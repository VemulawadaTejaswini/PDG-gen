Line_10 $$ double m = 0, alpha = 0-->Line_17 $$ alpha += Math.pow(score[i] - m, 2)[ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_19 $$ alpha = alpha / n[ CD ]
Line_19 $$ alpha = alpha / n-->Line_20 $$ sb.append(String.format("%.8f", Math.sqrt(alpha))).append("\n")[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_13 $$ m += score[i][ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_8 $$ str = br.readLine().split(" ")[ FD ]
Line_17 $$ alpha += Math.pow(score[i] - m, 2)-->Line_20 $$ sb.append(String.format("%.8f", Math.sqrt(alpha))).append("\n")[ FD ]
Line_10 $$ double m = 0, alpha = 0-->Line_19 $$ alpha = alpha / n[ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_15 $$ m = m / n[ CD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_4 $$ int n-->Line_15 $$ m = m / n[ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_16 $$ for (int i = 0; i < n; i++) [ CD ]
Line_10 $$ double m = 0, alpha = 0-->Line_15 $$ m = m / n[ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_22 $$ System.out.print(sb)[ CD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_11 $$ for (int i = 0; i < n; i++) [ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_4 $$ int n[ CD ]
Line_4 $$ int n-->Line_19 $$ alpha = alpha / n[ FD ]
Line_10 $$ double m = 0, alpha = 0-->Line_20 $$ sb.append(String.format("%.8f", Math.sqrt(alpha))).append("\n")[ FD ]
Line_16 $$ for (int i = 0; i < n; i++) -->Line_17 $$ alpha += Math.pow(score[i] - m, 2)[ CD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_9 $$ int score[] = new int[n][ CD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_6 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) [ CD ]
Line_4 $$ int n-->Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) [ FD ]
Line_10 $$ double m = 0, alpha = 0-->Line_13 $$ m += score[i][ FD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ System.out.print(sb)[ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_5 $$ String str[][ CD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_8 $$ str = br.readLine().split(" ")[ CD ]
Line_13 $$ m += score[i]-->Line_15 $$ m = m / n[ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_20 $$ sb.append(String.format("%.8f", Math.sqrt(alpha))).append("\n")[ CD ]
Line_6 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ sb.append(String.format("%.8f", Math.sqrt(alpha))).append("\n")[ FD ]
Line_4 $$ int n-->Line_16 $$ for (int i = 0; i < n; i++) [ FD ]
Line_17 $$ alpha += Math.pow(score[i] - m, 2)-->Line_19 $$ alpha = alpha / n[ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_15 $$ m = m / n[ FD ]
Line_4 $$ int n-->Line_11 $$ for (int i = 0; i < n; i++) [ FD ]
Line_2 $$ public static void main(String[] args) throws IOException -->Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))[ CD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_19 $$ alpha = alpha / n[ FD ]
Line_11 $$ for (int i = 0; i < n; i++) -->Line_12 $$ score[i] = Integer.parseInt(str[i])[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new InputStreamReader(System.in))-->Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) [ FD ]
Line_7 $$ while ((n = Integer.parseInt(br.readLine())) != 0) -->Line_10 $$ double m = 0, alpha = 0[ CD ]
