Line_20 $$ for (int j = 0; j < len; j++) -->Line_27 $$ if (j == (len - 1)) [ FD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_42 $$ wordA.setLength(0)[ FD ]
Line_8 $$ int pointA = 0-->Line_22 $$ pointA += 3[ FD ]
Line_11 $$ int lenB = 0-->Line_18 $$ if (lenA > lenB)[ FD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_15 $$ wordA.append(line.substring(0, line.indexOf(" ")))[ CD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))[ FD ]
Line_29 $$ pointA += 1-->Line_33 $$ pointA += 3[ FD ]
Line_12 $$ int len = 0-->Line_18 $$ len = lenB[ FD ]
Line_9 $$ int pointB = 0-->Line_25 $$ pointB += 3[ FD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_14 $$ line.append(br.readLine())[ FD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_41 $$ line.setLength(0)[ FD ]
Line_8 $$ int pointA = 0-->Line_29 $$ pointA += 1[ FD ]
Line_32 $$ if (lenA > lenB) -->Line_33 $$ pointA += 3[ CD ]
Line_11 $$ int lenB = 0-->Line_18 $$ len = lenB[ FD ]
Line_17 $$ len = wordA.length()-->Line_19 $$ len = lenA[ FD ]
Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))-->Line_18 $$ if (lenA > lenB)[ FD ]
Line_18 $$ if (lenA > lenB)-->Line_19 $$ len = lenA[ CD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_16 $$ wordB.append(line.substring(line.indexOf(" ") + 1, line.length()))[ CD ]
Line_8 $$ int pointA = 0-->Line_33 $$ pointA += 3[ FD ]
Line_27 $$ if (j == (len - 1)) -->Line_28 $$ if (lenA == lenB) [ CD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_7 $$ int turn = Integer.parseInt(br.readLine())[ FD ]
Line_18 $$ len = lenB-->Line_20 $$ for (int j = 0; j < len; j++) [ FD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_16 $$ wordB.append(line.substring(line.indexOf(" ") + 1, line.length()))[ FD ]
Line_28 $$ if (lenA == lenB) -->Line_32 $$ if (lenA > lenB) [ CD ]
Line_11 $$ int lenB = 0-->Line_28 $$ if (lenA == lenB) [ FD ]
Line_1 $$ public class Main -->Line_2 $$ public static void main(String[] args) throws IOException [ CD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_43 $$ wordB.setLength(0)[ CD ]
Line_20 $$ for (int j = 0; j < len; j++) -->Line_21 $$ if (wordA.charAt(j) > wordB.charAt(j)) [ FD ]
Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))-->Line_28 $$ if (lenA == lenB) [ FD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_17 $$ len = wordA.length()[ FD ]
Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))-->Line_18 $$ len = lenB[ FD ]
Line_3 $$ try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) -->Line_14 $$ line.append(br.readLine())[ FD ]
Line_28 $$ if (lenA == lenB) -->Line_29 $$ pointA += 1[ CD ]
Line_32 $$ if (lenA > lenB) -->Line_35 $$ pointB += 3[ CD ]
Line_24 $$ if (wordB.charAt(j) > wordA.charAt(j)) -->Line_27 $$ if (j == (len - 1)) [ CD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_21 $$ if (wordA.charAt(j) > wordB.charAt(j)) [ FD ]
Line_10 $$ int lenA = 0-->Line_32 $$ if (lenA > lenB) [ FD ]
Line_20 $$ for (int j = 0; j < len; j++) -->Line_21 $$ if (wordA.charAt(j) > wordB.charAt(j)) [ CD ]
Line_30 $$ pointB += 1-->Line_35 $$ pointB += 3[ FD ]
Line_12 $$ int len = 0-->Line_20 $$ for (int j = 0; j < len; j++) [ FD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_15 $$ wordA.append(line.substring(0, line.indexOf(" ")))[ FD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_41 $$ line.setLength(0)[ CD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))[ FD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_20 $$ for (int j = 0; j < len; j++) [ CD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_21 $$ if (wordA.charAt(j) > wordB.charAt(j)) [ FD ]
Line_12 $$ int len = 0-->Line_17 $$ len = wordA.length()[ FD ]
Line_21 $$ if (wordA.charAt(j) > wordB.charAt(j)) -->Line_22 $$ pointA += 3[ CD ]
Line_22 $$ pointA += 3-->Line_29 $$ pointA += 1[ FD ]
Line_25 $$ pointB += 3-->Line_35 $$ pointB += 3[ FD ]
Line_25 $$ pointB += 3-->Line_30 $$ pointB += 1[ FD ]
Line_10 $$ int lenA = 0-->Line_28 $$ if (lenA == lenB) [ FD ]
Line_18 $$ len = lenB-->Line_19 $$ len = lenA[ FD ]
Line_12 $$ int len = 0-->Line_19 $$ len = lenA[ FD ]
Line_19 $$ len = lenA-->Line_20 $$ for (int j = 0; j < len; j++) [ FD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_16 $$ wordB.append(line.substring(line.indexOf(" ") + 1, line.length()))[ FD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_24 $$ if (wordB.charAt(j) > wordA.charAt(j)) [ FD ]
Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))-->Line_32 $$ if (lenA > lenB) [ FD ]
Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))-->Line_18 $$ if (lenA > lenB)[ CD ]
Line_22 $$ pointA += 3-->Line_33 $$ pointA += 3[ FD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_14 $$ line.append(br.readLine())[ CD ]
Line_10 $$ int lenA = 0-->Line_18 $$ if (lenA > lenB)[ FD ]
Line_5 $$ StringBuilder wordA = new StringBuilder()-->Line_24 $$ if (wordB.charAt(j) > wordA.charAt(j)) [ FD ]
Line_20 $$ for (int j = 0; j < len; j++) -->Line_24 $$ if (wordB.charAt(j) > wordA.charAt(j)) [ FD ]
Line_11 $$ int lenB = 0-->Line_32 $$ if (lenA > lenB) [ FD ]
Line_28 $$ if (lenA == lenB) -->Line_30 $$ pointB += 1[ CD ]
Line_17 $$ len = wordA.length()-->Line_18 $$ len = lenB[ FD ]
Line_4 $$ StringBuilder line = new StringBuilder()-->Line_15 $$ wordA.append(line.substring(0, line.indexOf(" ")))[ FD ]
Line_7 $$ int turn = Integer.parseInt(br.readLine())-->Line_13 $$ for (int i = 0; i < turn; i++) [ FD ]
Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))-->Line_19 $$ len = lenA[ FD ]
Line_10 $$ int lenA = 0-->Line_19 $$ len = lenA[ FD ]
Line_9 $$ int pointB = 0-->Line_30 $$ pointB += 1[ FD ]
Line_9 $$ int pointB = 0-->Line_35 $$ pointB += 3[ FD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_42 $$ wordA.setLength(0)[ CD ]
Line_24 $$ if (wordB.charAt(j) > wordA.charAt(j)) -->Line_25 $$ pointB += 3[ CD ]
Line_10 $$ int lenA = 0-->Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))[ FD ]
Line_11 $$ int lenB = 0-->Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))[ FD ]
Line_21 $$ if (wordA.charAt(j) > wordB.charAt(j)) -->Line_24 $$ if (wordB.charAt(j) > wordA.charAt(j)) [ CD ]
Line_13 $$ for (int i = 0; i < turn; i++) -->Line_17 $$ if ((lenA = wordA.length()) < (lenB = wordB.length()))[ CD ]
Line_17 $$ len = wordA.length()-->Line_20 $$ for (int j = 0; j < len; j++) [ FD ]
Line_6 $$ StringBuilder wordB = new StringBuilder()-->Line_43 $$ wordB.setLength(0)[ FD ]
