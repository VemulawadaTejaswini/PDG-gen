Line_0 $$ Entry-->Line_1 $$ public class Dummy [ CD ]
Line_1 $$ public class Dummy -->Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException [ CD ]
Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException -->Line_3 $$ String name = "abcdef"[ CD ]
Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException -->Line_4 $$ int choice = 2[ CD ]
Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException -->Line_5 $$ MessageDigest md = MessageDigest.getInstance("MD4")[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance("MD4")-->Line_5 $$ MessageDigest md = MessageDigest.getInstance("MD4")[ CD ]
Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException -->Line_6 $$ if (choice > 1)[ CD ]
Line_4 $$ int choice = 2-->Line_6 $$ if (choice > 1)[ FD ]
Line_6 $$ if (choice > 1)-->Line_7 $$ md = MessageDigest.getInstance("SHA-256")[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance("MD4")-->Line_7 $$ md = MessageDigest.getInstance("SHA-256")[ FD ]
Line_7 $$ md = MessageDigest.getInstance("SHA-256")-->Line_7 $$ md = MessageDigest.getInstance("SHA-256")[ FD ]
Line_7 $$ md = MessageDigest.getInstance("SHA-256")-->Line_7 $$ md = MessageDigest.getInstance("SHA-256")[ CD ]
Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException -->Line_8 $$ md.update(name.getBytes())[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance("MD4")-->Line_8 $$ md.update(name.getBytes())[ FD ]
Line_7 $$ md = MessageDigest.getInstance("SHA-256")-->Line_8 $$ md.update(name.getBytes())[ FD ]
Line_3 $$ String name = "abcdef"-->Line_8 $$ md.update(name.getBytes())[ FD ]
Line_2 $$ public static void main(String[] args) throws NoSuchAlgorithmException -->Line_9 $$ System.out.println(md.digest())[ CD ]
Line_5 $$ MessageDigest md = MessageDigest.getInstance("MD4")-->Line_9 $$ System.out.println(md.digest())[ FD ]
Line_7 $$ md = MessageDigest.getInstance("SHA-256")-->Line_9 $$ System.out.println(md.digest())[ FD ]
