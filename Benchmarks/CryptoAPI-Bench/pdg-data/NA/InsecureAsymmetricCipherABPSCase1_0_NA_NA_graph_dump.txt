Line_0 $$ Entry-->Line_1 $$ public class Dummy [ CD ]
Line_1 $$ public class Dummy -->Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException [ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_3 $$ KeyPairGenerator kgp = KeyPairGenerator.getInstance("RSA")[ CD ]
Line_3 $$ KeyPairGenerator kgp = KeyPairGenerator.getInstance("RSA")-->Line_3 $$ KeyPairGenerator kgp = KeyPairGenerator.getInstance("RSA")[ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_4 $$ int keysize[ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_5 $$ if (choice > 1)[ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_5 $$ if (choice > 1)[ FD ]
Line_5 $$ if (choice > 1)-->Line_6 $$ keysize = 2048[ CD ]
Line_4 $$ int keysize-->Line_6 $$ keysize = 2048[ FD ]
Line_6 $$ keysize = 2048-->Line_6 $$ keysize = 2048[ FD ]
Line_5 $$ if (choice > 1)-->Line_8 $$ keysize = 1024[ CD ]
Line_4 $$ int keysize-->Line_8 $$ keysize = 1024[ FD ]
Line_6 $$ keysize = 2048-->Line_8 $$ keysize = 1024[ FD ]
Line_8 $$ keysize = 1024-->Line_8 $$ keysize = 1024[ FD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_9 $$ kgp.initialize(keysize)[ CD ]
Line_3 $$ KeyPairGenerator kgp = KeyPairGenerator.getInstance("RSA")-->Line_9 $$ kgp.initialize(keysize)[ FD ]
Line_4 $$ int keysize-->Line_9 $$ kgp.initialize(keysize)[ FD ]
Line_6 $$ keysize = 2048-->Line_9 $$ kgp.initialize(keysize)[ FD ]
Line_8 $$ keysize = 1024-->Line_9 $$ kgp.initialize(keysize)[ FD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_10 $$ KeyPair kp = kgp.generateKeyPair()[ CD ]
Line_10 $$ KeyPair kp = kgp.generateKeyPair()-->Line_10 $$ KeyPair kp = kgp.generateKeyPair()[ CD ]
Line_3 $$ KeyPairGenerator kgp = KeyPairGenerator.getInstance("RSA")-->Line_10 $$ KeyPair kp = kgp.generateKeyPair()[ FD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_11 $$ Cipher cipher = Cipher.getInstance("RSA")[ CD ]
Line_11 $$ Cipher cipher = Cipher.getInstance("RSA")-->Line_11 $$ Cipher cipher = Cipher.getInstance("RSA")[ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_12 $$ cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic())[ CD ]
Line_11 $$ Cipher cipher = Cipher.getInstance("RSA")-->Line_12 $$ cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic())[ FD ]
Line_10 $$ KeyPair kp = kgp.generateKeyPair()-->Line_12 $$ cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic())[ FD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_13 $$ String myMessage = new String("Secret Message")[ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_14 $$ SealedObject encryptedMessage = new SealedObject(myMessage, cipher)[ CD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_15 $$ System.out.println(encryptedMessage)[ CD ]
Line_14 $$ SealedObject encryptedMessage = new SealedObject(myMessage, cipher)-->Line_15 $$ System.out.println(encryptedMessage)[ FD ]
Line_1 $$ public class Dummy -->Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException [ CD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_18 $$ Dummy bc = new Dummy()[ CD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_19 $$ int choice = 2[ CD ]
Line_17 $$ public static void main(String[] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_20 $$ bc.go(choice)[ CD ]
Line_18 $$ Dummy bc = new Dummy()-->Line_20 $$ bc.go(choice)[ FD ]
Line_19 $$ int choice = 2-->Line_20 $$ bc.go(choice)[ FD ]
Line_2 $$ public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException -->Line_20 $$ bc.go(choice)[ FD ]
