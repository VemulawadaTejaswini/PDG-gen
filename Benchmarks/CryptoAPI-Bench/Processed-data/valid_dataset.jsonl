{"idx": 24, "file": "InsecureAsymmetricCipherBBCase1.java", "target": 1, "misuse-type": "RSA keysize 1024 bits", "api-involved": "kgp.initialize", "func": "public class Dummy {\n    public void go() throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        KeyPairGenerator kgp = KeyPairGenerator.getInstance(\"RSA\");\n        int keysize = 1024;\n        kgp.initialize(keysize);\n        KeyPair kp = kgp.generateKeyPair();\n        Cipher cipher = Cipher.getInstance(\"RSA\");\n        cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic());\n        //encrypting\n        String myMessage = new String(\"Secret Message\");\n        SealedObject encryptedMessage = new SealedObject(myMessage,cipher);\n        //decrypting\n        Cipher dec = Cipher.getInstance(\"RSA\");\n        dec.init(Cipher.DECRYPT_MODE, kp.getPrivate());\n        String message = (String) encryptedMessage.getObject(dec);\n        System.out.println(message);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 160, "file": "BrokenCryptoABPSCase4.java", "target": 0, "misuse-type": "---", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"RC2\");\n        if (choice > 1)\n            cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        int choice=2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 36, "file": "LessThan1000IterationPBECorrected", "target": 0, "misuse-type": "---", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(){\n        Dummy lt = new Dummy();\n        lt.key2();\n    }\n    public void key2(){\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        int count = 1020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 129, "file": "HttpProtocolABICase2.java", "target": 1, "misuse-type": "HTTP", "api-involved": "new URL", "func": "public class Dummy {\n    public static final String DEFAULT_URL = \"http://www.google.com\";\n    private static char[] URL;\n    private static char[] url;\n    public static void main(String [] args) throws MalformedURLException {\n        go2();\n        go3();\n        go();\n    }\n    private static void go2(){\n        URL = DEFAULT_URL.toCharArray();\n    }\n    private static void go3(){\n        url = URL;\n    }\n    private static void go() throws MalformedURLException {\n        System.out.println(new URL(url.toString()));\n    }\n}\n"}
{"idx": 143, "file": "BrokenHashABICase6.java", "target": 1, "misuse-type": "MD5 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"MD5\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        go2();\n        go3();\n        go(str);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void go (String str) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 9, "file": "DummyCertValidationCase3.java", "target": 1, "misuse-type": "Dummy Certificate", "api-involved": "nan", "func": "public class Dummy implements X509TrustManager {\n    @Override\n    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n    }\n    @Override\n    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n    }\n    @Override\n    public X509Certificate[] getAcceptedIssuers() {\n        return null;\n    }\n}\n"}
{"idx": 110, "file": "BrokenHashABSCase4.java", "target": 1, "misuse-type": "MD2 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    CryptoHash4 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new CryptoHash4(\"MD2\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass CryptoHash4 {\n    String crypto;\n    public CryptoHash4(String defCrypto) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        crypto = defCrypto;\n    }\n    public void encrypt(String str, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = crypto;\n        }\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 39, "file": "PredictablePBEPasswordCorrected", "target": 0, "misuse-type": "---", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy ckp = new Dummy();\n        ckp.key();\n    }\n    public void key() {\n        SecureRandom random = new SecureRandom();\n        String password = String.valueOf(random.ints());\n        byte [] salt = new byte[16];\n        random.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 98, "file": "StaticSaltsABSCase1.java", "target": 1, "misuse-type": "Static/Constant Salt", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    CryptoStaticSalt1 crypto;\n    public Dummy() {\n        byte[] salt = {(byte) 0xa2};\n        crypto = new CryptoStaticSalt1(salt);\n        crypto.method1(null);\n    }\n}\nclass CryptoStaticSalt1 {\n    byte[] defSalt;\n    public CryptoStaticSalt1(byte [] salt) {\n        defSalt = salt;\n    }\n    public void method1(byte[] passedSalt)  {\n        passedSalt = defSalt;\n        int count = 1020;\n        PBEParameterSpec pbeParamSpec = null;\n        pbeParamSpec = new PBEParameterSpec(passedSalt, count);\n    }\n}\n"}
{"idx": 141, "file": "InsecureAsymmetricCipherABICase2.java", "target": 1, "misuse-type": "RSA keysize 1024 bits", "api-involved": "kgp.initialize", "func": "public class Dummy {\n    public static final int DEFAULT_KEY_SIZE = 1024;\n    private static int KEY_SIZE;\n    private static int keysize;\n    public void go(KeyPairGenerator kgp, KeyPair kp) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        Cipher cipher = Cipher.getInstance(\"RSA\");\n        cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic());\n        //encrypting\n        String myMessage = new String(\"Secret Message\");\n        SealedObject encryptedMessage = new SealedObject(myMessage,cipher);\n        //decrypting\n        Cipher dec = Cipher.getInstance(\"RSA\");\n        dec.init(Cipher.DECRYPT_MODE, kp.getPrivate());\n        String message = (String) encryptedMessage.getObject(dec);\n        System.out.println(message);\n    }\n    private static void go2(){\n        KEY_SIZE = DEFAULT_KEY_SIZE;\n    }\n    private static void go3(){\n        keysize = KEY_SIZE;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        KeyPairGenerator kgp = KeyPairGenerator.getInstance(\"RSA\");\n        kgp.initialize(keysize);\n        KeyPair kp = kgp.generateKeyPair();\n        bc.go(kgp,kp);\n    }\n}\n"}
{"idx": 148, "file": "PredictablePBEPasswordABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy ckp = new Dummy();\n        int choice=2;\n        ckp.key(choice);\n    }\n    public void key(int choice) {\n        String defaultKey = \"saagar\";\n        if (choice>1){\n            SecureRandom random = new SecureRandom();\n            defaultKey = String.valueOf(random.ints());\n        }\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(defaultKey.toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 61, "file": "BrokenCryptoABICase4.java", "target": 1, "misuse-type": "RC2 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        String crypto = \"RC2\";\n        bc.go(crypto);\n    }\n}\n"}
{"idx": 79, "file": "LessThan1000IterationPBEABICase3.java", "target": 1, "misuse-type": "PBE iteration < 1000", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String[] args) {\n        int count = 20;\n        SecureRandom random = new SecureRandom();\n        method2(count,random);\n    }\n    public static void method2(int c, SecureRandom random) {\n        PBEParameterSpec pbeParamSpec = null;\n        method1(c,random,pbeParamSpec);\n    }\n    public static void method1(int count, SecureRandom random, PBEParameterSpec pbe) {\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        pbe = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 97, "file": "PredictableSeedsABSCase2.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    CryptoPredictableSeed2 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        byte seed = 100;\n        crypto = new CryptoPredictableSeed2(seed);\n        crypto.method1((byte) 20);\n    }\n}\nclass CryptoPredictableSeed2 {\n    byte defSeed;\n    public CryptoPredictableSeed2(byte seed) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defSeed = seed;\n    }\n    public void method1(byte passedSeed) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        passedSeed = defSeed;\n        SecureRandom sr = new SecureRandom(new byte[]{passedSeed});\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 1, "file": "CredentialInStringBBCase1.java", "target": 1, "misuse-type": "Credential in String", "api-involved": "nan", "func": "public class Dummy {\n    public static void main(String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        SecureRandom random = new SecureRandom();\n        String defaultKey = String.valueOf(random.ints());\n        byte[] keyBytes = defaultKey.getBytes();\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n        String originalString = \"Testing\";\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\");\n        cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n        String encrypt = Base64.getEncoder().encodeToString(cipher.doFinal(originalString.getBytes(\"UTF-8\")));\n        System.out.println(encrypt);\n    }\n}\n"}
{"idx": 20, "file": "BrokenCryptoBBCase2.java", "target": 1, "misuse-type": "Blowfish used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"Blowfish\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"Blowfish\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 82, "file": "BrokenCryptoABICase13.java", "target": 1, "misuse-type": "RC4 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static void method2(String c) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = c;\n        method1(cryptoAlgo);\n    }\n    public static void method1(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String crypto = \"RC4\";\n        method2(crypto);\n    }\n}\n"}
{"idx": 48, "file": "CredentialInStringABICase1.java", "target": 1, "misuse-type": "Credential in String", "api-involved": "nan", "func": "public class Dummy {\n    public static void main(String [] args){\n        SecureRandom random = new SecureRandom();\n\t\tString key = String.valueOf(random.ints());\n        go(key);\n    }\n    private static void go(String key) {\n        byte[] keyBytes = key.getBytes();\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}"}
{"idx": 101, "file": "LessThan1000IterationPBEABSCase1.java", "target": 1, "misuse-type": "PBE iteration < 1000", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    CryptoPBEIteration1 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new CryptoPBEIteration1(20);\n        crypto.method1(0);\n    }\n}\nclass CryptoPBEIteration1 {\n    int defcount;\n    public CryptoPBEIteration1(int count) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defcount = count;\n    }\n    public void method1(int passedCount) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        passedCount = defcount;\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        pbeParamSpec = new PBEParameterSpec(salt,passedCount);\n    }\n}\n"}
{"idx": 77, "file": "EcbInSymmCryptoABICase3.java", "target": 1, "misuse-type": "Usage of ECB", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    public static void method2(String c) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = c;\n        method1(cryptoAlgo);\n    }\n    public static void method1(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String crypto = \"AES/ECB/PKCS5Padding\";\n        method2(crypto);\n    }\n}\n"}
{"idx": 136, "file": "BrokenCryptoABICase5.java", "target": 1, "misuse-type": "DES used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"DES/ECB/PKCS5Padding\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public static final String DEFAULT_CRYPTO_ALGO = \"DES\";\n    private static char[] CRYPTO_ALGO;\n    private static char[] crypto_algo;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto_algo));\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(String.valueOf(crypto));\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n        CRYPTO_ALGO = DEFAULT_CRYPTO_ALGO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n        crypto_algo = CRYPTO_ALGO;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        bc.go();\n    }\n}\n"}
{"idx": 80, "file": "BrokenCryptoABICase11.java", "target": 1, "misuse-type": "DES used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static void method2(String c, String key) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = c;\n        method1(cryptoAlgo,key);\n    }\n    public static void method1(String crypto,String cryptoKey) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(cryptoKey);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String key = \"DES\";\n        String crypto = \"DES/ECB/PKCS5Padding\";\n        method2(crypto,key);\n    }\n}\n"}
{"idx": 155, "file": "StaticInitializationVectorABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        SecureRandom sr = new SecureRandom();\n        byte [] bytes = \"abcde\".getBytes();\n        if(choice>1){\n            bytes = new byte[16];\n            sr.nextBytes(bytes);\n        }\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        int choice = 2;\n        siv.go(choice);\n    }\n}\n"}
