{"idx": 0, "file": "PredictableCryptographicKeyBBCase1.java", "target": 1, "misuse-type": "Static/Contant Key", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        byte keyBytes[] = {20,10,30,5,5,6,8,7};\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 37, "file": "PredictableCryptographicKeyCorrected", "target": 0, "misuse-type": "---", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static void main(String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        SecureRandom random = new SecureRandom();\n        byte [] keyBytes = new byte[16];\n        random.nextBytes(keyBytes);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n        String originalString = \"Testing\";\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\");\n        cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n        String encrypt = Base64.getEncoder().encodeToString(cipher.doFinal(originalString.getBytes(\"UTF-8\")));\n        System.out.println(encrypt);\n    }\n}\n"}
{"idx": 43, "file": "UntrustedPRNGCorrected", "target": 0, "misuse-type": "---", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String [] args)\n    {\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        int count = 10020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 152, "file": "PredictableSeedsABPSCase2.java", "target": 0, "misuse-type": "---", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    public static void main (String [] args){\n        SecureRandom sr2 = new SecureRandom();\n        int choice=2;\n        byte [] seed = {(byte) 100, (byte) 200};\n        if(choice>1)\n            sr2.nextBytes(seed);\n        //byte seed = 100;\n        //SecureRandom sr = new SecureRandom(new byte[]{seed});\n        SecureRandom sr = new SecureRandom(seed);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 126, "file": "CredentialInStringABICase2.java", "target": 1, "misuse-type": "Credential in String", "api-involved": "nan", "func": "public class Dummy {\n    public static byte [] DEFAULT_ENCRYPT_KEY = {20,10,30,5,5,6,8,7};\n    private static byte[] ENCRYPT_KEY;\n    private static byte[] encryptKey;\n    public static void main(String [] args){\n        go2();\n        go3();\n        go();\n    }\n    private static void go2(){\n        ENCRYPT_KEY = DEFAULT_ENCRYPT_KEY;\n    }\n    private static void go3(){\n        encryptKey = ENCRYPT_KEY;\n    }\n    private static void go() {\n        byte[] keyBytes = encryptKey;\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 4, "file": "PredictablePBEPasswordBBCase2.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy ckp = new Dummy();\n        ckp.key();\n    }\n    public void key() {\n        char [] defaultKey = {'s'};\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(defaultKey,salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 139, "file": "BrokenCryptoABICase8.java", "target": 1, "misuse-type": "RC2 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"RC2\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto));\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(String.valueOf(crypto));\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        bc.go();\n    }\n}\n"}
{"idx": 121, "file": "StaticInitializationVectorABHCase1.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException, UnsupportedEncodingException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        byte [] bytes = \"abcde\".getBytes(\"UTF-8\");\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException, UnsupportedEncodingException {\n        Dummy siv = new Dummy();\n        siv.go();\n    }\n}\n"}
{"idx": 104, "file": "BrokenCryptoABSCase3.java", "target": 1, "misuse-type": "RC4 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    Crypto4 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new Crypto4(\"RC4\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass Crypto4 {\n    Cipher cipher;\n    String defaultAlgo;\n    public Crypto4(String defAlgo) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defaultAlgo = defAlgo;\n    }\n    public byte[] encrypt(String txt, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = defaultAlgo;\n        }\n        KeyGenerator keyGen = KeyGenerator.getInstance(defaultAlgo);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(defaultAlgo);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n        byte [] txtBytes = txt.getBytes();\n        return cipher.doFinal(txtBytes);\n    }\n}\n"}
{"idx": 93, "file": "PredictablePBEPasswordABSCase1.java", "target": 1, "misuse-type": "Static/Contant password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    CryptoPredictablePBE crypto;\n    public Dummy(){\n        String password = \"sagar\";\n        crypto = new CryptoPredictablePBE(password);\n        crypto.method1(\"\");\n    }\n}\nclass CryptoPredictablePBE {\n    String defPassword;\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public CryptoPredictablePBE(String password){\n        defPassword = password;\n    }\n    public void method1(String passedPassword) {\n        if(passedPassword.isEmpty()){\n            passedPassword = defPassword;\n        }\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(passedPassword.toCharArray(),salt,iterationCount,keyLength);\n    }\n}"}
{"idx": 13, "file": "PredictableSeedsBBCase2.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    public static void main (String [] args){\n        byte seed = 100;\n        SecureRandom sr = new SecureRandom(new byte[]{seed});\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 122, "file": "StaticInitializationVectorABHCase2.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        String name = \"abcdef\";\n        Map<String,String> hm = new HashMap<String, String>();\n        hm.put(\"aaa\", \"abcde\");\n        hm.put(\"bbb\", \"fghij\");\n        hm.put(\"ccc\", \"klmno\");\n        hm.put(\"ddd\", \"pqrst\");\n        String str = hm.get(\"aaa\");\n        byte [] bytes = str.getBytes();\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        siv.go();\n    }\n}\n"}
{"idx": 162, "file": "InsecureAsymmetricCipherABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "kgp.initialize", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        KeyPairGenerator kgp = KeyPairGenerator.getInstance(\"RSA\");\n        int keysize;\n        if (choice>1)\n            keysize = 2048;\n        else\n            keysize = 1024;\n        kgp.initialize(keysize);\n        KeyPair kp = kgp.generateKeyPair();\n        Cipher cipher = Cipher.getInstance(\"RSA\");\n        cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic());\n        //encrypting\n        String myMessage = new String(\"Secret Message\");\n        SealedObject encryptedMessage = new SealedObject(myMessage,cipher);\n        System.out.println(encryptedMessage);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        Dummy bc = new Dummy();\n        int choice = 2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 120, "file": "StaticSaltsABHCase1.java", "target": 1, "misuse-type": "Static/Constant Salt", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main (String [] args){\n        Dummy cs = new Dummy();\n        cs.key2();\n    }\n    public void key2(){\n        Map<String,Byte> hm = new HashMap<String, Byte>();\n        hm.put(\"aaa\", new Byte((byte) 0xa2));\n        hm.put(\"bbb\", new Byte((byte) 0xa4));\n        hm.put(\"ccc\", new Byte((byte) 0xa6));\n        hm.put(\"ddd\", new Byte((byte) 0xa8));\n        byte b = hm.get(\"aaa\");\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = {b,b};\n        int count = 1020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 62, "file": "BrokenCryptoABICase9.java", "target": 1, "misuse-type": "IDEA used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        String crypto = \"IDEA\";\n        bc.go(crypto);\n    }\n}\n"}
{"idx": 11, "file": "HttpProtocolBBCase1.java", "target": 1, "misuse-type": "HTTP", "api-involved": "new URL", "func": "public class Dummy {\n    public static void main(String[] args) throws Exception {\n        String url = \"http://insects.myspecies.info/\";\n        System.out.println(new URL(url));\n    }\n}\n"}
{"idx": 47, "file": "PredictableCryptographicKeyABICase1.java", "target": 1, "misuse-type": "Static/Contant Key", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        byte key[] = {20,10,30,5,5,6,8,7};\n        go(key);\n    }\n    private static void go(byte [] keyBytes) {\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 74, "file": "PredictableSeedsABICase5.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    public static void main (String [] args){\n        //long seed = 456789L;\n        byte [] seed = {(byte) 100, (byte) 200};\n        method1(seed);\n    }\n    public static void method1(byte[] s) {\n        byte [] seed2 = s;\n        method2(seed2);\n    }\n    private static void method2(byte [] seed) {\n        SecureRandom sr = new SecureRandom();\n        sr.setSeed(seed);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 154, "file": "EcbInSymmCryptoABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n        if(choice>1)\n            cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        int choice = 2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 3, "file": "PredictablePBEPasswordBBCase1.java", "target": 1, "misuse-type": "Static/Contant password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy ckp = new Dummy();\n        ckp.key();\n    }\n    public void key() {\n        String defaultKey = \"saagar\";\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(defaultKey.toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 107, "file": "BrokenHashABSCase1.java", "target": 1, "misuse-type": "SHA1 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    CryptoHash1 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new CryptoHash1(\"SHA1\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass CryptoHash1 {\n    String crypto;\n    public CryptoHash1(String defCrypto) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        crypto = defCrypto;\n    }\n    public void encrypt(String str, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = crypto;\n        }\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 12, "file": "PredictableSeedsBBCase1.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    public static void main (String [] args){\n        SecureRandom sr = new SecureRandom();\n        byte [] keyBytes = {(byte) 100, (byte) 200};\n        sr.setSeed(keyBytes);\n        //sr.setSeed(456789L); // Noncompliant\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 116, "file": "PredictableKeyStorePasswordABHCase1.java", "target": 0, "misuse-type": "---", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        PredictableKeyStorePasswordBBCase1 pksp = new PredictableKeyStorePasswordBBCase1();\n        pksp.go();\n    }\n    public void go() throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        SecureRandom random = new SecureRandom();\n        String password = String.valueOf(random.ints());\n        byte [] keyBytes = password.getBytes(\"UTF-8\");\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        ks.load(cacerts.openStream(), new String(keyBytes).toCharArray());\n    }\n}\n"}
{"idx": 161, "file": "BrokenCryptoABPSCase5.java", "target": 0, "misuse-type": "---", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"IDEA\");\n        if (choice > 1)\n            cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        int choice=2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 15, "file": "StaticSaltsBBCase1.java", "target": 1, "misuse-type": "Static/Constant Salt", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main (String [] args){\n        Dummy cs = new Dummy();\n        cs.key2();\n    }\n    public void key2(){\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = {(byte) 0xa2};\n        int count = 1020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 5, "file": "PredictableKeyStorePasswordBBCase1.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        Dummy pksp = new Dummy();\n        pksp.go();\n    }\n    public void go() throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        String defaultKey = \"changeit\";\n        ks.load(cacerts.openStream(), defaultKey.toCharArray());\n    }\n}\n"}
