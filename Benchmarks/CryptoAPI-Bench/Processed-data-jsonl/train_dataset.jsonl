{"idx": 73, "file": "HttpProtocolABICase3.java", "target": 1, "misuse-type": "HTTP", "api-involved": "new URL", "func": "public class Dummy {\n    public static void main(String [] args) throws MalformedURLException {\n        String url = \"http://www.google.com\";\n        method1(url);\n    }\n    private static void method1 (String url) throws MalformedURLException {\n        String url2 = url;\n        method2(url2);\n    }\n    private static void method2(String url) throws MalformedURLException {\n        System.out.println(new URL(url));\n    }\n}\n"}
{"idx": 53, "file": "PredictableSeedsABICase2.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    public static void main (String [] args){\n        byte seed = 100;\n        go(seed);\n    }\n    private static void go(byte seed) {\n        SecureRandom sr = new SecureRandom(new byte[]{seed});\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 51, "file": "HttpProtocolABICase1.java", "target": 1, "misuse-type": "HTTP", "api-involved": "new URL", "func": "public class Dummy {\n    public static void main(String [] args) throws MalformedURLException {\n        String url = \"http://www.google.com\";\n        go(url);\n    }\n    private static void go(String url) throws MalformedURLException {\n        System.out.println(new URL(url));\n    }\n}\n"}
{"idx": 151, "file": "PredictableSeedsABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    public static void main (String [] args){\n        SecureRandom sr = new SecureRandom();\n        int choice=2;\n        byte [] bytes = {(byte) 100, (byte) 200};\n        if(choice>1)\n            sr.nextBytes(bytes);\n        sr.setSeed(bytes);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 131, "file": "PredictableSeedsABICase4.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    public static final String DEFAULT_SEED = \"100\";\n    private static char[] SEED;\n    private static char[] seed;\n    public static void main (String [] args){\n        go2();\n        go3();\n        go();\n    }\n    private static void go2(){\n        SEED = DEFAULT_SEED.toCharArray();\n    }\n    private static void go3(){\n        seed = SEED;\n    }\n    private static void go() {\n        SecureRandom sr = new SecureRandom(new byte[]{Byte.parseByte(seed.toString())});\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 96, "file": "PredictableSeedsABSCase1.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    CryptoPredictableSeed1 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        //long seed = 456789L;\n        byte [] seed = {(byte) 100, (byte) 200};\n        crypto = new CryptoPredictableSeed1(seed);\n        crypto.method1(new byte[]{(byte)0, (byte)0});\n    }\n}\nclass CryptoPredictableSeed1 {\n    byte [] defSeed;\n    public CryptoPredictableSeed1(byte [] seed) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defSeed = seed;\n    }\n    public void method1(byte [] passedSeed) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        passedSeed = defSeed;\n        SecureRandom sr = new SecureRandom();\n        sr.setSeed(passedSeed);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}"}
{"idx": 95, "file": "HttpProtocolABSCase1.java", "target": 1, "misuse-type": "HTTP", "api-involved": "new URL", "func": "public class Dummy {\n    CryptoHTTP1 crypto;\n    public Dummy() throws MalformedURLException {\n        String url = \"http://gmail.com\";\n        crypto = new CryptoHTTP1(url);\n        crypto.method1(\"\");\n    }\n}\nclass CryptoHTTP1 {\n    String defURL;\n    public CryptoHTTP1(String url){\n        defURL = url;\n    }\n    public void method1(String passedURL) throws MalformedURLException {\n        if(passedURL.isEmpty()){\n            passedURL = defURL;\n        }\n        System.out.println(new URL(passedURL));\n    }\n}\n"}
{"idx": 87, "file": "BrokenHashABICase10.java", "target": 1, "misuse-type": "MD5 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"MD5\";\n        method2(str,crypto);\n    }\n    public static void method2 (String s, String cryptoHash) throws NoSuchAlgorithmException {\n        String str2 = s;\n        String hashAlgo = cryptoHash;\n        method1(str2,hashAlgo);\n    }\n    public static void method1 (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 92, "file": "CredentialInStringABSCase1.java", "target": 1, "misuse-type": "Credential in String", "api-involved": "nan", "func": "public class Dummy {\n    Crypto crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException {\n        String passKey = Dummy.getKey(\"pass.key\");\n        if(passKey == null) {\n            SecureRandom random = new SecureRandom();\n            String defaultKey = String.valueOf(random.ints());\n            crypto = new Crypto(defaultKey);\n        }\n        crypto = new Crypto(passKey);\n    }\n    byte[] encryptPass(String pass, String src) throws IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        String keyStr = Dummy.getKey(src);\n        return crypto.method1(pass, keyStr);\n    }\n    public static String getKey(String s) {\n        return System.getProperty(s);\n    }\n}\nclass Crypto {\n    Cipher cipher;\n    String algoSpec = \"AES/CBC/PKCS5Padding\";\n    String algo = \"AES\";\n    String defaultKey;\n    public Crypto(String defkey) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        cipher = Cipher.getInstance(algoSpec);\n        defaultKey = defkey;\n    }\n    public byte[] method1(String txt, String key) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException {\n        if(key.isEmpty()){\n            key = defaultKey;\n        }\n        byte[] keyBytes = key.getBytes(\"UTF-8\");\n        byte [] txtBytes = txt.getBytes();\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes,algo);\n        cipher.init(Cipher.ENCRYPT_MODE,keySpec);\n        return cipher.doFinal(txtBytes);\n    }\n}"}
{"idx": 114, "file": "PredictablePBEPasswordABHCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args) throws UnsupportedEncodingException {\n        Dummy ckp = new Dummy();\n        SecureRandom random = new SecureRandom();\n        String defaultKey = String.valueOf(random.ints());\n        byte [] keyBytes = defaultKey.getBytes(\"UTF-8\");\n        ckp.key(keyBytes);\n    }\n    public void key(byte [] keyBytes) {\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(new String(keyBytes).toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 88, "file": "BrokenHashABICase11.java", "target": 1, "misuse-type": "MD4 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"MD4\";\n        method2(str,crypto);\n    }\n    public static void method2 (String s, String cryptoHash) throws NoSuchAlgorithmException {\n        String str2 = s;\n        String hashAlgo = cryptoHash;\n        method1(str2,hashAlgo);\n    }\n    public static void method1 (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 58, "file": "BrokenCryptoABICase1.java", "target": 1, "misuse-type": "DES used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(String crypto, String keyAlgo) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(keyAlgo);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        String crypto = \"DES/ECB/PKCS5Padding\";\n        String keyAlgo = \"DES\";\n        bc.go(crypto,keyAlgo);\n    }\n}\n"}
{"idx": 49, "file": "PredictablePBEPasswordABICase1.java", "target": 1, "misuse-type": "Static/Contant password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy ckp = new Dummy();\n        String password = \"sagar\";\n        ckp.go(password);\n    }\n    public void go(String password) {\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 52, "file": "PredictableSeedsABICase1.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    public static void main (String [] args){\n        //long seed = 456789L;\n        byte [] seed = {(byte) 100, (byte) 200};\n        go(seed);\n    }\n    private static void go(byte [] seed) {\n        SecureRandom sr = new SecureRandom();\n        sr.setSeed(seed);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 109, "file": "BrokenHashABSCase3.java", "target": 1, "misuse-type": "MD4 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    CryptoHash3 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new CryptoHash3(\"MD4\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass CryptoHash3 {\n    String crypto;\n    public CryptoHash3(String defCrypto) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        crypto = defCrypto;\n    }\n    public void encrypt(String str, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = crypto;\n        }\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 66, "file": "BrokenHashABICase3.java", "target": 1, "misuse-type": "MD4 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"MD4\";\n        go(str,crypto);\n    }\n    public static void go (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 38, "file": "PredictableKeyStorePasswordCorrected", "target": 0, "misuse-type": "---", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        Dummy pksp = new Dummy();\n        pksp.go();\n    }\n    public void go() throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        SecureRandom random = new SecureRandom();\n        String password = String.valueOf(random.ints());\n        ks.load(cacerts.openStream(), password.toCharArray());\n    }\n}\n"}
{"idx": 25, "file": "BrokenHashBBCase1.java", "target": 1, "misuse-type": "SHA1 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        MessageDigest md = MessageDigest.getInstance(\"SHA1\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 140, "file": "BrokenCryptoABICase10.java", "target": 1, "misuse-type": "IDEA used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"IDEA\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto));\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(String.valueOf(crypto));\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        bc.go();\n    }\n}\n"}
{"idx": 166, "file": "BrokenHashABPSCase4.java", "target": 0, "misuse-type": "---", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        int choice = 2;\n        MessageDigest md = MessageDigest.getInstance(\"MD2\");\n        if(choice>1)\n            md = MessageDigest.getInstance(\"SHA-256\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 42, "file": "StaticSaltsCorrected", "target": 0, "misuse-type": "---", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        Dummy cs = new Dummy();\n        cs.key2();\n    }\n    public void key2(){\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        int count = 1020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 102, "file": "BrokenCryptoABSCase1.java", "target": 1, "misuse-type": "DES used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    Crypto2 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new Crypto2(\"DES/ECB/PKCS5Padding\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass Crypto2 {\n    Cipher cipher;\n    String defaultAlgo;\n    public Crypto2(String defAlgo) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defaultAlgo = defAlgo;\n    }\n    public byte[] encrypt(String txt, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = defaultAlgo;\n        }\n        KeyGenerator keyGen = KeyGenerator.getInstance(defaultAlgo);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(defaultAlgo);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n        byte [] txtBytes = txt.getBytes();\n        return cipher.doFinal(txtBytes);\n    }\n}\n"}
{"idx": 84, "file": "BrokenCryptoABICase15.java", "target": 1, "misuse-type": "IDEA used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static void method2(String c) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = c;\n        method1(cryptoAlgo);\n    }\n    public static void method1(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String crypto = \"IDEA\";\n        method2(crypto);\n    }\n}\n"}
{"idx": 134, "file": "StaticInitializationVectorABICase2.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public static final String DEFAULT_INITIALIZATION = \"abcde\";\n    private static char[] INITIALIZATION;\n    private static char[] initialization;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        IvParameterSpec ivSpec = new IvParameterSpec(new byte[]{Byte.parseByte(String.valueOf(initialization))});\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    private static void go2(){\n        INITIALIZATION = DEFAULT_INITIALIZATION.toCharArray();\n    }\n    private static void go3(){\n        initialization = INITIALIZATION;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        go2();\n        go3();\n        siv.go();\n    }\n}\n"}
{"idx": 127, "file": "PredictablePBEPasswordABICase2.java", "target": 1, "misuse-type": "Static/Contant password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static String KEY = \"sagar\";\n    public static char [] DEFAULT_ENCRYPT_KEY = KEY.toCharArray();\n    private static char[] ENCRYPT_KEY;\n    private static char[] encryptKey;\n    public static void main(String [] args) {\n        Dummy pksp = new Dummy();\n        go2();\n        go3();\n        pksp.go();\n    }\n    private static void go2(){\n        ENCRYPT_KEY = DEFAULT_ENCRYPT_KEY;\n    }\n    private static void go3(){\n        encryptKey = ENCRYPT_KEY;\n    }\n    private void go() {\n        SecureRandom sr = new SecureRandom();\n        byte [] salt = new byte[16];\n        sr.nextBytes(salt);\n        pbeKeySpec = new PBEKeySpec(encryptKey,salt,10000,16);\n    }\n}\n"}
{"idx": 132, "file": "StaticSaltsABICase2.java", "target": 1, "misuse-type": "Static/Constant Salt", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static final String DEFAULT_SALT = \"12345\";\n    private static char[] SALT;\n    private static char[] salt;\n    public static void main(String [] args){\n        Dummy cs = new Dummy();\n        int count = 1020;\n        go2();\n        go3();\n        cs.key2(count);\n    }\n    private static void go2(){\n        SALT = DEFAULT_SALT.toCharArray();\n    }\n    private static void go3(){\n        salt = SALT;\n    }\n    public void key2(int count){\n        PBEParameterSpec pbeParamSpec = null;\n        pbeParamSpec = new PBEParameterSpec(new byte[]{Byte.parseByte(salt.toString())}, count);\n    }\n}\n"}
{"idx": 81, "file": "BrokenCryptoABICase12.java", "target": 1, "misuse-type": "Blowfish used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static void method2(String c) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = c;\n        method1(cryptoAlgo);\n    }\n    public static void method1(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String crypto = \"Blowfish\";\n        method2(crypto);\n    }\n}\n"}
{"idx": 157, "file": "BrokenCryptoABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");\n        if (choice > 1)\n            cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        int choice=2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 158, "file": "BrokenCryptoABPSCase2.java", "target": 0, "misuse-type": "---", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"Blowfish\");\n        if (choice > 1)\n            cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        int choice=2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 153, "file": "StaticSaltsABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main (String [] args){\n        Dummy cs = new Dummy();\n        int choice=2;\n        cs.key2(choice);\n    }\n    public void key2(int choice){\n        PBEParameterSpec pbeParamSpec = null;\n        SecureRandom sr2 = new SecureRandom();\n        byte[] salt = {(byte) 0xa2};\n        if(choice>1)\n            sr2.nextBytes(salt);\n        int count = 1020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 144, "file": "BrokenHashABICase7.java", "target": 1, "misuse-type": "MD4 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"MD4\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        go2();\n        go3();\n        go(str);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void go (String str) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 60, "file": "BrokenCryptoABICase3.java", "target": 1, "misuse-type": "RC4 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        String crypto = \"RC4\";\n        bc.go(crypto);\n    }\n}\n"}
{"idx": 125, "file": "PredictableCryptographicKeyABICase2.java", "target": 1, "misuse-type": "Static/Contant Key", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static final byte [] DEFAULT_ENCRYPT_KEY = {20,10,30,5,5,6,8,7};\n    private static byte [] ENCRYPT_KEY;\n    private static byte [] encryptKey;\n    public static void main(String [] args){\n        go2();\n        go3();\n        go();\n    }\n    private static void go2(){\n        ENCRYPT_KEY = DEFAULT_ENCRYPT_KEY;\n    }\n    private static void go3(){\n        encryptKey = ENCRYPT_KEY;\n    }\n    private static void go() {\n        byte[] keyBytes = encryptKey;\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 112, "file": "CredentialInStringABHCase1.java", "target": 1, "misuse-type": "Credential in String", "api-involved": "nan", "func": "public class Dummy {\n    public static void main(String [] args) throws UnsupportedEncodingException {\n        SecureRandom random = new SecureRandom();\n        String defaultKey = String.valueOf(random.ints());\n        byte [] keyBytes = defaultKey.getBytes(\"UTF-8\");\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}"}
{"idx": 164, "file": "BrokenHashABPSCase2.java", "target": 0, "misuse-type": "---", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        int choice = 2;\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        if(choice>1)\n            md = MessageDigest.getInstance(\"SHA-256\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 65, "file": "BrokenHashABICase2.java", "target": 1, "misuse-type": "MD5 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"MD5\";\n        go(str,crypto);\n    }\n    public static void go (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 40, "file": "PredictableSeedsCorrected", "target": 0, "misuse-type": "---", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    public static void main (String [] args){\n        SecureRandom sr = new SecureRandom();\n        long l = sr.nextLong();\n        sr.setSeed(l);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 18, "file": "LessThan1000IterationPBEBBCase1.java", "target": 1, "misuse-type": "PBE iteration < 1000", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(){\n        Dummy lt = new Dummy();\n        lt.key2();\n    }\n    public void key2(){\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        int count = 20;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 130, "file": "PredictableSeedsABICase3.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    //public static final String DEFAULT_SEED = \"456789\";\n    public static final byte [] DEFAULT_SEED = {(byte) 100, (byte) 200};\n    private static byte[] SEED;\n    private static byte[] seed;\n    public static void main (String [] args){\n        go2();\n        go3();\n        go();\n    }\n    private static void go2(){\n        SEED = DEFAULT_SEED;\n    }\n    private static void go3(){\n        seed = SEED;\n    }\n    private static void go() {\n        SecureRandom sr = new SecureRandom();\n        sr.setSeed(seed);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 115, "file": "PredictablePBEPasswordABHCase2.java", "target": 1, "misuse-type": "Static/Contant password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy ckp = new Dummy();\n        Map<String,String> hm = new HashMap<String, String>();\n        hm.put(\"aaa\", \"afix\");\n        hm.put(\"bbb\", \"bfix\");\n        hm.put(\"ccc\", \"cfix\");\n        hm.put(\"ddd\", \"dfix\");\n        String key = hm.get(\"aaa\");\n        ckp.key(key);\n    }\n    public void key(String key) {\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(key.toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 8, "file": "DummyCertValidationCase2.java", "target": 1, "misuse-type": "Dummy Certificate", "api-involved": "nan", "func": "public class Dummy implements X509TrustManager {\n    @Override\n    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n    }\n    @Override\n    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n    }\n    @Override\n    public X509Certificate[] getAcceptedIssuers() {\n        return new X509Certificate[0];\n    }\n}\n"}
{"idx": 45, "file": "BrokenMacCorrected.java", "target": 0, "misuse-type": "HmacSHA256", "api-involved": "Mac.getInstance", "func": "public class Dummy{\n   public static void main(String args[]) throws Exception {\n      KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n      SecureRandom secRandom = new SecureRandom();\n      keyGen.init(secRandom);\n      Key key = keyGen.generateKey();\t \n      Mac mac = Mac.getInstance(\"HmacSHA256\");\n      mac.init(key);\n      String msg = new String(\"TSE2021\");\n      byte[] bytes = msg.getBytes();      \n      byte[] macResult = mac.doFinal(bytes);\n  }\n}\n"}
{"idx": 145, "file": "BrokenHashABICase8.java", "target": 1, "misuse-type": "MD2 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"MD2\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        go2();\n        go3();\n        go(str);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void go (String str) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 86, "file": "BrokenHashABICase9.java", "target": 1, "misuse-type": "SHA1 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"SHA1\";\n        method2(str,crypto);\n    }\n    public static void method2 (String s, String cryptoHash) throws NoSuchAlgorithmException {\n        String str2 = s;\n        String hashAlgo = cryptoHash;\n        method1(str2,hashAlgo);\n    }\n    public static void method1 (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 85, "file": "InsecureAsymmetricCipherABICase3.java", "target": 1, "misuse-type": "RSA keysize 1024 bits", "api-involved": "kgp.initialize", "func": "public class Dummy {\n    public static void method2(int k) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        int keySize = k;\n        method1(keySize);\n    }\n    public static void method1(int key) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        KeyPairGenerator kgp = KeyPairGenerator.getInstance(\"RSA\");\n        kgp.initialize(key);\n        KeyPair kp = kgp.generateKeyPair();\n        Cipher cipher = Cipher.getInstance(\"RSA\");\n        cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic());\n        //encrypting\n        String myMessage = new String(\"Secret Message\");\n        SealedObject encryptedMessage = new SealedObject(myMessage,cipher);\n        //decrypting\n        Cipher dec = Cipher.getInstance(\"RSA\");\n        dec.init(Cipher.DECRYPT_MODE, kp.getPrivate());\n        String message = (String) encryptedMessage.getObject(dec);\n        System.out.println(message);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        int key = 1024;\n        method2(key);\n    }\n}\n"}
{"idx": 33, "file": "EcbInSymmCryptoCorrected", "target": 0, "misuse-type": "---", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        EcbInSymmCryptoBBCase1 bc = new EcbInSymmCryptoBBCase1();\n        bc.go();\n    }\n}\n"}
{"idx": 35, "file": "HttpProtocolCase1Corrected", "target": 0, "misuse-type": "---", "api-involved": "new URL", "func": "public class Dummy {\n    public static void main(String[] args) throws Exception {\n        String url = \"https://www.google.com\";\n        System.out.println(new URL(url));\n    }\n}\n"}
{"idx": 31, "file": "BrokenCryptoCorrected.java", "target": 0, "misuse-type": "---", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        BrokenCryptoBBCase1 bc = new BrokenCryptoBBCase1();\n        bc.go();\n    }\n}\n"}
{"idx": 119, "file": "PredictableSeedsABHCase4.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    public static void main (String [] args){\n        //byte seed = 100;\n        SecureRandom random = new SecureRandom();\n        String str = String.valueOf(random.ints());\n        byte[] seed = str.getBytes();\n        Map<String,Byte> hm = new HashMap<String, Byte>();\n        hm.put(\"aaa\", new Byte((byte) 100));\n        hm.put(\"bbb\", new Byte((byte) 200));\n        hm.put(\"ccc\", new Byte((byte) 300));\n        hm.put(\"ddd\", new Byte((byte) 400));\n        byte b = hm.get(\"aaa\");\n        SecureRandom sr = new SecureRandom(new byte[]{b});\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 106, "file": "BrokenCryptoABSCase5.java", "target": 1, "misuse-type": "IDEA used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    Crypto6 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new Crypto6(\"IDEA\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass Crypto6 {\n    Cipher cipher;\n    String defaultAlgo;\n    public Crypto6(String defAlgo) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defaultAlgo = defAlgo;\n    }\n    public byte[] encrypt(String txt, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = defaultAlgo;\n        }\n        KeyGenerator keyGen = KeyGenerator.getInstance(defaultAlgo);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(defaultAlgo);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n        byte [] txtBytes = txt.getBytes();\n        return cipher.doFinal(txtBytes);\n    }\n}\n"}
{"idx": 163, "file": "BrokenHashABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        int choice = 2;\n        MessageDigest md = MessageDigest.getInstance(\"SHA1\");\n        if(choice>1)\n            md = MessageDigest.getInstance(\"SHA-256\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 6, "file": "DummyHostNameVerifierCase1.java", "target": 1, "misuse-type": "Dummy Verifier", "api-involved": "nan", "func": "public class Dummy implements HostnameVerifier {\n    public boolean verify(String s, SSLSession sslSession) {\n        return true;\n    }\n}\n"}
{"idx": 22, "file": "BrokenCryptoBBCase4.java", "target": 1, "misuse-type": "RC2 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"RC2\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"RC2\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 67, "file": "BrokenHashABICase4.java", "target": 1, "misuse-type": "MD2 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"MD2\";\n        go(str,crypto);\n    }\n    public static void go (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 137, "file": "BrokenCryptoABICase6.java", "target": 1, "misuse-type": "Blowfish used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"Blowfish\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto));\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(String.valueOf(crypto));\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        bc.go();\n    }\n}\n"}
{"idx": 56, "file": "StaticInitializationVectorABICase1.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public void go(byte[] bytes) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        byte [] bytes = \"abcde\".getBytes();\n        siv.go(bytes);\n    }\n}\n"}
{"idx": 50, "file": "PredictableKeyStorePasswordABICase1.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        Dummy pksp = new Dummy();\n        String key = \"changeit\";\n        pksp.go(key);\n    }\n    public void go(String key) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        ks.load(cacerts.openStream(), key.toCharArray());\n    }\n}\n"}
{"idx": 57, "file": "LessThan1000IterationPBEABICase1.java", "target": 1, "misuse-type": "PBE iteration < 1000", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(){\n        Dummy lt = new Dummy();\n        int count = 20;\n        lt.go(count);\n    }\n    public void go(int count){\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 159, "file": "BrokenCryptoABPSCase3.java", "target": 0, "misuse-type": "---", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(int choice) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"RC4\");\n        if (choice > 1)\n            cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        int choice=2;\n        bc.go(choice);\n    }\n}\n"}
{"idx": 34, "file": "DummyHostNameVerifierCorrected", "target": 0, "misuse-type": "---", "api-involved": "nan", "func": "public class Dummy implements HostnameVerifier {\n    public boolean verify(String hostname, SSLSession sslSession) {\n        if (\"192.168.0.10\".equals(hostname)) {\n            return true;\n        } else {\n            HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();\n            return hv.verify(hostname, sslSession);\n        }\n    }\n}\n"}
{"idx": 150, "file": "HttpProtocolABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new URL", "func": "public class Dummy {\n    public static void main(String[] args) throws Exception {\n        int choice = 2;\n        String url = \"http://www.facebook.com\";\n        if(choice>1)\n            url = \"https://www.google.com\";\n        System.out.println(new URL(url));\n    }\n}\n"}
{"idx": 30, "file": "BrokenMacBBCase2.java", "target": 1, "misuse-type": "HmacSHA1", "api-involved": "Mac.getInstance", "func": "public class Dummy {\n   public static void main(String args[]) throws Exception {\n      KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n      SecureRandom secRandom = new SecureRandom();\n      keyGen.init(secRandom);\n      Key key = keyGen.generateKey();\t \n      Mac mac = Mac.getInstance(\"HmacSHA1\");\n      mac.init(key);\n      String msg = new String(\"TSE2021\");\n      byte[] bytes = msg.getBytes();      \n      byte[] macResult = mac.doFinal(bytes);\n  }\n}\n"}
{"idx": 71, "file": "PredictablePBEPasswordABICase3.java", "target": 1, "misuse-type": "Static/Contant password", "api-involved": "new PBEKeySpec", "func": "public class Dummy {\n    private PBEKeySpec pbeKeySpec = null;\n    private PBEParameterSpec pbeParamSpec = null;\n    public static void main(String [] args){\n        Dummy pppac = new Dummy();\n        String password = \"sagar\";\n        pppac.method1(password);\n    }\n    public void method1(String k){\n        String key2 = k;\n        method2(key2);\n    }\n    public void method2(String password) {\n        byte [] salt = new byte[16];\n        SecureRandom sr = new SecureRandom();\n        sr.nextBytes(salt);\n        int iterationCount = 11010;\n        int keyLength = 16;\n        pbeKeySpec = new PBEKeySpec(password.toCharArray(),salt,iterationCount,keyLength);\n    }\n}\n"}
{"idx": 100, "file": "StaticInitializationVectorABSCase1.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    CryptoStaticIV1 crypto;\n    public Dummy() throws InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException, InvalidAlgorithmParameterException {\n        byte [] bytes = \"abcde\".getBytes();\n        crypto = new CryptoStaticIV1(bytes);\n        crypto.method1(null);\n    }\n}\nclass CryptoStaticIV1 {\n    byte [] defIV;\n    public CryptoStaticIV1(byte[] bytes) {\n        defIV = bytes;\n    }\n    public void method1(byte[] passedIV) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException {\n        passedIV = defIV;\n        IvParameterSpec ivSpec = new IvParameterSpec(passedIV);\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n}\n"}
{"idx": 14, "file": "UntrustedPRNGCase1.java", "target": 1, "misuse-type": "Usage of Random Method from Library", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String [] args)\n    {\n        Random random = new Random();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        int count = 10020;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 165, "file": "BrokenHashABPSCase3.java", "target": 0, "misuse-type": "---", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        int choice = 2;\n        MessageDigest md = MessageDigest.getInstance(\"MD4\");\n        if(choice>1)\n            md = MessageDigest.getInstance(\"SHA-256\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 89, "file": "BrokenHashABICase12.java", "target": 1, "misuse-type": "MD2 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"MD2\";\n        method2(str,crypto);\n    }\n    public static void method2 (String s, String cryptoHash) throws NoSuchAlgorithmException {\n        String str2 = s;\n        String hashAlgo = cryptoHash;\n        method1(str2,hashAlgo);\n    }\n    public static void method1 (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 41, "file": "StaticInitializationVectorCorrected", "target": 0, "misuse-type": "---", "api-involved": "new IvParameterSpec", "func": "/*\npublic class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        SecureRandom sr = new SecureRandom();\n        BigInteger i = BigInteger.valueOf(sr.nextInt());\n        byte [] bytes = i.toByteArray();\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        siv.go();\n    }\n}\n*/\npublic class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        SecureRandom sr = new SecureRandom();\n        byte [] bytes = new byte[16];\n        sr.nextBytes(bytes);\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        siv.go();\n    }\n}"}
{"idx": 128, "file": "PredictableKeyStorePasswordABICase2.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "ks.load", "func": "public class Dummy {\n    public static final String DEFAULT_ENCRYPT_KEY = \"changeit\";\n    private static char[] ENCRYPT_KEY;\n    private static char[] encryptKey;\n    URL cacerts;\n    public static void main(String [] args) throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException {\n        Dummy pksp = new Dummy();\n        go2();\n        go3();\n        pksp.go();\n    }\n    private static void go2(){\n        ENCRYPT_KEY = DEFAULT_ENCRYPT_KEY.toCharArray();\n    }\n    private static void go3(){\n        encryptKey = ENCRYPT_KEY;\n    }\n    private void go() throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        ks.load(cacerts.openStream(), encryptKey);\n    }\n}\n"}
{"idx": 108, "file": "BrokenHashABSCase2.java", "target": 1, "misuse-type": "MD5 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    CryptoHash2 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new CryptoHash2(\"MD5\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass CryptoHash2 {\n    String crypto;\n    public CryptoHash2(String defCrypto) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        crypto = defCrypto;\n    }\n    public void encrypt(String str, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = crypto;\n        }\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 63, "file": "InsecureAsymmetricCipherABICase1.java", "target": 1, "misuse-type": "RSA keysize 1024 bits", "api-involved": "kgp.initialize", "func": "public class Dummy {\n    public void go(int keySize) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        KeyPairGenerator kgp = KeyPairGenerator.getInstance(\"RSA\");\n        kgp.initialize(keySize);\n        KeyPair kp = kgp.generateKeyPair();\n        Cipher cipher = Cipher.getInstance(\"RSA\");\n        cipher.init(Cipher.ENCRYPT_MODE, kp.getPublic());\n        //encrypting\n        String myMessage = new String(\"Secret Message\");\n        SealedObject encryptedMessage = new SealedObject(myMessage,cipher);\n        //decrypting\n        Cipher dec = Cipher.getInstance(\"RSA\");\n        dec.init(Cipher.DECRYPT_MODE, kp.getPrivate());\n        String message = (String) encryptedMessage.getObject(dec);\n        System.out.println(message);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        Dummy bc = new Dummy();\n        int keySize = 1024;\n        bc.go(keySize);\n    }\n}\n"}
{"idx": 117, "file": "PredictableKeyStorePasswordABHCase2.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        PredictableKeyStorePasswordBBCase1 pksp = new PredictableKeyStorePasswordBBCase1();\n        pksp.go();\n    }\n    public void go() throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        Map<String,String> hm = new HashMap<String, String>();\n        hm.put(\"aaa\", \"afix\");\n        hm.put(\"bbb\", \"bfix\");\n        hm.put(\"ccc\", \"cfix\");\n        hm.put(\"ddd\", \"dfix\");\n        String key = hm.get(\"aaa\");\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        ks.load(cacerts.openStream(), key.toCharArray());\n    }\n}\n"}
{"idx": 94, "file": "PredictableKeyStorePasswordABSCase1.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "ks.load", "func": "public class Dummy {\n    CryptoPredictableKeyStorePassword1 crypto;\n    public Dummy() throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException {\n        String key = \"changeit\";\n        crypto = new CryptoPredictableKeyStorePassword1(key);\n        crypto.method1(\"\");\n    }\n}\nclass CryptoPredictableKeyStorePassword1 {\n    String defKey;\n    URL cacerts;\n    public CryptoPredictableKeyStorePassword1(String key){\n        defKey = key;\n    }\n    public void method1(String passedKey) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        passedKey = defKey;\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        ks.load(cacerts.openStream(), passedKey.toCharArray());\n    }\n}\n"}
{"idx": 44, "file": "CredentialInStringCorrected.java", "target": 0, "misuse-type": "---", "api-involved": "nan", "func": "public class Dummy {\n    public static void main(String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, IOException, IllegalBlockSizeException, BadPaddingException, ClassNotFoundException {\n        SecureRandom random = new SecureRandom();\n        byte [] keyBytes = new byte[16];\n        random.nextBytes(keyBytes);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n        String originalString = \"Testing\";\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5PADDING\");\n        cipher.init(Cipher.ENCRYPT_MODE, keySpec);\n        String encrypt = Base64.getEncoder().encodeToString(cipher.doFinal(originalString.getBytes(\"UTF-8\")));\n        System.out.println(encrypt);\n    }\n}\n"}
{"idx": 17, "file": "StaticInitializationVectorBBCase1.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        byte [] bytes = \"abcde\".getBytes();\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        Dummy siv = new Dummy();\n        siv.go();\n    }\n}\n"}
{"idx": 83, "file": "BrokenCryptoABICase14.java", "target": 1, "misuse-type": "RC2 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static void method2(String c) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = c;\n        method1(cryptoAlgo);\n    }\n    public static void method1(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String crypto = \"RC2\";\n        method2(crypto);\n    }\n}\n"}
{"idx": 118, "file": "PredictableSeedsABHCase2.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "sr.setSeed", "func": "public class Dummy {\n    public static void main (String [] args){\n        Map<String,Byte> hm = new HashMap<String, Byte>();\n        hm.put(\"aaa\", new Byte((byte) 100));\n        hm.put(\"bbb\", new Byte((byte) 200));\n        hm.put(\"ccc\", new Byte((byte) 300));\n        hm.put(\"ddd\", new Byte((byte) 400));\n        byte b = hm.get(\"aaa\");\n        byte [] seed = {b,b};\n        SecureRandom sr = new SecureRandom();\n        sr.setSeed(seed);\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 70, "file": "CredentialInStringABICase3.java", "target": 1, "misuse-type": "Credential in String", "api-involved": "nan", "func": "public class Dummy {\n    public static void main(String [] args){\n        SecureRandom random = new SecureRandom();\n        String key = String.valueOf(random.ints());\n        method1(key);\n    }\n    public static void method1(String k){\n        String key2 = k;\n        method2(key2);\n    }\n    private static void method2(String key) {\n        byte[] keyBytes = key.getBytes();\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}"}
{"idx": 26, "file": "BrokenHashBBCase2.java", "target": 1, "misuse-type": "MD5 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 78, "file": "StaticInitializationVectorABICase3.java", "target": 1, "misuse-type": "Static/Constant IV", "api-involved": "new IvParameterSpec", "func": "public class Dummy {\n    public static void method2(byte[] bytes) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        IvParameterSpec ivSpec = new IvParameterSpec(bytes);\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE,key,ivSpec);\n    }\n    public static void method1 (byte[] bytes) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        method2(bytes);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException, InvalidAlgorithmParameterException {\n        byte [] bytes = \"abcde\".getBytes();\n        method1(bytes);\n    }\n}\n"}
{"idx": 69, "file": "PredictableCryptographicKeyABICase3.java", "target": 1, "misuse-type": "Static/Contant Key", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        byte key[] = {20,10,30,5,5,6,8,7};\n        method1(key);\n    }\n    public static void method1(byte [] k){\n        method2(k);\n    }\n    private static void method2(byte [] key) {\n        byte[] keyBytes = key;\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 138, "file": "BrokenCryptoABICase7.java", "target": 1, "misuse-type": "RC4 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"RC4\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(String.valueOf(crypto));\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(String.valueOf(crypto));\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        bc.go();\n    }\n}\n"}
{"idx": 7, "file": "DummyCertValidationCase1.java", "target": 1, "misuse-type": "Dummy Certificate", "api-involved": "nan", "func": "public class Dummy implements X509TrustManager {\n    private X509TrustManager trustManager;\n    @Override\n    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n        //Trust any client connecting (no certificate validation)\n        trustManager.checkClientTrusted(x509Certificates,s);\n    }\n    @Override\n    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {\n        //Trust any remote server (no certificate validation)\n    }\n    @Override\n    public X509Certificate[] getAcceptedIssuers() {\n        //return null;\n        return new X509Certificate[0];\n    }\n}\n"}
{"idx": 21, "file": "BrokenCryptoBBCase3.java", "target": 1, "misuse-type": "RC4 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"RC4\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"RC4\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 28, "file": "BrokenHashBBCase4.java", "target": 1, "misuse-type": "MD2 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        MessageDigest md = MessageDigest.getInstance(\"MD2\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 64, "file": "BrokenHashABICase1.java", "target": 1, "misuse-type": "SHA1 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        String crypto = \"SHA1\";\n        go(str,crypto);\n    }\n    public static void go (String str, String crypto) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(crypto);\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 91, "file": "PredictableCryptographicKeyABSCase1.java", "target": 1, "misuse-type": "Static/Contant Key", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    Crypto crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, UnsupportedEncodingException {\n        String passKey = Dummy.getKey(\"pass.key\");\n        if(passKey == null) {\n            byte defaultKey[] = {20,10,30,5,5,6,8,7};\n            crypto = new Crypto(defaultKey);\n        }\n        else {\n            crypto = new Crypto(passKey.getBytes(\"UTF-8\"));\n        }\n    }\n    byte[] encryptPass(String pass, String src) throws IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        String keyStr = Dummy.getKey(src);\n        return crypto.method1(pass, keyStr.getBytes(\"UTF-8\"));\n    }\n    public static String getKey(String s) {\n        return System.getProperty(s);\n    }\n}\nclass Crypto {\n    Cipher cipher;\n    String algoSpec = \"AES/CBC/PKCS5Padding\";\n    String algo = \"AES\";\n    byte [] defaultKey;\n    public Crypto(byte [] defkey) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        cipher = Cipher.getInstance(algoSpec);\n        defaultKey = defkey;\n    }\n    public byte[] method1(String txt, byte [] key) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException {\n        if(key == null){\n            key = defaultKey;\n        }\n        byte[] keyBytes = key;\n        byte [] txtBytes = txt.getBytes();\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes,algo);\n        cipher.init(Cipher.ENCRYPT_MODE,keySpec);\n        return cipher.doFinal(txtBytes);\n    }\n}\n"}
{"idx": 135, "file": "LessThan1000IterationPBEABICase2.java", "target": 1, "misuse-type": "PBE iteration < 1000", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static final String DEFAULT_COUNT = \"20\";\n    private static char[] COUNT;\n    private static char[] count;\n    public static void main(){\n        Dummy lt = new Dummy();\n        go2();\n        go3();\n        lt.key2();\n    }\n    private static void go2(){\n        COUNT = DEFAULT_COUNT.toCharArray();\n    }\n    private static void go3(){\n        count = COUNT;\n    }\n    public void key2(){\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        pbeParamSpec = new PBEParameterSpec(salt, Integer.parseInt(String.valueOf(count)));\n    }\n}\n"}
{"idx": 142, "file": "BrokenHashABICase5.java", "target": 1, "misuse-type": "SHA1 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"SHA1\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String str = \"abcdef\";\n        go2();\n        go3();\n        go(str);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void go (String str) throws NoSuchAlgorithmException {\n        MessageDigest md = MessageDigest.getInstance(String.valueOf(crypto));\n        md.update(str.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 29, "file": "BrokenMacBBCase1.java", "target": 1, "misuse-type": "HmacMD5", "api-involved": "Mac.getInstance", "func": "public class Dummy {\n   public static void main(String args[]) throws Exception {\n      KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n      SecureRandom secRandom = new SecureRandom();\n      keyGen.init(secRandom);\n\t  Key key = keyGen.generateKey();\t \n      Mac mac = Mac.getInstance(\"HmacMD5\");\n      mac.init(key);\n      String msg = new String(\"TSE2021\");\n      byte[] bytes = msg.getBytes();      \n      byte[] macResult = mac.doFinal(bytes);\n  }\n}\n"}
{"idx": 76, "file": "StaticSaltsABICase3.java", "target": 1, "misuse-type": "Static/Constant Salt", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        byte[] salt = {(byte) 0xa2};\n        int count = 1020;\n        method1(salt,count);\n    }\n    public static void method1(byte[] s, int c){\n        int count2 = c;\n        method2(s,count2);\n    }\n    public static void method2(byte[] salt, int count){\n        PBEParameterSpec pbeParamSpec = null;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 23, "file": "BrokenCryptoBBCase5.java", "target": 1, "misuse-type": "IDEA used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"IDEA\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"IDEA\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 123, "file": "LessThan1000IterationPBEABHCase1.java", "target": 1, "misuse-type": "PBE iteration < 1000", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(){\n        Dummy lt = new Dummy();\n        lt.key2();\n    }\n    public void key2(){\n        String name = \"abcdef\";\n        Map<String,Integer> hm = new HashMap<String, Integer>();\n        hm.put(\"aaa\", new Integer(1020));\n        hm.put(\"bbb\", new Integer(20));\n        int iteration = hm.get(\"bbb\");\n        SecureRandom random = new SecureRandom();\n        PBEParameterSpec pbeParamSpec = null;\n        byte[] salt = new byte[32];\n        random.nextBytes(salt);\n        //int count = 20;\n        pbeParamSpec = new PBEParameterSpec(salt, iteration);\n    }\n}\n"}
{"idx": 27, "file": "BrokenHashBBCase3.java", "target": 1, "misuse-type": "MD4 used", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) throws NoSuchAlgorithmException {\n        String name = \"abcdef\";\n        MessageDigest md = MessageDigest.getInstance(\"MD4\");\n        md.update(name.getBytes());\n        System.out.println(md.digest());\n    }\n}\n"}
{"idx": 156, "file": "LessThan1000IterationPBEABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String[] args) {\n        byte[] salt = new byte[32];\n        int choice = 2;\n        int count = 5;\n        SecureRandom random = new SecureRandom();\n        random.nextBytes(salt);\n        if(choice > 1)\n            count = 1050;\n        PBEParameterSpec pbeParamSpec = null;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 55, "file": "EcbInSymmCryptoABICase1.java", "target": 1, "misuse-type": "Usage of ECB", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    public void go(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        String crypto = \"AES/ECB/PKCS5Padding\";\n        bc.go(crypto);\n    }\n}\n"}
{"idx": 16, "file": "EcbInSymmCryptoBBCase1.java", "target": 1, "misuse-type": "Usage of ECB", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 54, "file": "StaticSaltsABICase1.java", "target": 1, "misuse-type": "Static/Constant Salt", "api-involved": "new PBEParameterSpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        Dummy cs = new Dummy();\n        byte[] salt = {(byte) 0xa2};\n        int count = 1020;\n        cs.key2(salt,count);\n    }\n    public void key2(byte[] salt, int count){\n        PBEParameterSpec pbeParamSpec = null;\n        pbeParamSpec = new PBEParameterSpec(salt, count);\n    }\n}\n"}
{"idx": 147, "file": "PredictableCryptographicKeyABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static void main(String [] args){\n        String defaultKey = \"defaultkey\";\n        int choice = 2;\n        byte[] keyBytes = defaultKey.getBytes();\n        if(choice>1){\n            SecureRandom random = new SecureRandom();\n            random.nextBytes(keyBytes);\n        }\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 99, "file": "EcbInSymmCryptoABSCase1.java", "target": 1, "misuse-type": "Usage of ECB", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    CryptoECB1 crypto;\n    public Dummy() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        String cryptoAlgo = \"AES/ECB/PKCS5Padding\";\n        crypto = new CryptoECB1(cryptoAlgo);\n        crypto.method1(\"\");\n    }\n}\nclass CryptoECB1 {\n    String defAlgo;\n    public CryptoECB1(String algo) {\n        defAlgo = algo;\n    }\n    public void method1(String passedAlgo) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = defAlgo;\n        }\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(passedAlgo);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n}\n"}
{"idx": 19, "file": "BrokenCryptoBBCase1.java", "target": 1, "misuse-type": "DES used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"DES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        bc.go();\n    }\n}\n"}
{"idx": 113, "file": "PredictableCryptographicKeyABHCase2.java", "target": 1, "misuse-type": "Static/Contant Key", "api-involved": "new SecretKeySpec", "func": "public class Dummy {\n    public static void main(String [] args) throws UnsupportedEncodingException {\n        Map<String, Integer> hm = new HashMap<String, Integer>();\n        hm.put(\"aaa\", 32);\n        hm.put(\"bbb\", 33);\n        byte [] key = new byte [5];\n        int idx = hm.get(\"aaa\");\n        if (idx == 32) {\n            key[0] = 20;\n\t    key[1] = 30;\n            key[2] = 40;\n            key[3] = 50;\n            key[4] = 10;\n        } else {\n            key[0] = 25;\n\t    key[1] = 35;\n            key[2] = 45;\n            key[3] = 55;\n            key[4] = 15;\n        }\n        byte [] keyBytes = key;\n        keyBytes = Arrays.copyOf(keyBytes,16);\n        SecretKeySpec keySpec = new SecretKeySpec(keyBytes, \"AES\");\n    }\n}\n"}
{"idx": 32, "file": "BrokenHashCorrected", "target": 0, "misuse-type": "---", "api-involved": "MessageDigest.getInstance", "func": "public class Dummy {\n    public static void main (String [] args) {\n        try {\n            String name = \"abcdef\";\n            MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n            md.update(name.getBytes());\n            System.out.println(md.digest());\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n    }\n}\n"}
{"idx": 75, "file": "PredictableSeedsABICase6.java", "target": 1, "misuse-type": "Constant Seed", "api-involved": "new SecureRandom", "func": "public class Dummy {\n    public static void main (String [] args){\n        byte seed = 100;\n        method1(seed);\n    }\n    public static void method1(byte s) {\n        byte seed2 = s;\n        method2(seed2);\n    }\n    private static void method2(byte seed) {\n        SecureRandom sr = new SecureRandom(new byte[]{seed});\n        int v = sr.nextInt();\n        System.out.println(v);\n    }\n}\n"}
{"idx": 10, "file": "ImproperSocketManualHostBBCase1.java", "target": 1, "misuse-type": "Socket Hostname w/o verification", "api-involved": "ssf.createSocket", "func": "public class Dummy {\n    public static void main(String [] args) throws IOException {\n        SSLSocketFactory ssf = (SSLSocketFactory) SSLSocketFactory.getDefault();\n        SSLSocket socket = (SSLSocket) ssf.createSocket(\"my.host.name\", 443);\n    }\n}\n"}
{"idx": 59, "file": "BrokenCryptoABICase2.java", "target": 1, "misuse-type": "Blowfish used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    public void go(String crypto) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(crypto);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(crypto);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        String crypto = \"Blowfish\";\n        bc.go(crypto);\n    }\n}\n"}
{"idx": 149, "file": "PredictableKeyStorePasswordABPSCase1.java", "target": 0, "misuse-type": "---", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        Dummy pksp = new Dummy();\n        int choice=2;\n        pksp.go(choice);\n    }\n    public void go(int choice) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        String defaultKey = \"changeit\";\n        if(choice>1){\n            SecureRandom random = new SecureRandom();\n            defaultKey = String.valueOf(random.ints());\n        }\n        ks.load(cacerts.openStream(), defaultKey.toCharArray());\n    }\n}\n"}
{"idx": 103, "file": "BrokenCryptoABSCase2.java", "target": 1, "misuse-type": "Blowfish used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    Crypto3 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new Crypto3(\"Blowfish\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass Crypto3 {\n    Cipher cipher;\n    String defaultAlgo;\n    public Crypto3(String defAlgo) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defaultAlgo = defAlgo;\n    }\n    public byte[] encrypt(String txt, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = defaultAlgo;\n        }\n        KeyGenerator keyGen = KeyGenerator.getInstance(defaultAlgo);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(defaultAlgo);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n        byte [] txtBytes = txt.getBytes();\n        return cipher.doFinal(txtBytes);\n    }\n}\n"}
{"idx": 72, "file": "PredictableKeyStorePasswordABICase3.java", "target": 1, "misuse-type": "Static/Constant Password", "api-involved": "ks.load", "func": "public class Dummy {\n    URL cacerts;\n    public static void main(String args[]) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        Dummy pkspac = new Dummy();\n        String key = \"changeit\";\n        pkspac.method1(key);\n    }\n    public void method1(String k) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String key2 = k;\n        method2(key2);\n    }\n    public void method2(String key) throws KeyStoreException, IOException, CertificateException, NoSuchAlgorithmException {\n        String type = \"JKS\";\n        KeyStore ks = KeyStore.getInstance(type);\n        cacerts = new URL(\"https://www.google.com\");\n        ks.load(cacerts.openStream(), key.toCharArray());\n    }\n}\n"}
{"idx": 105, "file": "BrokenCryptoABSCase4.java", "target": 1, "misuse-type": "RC2 used", "api-involved": "KeyGenerator.getInstance, Cipher.getInstance", "func": "public class Dummy {\n    Crypto5 crypto;\n    public Dummy() throws NoSuchAlgorithmException, NoSuchPaddingException, IllegalBlockSizeException, BadPaddingException, InvalidKeyException, UnsupportedEncodingException {\n        crypto = new Crypto5(\"RC2\");\n        crypto.encrypt(\"abc\",\"\");\n    }\n}\nclass Crypto5 {\n    Cipher cipher;\n    String defaultAlgo;\n    public Crypto5(String defAlgo) throws NoSuchPaddingException, NoSuchAlgorithmException {\n        defaultAlgo = defAlgo;\n    }\n    public byte[] encrypt(String txt, String passedAlgo) throws UnsupportedEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException, NoSuchAlgorithmException, NoSuchPaddingException {\n        if(passedAlgo.isEmpty()){\n            passedAlgo = defaultAlgo;\n        }\n        KeyGenerator keyGen = KeyGenerator.getInstance(defaultAlgo);\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(defaultAlgo);\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n        byte [] txtBytes = txt.getBytes();\n        return cipher.doFinal(txtBytes);\n    }\n}\n"}
{"idx": 133, "file": "EcbInSymmCryptoABICase2.java", "target": 1, "misuse-type": "Usage of ECB", "api-involved": "Cipher.getInstance", "func": "public class Dummy {\n    public static final String DEFAULT_CRYPTO = \"AES/ECB/PKCS5Padding\";\n    private static char[] CRYPTO;\n    private static char[] crypto;\n    public void go() throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        KeyGenerator keyGen = KeyGenerator.getInstance(\"AES\");\n        SecretKey key = keyGen.generateKey();\n        Cipher cipher = Cipher.getInstance(String.valueOf(crypto));\n        cipher.init(Cipher.ENCRYPT_MODE, key);\n    }\n    private static void go2(){\n        CRYPTO = DEFAULT_CRYPTO.toCharArray();\n    }\n    private static void go3(){\n        crypto = CRYPTO;\n    }\n    public static void main (String [] args) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidKeyException {\n        Dummy bc = new Dummy();\n        go2();\n        go3();\n        bc.go();\n    }\n}\n"}
