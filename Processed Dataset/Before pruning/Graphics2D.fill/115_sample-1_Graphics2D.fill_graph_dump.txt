Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void closePath(Graphics2D g, Path2D.Double path, double previousX, Rectangle2D bounds, double yTopMargin) [ CD ]
Line_2 $$ public void closePath(Graphics2D g, Path2D.Double path, double previousX, Rectangle2D bounds, double yTopMargin) -->Line_3 $$ double yBottomOfArea = bounds.getY() + bounds.getHeight() - yTopMargin[ CD ]
Line_2 $$ public void closePath(Graphics2D g, Path2D.Double path, double previousX, Rectangle2D bounds, double yTopMargin) -->Line_4 $$ path.lineTo(previousX, yBottomOfArea)[ CD ]
Line_3 $$ double yBottomOfArea = bounds.getY() + bounds.getHeight() - yTopMargin-->Line_4 $$ path.lineTo(previousX, yBottomOfArea)[ FD ]
Line_2 $$ public void closePath(Graphics2D g, Path2D.Double path, double previousX, Rectangle2D bounds, double yTopMargin) -->Line_5 $$ path.closePath()[ CD ]
Line_2 $$ public void closePath(Graphics2D g, Path2D.Double path, double previousX, Rectangle2D bounds, double yTopMargin) -->Line_6 $$ g.fill(path)[ CD ]
