Line_0 $$ Entry-->Line_2 $$ //92
public class func [ CD ]
Line_2 $$ //92
public class func -->Line_3 $$ public void findUpCommingEvents() [ CD ]
Line_3 $$ public void findUpCommingEvents() -->Line_4 $$ List<Event> events = query.from(qEvent).where(qEvent.endDate.gt(today.getTime()), qEvent.parent.isNull()).orderBy(qEvent.startDate.asc()).list(qEvent)[ CD ]
Line_4 $$ List<Event> events = query.from(qEvent).where(qEvent.endDate.gt(today.getTime()), qEvent.parent.isNull()).orderBy(qEvent.startDate.asc()).list(qEvent)-->Line_4 $$ query.from(qEvent).where(qEvent.endDate.gt(today.getTime()), qEvent.parent.isNull()).orderBy(qEvent.startDate.asc()).list(qEvent)[ CD ]
Line_3 $$ public void findUpCommingEvents() -->Line_5 $$ return loadVenues(events);[ CD ]
Line_5 $$ return loadVenues(events);-->Line_5 $$ loadVenues(events)[ CD ]
Line_4 $$ List<Event> events = query.from(qEvent).where(qEvent.endDate.gt(today.getTime()), qEvent.parent.isNull()).orderBy(qEvent.startDate.asc()).list(qEvent)-->Line_5 $$ loadVenues(events)[ FD ]
