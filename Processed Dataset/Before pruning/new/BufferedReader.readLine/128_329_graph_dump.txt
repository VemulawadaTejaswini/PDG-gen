Line_0 $$ Entry-->Line_2 $$ //127
public class func [ CD ]
Line_2 $$ //127
public class func -->Line_3 $$ public void testDefaultEncoding() [ CD ]
Line_3 $$ public void testDefaultEncoding() -->Line_4 $$ final IReportVisitor visitor = formatter.createVisitor(output)[ CD ]
Line_4 $$ final IReportVisitor visitor = formatter.createVisitor(output)-->Line_4 $$ formatter.createVisitor(output)[ CD ]
Line_3 $$ public void testDefaultEncoding() -->Line_5 $$ visitor.visitInfo(infos, data)[ CD ]
Line_4 $$ final IReportVisitor visitor = formatter.createVisitor(output)-->Line_5 $$ visitor.visitInfo(infos, data)[ FD ]
Line_3 $$ public void testDefaultEncoding() -->Line_6 $$ driver.sendBundle(visitor)[ CD ]
Line_4 $$ final IReportVisitor visitor = formatter.createVisitor(output)-->Line_6 $$ driver.sendBundle(visitor)[ FD ]
Line_3 $$ public void testDefaultEncoding() -->Line_7 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(output.getContentsAsStream(), "UTF-8"))[ CD ]
Line_3 $$ public void testDefaultEncoding() -->Line_9 $$ final String line = reader.readLine()[ CD ]
Line_9 $$ final String line = reader.readLine()-->Line_9 $$ reader.readLine()[ CD ]
Line_7 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(output.getContentsAsStream(), "UTF-8"))-->Line_9 $$ reader.readLine()[ FD ]
Line_3 $$ public void testDefaultEncoding() -->Line_10 $$ assertTrue(line, line.startsWith("<?xml version=\"1.0\" encoding=\"UTF-8\""))[ CD ]
Line_9 $$ final String line = reader.readLine()-->Line_10 $$ assertTrue(line, line.startsWith("<?xml version=\"1.0\" encoding=\"UTF-8\""))[ FD ]
Line_9 $$ final String line = reader.readLine()-->Line_11 $$ line.startsWith("<?xml version=\"1.0\" encoding=\"UTF-8\"")[ FD ]
