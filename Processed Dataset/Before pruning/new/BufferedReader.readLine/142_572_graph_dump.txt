Line_0 $$ Entry-->Line_2 $$ //141
public class func [ CD ]
Line_2 $$ //141
public class func -->Line_3 $$ public void readFrom(Class<Date> arg0, Type arg1, Annotation[] arg2, MediaType arg3, MultivaluedMap<String, String> arg4, InputStream arg5) [ CD ]
Line_3 $$ public void readFrom(Class<Date> arg0, Type arg1, Annotation[] arg2, MediaType arg3, MultivaluedMap<String, String> arg4, InputStream arg5) -->Line_4 $$ InputStreamReader reader = new InputStreamReader(arg5)[ CD ]
Line_3 $$ public void readFrom(Class<Date> arg0, Type arg1, Annotation[] arg2, MediaType arg3, MultivaluedMap<String, String> arg4, InputStream arg5) -->Line_5 $$ BufferedReader br = new BufferedReader(reader)[ CD ]
Line_3 $$ public void readFrom(Class<Date> arg0, Type arg1, Annotation[] arg2, MediaType arg3, MultivaluedMap<String, String> arg4, InputStream arg5) -->Line_6 $$ long date = Long.parseLong(br.readLine())[ CD ]
Line_6 $$ long date = Long.parseLong(br.readLine())-->Line_6 $$ Long.parseLong(br.readLine())[ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(reader)-->Line_6 $$ br.readLine()[ FD ]
Line_3 $$ public void readFrom(Class<Date> arg0, Type arg1, Annotation[] arg2, MediaType arg3, MultivaluedMap<String, String> arg4, InputStream arg5) -->Line_7 $$ return new Date(date);[ CD ]
