Line_0 $$ Entry-->Line_2 $$ //90
public class func [ CD ]
Line_2 $$ //90
public class func -->Line_3 $$ public void shouldHandleNullStreams1() [ CD ]
Line_3 $$ public void shouldHandleNullStreams1() -->Line_4 $$ InputStream stream = InputStreamMerger.merge(null, stream2, stream3)[ CD ]
Line_4 $$ InputStream stream = InputStreamMerger.merge(null, stream2, stream3)-->Line_4 $$ InputStreamMerger.merge(null, stream2, stream3)[ CD ]
Line_3 $$ public void shouldHandleNullStreams1() -->Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream))[ CD ]
Line_3 $$ public void shouldHandleNullStreams1() -->Line_6 $$ String result = reader.readLine()[ CD ]
Line_6 $$ String result = reader.readLine()-->Line_6 $$ reader.readLine()[ CD ]
Line_5 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(stream))-->Line_6 $$ reader.readLine()[ FD ]
Line_3 $$ public void shouldHandleNullStreams1() -->Line_7 $$ assertEquals(expected, result)[ CD ]
Line_6 $$ String result = reader.readLine()-->Line_7 $$ assertEquals(expected, result)[ FD ]
