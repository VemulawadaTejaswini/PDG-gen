Line_0 $$ Entry-->Line_2 $$ //236
public class func [ CD ]
Line_2 $$ //236
public class func -->Line_3 $$ public void testSimpleArgumentSelect() [ CD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_4 $$ PGobject pgo = new PGobject()[ CD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_5 $$ pgo.setType("simplecompositetest")[ CD ]
Line_4 $$ PGobject pgo = new PGobject()-->Line_5 $$ pgo.setType("simplecompositetest")[ FD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_6 $$ pgo.setValue("(1,2.2,)")[ CD ]
Line_4 $$ PGobject pgo = new PGobject()-->Line_6 $$ pgo.setValue("(1,2.2,)")[ FD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_7 $$ pstmt.setObject(1, pgo)[ CD ]
Line_4 $$ PGobject pgo = new PGobject()-->Line_7 $$ pstmt.setObject(1, pgo)[ FD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_8 $$ ResultSet rs = pstmt.executeQuery()[ CD ]
Line_8 $$ ResultSet rs = pstmt.executeQuery()-->Line_8 $$ pstmt.executeQuery()[ CD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_9 $$ assertTrue(rs.next())[ CD ]
Line_8 $$ ResultSet rs = pstmt.executeQuery()-->Line_9 $$ rs.next()[ FD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_10 $$ PGobject pgo2 = (PGobject) rs.getObject(1)[ CD ]
Line_8 $$ ResultSet rs = pstmt.executeQuery()-->Line_10 $$ rs.getObject(1)[ FD ]
Line_3 $$ public void testSimpleArgumentSelect() -->Line_11 $$ assertEquals(pgo, pgo2)[ CD ]
Line_4 $$ PGobject pgo = new PGobject()-->Line_11 $$ assertEquals(pgo, pgo2)[ FD ]
Line_10 $$ PGobject pgo2 = (PGobject) rs.getObject(1)-->Line_11 $$ assertEquals(pgo, pgo2)[ FD ]
