Line_0 $$ Entry-->Line_2 $$ //238
public class func [ CD ]
Line_2 $$ //238
public class func -->Line_3 $$ public void testComplexSelect() [ CD ]
Line_3 $$ public void testComplexSelect() -->Line_4 $$ PreparedStatement pstmt = _conn.prepareStatement("SELECT '(\"[ CD ]
Line_4 $$ PreparedStatement pstmt = _conn.prepareStatement("SELECT '(\"-->Line_4 $$ _conn.prepareStatement("SELECT '(\"[ CD ]
Line_3 $$ public void testComplexSelect() -->Line_5 $$ ResultSet rs = pstmt.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_5 $$ pstmt.executeQuery()[ CD ]
Line_4 $$ PreparedStatement pstmt = _conn.prepareStatement("SELECT '(\"-->Line_5 $$ pstmt.executeQuery()[ FD ]
Line_3 $$ public void testComplexSelect() -->Line_6 $$ assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_6 $$ rs.next()[ FD ]
Line_3 $$ public void testComplexSelect() -->Line_7 $$ PGobject pgo = (PGobject) rs.getObject(1)[ CD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_7 $$ rs.getObject(1)[ FD ]
Line_3 $$ public void testComplexSelect() -->Line_8 $$ assertEquals("\"Composites\".\"ComplexCompositeTest\"", pgo.getType())[ CD ]
Line_7 $$ PGobject pgo = (PGobject) rs.getObject(1)-->Line_8 $$ pgo.getType()[ FD ]
Line_3 $$ public void testComplexSelect() -->Line_9 $$ assertEquals("(\"[ CD ]
Line_7 $$ PGobject pgo = (PGobject) rs.getObject(1)-->Line_9 $$ pgo.getValue()[ FD ]
