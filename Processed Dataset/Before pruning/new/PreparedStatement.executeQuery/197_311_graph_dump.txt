Line_0 $$ Entry-->Line_2 $$ //196
public class func [ CD ]
Line_2 $$ //196
public class func -->Line_3 $$ public void runOneRowQueryTest(String oneRowQuery, Integer pkValue, String projectedValue) [ CD ]
Line_3 $$ public void runOneRowQueryTest(String oneRowQuery, Integer pkValue, String projectedValue) -->Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL)-->Line_4 $$ DriverManager.getConnection(PHOENIX_JDBC_URL)[ CD ]
Line_3 $$ public void runOneRowQueryTest(String oneRowQuery, Integer pkValue, String projectedValue) -->Line_5 $$ PreparedStatement statement = conn.prepareStatement(oneRowQuery)[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(oneRowQuery)-->Line_5 $$ conn.prepareStatement(oneRowQuery)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL)-->Line_5 $$ conn.prepareStatement(oneRowQuery)[ FD ]
Line_3 $$ public void runOneRowQueryTest(String oneRowQuery, Integer pkValue, String projectedValue) -->Line_6 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_6 $$ statement.executeQuery()[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(oneRowQuery)-->Line_6 $$ statement.executeQuery()[ FD ]
Line_3 $$ public void runOneRowQueryTest(String oneRowQuery, Integer pkValue, String projectedValue) -->Line_7 $$ assertTrue(rs.next())[ CD ]
Line_6 $$ ResultSet rs = statement.executeQuery()-->Line_7 $$ rs.next()[ FD ]
