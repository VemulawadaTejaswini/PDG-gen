Line_0 $$ Entry-->Line_2 $$ //231
public class func [ CD ]
Line_2 $$ //231
public class func -->Line_3 $$ public void doRun(Connection cx) [ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, s, k)))[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, s, k)))-->Line_4 $$ open(cx.prepareStatement(log(sql, LOG, s, k)))[ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_5 $$ ps.setString(2, k)[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, s, k)))-->Line_5 $$ ps.setString(2, k)[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_6 $$ open(ps.executeQuery())[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, s, k)))-->Line_6 $$ ps.executeQuery()[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_7 $$ return rs.next() ? rs.getString(1) : null;[ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_7 $$ rs.next()[ FD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_7 $$ rs.getString(1)[ FD ]
