Line_0 $$ Entry-->Line_2 $$ //63
public class func [ CD ]
Line_2 $$ //63
public class func -->Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) [ CD ]
Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) -->Line_4 $$ connection.prepareStatement(getStatements().getLeaseOwnerStatement())[ CD ]
Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) -->Line_5 $$ ResultSet resultSet = statement.executeQuery()[ CD ]
Line_5 $$ ResultSet resultSet = statement.executeQuery()-->Line_5 $$ statement.executeQuery()[ CD ]
Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) -->Line_6 $$ while (resultSet.next()) [ CD ]
Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) -->Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) [ CD ]
Line_6 $$ while (resultSet.next()) -->Line_6 $$ resultSet.next()[ CD ]
Line_5 $$ ResultSet resultSet = statement.executeQuery()-->Line_6 $$ resultSet.next()[ FD ]
Line_6 $$ while (resultSet.next()) -->Line_7 $$ LOG.info(getLeaseHolderId() + " Lease held by " + resultSet.getString(1) + " till " + new Date(resultSet.getLong(2)))[ CD ]
Line_5 $$ ResultSet resultSet = statement.executeQuery()-->Line_7 $$ resultSet.getString(1)[ FD ]
Line_5 $$ ResultSet resultSet = statement.executeQuery()-->Line_7 $$ resultSet.getLong(2)[ FD ]
Line_3 $$ public void reportLeasOwnerShipAndDuration(Connection connection) -->Line_9 $$ close(statement)[ CD ]
