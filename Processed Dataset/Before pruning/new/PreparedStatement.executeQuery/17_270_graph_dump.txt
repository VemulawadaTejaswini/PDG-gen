Line_0 $$ Entry-->Line_2 $$ //16
public class func [ CD ]
Line_2 $$ //16
public class func -->Line_3 $$ public void doRun(Connection cx) [ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_4 $$ String sql = format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)[ CD ]
Line_4 $$ String sql = format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)-->Line_4 $$ format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)[ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_5 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_5 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_5 $$ open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_4 $$ String sql = format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)-->Line_5 $$ log(sql, LOG, namespace)[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_6 $$ ps.setString(1, namespace)[ CD ]
Line_5 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_6 $$ ps.setString(1, namespace)[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_7 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_7 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ ps.executeQuery()[ CD ]
Line_5 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_7 $$ ps.executeQuery()[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_8 $$ while (rs.next()) [ CD ]
Line_3 $$ public void doRun(Connection cx) -->Line_3 $$ public void doRun(Connection cx) [ CD ]
Line_8 $$ while (rs.next()) -->Line_8 $$ rs.next()[ CD ]
Line_7 $$ ResultSet rs = ps.executeQuery()-->Line_8 $$ rs.next()[ FD ]
Line_8 $$ while (rs.next()) -->Line_9 $$ rs.getInt(1)[ CD ]
Line_7 $$ ResultSet rs = ps.executeQuery()-->Line_9 $$ rs.getInt(1)[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_11 $$ rs.close()[ CD ]
Line_7 $$ ResultSet rs = ps.executeQuery()-->Line_11 $$ rs.close()[ FD ]
Line_3 $$ public void doRun(Connection cx) -->Line_12 $$ return Integer.valueOf(count);[ CD ]
Line_12 $$ return Integer.valueOf(count);-->Line_12 $$ Integer.valueOf(count)[ CD ]
