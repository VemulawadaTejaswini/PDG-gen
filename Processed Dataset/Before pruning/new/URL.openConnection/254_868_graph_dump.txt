Line_0 $$ Entry-->Line_2 $$ //253
public class func [ CD ]
Line_2 $$ //253
public class func -->Line_3 $$ public void testUrlContainsQueryButNoPath() [ CD ]
Line_3 $$ public void testUrlContainsQueryButNoPath() -->Line_4 $$ server.enqueue(new MockResponse().setBody("A"))[ CD ]
Line_3 $$ public void testUrlContainsQueryButNoPath() -->Line_5 $$ server.play()[ CD ]
Line_3 $$ public void testUrlContainsQueryButNoPath() -->Line_6 $$ URL url = new URL("http", server.getHostName(), server.getPort(), "?query")[ CD ]
Line_3 $$ public void testUrlContainsQueryButNoPath() -->Line_7 $$ assertEquals("A", readAscii(url.openConnection().getInputStream(), Integer.MAX_VALUE))[ CD ]
Line_6 $$ URL url = new URL("http", server.getHostName(), server.getPort(), "?query")-->Line_7 $$ url.openConnection()[ FD ]
Line_3 $$ public void testUrlContainsQueryButNoPath() -->Line_8 $$ RecordedRequest request = server.takeRequest()[ CD ]
Line_8 $$ RecordedRequest request = server.takeRequest()-->Line_8 $$ server.takeRequest()[ CD ]
Line_3 $$ public void testUrlContainsQueryButNoPath() -->Line_9 $$ assertEquals("GET /?query HTTP/1.1", request.getRequestLine())[ CD ]
Line_8 $$ RecordedRequest request = server.takeRequest()-->Line_9 $$ request.getRequestLine()[ FD ]
