Line_0 $$ Entry-->Line_2 $$ //13
public class func [ CD ]
Line_2 $$ //13
public class func -->Line_3 $$ public void checkUpdate(String s) [ CD ]
Line_3 $$ public void checkUpdate(String s) -->Line_4 $$ URL url = new URL(s)[ CD ]
Line_3 $$ public void checkUpdate(String s) -->Line_5 $$ URLConnection conn = url.openConnection()[ CD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_5 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(s)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void checkUpdate(String s) -->Line_6 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_7 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void checkUpdate(String s) -->Line_8 $$ if ((line = in.readLine()) != null) [ CD ]
Line_6 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_8 $$ in.readLine()[ FD ]
Line_8 $$ if ((line = in.readLine()) != null) -->Line_9 $$ line.trim()[ CD ]
Line_8 $$ if ((line = in.readLine()) != null) -->Line_11 $$ while ((line = in.readLine()) != null) details += line;[ CD ]
Line_8 $$ if ((line = in.readLine()) != null) -->Line_8 $$ if ((line = in.readLine()) != null) [ CD ]
Line_6 $$ BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_11 $$ in.readLine()[ FD ]
Line_8 $$ if ((line = in.readLine()) != null) -->Line_13 $$ return true;[ CD ]
