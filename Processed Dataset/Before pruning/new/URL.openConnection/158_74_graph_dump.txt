Line_0 $$ Entry-->Line_2 $$ //157
public class func [ CD ]
Line_2 $$ //157
public class func -->Line_3 $$ public void testNoCacheHeader() [ CD ]
Line_3 $$ public void testNoCacheHeader() -->Line_4 $$ URL url = new URL(baseUrl, "/echo?a=b&c=d")[ CD ]
Line_3 $$ public void testNoCacheHeader() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(baseUrl, "/echo?a=b&c=d")-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testNoCacheHeader() -->Line_6 $$ assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void testNoCacheHeader() -->Line_7 $$ assertEquals("no-cache", conn.getHeaderField("Cache-Control"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.getHeaderField("Cache-Control")[ FD ]
Line_3 $$ public void testNoCacheHeader() -->Line_8 $$ assertEquals("no-cache", conn.getHeaderField("Pragma"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getHeaderField("Pragma")[ FD ]
Line_3 $$ public void testNoCacheHeader() -->Line_9 $$ assertNotNull(conn.getHeaderField("Expires"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getHeaderField("Expires")[ FD ]
Line_3 $$ public void testNoCacheHeader() -->Line_10 $$ assertNotNull(conn.getHeaderField("Date"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getHeaderField("Date")[ FD ]
Line_3 $$ public void testNoCacheHeader() -->Line_11 $$ assertEquals(conn.getHeaderField("Expires"), conn.getHeaderField("Date"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getHeaderField("Expires")[ FD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getHeaderField("Date")[ FD ]
