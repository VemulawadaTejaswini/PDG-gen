Line_0 $$ Entry-->Line_2 $$ //371
public class func [ CD ]
Line_2 $$ //371
public class func -->Line_3 $$ public void call() [ CD ]
Line_3 $$ public void call() -->Line_4 $$ final String id = bundleJobBean.getId()[ CD ]
Line_4 $$ final String id = bundleJobBean.getId()-->Line_4 $$ bundleJobBean.getId()[ CD ]
Line_3 $$ public void call() -->Line_5 $$ URL url = createURL(id, params)[ CD ]
Line_5 $$ URL url = createURL(id, params)-->Line_5 $$ createURL(id, params)[ CD ]
Line_4 $$ final String id = bundleJobBean.getId()-->Line_5 $$ createURL(id, params)[ FD ]
Line_3 $$ public void call() -->Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_5 $$ URL url = createURL(id, params)-->Line_6 $$ url.openConnection()[ FD ]
Line_3 $$ public void call() -->Line_7 $$ conn.setRequestMethod("GET")[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.setRequestMethod("GET")[ FD ]
Line_3 $$ public void call() -->Line_8 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void call() -->Line_9 $$ String ct = conn.getHeaderField("content-type")[ CD ]
Line_9 $$ String ct = conn.getHeaderField("content-type")-->Line_9 $$ conn.getHeaderField("content-type")[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getHeaderField("content-type")[ FD ]
Line_3 $$ public void call() -->Line_10 $$ assertTrue(ct.startsWith(RestConstants.XML_CONTENT_TYPE))[ CD ]
Line_9 $$ String ct = conn.getHeaderField("content-type")-->Line_10 $$ ct.startsWith(RestConstants.XML_CONTENT_TYPE)[ FD ]
Line_3 $$ public void call() -->Line_11 $$ String response = IOUtils.getReaderAsString(new InputStreamReader(conn.getInputStream()), -1)[ CD ]
Line_11 $$ String response = IOUtils.getReaderAsString(new InputStreamReader(conn.getInputStream()), -1)-->Line_11 $$ IOUtils.getReaderAsString(new InputStreamReader(conn.getInputStream()), -1)[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void call() -->Line_12 $$ assertTrue(response != null && response.length() > 0)[ CD ]
Line_11 $$ String response = IOUtils.getReaderAsString(new InputStreamReader(conn.getInputStream()), -1)-->Line_12 $$ response.length()[ FD ]
