Line_0 $$ Entry-->Line_2 $$ //121
public class func [ CD ]
Line_2 $$ //121
public class func -->Line_3 $$ public void testGetBook123() [ CD ]
Line_3 $$ public void testGetBook123() -->Line_4 $$ URL url = new URL(endpointAddress)[ CD ]
Line_3 $$ public void testGetBook123() -->Line_5 $$ URLConnection connect = url.openConnection()[ CD ]
Line_5 $$ URLConnection connect = url.openConnection()-->Line_5 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(endpointAddress)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testGetBook123() -->Line_6 $$ connect.addRequestProperty("Accept", "application/xml")[ CD ]
Line_5 $$ URLConnection connect = url.openConnection()-->Line_6 $$ connect.addRequestProperty("Accept", "application/xml")[ FD ]
Line_3 $$ public void testGetBook123() -->Line_7 $$ InputStream in = connect.getInputStream()[ CD ]
Line_7 $$ InputStream in = connect.getInputStream()-->Line_7 $$ connect.getInputStream()[ CD ]
Line_5 $$ URLConnection connect = url.openConnection()-->Line_7 $$ connect.getInputStream()[ FD ]
Line_3 $$ public void testGetBook123() -->Line_8 $$ assertNotNull(in)[ CD ]
Line_7 $$ InputStream in = connect.getInputStream()-->Line_8 $$ assertNotNull(in)[ FD ]
Line_3 $$ public void testGetBook123() -->Line_9 $$ InputStream expected = getClass().getResourceAsStream("resources/expected_get_book123.txt")[ CD ]
Line_9 $$ InputStream expected = getClass().getResourceAsStream("resources/expected_get_book123.txt")-->Line_9 $$ getClass().getResourceAsStream("resources/expected_get_book123.txt")[ CD ]
