Line_0 $$ Entry-->Line_2 $$ //79
public class func [ CD ]
Line_2 $$ //79
public class func -->Line_3 $$ public void testPutNoOperation() [ CD ]
Line_3 $$ public void testPutNoOperation() -->Line_4 $$ URL url = new URL(getJettyURL(), MessageFormat.format("/foo?user.name=[ CD ]
Line_3 $$ public void testPutNoOperation() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(getJettyURL(), MessageFormat.format("/foo?user.name=-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testPutNoOperation() -->Line_6 $$ conn.setDoInput(true)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.setDoInput(true)[ FD ]
Line_3 $$ public void testPutNoOperation() -->Line_7 $$ conn.setDoOutput(true)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.setDoOutput(true)[ FD ]
Line_3 $$ public void testPutNoOperation() -->Line_8 $$ conn.setRequestMethod("PUT")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.setRequestMethod("PUT")[ FD ]
Line_3 $$ public void testPutNoOperation() -->Line_9 $$ Assert.assertEquals(conn.getResponseCode(), HttpURLConnection.HTTP_BAD_REQUEST)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getResponseCode()[ FD ]
