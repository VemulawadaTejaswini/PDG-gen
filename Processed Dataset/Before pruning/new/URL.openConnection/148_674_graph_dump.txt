Line_0 $$ Entry-->Line_2 $$ //147
public class func [ CD ]
Line_2 $$ //147
public class func -->Line_3 $$ public void writeResources(String srcPath, File cacheDir, String date) [ CD ]
Line_3 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_4 $$ URL url = new URL(srcPath)[ CD ]
Line_3 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_5 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_5 $$ URLConnection urlConnection = url.openConnection()-->Line_5 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(srcPath)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_6 $$ long last = urlConnection.getLastModified()[ CD ]
Line_6 $$ long last = urlConnection.getLastModified()-->Line_6 $$ urlConnection.getLastModified()[ CD ]
Line_5 $$ URLConnection urlConnection = url.openConnection()-->Line_6 $$ urlConnection.getLastModified()[ FD ]
Line_3 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_7 $$ if (last != 0) [ CD ]
Line_6 $$ long last = urlConnection.getLastModified()-->Line_7 $$ if (last != 0) [ FD ]
Line_7 $$ if (last != 0) -->Line_8 $$ Long.toString(last)[ CD ]
Line_6 $$ long last = urlConnection.getLastModified()-->Line_8 $$ Long.toString(last)[ FD ]
Line_3 $$ public void writeResources(String srcPath, File cacheDir, String date) -->Line_10 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) [ CD ]
Line_10 $$ !cacheDir.canRead()-->Line_10 $$ cacheDir.canRead()[ CD ]
Line_10 $$ !date.equals(fileDate)-->Line_10 $$ date.equals(fileDate)[ CD ]
Line_10 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) -->Line_11 $$ recursiveDelete(cacheDir, false)[ CD ]
Line_10 $$ if (!cacheDir.canRead() || date == null || !date.equals(fileDate)) -->Line_12 $$ unzip(urlConnection.getInputStream(), cacheDir)[ CD ]
Line_5 $$ URLConnection urlConnection = url.openConnection()-->Line_12 $$ urlConnection.getInputStream()[ FD ]
