Line_0 $$ Entry-->Line_2 $$ //39
public class func [ CD ]
Line_2 $$ //39
public class func -->Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) [ CD ]
Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()[ CD ]
Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) -->Line_5 $$ conn.setRequestMethod("GET")[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_5 $$ conn.setRequestMethod("GET")[ FD ]
Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) -->Line_6 $$ conn.setConnectTimeout(5000)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_6 $$ conn.setConnectTimeout(5000)[ FD ]
Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) -->Line_7 $$ byte[] buf = readInputStream(conn.getInputStream(), conn.getContentLength(), callback)[ CD ]
Line_7 $$ byte[] buf = readInputStream(conn.getInputStream(), conn.getContentLength(), callback)-->Line_7 $$ readInputStream(conn.getInputStream(), conn.getContentLength(), callback)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_7 $$ conn.getInputStream()[ FD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_7 $$ conn.getContentLength()[ FD ]
Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) -->Line_8 $$ createCache(type, name, buf)[ CD ]
Line_7 $$ byte[] buf = readInputStream(conn.getInputStream(), conn.getContentLength(), callback)-->Line_8 $$ createCache(type, name, buf)[ FD ]
Line_3 $$ public void createCacheFromNetwork(String type, String name, String url, ProgressCallback callback) -->Line_9 $$ conn.disconnect()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_9 $$ conn.disconnect()[ FD ]
