Line_0 $$ Entry-->Line_2 $$ //10
public class func [ CD ]
Line_2 $$ //10
public class func -->Line_3 $$ public void get(String url, Type type) [ CD ]
Line_3 $$ public void get(String url, Type type) -->Line_4 $$ URL obj = new URL(url)[ CD ]
Line_3 $$ public void get(String url, Type type) -->Line_5 $$ HttpURLConnection con = (HttpURLConnection) obj.openConnection()[ CD ]
Line_4 $$ URL obj = new URL(url)-->Line_5 $$ obj.openConnection()[ FD ]
Line_3 $$ public void get(String url, Type type) -->Line_6 $$ con.setRequestMethod("GET")[ CD ]
Line_5 $$ HttpURLConnection con = (HttpURLConnection) obj.openConnection()-->Line_6 $$ con.setRequestMethod("GET")[ FD ]
Line_3 $$ public void get(String url, Type type) -->Line_7 $$ if (con.getResponseCode() == 200) [ CD ]
Line_5 $$ HttpURLConnection con = (HttpURLConnection) obj.openConnection()-->Line_7 $$ con.getResponseCode()[ FD ]
Line_7 $$ if (con.getResponseCode() == 200) -->Line_8 $$ Reader reader = new InputStreamReader(con.getInputStream(), "UTF-8")[ CD ]
Line_5 $$ HttpURLConnection con = (HttpURLConnection) obj.openConnection()-->Line_8 $$ con.getInputStream()[ FD ]
Line_7 $$ if (con.getResponseCode() == 200) -->Line_9 $$ return GSON.fromJson(reader, type);[ CD ]
Line_9 $$ return GSON.fromJson(reader, type);-->Line_9 $$ GSON.fromJson(reader, type)[ CD ]
Line_8 $$ Reader reader = new InputStreamReader(con.getInputStream(), "UTF-8")-->Line_9 $$ GSON.fromJson(reader, type)[ FD ]
