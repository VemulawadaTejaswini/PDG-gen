Line_0 $$ Entry-->Line_2 $$ //182
public class func [ CD ]
Line_2 $$ //182
public class func -->Line_3 $$ public void downloadList(String libURL) [ CD ]
Line_3 $$ public void downloadList(String libURL) -->Line_4 $$ URL url = new URL(libURL)[ CD ]
Line_3 $$ public void downloadList(String libURL) -->Line_5 $$ URLConnection connection = url.openConnection()[ CD ]
Line_5 $$ URLConnection connection = url.openConnection()-->Line_5 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(libURL)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void downloadList(String libURL) -->Line_6 $$ connection.setConnectTimeout(5000)[ CD ]
Line_5 $$ URLConnection connection = url.openConnection()-->Line_6 $$ connection.setConnectTimeout(5000)[ FD ]
Line_3 $$ public void downloadList(String libURL) -->Line_7 $$ connection.setReadTimeout(5000)[ CD ]
Line_5 $$ URLConnection connection = url.openConnection()-->Line_7 $$ connection.setReadTimeout(5000)[ FD ]
Line_3 $$ public void downloadList(String libURL) -->Line_8 $$ InputSupplier<InputStream> urlSupplier = new URLISSupplier(connection)[ CD ]
Line_3 $$ public void downloadList(String libURL) -->Line_9 $$ return CharStreams.readLines(CharStreams.newReaderSupplier(urlSupplier, Charsets.UTF_8));[ CD ]
Line_9 $$ return CharStreams.readLines(CharStreams.newReaderSupplier(urlSupplier, Charsets.UTF_8));-->Line_9 $$ CharStreams.readLines(CharStreams.newReaderSupplier(urlSupplier, Charsets.UTF_8))[ CD ]
Line_8 $$ InputSupplier<InputStream> urlSupplier = new URLISSupplier(connection)-->Line_9 $$ CharStreams.newReaderSupplier(urlSupplier, Charsets.UTF_8)[ FD ]
