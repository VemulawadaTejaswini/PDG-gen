Line_0 $$ Entry-->Line_2 $$ //102
public class func [ CD ]
Line_2 $$ //102
public class func -->Line_3 $$ public void testHeaders() [ CD ]
Line_3 $$ public void testHeaders() -->Line_4 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")[ CD ]
Line_3 $$ public void testHeaders() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testHeaders() -->Line_6 $$ conn.addRequestProperty("X-SetHeaders", "Location: /abcd|X-Dummy: none")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.addRequestProperty("X-SetHeaders", "Location: /abcd|X-Dummy: none")[ FD ]
Line_3 $$ public void testHeaders() -->Line_7 $$ conn.connect()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.connect()[ FD ]
Line_3 $$ public void testHeaders() -->Line_8 $$ assertEquals(200, conn.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void testHeaders() -->Line_9 $$ assertEquals("OK", conn.getResponseMessage())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getResponseMessage()[ FD ]
Line_3 $$ public void testHeaders() -->Line_10 $$ assertEquals("/abcd", conn.getHeaderField("Location"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getHeaderField("Location")[ FD ]
Line_3 $$ public void testHeaders() -->Line_11 $$ assertEquals("none", conn.getHeaderField("X-Dummy"))[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getHeaderField("X-Dummy")[ FD ]
