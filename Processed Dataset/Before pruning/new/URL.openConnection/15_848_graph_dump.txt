Line_0 $$ Entry-->Line_2 $$ //14
public class func [ CD ]
Line_2 $$ //14
public class func -->Line_3 $$ public void getResourceAsStream(String resourceName, ClassLoader callingClass, boolean useCache) [ CD ]
Line_3 $$ public void getResourceAsStream(String resourceName, ClassLoader callingClass, boolean useCache) -->Line_4 $$ URL url = getResourceUrl(resourceName, callingClass)[ CD ]
Line_4 $$ URL url = getResourceUrl(resourceName, callingClass)-->Line_4 $$ getResourceUrl(resourceName, callingClass)[ CD ]
Line_3 $$ public void getResourceAsStream(String resourceName, ClassLoader callingClass, boolean useCache) -->Line_5 $$ if (url != null) [ CD ]
Line_4 $$ URL url = getResourceUrl(resourceName, callingClass)-->Line_5 $$ if (url != null) [ FD ]
Line_5 $$ if (url != null) -->Line_6 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_6 $$ URLConnection urlConnection = url.openConnection()-->Line_6 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = getResourceUrl(resourceName, callingClass)-->Line_6 $$ url.openConnection()[ FD ]
Line_5 $$ if (url != null) -->Line_7 $$ urlConnection.setUseCaches(useCache)[ CD ]
Line_6 $$ URLConnection urlConnection = url.openConnection()-->Line_7 $$ urlConnection.setUseCaches(useCache)[ FD ]
Line_5 $$ if (url != null) -->Line_8 $$ return urlConnection.getInputStream();[ CD ]
Line_8 $$ return urlConnection.getInputStream();-->Line_8 $$ urlConnection.getInputStream()[ CD ]
Line_6 $$ URLConnection urlConnection = url.openConnection()-->Line_8 $$ urlConnection.getInputStream()[ FD ]
