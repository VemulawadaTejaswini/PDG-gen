Line_0 $$ Entry-->Line_2 $$ //67
public class func [ CD ]
Line_2 $$ //67
public class func -->Line_3 $$ public void call() [ CD ]
Line_3 $$ public void call() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ public void call() -->Line_6 $$ conn.setRequestProperty(RMWebServices.DELEGATION_TOKEN_HEADER, tokenString)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.setRequestProperty(RMWebServices.DELEGATION_TOKEN_HEADER, tokenString)[ FD ]
Line_3 $$ public void call() -->Line_8 $$ setupConn(conn, "DELETE", null, null)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ setupConn(conn, "DELETE", null, null)[ FD ]
Line_3 $$ public void call() -->Line_9 $$ InputStream response = conn.getInputStream()[ CD ]
Line_9 $$ InputStream response = conn.getInputStream()-->Line_9 $$ conn.getInputStream()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void call() -->Line_10 $$ assertEquals(Status.OK.getStatusCode(), conn.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getResponseCode()[ FD ]
