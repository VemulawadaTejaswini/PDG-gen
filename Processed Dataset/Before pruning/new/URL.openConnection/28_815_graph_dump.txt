Line_0 $$ Entry-->Line_2 $$ //27
public class func [ CD ]
Line_2 $$ //27
public class func -->Line_3 $$ public void testCallIndexPage() [ CD ]
Line_3 $$ public void testCallIndexPage() -->Line_4 $$ URL url = new URL(this.baseUrl)[ CD ]
Line_3 $$ public void testCallIndexPage() -->Line_5 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL(this.baseUrl)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testCallIndexPage() -->Line_6 $$ connection.setRequestProperty("Authorization", "bearer 74eccf5f-0995-4e1c-b08c-d05dd5a0f89b")[ CD ]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_6 $$ connection.setRequestProperty("Authorization", "bearer 74eccf5f-0995-4e1c-b08c-d05dd5a0f89b")[ FD ]
Line_3 $$ public void testCallIndexPage() -->Line_7 $$ connection.connect()[ CD ]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_7 $$ connection.connect()[ FD ]
Line_3 $$ public void testCallIndexPage() -->Line_8 $$ assertEquals(200, connection.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_8 $$ connection.getResponseCode()[ FD ]
Line_3 $$ public void testCallIndexPage() -->Line_9 $$ String output = IOUtils.toString(connection.getInputStream())[ CD ]
Line_9 $$ String output = IOUtils.toString(connection.getInputStream())-->Line_9 $$ IOUtils.toString(connection.getInputStream())[ CD ]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_9 $$ connection.getInputStream()[ FD ]
Line_3 $$ public void testCallIndexPage() -->Line_10 $$ assertTrue(output.contains("emma.blunt"))[ CD ]
Line_9 $$ String output = IOUtils.toString(connection.getInputStream())-->Line_10 $$ output.contains("emma.blunt")[ FD ]
