Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) [ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_4 $$ if (!reload) [ CD ]
Line_4 $$ if (!reload) -->Line_4 $$ !reload[ CD ]
Line_4 $$ if (!reload) -->Line_4 $$ return loader.getResourceAsStream(resourceName);[ CD ]
Line_4 $$ return loader.getResourceAsStream(resourceName);-->Line_4 $$ loader.getResourceAsStream(resourceName)[ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_5 $$ URL url = loader.getResource(resourceName)[ CD ]
Line_5 $$ URL url = loader.getResource(resourceName)-->Line_5 $$ loader.getResource(resourceName)[ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_6 $$ if (url == null) [ CD ]
Line_5 $$ URL url = loader.getResource(resourceName)-->Line_6 $$ if (url == null) [ FD ]
Line_6 $$ if (url == null) -->Line_6 $$ return null;[ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_7 $$ url.openConnection()[ CD ]
Line_5 $$ URL url = loader.getResource(resourceName)-->Line_7 $$ url.openConnection()[ FD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_8 $$ if (connection == null) [ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_8 $$ if (connection == null) [ FD ]
Line_8 $$ if (connection == null) -->Line_8 $$ return null;[ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_9 $$ connection.setUseCaches(false)[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_9 $$ connection.setUseCaches(false)[ FD ]
Line_3 $$ public void getInputStream(ClassLoader loader, boolean reload, String resourceName) -->Line_10 $$ return connection.getInputStream();[ CD ]
Line_10 $$ return connection.getInputStream();-->Line_10 $$ connection.getInputStream()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_10 $$ connection.getInputStream()[ FD ]
