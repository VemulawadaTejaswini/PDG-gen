Line_0 $$ Entry-->Line_2 $$ //18
public class func [ CD ]
Line_2 $$ //18
public class func -->Line_3 $$ public void awsApiCall(String url) [ CD ]
Line_3 $$ public void awsApiCall(String url) -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()[ CD ]
Line_3 $$ public void awsApiCall(String url) -->Line_5 $$ conn.setRequestMethod("GET")[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_5 $$ conn.setRequestMethod("GET")[ FD ]
Line_3 $$ public void awsApiCall(String url) -->Line_6 $$ if (conn.getResponseCode() != 200)
    throw new ConfigurationException("Ec2Snitch was unable to execute the API call. Not an ec2 node?");[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_6 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void awsApiCall(String url) -->Line_8 $$ int cl = conn.getContentLength()[ CD ]
Line_8 $$ int cl = conn.getContentLength()-->Line_8 $$ conn.getContentLength()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_8 $$ conn.getContentLength()[ FD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_9 $$ conn.getContent()[ FD ]
Line_3 $$ public void awsApiCall(String url) -->Line_10 $$ d.readFully(b)[ CD ]
Line_3 $$ public void awsApiCall(String url) -->Line_11 $$ return new String(b, StandardCharsets.UTF_8);[ CD ]
Line_3 $$ public void awsApiCall(String url) -->Line_12 $$ FileUtils.close(d)[ CD ]
Line_3 $$ public void awsApiCall(String url) -->Line_13 $$ conn.disconnect()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection()-->Line_13 $$ conn.disconnect()[ FD ]
