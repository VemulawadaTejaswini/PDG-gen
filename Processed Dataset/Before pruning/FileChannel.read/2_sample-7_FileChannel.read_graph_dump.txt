Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testXiphLacing() [ CD ]
Line_2 $$ public void testXiphLacing() -->Line_3 $$ FileInputStream fileInputStream = new FileInputStream(file)[ CD ]
Line_2 $$ public void testXiphLacing() -->Line_4 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())[ CD ]
Line_4 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())-->Line_4 $$ ByteBuffer.allocate(fileInputStream.available())[ CD ]
Line_3 $$ FileInputStream fileInputStream = new FileInputStream(file)-->Line_4 $$ fileInputStream.available()[ FD ]
Line_2 $$ public void testXiphLacing() -->Line_5 $$ FileChannel channel = fileInputStream.getChannel()[ CD ]
Line_5 $$ FileChannel channel = fileInputStream.getChannel()-->Line_5 $$ fileInputStream.getChannel()[ CD ]
Line_3 $$ FileInputStream fileInputStream = new FileInputStream(file)-->Line_5 $$ fileInputStream.getChannel()[ FD ]
Line_2 $$ public void testXiphLacing() -->Line_6 $$ channel.position(be.dataOffset)[ CD ]
Line_5 $$ FileChannel channel = fileInputStream.getChannel()-->Line_6 $$ channel.position(be.dataOffset)[ FD ]
Line_2 $$ public void testXiphLacing() -->Line_7 $$ channel.read(source)[ CD ]
Line_5 $$ FileChannel channel = fileInputStream.getChannel()-->Line_7 $$ channel.read(source)[ FD ]
Line_4 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())-->Line_7 $$ channel.read(source)[ FD ]
Line_2 $$ public void testXiphLacing() -->Line_8 $$ source.flip()[ CD ]
Line_4 $$ ByteBuffer source = ByteBuffer.allocate(fileInputStream.available())-->Line_8 $$ source.flip()[ FD ]
