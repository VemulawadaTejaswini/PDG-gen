Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testFileChannelByLine() [ CD ]
Line_2 $$ public void testFileChannelByLine() -->Line_3 $$ do [ CD ]
Line_2 $$ public void testFileChannelByLine() -->Line_2 $$ public void testFileChannelByLine() [ CD ]
Line_3 $$ do -->Line_4 $$ int rd = in.read(buf)[ CD ]
Line_4 $$ int rd = in.read(buf)-->Line_4 $$ in.read(buf)[ CD ]
Line_3 $$ do -->Line_6 $$ buf.flip()[ CD ]
Line_3 $$ do -->Line_7 $$ int start = buf.position()[ CD ]
Line_7 $$ int start = buf.position()-->Line_7 $$ buf.position()[ CD ]
Line_3 $$ do -->Line_8 $$ buf.mark()[ CD ]
Line_3 $$ do -->Line_9 $$ while (buf.hasRemaining()) [ CD ]
Line_3 $$ do -->Line_3 $$ do [ CD ]
Line_9 $$ while (buf.hasRemaining()) -->Line_9 $$ buf.hasRemaining()[ CD ]
Line_9 $$ while (buf.hasRemaining()) -->Line_10 $$ byte b = buf.get()[ CD ]
Line_10 $$ byte b = buf.get()-->Line_10 $$ buf.get()[ CD ]
Line_9 $$ while (buf.hasRemaining()) -->Line_11 $$ if (b == '\n') [ CD ]
Line_10 $$ byte b = buf.get()-->Line_11 $$ if (b == '\n') [ FD ]
Line_11 $$ if (b == '\n') -->Line_12 $$ int end = buf.position()[ CD ]
Line_12 $$ int end = buf.position()-->Line_12 $$ buf.position()[ CD ]
Line_11 $$ if (b == '\n') -->Line_13 $$ int sz = end - start[ CD ]
Line_11 $$ if (b == '\n') -->Line_14 $$ byte[] body = new byte[sz][ CD ]
Line_11 $$ if (b == '\n') -->Line_15 $$ buf.reset()[ CD ]
Line_11 $$ if (b == '\n') -->Line_16 $$ buf.get(body, 0, sz - 1)[ CD ]
Line_14 $$ byte[] body = new byte[sz]-->Line_16 $$ buf.get(body, 0, sz - 1)[ FD ]
Line_11 $$ if (b == '\n') -->Line_17 $$ buf.get()[ CD ]
Line_11 $$ if (b == '\n') -->Line_18 $$ buf.mark()[ CD ]
Line_11 $$ if (b == '\n') -->Line_19 $$ start = buf.position()[ CD ]
Line_19 $$ start = buf.position()-->Line_19 $$ start = buf.position()[ FD ]
Line_7 $$ int start = buf.position()-->Line_19 $$ start = buf.position()[ FD ]
Line_19 $$ start = buf.position()-->Line_19 $$ buf.position()[ CD ]
Line_11 $$ if (b == '\n') -->Line_20 $$ String s = new String(body)[ CD ]
Line_11 $$ if (b == '\n') -->Line_21 $$ LOG.info("=> " + s)[ CD ]
Line_3 $$ do -->Line_24 $$ buf.clear()[ CD ]
Line_3 $$ do -->Line_26 $$ !done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_26 $$ !done.await(5, TimeUnit.MILLISECONDS)-->Line_26 $$ done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_2 $$ public void testFileChannelByLine() -->Line_27 $$ LOG.info("read " + read + " bytes in " + loops + " iterations")[ CD ]
Line_2 $$ public void testFileChannelByLine() -->Line_28 $$ in.close()[ CD ]
Line_2 $$ public void testFileChannelByLine() -->Line_29 $$ assertEquals(790, read)[ CD ]
Line_10 $$ byte b = buf.get()-->Line_11 $$ if (b == '\n') [ FD ]
Line_14 $$ byte[] body = new byte[sz]-->Line_16 $$ buf.get(body, 0, sz - 1)[ FD ]
