Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void load(String prvkey, String pubkey) [ CD ]
Line_2 $$ public void load(String prvkey, String pubkey) -->Line_3 $$ if (pubkey != null) [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_11 $$ boolean valid = true[ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_13 $$ do [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_16 $$ if (buf.length <= i) [ CD ]
Line_16 $$ if (buf.length <= i) -->Line_17 $$ valid = false[ CD ]
Line_11 $$ boolean valid = true-->Line_17 $$ valid = false[ FD ]
Line_17 $$ valid = false-->Line_17 $$ valid = false[ FD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_19 $$ while (valid) [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') [ CD ]
Line_19 $$ while (valid) -->Line_20 $$ if (buf[i] == 0x0a) [ CD ]
Line_20 $$ if (buf[i] == 0x0a) -->Line_21 $$ boolean inheader = false[ CD ]
Line_20 $$ if (buf[i] == 0x0a) -->Line_22 $$ for (int j = i + 1; j < buf.length; j++) [ CD ]
Line_20 $$ if (buf[i] == 0x0a) -->Line_20 $$ if (buf[i] == 0x0a) [ CD ]
Line_22 $$ for (int j = i + 1; j < buf.length; j++) -->Line_22 $$ int j = i + 1[ CD ]
Line_22 $$ for (int j = i + 1; j < buf.length; j++) -->Line_22 $$ j++[ CD ]
Line_22 $$ int j = i + 1-->Line_22 $$ j++[ FD ]
Line_22 $$ for (int j = i + 1; j < buf.length; j++) -->Line_23 $$ if (buf[j] == 0x0a) [ CD ]
Line_22 $$ for (int j = i + 1; j < buf.length; j++) -->Line_26 $$ if (buf[j] == ':') [ CD ]
Line_26 $$ if (buf[j] == ':') -->Line_27 $$ inheader = true[ CD ]
Line_27 $$ inheader = true-->Line_27 $$ inheader = true[ FD ]
Line_21 $$ boolean inheader = false-->Line_27 $$ inheader = true[ FD ]
Line_20 $$ if (buf[i] == 0x0a) -->Line_31 $$ if (!inheader) [ CD ]
Line_27 $$ inheader = true-->Line_31 $$ if (!inheader) [ FD ]
Line_21 $$ boolean inheader = false-->Line_31 $$ if (!inheader) [ FD ]
Line_31 $$ if (!inheader) -->Line_31 $$ !inheader[ CD ]
Line_27 $$ inheader = true-->Line_31 $$ !inheader[ FD ]
Line_21 $$ boolean inheader = false-->Line_31 $$ !inheader[ FD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_38 $$ if (buf.length <= i) [ CD ]
Line_38 $$ if (buf.length <= i) -->Line_39 $$ valid = false[ CD ]
Line_11 $$ boolean valid = true-->Line_39 $$ valid = false[ FD ]
Line_17 $$ valid = false-->Line_39 $$ valid = false[ FD ]
Line_39 $$ valid = false-->Line_39 $$ valid = false[ FD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_42 $$ while (valid && i < len) [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') [ CD ]
Line_11 $$ boolean valid = true-->Line_42 $$ while (valid && i < len) [ FD ]
Line_17 $$ valid = false-->Line_42 $$ while (valid && i < len) [ FD ]
Line_39 $$ valid = false-->Line_42 $$ while (valid && i < len) [ FD ]
Line_42 $$ while (valid && i < len) -->Line_43 $$ if (buf[i] == 0x0a) [ CD ]
Line_43 $$ if (buf[i] == 0x0a) -->Line_44 $$ System.arraycopy(buf, i + 1, buf, i, len - i - 1)[ CD ]
Line_42 $$ while (valid && i < len) -->Line_48 $$ if (buf[i] == '-') [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_53 $$ if (valid) [ CD ]
Line_53 $$ if (valid) -->Line_54 $$ Util.fromBase64(buf, start, i - start)[ CD ]
Line_53 $$ if (valid) -->Line_55 $$ if (type == KeyType.UNKNOWN) [ CD ]
Line_55 $$ if (type == KeyType.UNKNOWN) -->Line_56 $$ if (publickeyblob[8] == 'd') [ CD ]
Line_56 $$ if (publickeyblob[8] == 'd') -->Line_58 $$ if (publickeyblob[8] == 'r') [ CD ]
Line_9 $$ if (buf.length > 4 && buf[0] == '-' && buf[1] == '-' && buf[2] == '-' && buf[3] == '-') -->Line_64 $$ if (buf[0] == 's' && buf[1] == 's' && buf[2] == 'h' && buf[3] == '-') [ CD ]
Line_64 $$ if (buf[0] == 's' && buf[1] == 's' && buf[2] == 'h' && buf[3] == '-') -->Line_66 $$ while (i < len) [ CD ]
Line_64 $$ if (buf[0] == 's' && buf[1] == 's' && buf[2] == 'h' && buf[3] == '-') -->Line_64 $$ if (buf[0] == 's' && buf[1] == 's' && buf[2] == 'h' && buf[3] == '-') [ CD ]
Line_66 $$ while (i < len) -->Line_67 $$ if (buf[i] == ' ') [ CD ]
Line_64 $$ if (buf[0] == 's' && buf[1] == 's' && buf[2] == 'h' && buf[3] == '-') -->Line_73 $$ if (i < len) [ CD ]
Line_73 $$ if (i < len) -->Line_75 $$ while (i < len) [ CD ]
Line_73 $$ if (i < len) -->Line_73 $$ if (i < len) [ CD ]
Line_75 $$ while (i < len) -->Line_76 $$ if (buf[i] == ' ') [ CD ]
Line_73 $$ if (i < len) -->Line_81 $$ Util.fromBase64(buf, start, i - start)[ CD ]
Line_21 $$ boolean inheader = false-->Line_31 $$ if (!inheader) [ FD ]
Line_21 $$ boolean inheader = false-->Line_31 $$ !inheader[ FD ]
Line_22 $$ int j = i + 1-->Line_22 $$ for (int j = i + 1; j < buf.length; j++) [ FD ]
Line_22 $$ int j = i + 1-->Line_22 $$ for (int j = i + 1; j < buf.length; j++) [ FD ]
Line_22 $$ int j = i + 1-->Line_22 $$ j++[ FD ]
