Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void findString(String filePath, String stringToFind) [ CD ]
Line_2 $$ public void findString(String filePath, String stringToFind) -->Line_3 $$ BufferedReader in = new BufferedReader(new FileReader(filePath))[ CD ]
Line_2 $$ public void findString(String filePath, String stringToFind) -->Line_4 $$ while ((numread = in.read(data, 0, 8096)) != -1) [ CD ]
Line_2 $$ public void findString(String filePath, String stringToFind) -->Line_2 $$ public void findString(String filePath, String stringToFind) [ CD ]
Line_3 $$ BufferedReader in = new BufferedReader(new FileReader(filePath))-->Line_4 $$ in.read(data, 0, 8096)[ FD ]
Line_4 $$ while ((numread = in.read(data, 0, 8096)) != -1) -->Line_5 $$ for (int i = 0; i < numread; i++) [ CD ]
Line_4 $$ while ((numread = in.read(data, 0, 8096)) != -1) -->Line_4 $$ while ((numread = in.read(data, 0, 8096)) != -1) [ CD ]
Line_5 $$ for (int i = 0; i < numread; i++) -->Line_5 $$ int i = 0[ CD ]
Line_5 $$ for (int i = 0; i < numread; i++) -->Line_5 $$ i++[ CD ]
Line_5 $$ int i = 0-->Line_5 $$ i++[ FD ]
Line_5 $$ for (int i = 0; i < numread; i++) -->Line_11 $$ /* If we have found the string already or if we our current[ CD ]
Line_11 $$ /* If we have found the string already or if we our current-->Line_12 $$ if (result == null) [ CD ]
Line_11 $$ /* If we have found the string already or if we our current-->Line_15 $$ if (Character.isISOControl(data[i])) [ CD ]
Line_15 $$ if (Character.isISOControl(data[i])) -->Line_15 $$ Character.isISOControl(data[i])[ CD ]
Line_15 $$ if (Character.isISOControl(data[i])) -->Line_16 $$ return result.toString();[ CD ]
Line_16 $$ return result.toString();-->Line_16 $$ result.toString()[ CD ]
Line_11 $$ /* If we have found the string already or if we our current-->Line_18 $$ result.append(data[i])[ CD ]
Line_11 $$ /* If we have found the string already or if we our current-->Line_32 $$ /* Otherwise things can get complex.  If we haven't[ CD ]
Line_32 $$ /* Otherwise things can get complex.  If we haven't-->Line_33 $$ if (data[i] != lastchar) [ CD ]
Line_32 $$ /* Otherwise things can get complex.  If we haven't-->Line_39 $$ i--[ CD ]
Line_5 $$ int i = 0-->Line_39 $$ i--[ FD ]
Line_32 $$ /* Otherwise things can get complex.  If we haven't-->Line_40 $$ result.deleteCharAt(result.length() - 1)[ CD ]
Line_5 $$ int i = 0-->Line_5 $$ for (int i = 0; i < numread; i++) [ FD ]
Line_5 $$ int i = 0-->Line_5 $$ for (int i = 0; i < numread; i++) [ FD ]
Line_5 $$ int i = 0-->Line_5 $$ i++[ FD ]
Line_5 $$ int i = 0-->Line_39 $$ i--[ FD ]
