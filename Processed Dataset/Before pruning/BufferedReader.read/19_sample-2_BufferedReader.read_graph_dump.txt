Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) [ CD ]
Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_3 $$ log(Level.TRACE, "status code: %d", statuscode)[ CD ]
Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_4 $$ if ((statuscode != 200 && statuscode != 500) || size < 1) [ CD ]
Line_4 $$ if ((statuscode != 200 && statuscode != 500) || size < 1) -->Line_5 $$ log(Level.ERROR, "communication error, code: %d, byte expected: %d", statuscode, size)[ CD ]
Line_4 $$ if ((statuscode != 200 && statuscode != 500) || size < 1) -->Line_6 $$ return new BufferedReader(new CharArrayReader(new char[0]));[ CD ]
Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_8 $$ int readchar = in.read(cbuf)[ CD ]
Line_8 $$ int readchar = in.read(cbuf)-->Line_8 $$ in.read(cbuf)[ CD ]
Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_9 $$ if (readchar != size) [ CD ]
Line_8 $$ int readchar = in.read(cbuf)-->Line_9 $$ if (readchar != size) [ FD ]
Line_9 $$ if (readchar != size) -->Line_10 $$ log(Level.ERROR, "read failed, not enough byte, got %d expected %d", readchar, size)[ CD ]
Line_8 $$ int readchar = in.read(cbuf)-->Line_10 $$ log(Level.ERROR, "read failed, not enough byte, got %d expected %d", readchar, size)[ FD ]
Line_9 $$ if (readchar != size) -->Line_11 $$ return new BufferedReader(new CharArrayReader(new char[0]));[ CD ]
Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_13 $$ in.readLine()[ CD ]
Line_2 $$ public void getAnswer(BufferedReader in, PrintWriter out, String command) -->Line_14 $$ return new BufferedReader(new CharArrayReader(cbuf));[ CD ]
