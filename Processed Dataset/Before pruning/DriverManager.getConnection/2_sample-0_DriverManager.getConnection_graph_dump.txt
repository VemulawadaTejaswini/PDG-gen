Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testReadOnly() [ CD ]
Line_2 $$ public void testReadOnly() -->Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_3 $$ DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())[ CD ]
Line_2 $$ public void testReadOnly() -->Line_4 $$ assertNotNull(con)[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_4 $$ assertNotNull(con)[ FD ]
Line_2 $$ public void testReadOnly() -->Line_5 $$ assertTrue(con.isReadOnly())[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_5 $$ con.isReadOnly()[ FD ]
Line_2 $$ public void testReadOnly() -->Line_6 $$ con.close()[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_6 $$ con.close()[ FD ]
Line_2 $$ public void testReadOnly() -->Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_7 $$ DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())[ CD ]
Line_2 $$ public void testReadOnly() -->Line_8 $$ assertNotNull(con)[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_8 $$ assertNotNull(con)[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_8 $$ assertNotNull(con)[ FD ]
Line_2 $$ public void testReadOnly() -->Line_9 $$ assertFalse(con.isReadOnly())[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_9 $$ con.isReadOnly()[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_9 $$ con.isReadOnly()[ FD ]
Line_2 $$ public void testReadOnly() -->Line_10 $$ con.close()[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_10 $$ con.close()[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_10 $$ con.close()[ FD ]
Line_2 $$ public void testReadOnly() -->Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())[ FD ]
Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())-->Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())[ FD ]
Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())-->Line_11 $$ DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())[ CD ]
Line_2 $$ public void testReadOnly() -->Line_12 $$ assertNotNull(con)[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_12 $$ assertNotNull(con)[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_12 $$ assertNotNull(con)[ FD ]
Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())-->Line_12 $$ assertNotNull(con)[ FD ]
Line_2 $$ public void testReadOnly() -->Line_13 $$ assertFalse(con.isReadOnly())[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_13 $$ con.isReadOnly()[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_13 $$ con.isReadOnly()[ FD ]
Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())-->Line_13 $$ con.isReadOnly()[ FD ]
Line_2 $$ public void testReadOnly() -->Line_14 $$ con.close()[ CD ]
Line_3 $$ Connection con = DriverManager.getConnection(TestUtil.getURL("readOnly", true), TestUtil.getUser(), TestUtil.getPassword())-->Line_14 $$ con.close()[ FD ]
Line_7 $$ con = DriverManager.getConnection(TestUtil.getURL("readOnly", false), TestUtil.getUser(), TestUtil.getPassword())-->Line_14 $$ con.close()[ FD ]
Line_11 $$ con = DriverManager.getConnection(TestUtil.getURL(), TestUtil.getUser(), TestUtil.getPassword())-->Line_14 $$ con.close()[ FD ]
