Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) [ CD ]
Line_2 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) -->Line_3 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_3 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_3 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_2 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) -->Line_4 $$ Statement s = c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)[ CD ]
Line_4 $$ Statement s = c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)-->Line_4 $$ c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)[ CD ]
Line_3 $$ Connection c = DriverManager.getConnection("jdbc:default:connection")-->Line_4 $$ c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)[ FD ]
Line_2 $$ public void getResultSetWithHoldability(int holdability, ResultSet[] rs) -->Line_7 $$ rs[0] = s.executeQuery("values (1), (2), (3)")[ CD ]
Line_7 $$ rs[0] = s.executeQuery("values (1), (2), (3)")-->Line_7 $$ s.executeQuery("values (1), (2), (3)")[ CD ]
Line_4 $$ Statement s = c.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, holdability)-->Line_7 $$ s.executeQuery("values (1), (2), (3)")[ FD ]
