Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void simpleTypeAtRootProducesNoJavaTypes() [ CD ]
Line_2 $$ public void simpleTypeAtRootProducesNoJavaTypes() -->Line_3 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))[ CD ]
Line_3 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))-->Line_3 $$ generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))[ CD ]
Line_2 $$ public void simpleTypeAtRootProducesNoJavaTypes() -->Line_5 $$ resultsClassLoader.loadClass("com.example.SimpleTypeAsRoot")[ CD ]
Line_3 $$ ClassLoader resultsClassLoader = generateAndCompile("/json/simpleTypeAsRoot.json", "com.example", config("sourceType", "json"))-->Line_5 $$ resultsClassLoader.loadClass("com.example.SimpleTypeAsRoot")[ FD ]
