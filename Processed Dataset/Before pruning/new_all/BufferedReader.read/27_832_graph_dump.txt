Line_0 $$ Entry-->Line_2 $$ //26
public class func [ CD ]
Line_2 $$ //26
public class func -->Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) [ CD ]
Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) -->Line_4 $$ if (!logfile.exists())
    return "";[ CD ]
Line_4 $$ if (!logfile.exists())
    return "";-->Line_4 $$ !logfile.exists()[ CD ]
Line_4 $$ !logfile.exists()-->Line_4 $$ logfile.exists()[ CD ]
Line_4 $$ if (!logfile.exists())
    return "";-->Line_5 $$ return "";[ CD ]
Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) -->Line_6 $$ StringBuilder str = new StringBuilder((int) logfile.length())[ CD ]
Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) -->Line_7 $$ BufferedReader r = new BufferedReader(new InputStreamReader(new FileInputStream(logfile), charset))[ CD ]
Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) -->Line_8 $$ while ((len = r.read(buf, 0, buf.length)) > 0) str.append(buf, 0, len);[ CD ]
Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) -->Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) [ CD ]
Line_7 $$ BufferedReader r = new BufferedReader(new InputStreamReader(new FileInputStream(logfile), charset))-->Line_8 $$ r.read(buf, 0, buf.length)[ FD ]
Line_8 $$ while ((len = r.read(buf, 0, buf.length)) > 0) str.append(buf, 0, len);-->Line_9 $$ str.append(buf, 0, len)[ CD ]
Line_6 $$ StringBuilder str = new StringBuilder((int) logfile.length())-->Line_9 $$ str.append(buf, 0, len)[ FD ]
Line_3 $$ public void loadFile(@Nonnull File logfile, @Nonnull Charset charset) -->Line_10 $$ r.close()[ CD ]
Line_7 $$ BufferedReader r = new BufferedReader(new InputStreamReader(new FileInputStream(logfile), charset))-->Line_10 $$ r.close()[ FD ]
