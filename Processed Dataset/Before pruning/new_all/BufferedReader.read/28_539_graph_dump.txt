Line_0 $$ Entry-->Line_2 $$ //27
public class func [ CD ]
Line_2 $$ //27
public class func -->Line_3 $$ public void getCodeLines(final IFile file) [ CD ]
Line_3 $$ public void getCodeLines(final IFile file) -->Line_4 $$ while ((n = reader.read(readBuffer)) > 0) [ CD ]
Line_3 $$ public void getCodeLines(final IFile file) -->Line_3 $$ public void getCodeLines(final IFile file) [ CD ]
Line_4 $$ while ((n = reader.read(readBuffer)) > 0) -->Line_5 $$ buffer.append(readBuffer, 0, n)[ CD ]
Line_3 $$ public void getCodeLines(final IFile file) -->Line_7 $$ final IContentType contentType = IDE.getContentType(file)[ CD ]
Line_7 $$ final IContentType contentType = IDE.getContentType(file)-->Line_7 $$ IDE.getContentType(file)[ CD ]
Line_3 $$ public void getCodeLines(final IFile file) -->Line_8 $$ final ICodeSubmitContentHandler handler = RCodeLaunching.getCodeSubmitContentHandler((contentType != null) ? contentType.getId() : null)[ CD ]
Line_8 $$ final ICodeSubmitContentHandler handler = RCodeLaunching.getCodeSubmitContentHandler((contentType != null) ? contentType.getId() : null)-->Line_8 $$ RCodeLaunching.getCodeSubmitContentHandler((contentType != null) ? contentType.getId() : null)[ CD ]
Line_7 $$ final IContentType contentType = IDE.getContentType(file)-->Line_9 $$ contentType.getId()[ FD ]
