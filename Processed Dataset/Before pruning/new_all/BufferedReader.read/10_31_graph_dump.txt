Line_0 $$ Entry-->Line_2 $$ //9
public class func [ CD ]
Line_2 $$ //9
public class func -->Line_3 $$ public void readFileToString(String fileName) [ CD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_4 $$ if (fileName.equals(ERROR_OUTPUT)) [ CD ]
Line_4 $$ if (fileName.equals(ERROR_OUTPUT)) -->Line_4 $$ fileName.equals(ERROR_OUTPUT)[ CD ]
Line_4 $$ if (fileName.equals(ERROR_OUTPUT)) -->Line_5 $$ return getErrorOutput();[ CD ]
Line_5 $$ return getErrorOutput();-->Line_5 $$ getErrorOutput()[ CD ]
Line_4 $$ if (fileName.equals(ERROR_OUTPUT)) -->Line_6 $$ if (fileName.equals(NOTICE_OUTPUT)) [ CD ]
Line_6 $$ if (fileName.equals(NOTICE_OUTPUT)) -->Line_6 $$ fileName.equals(NOTICE_OUTPUT)[ CD ]
Line_6 $$ if (fileName.equals(NOTICE_OUTPUT)) -->Line_7 $$ return getNoticeOutput();[ CD ]
Line_7 $$ return getNoticeOutput();-->Line_7 $$ getNoticeOutput()[ CD ]
Line_6 $$ if (fileName.equals(NOTICE_OUTPUT)) -->Line_8 $$ if (fileName.equals(WARNING_OUTPUT)) [ CD ]
Line_8 $$ if (fileName.equals(WARNING_OUTPUT)) -->Line_8 $$ fileName.equals(WARNING_OUTPUT)[ CD ]
Line_8 $$ if (fileName.equals(WARNING_OUTPUT)) -->Line_9 $$ return getWarningOutput();[ CD ]
Line_9 $$ return getWarningOutput();-->Line_9 $$ getWarningOutput()[ CD ]
Line_8 $$ if (fileName.equals(WARNING_OUTPUT)) -->Line_10 $$ if (fileName.equals(STANDARD_OUTPUT)) [ CD ]
Line_10 $$ if (fileName.equals(STANDARD_OUTPUT)) -->Line_10 $$ fileName.equals(STANDARD_OUTPUT)[ CD ]
Line_10 $$ if (fileName.equals(STANDARD_OUTPUT)) -->Line_11 $$ return getStandardOutput();[ CD ]
Line_11 $$ return getStandardOutput();-->Line_11 $$ getStandardOutput()[ CD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_13 $$ File file = new File(fileName)[ CD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_14 $$ if (!file.exists()) [ CD ]
Line_14 $$ if (!file.exists()) -->Line_14 $$ !file.exists()[ CD ]
Line_14 $$ !file.exists()-->Line_14 $$ file.exists()[ CD ]
Line_13 $$ File file = new File(fileName)-->Line_14 $$ file.exists()[ FD ]
Line_14 $$ if (!file.exists()) -->Line_15 $$ System.out.println("\n" + "FILE DOES NOT EXIST: " + fileName)[ CD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_17 $$ BufferedReader in = new BufferedReader(new FileReader(file))[ CD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_18 $$ char[] allChars = new char[(int) file.length()][ CD ]
Line_13 $$ File file = new File(fileName)-->Line_18 $$ file.length()[ FD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_19 $$ in.read(allChars, 0, (int) file.length())[ CD ]
Line_17 $$ BufferedReader in = new BufferedReader(new FileReader(file))-->Line_19 $$ in.read(allChars, 0, (int) file.length())[ FD ]
Line_18 $$ char[] allChars = new char[(int) file.length()]-->Line_19 $$ in.read(allChars, 0, (int) file.length())[ FD ]
Line_13 $$ File file = new File(fileName)-->Line_19 $$ file.length()[ FD ]
Line_3 $$ public void readFileToString(String fileName) -->Line_20 $$ in.close()[ CD ]
Line_17 $$ BufferedReader in = new BufferedReader(new FileReader(file))-->Line_20 $$ in.close()[ FD ]
