Line_0 $$ Entry-->Line_2 $$ //167
public class func [ CD ]
Line_2 $$ //167
public class func -->Line_3 $$ public void testOpenRequestClose() [ CD ]
Line_3 $$ public void testOpenRequestClose() -->Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))[ CD ]
Line_3 $$ public void testOpenRequestClose() -->Line_5 $$ SimpleHttpResponse response = httpParser.readResponse(reader)[ CD ]
Line_5 $$ SimpleHttpResponse response = httpParser.readResponse(reader)-->Line_5 $$ httpParser.readResponse(reader)[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))-->Line_5 $$ httpParser.readResponse(reader)[ FD ]
Line_3 $$ public void testOpenRequestClose() -->Line_6 $$ Assert.assertEquals("200", response.getCode())[ CD ]
Line_5 $$ SimpleHttpResponse response = httpParser.readResponse(reader)-->Line_6 $$ response.getCode()[ FD ]
Line_3 $$ public void testOpenRequestClose() -->Line_7 $$ Assert.assertEquals(-1, reader.read())[ CD ]
Line_4 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))-->Line_7 $$ reader.read()[ FD ]
Line_3 $$ public void testOpenRequestClose() -->Line_8 $$ socket.close()[ CD ]
