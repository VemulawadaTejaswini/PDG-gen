Line_0 $$ Entry-->Line_2 $$ //28
public class func [ CD ]
Line_2 $$ //28
public class func -->Line_3 $$ public void findApplets(URL u) [ CD ]
Line_3 $$ public void findApplets(URL u) -->Line_5 $$ while ((i = inrdr.read()) != -1) [ CD ]
Line_3 $$ public void findApplets(URL u) -->Line_3 $$ public void findApplets(URL u) [ CD ]
Line_5 $$ while ((i = inrdr.read()) != -1) -->Line_7 $$ if (thisChar == '<') [ CD ]
Line_7 $$ if (thisChar == '<') -->Line_8 $$ String tag = readTag(inrdr)[ CD ]
Line_8 $$ String tag = readTag(inrdr)-->Line_8 $$ readTag(inrdr)[ CD ]
Line_7 $$ if (thisChar == '<') -->Line_10 $$ // System.out.println("TAG: " + tag);
if (tag.toUpperCase().startsWith("<APPLET"))
    list.add(tag);[ CD ]
Line_10 $$ // System.out.println("TAG: " + tag);
if (tag.toUpperCase().startsWith("<APPLET"))
    list.add(tag);-->Line_10 $$ tag.toUpperCase().startsWith("<APPLET")[ CD ]
Line_8 $$ String tag = readTag(inrdr)-->Line_10 $$ tag.toUpperCase()[ FD ]
Line_10 $$ // System.out.println("TAG: " + tag);
if (tag.toUpperCase().startsWith("<APPLET"))
    list.add(tag);-->Line_11 $$ list.add(tag)[ CD ]
Line_8 $$ String tag = readTag(inrdr)-->Line_11 $$ list.add(tag)[ FD ]
Line_3 $$ public void findApplets(URL u) -->Line_14 $$ inrdr.close()[ CD ]
Line_8 $$ String tag = readTag(inrdr)-->Line_10 $$ tag.toUpperCase()[ FD ]
Line_8 $$ String tag = readTag(inrdr)-->Line_11 $$ list.add(tag)[ FD ]
