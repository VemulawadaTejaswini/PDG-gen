Line_0 $$ Entry-->Line_2 $$ //36
public class func [ CD ]
Line_2 $$ //36
public class func -->Line_3 $$ public void testHappyPath() [ CD ]
Line_3 $$ public void testHappyPath() -->Line_4 $$ while ((c = in.read()) != -1) [ CD ]
Line_3 $$ public void testHappyPath() -->Line_3 $$ public void testHappyPath() [ CD ]
Line_4 $$ while ((c = in.read()) != -1) -->Line_5 $$ str.append((char) c)[ CD ]
Line_3 $$ public void testHappyPath() -->Line_7 $$ String response = str.toString()[ CD ]
Line_7 $$ String response = str.toString()-->Line_7 $$ str.toString()[ CD ]
Line_3 $$ public void testHappyPath() -->Line_8 $$ assertEquals(sourceMessage, response)[ CD ]
Line_7 $$ String response = str.toString()-->Line_8 $$ assertEquals(sourceMessage, response)[ FD ]
