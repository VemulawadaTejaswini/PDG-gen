Line_0 $$ Entry-->Line_2 $$ //13
public class func [ CD ]
Line_2 $$ //13
public class func -->Line_3 $$ public void testFileChannelByLine() [ CD ]
Line_3 $$ public void testFileChannelByLine() -->Line_4 $$ do [ CD ]
Line_3 $$ public void testFileChannelByLine() -->Line_3 $$ public void testFileChannelByLine() [ CD ]
Line_4 $$ do -->Line_5 $$ int rd = in.read(buf)[ CD ]
Line_5 $$ int rd = in.read(buf)-->Line_5 $$ in.read(buf)[ CD ]
Line_4 $$ do -->Line_7 $$ buf.flip()[ CD ]
Line_4 $$ do -->Line_9 $$ int start = buf.position()[ CD ]
Line_9 $$ int start = buf.position()-->Line_9 $$ buf.position()[ CD ]
Line_4 $$ do -->Line_10 $$ buf.mark()[ CD ]
Line_4 $$ do -->Line_11 $$ while (buf.hasRemaining()) [ CD ]
Line_4 $$ do -->Line_4 $$ do [ CD ]
Line_11 $$ while (buf.hasRemaining()) -->Line_11 $$ buf.hasRemaining()[ CD ]
Line_11 $$ while (buf.hasRemaining()) -->Line_12 $$ byte b = buf.get()[ CD ]
Line_12 $$ byte b = buf.get()-->Line_12 $$ buf.get()[ CD ]
Line_11 $$ while (buf.hasRemaining()) -->Line_13 $$ if (b == '\n') [ CD ]
Line_12 $$ byte b = buf.get()-->Line_13 $$ if (b == '\n') [ FD ]
Line_13 $$ if (b == '\n') -->Line_14 $$ int end = buf.position()[ CD ]
Line_14 $$ int end = buf.position()-->Line_14 $$ buf.position()[ CD ]
Line_13 $$ if (b == '\n') -->Line_15 $$ int sz = end - start[ CD ]
Line_13 $$ if (b == '\n') -->Line_16 $$ byte[] body = new byte[sz][ CD ]
Line_13 $$ if (b == '\n') -->Line_17 $$ buf.reset()[ CD ]
Line_13 $$ if (b == '\n') -->Line_18 $$ buf.get(body, 0, sz - 1)[ CD ]
Line_16 $$ byte[] body = new byte[sz]-->Line_18 $$ buf.get(body, 0, sz - 1)[ FD ]
Line_13 $$ if (b == '\n') -->Line_19 $$ buf.get()[ CD ]
Line_13 $$ if (b == '\n') -->Line_20 $$ buf.mark()[ CD ]
Line_13 $$ if (b == '\n') -->Line_21 $$ start = buf.position()[ CD ]
Line_21 $$ start = buf.position()-->Line_21 $$ start = buf.position()[ FD ]
Line_9 $$ int start = buf.position()-->Line_21 $$ start = buf.position()[ FD ]
Line_21 $$ start = buf.position()-->Line_21 $$ buf.position()[ CD ]
Line_13 $$ if (b == '\n') -->Line_22 $$ String s = new String(body)[ CD ]
Line_13 $$ if (b == '\n') -->Line_23 $$ LOG.info("=> " + s)[ CD ]
Line_4 $$ do -->Line_27 $$ buf.clear()[ CD ]
Line_4 $$ do -->Line_29 $$ !done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_29 $$ !done.await(5, TimeUnit.MILLISECONDS)-->Line_29 $$ done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_3 $$ public void testFileChannelByLine() -->Line_30 $$ LOG.info("read " + read + " bytes in " + loops + " iterations")[ CD ]
Line_3 $$ public void testFileChannelByLine() -->Line_31 $$ in.close()[ CD ]
Line_3 $$ public void testFileChannelByLine() -->Line_32 $$ assertEquals(790, read)[ CD ]
Line_12 $$ byte b = buf.get()-->Line_13 $$ if (b == '\n') [ FD ]
Line_16 $$ byte[] body = new byte[sz]-->Line_18 $$ buf.get(body, 0, sz - 1)[ FD ]
