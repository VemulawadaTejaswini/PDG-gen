Line_0 $$ Entry-->Line_2 $$ //25
public class func [ CD ]
Line_2 $$ //25
public class func -->Line_3 $$ public void test1() [ CD ]
Line_3 $$ public void test1() -->Line_4 $$ long bytesRead = fc.read(dstBuffers)[ CD ]
Line_4 $$ long bytesRead = fc.read(dstBuffers)-->Line_4 $$ fc.read(dstBuffers)[ CD ]
Line_3 $$ public void test1() -->Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ CD ]
Line_3 $$ public void test1() -->Line_3 $$ public void test1() [ CD ]
Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_5 $$ int i = 0[ CD ]
Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_5 $$ i++[ CD ]
Line_5 $$ int i = 0-->Line_5 $$ i++[ FD ]
Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) [ CD ]
Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ CD ]
Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_6 $$ int j = 0[ CD ]
Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_6 $$ j++[ CD ]
Line_6 $$ int j = 0-->Line_6 $$ j++[ FD ]
Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_7 $$ byte b = dstBuffers[i].get(j)[ CD ]
Line_7 $$ byte b = dstBuffers[i].get(j)-->Line_7 $$ dstBuffers[i].get(j)[ CD ]
Line_6 $$ int j = 0-->Line_7 $$ dstBuffers[i].get(j)[ FD ]
Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_8 $$ if (b != expectedResult++)
    throw new RuntimeException("Test failed");[ CD ]
Line_7 $$ byte b = dstBuffers[i].get(j)-->Line_8 $$ if (b != expectedResult++)
    throw new RuntimeException("Test failed");[ FD ]
Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_11 $$ dstBuffers[i].flip()[ CD ]
Line_5 $$ int i = 0-->Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ FD ]
Line_5 $$ int i = 0-->Line_5 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ FD ]
Line_5 $$ int i = 0-->Line_5 $$ i++[ FD ]
Line_6 $$ int j = 0-->Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) [ FD ]
Line_6 $$ int j = 0-->Line_6 $$ for (int j = 0; j < BUFFER_CAP; j++) [ FD ]
Line_6 $$ int j = 0-->Line_6 $$ j++[ FD ]
Line_6 $$ int j = 0-->Line_7 $$ dstBuffers[i].get(j)[ FD ]
Line_7 $$ byte b = dstBuffers[i].get(j)-->Line_8 $$ if (b != expectedResult++)
    throw new RuntimeException("Test failed");[ FD ]
