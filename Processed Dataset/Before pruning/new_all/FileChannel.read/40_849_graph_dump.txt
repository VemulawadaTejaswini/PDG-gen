Line_0 $$ Entry-->Line_2 $$ //39
public class func [ CD ]
Line_2 $$ //39
public class func -->Line_3 $$ public void testFileChannelBlockRead() [ CD ]
Line_3 $$ public void testFileChannelBlockRead() -->Line_4 $$ do [ CD ]
Line_3 $$ public void testFileChannelBlockRead() -->Line_3 $$ public void testFileChannelBlockRead() [ CD ]
Line_4 $$ do -->Line_5 $$ int rd = in.read(buf)[ CD ]
Line_5 $$ int rd = in.read(buf)-->Line_5 $$ in.read(buf)[ CD ]
Line_4 $$ do -->Line_7 $$ buf.flip()[ CD ]
Line_4 $$ do -->Line_8 $$ byte[] arr = new byte[buf.remaining()][ CD ]
Line_4 $$ do -->Line_9 $$ buf.get(arr)[ CD ]
Line_8 $$ byte[] arr = new byte[buf.remaining()]-->Line_9 $$ buf.get(arr)[ FD ]
Line_4 $$ do -->Line_10 $$ String s = new String(arr)[ CD ]
Line_4 $$ do -->Line_11 $$ System.out.print(s)[ CD ]
Line_10 $$ String s = new String(arr)-->Line_11 $$ System.out.print(s)[ FD ]
Line_4 $$ do -->Line_12 $$ buf.clear()[ CD ]
Line_4 $$ do -->Line_14 $$ !done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_14 $$ !done.await(5, TimeUnit.MILLISECONDS)-->Line_14 $$ done.await(5, TimeUnit.MILLISECONDS)[ CD ]
Line_3 $$ public void testFileChannelBlockRead() -->Line_15 $$ LOG.info("read " + read + " bytes in " + loops + " iterations")[ CD ]
Line_3 $$ public void testFileChannelBlockRead() -->Line_16 $$ in.close()[ CD ]
Line_3 $$ public void testFileChannelBlockRead() -->Line_17 $$ assertEquals(790, read)[ CD ]
Line_8 $$ byte[] arr = new byte[buf.remaining()]-->Line_9 $$ buf.get(arr)[ FD ]
Line_10 $$ String s = new String(arr)-->Line_11 $$ System.out.print(s)[ FD ]
