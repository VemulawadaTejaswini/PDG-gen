Line_0 $$ Entry-->Line_2 $$ //1
public class func [ CD ]
Line_2 $$ //1
public class func -->Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) [ CD ]
Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_4 $$ long pos = source.position()[ CD ]
Line_4 $$ long pos = source.position()-->Line_4 $$ source.position()[ CD ]
Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_5 $$ long size = source.size()[ CD ]
Line_5 $$ long size = source.size()-->Line_5 $$ source.size()[ CD ]
Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_6 $$ while (size - pos > 0) [ CD ]
Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) [ CD ]
Line_6 $$ while (size - pos > 0) -->Line_7 $$ int ret = source.read(buffer)[ CD ]
Line_7 $$ int ret = source.read(buffer)-->Line_7 $$ source.read(buffer)[ CD ]
Line_6 $$ while (size - pos > 0) -->Line_8 $$ if (ret <= 0) [ CD ]
Line_7 $$ int ret = source.read(buffer)-->Line_8 $$ if (ret <= 0) [ FD ]
Line_6 $$ while (size - pos > 0) -->Line_11 $$ pos += ret[ CD ]
Line_11 $$ pos += ret-->Line_11 $$ pos += ret[ FD ]
Line_4 $$ long pos = source.position()-->Line_11 $$ pos += ret[ FD ]
Line_7 $$ int ret = source.read(buffer)-->Line_11 $$ pos += ret[ FD ]
Line_6 $$ while (size - pos > 0) -->Line_12 $$ buffer.flip()[ CD ]
Line_6 $$ while (size - pos > 0) -->Line_13 $$ if (!writeBuffer(buffer, callback)) [ CD ]
Line_13 $$ if (!writeBuffer(buffer, callback)) -->Line_13 $$ !writeBuffer(buffer, callback)[ CD ]
Line_13 $$ !writeBuffer(buffer, callback)-->Line_13 $$ writeBuffer(buffer, callback)[ CD ]
Line_13 $$ if (!writeBuffer(buffer, callback)) -->Line_14 $$ return;[ CD ]
Line_6 $$ while (size - pos > 0) -->Line_16 $$ buffer.clear()[ CD ]
Line_3 $$ public void performTransfer(FileChannel source, IoCallback callback) -->Line_18 $$ if (pos != size) [ CD ]
Line_11 $$ pos += ret-->Line_18 $$ if (pos != size) [ FD ]
Line_4 $$ long pos = source.position()-->Line_18 $$ if (pos != size) [ FD ]
Line_5 $$ long size = source.size()-->Line_18 $$ if (pos != size) [ FD ]
Line_7 $$ int ret = source.read(buffer)-->Line_8 $$ if (ret <= 0) [ FD ]
Line_7 $$ int ret = source.read(buffer)-->Line_11 $$ pos += ret[ FD ]
