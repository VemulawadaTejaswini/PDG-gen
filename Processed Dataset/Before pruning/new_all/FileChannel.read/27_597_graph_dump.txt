Line_0 $$ Entry-->Line_2 $$ //26
public class func [ CD ]
Line_2 $$ //26
public class func -->Line_3 $$ public void fileCopy(String xmlpath, String newpath) [ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_4 $$ if (inC.position() == inC.size()) [ CD ]
Line_4 $$ if (inC.position() == inC.size()) -->Line_5 $$ inC.close()[ CD ]
Line_4 $$ if (inC.position() == inC.size()) -->Line_6 $$ outC.close()[ CD ]
Line_4 $$ if (inC.position() == inC.size()) -->Line_7 $$ return true;[ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_9 $$ if ((inC.size() - inC.position()) < length) [ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_12 $$ ByteBuffer.allocateDirect(length)[ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_13 $$ inC.read(b)[ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_14 $$ b.flip()[ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_15 $$ outC.write(b)[ CD ]
Line_3 $$ public void fileCopy(String xmlpath, String newpath) -->Line_16 $$ outC.force(false)[ CD ]
