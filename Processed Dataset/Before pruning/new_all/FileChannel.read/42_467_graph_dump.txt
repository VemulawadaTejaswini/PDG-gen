Line_0 $$ Entry-->Line_2 $$ //41
public class func [ CD ]
Line_2 $$ //41
public class func -->Line_3 $$ public void runTransfer(IProgressMonitor monitor) [ CD ]
Line_3 $$ public void runTransfer(IProgressMonitor monitor) -->Line_4 $$ if (fileChannel.read(buffer) == -1)
    break;[ CD ]
Line_3 $$ public void runTransfer(IProgressMonitor monitor) -->Line_6 $$ buffer.flip()[ CD ]
Line_3 $$ public void runTransfer(IProgressMonitor monitor) -->Line_7 $$ while (buffer.remaining() > 0) [ CD ]
Line_3 $$ public void runTransfer(IProgressMonitor monitor) -->Line_3 $$ public void runTransfer(IProgressMonitor monitor) [ CD ]
Line_7 $$ while (buffer.remaining() > 0) -->Line_8 $$ int n = socket.write(buffer)[ CD ]
Line_8 $$ int n = socket.write(buffer)-->Line_8 $$ socket.write(buffer)[ CD ]
Line_7 $$ while (buffer.remaining() > 0) -->Line_10 $$ monitor.worked(n)[ CD ]
Line_8 $$ int n = socket.write(buffer)-->Line_10 $$ monitor.worked(n)[ FD ]
Line_7 $$ while (buffer.remaining() > 0) -->Line_11 $$ monitor.setTaskName("Transfer Probe (" + numberToString(bytesSent) + " of " + numberToString(probeSize) + ")")[ CD ]
Line_3 $$ public void runTransfer(IProgressMonitor monitor) -->Line_14 $$ buffer.clear()[ CD ]
Line_8 $$ int n = socket.write(buffer)-->Line_10 $$ monitor.worked(n)[ FD ]
