Line_0 $$ Entry-->Line_2 $$ //20
public class func [ CD ]
Line_2 $$ //20
public class func -->Line_3 $$ public void read(String name, ByteBuffer dst) [ CD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_4 $$ checkAccess(file.getPathForPermissionCheck(), true, false)[ CD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_5 $$ int fd = file.openForAttributeAccess(followLinks)[ CD ]
Line_5 $$ int fd = file.openForAttributeAccess(followLinks)-->Line_5 $$ file.openForAttributeAccess(followLinks)[ CD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_6 $$ int afd = openat(fd, nameAsBytes(file, name), (O_RDONLY | O_XATTR), 0)[ CD ]
Line_6 $$ int afd = openat(fd, nameAsBytes(file, name), (O_RDONLY | O_XATTR), 0)-->Line_6 $$ openat(fd, nameAsBytes(file, name), (O_RDONLY | O_XATTR), 0)[ CD ]
Line_5 $$ int fd = file.openForAttributeAccess(followLinks)-->Line_6 $$ openat(fd, nameAsBytes(file, name), (O_RDONLY | O_XATTR), 0)[ FD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_7 $$ FileChannel fc = UnixChannelFactory.newFileChannel(afd, true, false)[ CD ]
Line_7 $$ FileChannel fc = UnixChannelFactory.newFileChannel(afd, true, false)-->Line_7 $$ UnixChannelFactory.newFileChannel(afd, true, false)[ CD ]
Line_6 $$ int afd = openat(fd, nameAsBytes(file, name), (O_RDONLY | O_XATTR), 0)-->Line_7 $$ UnixChannelFactory.newFileChannel(afd, true, false)[ FD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_8 $$ if (fc.size() > dst.remaining())
    throw new IOException("Extended attribute file too large");[ CD ]
Line_7 $$ FileChannel fc = UnixChannelFactory.newFileChannel(afd, true, false)-->Line_8 $$ fc.size()[ FD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_10 $$ while (dst.hasRemaining()) [ CD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_3 $$ public void read(String name, ByteBuffer dst) [ CD ]
Line_10 $$ while (dst.hasRemaining()) -->Line_10 $$ dst.hasRemaining()[ CD ]
Line_10 $$ while (dst.hasRemaining()) -->Line_11 $$ int n = fc.read(dst)[ CD ]
Line_11 $$ int n = fc.read(dst)-->Line_11 $$ fc.read(dst)[ CD ]
Line_7 $$ FileChannel fc = UnixChannelFactory.newFileChannel(afd, true, false)-->Line_11 $$ fc.read(dst)[ FD ]
Line_10 $$ while (dst.hasRemaining()) -->Line_12 $$ if (n < 0)
    break;[ CD ]
Line_11 $$ int n = fc.read(dst)-->Line_12 $$ if (n < 0)
    break;[ FD ]
Line_3 $$ public void read(String name, ByteBuffer dst) -->Line_16 $$ fc.close()[ CD ]
Line_7 $$ FileChannel fc = UnixChannelFactory.newFileChannel(afd, true, false)-->Line_16 $$ fc.close()[ FD ]
Line_11 $$ int n = fc.read(dst)-->Line_12 $$ if (n < 0)
    break;[ FD ]
