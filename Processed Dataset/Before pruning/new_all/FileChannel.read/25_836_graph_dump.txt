Line_0 $$ Entry-->Line_2 $$ //24
public class func [ CD ]
Line_2 $$ //24
public class func -->Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() [ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_4 $$ FileChannel fc = new RandomAccessFile(testFile, "r").getChannel()[ CD ]
Line_4 $$ FileChannel fc = new RandomAccessFile(testFile, "r").getChannel()-->Line_4 $$ new RandomAccessFile(testFile, "r").getChannel()[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_5 $$ fc.read(bb)[ CD ]
Line_4 $$ FileChannel fc = new RandomAccessFile(testFile, "r").getChannel()-->Line_5 $$ fc.read(bb)[ FD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_6 $$ assertEquals('T', bb.get(10) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_7 $$ assertEquals('P', bb.get(11) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_8 $$ assertEquals('E', bb.get(12) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_9 $$ assertEquals('2', bb.get(13) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_10 $$ assertEquals(0xFF, bb.get(21) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_11 $$ assertEquals(0xFE, bb.get(22) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_12 $$ assertEquals(0xDE, bb.get(23) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_13 $$ assertEquals(0x03, bb.get(24) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_14 $$ assertEquals(0x00, bb.get(25) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_15 $$ assertEquals(0x00, bb.get(26) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_16 $$ assertEquals(0xFF, bb.get(27) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_17 $$ assertEquals(0xFE, bb.get(28) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_18 $$ assertEquals(0xDE, bb.get(29) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_19 $$ assertEquals(0x03, bb.get(30) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_20 $$ assertEquals(0x54, bb.get(31) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_21 $$ assertEquals(0x58, bb.get(32) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_22 $$ assertEquals(0x58, bb.get(33) & 0xFF)[ CD ]
Line_3 $$ public void testUTF16BOMMultipleFieldSeperators() -->Line_23 $$ assertEquals(0x58, bb.get(34) & 0xFF)[ CD ]
