Line_0 $$ Entry-->Line_2 $$ //43
public class func [ CD ]
Line_2 $$ //43
public class func -->Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) [ CD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_4 $$ HttpAlfrescoStore store = new HttpAlfrescoStore()[ CD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_5 $$ store.setTransactionService(transactionService)[ CD ]
Line_4 $$ HttpAlfrescoStore store = new HttpAlfrescoStore()-->Line_5 $$ store.setTransactionService(transactionService)[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_6 $$ store.setAuthenticationService(authenticationService)[ CD ]
Line_4 $$ HttpAlfrescoStore store = new HttpAlfrescoStore()-->Line_6 $$ store.setAuthenticationService(authenticationService)[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_7 $$ store.setBaseHttpUrl(baseUrl)[ CD ]
Line_4 $$ HttpAlfrescoStore store = new HttpAlfrescoStore()-->Line_7 $$ store.setBaseHttpUrl(baseUrl)[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_8 $$ ContentReader reader = store.getReader(contentUrl)[ CD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_8 $$ store.getReader(contentUrl)[ CD ]
Line_4 $$ HttpAlfrescoStore store = new HttpAlfrescoStore()-->Line_8 $$ store.getReader(contentUrl)[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_9 $$ boolean exists = reader.exists()[ CD ]
Line_9 $$ boolean exists = reader.exists()-->Line_9 $$ reader.exists()[ CD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_9 $$ reader.exists()[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_10 $$ if (!exists) [ CD ]
Line_9 $$ boolean exists = reader.exists()-->Line_10 $$ if (!exists) [ FD ]
Line_10 $$ if (!exists) -->Line_10 $$ !exists[ CD ]
Line_9 $$ boolean exists = reader.exists()-->Line_10 $$ !exists[ FD ]
Line_10 $$ if (!exists) -->Line_12 $$ System.out.println("   Content doesn't exist: " + contentUrl)[ CD ]
Line_10 $$ if (!exists) -->Line_14 $$ return;[ CD ]
Line_10 $$ if (!exists) -->Line_18 $$ System.out.println("   Content exists: " + contentUrl)[ CD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_21 $$ ContentData contentData = reader.getContentData()[ CD ]
Line_21 $$ ContentData contentData = reader.getContentData()-->Line_21 $$ reader.getContentData()[ CD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_21 $$ reader.getContentData()[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_22 $$ ByteBuffer buffer = ByteBuffer.allocate((int) reader.getSize())[ CD ]
Line_22 $$ ByteBuffer buffer = ByteBuffer.allocate((int) reader.getSize())-->Line_22 $$ ByteBuffer.allocate((int) reader.getSize())[ CD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_22 $$ reader.getSize()[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_23 $$ FileChannel channel = reader.getFileChannel()[ CD ]
Line_23 $$ FileChannel channel = reader.getFileChannel()-->Line_23 $$ reader.getFileChannel()[ CD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_23 $$ reader.getFileChannel()[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_24 $$ int count = channel.read(buffer)[ CD ]
Line_24 $$ int count = channel.read(buffer)-->Line_24 $$ channel.read(buffer)[ CD ]
Line_23 $$ FileChannel channel = reader.getFileChannel()-->Line_24 $$ channel.read(buffer)[ FD ]
Line_22 $$ ByteBuffer buffer = ByteBuffer.allocate((int) reader.getSize())-->Line_24 $$ channel.read(buffer)[ FD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_25 $$ if (count != reader.getSize()) [ CD ]
Line_24 $$ int count = channel.read(buffer)-->Line_25 $$ if (count != reader.getSize()) [ FD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_25 $$ reader.getSize()[ FD ]
Line_25 $$ if (count != reader.getSize()) -->Line_27 $$ System.err.println("The number of bytes read was " + count + " but expected " + reader.getSize())[ CD ]
Line_8 $$ ContentReader reader = store.getReader(contentUrl)-->Line_27 $$ reader.getSize()[ FD ]
Line_25 $$ if (count != reader.getSize()) -->Line_28 $$ return;[ CD ]
Line_3 $$ public void doTest(ApplicationContext ctx, String baseUrl, String contentUrl) -->Line_30 $$ channel.close()[ CD ]
Line_23 $$ FileChannel channel = reader.getFileChannel()-->Line_30 $$ channel.close()[ FD ]
