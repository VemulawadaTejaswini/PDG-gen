Line_0 $$ Entry-->Line_2 $$ //63
public class func [ CD ]
Line_2 $$ //63
public class func -->Line_3 $$ public void handleGetDiffs(HttpServletRequest request, HttpServletResponse response, Repository db, String scope, String pattern) [ CD ]
Line_3 $$ public void handleGetDiffs(HttpServletRequest request, HttpServletResponse response, Repository db, String scope, String pattern) -->Line_4 $$ result.put(ProtocolConstants.KEY_LENGTH, l.size())[ CD ]
Line_3 $$ public void handleGetDiffs(HttpServletRequest request, HttpServletResponse response, Repository db, String scope, String pattern) -->Line_5 $$ if (i < l.size()) [ CD ]
Line_5 $$ if (i < l.size()) -->Line_5 $$ l.size()[ CD ]
Line_5 $$ if (i < l.size()) -->Line_6 $$ URI nextLocation = new URI(diffLocation.getScheme(), diffLocation.getUserInfo(), diffLocation.getHost(), diffLocation.getPort(), diffLocation.getPath(), "pageSize=" + pageSize + "&page=" + (page + 1), //$NON-NLS-1$ //$NON-NLS-2$
diffLocation.getFragment())[ CD ]
Line_5 $$ if (i < l.size()) -->Line_8 $$ result.put(ProtocolConstants.KEY_NEXT_LOCATION, nextLocation)[ CD ]
Line_6 $$ URI nextLocation = new URI(diffLocation.getScheme(), diffLocation.getUserInfo(), diffLocation.getHost(), diffLocation.getPort(), diffLocation.getPath(), "pageSize=" + pageSize + "&page=" + (page + 1), //$NON-NLS-1$ //$NON-NLS-2$
diffLocation.getFragment())-->Line_8 $$ result.put(ProtocolConstants.KEY_NEXT_LOCATION, nextLocation)[ FD ]
Line_3 $$ public void handleGetDiffs(HttpServletRequest request, HttpServletResponse response, Repository db, String scope, String pattern) -->Line_10 $$ OrionServlet.writeJSONResponse(request, response, result, JsonURIUnqualificationStrategy.ALL_NO_GIT)[ CD ]
