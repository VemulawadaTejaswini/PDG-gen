Line_0 $$ Entry-->Line_2 $$ //14
public class func [ CD ]
Line_2 $$ //14
public class func -->Line_3 $$ public void rewriteUrlIfNeeded(String value) [ CD ]
Line_3 $$ public void rewriteUrlIfNeeded(String value) -->Line_4 $$ if (value.startsWith(this.serverProto.concat("://"))) [ CD ]
Line_4 $$ if (value.startsWith(this.serverProto.concat("://"))) -->Line_4 $$ value.startsWith(this.serverProto.concat("://"))[ CD ]
Line_4 $$ if (value.startsWith(this.serverProto.concat("://"))) -->Line_11 $$ URL url = new URL(this.requestURL, value)[ CD ]
Line_4 $$ if (value.startsWith(this.serverProto.concat("://"))) -->Line_12 $$ url.toURI()[ CD ]
Line_11 $$ URL url = new URL(this.requestURL, value)-->Line_12 $$ url.toURI()[ FD ]
Line_3 $$ public void rewriteUrlIfNeeded(String value) -->Line_14 $$ String actualProto = uri.getScheme()[ CD ]
Line_14 $$ String actualProto = uri.getScheme()-->Line_14 $$ uri.getScheme()[ CD ]
Line_3 $$ public void rewriteUrlIfNeeded(String value) -->Line_15 $$ if (!this.serverProto.equalsIgnoreCase(actualProto)) [ CD ]
Line_15 $$ if (!this.serverProto.equalsIgnoreCase(actualProto)) -->Line_15 $$ !this.serverProto.equalsIgnoreCase(actualProto)[ CD ]
Line_15 $$ !this.serverProto.equalsIgnoreCase(actualProto)-->Line_15 $$ this.serverProto.equalsIgnoreCase(actualProto)[ CD ]
Line_14 $$ String actualProto = uri.getScheme()-->Line_15 $$ this.serverProto.equalsIgnoreCase(actualProto)[ FD ]
Line_15 $$ if (!this.serverProto.equalsIgnoreCase(actualProto)) -->Line_18 $$ // protocol is already correct
return null;[ CD ]
Line_3 $$ public void rewriteUrlIfNeeded(String value) -->Line_20 $$ if (!this.serverName.equals(uri.getHost())) [ CD ]
Line_20 $$ if (!this.serverName.equals(uri.getHost())) -->Line_20 $$ !this.serverName.equals(uri.getHost())[ CD ]
Line_20 $$ !this.serverName.equals(uri.getHost())-->Line_20 $$ this.serverName.equals(uri.getHost())[ CD ]
Line_20 $$ if (!this.serverName.equals(uri.getHost())) -->Line_23 $$ // going to a different host
return null;[ CD ]
Line_3 $$ public void rewriteUrlIfNeeded(String value) -->Line_25 $$ if (normalizePort(this.serverProto, this.serverPort) != normalizePort(actualProto, uri.getPort())) [ CD ]
Line_14 $$ String actualProto = uri.getScheme()-->Line_25 $$ normalizePort(actualProto, uri.getPort())[ FD ]
Line_25 $$ if (normalizePort(this.serverProto, this.serverPort) != normalizePort(actualProto, uri.getPort())) -->Line_28 $$ // not to default port
return null;[ CD ]
Line_3 $$ public void rewriteUrlIfNeeded(String value) -->Line_30 $$ return new URI(this.clientProto, null, this.serverName, this.clientPort, uri.getPath(), uri.getQuery(), uri.getFragment()).toURL();[ CD ]
Line_30 $$ return new URI(this.clientProto, null, this.serverName, this.clientPort, uri.getPath(), uri.getQuery(), uri.getFragment()).toURL();-->Line_30 $$ new URI(this.clientProto, null, this.serverName, this.clientPort, uri.getPath(), uri.getQuery(), uri.getFragment()).toURL()[ CD ]
