Line_0 $$ Entry-->Line_2 $$ //38
public class func [ CD ]
Line_2 $$ //38
public class func -->Line_3 $$ public void openDocument(final URI location) [ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_4 $$ final String scheme = location.getScheme()[ CD ]
Line_4 $$ final String scheme = location.getScheme()-->Line_4 $$ location.getScheme()[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_5 $$ final String host = location.getHost()[ CD ]
Line_5 $$ final String host = location.getHost()-->Line_5 $$ location.getHost()[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_6 $$ final String path = location.isOpaque() ? location.getSchemeSpecificPart() : location.getPath()[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_7 $$ final int port = location.getPort()[ CD ]
Line_7 $$ final int port = location.getPort()-->Line_7 $$ location.getPort()[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_8 $$ final String query = location.getQuery()[ CD ]
Line_8 $$ final String query = location.getQuery()-->Line_8 $$ location.getQuery()[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_9 $$ final String fragment = location.getFragment()[ CD ]
Line_9 $$ final String fragment = location.getFragment()-->Line_9 $$ location.getFragment()[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_10 $$ final StringBuilder file = new StringBuilder(path)[ CD ]
Line_3 $$ public void openDocument(final URI location) -->Line_11 $$ if (query != null) [ CD ]
Line_8 $$ final String query = location.getQuery()-->Line_11 $$ if (query != null) [ FD ]
Line_11 $$ if (query != null) -->Line_12 $$ file.append('?')[ CD ]
Line_10 $$ final StringBuilder file = new StringBuilder(path)-->Line_12 $$ file.append('?')[ FD ]
Line_11 $$ if (query != null) -->Line_13 $$ file.append(query)[ CD ]
Line_10 $$ final StringBuilder file = new StringBuilder(path)-->Line_13 $$ file.append(query)[ FD ]
Line_8 $$ final String query = location.getQuery()-->Line_13 $$ file.append(query)[ FD ]
Line_3 $$ public void openDocument(final URI location) -->Line_15 $$ if (fragment != null) [ CD ]
Line_9 $$ final String fragment = location.getFragment()-->Line_15 $$ if (fragment != null) [ FD ]
Line_15 $$ if (fragment != null) -->Line_16 $$ file.append('#')[ CD ]
Line_10 $$ final StringBuilder file = new StringBuilder(path)-->Line_16 $$ file.append('#')[ FD ]
Line_15 $$ if (fragment != null) -->Line_17 $$ file.append(fragment)[ CD ]
Line_10 $$ final StringBuilder file = new StringBuilder(path)-->Line_17 $$ file.append(fragment)[ FD ]
Line_9 $$ final String fragment = location.getFragment()-->Line_17 $$ file.append(fragment)[ FD ]
Line_3 $$ public void openDocument(final URI location) -->Line_19 $$ final URL url = new URL(scheme, host, port, file.toString())[ CD ]
Line_10 $$ final StringBuilder file = new StringBuilder(path)-->Line_19 $$ file.toString()[ FD ]
Line_3 $$ public void openDocument(final URI location) -->Line_20 $$ openDocument(url)[ CD ]
Line_19 $$ final URL url = new URL(scheme, host, port, file.toString())-->Line_20 $$ openDocument(url)[ FD ]
