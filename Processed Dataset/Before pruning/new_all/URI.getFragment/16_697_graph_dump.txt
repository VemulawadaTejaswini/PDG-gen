Line_0 $$ Entry-->Line_2 $$ //15
public class func [ CD ]
Line_2 $$ //15
public class func -->Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) [ CD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_4 $$ final String path = uri.isOpaque() ? uri.getSchemeSpecificPart() : uri.getPath()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_5 $$ final StringBuilder sb = new StringBuilder(path)[ CD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_6 $$ final String query = uri.getQuery()[ CD ]
Line_6 $$ final String query = uri.getQuery()-->Line_6 $$ uri.getQuery()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_7 $$ if (query != null) [ CD ]
Line_6 $$ final String query = uri.getQuery()-->Line_7 $$ if (query != null) [ FD ]
Line_7 $$ if (query != null) -->Line_8 $$ sb.append('?')[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_8 $$ sb.append('?')[ FD ]
Line_7 $$ if (query != null) -->Line_9 $$ sb.append(query)[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_9 $$ sb.append(query)[ FD ]
Line_6 $$ final String query = uri.getQuery()-->Line_9 $$ sb.append(query)[ FD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_11 $$ final String fragment = uri.getFragment()[ CD ]
Line_11 $$ final String fragment = uri.getFragment()-->Line_11 $$ uri.getFragment()[ CD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_12 $$ if (fragment != null) [ CD ]
Line_11 $$ final String fragment = uri.getFragment()-->Line_12 $$ if (fragment != null) [ FD ]
Line_12 $$ if (fragment != null) -->Line_13 $$ sb.append('#')[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_13 $$ sb.append('#')[ FD ]
Line_12 $$ if (fragment != null) -->Line_14 $$ sb.append(fragment)[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_14 $$ sb.append(fragment)[ FD ]
Line_11 $$ final String fragment = uri.getFragment()-->Line_14 $$ sb.append(fragment)[ FD ]
Line_3 $$ public void getAbsoluteUrl(final MapModel map, final URI uri) -->Line_16 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) [ CD ]
Line_16 $$ !uri.isAbsolute()-->Line_16 $$ uri.isAbsolute()[ CD ]
Line_16 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) -->Line_17 $$ final URL mapUrl = map.getURL()[ CD ]
Line_17 $$ final URL mapUrl = map.getURL()-->Line_17 $$ map.getURL()[ CD ]
Line_16 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) -->Line_18 $$ final String scheme = uri.getScheme()[ CD ]
Line_18 $$ final String scheme = uri.getScheme()-->Line_18 $$ uri.getScheme()[ CD ]
Line_16 $$ if (!uri.isAbsolute() || uri.isOpaque() || uri.getScheme().length() > 0) -->Line_19 $$ if (scheme == null || mapUrl.getProtocol().equals(scheme)) [ CD ]
Line_18 $$ final String scheme = uri.getScheme()-->Line_19 $$ mapUrl.getProtocol().equals(scheme)[ FD ]
Line_17 $$ final URL mapUrl = map.getURL()-->Line_19 $$ mapUrl.getProtocol()[ FD ]
Line_19 $$ if (scheme == null || mapUrl.getProtocol().equals(scheme)) -->Line_20 $$ final URL url = new URL(mapUrl, sb.toString())[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_20 $$ sb.toString()[ FD ]
Line_19 $$ if (scheme == null || mapUrl.getProtocol().equals(scheme)) -->Line_21 $$ return url;[ CD ]
Line_5 $$ final StringBuilder sb = new StringBuilder(path)-->Line_24 $$ sb.toString()[ FD ]
