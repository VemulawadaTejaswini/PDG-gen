Line_0 $$ Entry-->Line_2 $$ //13
public class func [ CD ]
Line_2 $$ //13
public class func -->Line_3 $$ public void testExtractURIComponent() [ CD ]
Line_3 $$ public void testExtractURIComponent() -->Line_4 $$ URI uri = new URI(uriStr)[ CD ]
Line_3 $$ public void testExtractURIComponent() -->Line_5 $$ testExtractURIComponent2(uriStr, "scheme", uri.getScheme())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_5 $$ uri.getScheme()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_6 $$ testExtractURIComponent2(uriStr, "authority", uri.getAuthority())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_6 $$ uri.getAuthority()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_7 $$ testExtractURIComponent2(uriStr, "path", uri.getPath())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_7 $$ uri.getPath()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_8 $$ testExtractURIComponent2(uriStr, "query", uri.getQuery())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_8 $$ uri.getQuery()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_9 $$ testExtractURIComponent2(uriStr, "fragment", uri.getFragment())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_9 $$ uri.getFragment()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_10 $$ testExtractURIComponent2(uriStr, "host", uri.getHost())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_10 $$ uri.getHost()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_11 $$ testExtractURIComponent2(uriStr, "port", uri.getPort())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_11 $$ uri.getPort()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_12 $$ testExtractURIComponent2(uriStr, "schemeSpecificPart", uri.getSchemeSpecificPart())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_12 $$ uri.getSchemeSpecificPart()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_13 $$ testExtractURIComponent2(uriStr, "userInfo", uri.getUserInfo())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_13 $$ uri.getUserInfo()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_14 $$ testExtractURIComponent2(uriStr, "illegalType", uri.getUserInfo())[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_14 $$ uri.getUserInfo()[ FD ]
Line_3 $$ public void testExtractURIComponent() -->Line_15 $$ fail()[ CD ]
Line_3 $$ public void testExtractURIComponent() -->Line_16 $$ testExtractURIComponent2("invalidURI:", "host", uri.getHost(), false)[ CD ]
Line_4 $$ URI uri = new URI(uriStr)-->Line_16 $$ uri.getHost()[ FD ]
