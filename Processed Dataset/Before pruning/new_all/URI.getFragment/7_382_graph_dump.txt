Line_0 $$ Entry-->Line_2 $$ //6
public class func [ CD ]
Line_2 $$ //6
public class func -->Line_3 $$ public void dump(String description, URI dburi) [ CD ]
Line_3 $$ public void dump(String description, URI dburi) -->Line_4 $$ String dumpString = String.format("dump (%s)\n: isOpaque=%s, isAbsolute=%s Scheme=%s,\n SchemeSpecificPart=%s,\n Host=%s,\n Port=%s,\n Path=%s,\n Fragment=%s,\n Query=%s\n", description, dburi.isOpaque(), dburi.isAbsolute(), dburi.getScheme(), dburi.getSchemeSpecificPart(), dburi.getHost(), dburi.getPort(), dburi.getPath(), dburi.getFragment(), dburi.getQuery())[ CD ]
Line_4 $$ String dumpString = String.format("dump (%s)\n: isOpaque=%s, isAbsolute=%s Scheme=%s,\n SchemeSpecificPart=%s,\n Host=%s,\n Port=%s,\n Path=%s,\n Fragment=%s,\n Query=%s\n", description, dburi.isOpaque(), dburi.isAbsolute(), dburi.getScheme(), dburi.getSchemeSpecificPart(), dburi.getHost(), dburi.getPort(), dburi.getPath(), dburi.getFragment(), dburi.getQuery())-->Line_4 $$ String.format("dump (%s)\n: isOpaque=%s, isAbsolute=%s Scheme=%s,\n SchemeSpecificPart=%s,\n Host=%s,\n Port=%s,\n Path=%s,\n Fragment=%s,\n Query=%s\n", description, dburi.isOpaque(), dburi.isAbsolute(), dburi.getScheme(), dburi.getSchemeSpecificPart(), dburi.getHost(), dburi.getPort(), dburi.getPath(), dburi.getFragment(), dburi.getQuery())[ CD ]
Line_3 $$ public void dump(String description, URI dburi) -->Line_17 $$ LOGGER.fine(dumpString)[ CD ]
Line_4 $$ String dumpString = String.format("dump (%s)\n: isOpaque=%s, isAbsolute=%s Scheme=%s,\n SchemeSpecificPart=%s,\n Host=%s,\n Port=%s,\n Path=%s,\n Fragment=%s,\n Query=%s\n", description, dburi.isOpaque(), dburi.isAbsolute(), dburi.getScheme(), dburi.getSchemeSpecificPart(), dburi.getHost(), dburi.getPort(), dburi.getPath(), dburi.getFragment(), dburi.getQuery())-->Line_17 $$ LOGGER.fine(dumpString)[ FD ]
Line_3 $$ public void dump(String description, URI dburi) -->Line_18 $$ String query = dburi.getQuery()[ CD ]
Line_18 $$ String query = dburi.getQuery()-->Line_18 $$ dburi.getQuery()[ CD ]
Line_3 $$ public void dump(String description, URI dburi) -->Line_19 $$ if (null != query && !query.equals("")) [ CD ]
Line_19 $$ !query.equals("")-->Line_19 $$ query.equals("")[ CD ]
Line_18 $$ String query = dburi.getQuery()-->Line_19 $$ query.equals("")[ FD ]
Line_19 $$ if (null != query && !query.equals("")) -->Line_21 $$ String[] params = query.split("&")[ CD ]
Line_21 $$ String[] params = query.split("&")-->Line_21 $$ query.split("&")[ CD ]
Line_18 $$ String query = dburi.getQuery()-->Line_21 $$ query.split("&")[ FD ]
Line_19 $$ if (null != query && !query.equals("")) -->Line_22 $$ Map<String, String> map = new HashMap<String, String>()[ CD ]
Line_25 $$ String[] splits = param.split("=")-->Line_25 $$ param.split("=")[ CD ]
Line_23 $$ String param-->Line_25 $$ param.split("=")[ FD ]
Line_28 $$ if (splits.length > 1) -->Line_30 $$ value = splits[1][ CD ]
Line_27 $$ String value = null-->Line_30 $$ value = splits[1][ FD ]
Line_30 $$ value = splits[1]-->Line_30 $$ value = splits[1][ FD ]
Line_22 $$ Map<String, String> map = new HashMap<String, String>()-->Line_32 $$ map.put(name, value)[ FD ]
Line_26 $$ String name = splits[0]-->Line_32 $$ map.put(name, value)[ FD ]
Line_27 $$ String value = null-->Line_32 $$ map.put(name, value)[ FD ]
Line_30 $$ value = splits[1]-->Line_32 $$ map.put(name, value)[ FD ]
Line_26 $$ String name = splits[0]-->Line_33 $$ String.format("name=%s,value=%s\n", name, value)[ FD ]
Line_27 $$ String value = null-->Line_33 $$ String.format("name=%s,value=%s\n", name, value)[ FD ]
Line_30 $$ value = splits[1]-->Line_33 $$ String.format("name=%s,value=%s\n", name, value)[ FD ]
