Line_0 $$ Entry-->Line_2 $$ //67
public class func [ CD ]
Line_2 $$ //67
public class func -->Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) [ CD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_4 $$ URI context = new URI(annotations[i].getContext())[ CD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_5 $$ String expression = URLDecoder.decode(context.getFragment())[ CD ]
Line_5 $$ String expression = URLDecoder.decode(context.getFragment())-->Line_5 $$ URLDecoder.decode(context.getFragment())[ CD ]
Line_4 $$ URI context = new URI(annotations[i].getContext())-->Line_5 $$ context.getFragment()[ FD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_6 $$ LocationList list = XPointerAPI.evalFullptr(document, expression)[ CD ]
Line_6 $$ LocationList list = XPointerAPI.evalFullptr(document, expression)-->Line_6 $$ XPointerAPI.evalFullptr(document, expression)[ CD ]
Line_5 $$ String expression = URLDecoder.decode(context.getFragment())-->Line_6 $$ XPointerAPI.evalFullptr(document, expression)[ FD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_7 $$ int length = list.getLength()[ CD ]
Line_7 $$ int length = list.getLength()-->Line_7 $$ list.getLength()[ CD ]
Line_6 $$ LocationList list = XPointerAPI.evalFullptr(document, expression)-->Line_7 $$ list.getLength()[ FD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_8 $$ for (int j = 0; j < length; j++) [ CD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) [ CD ]
Line_7 $$ int length = list.getLength()-->Line_8 $$ for (int j = 0; j < length; j++) [ FD ]
Line_8 $$ for (int j = 0; j < length; j++) -->Line_8 $$ int j = 0[ CD ]
Line_8 $$ for (int j = 0; j < length; j++) -->Line_8 $$ j++[ CD ]
Line_8 $$ int j = 0-->Line_8 $$ j++[ FD ]
Line_8 $$ for (int j = 0; j < length; j++) -->Line_9 $$ Location location = list.item(j)[ CD ]
Line_9 $$ Location location = list.item(j)-->Line_9 $$ list.item(j)[ CD ]
Line_6 $$ LocationList list = XPointerAPI.evalFullptr(document, expression)-->Line_9 $$ list.item(j)[ FD ]
Line_8 $$ int j = 0-->Line_9 $$ list.item(j)[ FD ]
Line_8 $$ for (int j = 0; j < length; j++) -->Line_10 $$ Range range[ CD ]
Line_8 $$ for (int j = 0; j < length; j++) -->Line_12 $$ if (location.getType() == Location.RANGE)
    range = (Range) location.getLocation();
else [ CD ]
Line_9 $$ Location location = list.item(j)-->Line_12 $$ location.getType()[ FD ]
Line_12 $$ if (location.getType() == Location.RANGE)
    range = (Range) location.getLocation();
else -->Line_13 $$ range = (Range) location.getLocation()[ CD ]
Line_10 $$ Range range-->Line_13 $$ range = (Range) location.getLocation()[ FD ]
Line_13 $$ range = (Range) location.getLocation()-->Line_13 $$ range = (Range) location.getLocation()[ FD ]
Line_9 $$ Location location = list.item(j)-->Line_13 $$ location.getLocation()[ FD ]
Line_12 $$ if (location.getType() == Location.RANGE)
    range = (Range) location.getLocation();
else -->Line_15 $$ range = ((DocumentRange) document).createRange()[ CD ]
Line_10 $$ Range range-->Line_15 $$ range = ((DocumentRange) document).createRange()[ FD ]
Line_13 $$ range = (Range) location.getLocation()-->Line_15 $$ range = ((DocumentRange) document).createRange()[ FD ]
Line_15 $$ range = ((DocumentRange) document).createRange()-->Line_15 $$ range = ((DocumentRange) document).createRange()[ FD ]
Line_15 $$ range = ((DocumentRange) document).createRange()-->Line_15 $$ ((DocumentRange) document).createRange()[ CD ]
Line_12 $$ if (location.getType() == Location.RANGE)
    range = (Range) location.getLocation();
else -->Line_16 $$ range.selectNode((Node) location.getLocation())[ CD ]
Line_10 $$ Range range-->Line_16 $$ range.selectNode((Node) location.getLocation())[ FD ]
Line_13 $$ range = (Range) location.getLocation()-->Line_16 $$ range.selectNode((Node) location.getLocation())[ FD ]
Line_15 $$ range = ((DocumentRange) document).createRange()-->Line_16 $$ range.selectNode((Node) location.getLocation())[ FD ]
Line_9 $$ Location location = list.item(j)-->Line_16 $$ location.getLocation()[ FD ]
Line_8 $$ for (int j = 0; j < length; j++) -->Line_20 $$ // Ignore it if this range is collapsed (ie. start == end)
if (!range.getCollapsed())
    srl.insert(new SelectionRange(range, annotations[i]));[ CD ]
Line_20 $$ // Ignore it if this range is collapsed (ie. start == end)
if (!range.getCollapsed())
    srl.insert(new SelectionRange(range, annotations[i]));-->Line_20 $$ !range.getCollapsed()[ CD ]
Line_20 $$ !range.getCollapsed()-->Line_20 $$ range.getCollapsed()[ CD ]
Line_10 $$ Range range-->Line_20 $$ range.getCollapsed()[ FD ]
Line_13 $$ range = (Range) location.getLocation()-->Line_20 $$ range.getCollapsed()[ FD ]
Line_15 $$ range = ((DocumentRange) document).createRange()-->Line_20 $$ range.getCollapsed()[ FD ]
Line_20 $$ // Ignore it if this range is collapsed (ie. start == end)
if (!range.getCollapsed())
    srl.insert(new SelectionRange(range, annotations[i]));-->Line_21 $$ srl.insert(new SelectionRange(range, annotations[i]))[ CD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_23 $$ srl.surroundContents(NS, "aml:annotated", "aml:id", "aml:first")[ CD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_24 $$ Element index = document.createElementNS(NS, "aml:regions")[ CD ]
Line_24 $$ Element index = document.createElementNS(NS, "aml:regions")-->Line_24 $$ document.createElementNS(NS, "aml:regions")[ CD ]
Line_3 $$ public void annotate(Document document, AnnotationInfo[] annotations) -->Line_25 $$ document.getDocumentElement().appendChild(index)[ CD ]
Line_24 $$ Element index = document.createElementNS(NS, "aml:regions")-->Line_25 $$ document.getDocumentElement().appendChild(index)[ FD ]
Line_8 $$ int j = 0-->Line_8 $$ for (int j = 0; j < length; j++) [ FD ]
Line_8 $$ int j = 0-->Line_8 $$ for (int j = 0; j < length; j++) [ FD ]
Line_8 $$ int j = 0-->Line_8 $$ j++[ FD ]
Line_8 $$ int j = 0-->Line_9 $$ list.item(j)[ FD ]
Line_9 $$ Location location = list.item(j)-->Line_12 $$ location.getType()[ FD ]
Line_9 $$ Location location = list.item(j)-->Line_13 $$ location.getLocation()[ FD ]
Line_10 $$ Range range-->Line_16 $$ range.selectNode((Node) location.getLocation())[ FD ]
Line_13 $$ range = (Range) location.getLocation()-->Line_16 $$ range.selectNode((Node) location.getLocation())[ FD ]
Line_15 $$ range = ((DocumentRange) document).createRange()-->Line_16 $$ range.selectNode((Node) location.getLocation())[ FD ]
Line_9 $$ Location location = list.item(j)-->Line_16 $$ location.getLocation()[ FD ]
Line_10 $$ Range range-->Line_20 $$ range.getCollapsed()[ FD ]
Line_13 $$ range = (Range) location.getLocation()-->Line_20 $$ range.getCollapsed()[ FD ]
Line_15 $$ range = ((DocumentRange) document).createRange()-->Line_20 $$ range.getCollapsed()[ FD ]
