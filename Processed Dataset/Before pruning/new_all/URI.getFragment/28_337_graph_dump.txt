Line_0 $$ Entry-->Line_2 $$ //27
public class func [ CD ]
Line_2 $$ //27
public class func -->Line_3 $$ public void toWebsocket(final URI inputUri) [ CD ]
Line_3 $$ public void toWebsocket(final URI inputUri) -->Line_4 $$ Objects.requireNonNull(inputUri, "Input URI must not be null")[ CD ]
Line_3 $$ public void toWebsocket(final URI inputUri) -->Line_5 $$ String httpScheme = inputUri.getScheme()[ CD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_5 $$ inputUri.getScheme()[ CD ]
Line_3 $$ public void toWebsocket(final URI inputUri) -->Line_6 $$ if ("ws".equalsIgnoreCase(httpScheme) || "wss".equalsIgnoreCase(httpScheme)) [ CD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_6 $$ "ws".equalsIgnoreCase(httpScheme)[ FD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_6 $$ "wss".equalsIgnoreCase(httpScheme)[ FD ]
Line_6 $$ if ("ws".equalsIgnoreCase(httpScheme) || "wss".equalsIgnoreCase(httpScheme)) -->Line_11 $$ if ("http".equalsIgnoreCase(httpScheme)) [ CD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_11 $$ if ("http".equalsIgnoreCase(httpScheme)) [ FD ]
Line_11 $$ if ("http".equalsIgnoreCase(httpScheme)) -->Line_11 $$ "http".equalsIgnoreCase(httpScheme)[ CD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_11 $$ "http".equalsIgnoreCase(httpScheme)[ FD ]
Line_11 $$ if ("http".equalsIgnoreCase(httpScheme)) -->Line_16 $$ if ("https".equalsIgnoreCase(httpScheme)) [ CD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_16 $$ if ("https".equalsIgnoreCase(httpScheme)) [ FD ]
Line_16 $$ if ("https".equalsIgnoreCase(httpScheme)) -->Line_16 $$ "https".equalsIgnoreCase(httpScheme)[ CD ]
Line_5 $$ String httpScheme = inputUri.getScheme()-->Line_16 $$ "https".equalsIgnoreCase(httpScheme)[ FD ]
Line_3 $$ public void toWebsocket(final URI inputUri) -->Line_25 $$ return new URI(wsScheme, inputUri.getUserInfo(), inputUri.getHost(), inputUri.getPort(), inputUri.getPath(), inputUri.getQuery(), inputUri.getFragment());[ CD ]
