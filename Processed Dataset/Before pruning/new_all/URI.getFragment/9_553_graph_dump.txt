Line_0 $$ Entry-->Line_2 $$ //8
public class func [ CD ]
Line_2 $$ //8
public class func -->Line_3 $$ public void File(URI uri) [ CD ]
Line_3 $$ public void File(URI uri) -->Line_4 $$ if (!uri.isAbsolute())
    throw new IllegalArgumentException("URI is not absolute");[ CD ]
Line_4 $$ if (!uri.isAbsolute())
    throw new IllegalArgumentException("URI is not absolute");-->Line_4 $$ !uri.isAbsolute()[ CD ]
Line_4 $$ !uri.isAbsolute()-->Line_4 $$ uri.isAbsolute()[ CD ]
Line_3 $$ public void File(URI uri) -->Line_6 $$ if (uri.isOpaque())
    throw new IllegalArgumentException("URI is not hierarchical");[ CD ]
Line_6 $$ if (uri.isOpaque())
    throw new IllegalArgumentException("URI is not hierarchical");-->Line_6 $$ uri.isOpaque()[ CD ]
Line_3 $$ public void File(URI uri) -->Line_8 $$ String scheme = uri.getScheme()[ CD ]
Line_8 $$ String scheme = uri.getScheme()-->Line_8 $$ uri.getScheme()[ CD ]
Line_3 $$ public void File(URI uri) -->Line_9 $$ if ((scheme == null) || !scheme.equalsIgnoreCase("file"))
    throw new IllegalArgumentException("URI scheme is not \"file\"");[ CD ]
Line_9 $$ !scheme.equalsIgnoreCase("file")-->Line_9 $$ scheme.equalsIgnoreCase("file")[ CD ]
Line_8 $$ String scheme = uri.getScheme()-->Line_9 $$ scheme.equalsIgnoreCase("file")[ FD ]
Line_3 $$ public void File(URI uri) -->Line_11 $$ if (uri.getAuthority() != null)
    throw new IllegalArgumentException("URI has an authority component");[ CD ]
Line_3 $$ public void File(URI uri) -->Line_13 $$ if (uri.getFragment() != null)
    throw new IllegalArgumentException("URI has a fragment component");[ CD ]
Line_3 $$ public void File(URI uri) -->Line_15 $$ if (uri.getQuery() != null)
    throw new IllegalArgumentException("URI has a query component");[ CD ]
Line_3 $$ public void File(URI uri) -->Line_17 $$ String p = uri.getPath()[ CD ]
Line_17 $$ String p = uri.getPath()-->Line_17 $$ uri.getPath()[ CD ]
Line_3 $$ public void File(URI uri) -->Line_18 $$ if (p.equals(""))
    throw new IllegalArgumentException("URI path component is empty");[ CD ]
Line_17 $$ String p = uri.getPath()-->Line_18 $$ if (p.equals(""))
    throw new IllegalArgumentException("URI path component is empty");[ FD ]
Line_18 $$ if (p.equals(""))
    throw new IllegalArgumentException("URI path component is empty");-->Line_18 $$ p.equals("")[ CD ]
Line_17 $$ String p = uri.getPath()-->Line_18 $$ p.equals("")[ FD ]
Line_3 $$ public void File(URI uri) -->Line_20 $$ p = fs.fromURIPath(p)[ CD ]
Line_17 $$ String p = uri.getPath()-->Line_20 $$ p = fs.fromURIPath(p)[ FD ]
Line_20 $$ p = fs.fromURIPath(p)-->Line_20 $$ p = fs.fromURIPath(p)[ FD ]
Line_20 $$ p = fs.fromURIPath(p)-->Line_20 $$ fs.fromURIPath(p)[ CD ]
Line_17 $$ String p = uri.getPath()-->Line_20 $$ fs.fromURIPath(p)[ FD ]
Line_20 $$ p = fs.fromURIPath(p)-->Line_20 $$ fs.fromURIPath(p)[ FD ]
