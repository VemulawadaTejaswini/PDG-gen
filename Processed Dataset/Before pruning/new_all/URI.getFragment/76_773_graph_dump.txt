Line_0 $$ Entry-->Line_2 $$ //75
public class func [ CD ]
Line_2 $$ //75
public class func -->Line_3 $$ public void getFileFromURL(URL url) [ CD ]
Line_3 $$ public void getFileFromURL(URL url) -->Line_4 $$ URI uri = url.toURI()[ CD ]
Line_4 $$ URI uri = url.toURI()-->Line_4 $$ url.toURI()[ CD ]
Line_3 $$ public void getFileFromURL(URL url) -->Line_5 $$ if (uri.getFragment() != null) [ CD ]
Line_4 $$ URI uri = url.toURI()-->Line_5 $$ uri.getFragment()[ FD ]
Line_5 $$ if (uri.getFragment() != null) -->Line_6 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)[ CD ]
Line_4 $$ URI uri = url.toURI()-->Line_6 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)[ FD ]
Line_6 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)-->Line_6 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)[ FD ]
Line_4 $$ URI uri = url.toURI()-->Line_6 $$ uri.getScheme()[ FD ]
Line_6 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)-->Line_6 $$ uri.getScheme()[ FD ]
Line_4 $$ URI uri = url.toURI()-->Line_6 $$ uri.getSchemeSpecificPart()[ FD ]
Line_6 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)-->Line_6 $$ uri.getSchemeSpecificPart()[ FD ]
Line_3 $$ public void getFileFromURL(URL url) -->Line_8 $$ return new File(uri);[ CD ]
