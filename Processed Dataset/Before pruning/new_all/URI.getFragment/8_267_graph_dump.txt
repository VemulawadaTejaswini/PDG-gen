Line_0 $$ Entry-->Line_2 $$ //7
public class func [ CD ]
Line_2 $$ //7
public class func -->Line_3 $$ public void main(String args[]) [ CD ]
Line_3 $$ public void main(String args[]) -->Line_4 $$ boolean schemeCheck = scheme == null ? url.getProtocol() == null : scheme.equals(url.getProtocol())[ CD ]
Line_3 $$ public void main(String args[]) -->Line_6 $$ if (!schemeCheck)
    throw new RuntimeException("uri.scheme is " + scheme + " url.protocol is " + url.getProtocol());[ CD ]
Line_4 $$ boolean schemeCheck = scheme == null ? url.getProtocol() == null : scheme.equals(url.getProtocol())-->Line_6 $$ if (!schemeCheck)
    throw new RuntimeException("uri.scheme is " + scheme + " url.protocol is " + url.getProtocol());[ FD ]
Line_6 $$ if (!schemeCheck)
    throw new RuntimeException("uri.scheme is " + scheme + " url.protocol is " + url.getProtocol());-->Line_6 $$ !schemeCheck[ CD ]
Line_4 $$ boolean schemeCheck = scheme == null ? url.getProtocol() == null : scheme.equals(url.getProtocol())-->Line_6 $$ !schemeCheck[ FD ]
Line_3 $$ public void main(String args[]) -->Line_10 $$ if (uri.isOpaque()) [ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_10 $$ uri.isOpaque()[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_11 $$ String ssp = uri.getSchemeSpecificPart()[ CD ]
Line_11 $$ String ssp = uri.getSchemeSpecificPart()-->Line_11 $$ uri.getSchemeSpecificPart()[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_12 $$ boolean sspCheck = ssp == null ? uri.getPath() == null : ssp.equals(url.getPath())[ CD ]
Line_11 $$ String ssp = uri.getSchemeSpecificPart()-->Line_13 $$ ssp.equals(url.getPath())[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_14 $$ if (!sspCheck) [ CD ]
Line_12 $$ boolean sspCheck = ssp == null ? uri.getPath() == null : ssp.equals(url.getPath())-->Line_14 $$ if (!sspCheck) [ FD ]
Line_14 $$ if (!sspCheck) -->Line_14 $$ !sspCheck[ CD ]
Line_12 $$ boolean sspCheck = ssp == null ? uri.getPath() == null : ssp.equals(url.getPath())-->Line_14 $$ !sspCheck[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_19 $$ String authority = uri.getAuthority()[ CD ]
Line_19 $$ String authority = uri.getAuthority()-->Line_19 $$ uri.getAuthority()[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_20 $$ boolean authorityCheck = authority == null ? url.getAuthority() == null : authority.equals(url.getAuthority())[ CD ]
Line_19 $$ String authority = uri.getAuthority()-->Line_22 $$ authority.equals(url.getAuthority())[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_23 $$ if (!authorityCheck) [ CD ]
Line_20 $$ boolean authorityCheck = authority == null ? url.getAuthority() == null : authority.equals(url.getAuthority())-->Line_23 $$ if (!authorityCheck) [ FD ]
Line_23 $$ if (!authorityCheck) -->Line_23 $$ !authorityCheck[ CD ]
Line_20 $$ boolean authorityCheck = authority == null ? url.getAuthority() == null : authority.equals(url.getAuthority())-->Line_23 $$ !authorityCheck[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_28 $$ String host = uri.getHost()[ CD ]
Line_28 $$ String host = uri.getHost()-->Line_28 $$ uri.getHost()[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_29 $$ boolean hostCheck = host == null ? url.getHost() == null : host.equals(url.getHost())[ CD ]
Line_28 $$ String host = uri.getHost()-->Line_30 $$ host.equals(url.getHost())[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_31 $$ if (!hostCheck)
    throw new RuntimeException("uri.host is " + host + " url's is " + url.getHost());[ CD ]
Line_29 $$ boolean hostCheck = host == null ? url.getHost() == null : host.equals(url.getHost())-->Line_31 $$ if (!hostCheck)
    throw new RuntimeException("uri.host is " + host + " url's is " + url.getHost());[ FD ]
Line_31 $$ if (!hostCheck)
    throw new RuntimeException("uri.host is " + host + " url's is " + url.getHost());-->Line_31 $$ !hostCheck[ CD ]
Line_29 $$ boolean hostCheck = host == null ? url.getHost() == null : host.equals(url.getHost())-->Line_31 $$ !hostCheck[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_35 $$ if (host != null) [ CD ]
Line_28 $$ String host = uri.getHost()-->Line_35 $$ if (host != null) [ FD ]
Line_35 $$ if (host != null) -->Line_36 $$ String userInfo = uri.getUserInfo()[ CD ]
Line_36 $$ String userInfo = uri.getUserInfo()-->Line_36 $$ uri.getUserInfo()[ CD ]
Line_35 $$ if (host != null) -->Line_37 $$ boolean userInfoCheck = userInfo == null ? url.getUserInfo() == null : userInfo.equals(url.getUserInfo())[ CD ]
Line_36 $$ String userInfo = uri.getUserInfo()-->Line_39 $$ userInfo.equals(url.getUserInfo())[ FD ]
Line_35 $$ if (host != null) -->Line_40 $$ if (uri.getPort() != url.getPort())
    throw new RuntimeException("uri.port is " + uri.getPort() + " url's is " + url.getPort());[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_46 $$ String path = uri.getPath()[ CD ]
Line_46 $$ String path = uri.getPath()-->Line_46 $$ uri.getPath()[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_47 $$ boolean pathCheck = path == null ? url.getPath() == null : path.equals(url.getPath())[ CD ]
Line_46 $$ String path = uri.getPath()-->Line_48 $$ path.equals(url.getPath())[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_49 $$ if (!pathCheck)
    throw new RuntimeException("uri.path is " + path + " url.path is " + url.getPath());[ CD ]
Line_47 $$ boolean pathCheck = path == null ? url.getPath() == null : path.equals(url.getPath())-->Line_49 $$ if (!pathCheck)
    throw new RuntimeException("uri.path is " + path + " url.path is " + url.getPath());[ FD ]
Line_49 $$ if (!pathCheck)
    throw new RuntimeException("uri.path is " + path + " url.path is " + url.getPath());-->Line_49 $$ !pathCheck[ CD ]
Line_47 $$ boolean pathCheck = path == null ? url.getPath() == null : path.equals(url.getPath())-->Line_49 $$ !pathCheck[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_53 $$ String query = uri.getQuery()[ CD ]
Line_53 $$ String query = uri.getQuery()-->Line_53 $$ uri.getQuery()[ CD ]
Line_10 $$ if (uri.isOpaque()) -->Line_54 $$ boolean queryCheck = query == null ? url.getQuery() == null : query.equals(url.getQuery())[ CD ]
Line_53 $$ String query = uri.getQuery()-->Line_55 $$ query.equals(url.getQuery())[ FD ]
Line_10 $$ if (uri.isOpaque()) -->Line_56 $$ if (!queryCheck)
    throw new RuntimeException("uri.query is " + query + " url.query is " + url.getQuery());[ CD ]
Line_54 $$ boolean queryCheck = query == null ? url.getQuery() == null : query.equals(url.getQuery())-->Line_56 $$ if (!queryCheck)
    throw new RuntimeException("uri.query is " + query + " url.query is " + url.getQuery());[ FD ]
Line_56 $$ if (!queryCheck)
    throw new RuntimeException("uri.query is " + query + " url.query is " + url.getQuery());-->Line_56 $$ !queryCheck[ CD ]
Line_54 $$ boolean queryCheck = query == null ? url.getQuery() == null : query.equals(url.getQuery())-->Line_56 $$ !queryCheck[ FD ]
Line_3 $$ public void main(String args[]) -->Line_61 $$ String frag = uri.getFragment()[ CD ]
Line_61 $$ String frag = uri.getFragment()-->Line_61 $$ uri.getFragment()[ CD ]
Line_3 $$ public void main(String args[]) -->Line_62 $$ boolean fragCheck = frag == null ? url.getRef() == null : frag.equals(url.getRef())[ CD ]
Line_61 $$ String frag = uri.getFragment()-->Line_63 $$ frag.equals(url.getRef())[ FD ]
