Line_0 $$ Entry-->Line_2 $$ //29
public class func [ CD ]
Line_2 $$ //29
public class func -->Line_3 $$ public void getIFile(URL url, boolean bCreateIfNotExists) [ CD ]
Line_3 $$ public void getIFile(URL url, boolean bCreateIfNotExists) -->Line_4 $$ if (url.getProtocol().equals("file")) [ CD ]
Line_4 $$ if (url.getProtocol().equals("file")) -->Line_4 $$ url.getProtocol().equals("file")[ CD ]
Line_6 $$ URI uri = url.toURI()-->Line_6 $$ url.toURI()[ CD ]
Line_6 $$ URI uri = url.toURI()-->Line_7 $$ uri.getFragment()[ FD ]
Line_7 $$ if (uri.getFragment() != null) -->Line_8 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)[ CD ]
Line_6 $$ URI uri = url.toURI()-->Line_8 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)[ FD ]
Line_8 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)-->Line_8 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)[ FD ]
Line_6 $$ URI uri = url.toURI()-->Line_8 $$ uri.getScheme()[ FD ]
Line_8 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)-->Line_8 $$ uri.getScheme()[ FD ]
Line_6 $$ URI uri = url.toURI()-->Line_8 $$ uri.getSchemeSpecificPart()[ FD ]
Line_8 $$ uri = new URI(uri.getScheme(), uri.getSchemeSpecificPart(), null)-->Line_8 $$ uri.getSchemeSpecificPart()[ FD ]
Line_10 $$ return getIFile(new File(uri));-->Line_10 $$ getIFile(new File(uri))[ CD ]
Line_4 $$ if (url.getProtocol().equals("file")) -->Line_19 $$ if (url.getProtocol().equals("jar")) [ CD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_19 $$ url.getProtocol().equals("jar")[ CD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_20 $$ String path = url.getPath()[ CD ]
Line_20 $$ String path = url.getPath()-->Line_20 $$ url.getPath()[ CD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_21 $$ int idx = path.lastIndexOf('!')[ CD ]
Line_21 $$ int idx = path.lastIndexOf('!')-->Line_21 $$ path.lastIndexOf('!')[ CD ]
Line_20 $$ String path = url.getPath()-->Line_21 $$ path.lastIndexOf('!')[ FD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_22 $$ String filePath = path.substring(idx + 1)[ CD ]
Line_22 $$ String filePath = path.substring(idx + 1)-->Line_22 $$ path.substring(idx + 1)[ CD ]
Line_20 $$ String path = url.getPath()-->Line_22 $$ path.substring(idx + 1)[ FD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_23 $$ String jarPath = path.substring(0, idx)[ CD ]
Line_23 $$ String jarPath = path.substring(0, idx)-->Line_23 $$ path.substring(0, idx)[ CD ]
Line_20 $$ String path = url.getPath()-->Line_23 $$ path.substring(0, idx)[ FD ]
Line_21 $$ int idx = path.lastIndexOf('!')-->Line_23 $$ path.substring(0, idx)[ FD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_24 $$ File jarFile[ CD ]
Line_24 $$ File jarFile-->Line_26 $$ jarFile = getIFile(new URL(jarPath)).toJavaFile()[ FD ]
Line_26 $$ jarFile = getIFile(new URL(jarPath)).toJavaFile()-->Line_26 $$ jarFile = getIFile(new URL(jarPath)).toJavaFile()[ FD ]
Line_26 $$ jarFile = getIFile(new URL(jarPath)).toJavaFile()-->Line_26 $$ getIFile(new URL(jarPath)).toJavaFile()[ CD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_31 $$ JarFileDirectoryImpl jarFileDirectory = new JarFileDirectoryImpl(jarFile)[ CD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_33 $$ if (bCreateIfNotExists) [ CD ]
Line_33 $$ if (bCreateIfNotExists) -->Line_34 $$ return jarFileDirectory.getOrCreateFile(filePath);[ CD ]
Line_34 $$ return jarFileDirectory.getOrCreateFile(filePath);-->Line_34 $$ jarFileDirectory.getOrCreateFile(filePath)[ CD ]
Line_31 $$ JarFileDirectoryImpl jarFileDirectory = new JarFileDirectoryImpl(jarFile)-->Line_34 $$ jarFileDirectory.getOrCreateFile(filePath)[ FD ]
Line_22 $$ String filePath = path.substring(idx + 1)-->Line_34 $$ jarFileDirectory.getOrCreateFile(filePath)[ FD ]
Line_19 $$ if (url.getProtocol().equals("jar")) -->Line_36 $$ return jarFileDirectory.file(filePath);[ CD ]
Line_36 $$ return jarFileDirectory.file(filePath);-->Line_36 $$ jarFileDirectory.file(filePath)[ CD ]
Line_31 $$ JarFileDirectoryImpl jarFileDirectory = new JarFileDirectoryImpl(jarFile)-->Line_36 $$ jarFileDirectory.file(filePath)[ FD ]
Line_22 $$ String filePath = path.substring(idx + 1)-->Line_36 $$ jarFileDirectory.file(filePath)[ FD ]
