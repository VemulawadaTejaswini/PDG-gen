Line_0 $$ Entry-->Line_2 $$ //18
public class func [ CD ]
Line_2 $$ //18
public class func -->Line_3 $$ public void testAsynch() [ CD ]
Line_3 $$ public void testAsynch() -->Line_4 $$ URI uri = new URI(request.getUri())[ CD ]
Line_3 $$ public void testAsynch() -->Line_5 $$ String query = (uri.getQuery() == null ? "" : "&") + "wait=1000"[ CD ]
Line_4 $$ URI uri = new URI(request.getUri())-->Line_5 $$ uri.getQuery()[ FD ]
Line_3 $$ public void testAsynch() -->Line_6 $$ URI newURI = new URI(uri.getScheme(), uri.getAuthority(), uri.getPath(), query, uri.getFragment())[ CD ]
Line_4 $$ URI uri = new URI(request.getUri())-->Line_6 $$ uri.getScheme()[ FD ]
Line_4 $$ URI uri = new URI(request.getUri())-->Line_6 $$ uri.getAuthority()[ FD ]
Line_4 $$ URI uri = new URI(request.getUri())-->Line_6 $$ uri.getPath()[ FD ]
Line_4 $$ URI uri = new URI(request.getUri())-->Line_6 $$ uri.getFragment()[ FD ]
Line_6 $$ URI newURI = new URI(uri.getScheme(), uri.getAuthority(), uri.getPath(), query, uri.getFragment())-->Line_7 $$ newURI.toString()[ FD ]
Line_3 $$ public void testAsynch() -->Line_8 $$ request.get()[ CD ]
Line_3 $$ public void testAsynch() -->Line_9 $$ Assert.assertEquals(HttpServletResponse.SC_OK, response.getStatus())[ CD ]
Line_3 $$ public void testAsynch() -->Line_10 $$ Assert.assertEquals(response.getEntity(String.class), "content")[ CD ]
Line_3 $$ public void testAsynch() -->Line_11 $$ request.get()[ CD ]
Line_3 $$ public void testAsynch() -->Line_12 $$ Assert.assertEquals(HttpServletResponse.SC_OK, response.getStatus())[ CD ]
Line_3 $$ public void testAsynch() -->Line_13 $$ Assert.assertEquals(response.getEntity(String.class), "content")[ CD ]
Line_3 $$ public void testAsynch() -->Line_15 $$ request.delete()[ CD ]
Line_3 $$ public void testAsynch() -->Line_16 $$ Assert.assertEquals(HttpServletResponse.SC_NO_CONTENT, response.getStatus())[ CD ]
Line_3 $$ public void testAsynch() -->Line_17 $$ request.get()[ CD ]
Line_3 $$ public void testAsynch() -->Line_18 $$ Assert.assertEquals(HttpServletResponse.SC_GONE, response.getStatus())[ CD ]
Line_3 $$ public void testAsynch() -->Line_19 $$ response.releaseConnection()[ CD ]
