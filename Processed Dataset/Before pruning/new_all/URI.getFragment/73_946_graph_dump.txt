Line_0 $$ Entry-->Line_2 $$ //72
public class func [ CD ]
Line_2 $$ //72
public class func -->Line_3 $$ public void getJavaFileForOutput(Location location, String className, Kind kind, FileObject sibling) [ CD ]
Line_3 $$ public void getJavaFileForOutput(Location location, String className, Kind kind, FileObject sibling) -->Line_4 $$ URI uri = sibling.toUri()[ CD ]
Line_4 $$ URI uri = sibling.toUri()-->Line_4 $$ sibling.toUri()[ CD ]
Line_3 $$ public void getJavaFileForOutput(Location location, String className, Kind kind, FileObject sibling) -->Line_5 $$ String path = uri.getPath()[ CD ]
Line_5 $$ String path = uri.getPath()-->Line_5 $$ uri.getPath()[ CD ]
Line_4 $$ URI uri = sibling.toUri()-->Line_5 $$ uri.getPath()[ FD ]
Line_3 $$ public void getJavaFileForOutput(Location location, String className, Kind kind, FileObject sibling) -->Line_6 $$ path.lastIndexOf('/')[ CD ]
Line_5 $$ String path = uri.getPath()-->Line_6 $$ path.lastIndexOf('/')[ FD ]
Line_3 $$ public void getJavaFileForOutput(Location location, String className, Kind kind, FileObject sibling) -->Line_7 $$ if (index != -1) [ CD ]
Line_7 $$ if (index != -1) -->Line_7 $$ -1[ CD ]
Line_7 $$ if (index != -1) -->Line_8 $$ path = path.substring(0, index + 1)[ CD ]
Line_5 $$ String path = uri.getPath()-->Line_8 $$ path = path.substring(0, index + 1)[ FD ]
Line_8 $$ path = path.substring(0, index + 1)-->Line_8 $$ path = path.substring(0, index + 1)[ FD ]
Line_8 $$ path = path.substring(0, index + 1)-->Line_8 $$ path.substring(0, index + 1)[ CD ]
Line_5 $$ String path = uri.getPath()-->Line_8 $$ path.substring(0, index + 1)[ FD ]
Line_8 $$ path = path.substring(0, index + 1)-->Line_8 $$ path.substring(0, index + 1)[ FD ]
Line_7 $$ if (index != -1) -->Line_9 $$ path += normalizedFileName[ CD ]
Line_5 $$ String path = uri.getPath()-->Line_9 $$ path += normalizedFileName[ FD ]
Line_8 $$ path = path.substring(0, index + 1)-->Line_9 $$ path += normalizedFileName[ FD ]
Line_9 $$ path += normalizedFileName-->Line_9 $$ path += normalizedFileName[ FD ]
Line_4 $$ URI uri = sibling.toUri()-->Line_11 $$ uri.getScheme()[ FD ]
Line_4 $$ URI uri = sibling.toUri()-->Line_11 $$ uri.getHost()[ FD ]
Line_4 $$ URI uri = sibling.toUri()-->Line_11 $$ uri.getFragment()[ FD ]
Line_3 $$ public void getJavaFileForOutput(Location location, String className, Kind kind, FileObject sibling) -->Line_12 $$ return new EclipseFileObject(className, uri2, kind, this.charset);[ CD ]
