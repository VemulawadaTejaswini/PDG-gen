Line_0 $$ Entry-->Line_2 $$ //19
public class func [ CD ]
Line_2 $$ //19
public class func -->Line_3 $$ public void sendRedirect(String location) [ CD ]
Line_3 $$ public void sendRedirect(String location) -->Line_4 $$ String redirect = getHeader("location")[ CD ]
Line_4 $$ String redirect = getHeader("location")-->Line_4 $$ getHeader("location")[ CD ]
Line_3 $$ public void sendRedirect(String location) -->Line_5 $$ URI redirectURI = new URI(redirect)[ CD ]
Line_5 $$ URI redirectURI = new URI(redirect)-->Line_6 $$ redirectURI.getUserInfo()[ FD ]
Line_5 $$ URI redirectURI = new URI(redirect)-->Line_7 $$ redirectURI.getHost()[ FD ]
Line_5 $$ URI redirectURI = new URI(redirect)-->Line_7 $$ redirectURI.getPath()[ FD ]
Line_5 $$ URI redirectURI = new URI(redirect)-->Line_8 $$ redirectURI.getQuery()[ FD ]
Line_5 $$ URI redirectURI = new URI(redirect)-->Line_8 $$ redirectURI.getFragment()[ FD ]
Line_3 $$ public void sendRedirect(String location) -->Line_9 $$ log.warn(sm.getString("remoteIpFilter.invalidLocation", location, scheme, Integer.toString(port)))[ CD ]
