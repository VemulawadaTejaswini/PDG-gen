Line_0 $$ Entry-->Line_2 $$ //49
public class func [ CD ]
Line_2 $$ //49
public class func -->Line_3 $$ public void getRelativeBaseURI() [ CD ]
Line_3 $$ public void getRelativeBaseURI() -->Line_4 $$ final String literalAuthority = uri.getAuthority()[ CD ]
Line_4 $$ final String literalAuthority = uri.getAuthority()-->Line_4 $$ uri.getAuthority()[ CD ]
Line_3 $$ public void getRelativeBaseURI() -->Line_5 $$ if (!isEqual(baseAuthority, literalAuthority)) [ CD ]
Line_5 $$ if (!isEqual(baseAuthority, literalAuthority)) -->Line_5 $$ !isEqual(baseAuthority, literalAuthority)[ CD ]
Line_5 $$ !isEqual(baseAuthority, literalAuthority)-->Line_5 $$ isEqual(baseAuthority, literalAuthority)[ CD ]
Line_4 $$ final String literalAuthority = uri.getAuthority()-->Line_5 $$ isEqual(baseAuthority, literalAuthority)[ FD ]
Line_5 $$ if (!isEqual(baseAuthority, literalAuthority)) -->Line_6 $$ return uri.getSchemeSpecificPart();[ CD ]
Line_6 $$ return uri.getSchemeSpecificPart();-->Line_6 $$ uri.getSchemeSpecificPart()[ CD ]
Line_3 $$ public void getRelativeBaseURI() -->Line_8 $$ final String literalPath = uri.getPath()[ CD ]
Line_8 $$ final String literalPath = uri.getPath()-->Line_8 $$ uri.getPath()[ CD ]
Line_3 $$ public void getRelativeBaseURI() -->Line_9 $$ final String literalQuery = uri.getQueryString()[ CD ]
Line_9 $$ final String literalQuery = uri.getQueryString()-->Line_9 $$ uri.getQueryString()[ CD ]
Line_3 $$ public void getRelativeBaseURI() -->Line_10 $$ final String literalFragment = uri.getFragment()[ CD ]
Line_10 $$ final String literalFragment = uri.getFragment()-->Line_10 $$ uri.getFragment()[ CD ]
Line_3 $$ public void getRelativeBaseURI() -->Line_11 $$ if (literalQuery != null || literalFragment != null) [ CD ]
Line_11 $$ if (literalQuery != null || literalFragment != null) -->Line_12 $$ StringBuffer buffer = new StringBuffer()[ CD ]
Line_11 $$ if (literalQuery != null || literalFragment != null) -->Line_13 $$ if (literalPath != null) [ CD ]
Line_8 $$ final String literalPath = uri.getPath()-->Line_13 $$ if (literalPath != null) [ FD ]
Line_13 $$ if (literalPath != null) -->Line_14 $$ buffer.append(literalPath)[ CD ]
Line_12 $$ StringBuffer buffer = new StringBuffer()-->Line_14 $$ buffer.append(literalPath)[ FD ]
Line_8 $$ final String literalPath = uri.getPath()-->Line_14 $$ buffer.append(literalPath)[ FD ]
Line_11 $$ if (literalQuery != null || literalFragment != null) -->Line_16 $$ if (literalQuery != null) [ CD ]
Line_9 $$ final String literalQuery = uri.getQueryString()-->Line_16 $$ if (literalQuery != null) [ FD ]
Line_16 $$ if (literalQuery != null) -->Line_17 $$ buffer.append('?')[ CD ]
Line_12 $$ StringBuffer buffer = new StringBuffer()-->Line_17 $$ buffer.append('?')[ FD ]
Line_16 $$ if (literalQuery != null) -->Line_18 $$ buffer.append(literalQuery)[ CD ]
Line_12 $$ StringBuffer buffer = new StringBuffer()-->Line_18 $$ buffer.append(literalQuery)[ FD ]
Line_9 $$ final String literalQuery = uri.getQueryString()-->Line_18 $$ buffer.append(literalQuery)[ FD ]
Line_11 $$ if (literalQuery != null || literalFragment != null) -->Line_20 $$ if (literalFragment != null) [ CD ]
Line_10 $$ final String literalFragment = uri.getFragment()-->Line_20 $$ if (literalFragment != null) [ FD ]
Line_20 $$ if (literalFragment != null) -->Line_21 $$ buffer.append('#')[ CD ]
Line_12 $$ StringBuffer buffer = new StringBuffer()-->Line_21 $$ buffer.append('#')[ FD ]
Line_20 $$ if (literalFragment != null) -->Line_22 $$ buffer.append(literalFragment)[ CD ]
Line_12 $$ StringBuffer buffer = new StringBuffer()-->Line_22 $$ buffer.append(literalFragment)[ FD ]
Line_10 $$ final String literalFragment = uri.getFragment()-->Line_22 $$ buffer.append(literalFragment)[ FD ]
Line_11 $$ if (literalQuery != null || literalFragment != null) -->Line_24 $$ return buffer.toString();[ CD ]
Line_24 $$ return buffer.toString();-->Line_24 $$ buffer.toString()[ CD ]
Line_12 $$ StringBuffer buffer = new StringBuffer()-->Line_24 $$ buffer.toString()[ FD ]
