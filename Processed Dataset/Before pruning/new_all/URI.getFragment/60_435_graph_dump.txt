Line_0 $$ Entry-->Line_2 $$ //59
public class func [ CD ]
Line_2 $$ //59
public class func -->Line_3 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) [ CD ]
Line_3 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_4 $$ if (queryParams != null && queryParams.size() > 0) [ CD ]
Line_4 $$ if (queryParams != null && queryParams.size() > 0) -->Line_5 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())[ CD ]
Line_5 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())-->Line_5 $$ Lists.newArrayListWithCapacity(queryParams.size())[ CD ]
Line_5 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())-->Line_7 $$ pairs.add(new BasicNameValuePair(paramName, queryParams.get(paramName)))[ FD ]
Line_6 $$ String paramName-->Line_7 $$ queryParams.get(paramName)[ FD ]
Line_5 $$ List<NameValuePair> pairs = Lists.newArrayListWithCapacity(queryParams.size())-->Line_10 $$ URLEncodedUtils.format(pairs, "UTF-8")[ FD ]
Line_3 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_12 $$ HttpGet request = new HttpGet(uri)[ CD ]
Line_3 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_13 $$ addDefaultHeaders(request)[ CD ]
Line_12 $$ HttpGet request = new HttpGet(uri)-->Line_13 $$ addDefaultHeaders(request)[ FD ]
Line_3 $$ public void makeGetRequest(String urlString, HashMap<String, String> queryParams, boolean enableCache, int cacheMaxAge) -->Line_14 $$ Gdx.app.debug(TAG, "REQ: GET " + uri)[ CD ]
