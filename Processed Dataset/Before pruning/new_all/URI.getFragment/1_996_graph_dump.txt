Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void uriSubpath(URI uri, String subpath) [ CD ]
Line_3 $$ public void uriSubpath(URI uri, String subpath) -->Line_4 $$ String path = uri.getPath()[ CD ]
Line_4 $$ String path = uri.getPath()-->Line_4 $$ uri.getPath()[ CD ]
Line_3 $$ public void uriSubpath(URI uri, String subpath) -->Line_5 $$ if (path != null && path.length() > 0) [ CD ]
Line_4 $$ String path = uri.getPath()-->Line_5 $$ path.length()[ FD ]
Line_5 $$ if (path != null && path.length() > 0) -->Line_7 $$ subpath = path + "/" + subpath[ CD ]
Line_7 $$ subpath = path + "/" + subpath-->Line_7 $$ subpath = path + "/" + subpath[ FD ]
Line_7 $$ subpath = path + "/" + subpath-->Line_7 $$ subpath = path + "/" + subpath[ FD ]
Line_3 $$ public void uriSubpath(URI uri, String subpath) -->Line_9 $$ if (uri.getScheme() != null && subpath.charAt(0) != '/') [ CD ]
Line_7 $$ subpath = path + "/" + subpath-->Line_9 $$ subpath.charAt(0)[ FD ]
Line_9 $$ if (uri.getScheme() != null && subpath.charAt(0) != '/') -->Line_11 $$ subpath = "/" + subpath[ CD ]
Line_7 $$ subpath = path + "/" + subpath-->Line_11 $$ subpath = "/" + subpath[ FD ]
Line_11 $$ subpath = "/" + subpath-->Line_11 $$ subpath = "/" + subpath[ FD ]
Line_7 $$ subpath = path + "/" + subpath-->Line_11 $$ subpath = "/" + subpath[ FD ]
Line_11 $$ subpath = "/" + subpath-->Line_11 $$ subpath = "/" + subpath[ FD ]
Line_3 $$ public void uriSubpath(URI uri, String subpath) -->Line_13 $$ return new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), subpath, uri.getQuery(), uri.getFragment());[ CD ]
