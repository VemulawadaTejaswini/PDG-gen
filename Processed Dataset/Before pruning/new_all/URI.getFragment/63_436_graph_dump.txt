Line_0 $$ Entry-->Line_2 $$ //62
public class func [ CD ]
Line_2 $$ //62
public class func -->Line_3 $$ public void getDiffs() [ CD ]
Line_3 $$ public void getDiffs() -->Line_4 $$ result.put(ProtocolConstants.KEY_LENGTH, l.size())[ CD ]
Line_3 $$ public void getDiffs() -->Line_5 $$ if (i < l.size()) [ CD ]
Line_5 $$ if (i < l.size()) -->Line_5 $$ l.size()[ CD ]
Line_5 $$ if (i < l.size()) -->Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")[ CD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_6 $$ createDiffLocation(revCommit.getName(), fromName, "")[ CD ]
Line_5 $$ if (i < l.size()) -->Line_7 $$ URI nextLocation = new URI(diffLocation.getScheme(), diffLocation.getUserInfo(), diffLocation.getHost(), diffLocation.getPort(), diffLocation.getPath(), "pageSize=" + pageSize + "&page=" + (page + 1), diffLocation.getFragment())[ CD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_7 $$ diffLocation.getScheme()[ FD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_7 $$ diffLocation.getUserInfo()[ FD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_7 $$ diffLocation.getHost()[ FD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_7 $$ diffLocation.getPort()[ FD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_8 $$ diffLocation.getPath()[ FD ]
Line_6 $$ URI diffLocation = createDiffLocation(revCommit.getName(), fromName, "")-->Line_8 $$ diffLocation.getFragment()[ FD ]
Line_5 $$ if (i < l.size()) -->Line_9 $$ result.put(ProtocolConstants.KEY_NEXT_LOCATION, nextLocation)[ CD ]
Line_7 $$ URI nextLocation = new URI(diffLocation.getScheme(), diffLocation.getUserInfo(), diffLocation.getHost(), diffLocation.getPort(), diffLocation.getPath(), "pageSize=" + pageSize + "&page=" + (page + 1), diffLocation.getFragment())-->Line_9 $$ result.put(ProtocolConstants.KEY_NEXT_LOCATION, nextLocation)[ FD ]
