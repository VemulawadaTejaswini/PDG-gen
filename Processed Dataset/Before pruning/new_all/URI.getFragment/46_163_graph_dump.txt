Line_0 $$ Entry-->Line_2 $$ //45
public class func [ CD ]
Line_2 $$ //45
public class func -->Line_3 $$ public void findBaseLocationURI(URI fileURI, String relativeFileName) [ CD ]
Line_3 $$ public void findBaseLocationURI(URI fileURI, String relativeFileName) -->Line_4 $$ if (lastSegment.length() > 0 && !lastSegment.equals(".")) [ CD ]
Line_4 $$ !lastSegment.equals(".")-->Line_4 $$ lastSegment.equals(".")[ CD ]
Line_4 $$ if (lastSegment.length() > 0 && !lastSegment.equals(".")) -->Line_5 $$ //$NON-NLS-1$
if (lastSegment.equals("..")) [ CD ]
Line_5 $$ //$NON-NLS-1$
if (lastSegment.equals("..")) -->Line_5 $$ lastSegment.equals("..")[ CD ]
Line_5 $$ //$NON-NLS-1$
if (lastSegment.equals("..")) -->Line_7 $$ // navigating ".." in the other direction is ambiguous, bailing out
return null;[ CD ]
Line_5 $$ //$NON-NLS-1$
if (lastSegment.equals("..")) -->Line_9 $$ if (path.endsWith("/" + lastSegment)) [ CD ]
Line_9 $$ if (path.endsWith("/" + lastSegment)) -->Line_9 $$ path.endsWith("/" + lastSegment)[ CD ]
Line_9 $$ if (path.endsWith("/" + lastSegment)) -->Line_10 $$ int pos = path.lastIndexOf("/" + lastSegment)[ CD ]
Line_10 $$ int pos = path.lastIndexOf("/" + lastSegment)-->Line_10 $$ path.lastIndexOf("/" + lastSegment)[ CD ]
Line_9 $$ if (path.endsWith("/" + lastSegment)) -->Line_11 $$ path.substring(0, pos)[ CD ]
Line_10 $$ int pos = path.lastIndexOf("/" + lastSegment)-->Line_11 $$ path.substring(0, pos)[ FD ]
Line_9 $$ if (path.endsWith("/" + lastSegment)) -->Line_15 $$ // ouch, relativeFileName does not match fileURI, bailing out
return null;[ CD ]
