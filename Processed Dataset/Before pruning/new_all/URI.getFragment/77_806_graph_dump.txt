Line_0 $$ Entry-->Line_2 $$ //76
public class func [ CD ]
Line_2 $$ //76
public class func -->Line_3 $$ public void translateTransferable(Transferable contents, DataFlavor flavor, long format) [ CD ]
Line_3 $$ public void translateTransferable(Transferable contents, DataFlavor flavor, long format) -->Line_4 $$ final ProtectionDomain userProtectionDomain = getUserProtectionDomain(contents)[ CD ]
Line_4 $$ final ProtectionDomain userProtectionDomain = getUserProtectionDomain(contents)-->Line_4 $$ getUserProtectionDomain(contents)[ CD ]
Line_3 $$ public void translateTransferable(Transferable contents, DataFlavor flavor, long format) -->Line_5 $$ final ArrayList<String> fileList = castToFiles(list, userProtectionDomain)[ CD ]
Line_5 $$ final ArrayList<String> fileList = castToFiles(list, userProtectionDomain)-->Line_5 $$ castToFiles(list, userProtectionDomain)[ CD ]
Line_4 $$ final ProtectionDomain userProtectionDomain = getUserProtectionDomain(contents)-->Line_5 $$ castToFiles(list, userProtectionDomain)[ FD ]
Line_3 $$ public void translateTransferable(Transferable contents, DataFlavor flavor, long format) -->Line_6 $$ final ArrayList<String> uriList = new ArrayList<String>(fileList.size())[ CD ]
Line_5 $$ final ArrayList<String> fileList = castToFiles(list, userProtectionDomain)-->Line_6 $$ fileList.size()[ FD ]
Line_8 $$ final URI uri = new File(fileObject).toURI()-->Line_8 $$ new File(fileObject).toURI()[ CD ]
Line_6 $$ final ArrayList<String> uriList = new ArrayList<String>(fileList.size())-->Line_11 $$ uriList.add(new URI(uri.getScheme(), "", uri.getPath(), uri.getFragment()).toString())[ FD ]
Line_8 $$ final URI uri = new File(fileObject).toURI()-->Line_11 $$ uri.getScheme()[ FD ]
Line_8 $$ final URI uri = new File(fileObject).toURI()-->Line_11 $$ uri.getPath()[ FD ]
Line_8 $$ final URI uri = new File(fileObject).toURI()-->Line_11 $$ uri.getFragment()[ FD ]
