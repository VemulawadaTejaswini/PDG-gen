Line_0 $$ Entry-->Line_2 $$ //145
public class func [ CD ]
Line_2 $$ //145
public class func -->Line_3 $$ public void testBadUrl() [ CD ]
Line_3 $$ public void testBadUrl() -->Line_4 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()[ CD ]
Line_4 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()-->Line_4 $$ new File("nonexistent.web.xml").toURI().toURL()[ CD ]
Line_3 $$ public void testBadUrl() -->Line_5 $$ builder.expectWarn("Unable to process '" + url.toExternalForm() + "' for servlet validation", IOException.class)[ CD ]
Line_4 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()-->Line_5 $$ url.toExternalForm()[ FD ]
Line_3 $$ public void testBadUrl() -->Line_7 $$ UnitTestTreeLogger logger = builder.createLogger()[ CD ]
Line_7 $$ UnitTestTreeLogger logger = builder.createLogger()-->Line_7 $$ builder.createLogger()[ CD ]
Line_3 $$ public void testBadUrl() -->Line_8 $$ ServletValidator validator = ServletValidator.create(logger, url)[ CD ]
Line_8 $$ ServletValidator validator = ServletValidator.create(logger, url)-->Line_8 $$ ServletValidator.create(logger, url)[ CD ]
Line_7 $$ UnitTestTreeLogger logger = builder.createLogger()-->Line_8 $$ ServletValidator.create(logger, url)[ FD ]
Line_4 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()-->Line_8 $$ ServletValidator.create(logger, url)[ FD ]
Line_3 $$ public void testBadUrl() -->Line_9 $$ assertNull(validator)[ CD ]
Line_8 $$ ServletValidator validator = ServletValidator.create(logger, url)-->Line_9 $$ assertNull(validator)[ FD ]
Line_3 $$ public void testBadUrl() -->Line_10 $$ logger.assertCorrectLogEntries()[ CD ]
Line_7 $$ UnitTestTreeLogger logger = builder.createLogger()-->Line_10 $$ logger.assertCorrectLogEntries()[ FD ]
