Line_0 $$ Entry-->Line_2 $$ //12
public class func [ CD ]
Line_2 $$ //12
public class func -->Line_3 $$ public void createClassLoader(ClassLoader parent) [ CD ]
Line_3 $$ public void createClassLoader(ClassLoader parent) -->Line_4 $$ getLog().debug("Using classpath: " + classpathElements)[ CD ]
Line_3 $$ public void createClassLoader(ClassLoader parent) -->Line_5 $$ int size = classpathElements.size()[ CD ]
Line_5 $$ int size = classpathElements.size()-->Line_5 $$ classpathElements.size()[ CD ]
Line_3 $$ public void createClassLoader(ClassLoader parent) -->Line_6 $$ for (int i = 0; i < size; i++) [ CD ]
Line_3 $$ public void createClassLoader(ClassLoader parent) -->Line_3 $$ public void createClassLoader(ClassLoader parent) [ CD ]
Line_5 $$ int size = classpathElements.size()-->Line_6 $$ for (int i = 0; i < size; i++) [ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_6 $$ int i = 0[ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_6 $$ i++[ CD ]
Line_6 $$ int i = 0-->Line_6 $$ i++[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_7 $$ String name = (String) classpathElements.get(i)[ CD ]
Line_6 $$ int i = 0-->Line_7 $$ classpathElements.get(i)[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_8 $$ File file = new File(name)[ CD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_9 $$ urls[i] = file.toURI().toURL()[ CD ]
Line_9 $$ urls[i] = file.toURI().toURL()-->Line_9 $$ file.toURI().toURL()[ CD ]
Line_8 $$ File file = new File(name)-->Line_9 $$ file.toURI()[ FD ]
Line_6 $$ for (int i = 0; i < size; i++) -->Line_10 $$ getLog().debug("URL: " + urls[i])[ CD ]
Line_3 $$ public void createClassLoader(ClassLoader parent) -->Line_12 $$ URLClassLoader loader = new URLClassLoader(urls, parent)[ CD ]
Line_6 $$ int i = 0-->Line_6 $$ for (int i = 0; i < size; i++) [ FD ]
Line_6 $$ int i = 0-->Line_6 $$ for (int i = 0; i < size; i++) [ FD ]
Line_6 $$ int i = 0-->Line_6 $$ i++[ FD ]
Line_6 $$ int i = 0-->Line_7 $$ classpathElements.get(i)[ FD ]
Line_8 $$ File file = new File(name)-->Line_9 $$ file.toURI()[ FD ]
