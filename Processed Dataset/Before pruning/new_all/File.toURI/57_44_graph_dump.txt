Line_0 $$ Entry-->Line_2 $$ //56
public class func [ CD ]
Line_2 $$ //56
public class func -->Line_3 $$ public void testDuplicateColumnNames() [ CD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_4 $$ File file = TestData.file(TestCaseSupport.class, "bad/state.shp")[ CD ]
Line_4 $$ File file = TestData.file(TestCaseSupport.class, "bad/state.shp")-->Line_4 $$ TestData.file(TestCaseSupport.class, "bad/state.shp")[ CD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_5 $$ ShapefileDataStore dataStore = new ShapefileDataStore(file.toURI().toURL())[ CD ]
Line_4 $$ File file = TestData.file(TestCaseSupport.class, "bad/state.shp")-->Line_5 $$ file.toURI()[ FD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_6 $$ SimpleFeatureSource states = dataStore.getFeatureSource()[ CD ]
Line_6 $$ SimpleFeatureSource states = dataStore.getFeatureSource()-->Line_6 $$ dataStore.getFeatureSource()[ CD ]
Line_5 $$ ShapefileDataStore dataStore = new ShapefileDataStore(file.toURI().toURL())-->Line_6 $$ dataStore.getFeatureSource()[ FD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_7 $$ SimpleFeatureType schema = states.getSchema()[ CD ]
Line_7 $$ SimpleFeatureType schema = states.getSchema()-->Line_7 $$ states.getSchema()[ CD ]
Line_6 $$ SimpleFeatureSource states = dataStore.getFeatureSource()-->Line_7 $$ states.getSchema()[ FD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_8 $$ assertEquals(6, schema.getAttributeCount())[ CD ]
Line_7 $$ SimpleFeatureType schema = states.getSchema()-->Line_8 $$ schema.getAttributeCount()[ FD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_9 $$ assertTrue(states.getCount(Query.ALL) > 0)[ CD ]
Line_6 $$ SimpleFeatureSource states = dataStore.getFeatureSource()-->Line_9 $$ states.getCount(Query.ALL)[ FD ]
Line_3 $$ public void testDuplicateColumnNames() -->Line_10 $$ dataStore.dispose()[ CD ]
Line_5 $$ ShapefileDataStore dataStore = new ShapefileDataStore(file.toURI().toURL())-->Line_10 $$ dataStore.dispose()[ FD ]
