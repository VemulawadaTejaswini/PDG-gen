Line_0 $$ Entry-->Line_2 $$ //14
public class func [ CD ]
Line_2 $$ //14
public class func -->Line_3 $$ public void downloadSocket(String[] prop_names, String[] prop_values, int length, ExternalSeedHTTPDownloaderListener listener, boolean con_fail_is_perm_fail) [ CD ]
Line_3 $$ public void downloadSocket(String[] prop_names, String[] prop_values, int length, ExternalSeedHTTPDownloaderListener listener, boolean con_fail_is_perm_fail) -->Line_4 $$ socket.connect(new InetSocketAddress(url.getHost(), url.getPort() == -1 ? url.getDefaultPort() : url.getPort()), time_remaining)[ CD ]
Line_3 $$ public void downloadSocket(String[] prop_names, String[] prop_values, int length, ExternalSeedHTTPDownloaderListener listener, boolean con_fail_is_perm_fail) -->Line_5 $$ listener.getPermittedTime()[ CD ]
Line_3 $$ public void downloadSocket(String[] prop_names, String[] prop_values, int length, ExternalSeedHTTPDownloaderListener listener, boolean con_fail_is_perm_fail) -->Line_6 $$ if (time_remaining < 0) [ CD ]
Line_6 $$ if (time_remaining < 0) -->Line_10 $$ if (time_remaining > 0) [ CD ]
Line_10 $$ if (time_remaining > 0) -->Line_12 $$ socket.setSoTimeout(time_remaining)[ CD ]
Line_3 $$ public void downloadSocket(String[] prop_names, String[] prop_values, int length, ExternalSeedHTTPDownloaderListener listener, boolean con_fail_is_perm_fail) -->Line_14 $$ OutputStream os = socket.getOutputStream()[ CD ]
Line_14 $$ OutputStream os = socket.getOutputStream()-->Line_14 $$ socket.getOutputStream()[ CD ]
