Line_0 $$ Entry-->Line_2 $$ //4
public class func [ CD ]
Line_2 $$ //4
public class func -->Line_3 $$ public void newClient(Connection connection) [ CD ]
Line_3 $$ public void newClient(Connection connection) -->Line_4 $$ if (connection.isProxy()) [ CD ]
Line_4 $$ if (connection.isProxy()) -->Line_4 $$ connection.isProxy()[ CD ]
Line_4 $$ if (connection.isProxy()) -->Line_5 $$ Proxy proxy = new Proxy(Type.SOCKS, new InetSocketAddress(connection.getProxyHost(), connection.getProxyPort()))[ CD ]
Line_3 $$ public void newClient(Connection connection) -->Line_10 $$ socket.setTcpNoDelay(true)[ CD ]
Line_3 $$ public void newClient(Connection connection) -->Line_11 $$ socket.setSoTimeout(timeout)[ CD ]
Line_3 $$ public void newClient(Connection connection) -->Line_12 $$ socket.connect(new InetSocketAddress(host, port), timeout)[ CD ]
Line_3 $$ public void newClient(Connection connection) -->Line_13 $$ TSocket trans = new TSocket(socket)[ CD ]
Line_3 $$ public void newClient(Connection connection) -->Line_15 $$ return new WeightedClient(proto, getIdentifer(socket));[ CD ]
