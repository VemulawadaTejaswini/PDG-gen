Line_0 $$ Entry-->Line_2 $$ //9
public class func [ CD ]
Line_2 $$ //9
public class func -->Line_3 $$ public void getResource(String name, BeanContextChild bcc) [ CD ]
Line_3 $$ public void getResource(String name, BeanContextChild bcc) -->Line_4 $$ if (!contains(bcc))
    throw new IllegalArgumentException("argument not a child");[ CD ]
Line_4 $$ if (!contains(bcc))
    throw new IllegalArgumentException("argument not a child");-->Line_4 $$ !contains(bcc)[ CD ]
Line_4 $$ !contains(bcc)-->Line_4 $$ contains(bcc)[ CD ]
Line_3 $$ public void getResource(String name, BeanContextChild bcc) -->Line_6 $$ ClassLoader loader = bcc.getClass().getClassLoader()[ CD ]
Line_6 $$ ClassLoader loader = bcc.getClass().getClassLoader()-->Line_6 $$ bcc.getClass().getClassLoader()[ CD ]
Line_3 $$ public void getResource(String name, BeanContextChild bcc) -->Line_7 $$ return (loader == null ? ClassLoader.getSystemResource(name) : loader.getResource(name));[ CD ]
Line_6 $$ ClassLoader loader = bcc.getClass().getClassLoader()-->Line_8 $$ loader.getResource(name)[ FD ]
