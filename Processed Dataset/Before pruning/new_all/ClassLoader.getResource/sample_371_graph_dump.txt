Line_0 $$ Entry-->Line_2 $$ //0
public class func [ CD ]
Line_2 $$ //0
public class func -->Line_3 $$ public void toFile(String name) [ CD ]
Line_3 $$ public void toFile(String name) -->Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_4 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ public void toFile(String name) -->Line_5 $$ return new File(cl.getResource(name).toURI());[ CD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_5 $$ cl.getResource(name)[ FD ]
Line_0 $$ Entry-->Line_9 $$ //1
public class func [ CD ]
Line_9 $$ //1
public class func -->Line_10 $$ public void initialize() [ CD ]
Line_10 $$ public void initialize() -->Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_11 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_10 $$ public void initialize() -->Line_12 $$ URL dataUrl = classLoader.getResource("org/richfaces/renderkit/countries.xml")[ CD ]
Line_12 $$ URL dataUrl = classLoader.getResource("org/richfaces/renderkit/countries.xml")-->Line_12 $$ classLoader.getResource("org/richfaces/renderkit/countries.xml")[ CD ]
Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_12 $$ classLoader.getResource("org/richfaces/renderkit/countries.xml")[ FD ]
Line_10 $$ public void initialize() -->Line_13 $$ Countries cntr = (Countries) unmarshaller.unmarshal(dataUrl)[ CD ]
Line_12 $$ URL dataUrl = classLoader.getResource("org/richfaces/renderkit/countries.xml")-->Line_13 $$ unmarshaller.unmarshal(dataUrl)[ FD ]
Line_10 $$ public void initialize() -->Line_14 $$ cntr.getCountries()[ CD ]
Line_13 $$ Countries cntr = (Countries) unmarshaller.unmarshal(dataUrl)-->Line_14 $$ cntr.getCountries()[ FD ]
Line_0 $$ Entry-->Line_18 $$ //2
public class func [ CD ]
Line_18 $$ //2
public class func -->Line_19 $$ public void readDataset(String name) [ CD ]
Line_19 $$ public void readDataset(String name) -->Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_20 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_19 $$ public void readDataset(String name) -->Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))[ CD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_22 $$ cl.getResource(name)[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_22 $$ cl.getResource(name)[ FD ]
Line_19 $$ public void readDataset(String name) -->Line_23 $$ return in.readDataset(-1, -1);[ CD ]
Line_23 $$ return in.readDataset(-1, -1);-->Line_23 $$ in.readDataset(-1, -1)[ CD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_23 $$ in.readDataset(-1, -1)[ FD ]
Line_19 $$ public void readDataset(String name) -->Line_24 $$ in.close()[ CD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_24 $$ in.close()[ FD ]
Line_0 $$ Entry-->Line_28 $$ //3
public class func [ CD ]
Line_28 $$ //3
public class func -->Line_29 $$ public void addClasspathResources() [ CD ]
Line_29 $$ public void addClasspathResources() -->Line_30 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_30 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_30 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_29 $$ public void addClasspathResources() -->Line_31 $$ File testResourceFile = new File(classLoader.getResource(TEST_RESOURCE_NAME).getFile())[ CD ]
Line_30 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_31 $$ classLoader.getResource(TEST_RESOURCE_NAME)[ FD ]
Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_31 $$ classLoader.getResource(TEST_RESOURCE_NAME)[ FD ]
Line_29 $$ public void addClasspathResources() -->Line_32 $$ File testResourceFolder = testResourceFile.getParentFile()[ CD ]
Line_32 $$ File testResourceFolder = testResourceFile.getParentFile()-->Line_32 $$ testResourceFile.getParentFile()[ CD ]
Line_31 $$ File testResourceFile = new File(classLoader.getResource(TEST_RESOURCE_NAME).getFile())-->Line_32 $$ testResourceFile.getParentFile()[ FD ]
Line_29 $$ public void addClasspathResources() -->Line_33 $$ facesServer.addResourcesFromDirectory("/" + RESOURCES_FOLDER_PATH, testResourceFolder)[ CD ]
Line_32 $$ File testResourceFolder = testResourceFile.getParentFile()-->Line_33 $$ facesServer.addResourcesFromDirectory("/" + RESOURCES_FOLDER_PATH, testResourceFolder)[ FD ]
Line_0 $$ Entry-->Line_37 $$ //4
public class func [ CD ]
Line_37 $$ //4
public class func -->Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) [ CD ]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) -->Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_39 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) -->Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))[ CD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_41 $$ cl.getResource(name)[ FD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_41 $$ cl.getResource(name)[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_41 $$ cl.getResource(name)[ FD ]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) -->Line_42 $$ in.setIncludeBulkData(includeBulkData)[ CD ]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_42 $$ in.setIncludeBulkData(includeBulkData)[ FD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_42 $$ in.setIncludeBulkData(includeBulkData)[ FD ]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) -->Line_43 $$ in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI)[ CD ]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_43 $$ in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI)[ FD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_43 $$ in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI)[ FD ]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) -->Line_44 $$ return in.readDataset(-1, -1);[ CD ]
Line_44 $$ return in.readDataset(-1, -1);-->Line_44 $$ in.readDataset(-1, -1)[ CD ]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_44 $$ in.readDataset(-1, -1)[ FD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_44 $$ in.readDataset(-1, -1)[ FD ]
Line_38 $$ public void readFromResource(String name, IncludeBulkData includeBulkData) -->Line_45 $$ in.close()[ CD ]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_45 $$ in.close()[ FD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_45 $$ in.close()[ FD ]
Line_0 $$ Entry-->Line_49 $$ //5
public class func [ CD ]
Line_49 $$ //5
public class func -->Line_50 $$ public void classpathResourceExistsForLocation(String location) [ CD ]
Line_50 $$ public void classpathResourceExistsForLocation(String location) -->Line_51 $$ ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_51 $$ ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader()-->Line_51 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_50 $$ public void classpathResourceExistsForLocation(String location) -->Line_52 $$ return contextClassLoader.getResource(location) != null;[ CD ]
Line_51 $$ ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader()-->Line_52 $$ contextClassLoader.getResource(location)[ FD ]
Line_0 $$ Entry-->Line_56 $$ //6
public class func [ CD ]
Line_56 $$ //6
public class func -->Line_57 $$ public void uri(String name) [ CD ]
Line_57 $$ public void uri(String name) -->Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_58 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_57 $$ public void uri(String name) -->Line_59 $$ return cl.getResource(name).toString();[ CD ]
Line_59 $$ return cl.getResource(name).toString();-->Line_59 $$ cl.getResource(name).toString()[ CD ]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_59 $$ cl.getResource(name)[ FD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_59 $$ cl.getResource(name)[ FD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_59 $$ cl.getResource(name)[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_59 $$ cl.getResource(name)[ FD ]
Line_0 $$ Entry-->Line_63 $$ //7
public class func [ CD ]
Line_63 $$ //7
public class func -->Line_64 $$ public void testSlaves() [ CD ]
Line_64 $$ public void testSlaves() -->Line_65 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_65 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_65 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_64 $$ public void testSlaves() -->Line_67 $$ BufferedReader in = new BufferedReader(new InputStreamReader(classLoader.getResource("slaves").openStream()))[ CD ]
Line_65 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_68 $$ classLoader.getResource("slaves")[ FD ]
Line_30 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_68 $$ classLoader.getResource("slaves")[ FD ]
Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_68 $$ classLoader.getResource("slaves")[ FD ]
Line_64 $$ public void testSlaves() -->Line_69 $$ String line = in.readLine()[ CD ]
Line_69 $$ String line = in.readLine()-->Line_69 $$ in.readLine()[ CD ]
Line_67 $$ BufferedReader in = new BufferedReader(new InputStreamReader(classLoader.getResource("slaves").openStream()))-->Line_69 $$ in.readLine()[ FD ]
Line_40 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_69 $$ in.readLine()[ FD ]
Line_21 $$ DicomInputStream in = new DicomInputStream(new File(cl.getResource(name).toURI()))-->Line_69 $$ in.readLine()[ FD ]
Line_0 $$ Entry-->Line_73 $$ //8
public class func [ CD ]
Line_73 $$ //8
public class func -->Line_74 $$ public void testNonMetaInfNotAccessible() [ CD ]
Line_74 $$ public void testNonMetaInfNotAccessible() -->Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_75 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_74 $$ public void testNonMetaInfNotAccessible() -->Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")[ CD ]
Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")-->Line_76 $$ cl.getResource("example2.txt")[ CD ]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_76 $$ cl.getResource("example2.txt")[ FD ]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_76 $$ cl.getResource("example2.txt")[ FD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_76 $$ cl.getResource("example2.txt")[ FD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_76 $$ cl.getResource("example2.txt")[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_76 $$ cl.getResource("example2.txt")[ FD ]
Line_74 $$ public void testNonMetaInfNotAccessible() -->Line_77 $$ assertNull(nonManifestResource)[ CD ]
Line_76 $$ URL nonManifestResource = cl.getResource("example2.txt")-->Line_77 $$ assertNull(nonManifestResource)[ FD ]
Line_0 $$ Entry-->Line_81 $$ //9
public class func [ CD ]
Line_81 $$ //9
public class func -->Line_82 $$ public void resourceOnClasspath(final String filename) [ CD ]
Line_82 $$ public void resourceOnClasspath(final String filename) -->Line_83 $$ ClassLoader cldr = Thread.currentThread().getContextClassLoader()[ CD ]
Line_83 $$ ClassLoader cldr = Thread.currentThread().getContextClassLoader()-->Line_83 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_82 $$ public void resourceOnClasspath(final String filename) -->Line_84 $$ return cldr.getResource(filename);[ CD ]
Line_84 $$ return cldr.getResource(filename);-->Line_84 $$ cldr.getResource(filename)[ CD ]
Line_83 $$ ClassLoader cldr = Thread.currentThread().getContextClassLoader()-->Line_84 $$ cldr.getResource(filename)[ FD ]
Line_0 $$ Entry-->Line_88 $$ //10
public class func [ CD ]
Line_88 $$ //10
public class func -->Line_89 $$ public void createTimeWindow() [ CD ]
Line_89 $$ public void createTimeWindow() -->Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_90 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")[ FD ]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")[ FD ]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")[ FD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")[ FD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_91 $$ cl.getResource("META-INF/deactivated_validation.xml")[ FD ]
Line_89 $$ public void createTimeWindow() -->Line_93 $$ assertFalse(ACTIVATED_VALIDATION_XML.exists())[ CD ]
Line_89 $$ public void createTimeWindow() -->Line_94 $$ boolean renamingSucceeded = DEACTIVATED_VALIDATION_XML.renameTo(ACTIVATED_VALIDATION_XML)[ CD ]
Line_94 $$ boolean renamingSucceeded = DEACTIVATED_VALIDATION_XML.renameTo(ACTIVATED_VALIDATION_XML)-->Line_94 $$ DEACTIVATED_VALIDATION_XML.renameTo(ACTIVATED_VALIDATION_XML)[ CD ]
Line_89 $$ public void createTimeWindow() -->Line_95 $$ assertTrue(renamingSucceeded)[ CD ]
Line_94 $$ boolean renamingSucceeded = DEACTIVATED_VALIDATION_XML.renameTo(ACTIVATED_VALIDATION_XML)-->Line_95 $$ assertTrue(renamingSucceeded)[ FD ]
Line_0 $$ Entry-->Line_99 $$ //11
public class func [ CD ]
Line_99 $$ //11
public class func -->Line_100 $$ public void initialize() [ CD ]
Line_100 $$ public void initialize() -->Line_101 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_101 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_101 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_100 $$ public void initialize() -->Line_102 $$ URL dataUrl = classLoader.getResource("org/richfaces/demo/countries.xml")[ CD ]
Line_102 $$ URL dataUrl = classLoader.getResource("org/richfaces/demo/countries.xml")-->Line_102 $$ classLoader.getResource("org/richfaces/demo/countries.xml")[ CD ]
Line_101 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_102 $$ classLoader.getResource("org/richfaces/demo/countries.xml")[ FD ]
Line_65 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_102 $$ classLoader.getResource("org/richfaces/demo/countries.xml")[ FD ]
Line_30 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_102 $$ classLoader.getResource("org/richfaces/demo/countries.xml")[ FD ]
Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_102 $$ classLoader.getResource("org/richfaces/demo/countries.xml")[ FD ]
Line_100 $$ public void initialize() -->Line_103 $$ ((Countries) unmarshaller.unmarshal(dataUrl)).getCountries()[ CD ]
Line_102 $$ URL dataUrl = classLoader.getResource("org/richfaces/demo/countries.xml")-->Line_103 $$ unmarshaller.unmarshal(dataUrl)[ FD ]
Line_12 $$ URL dataUrl = classLoader.getResource("org/richfaces/renderkit/countries.xml")-->Line_103 $$ unmarshaller.unmarshal(dataUrl)[ FD ]
Line_0 $$ Entry-->Line_107 $$ //12
public class func [ CD ]
Line_107 $$ //12
public class func -->Line_108 $$ public void getResource(String name) [ CD ]
Line_108 $$ public void getResource(String name) -->Line_109 $$ ClassLoader tccl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_109 $$ ClassLoader tccl = Thread.currentThread().getContextClassLoader()-->Line_109 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_108 $$ public void getResource(String name) -->Line_110 $$ return tccl.getResource(name);[ CD ]
Line_110 $$ return tccl.getResource(name);-->Line_110 $$ tccl.getResource(name)[ CD ]
Line_109 $$ ClassLoader tccl = Thread.currentThread().getContextClassLoader()-->Line_110 $$ tccl.getResource(name)[ FD ]
Line_0 $$ Entry-->Line_114 $$ //13
public class func [ CD ]
Line_114 $$ //13
public class func -->Line_115 $$ public void getResizableIconFromResource(String resource) [ CD ]
Line_115 $$ public void getResizableIconFromResource(String resource) -->Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_116 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_115 $$ public void getResizableIconFromResource(String resource) -->Line_117 $$ ImageIO.read(cl.getResource(resource))[ CD ]
Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_117 $$ cl.getResource(resource)[ FD ]
Line_115 $$ public void getResizableIconFromResource(String resource) -->Line_118 $$ LOGGER.error("Failed to read image: \"[ CD ]
Line_0 $$ Entry-->Line_122 $$ //14
public class func [ CD ]
Line_122 $$ //14
public class func -->Line_123 $$ public void getXmlUrl(String fileName) [ CD ]
Line_123 $$ public void getXmlUrl(String fileName) -->Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_124 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_123 $$ public void getXmlUrl(String fileName) -->Line_125 $$ return loader.getResource(fileName).toExternalForm();[ CD ]
Line_125 $$ return loader.getResource(fileName).toExternalForm();-->Line_125 $$ loader.getResource(fileName).toExternalForm()[ CD ]
Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_125 $$ loader.getResource(fileName)[ FD ]
Line_0 $$ Entry-->Line_129 $$ //15
public class func [ CD ]
Line_129 $$ //15
public class func -->Line_130 $$ public void testMetaInfAccessible() [ CD ]
Line_130 $$ public void testMetaInfAccessible() -->Line_131 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_131 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_131 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_130 $$ public void testMetaInfAccessible() -->Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")[ CD ]
Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")-->Line_132 $$ cl.getResource("META-INF/example.txt")[ CD ]
Line_131 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_116 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_90 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_75 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_58 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_39 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_20 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_4 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_132 $$ cl.getResource("META-INF/example.txt")[ FD ]
Line_130 $$ public void testMetaInfAccessible() -->Line_133 $$ assertNotNull(manifestResource)[ CD ]
Line_132 $$ URL manifestResource = cl.getResource("META-INF/example.txt")-->Line_133 $$ assertNotNull(manifestResource)[ FD ]
Line_0 $$ Entry-->Line_137 $$ //16
public class func [ CD ]
Line_137 $$ //16
public class func -->Line_138 $$ public void testLoader() [ CD ]
Line_138 $$ public void testLoader() -->Line_139 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_139 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_139 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_138 $$ public void testLoader() -->Line_140 $$ URL url2 = loader.getResource(defaultConfigFileName1)[ CD ]
Line_140 $$ URL url2 = loader.getResource(defaultConfigFileName1)-->Line_140 $$ loader.getResource(defaultConfigFileName1)[ CD ]
Line_139 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_140 $$ loader.getResource(defaultConfigFileName1)[ FD ]
Line_124 $$ ClassLoader loader = Thread.currentThread().getContextClassLoader()-->Line_140 $$ loader.getResource(defaultConfigFileName1)[ FD ]
Line_0 $$ Entry-->Line_144 $$ //17
public class func [ CD ]
Line_144 $$ //17
public class func -->Line_145 $$ public void getURL(final String name) [ CD ]
Line_145 $$ public void getURL(final String name) -->Line_146 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_146 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_146 $$ Thread.currentThread().getContextClassLoader()[ CD ]
Line_145 $$ public void getURL(final String name) -->Line_147 $$ return classLoader.getResource(name);[ CD ]
Line_147 $$ return classLoader.getResource(name);-->Line_147 $$ classLoader.getResource(name)[ CD ]
Line_146 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_147 $$ classLoader.getResource(name)[ FD ]
Line_101 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_147 $$ classLoader.getResource(name)[ FD ]
Line_65 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_147 $$ classLoader.getResource(name)[ FD ]
Line_30 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_147 $$ classLoader.getResource(name)[ FD ]
Line_11 $$ ClassLoader classLoader = Thread.currentThread().getContextClassLoader()-->Line_147 $$ classLoader.getResource(name)[ FD ]
