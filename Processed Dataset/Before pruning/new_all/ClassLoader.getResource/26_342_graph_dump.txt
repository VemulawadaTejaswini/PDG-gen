Line_0 $$ Entry-->Line_2 $$ //25
public class func [ CD ]
Line_2 $$ //25
public class func -->Line_3 $$ public void findIcon(@NotNull String path, @NotNull ClassLoader classLoader) [ CD ]
Line_3 $$ public void findIcon(@NotNull String path, @NotNull ClassLoader classLoader) -->Line_4 $$ undeprecate(path)[ CD ]
Line_3 $$ public void findIcon(@NotNull String path, @NotNull ClassLoader classLoader) -->Line_5 $$ if (isReflectivePath(path))
    return getReflectiveIcon(path, classLoader);[ CD ]
Line_5 $$ if (isReflectivePath(path))
    return getReflectiveIcon(path, classLoader);-->Line_5 $$ isReflectivePath(path)[ CD ]
Line_5 $$ if (isReflectivePath(path))
    return getReflectiveIcon(path, classLoader);-->Line_5 $$ return getReflectiveIcon(path, classLoader);[ CD ]
Line_5 $$ return getReflectiveIcon(path, classLoader);-->Line_5 $$ getReflectiveIcon(path, classLoader)[ CD ]
Line_3 $$ public void findIcon(@NotNull String path, @NotNull ClassLoader classLoader) -->Line_6 $$ if (!StringUtil.startsWithChar(path, '/'))
    return null;[ CD ]
Line_6 $$ if (!StringUtil.startsWithChar(path, '/'))
    return null;-->Line_6 $$ !StringUtil.startsWithChar(path, '/')[ CD ]
Line_6 $$ !StringUtil.startsWithChar(path, '/')-->Line_6 $$ StringUtil.startsWithChar(path, '/')[ CD ]
Line_6 $$ if (!StringUtil.startsWithChar(path, '/'))
    return null;-->Line_6 $$ return null;[ CD ]
Line_3 $$ public void findIcon(@NotNull String path, @NotNull ClassLoader classLoader) -->Line_7 $$ final URL url = classLoader.getResource(path.substring(1))[ CD ]
Line_7 $$ final URL url = classLoader.getResource(path.substring(1))-->Line_7 $$ classLoader.getResource(path.substring(1))[ CD ]
Line_3 $$ public void findIcon(@NotNull String path, @NotNull ClassLoader classLoader) -->Line_8 $$ return findIcon(url);[ CD ]
Line_8 $$ return findIcon(url);-->Line_8 $$ findIcon(url)[ CD ]
Line_7 $$ final URL url = classLoader.getResource(path.substring(1))-->Line_8 $$ findIcon(url)[ FD ]
