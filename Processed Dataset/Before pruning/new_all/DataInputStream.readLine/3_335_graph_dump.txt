Line_0 $$ Entry-->Line_2 $$ //2
public class func [ CD ]
Line_2 $$ //2
public class func -->Line_3 $$ public void readPGM(InputStream is) [ CD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_4 $$ DataInputStream dis = new DataInputStream(is)[ CD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_5 $$ String p5 = dis.readLine()[ CD ]
Line_5 $$ String p5 = dis.readLine()-->Line_5 $$ dis.readLine()[ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_5 $$ dis.readLine()[ FD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_6 $$ if (!p5.equals("P5")) [ CD ]
Line_6 $$ if (!p5.equals("P5")) -->Line_6 $$ !p5.equals("P5")[ CD ]
Line_6 $$ !p5.equals("P5")-->Line_6 $$ p5.equals("P5")[ CD ]
Line_5 $$ String p5 = dis.readLine()-->Line_6 $$ p5.equals("P5")[ FD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_9 $$ String depth = dis.readLine()[ CD ]
Line_9 $$ String depth = dis.readLine()-->Line_9 $$ dis.readLine()[ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_9 $$ dis.readLine()[ FD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_10 $$ String[] tmp = dim.split(" ")[ CD ]
Line_10 $$ String[] tmp = dim.split(" ")-->Line_10 $$ dim.split(" ")[ CD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_11 $$ int height = Integer.parseInt(tmp[1])[ CD ]
Line_11 $$ int height = Integer.parseInt(tmp[1])-->Line_11 $$ Integer.parseInt(tmp[1])[ CD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_12 $$ int read = dis.read(buf, 0, width * height)[ CD ]
Line_12 $$ int read = dis.read(buf, 0, width * height)-->Line_12 $$ dis.read(buf, 0, width * height)[ CD ]
Line_4 $$ DataInputStream dis = new DataInputStream(is)-->Line_12 $$ dis.read(buf, 0, width * height)[ FD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_13 $$ if (read != width * height) [ CD ]
Line_12 $$ int read = dis.read(buf, 0, width * height)-->Line_13 $$ if (read != width * height) [ FD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_16 $$ for (int i = 0; i < width * height; i++) [ CD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_3 $$ public void readPGM(InputStream is) [ CD ]
Line_16 $$ for (int i = 0; i < width * height; i++) -->Line_16 $$ int i = 0[ CD ]
Line_16 $$ for (int i = 0; i < width * height; i++) -->Line_16 $$ i++[ CD ]
Line_16 $$ int i = 0-->Line_16 $$ i++[ FD ]
Line_16 $$ for (int i = 0; i < width * height; i++) -->Line_17 $$ y[i] = buf[i] & 0xff[ CD ]
Line_3 $$ public void readPGM(InputStream is) -->Line_19 $$ return new Picture(width, height, new int[][] [ CD ]
Line_16 $$ int i = 0-->Line_16 $$ for (int i = 0; i < width * height; i++) [ FD ]
Line_16 $$ int i = 0-->Line_16 $$ for (int i = 0; i < width * height; i++) [ FD ]
Line_16 $$ int i = 0-->Line_16 $$ i++[ FD ]
