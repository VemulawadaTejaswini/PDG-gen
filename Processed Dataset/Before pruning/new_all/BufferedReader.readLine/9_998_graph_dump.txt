Line_0 $$ Entry-->Line_2 $$ //8
public class func [ CD ]
Line_2 $$ //8
public class func -->Line_3 $$ public void read(File file) [ CD ]
Line_3 $$ public void read(File file) -->Line_4 $$ if (!file.exists())
    return ret;[ CD ]
Line_4 $$ if (!file.exists())
    return ret;-->Line_4 $$ !file.exists()[ CD ]
Line_4 $$ !file.exists()-->Line_4 $$ file.exists()[ CD ]
Line_4 $$ if (!file.exists())
    return ret;-->Line_4 $$ return ret;[ CD ]
Line_3 $$ public void read(File file) -->Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), Helper.utf8))[ CD ]
Line_3 $$ public void read(File file) -->Line_6 $$ String line[ CD ]
Line_3 $$ public void read(File file) -->Line_6 $$ while ((line = br.readLine()) != null) ret.add(line);[ CD ]
Line_3 $$ public void read(File file) -->Line_3 $$ public void read(File file) [ CD ]
Line_6 $$ line = br.readLine()-->Line_6 $$ line = br.readLine()[ FD ]
Line_6 $$ String line-->Line_6 $$ line = br.readLine()[ FD ]
Line_6 $$ line = br.readLine()-->Line_6 $$ br.readLine()[ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), Helper.utf8))-->Line_6 $$ br.readLine()[ FD ]
Line_6 $$ while ((line = br.readLine()) != null) ret.add(line);-->Line_6 $$ ret.add(line)[ CD ]
Line_6 $$ line = br.readLine()-->Line_6 $$ ret.add(line)[ FD ]
Line_6 $$ String line-->Line_6 $$ ret.add(line)[ FD ]
Line_3 $$ public void read(File file) -->Line_7 $$ br.close()[ CD ]
Line_5 $$ BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file), Helper.utf8))-->Line_7 $$ br.close()[ FD ]
Line_6 $$ line = br.readLine()-->Line_6 $$ ret.add(line)[ FD ]
