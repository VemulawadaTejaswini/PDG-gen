Line_0 $$ Entry-->Line_2 $$ //38
public class func [ CD ]
Line_2 $$ //38
public class func -->Line_3 $$ public void createJVMView(BufferedReader reader) [ CD ]
Line_3 $$ public void createJVMView(BufferedReader reader) -->Line_4 $$ String name = StringUtil.unescape(reader.readLine())[ CD ]
Line_4 $$ String name = StringUtil.unescape(reader.readLine())-->Line_4 $$ StringUtil.unescape(reader.readLine())[ CD ]
Line_3 $$ public void createJVMView(BufferedReader reader) -->Line_5 $$ reader.readLine()[ CD ]
Line_3 $$ public void createJVMView(BufferedReader reader) -->Line_6 $$ JVMView newView = new JVMView(name, null)[ CD ]
Line_3 $$ public void createJVMView(BufferedReader reader) -->Line_7 $$ ReturnObject rObject = gateway.getReturnObject(newView)[ CD ]
Line_7 $$ ReturnObject rObject = gateway.getReturnObject(newView)-->Line_7 $$ gateway.getReturnObject(newView)[ CD ]
Line_6 $$ JVMView newView = new JVMView(name, null)-->Line_7 $$ gateway.getReturnObject(newView)[ FD ]
Line_3 $$ public void createJVMView(BufferedReader reader) -->Line_8 $$ newView.setId(rObject.getName())[ CD ]
Line_6 $$ JVMView newView = new JVMView(name, null)-->Line_8 $$ newView.setId(rObject.getName())[ FD ]
Line_7 $$ ReturnObject rObject = gateway.getReturnObject(newView)-->Line_8 $$ rObject.getName()[ FD ]
Line_3 $$ public void createJVMView(BufferedReader reader) -->Line_9 $$ return Protocol.getOutputCommand(rObject);[ CD ]
Line_9 $$ return Protocol.getOutputCommand(rObject);-->Line_9 $$ Protocol.getOutputCommand(rObject)[ CD ]
Line_7 $$ ReturnObject rObject = gateway.getReturnObject(newView)-->Line_9 $$ Protocol.getOutputCommand(rObject)[ FD ]
