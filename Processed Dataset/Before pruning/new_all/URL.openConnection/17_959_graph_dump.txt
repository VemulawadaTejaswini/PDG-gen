Line_0 $$ Entry-->Line_2 $$ //16
public class func [ CD ]
Line_2 $$ //16
public class func -->Line_3 $$ public void testServerReturnsDocumentOlderThanCache() [ CD ]
Line_3 $$ public void testServerReturnsDocumentOlderThanCache() -->Line_4 $$ server.enqueue(new MockResponse().setBody("B").addHeader("Last-Modified: " + formatDate(-4, TimeUnit.HOURS)))[ CD ]
Line_3 $$ public void testServerReturnsDocumentOlderThanCache() -->Line_6 $$ server.play()[ CD ]
Line_3 $$ public void testServerReturnsDocumentOlderThanCache() -->Line_7 $$ URL url = server.getUrl("/")[ CD ]
Line_7 $$ URL url = server.getUrl("/")-->Line_7 $$ server.getUrl("/")[ CD ]
Line_3 $$ public void testServerReturnsDocumentOlderThanCache() -->Line_8 $$ assertEquals("A", readAscii(url.openConnection()))[ CD ]
Line_7 $$ URL url = server.getUrl("/")-->Line_8 $$ url.openConnection()[ FD ]
Line_3 $$ public void testServerReturnsDocumentOlderThanCache() -->Line_9 $$ assertEquals("A", readAscii(url.openConnection()))[ CD ]
Line_7 $$ URL url = server.getUrl("/")-->Line_9 $$ url.openConnection()[ FD ]
