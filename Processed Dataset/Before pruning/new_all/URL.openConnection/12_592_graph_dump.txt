Line_0 $$ Entry-->Line_2 $$ //11
public class func [ CD ]
Line_2 $$ //11
public class func -->Line_3 $$ public void getData(String query) [ CD ]
Line_3 $$ public void getData(String query) -->Line_4 $$ if (URIMETHOD.matcher(query).find())
    url = new URL(query);
else
    url = new URL(baseUrl + query);[ CD ]
Line_4 $$ if (URIMETHOD.matcher(query).find())
    url = new URL(query);
else
    url = new URL(baseUrl + query);-->Line_4 $$ URIMETHOD.matcher(query).find()[ CD ]
Line_3 $$ public void getData(String query) -->Line_6 $$ LOG.debug("Accessing URL: " + url.toString())[ CD ]
Line_3 $$ public void getData(String query) -->Line_7 $$ URLConnection conn = url.openConnection()[ CD ]
Line_7 $$ URLConnection conn = url.openConnection()-->Line_7 $$ url.openConnection()[ CD ]
Line_3 $$ public void getData(String query) -->Line_8 $$ conn.setConnectTimeout(connectionTimeout)[ CD ]
Line_7 $$ URLConnection conn = url.openConnection()-->Line_8 $$ conn.setConnectTimeout(connectionTimeout)[ FD ]
Line_3 $$ public void getData(String query) -->Line_9 $$ conn.setReadTimeout(readTimeout)[ CD ]
Line_7 $$ URLConnection conn = url.openConnection()-->Line_9 $$ conn.setReadTimeout(readTimeout)[ FD ]
Line_3 $$ public void getData(String query) -->Line_10 $$ return conn.getInputStream();[ CD ]
Line_10 $$ return conn.getInputStream();-->Line_10 $$ conn.getInputStream()[ CD ]
Line_7 $$ URLConnection conn = url.openConnection()-->Line_10 $$ conn.getInputStream()[ FD ]
