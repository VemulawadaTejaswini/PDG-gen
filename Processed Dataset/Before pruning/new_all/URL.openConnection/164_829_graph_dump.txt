Line_0 $$ Entry-->Line_2 $$ //163
public class func [ CD ]
Line_2 $$ //163
public class func -->Line_3 $$ public void loadInBackground() [ CD ]
Line_3 $$ public void loadInBackground() -->Line_4 $$ final URL url = new URL(mUrl)[ CD ]
Line_3 $$ public void loadInBackground() -->Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ final URL url = new URL(mUrl)-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void loadInBackground() -->Line_6 $$ connection.setDoInput(true)[ CD ]
Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_6 $$ connection.setDoInput(true)[ FD ]
Line_3 $$ public void loadInBackground() -->Line_7 $$ connection.connect()[ CD ]
Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_7 $$ connection.connect()[ FD ]
Line_3 $$ public void loadInBackground() -->Line_8 $$ final InputStream input = connection.getInputStream()[ CD ]
Line_8 $$ final InputStream input = connection.getInputStream()-->Line_8 $$ connection.getInputStream()[ CD ]
Line_5 $$ final HttpURLConnection connection = (HttpURLConnection) url.openConnection()-->Line_8 $$ connection.getInputStream()[ FD ]
Line_3 $$ public void loadInBackground() -->Line_9 $$ final Bitmap myBitmap = BitmapFactory.decodeStream(input)[ CD ]
Line_9 $$ final Bitmap myBitmap = BitmapFactory.decodeStream(input)-->Line_9 $$ BitmapFactory.decodeStream(input)[ CD ]
Line_8 $$ final InputStream input = connection.getInputStream()-->Line_9 $$ BitmapFactory.decodeStream(input)[ FD ]
