Line_0 $$ Entry-->Line_2 $$ //164
public class func [ CD ]
Line_2 $$ //164
public class func -->Line_3 $$ public void testResponseLength() [ CD ]
Line_3 $$ public void testResponseLength() -->Line_4 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")[ CD ]
Line_3 $$ public void testResponseLength() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_4 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testResponseLength() -->Line_6 $$ conn.addRequestProperty("X-ResponseLength", "10")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.addRequestProperty("X-ResponseLength", "10")[ FD ]
Line_3 $$ public void testResponseLength() -->Line_7 $$ conn.connect()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.connect()[ FD ]
Line_3 $$ public void testResponseLength() -->Line_8 $$ final InputStream inputStream = conn.getInputStream()[ CD ]
Line_8 $$ final InputStream inputStream = conn.getInputStream()-->Line_8 $$ conn.getInputStream()[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void testResponseLength() -->Line_9 $$ assertEquals(10, IOUtils.toByteArray(inputStream).length)[ CD ]
Line_8 $$ final InputStream inputStream = conn.getInputStream()-->Line_9 $$ IOUtils.toByteArray(inputStream)[ FD ]
Line_3 $$ public void testResponseLength() -->Line_10 $$ inputStream.close()[ CD ]
Line_8 $$ final InputStream inputStream = conn.getInputStream()-->Line_10 $$ inputStream.close()[ FD ]
