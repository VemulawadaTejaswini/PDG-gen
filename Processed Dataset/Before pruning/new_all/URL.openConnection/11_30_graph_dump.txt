Line_0 $$ Entry-->Line_2 $$ //10
public class func [ CD ]
Line_2 $$ //10
public class func -->Line_3 $$ public void getInputStream(ClassLoader loader, String resourceName, boolean reload) [ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, String resourceName, boolean reload) -->Line_4 $$ URL url = loader.getResource(resourceName)[ CD ]
Line_4 $$ URL url = loader.getResource(resourceName)-->Line_4 $$ loader.getResource(resourceName)[ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, String resourceName, boolean reload) -->Line_5 $$ if (url == null) [ CD ]
Line_4 $$ URL url = loader.getResource(resourceName)-->Line_5 $$ if (url == null) [ FD ]
Line_5 $$ if (url == null) -->Line_6 $$ return null;[ CD ]
Line_3 $$ public void getInputStream(ClassLoader loader, String resourceName, boolean reload) -->Line_8 $$ URLConnection connection = url.openConnection()[ CD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_8 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = loader.getResource(resourceName)-->Line_8 $$ url.openConnection()[ FD ]
Line_3 $$ public void getInputStream(ClassLoader loader, String resourceName, boolean reload) -->Line_9 $$ connection.setUseCaches(!reload)[ CD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_9 $$ connection.setUseCaches(!reload)[ FD ]
Line_3 $$ public void getInputStream(ClassLoader loader, String resourceName, boolean reload) -->Line_10 $$ return connection.getInputStream();[ CD ]
Line_10 $$ return connection.getInputStream();-->Line_10 $$ connection.getInputStream()[ CD ]
Line_8 $$ URLConnection connection = url.openConnection()-->Line_10 $$ connection.getInputStream()[ FD ]
