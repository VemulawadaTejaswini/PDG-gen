Line_0 $$ Entry-->Line_2 $$ //77
public class func [ CD ]
Line_2 $$ //77
public class func -->Line_3 $$ public void testServerHello() [ CD ]
Line_3 $$ public void testServerHello() -->Line_4 $$ URL url = new URL("http://localhost:5000/hello")[ CD ]
Line_3 $$ public void testServerHello() -->Line_5 $$ URLConnection conn = url.openConnection()[ CD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_5 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = new URL("http://localhost:5000/hello")-->Line_5 $$ url.openConnection()[ FD ]
Line_3 $$ public void testServerHello() -->Line_6 $$ InputStream is = conn.getInputStream()[ CD ]
Line_6 $$ InputStream is = conn.getInputStream()-->Line_6 $$ conn.getInputStream()[ CD ]
Line_5 $$ URLConnection conn = url.openConnection()-->Line_6 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void testServerHello() -->Line_7 $$ String contents = StreamUtility.readToEnd(is)[ CD ]
Line_7 $$ String contents = StreamUtility.readToEnd(is)-->Line_7 $$ StreamUtility.readToEnd(is)[ CD ]
Line_6 $$ InputStream is = conn.getInputStream()-->Line_7 $$ StreamUtility.readToEnd(is)[ FD ]
Line_3 $$ public void testServerHello() -->Line_8 $$ is.close()[ CD ]
Line_6 $$ InputStream is = conn.getInputStream()-->Line_8 $$ is.close()[ FD ]
Line_3 $$ public void testServerHello() -->Line_9 $$ assertEquals(contents, "hello")[ CD ]
Line_7 $$ String contents = StreamUtility.readToEnd(is)-->Line_9 $$ assertEquals(contents, "hello")[ FD ]
