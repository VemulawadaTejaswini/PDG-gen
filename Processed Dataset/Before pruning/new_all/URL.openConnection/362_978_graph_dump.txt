Line_0 $$ Entry-->Line_2 $$ //361
public class func [ CD ]
Line_2 $$ //361
public class func -->Line_3 $$ public void call() [ CD ]
Line_3 $$ public void call() -->Line_4 $$ params.put("user", getTestUser())[ CD ]
Line_3 $$ public void call() -->Line_5 $$ URL url = createURL("", params)[ CD ]
Line_5 $$ URL url = createURL("", params)-->Line_5 $$ createURL("", params)[ CD ]
Line_3 $$ public void call() -->Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_5 $$ URL url = createURL("", params)-->Line_6 $$ url.openConnection()[ FD ]
Line_3 $$ public void call() -->Line_7 $$ conn.setRequestMethod("POST")[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.setRequestMethod("POST")[ FD ]
Line_3 $$ public void call() -->Line_8 $$ conn.setRequestProperty("content-type", RestConstants.XML_CONTENT_TYPE)[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ conn.setRequestProperty("content-type", RestConstants.XML_CONTENT_TYPE)[ FD ]
Line_3 $$ public void call() -->Line_9 $$ conn.setDoOutput(true)[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.setDoOutput(true)[ FD ]
Line_3 $$ public void call() -->Line_10 $$ assertEquals(HttpServletResponse.SC_OK, conn.getResponseCode())[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void call() -->Line_11 $$ JSONObject obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_6 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getInputStream()[ FD ]
Line_3 $$ public void call() -->Line_12 $$ assertEquals("Valid workflow-app", obj.get(JsonTags.VALIDATE))[ CD ]
Line_11 $$ JSONObject obj = (JSONObject) JSONValue.parse(new InputStreamReader(conn.getInputStream()))-->Line_12 $$ obj.get(JsonTags.VALIDATE)[ FD ]
