Line_0 $$ Entry-->Line_2 $$ //177
public class func [ CD ]
Line_2 $$ //177
public class func -->Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) [ CD ]
Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) -->Line_4 $$ URL url = new URL(fetchUrl)[ CD ]
Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) -->Line_5 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection(proxy)[ CD ]
Line_4 $$ URL url = new URL(fetchUrl)-->Line_5 $$ url.openConnection(proxy)[ FD ]
Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) -->Line_6 $$ uc.connect()[ CD ]
Line_5 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection(proxy)-->Line_6 $$ uc.connect()[ FD ]
Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) -->Line_7 $$ InputStream is = uc.getInputStream()[ CD ]
Line_7 $$ InputStream is = uc.getInputStream()-->Line_7 $$ uc.getInputStream()[ CD ]
Line_5 $$ HttpURLConnection uc = (HttpURLConnection) url.openConnection(proxy)-->Line_7 $$ uc.getInputStream()[ FD ]
Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) -->Line_8 $$ String html = IoUtils.readAll(is)[ CD ]
Line_8 $$ String html = IoUtils.readAll(is)-->Line_8 $$ IoUtils.readAll(is)[ CD ]
Line_7 $$ InputStream is = uc.getInputStream()-->Line_8 $$ IoUtils.readAll(is)[ FD ]
Line_3 $$ public void testProxy(InetSocketAddress proxySocketAddress, String fetchUrl) -->Line_9 $$ is.close()[ CD ]
Line_7 $$ InputStream is = uc.getInputStream()-->Line_9 $$ is.close()[ FD ]
