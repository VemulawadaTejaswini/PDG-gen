Line_0 $$ Entry-->Line_2 $$ //4
public class func [ CD ]
Line_2 $$ //4
public class func -->Line_3 $$ public void testRequestCacheControlNoCache() [ CD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_4 $$ server.enqueue(new MockResponse().addHeader("Last-Modified: " + formatDate(-120, TimeUnit.SECONDS)).addHeader("Date: " + formatDate(0, TimeUnit.SECONDS)).addHeader("Cache-Control: max-age=60").setBody("A"))[ CD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_9 $$ server.enqueue(new MockResponse().setBody("B"))[ CD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_10 $$ server.play()[ CD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_11 $$ URL url = server.getUrl("/")[ CD ]
Line_11 $$ URL url = server.getUrl("/")-->Line_11 $$ server.getUrl("/")[ CD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_12 $$ assertEquals("A", readAscii(url.openConnection()))[ CD ]
Line_11 $$ URL url = server.getUrl("/")-->Line_12 $$ url.openConnection()[ FD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_13 $$ URLConnection connection = url.openConnection()[ CD ]
Line_13 $$ URLConnection connection = url.openConnection()-->Line_13 $$ url.openConnection()[ CD ]
Line_11 $$ URL url = server.getUrl("/")-->Line_13 $$ url.openConnection()[ FD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_14 $$ connection.setRequestProperty("Cache-Control", "no-cache")[ CD ]
Line_13 $$ URLConnection connection = url.openConnection()-->Line_14 $$ connection.setRequestProperty("Cache-Control", "no-cache")[ FD ]
Line_3 $$ public void testRequestCacheControlNoCache() -->Line_15 $$ assertEquals("B", readAscii(connection))[ CD ]
Line_13 $$ URLConnection connection = url.openConnection()-->Line_15 $$ readAscii(connection)[ FD ]
