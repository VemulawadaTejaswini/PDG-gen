Line_0 $$ Entry-->Line_2 $$ //392
public class func [ CD ]
Line_2 $$ //392
public class func -->Line_3 $$ public void testGetResponseCodeNoResponseBody() [ CD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_4 $$ server.enqueue(new MockResponse().addHeader("abc: def"))[ CD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_6 $$ server.play()[ CD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_7 $$ URL url = server.getUrl("/")[ CD ]
Line_7 $$ URL url = server.getUrl("/")-->Line_7 $$ server.getUrl("/")[ CD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_8 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_7 $$ URL url = server.getUrl("/")-->Line_8 $$ url.openConnection()[ FD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_9 $$ conn.setDoInput(false)[ CD ]
Line_8 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ conn.setDoInput(false)[ FD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_10 $$ assertEquals("def", conn.getHeaderField("abc"))[ CD ]
Line_8 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ conn.getHeaderField("abc")[ FD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_11 $$ assertEquals(200, conn.getResponseCode())[ CD ]
Line_8 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ conn.getResponseCode()[ FD ]
Line_3 $$ public void testGetResponseCodeNoResponseBody() -->Line_12 $$ conn.getInputStream()[ CD ]
Line_8 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_12 $$ conn.getInputStream()[ FD ]
