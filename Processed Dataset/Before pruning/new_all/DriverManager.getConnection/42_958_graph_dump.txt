Line_0 $$ Entry-->Line_2 $$ //41
public class func [ CD ]
Line_2 $$ //41
public class func -->Line_3 $$ public void testRoundingUpTime() [ CD ]
Line_3 $$ public void testRoundingUpTime() -->Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ public void testRoundingUpTime() -->Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")[ CD ]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_5 $$ conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_5 $$ conn.createStatement()[ FD ]
Line_3 $$ public void testRoundingUpTime() -->Line_6 $$ assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(t, 'day', 1), ROUND(t, 'hour', 1), ROUND(t, 'minute', 1), ROUND(t, 'second', 1) FROM t1")-->Line_6 $$ rs.next()[ FD ]
