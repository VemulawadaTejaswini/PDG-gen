Line_0 $$ Entry-->Line_2 $$ //21
public class func [ CD ]
Line_2 $$ //21
public class func -->Line_3 $$ public void testOrderByOptimizedOut() [ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_5 $$ conn.createStatement().execute("CREATE TABLE foo (k VARCHAR NOT NULL PRIMARY KEY, v VARCHAR) IMMUTABLE_ROWS=true")[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_5 $$ conn.createStatement()[ FD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)[ CD ]
Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)-->Line_6 $$ conn.createStatement().unwrap(PhoenixStatement.class)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_6 $$ conn.createStatement()[ FD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT * FROM foo ORDER BY k")[ CD ]
Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT * FROM foo ORDER BY k")-->Line_7 $$ stmt.optimizeQuery("SELECT * FROM foo ORDER BY k")[ CD ]
Line_6 $$ PhoenixStatement stmt = conn.createStatement().unwrap(PhoenixStatement.class)-->Line_7 $$ stmt.optimizeQuery("SELECT * FROM foo ORDER BY k")[ FD ]
Line_3 $$ public void testOrderByOptimizedOut() -->Line_8 $$ assertEquals(OrderBy.FWD_ROW_KEY_ORDER_BY, plan.getOrderBy())[ CD ]
Line_7 $$ QueryPlan plan = stmt.optimizeQuery("SELECT * FROM foo ORDER BY k")-->Line_8 $$ plan.getOrderBy()[ FD ]
