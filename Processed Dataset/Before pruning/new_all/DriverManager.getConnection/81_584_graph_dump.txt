Line_0 $$ Entry-->Line_2 $$ //80
public class func [ CD ]
Line_2 $$ //80
public class func -->Line_3 $$ public void testConnectionUrl() [ CD ]
Line_3 $$ public void testConnectionUrl() -->Line_4 $$ Connection c = DriverManager.getConnection(url, this.username, this.password)[ CD ]
Line_4 $$ Connection c = DriverManager.getConnection(url, this.username, this.password)-->Line_4 $$ DriverManager.getConnection(url, this.username, this.password)[ CD ]
Line_3 $$ public void testConnectionUrl() -->Line_5 $$ ResultSet rs = c.createStatement().executeQuery("select user()")[ CD ]
Line_5 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_5 $$ c.createStatement().executeQuery("select user()")[ CD ]
Line_4 $$ Connection c = DriverManager.getConnection(url, this.username, this.password)-->Line_5 $$ c.createStatement()[ FD ]
Line_3 $$ public void testConnectionUrl() -->Line_6 $$ rs.next()[ CD ]
Line_5 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_6 $$ rs.next()[ FD ]
Line_3 $$ public void testConnectionUrl() -->Line_7 $$ String userFromDb = rs.getString(1).split("@")[0][ CD ]
Line_5 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_7 $$ rs.getString(1)[ FD ]
Line_3 $$ public void testConnectionUrl() -->Line_8 $$ assertEquals(this.username, userFromDb)[ CD ]
Line_7 $$ String userFromDb = rs.getString(1).split("@")[0]-->Line_8 $$ assertEquals(this.username, userFromDb)[ FD ]
Line_3 $$ public void testConnectionUrl() -->Line_9 $$ rs.close()[ CD ]
Line_5 $$ ResultSet rs = c.createStatement().executeQuery("select user()")-->Line_9 $$ rs.close()[ FD ]
